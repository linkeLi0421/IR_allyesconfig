; ModuleID = '/llk/IR_all_yes/block/blk-mq.c_pt.bc'
source_filename = "../block/blk-mq.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+blk_freeze_queue_start\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_freeze_queue_start\09\09\09\09"
module asm "\09.long\09__crc_blk_freeze_queue_start\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_freeze_queue_start:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_freeze_queue_start\22\09\09\09\09\09"
module asm "__kstrtabns_blk_freeze_queue_start:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_freeze_queue_wait\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_freeze_queue_wait\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_freeze_queue_wait\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_freeze_queue_wait:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_freeze_queue_wait\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_freeze_queue_wait:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_freeze_queue_wait_timeout\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_freeze_queue_wait_timeout\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_freeze_queue_wait_timeout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_freeze_queue_wait_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_freeze_queue_wait_timeout\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_freeze_queue_wait_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_freeze_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_freeze_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_freeze_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_freeze_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_freeze_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_freeze_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_unfreeze_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_unfreeze_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_unfreeze_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_unfreeze_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_unfreeze_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_unfreeze_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_quiesce_queue_nowait\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_quiesce_queue_nowait\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_quiesce_queue_nowait\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_quiesce_queue_nowait:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_quiesce_queue_nowait\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_quiesce_queue_nowait:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_wait_quiesce_done\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_wait_quiesce_done\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_wait_quiesce_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_wait_quiesce_done:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_wait_quiesce_done\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_wait_quiesce_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_quiesce_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_quiesce_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_quiesce_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_quiesce_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_quiesce_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_quiesce_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_unquiesce_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_unquiesce_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_unquiesce_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_unquiesce_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_unquiesce_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_unquiesce_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_rq_init\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_rq_init\09\09\09\09"
module asm "\09.long\09__crc_blk_rq_init\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_rq_init:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_rq_init\22\09\09\09\09\09"
module asm "__kstrtabns_blk_rq_init:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_alloc_request\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_alloc_request\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_alloc_request\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_alloc_request:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_alloc_request\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_alloc_request:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_alloc_request_hctx\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_alloc_request_hctx\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_alloc_request_hctx\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_alloc_request_hctx:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_alloc_request_hctx\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_alloc_request_hctx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_free_request\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_free_request\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_free_request\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_free_request:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_free_request\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_free_request:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_dump_rq_flags\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_dump_rq_flags\09\09\09\09"
module asm "\09.long\09__crc_blk_dump_rq_flags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_dump_rq_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_dump_rq_flags\22\09\09\09\09\09"
module asm "__kstrtabns_blk_dump_rq_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_update_request\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_update_request\09\09\09\09"
module asm "\09.long\09__crc_blk_update_request\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_update_request:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_update_request\22\09\09\09\09\09"
module asm "__kstrtabns_blk_update_request:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__blk_mq_end_request\22, \22a\22\09"
module asm "\09.weak\09__crc___blk_mq_end_request\09\09\09\09"
module asm "\09.long\09__crc___blk_mq_end_request\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___blk_mq_end_request:\09\09\09\09\09"
module asm "\09.asciz \09\22__blk_mq_end_request\22\09\09\09\09\09"
module asm "__kstrtabns___blk_mq_end_request:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_end_request\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_end_request\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_end_request\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_end_request:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_end_request\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_end_request:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_end_request_batch\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_end_request_batch\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_end_request_batch\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_end_request_batch:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_end_request_batch\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_end_request_batch:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_complete_request_remote\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_complete_request_remote\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_complete_request_remote\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_complete_request_remote:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_complete_request_remote\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_complete_request_remote:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_complete_request\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_complete_request\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_complete_request\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_complete_request:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_complete_request\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_complete_request:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_start_request\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_start_request\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_start_request\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_start_request:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_start_request\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_start_request:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_execute_rq_nowait\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_execute_rq_nowait\09\09\09\09"
module asm "\09.long\09__crc_blk_execute_rq_nowait\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_execute_rq_nowait:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_execute_rq_nowait\22\09\09\09\09\09"
module asm "__kstrtabns_blk_execute_rq_nowait:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_execute_rq\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_execute_rq\09\09\09\09"
module asm "\09.long\09__crc_blk_execute_rq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_execute_rq:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_execute_rq\22\09\09\09\09\09"
module asm "__kstrtabns_blk_execute_rq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_requeue_request\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_requeue_request\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_requeue_request\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_requeue_request:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_requeue_request\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_requeue_request:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_kick_requeue_list\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_kick_requeue_list\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_kick_requeue_list\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_kick_requeue_list:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_kick_requeue_list\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_kick_requeue_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_delay_kick_requeue_list\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_delay_kick_requeue_list\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_delay_kick_requeue_list\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_delay_kick_requeue_list:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_delay_kick_requeue_list\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_delay_kick_requeue_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_queue_inflight\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_queue_inflight\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_queue_inflight\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_queue_inflight:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_queue_inflight\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_queue_inflight:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_flush_busy_ctxs\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_flush_busy_ctxs\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_flush_busy_ctxs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_flush_busy_ctxs:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_flush_busy_ctxs\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_flush_busy_ctxs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_delay_run_hw_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_delay_run_hw_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_delay_run_hw_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_delay_run_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_delay_run_hw_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_delay_run_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_run_hw_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_run_hw_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_run_hw_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_run_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_run_hw_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_run_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_run_hw_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_run_hw_queues\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_run_hw_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_run_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_run_hw_queues\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_run_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_delay_run_hw_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_delay_run_hw_queues\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_delay_run_hw_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_delay_run_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_delay_run_hw_queues\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_delay_run_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_queue_stopped\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_queue_stopped\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_queue_stopped\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_queue_stopped:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_queue_stopped\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_queue_stopped:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_stop_hw_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_stop_hw_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_stop_hw_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_stop_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_stop_hw_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_stop_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_stop_hw_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_stop_hw_queues\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_stop_hw_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_stop_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_stop_hw_queues\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_stop_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_start_hw_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_start_hw_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_start_hw_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_start_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_start_hw_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_start_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_start_hw_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_start_hw_queues\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_start_hw_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_start_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_start_hw_queues\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_start_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_start_stopped_hw_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_start_stopped_hw_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_start_stopped_hw_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_start_stopped_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_start_stopped_hw_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_start_stopped_hw_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_start_stopped_hw_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_start_stopped_hw_queues\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_start_stopped_hw_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_start_stopped_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_start_stopped_hw_queues\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_start_stopped_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_insert_cloned_request\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_insert_cloned_request\09\09\09\09"
module asm "\09.long\09__crc_blk_insert_cloned_request\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_insert_cloned_request:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_insert_cloned_request\22\09\09\09\09\09"
module asm "__kstrtabns_blk_insert_cloned_request:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_rq_unprep_clone\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_rq_unprep_clone\09\09\09\09"
module asm "\09.long\09__crc_blk_rq_unprep_clone\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_rq_unprep_clone:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_rq_unprep_clone\22\09\09\09\09\09"
module asm "__kstrtabns_blk_rq_unprep_clone:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_rq_prep_clone\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_rq_prep_clone\09\09\09\09"
module asm "\09.long\09__crc_blk_rq_prep_clone\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_rq_prep_clone:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_rq_prep_clone\22\09\09\09\09\09"
module asm "__kstrtabns_blk_rq_prep_clone:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_steal_bios\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_steal_bios\09\09\09\09"
module asm "\09.long\09__crc_blk_steal_bios\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_steal_bios:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_steal_bios\22\09\09\09\09\09"
module asm "__kstrtabns_blk_steal_bios:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_init_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_init_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_init_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_init_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_init_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_init_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__blk_mq_alloc_disk\22, \22a\22\09"
module asm "\09.weak\09__crc___blk_mq_alloc_disk\09\09\09\09"
module asm "\09.long\09__crc___blk_mq_alloc_disk\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___blk_mq_alloc_disk:\09\09\09\09\09"
module asm "\09.asciz \09\22__blk_mq_alloc_disk\22\09\09\09\09\09"
module asm "__kstrtabns___blk_mq_alloc_disk:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_init_allocated_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_init_allocated_queue\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_init_allocated_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_init_allocated_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_init_allocated_queue\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_init_allocated_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_alloc_tag_set\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_alloc_tag_set\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_alloc_tag_set\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_alloc_tag_set:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_alloc_tag_set\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_alloc_tag_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_alloc_sq_tag_set\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_alloc_sq_tag_set\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_alloc_sq_tag_set\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_alloc_sq_tag_set:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_alloc_sq_tag_set\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_alloc_sq_tag_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_free_tag_set\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_free_tag_set\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_free_tag_set\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_free_tag_set:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_free_tag_set\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_free_tag_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+blk_mq_update_nr_hw_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_update_nr_hw_queues\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_update_nr_hw_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_update_nr_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_update_nr_hw_queues\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_update_nr_hw_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+blk_mq_rq_cpu\22, \22a\22\09"
module asm "\09.weak\09__crc_blk_mq_rq_cpu\09\09\09\09"
module asm "\09.long\09__crc_blk_mq_rq_cpu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blk_mq_rq_cpu:\09\09\09\09\09"
module asm "\09.asciz \09\22blk_mq_rq_cpu\22\09\09\09\09\09"
module asm "__kstrtabns_blk_mq_rq_cpu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.bio_set = type { ptr, i32, ptr, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, i32, %struct.spinlock, %struct.bio_list, %struct.work_struct, ptr, %struct.hlist_node }
%struct.mempool_s = type { %struct.spinlock, i32, i32, ptr, ptr, ptr, ptr, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.list_head = type { ptr, ptr }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.bio_list = type { ptr, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.hlist_node = type { ptr, ptr }
%struct.lock_class_key = type { %union.anon.1 }
%union.anon.1 = type { %struct.hlist_node }
%struct.llist_head = type { ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.82 }
%union.anon.82 = type { i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.static_key_false = type { %struct.static_key }
%struct.mq_inflight = type { ptr, [2 x i32] }
%struct.block_device = type { i64, i64, ptr, i32, i8, i32, i32, ptr, ptr, ptr, %struct.device, ptr, i32, i8, ptr, i8, %struct.spinlock, ptr, ptr, i32, %struct.mutex, ptr, ptr, i8 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.request = type { ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i64, ptr, ptr, %union.anon.76, ptr, i64, i64, i64, i16, i16, i16, i16, ptr, ptr, i16, i16, i32, %struct.atomic_t, i32, %union.anon.83, %union.anon.84, %union.anon.85, %union.anon.88, ptr, ptr }
%union.anon.76 = type { %struct.list_head }
%union.anon.83 = type { %struct.hlist_node }
%union.anon.84 = type { %struct.rb_node }
%union.anon.85 = type { %struct.anon.87 }
%struct.anon.87 = type { i32, %struct.list_head, ptr }
%union.anon.88 = type { i64, [8 x i8] }
%struct.request_queue = type { ptr, ptr, %struct.percpu_ref, ptr, ptr, ptr, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, i32, %struct.spinlock, ptr, %struct.kobject, ptr, %struct.blk_integrity, ptr, i32, i32, i32, i32, ptr, i32, i32, ptr, ptr, %struct.timer_list, %struct.work_struct, %struct.atomic_t, ptr, %struct.list_head, [1 x i32], ptr, %struct.list_head, %struct.queue_limits, i32, i32, ptr, ptr, i32, i32, i32, %struct.mutex, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, ptr, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, i32, ptr, %struct.list_head, %struct.bio_set, ptr, ptr, ptr, i8, [5 x i64], ptr, [0 x %struct.srcu_struct] }
%struct.percpu_ref = type { i32, ptr }
%struct.blk_integrity = type { ptr, i8, i8, i8, i8 }
%struct.queue_limits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.callback_head = type { ptr, ptr }
%struct.srcu_struct = type { [3 x %struct.srcu_node], [3 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.elevator_type = type { ptr, %struct.elevator_mq_ops, i32, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.anon.3 = type { %struct.spinlock, %struct.list_head, i32, [72 x i8] }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.percpu_ref_data = type { %struct.atomic_t, ptr, ptr, i8, %struct.callback_head, ptr }
%struct.blk_mq_hw_ctx = type { %struct.anon.3, %struct.delayed_work, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, %struct.sbitmap, ptr, i32, i16, i16, ptr, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, ptr, ptr, i32, i32, i32, i32, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, ptr, ptr, %struct.list_head, [76 x i8] }
%struct.sbitmap = type { i32, i32, i32, i8, ptr, ptr }
%struct.blk_mq_alloc_data = type { ptr, i32, i32, i32, i32, i32, ptr, ptr, ptr }
%struct.blk_mq_ctx = type { %struct.anon, i32, [3 x i16], [3 x ptr], ptr, ptr, %struct.kobject, [88 x i8] }
%struct.anon = type { %struct.spinlock, [3 x %struct.list_head], [60 x i8] }
%struct.blk_mq_tags = type { i32, i32, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, ptr, ptr, %struct.list_head, %struct.spinlock }
%struct.sbitmap_queue = type { %struct.sbitmap, i32, %struct.atomic_t, ptr, %struct.atomic_t, i32 }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.xarray, ptr, ptr, ptr, ptr, i32, i32, %struct.mutex, i32, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, ptr, %struct.kobject, ptr, i32, ptr, %struct.lockdep_map, i64 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.blk_plug = type { ptr, ptr, i16, i16, i8, i8, i8, %struct.list_head }
%struct.bio = type { ptr, ptr, i32, i16, i16, i16, i8, %struct.atomic_t, %struct.bvec_iter, i32, ptr, ptr, ptr, %struct.bio_issue, i64, ptr, %union.anon.42, i16, i16, %struct.atomic_t, ptr, ptr, [0 x %struct.bio_vec] }
%struct.bvec_iter = type <{ i64, i32, i32, i32 }>
%struct.bio_issue = type { i64 }
%union.anon.42 = type { ptr }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.blk_integrity_profile = type { ptr, ptr, ptr, ptr, ptr }
%struct.disk_stats = type { [4 x i64], [4 x i32], [4 x i32], [4 x i32], i32, [2 x %struct.local_t] }
%struct.local_t = type { %struct.atomic_t }
%struct.blk_stat_callback = type { %struct.list_head, %struct.timer_list, ptr, ptr, i32, ptr, ptr, ptr, %struct.callback_head }
%struct.io_comp_batch = type { ptr, i8, ptr }
%struct.blk_mq_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.sbitmap_word = type { i32, [124 x i8], i32, [124 x i8], i32, [124 x i8] }
%struct.blk_mq_queue_data = type { ptr, i8 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head, [72 x i8] }
%struct.anon.2 = type { [16 x i8], %struct.lockdep_map }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.59, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.22 }
%struct.llist_node = type { ptr }
%union.anon.22 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.24 }
%union.anon.24 = type { %struct.anon.25 }
%struct.anon.25 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.59 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { ptr, i32, i32 }
%struct.anon.5 = type { %struct.list_head, ptr, i32, i32 }
%struct.page = type { i32, %union.anon.4, %union.anon.75, %struct.atomic_t, i32 }
%union.anon.4 = type { %struct.anon.5 }
%union.anon.75 = type { %struct.atomic_t }
%struct.blk_mq_ctxs = type { %struct.kobject, ptr }
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.blk_flush_queue = type { i8, i8, i32, [2 x %struct.list_head], %struct.list_head, ptr, %struct.spinlock }
%struct.blk_mq_qe_pair = type { %struct.list_head, ptr, ptr }
%struct.hrtimer_sleeper = type { %struct.hrtimer, ptr }
%struct.rq_iter_data = type { ptr, i8 }

@__kstrtab_blk_freeze_queue_start = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_freeze_queue_start = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_freeze_queue_start = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_freeze_queue_start to i32), ptr @__kstrtab_blk_freeze_queue_start, ptr @__kstrtabns_blk_freeze_queue_start }, section "___ksymtab_gpl+blk_freeze_queue_start", align 4
@.str = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"block/blk-mq.c\00", [17 x i8] zeroinitializer }, align 32
@__kstrtab_blk_mq_freeze_queue_wait = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_freeze_queue_wait = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_freeze_queue_wait = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_freeze_queue_wait to i32), ptr @__kstrtab_blk_mq_freeze_queue_wait, ptr @__kstrtabns_blk_mq_freeze_queue_wait }, section "___ksymtab_gpl+blk_mq_freeze_queue_wait", align 4
@__kstrtab_blk_mq_freeze_queue_wait_timeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_freeze_queue_wait_timeout = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_freeze_queue_wait_timeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_freeze_queue_wait_timeout to i32), ptr @__kstrtab_blk_mq_freeze_queue_wait_timeout, ptr @__kstrtabns_blk_mq_freeze_queue_wait_timeout }, section "___ksymtab_gpl+blk_mq_freeze_queue_wait_timeout", align 4
@__kstrtab_blk_mq_freeze_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_freeze_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_freeze_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_freeze_queue to i32), ptr @__kstrtab_blk_mq_freeze_queue, ptr @__kstrtabns_blk_mq_freeze_queue }, section "___ksymtab_gpl+blk_mq_freeze_queue", align 4
@__blk_mq_unfreeze_queue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_blk_mq_unfreeze_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_unfreeze_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_unfreeze_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_unfreeze_queue to i32), ptr @__kstrtab_blk_mq_unfreeze_queue, ptr @__kstrtabns_blk_mq_unfreeze_queue }, section "___ksymtab_gpl+blk_mq_unfreeze_queue", align 4
@__kstrtab_blk_mq_quiesce_queue_nowait = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_quiesce_queue_nowait = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_quiesce_queue_nowait = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_quiesce_queue_nowait to i32), ptr @__kstrtab_blk_mq_quiesce_queue_nowait, ptr @__kstrtabns_blk_mq_quiesce_queue_nowait }, section "___ksymtab_gpl+blk_mq_quiesce_queue_nowait", align 4
@__kstrtab_blk_mq_wait_quiesce_done = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_wait_quiesce_done = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_wait_quiesce_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_wait_quiesce_done to i32), ptr @__kstrtab_blk_mq_wait_quiesce_done, ptr @__kstrtabns_blk_mq_wait_quiesce_done }, section "___ksymtab_gpl+blk_mq_wait_quiesce_done", align 4
@__kstrtab_blk_mq_quiesce_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_quiesce_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_quiesce_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_quiesce_queue to i32), ptr @__kstrtab_blk_mq_quiesce_queue, ptr @__kstrtabns_blk_mq_quiesce_queue }, section "___ksymtab_gpl+blk_mq_quiesce_queue", align 4
@blk_mq_unquiesce_queue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_blk_mq_unquiesce_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_unquiesce_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_unquiesce_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_unquiesce_queue to i32), ptr @__kstrtab_blk_mq_unquiesce_queue, ptr @__kstrtabns_blk_mq_unquiesce_queue }, section "___ksymtab_gpl+blk_mq_unquiesce_queue", align 4
@__kstrtab_blk_rq_init = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_rq_init = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_rq_init = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_rq_init to i32), ptr @__kstrtab_blk_rq_init, ptr @__kstrtabns_blk_rq_init }, section "___ksymtab+blk_rq_init", align 4
@__kstrtab_blk_mq_alloc_request = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_alloc_request = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_alloc_request = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_alloc_request to i32), ptr @__kstrtab_blk_mq_alloc_request, ptr @__kstrtabns_blk_mq_alloc_request }, section "___ksymtab+blk_mq_alloc_request", align 4
@blk_mq_alloc_request_hctx.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@__kstrtab_blk_mq_alloc_request_hctx = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_alloc_request_hctx = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_alloc_request_hctx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_alloc_request_hctx to i32), ptr @__kstrtab_blk_mq_alloc_request_hctx, ptr @__kstrtabns_blk_mq_alloc_request_hctx }, section "___ksymtab_gpl+blk_mq_alloc_request_hctx", align 4
@laptop_mode = external dso_local local_unnamed_addr global i32, align 4
@__kstrtab_blk_mq_free_request = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_free_request = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_free_request = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_free_request to i32), ptr @__kstrtab_blk_mq_free_request, ptr @__kstrtabns_blk_mq_free_request }, section "___ksymtab_gpl+blk_mq_free_request", align 4
@blk_dump_rq_flags._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str, i32 653, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\016%s: dev %s: flags=%llx\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"blk_dump_rq_flags\00", [46 x i8] zeroinitializer }, align 32
@blk_dump_rq_flags._entry_ptr = internal global ptr @blk_dump_rq_flags._entry, section ".printk_index", align 4
@.str.3 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"?\00", [30 x i8] zeroinitializer }, align 32
@blk_dump_rq_flags._entry.4 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.2, ptr @.str, i32 657, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016  sector %llu, nr/cnr %u/%u\0A\00", [33 x i8] zeroinitializer }, align 32
@blk_dump_rq_flags._entry_ptr.6 = internal global ptr @blk_dump_rq_flags._entry.4, section ".printk_index", align 4
@blk_dump_rq_flags._entry.7 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.8, ptr @.str.2, ptr @.str, i32 659, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\016  bio %p, biotail %p, len %u\0A\00", [32 x i8] zeroinitializer }, align 32
@blk_dump_rq_flags._entry_ptr.9 = internal global ptr @blk_dump_rq_flags._entry.7, section ".printk_index", align 4
@__kstrtab_blk_dump_rq_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_dump_rq_flags = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_dump_rq_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_dump_rq_flags to i32), ptr @__kstrtab_blk_dump_rq_flags, ptr @__kstrtabns_blk_dump_rq_flags }, section "___ksymtab+blk_dump_rq_flags", align 4
@.str.10 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"request botched\00", [16 x i8] zeroinitializer }, align 32
@__kstrtab_blk_update_request = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_update_request = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_update_request = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_update_request to i32), ptr @__kstrtab_blk_update_request, ptr @__kstrtabns_blk_update_request }, section "___ksymtab_gpl+blk_update_request", align 4
@__kstrtab___blk_mq_end_request = external dso_local constant [0 x i8], align 1
@__kstrtabns___blk_mq_end_request = external dso_local constant [0 x i8], align 1
@__ksymtab___blk_mq_end_request = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__blk_mq_end_request to i32), ptr @__kstrtab___blk_mq_end_request, ptr @__kstrtabns___blk_mq_end_request }, section "___ksymtab+__blk_mq_end_request", align 4
@__kstrtab_blk_mq_end_request = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_end_request = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_end_request = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_end_request to i32), ptr @__kstrtab_blk_mq_end_request, ptr @__kstrtabns_blk_mq_end_request }, section "___ksymtab+blk_mq_end_request", align 4
@__kstrtab_blk_mq_end_request_batch = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_end_request_batch = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_end_request_batch = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_end_request_batch to i32), ptr @__kstrtab_blk_mq_end_request_batch, ptr @__kstrtabns_blk_mq_end_request_batch }, section "___ksymtab_gpl+blk_mq_end_request_batch", align 4
@__kstrtab_blk_mq_complete_request_remote = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_complete_request_remote = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_complete_request_remote = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_complete_request_remote to i32), ptr @__kstrtab_blk_mq_complete_request_remote, ptr @__kstrtabns_blk_mq_complete_request_remote }, section "___ksymtab_gpl+blk_mq_complete_request_remote", align 4
@__kstrtab_blk_mq_complete_request = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_complete_request = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_complete_request = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_complete_request to i32), ptr @__kstrtab_blk_mq_complete_request, ptr @__kstrtabns_blk_mq_complete_request }, section "___ksymtab+blk_mq_complete_request", align 4
@blk_mq_start_request.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_blk_mq_start_request = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_start_request = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_start_request = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_start_request to i32), ptr @__kstrtab_blk_mq_start_request, ptr @__kstrtabns_blk_mq_start_request }, section "___ksymtab+blk_mq_start_request", align 4
@__kstrtab_blk_execute_rq_nowait = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_execute_rq_nowait = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_execute_rq_nowait = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_execute_rq_nowait to i32), ptr @__kstrtab_blk_execute_rq_nowait, ptr @__kstrtabns_blk_execute_rq_nowait }, section "___ksymtab_gpl+blk_execute_rq_nowait", align 4
@sysctl_hung_task_timeout_secs = external dso_local local_unnamed_addr global i32, align 4
@__kstrtab_blk_execute_rq = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_execute_rq = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_execute_rq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_execute_rq to i32), ptr @__kstrtab_blk_execute_rq, ptr @__kstrtabns_blk_execute_rq }, section "___ksymtab+blk_execute_rq", align 4
@__kstrtab_blk_mq_requeue_request = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_requeue_request = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_requeue_request = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_requeue_request to i32), ptr @__kstrtab_blk_mq_requeue_request, ptr @__kstrtabns_blk_mq_requeue_request }, section "___ksymtab+blk_mq_requeue_request", align 4
@__kstrtab_blk_mq_kick_requeue_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_kick_requeue_list = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_kick_requeue_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_kick_requeue_list to i32), ptr @__kstrtab_blk_mq_kick_requeue_list, ptr @__kstrtabns_blk_mq_kick_requeue_list }, section "___ksymtab+blk_mq_kick_requeue_list", align 4
@__kstrtab_blk_mq_delay_kick_requeue_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_delay_kick_requeue_list = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_delay_kick_requeue_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_delay_kick_requeue_list to i32), ptr @__kstrtab_blk_mq_delay_kick_requeue_list, ptr @__kstrtabns_blk_mq_delay_kick_requeue_list }, section "___ksymtab+blk_mq_delay_kick_requeue_list", align 4
@__kstrtab_blk_mq_queue_inflight = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_queue_inflight = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_queue_inflight = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_queue_inflight to i32), ptr @__kstrtab_blk_mq_queue_inflight, ptr @__kstrtabns_blk_mq_queue_inflight }, section "___ksymtab_gpl+blk_mq_queue_inflight", align 4
@__kstrtab_blk_mq_flush_busy_ctxs = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_flush_busy_ctxs = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_flush_busy_ctxs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_flush_busy_ctxs to i32), ptr @__kstrtab_blk_mq_flush_busy_ctxs, ptr @__kstrtabns_blk_mq_flush_busy_ctxs }, section "___ksymtab_gpl+blk_mq_flush_busy_ctxs", align 4
@blk_mq_dispatch_rq_list.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_blk_mq_delay_run_hw_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_delay_run_hw_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_delay_run_hw_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_delay_run_hw_queue to i32), ptr @__kstrtab_blk_mq_delay_run_hw_queue, ptr @__kstrtabns_blk_mq_delay_run_hw_queue }, section "___ksymtab+blk_mq_delay_run_hw_queue", align 4
@__kstrtab_blk_mq_run_hw_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_run_hw_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_run_hw_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_run_hw_queue to i32), ptr @__kstrtab_blk_mq_run_hw_queue, ptr @__kstrtabns_blk_mq_run_hw_queue }, section "___ksymtab+blk_mq_run_hw_queue", align 4
@__kstrtab_blk_mq_run_hw_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_run_hw_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_run_hw_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_run_hw_queues to i32), ptr @__kstrtab_blk_mq_run_hw_queues, ptr @__kstrtabns_blk_mq_run_hw_queues }, section "___ksymtab+blk_mq_run_hw_queues", align 4
@__kstrtab_blk_mq_delay_run_hw_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_delay_run_hw_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_delay_run_hw_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_delay_run_hw_queues to i32), ptr @__kstrtab_blk_mq_delay_run_hw_queues, ptr @__kstrtabns_blk_mq_delay_run_hw_queues }, section "___ksymtab+blk_mq_delay_run_hw_queues", align 4
@__kstrtab_blk_mq_queue_stopped = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_queue_stopped = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_queue_stopped = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_queue_stopped to i32), ptr @__kstrtab_blk_mq_queue_stopped, ptr @__kstrtabns_blk_mq_queue_stopped }, section "___ksymtab+blk_mq_queue_stopped", align 4
@__kstrtab_blk_mq_stop_hw_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_stop_hw_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_stop_hw_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_stop_hw_queue to i32), ptr @__kstrtab_blk_mq_stop_hw_queue, ptr @__kstrtabns_blk_mq_stop_hw_queue }, section "___ksymtab+blk_mq_stop_hw_queue", align 4
@__kstrtab_blk_mq_stop_hw_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_stop_hw_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_stop_hw_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_stop_hw_queues to i32), ptr @__kstrtab_blk_mq_stop_hw_queues, ptr @__kstrtabns_blk_mq_stop_hw_queues }, section "___ksymtab+blk_mq_stop_hw_queues", align 4
@__kstrtab_blk_mq_start_hw_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_start_hw_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_start_hw_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_start_hw_queue to i32), ptr @__kstrtab_blk_mq_start_hw_queue, ptr @__kstrtabns_blk_mq_start_hw_queue }, section "___ksymtab+blk_mq_start_hw_queue", align 4
@__kstrtab_blk_mq_start_hw_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_start_hw_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_start_hw_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_start_hw_queues to i32), ptr @__kstrtab_blk_mq_start_hw_queues, ptr @__kstrtabns_blk_mq_start_hw_queues }, section "___ksymtab+blk_mq_start_hw_queues", align 4
@__kstrtab_blk_mq_start_stopped_hw_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_start_stopped_hw_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_start_stopped_hw_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_start_stopped_hw_queue to i32), ptr @__kstrtab_blk_mq_start_stopped_hw_queue, ptr @__kstrtabns_blk_mq_start_stopped_hw_queue }, section "___ksymtab_gpl+blk_mq_start_stopped_hw_queue", align 4
@__kstrtab_blk_mq_start_stopped_hw_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_start_stopped_hw_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_start_stopped_hw_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_start_stopped_hw_queues to i32), ptr @__kstrtab_blk_mq_start_stopped_hw_queues, ptr @__kstrtabns_blk_mq_start_stopped_hw_queues }, section "___ksymtab+blk_mq_start_stopped_hw_queues", align 4
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@__kstrtab_blk_insert_cloned_request = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_insert_cloned_request = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_insert_cloned_request = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_insert_cloned_request to i32), ptr @__kstrtab_blk_insert_cloned_request, ptr @__kstrtabns_blk_insert_cloned_request }, section "___ksymtab_gpl+blk_insert_cloned_request", align 4
@__kstrtab_blk_rq_unprep_clone = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_rq_unprep_clone = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_rq_unprep_clone = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_rq_unprep_clone to i32), ptr @__kstrtab_blk_rq_unprep_clone, ptr @__kstrtabns_blk_rq_unprep_clone }, section "___ksymtab_gpl+blk_rq_unprep_clone", align 4
@fs_bio_set = external dso_local global %struct.bio_set, align 4
@__kstrtab_blk_rq_prep_clone = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_rq_prep_clone = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_rq_prep_clone = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_rq_prep_clone to i32), ptr @__kstrtab_blk_rq_prep_clone, ptr @__kstrtabns_blk_rq_prep_clone }, section "___ksymtab_gpl+blk_rq_prep_clone", align 4
@__kstrtab_blk_steal_bios = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_steal_bios = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_steal_bios = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_steal_bios to i32), ptr @__kstrtab_blk_steal_bios, ptr @__kstrtabns_blk_steal_bios }, section "___ksymtab_gpl+blk_steal_bios", align 4
@blk_mq_release.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_blk_mq_init_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_init_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_init_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_init_queue to i32), ptr @__kstrtab_blk_mq_init_queue, ptr @__kstrtabns_blk_mq_init_queue }, section "___ksymtab+blk_mq_init_queue", align 4
@__kstrtab___blk_mq_alloc_disk = external dso_local constant [0 x i8], align 1
@__kstrtabns___blk_mq_alloc_disk = external dso_local constant [0 x i8], align 1
@__ksymtab___blk_mq_alloc_disk = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__blk_mq_alloc_disk to i32), ptr @__kstrtab___blk_mq_alloc_disk, ptr @__kstrtabns___blk_mq_alloc_disk }, section "___ksymtab+__blk_mq_alloc_disk", align 4
@blk_mq_init_allocated_queue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@blk_mq_init_allocated_queue.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.11 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&q->unused_hctx_lock\00", [43 x i8] zeroinitializer }, align 32
@blk_mq_init_allocated_queue.__key.12 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.13 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"(work_completion)(&q->timeout_work)\00", [60 x i8] zeroinitializer }, align 32
@blk_mq_init_allocated_queue.__key.14 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.15 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"(work_completion)(&(&q->requeue_work)->work)\00", [51 x i8] zeroinitializer }, align 32
@blk_mq_init_allocated_queue.__key.16 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.17 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"&(&q->requeue_work)->timer\00", [37 x i8] zeroinitializer }, align 32
@blk_mq_init_allocated_queue.__key.18 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.19 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&q->requeue_lock\00", [47 x i8] zeroinitializer }, align 32
@__kstrtab_blk_mq_init_allocated_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_init_allocated_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_init_allocated_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_init_allocated_queue to i32), ptr @__kstrtab_blk_mq_init_allocated_queue, ptr @__kstrtabns_blk_mq_init_allocated_queue }, section "___ksymtab+blk_mq_init_allocated_queue", align 4
@blk_mq_alloc_tag_set._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.21, ptr @.str, i32 4267, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\016blk-mq: reduced tag depth to %u\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"blk_mq_alloc_tag_set\00", [43 x i8] zeroinitializer }, align 32
@blk_mq_alloc_tag_set._entry_ptr = internal global ptr @blk_mq_alloc_tag_set._entry, section ".printk_index", align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@blk_mq_alloc_tag_set.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.22 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&set->tag_list_lock\00", [44 x i8] zeroinitializer }, align 32
@__kstrtab_blk_mq_alloc_tag_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_alloc_tag_set = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_alloc_tag_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_alloc_tag_set to i32), ptr @__kstrtab_blk_mq_alloc_tag_set, ptr @__kstrtabns_blk_mq_alloc_tag_set }, section "___ksymtab+blk_mq_alloc_tag_set", align 4
@__kstrtab_blk_mq_alloc_sq_tag_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_alloc_sq_tag_set = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_alloc_sq_tag_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_alloc_sq_tag_set to i32), ptr @__kstrtab_blk_mq_alloc_sq_tag_set, ptr @__kstrtabns_blk_mq_alloc_sq_tag_set }, section "___ksymtab_gpl+blk_mq_alloc_sq_tag_set", align 4
@__kstrtab_blk_mq_free_tag_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_free_tag_set = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_free_tag_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_free_tag_set to i32), ptr @__kstrtab_blk_mq_free_tag_set, ptr @__kstrtabns_blk_mq_free_tag_set }, section "___ksymtab+blk_mq_free_tag_set", align 4
@__kstrtab_blk_mq_update_nr_hw_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_update_nr_hw_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_update_nr_hw_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_update_nr_hw_queues to i32), ptr @__kstrtab_blk_mq_update_nr_hw_queues, ptr @__kstrtabns_blk_mq_update_nr_hw_queues }, section "___ksymtab_gpl+blk_mq_update_nr_hw_queues", align 4
@__kstrtab_blk_mq_rq_cpu = external dso_local constant [0 x i8], align 1
@__kstrtabns_blk_mq_rq_cpu = external dso_local constant [0 x i8], align 1
@__ksymtab_blk_mq_rq_cpu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blk_mq_rq_cpu to i32), ptr @__kstrtab_blk_mq_rq_cpu, ptr @__kstrtabns_blk_mq_rq_cpu }, section "___ksymtab+blk_mq_rq_cpu", align 4
@__initcall__kmod_blk_mq__366_4774_blk_mq_init4 = internal global ptr @blk_mq_init, section ".initcall4.init", align 4
@__pcpu_unique_blk_cpu_done = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@blk_cpu_done = weak dso_local global %struct.llist_head zeroinitializer, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@req_ref_put_and_test.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.23 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"block/blk.h\00", [20 x i8] zeroinitializer }, align 32
@__tracepoint_block_rq_complete = external dso_local global %struct.tracepoint, align 4
@.str.24 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/trace/events/block.h\00", [35 x i8] zeroinitializer }, align 32
@trace_block_rq_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.25 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.26 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@blk_print_req_error._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.27, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.blk_print_req_error = private unnamed_addr constant [20 x i8] c"blk_print_req_error\00", align 1
@blk_print_req_error._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.28, ptr @__func__.blk_print_req_error, ptr @.str, i32 709, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\013%s error, dev %s, sector %llu op 0x%x:(%s) flags 0x%x phys_seg %u prio class %u\0A\00", [45 x i8] zeroinitializer }, align 32
@blk_print_req_error._entry_ptr = internal global ptr @blk_print_req_error._entry, section ".printk_index", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@force_irqthreads_key = external dso_local global %struct.static_key_false, align 4
@__tracepoint_block_rq_issue = external dso_local global %struct.tracepoint, align 4
@trace_block_rq_issue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.30 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@blk_rq_is_poll.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_block_rq_requeue = external dso_local global %struct.tracepoint, align 4
@trace_block_rq_requeue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__blk_mq_run_hw_queue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.31 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.33 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@srcu_read_unlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.34 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"include/linux/srcu.h\00", [43 x i8] zeroinitializer }, align 32
@__tracepoint_block_rq_insert = external dso_local global %struct.tracepoint, align 4
@trace_block_rq_insert.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_block_unplug = external dso_local global %struct.tracepoint, align 4
@trace_block_unplug.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@max_low_pfn = external dso_local local_unnamed_addr global i32, align 4
@max_pfn = external dso_local local_unnamed_addr global i32, align 4
@percpu_ref_tryget_live_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.35 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"include/linux/percpu-refcount.h\00", [32 x i8] zeroinitializer }, align 32
@__tracepoint_block_getrq = external dso_local global %struct.tracepoint, align 4
@trace_block_getrq.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@blk_mq_bio_to_request.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_block_plug = external dso_local global %struct.tracepoint, align 4
@trace_block_plug.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@blk_cloned_rq_check_limits._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.37, ptr @.str, i32 2893, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\013%s: over max size limit. (%u > %u)\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"blk_cloned_rq_check_limits\00", [37 x i8] zeroinitializer }, align 32
@blk_cloned_rq_check_limits._entry_ptr = internal global ptr @blk_cloned_rq_check_limits._entry, section ".printk_index", align 4
@blk_cloned_rq_check_limits._entry.38 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.37, ptr @.str, i32 2904, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013%s: over max segments limit. (%hu > %hu)\0A\00", [52 x i8] zeroinitializer }, align 32
@blk_cloned_rq_check_limits._entry_ptr.40 = internal global ptr @blk_cloned_rq_check_limits._entry.38, section ".printk_index", align 4
@blk_mq_clear_rq_mapping.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@blk_mq_realloc_hw_ctxs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.42, ptr @.str.43, ptr @.str, i32 4000, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"\014Allocate new hctx on node %d fails,\09\09\09\09\09\09fallback to previous one on node %d\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"blk_mq_realloc_hw_ctxs\00", [41 x i8] zeroinitializer }, align 32
@blk_mq_realloc_hw_ctxs._entry_ptr = internal global ptr @blk_mq_realloc_hw_ctxs._entry, section ".printk_index", align 4
@blk_mq_alloc_hctx.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.44 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"(work_completion)(&(&hctx->run_work)->work)\00", [52 x i8] zeroinitializer }, align 32
@blk_mq_alloc_hctx.__key.45 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.46 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"&(&hctx->run_work)->timer\00", [38 x i8] zeroinitializer }, align 32
@blk_mq_alloc_hctx.__key.47 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.48 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&hctx->lock\00", [20 x i8] zeroinitializer }, align 32
@blk_mq_alloc_hctx.__key.49 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.50 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"&hctx->dispatch_wait_lock\00", [38 x i8] zeroinitializer }, align 32
@blk_mq_clear_flush_rq_mapping.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@blk_mq_rq_timed_out.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@blk_mq_init_cpu_queues.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.51 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&__ctx->lock\00", [19 x i8] zeroinitializer }, align 32
@elfcorehdr_addr = external dso_local local_unnamed_addr global i64, align 8
@blk_mq_alloc_set_map_and_rqs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.52, ptr @.str.53, ptr @.str, i32 4163, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013blk-mq: failed to allocate request map\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"blk_mq_alloc_set_map_and_rqs\00", [35 x i8] zeroinitializer }, align 32
@blk_mq_alloc_set_map_and_rqs._entry_ptr = internal global ptr @blk_mq_alloc_set_map_and_rqs._entry, section ".printk_index", align 4
@blk_mq_alloc_set_map_and_rqs._entry.54 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.53, ptr @.str, i32 4169, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\016blk-mq: reduced tag depth (%u -> %u)\0A\00", [56 x i8] zeroinitializer }, align 32
@blk_mq_alloc_set_map_and_rqs._entry_ptr.56 = internal global ptr @blk_mq_alloc_set_map_and_rqs._entry.54, section ".printk_index", align 4
@__blk_mq_update_nr_hw_queues._entry = internal constant %struct.pi_entry { ptr @.str.57, ptr @.str.58, ptr @.str, i32 4535, ptr null, ptr null }, align 1
@.str.57 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\014Increasing nr_hw_queues to %d fails, fallback to %d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"__blk_mq_update_nr_hw_queues\00", [35 x i8] zeroinitializer }, align 32
@__blk_mq_update_nr_hw_queues._entry_ptr = internal global ptr @__blk_mq_update_nr_hw_queues._entry, section ".printk_index", align 4
@.str.62 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"block/softirq:dead\00", [45 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"block/mq:dead\00", [18 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"block/mq:online\00", [16 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 8, i64 3, i64 5, i64 9]
@__sancov_gen_cov_switch_values.65 = internal global [5 x i64] [i64 3, i64 8, i64 3, i64 5, i64 9]
@__sancov_gen_cov_switch_values.66 = internal global [5 x i64] [i64 3, i64 8, i64 3, i64 5, i64 9]
@__sancov_gen_cov_switch_values.67 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 9, i64 13, i64 14]
@__sancov_gen_cov_switch_values.68 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 9, i64 13]
@__sancov_gen_cov_switch_values.69 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 9, i64 13]
@__sancov_gen_cov_switch_values.70 = internal global [5 x i64] [i64 3, i64 8, i64 3, i64 5, i64 9]
@__sancov_gen_cov_switch_values.71 = internal global [6 x i64] [i64 4, i64 8, i64 3, i64 5, i64 7, i64 9]
@__sancov_gen_cov_switch_values.72 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 9, i64 13]
@__sancov_gen_cov_switch_values.73 = internal global [6 x i64] [i64 4, i64 8, i64 3, i64 5, i64 7, i64 9]
@__sancov_gen_cov_switch_values.74 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.75 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 9, i64 13]
@___asan_gen_.78 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 178, i32 2 }
@___asan_gen_.90 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 651, i32 2 }
@___asan_gen_.96 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 655, i32 2 }
@___asan_gen_.102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 658, i32 2 }
@___asan_gen_.105 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 851, i32 27 }
@___asan_gen_.111 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4051, i32 2 }
@___asan_gen_.117 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4057, i32 2 }
@___asan_gen_.129 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4067, i32 2 }
@___asan_gen_.135 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4069, i32 2 }
@___asan_gen_.144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4266, i32 3 }
@___asan_gen_.150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4314, i32 2 }
@___asan_gen_.152 = private unnamed_addr constant [15 x i8] c"../block/blk.h\00", align 1
@___asan_gen_.153 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.152, i32 495, i32 2 }
@___asan_gen_.158 = private unnamed_addr constant [32 x i8] c"../include/trace/events/block.h\00", align 1
@___asan_gen_.159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.158, i32 115, i32 1 }
@___asan_gen_.161 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.162 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.161, i32 108, i32 2 }
@___asan_gen_.163 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 701, i32 2 }
@___asan_gen_.179 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.179, i32 87, i32 2 }
@___asan_gen_.186 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.188, i32 695, i32 2 }
@___asan_gen_.188 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.188, i32 723, i32 2 }
@___asan_gen_.191 = private unnamed_addr constant [24 x i8] c"../include/linux/srcu.h\00", align 1
@___asan_gen_.192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.191, i32 189, i32 2 }
@___asan_gen_.194 = private unnamed_addr constant [35 x i8] c"../include/linux/percpu-refcount.h\00", align 1
@___asan_gen_.195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.194, i32 280, i32 2 }
@___asan_gen_.204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 2892, i32 3 }
@___asan_gen_.210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 2903, i32 3 }
@___asan_gen_.219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 3998, i32 5 }
@___asan_gen_.231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 3518, i32 2 }
@___asan_gen_.237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 3519, i32 2 }
@___asan_gen_.243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 3540, i32 2 }
@___asan_gen_.244 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 3576, i32 3 }
@___asan_gen_.258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4163, i32 3 }
@___asan_gen_.259 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4168, i32 3 }
@___asan_gen_.270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4534, i32 4 }
@___asan_gen_.273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4765, i32 7 }
@___asan_gen_.276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4767, i32 45 }
@___asan_gen_.277 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.278 = private constant [18 x i8] c"../block/blk-mq.c\00", align 1
@___asan_gen_.279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.278, i32 4769, i32 50 }
@llvm.compiler.used = appending global [132 x ptr] [ptr @__blk_mq_update_nr_hw_queues._entry, ptr @__blk_mq_update_nr_hw_queues._entry_ptr, ptr @__initcall__kmod_blk_mq__366_4774_blk_mq_init4, ptr @__ksymtab___blk_mq_alloc_disk, ptr @__ksymtab___blk_mq_end_request, ptr @__ksymtab_blk_dump_rq_flags, ptr @__ksymtab_blk_execute_rq, ptr @__ksymtab_blk_execute_rq_nowait, ptr @__ksymtab_blk_freeze_queue_start, ptr @__ksymtab_blk_insert_cloned_request, ptr @__ksymtab_blk_mq_alloc_request, ptr @__ksymtab_blk_mq_alloc_request_hctx, ptr @__ksymtab_blk_mq_alloc_sq_tag_set, ptr @__ksymtab_blk_mq_alloc_tag_set, ptr @__ksymtab_blk_mq_complete_request, ptr @__ksymtab_blk_mq_complete_request_remote, ptr @__ksymtab_blk_mq_delay_kick_requeue_list, ptr @__ksymtab_blk_mq_delay_run_hw_queue, ptr @__ksymtab_blk_mq_delay_run_hw_queues, ptr @__ksymtab_blk_mq_end_request, ptr @__ksymtab_blk_mq_end_request_batch, ptr @__ksymtab_blk_mq_flush_busy_ctxs, ptr @__ksymtab_blk_mq_free_request, ptr @__ksymtab_blk_mq_free_tag_set, ptr @__ksymtab_blk_mq_freeze_queue, ptr @__ksymtab_blk_mq_freeze_queue_wait, ptr @__ksymtab_blk_mq_freeze_queue_wait_timeout, ptr @__ksymtab_blk_mq_init_allocated_queue, ptr @__ksymtab_blk_mq_init_queue, ptr @__ksymtab_blk_mq_kick_requeue_list, ptr @__ksymtab_blk_mq_queue_inflight, ptr @__ksymtab_blk_mq_queue_stopped, ptr @__ksymtab_blk_mq_quiesce_queue, ptr @__ksymtab_blk_mq_quiesce_queue_nowait, ptr @__ksymtab_blk_mq_requeue_request, ptr @__ksymtab_blk_mq_rq_cpu, ptr @__ksymtab_blk_mq_run_hw_queue, ptr @__ksymtab_blk_mq_run_hw_queues, ptr @__ksymtab_blk_mq_start_hw_queue, ptr @__ksymtab_blk_mq_start_hw_queues, ptr @__ksymtab_blk_mq_start_request, ptr @__ksymtab_blk_mq_start_stopped_hw_queue, ptr @__ksymtab_blk_mq_start_stopped_hw_queues, ptr @__ksymtab_blk_mq_stop_hw_queue, ptr @__ksymtab_blk_mq_stop_hw_queues, ptr @__ksymtab_blk_mq_unfreeze_queue, ptr @__ksymtab_blk_mq_unquiesce_queue, ptr @__ksymtab_blk_mq_update_nr_hw_queues, ptr @__ksymtab_blk_mq_wait_quiesce_done, ptr @__ksymtab_blk_rq_init, ptr @__ksymtab_blk_rq_prep_clone, ptr @__ksymtab_blk_rq_unprep_clone, ptr @__ksymtab_blk_steal_bios, ptr @__ksymtab_blk_update_request, ptr @blk_cloned_rq_check_limits._entry, ptr @blk_cloned_rq_check_limits._entry.38, ptr @blk_cloned_rq_check_limits._entry_ptr, ptr @blk_cloned_rq_check_limits._entry_ptr.40, ptr @blk_dump_rq_flags._entry, ptr @blk_dump_rq_flags._entry.4, ptr @blk_dump_rq_flags._entry.7, ptr @blk_dump_rq_flags._entry_ptr, ptr @blk_dump_rq_flags._entry_ptr.6, ptr @blk_dump_rq_flags._entry_ptr.9, ptr @blk_mq_alloc_set_map_and_rqs._entry, ptr @blk_mq_alloc_set_map_and_rqs._entry.54, ptr @blk_mq_alloc_set_map_and_rqs._entry_ptr, ptr @blk_mq_alloc_set_map_and_rqs._entry_ptr.56, ptr @blk_mq_alloc_tag_set._entry, ptr @blk_mq_alloc_tag_set._entry_ptr, ptr @blk_mq_realloc_hw_ctxs._entry, ptr @blk_mq_realloc_hw_ctxs._entry_ptr, ptr @blk_print_req_error._entry, ptr @blk_print_req_error._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.5, ptr @.str.8, ptr @.str.10, ptr @blk_mq_init_allocated_queue.__key, ptr @.str.11, ptr @blk_mq_init_allocated_queue.__key.12, ptr @.str.13, ptr @blk_mq_init_allocated_queue.__key.14, ptr @.str.15, ptr @blk_mq_init_allocated_queue.__key.16, ptr @.str.17, ptr @blk_mq_init_allocated_queue.__key.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @blk_mq_alloc_tag_set.__key, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @blk_print_req_error._rs, ptr @.str.27, ptr @.str.28, ptr @init_completion.__key, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.39, ptr @.str.42, ptr @.str.43, ptr @blk_mq_alloc_hctx.__key, ptr @.str.44, ptr @blk_mq_alloc_hctx.__key.45, ptr @.str.46, ptr @blk_mq_alloc_hctx.__key.47, ptr @.str.48, ptr @blk_mq_alloc_hctx.__key.49, ptr @.str.50, ptr @blk_mq_init_cpu_queues.__key, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.55, ptr @.str.57, ptr @.str.58, ptr @.str.62, ptr @.str.63, ptr @.str.64], section "llvm.metadata"
@0 = internal global [68 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.78 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_dump_rq_flags._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.90 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.90 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.90 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.90 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_dump_rq_flags._entry.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.96 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.96 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_dump_rq_flags._entry.7 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.105 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_init_allocated_queue.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.111 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.111 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_init_allocated_queue.__key.12 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.117 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.117 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_init_allocated_queue.__key.14 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_init_allocated_queue.__key.16 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_init_allocated_queue.__key.18 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_alloc_tag_set._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_alloc_tag_set.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.153 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_print_req_error._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_print_req_error._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_cloned_rq_check_limits._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_cloned_rq_check_limits._entry.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_realloc_hw_ctxs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_alloc_hctx.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_alloc_hctx.__key.45 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_alloc_hctx.__key.47 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_alloc_hctx.__key.49 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_init_cpu_queues.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_alloc_set_map_and_rqs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blk_mq_alloc_set_map_and_rqs._entry.54 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @blk_mq_in_flight(ptr noundef %q, ptr noundef %part) local_unnamed_addr #0 align 64 {
entry:
  %mi = alloca %struct.mq_inflight, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %mi) #20
  %0 = getelementptr inbounds %struct.mq_inflight, ptr %mi, i32 0, i32 1
  %1 = getelementptr inbounds %struct.mq_inflight, ptr %mi, i32 0, i32 1, i32 1
  %2 = ptrtoint ptr %mi to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %part, ptr %mi, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_storeN_noabort(i32 %3, i32 8)
  store i64 0, ptr %0, align 4
  call void @blk_mq_queue_tag_busy_iter(ptr noundef %q, ptr noundef nonnull @blk_mq_check_inflight, ptr noundef nonnull %mi) #20
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %0, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %1, align 4
  %add = add i32 %7, %5
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %mi) #20
  ret i32 %add
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_queue_tag_busy_iter(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @blk_mq_check_inflight(ptr noundef %rq, ptr nocapture noundef %priv, i1 noundef zeroext %reserved) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %bd_partno = getelementptr inbounds %struct.block_device, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %bd_partno to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %bd_partno, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.land.lhs.true_crit_edge, label %lor.lhs.false

entry.land.lhs.true_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

lor.lhs.false:                                    ; preds = %entry
  %part1 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 13
  %4 = ptrtoint ptr %part1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %part1, align 8
  %cmp = icmp eq ptr %5, %1
  br i1 %cmp, label %lor.lhs.false.land.lhs.true_crit_edge, label %lor.lhs.false.if.end_crit_edge

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

lor.lhs.false.land.lhs.true_crit_edge:            ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false.land.lhs.true_crit_edge, %entry.land.lhs.true_crit_edge
  %state.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 25
  %6 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp3 = icmp eq i32 %7, 1
  br i1 %cmp3, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %cmd_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 3
  %8 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cmd_flags, align 4
  %and.i = and i32 %9, 1
  %arrayidx = getelementptr %struct.mq_inflight, ptr %priv, i32 0, i32 1, i32 %and.i
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %inc = add i32 %11, 1
  store i32 %inc, ptr %arrayidx, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge
  ret i1 true
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_in_flight_rw(ptr noundef %q, ptr noundef %part, ptr nocapture noundef writeonly %inflight) local_unnamed_addr #0 align 64 {
entry:
  %mi = alloca %struct.mq_inflight, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %mi) #20
  %0 = getelementptr inbounds %struct.mq_inflight, ptr %mi, i32 0, i32 1
  %1 = getelementptr inbounds %struct.mq_inflight, ptr %mi, i32 0, i32 1, i32 1
  %2 = ptrtoint ptr %mi to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %part, ptr %mi, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_storeN_noabort(i32 %3, i32 8)
  store i64 0, ptr %0, align 4
  call void @blk_mq_queue_tag_busy_iter(ptr noundef %q, ptr noundef nonnull @blk_mq_check_inflight, ptr noundef nonnull %mi) #20
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %0, align 4
  %6 = ptrtoint ptr %inflight to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %inflight, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %1, align 4
  %arrayidx7 = getelementptr i32, ptr %inflight, i32 1
  %9 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %arrayidx7, align 4
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %mi) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_freeze_queue_start(ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %mq_freeze_lock = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 59
  tail call void @mutex_lock_nested(ptr noundef %mq_freeze_lock, i32 noundef 0) #20
  %mq_freeze_depth = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 55
  %0 = ptrtoint ptr %mq_freeze_depth to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mq_freeze_depth, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %mq_freeze_depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %q_usage_counter = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 2
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %q_usage_counter, ptr noundef null) #20
  tail call void @mutex_unlock(ptr noundef %mq_freeze_lock) #20
  %mq_ops.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 5
  %2 = ptrtoint ptr %mq_ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mq_ops.i, align 8
  %tobool.i.not = icmp eq ptr %3, null
  br i1 %tobool.i.not, label %if.then.if.end4_crit_edge, label %if.then2

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_run_hw_queues(ptr noundef %q, i1 noundef zeroext false)
  br label %if.end4

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @mutex_unlock(ptr noundef %mq_freeze_lock) #20
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2, %if.then.if.end4_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_run_hw_queues(ptr nocapture noundef readonly %q, i1 noundef zeroext %async) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %elevator.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 1
  %0 = ptrtoint ptr %elevator.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %elevator.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %land.lhs.true.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true.i:                                  ; preds = %entry
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %dispatch_request.i = getelementptr inbounds %struct.elevator_type, ptr %3, i32 0, i32 1, i32 14
  %4 = ptrtoint ptr %dispatch_request.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dispatch_request.i, align 4
  %tobool1.not.i = icmp eq ptr %5, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.end_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %elevator_features.i = getelementptr inbounds %struct.elevator_type, ptr %3, i32 0, i32 7
  %6 = ptrtoint ptr %elevator_features.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elevator_features.i, align 4
  %and.i = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool4.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool4.not.i, label %if.then, label %land.lhs.true2.i.if.end_crit_edge

land.lhs.true2.i.if.end_crit_edge:                ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  %8 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i, align 4
  %queue_hw_ctx.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %12 = ptrtoint ptr %queue_hw_ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %queue_hw_ctx.i.i, align 4
  %tag_set.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 61
  %14 = ptrtoint ptr %tag_set.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tag_set.i.i, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %arrayidx1.i.i = getelementptr i32, ptr %17, i32 %11
  %18 = ptrtoint ptr %arrayidx1.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx1.i.i, align 4
  %arrayidx2.i.i = getelementptr ptr, ptr %13, i32 %19
  %20 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx2.i.i, align 4
  %state.i.i = getelementptr inbounds %struct.anon.3, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  %.call1.i = select i1 %tobool.i.not.i, ptr %21, ptr null
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true2.i.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge, %entry.if.end_crit_edge
  %sq_hctx.0 = phi ptr [ %.call1.i, %if.then ], [ null, %entry.if.end_crit_edge ], [ null, %land.lhs.true.i.if.end_crit_edge ], [ null, %land.lhs.true2.i.if.end_crit_edge ]
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %24 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp24.not = icmp eq i32 %25, 0
  br i1 %cmp24.not, label %if.end.for.end_crit_edge, label %land.rhs.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

land.rhs.lr.ph:                                   ; preds = %if.end
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %tobool5.not = icmp eq ptr %sq_hctx.0, null
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %land.rhs.lr.ph
  %i.025 = phi i32 [ 0, %land.rhs.lr.ph ], [ %inc, %for.inc.land.rhs_crit_edge ]
  %26 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %27, i32 %i.025
  %28 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx, align 4
  %state.i = getelementptr inbounds %struct.anon.3, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end4, label %land.rhs.for.inc_crit_edge

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.end4:                                          ; preds = %land.rhs
  %cmp6 = icmp eq ptr %sq_hctx.0, %29
  %or.cond = or i1 %tobool5.not, %cmp6
  br i1 %or.cond, label %if.end4.if.then10_crit_edge, label %lor.lhs.false7

if.end4.if.then10_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then10

lor.lhs.false7:                                   ; preds = %if.end4
  %dispatch = getelementptr inbounds %struct.anon.3, ptr %29, i32 0, i32 1
  %32 = ptrtoint ptr %dispatch to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %dispatch, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !297
  %cmp.i.not.i = icmp eq ptr %33, %dispatch
  br i1 %cmp.i.not.i, label %list_empty_careful.exit, label %lor.lhs.false7.if.then10_crit_edge

lor.lhs.false7.if.then10_crit_edge:               ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then10

list_empty_careful.exit:                          ; preds = %lor.lhs.false7
  %prev.i = getelementptr inbounds %struct.anon.3, ptr %29, i32 0, i32 1, i32 1
  %34 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i, align 4
  %cmp.i.not = icmp eq ptr %35, %dispatch
  br i1 %cmp.i.not, label %list_empty_careful.exit.for.inc_crit_edge, label %list_empty_careful.exit.if.then10_crit_edge

list_empty_careful.exit.if.then10_crit_edge:      ; preds = %list_empty_careful.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then10

list_empty_careful.exit.for.inc_crit_edge:        ; preds = %list_empty_careful.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then10:                                        ; preds = %list_empty_careful.exit.if.then10_crit_edge, %lor.lhs.false7.if.then10_crit_edge, %if.end4.if.then10_crit_edge
  tail call void @blk_mq_run_hw_queue(ptr noundef %29, i1 noundef zeroext %async)
  br label %for.inc

for.inc:                                          ; preds = %if.then10, %list_empty_careful.exit.for.inc_crit_edge, %land.rhs.for.inc_crit_edge
  %inc = add nuw i32 %i.025, 1
  %36 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %nr_hw_queues, align 8
  %cmp = icmp ult i32 %inc, %37
  br i1 %cmp, label %for.inc.land.rhs_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_freeze_queue_wait(ptr noundef %q) #0 align 64 {
entry:
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 178) #20
  %q_usage_counter = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 2
  %call = tail call zeroext i1 @percpu_ref_is_zero(ptr noundef %q_usage_counter) #20
  br i1 %call, label %entry.do.end10_crit_edge, label %if.end

entry.do.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end10

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #20
  %0 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #20
  %mq_freeze_wq = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 58
  %call416 = call i32 @prepare_to_wait_event(ptr noundef %mq_freeze_wq, ptr noundef nonnull %__wq_entry, i32 noundef 2) #20
  %call617 = call zeroext i1 @percpu_ref_is_zero(ptr noundef %q_usage_counter) #20
  br i1 %call617, label %if.end.for.end_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  br label %cleanup

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.end.cleanup_crit_edge
  call void @schedule() #20
  %call4 = call i32 @prepare_to_wait_event(ptr noundef %mq_freeze_wq, ptr noundef nonnull %__wq_entry, i32 noundef 2) #20
  %call6 = call zeroext i1 @percpu_ref_is_zero(ptr noundef %q_usage_counter) #20
  br i1 %call6, label %cleanup.for.end_crit_edge, label %cleanup.cleanup_crit_edge

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.end.for.end_crit_edge
  call void @finish_wait(ptr noundef %mq_freeze_wq, ptr noundef nonnull %__wq_entry) #20
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #20
  br label %do.end10

do.end10:                                         ; preds = %for.end, %entry.do.end10_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @percpu_ref_is_zero(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @blk_mq_freeze_queue_wait_timeout(ptr noundef %q, i32 noundef %timeout) #0 align 64 {
entry:
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 187) #20
  %q_usage_counter = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 2
  %call = tail call zeroext i1 @percpu_ref_is_zero(ptr noundef %q_usage_counter) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %timeout)
  %tobool4.not = icmp eq i32 %timeout, 0
  %0 = and i1 %tobool4.not, %call
  %__ret.0 = select i1 %0, i32 1, i32 %timeout
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %__ret.0)
  %tobool6.not = icmp eq i32 %__ret.0, 0
  %1 = select i1 %call, i1 true, i1 %tobool6.not
  br i1 %1, label %entry.if.end33_crit_edge, label %if.then8

entry.if.end33_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

if.then8:                                         ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #20
  %2 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #20
  %mq_freeze_wq = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 58
  %call1051 = call i32 @prepare_to_wait_event(ptr noundef %mq_freeze_wq, ptr noundef nonnull %__wq_entry, i32 noundef 2) #20
  %call1352 = call zeroext i1 @percpu_ref_is_zero(ptr noundef %q_usage_counter) #20
  %3 = and i1 %call1352, %tobool4.not
  %__ret9.154 = select i1 %3, i32 1, i32 %timeout
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %__ret9.154)
  %tobool23.not55 = icmp eq i32 %__ret9.154, 0
  %4 = select i1 %call1352, i1 true, i1 %tobool23.not55
  br i1 %4, label %if.then8.for.end_crit_edge, label %if.then8.cleanup_crit_edge

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  br label %cleanup

if.then8.for.end_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.then8.cleanup_crit_edge
  %__ret9.156 = phi i32 [ %__ret9.1, %cleanup.cleanup_crit_edge ], [ %__ret9.154, %if.then8.cleanup_crit_edge ]
  %call30 = call i32 @schedule_timeout(i32 noundef %__ret9.156) #20
  %call10 = call i32 @prepare_to_wait_event(ptr noundef %mq_freeze_wq, ptr noundef nonnull %__wq_entry, i32 noundef 2) #20
  %call13 = call zeroext i1 @percpu_ref_is_zero(ptr noundef %q_usage_counter) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool17.not = icmp eq i32 %call30, 0
  %5 = select i1 %call13, i1 %tobool17.not, i1 false
  %__ret9.1 = select i1 %5, i32 1, i32 %call30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %__ret9.1)
  %tobool23.not = icmp eq i32 %__ret9.1, 0
  %6 = select i1 %call13, i1 true, i1 %tobool23.not
  br i1 %6, label %cleanup.for.end_crit_edge, label %cleanup.cleanup_crit_edge

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.then8.for.end_crit_edge
  %__ret9.1.lcssa = phi i32 [ %__ret9.154, %if.then8.for.end_crit_edge ], [ %__ret9.1, %cleanup.for.end_crit_edge ]
  call void @finish_wait(ptr noundef %mq_freeze_wq, ptr noundef nonnull %__wq_entry) #20
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #20
  br label %if.end33

if.end33:                                         ; preds = %for.end, %entry.if.end33_crit_edge
  %__ret.1 = phi i32 [ %__ret.0, %entry.if.end33_crit_edge ], [ %__ret9.1.lcssa, %for.end ]
  ret i32 %__ret.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_freeze_queue(ptr noundef %q) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %mq_freeze_lock.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 59
  tail call void @mutex_lock_nested(ptr noundef %mq_freeze_lock.i, i32 noundef 0) #20
  %mq_freeze_depth.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 55
  %0 = ptrtoint ptr %mq_freeze_depth.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mq_freeze_depth.i, align 4
  %inc.i = add i32 %1, 1
  store i32 %inc.i, ptr %mq_freeze_depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.i = icmp eq i32 %1, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %q_usage_counter.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 2
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %q_usage_counter.i, ptr noundef null) #20
  tail call void @mutex_unlock(ptr noundef %mq_freeze_lock.i) #20
  %mq_ops.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 5
  %2 = ptrtoint ptr %mq_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mq_ops.i.i, align 8
  %tobool.i.not.i = icmp eq ptr %3, null
  br i1 %tobool.i.not.i, label %if.then.i.blk_freeze_queue_start.exit_crit_edge, label %if.then2.i

if.then.i.blk_freeze_queue_start.exit_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_freeze_queue_start.exit

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_run_hw_queues(ptr noundef %q, i1 noundef zeroext false) #20
  br label %blk_freeze_queue_start.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @mutex_unlock(ptr noundef %mq_freeze_lock.i) #20
  br label %blk_freeze_queue_start.exit

blk_freeze_queue_start.exit:                      ; preds = %if.else.i, %if.then2.i, %if.then.i.blk_freeze_queue_start.exit_crit_edge
  tail call void @blk_mq_freeze_queue_wait(ptr noundef %q)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_freeze_queue(ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @blk_freeze_queue(ptr noundef %q)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__blk_mq_unfreeze_queue(ptr noundef %q, i1 noundef zeroext %force_atomic) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %mq_freeze_lock = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 59
  tail call void @mutex_lock_nested(ptr noundef %mq_freeze_lock, i32 noundef 0) #20
  br i1 %force_atomic, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %data = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 2, i32 1
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %force_atomic1 = getelementptr inbounds %struct.percpu_ref_data, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %force_atomic1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %force_atomic1, align 4
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %force_atomic1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %mq_freeze_depth = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 55
  %3 = ptrtoint ptr %mq_freeze_depth to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %mq_freeze_depth, align 4
  %dec = add i32 %4, -1
  store i32 %dec, ptr %mq_freeze_depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp = icmp slt i32 %dec, 0
  br i1 %cmp, label %land.rhs, label %if.end.if.end33_crit_edge

if.end.if.end33_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

land.rhs:                                         ; preds = %if.end
  %.b56 = load i1, ptr @__blk_mq_unfreeze_queue.__already_done, align 1
  br i1 %.b56, label %land.rhs.if.end45_crit_edge, label %if.then11, !prof !298

land.rhs.if.end45_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end45

if.then11:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @__blk_mq_unfreeze_queue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 224, i32 noundef 9, ptr noundef null) #20
  %5 = ptrtoint ptr %mq_freeze_depth to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pr = load i32, ptr %mq_freeze_depth, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then11, %if.end.if.end33_crit_edge
  %6 = phi i32 [ %dec, %if.end.if.end33_crit_edge ], [ %.pr, %if.then11 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool42.not = icmp eq i32 %6, 0
  br i1 %tobool42.not, label %if.then43, label %if.end33.if.end45_crit_edge

if.end33.if.end45_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end45

if.then43:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  %q_usage_counter44 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 2
  tail call void @percpu_ref_resurrect(ptr noundef %q_usage_counter44) #20
  %mq_freeze_wq = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 58
  tail call void @__wake_up(ptr noundef %mq_freeze_wq, i32 noundef 3, i32 noundef 0, ptr noundef null) #20
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end33.if.end45_crit_edge, %land.rhs.if.end45_crit_edge
  tail call void @mutex_unlock(ptr noundef %mq_freeze_lock) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_resurrect(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_unfreeze_queue(ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__blk_mq_unfreeze_queue(ptr noundef %q, i1 noundef zeroext false)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_quiesce_queue_nowait(ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_lock = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 14
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock) #20
  %quiesce_depth = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 60
  %0 = ptrtoint ptr %quiesce_depth to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %quiesce_depth, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %quiesce_depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_queue_flag_set(i32 noundef 24, ptr noundef %q) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_queue_flag_set(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_wait_quiesce_done(ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 11
  %0 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %queue_flags, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %srcu = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 70
  tail call void @synchronize_srcu(ptr noundef %srcu) #20
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @synchronize_rcu() #20
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_srcu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_quiesce_queue(ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_lock.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 14
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock.i) #20
  %quiesce_depth.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 60
  %0 = ptrtoint ptr %quiesce_depth.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %quiesce_depth.i, align 4
  %inc.i = add i32 %1, 1
  store i32 %inc.i, ptr %quiesce_depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.blk_mq_quiesce_queue_nowait.exit_crit_edge

entry.blk_mq_quiesce_queue_nowait.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_quiesce_queue_nowait.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_queue_flag_set(i32 noundef 24, ptr noundef %q) #20
  br label %blk_mq_quiesce_queue_nowait.exit

blk_mq_quiesce_queue_nowait.exit:                 ; preds = %if.then.i, %entry.blk_mq_quiesce_queue_nowait.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock.i, i32 noundef %call2.i) #20
  %queue_flags.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 11
  %2 = ptrtoint ptr %queue_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %queue_flags.i, align 4
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i2 = icmp eq i32 %4, 0
  br i1 %tobool.not.i2, label %if.else.i, label %if.then.i3

if.then.i3:                                       ; preds = %blk_mq_quiesce_queue_nowait.exit
  call void @__sanitizer_cov_trace_pc() #22
  %srcu.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 70
  tail call void @synchronize_srcu(ptr noundef %srcu.i) #20
  br label %blk_mq_wait_quiesce_done.exit

if.else.i:                                        ; preds = %blk_mq_quiesce_queue_nowait.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @synchronize_rcu() #20
  br label %blk_mq_wait_quiesce_done.exit

blk_mq_wait_quiesce_done.exit:                    ; preds = %if.else.i, %if.then.i3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_unquiesce_queue(ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_lock = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 14
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock) #20
  %quiesce_depth = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 60
  %0 = ptrtoint ptr %quiesce_depth to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %quiesce_depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp5 = icmp slt i32 %1, 1
  br i1 %cmp5, label %land.rhs, label %if.else.critedge

land.rhs:                                         ; preds = %entry
  %.b64 = load i1, ptr @blk_mq_unquiesce_queue.__already_done, align 1
  br i1 %.b64, label %land.rhs.if.end52_crit_edge, label %if.then, !prof !298

land.rhs.if.end52_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_unquiesce_queue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 298, i32 noundef 9, ptr noundef null) #20
  br label %if.end52

if.else.critedge:                                 ; preds = %entry
  %dec = add nsw i32 %1, -1
  %2 = ptrtoint ptr %quiesce_depth to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %dec, ptr %quiesce_depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool49.not = icmp eq i32 %dec, 0
  br i1 %tobool49.not, label %if.then50, label %if.end56.critedge

if.then50:                                        ; preds = %if.else.critedge
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_queue_flag_clear(i32 noundef 24, ptr noundef %q) #20
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #20
  tail call void @blk_mq_run_hw_queues(ptr noundef %q, i1 noundef zeroext true)
  br label %if.end56

if.end52:                                         ; preds = %if.then, %land.rhs.if.end52_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #20
  br label %if.end56

if.end56.critedge:                                ; preds = %if.else.critedge
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #20
  br label %if.end56

if.end56:                                         ; preds = %if.end56.critedge, %if.end52, %if.then50
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_queue_flag_clear(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_wake_waiters(ptr nocapture noundef readonly %q) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %0 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp5.not = icmp eq i32 %1, 0
  br i1 %cmp5.not, label %entry.for.end_crit_edge, label %land.rhs.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

land.rhs.lr.ph:                                   ; preds = %entry
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %land.rhs.lr.ph
  %i.06 = phi i32 [ 0, %land.rhs.lr.ph ], [ %inc, %for.inc.land.rhs_crit_edge ]
  %2 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %3, i32 %i.06
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %nr_ctx.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %5, i32 0, i32 14
  %6 = ptrtoint ptr %nr_ctx.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %nr_ctx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not.i = icmp eq i16 %7, 0
  br i1 %tobool.not.i, label %land.rhs.for.inc_crit_edge, label %blk_mq_hw_queue_mapped.exit

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

blk_mq_hw_queue_mapped.exit:                      ; preds = %land.rhs
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %5, i32 0, i32 19
  %8 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tags.i, align 16
  %tobool1.i.not = icmp eq ptr %9, null
  br i1 %tobool1.i.not, label %blk_mq_hw_queue_mapped.exit.for.inc_crit_edge, label %if.then

blk_mq_hw_queue_mapped.exit.for.inc_crit_edge:    ; preds = %blk_mq_hw_queue_mapped.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then:                                          ; preds = %blk_mq_hw_queue_mapped.exit
  call void @__sanitizer_cov_trace_pc() #22
  %10 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tags.i, align 16
  tail call void @blk_mq_tag_wakeup_all(ptr noundef %11, i1 noundef zeroext true) #20
  br label %for.inc

for.inc:                                          ; preds = %if.then, %blk_mq_hw_queue_mapped.exit.for.inc_crit_edge, %land.rhs.for.inc_crit_edge
  %inc = add nuw i32 %i.06, 1
  %12 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_hw_queues, align 8
  %cmp = icmp ult i32 %inc, %13
  br i1 %cmp, label %for.inc.land.rhs_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_tag_wakeup_all(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_rq_init(ptr noundef %q, ptr noundef %rq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = call ptr @memset(ptr %rq, i32 0, i32 192)
  %1 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %1, ptr %1, align 4
  %prev.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %1, ptr %prev.i, align 4
  %4 = ptrtoint ptr %rq to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %q, ptr %rq, align 8
  %__sector = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 9
  %5 = ptrtoint ptr %__sector to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 -1, ptr %__sector, align 8
  %6 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 28
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %6, align 4
  %pprev.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 28, i32 0, i32 1
  %8 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %pprev.i, align 4
  %9 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 29
  %10 = ptrtoint ptr %9 to i32
  %11 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %9, align 8
  %tag = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 5
  %12 = ptrtoint ptr %tag to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %tag, align 4
  %internal_tag = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 6
  %13 = ptrtoint ptr %internal_tag to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %internal_tag, align 8
  %call.i = tail call i64 @ktime_get() #20
  %start_time_ns = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 15
  %14 = ptrtoint ptr %start_time_ns to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %call.i, ptr %start_time_ns, align 8
  %part = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 13
  %15 = ptrtoint ptr %part to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %part, align 8
  %crypt_ctx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 21
  %16 = ptrtoint ptr %crypt_ctx.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %crypt_ctx.i, align 8
  %crypt_keyslot.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 22
  %17 = ptrtoint ptr %crypt_keyslot.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %crypt_keyslot.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @blk_mq_alloc_request(ptr noundef %q, i32 noundef %op, i32 noundef %flags) #0 align 64 {
entry:
  %data = alloca %struct.blk_mq_alloc_data, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %data) #20
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %q, ptr %data, align 4
  %flags2 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 1
  %1 = ptrtoint ptr %flags2 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %flags, ptr %flags2, align 4
  %shallow_depth = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 2
  %2 = ptrtoint ptr %shallow_depth to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %shallow_depth, align 4
  %cmd_flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 3
  %3 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %op, ptr %cmd_flags, align 4
  %rq_flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 4
  %4 = ptrtoint ptr %rq_flags to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %rq_flags, align 4
  %nr_tags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 5
  %5 = ptrtoint ptr %nr_tags to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %nr_tags, align 4
  %cached_rq = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 6
  %6 = ptrtoint ptr %cached_rq to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %cached_rq, align 4
  %ctx = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 7
  %7 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %ctx, align 4
  %hctx = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 8
  %8 = ptrtoint ptr %hctx to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %hctx, align 4
  %call = tail call i32 @blk_queue_enter(ptr noundef %q, i32 noundef %flags) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %9 = inttoptr i32 %call to ptr
  br label %cleanup

if.end:                                           ; preds = %entry
  %call4 = call fastcc ptr @__blk_mq_alloc_requests(ptr noundef nonnull %data)
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %out_queue_exit, label %if.end7

if.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %__data_len = getelementptr inbounds %struct.request, ptr %call4, i32 0, i32 8
  %10 = ptrtoint ptr %__data_len to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %__data_len, align 8
  %__sector = getelementptr inbounds %struct.request, ptr %call4, i32 0, i32 9
  %11 = ptrtoint ptr %__sector to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 -1, ptr %__sector, align 8
  %biotail = getelementptr inbounds %struct.request, ptr %call4, i32 0, i32 11
  %12 = ptrtoint ptr %biotail to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %biotail, align 4
  %bio = getelementptr inbounds %struct.request, ptr %call4, i32 0, i32 10
  %13 = ptrtoint ptr %bio to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %bio, align 8
  br label %cleanup

out_queue_exit:                                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  call void @blk_queue_exit(ptr noundef %q) #20
  br label %cleanup

cleanup:                                          ; preds = %out_queue_exit, %if.end7, %if.then
  %retval.0 = phi ptr [ %9, %if.then ], [ %call4, %if.end7 ], [ inttoptr (i32 -11 to ptr), %out_queue_exit ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %data) #20
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_queue_enter(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__blk_mq_alloc_requests(ptr noundef %data) unnamed_addr #0 align 64 {
entry:
  %tag_offset.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %queue_flags, align 4
  %4 = and i32 %3, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call i64 @ktime_get() #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %alloc_time_ns.0 = phi i64 [ %call.i, %if.then ], [ 0, %entry.if.end_crit_edge ]
  %cmd_flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 3
  %5 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cmd_flags, align 4
  %7 = and i32 %6, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.not = icmp eq i32 %7, 0
  br i1 %tobool3.not, label %if.end.if.end5_crit_edge, label %if.then4

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 1
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %or = or i32 %9, 1
  store i32 %or, ptr %flags, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end.if.end5_crit_edge
  %elevator = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 1
  %10 = ptrtoint ptr %elevator to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %elevator, align 4
  %tobool6.not = icmp eq ptr %11, null
  br i1 %tobool6.not, label %if.end5.if.end26_crit_edge, label %if.then7

if.end5.if.end26_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

if.then7:                                         ; preds = %if.end5
  %rq_flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 4
  %12 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rq_flags, align 4
  %or9 = or i32 %13, 4194304
  store i32 %or9, ptr %rq_flags, align 4
  %14 = and i32 %6, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.i = icmp ne i32 %14, 0
  %15 = and i32 %6, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %15)
  %16 = icmp eq i32 %15, 34
  %or.cond = or i1 %tobool.i, %16
  br i1 %or.cond, label %if.then7.if.end26_crit_edge, label %land.lhs.true14

if.then7.if.end26_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

land.lhs.true14:                                  ; preds = %if.then7
  %17 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %11, align 4
  %limit_depth = getelementptr inbounds %struct.elevator_type, ptr %18, i32 0, i32 1, i32 10
  %19 = ptrtoint ptr %limit_depth to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %limit_depth, align 4
  %tobool15.not = icmp eq ptr %20, null
  br i1 %tobool15.not, label %land.lhs.true14.if.end26_crit_edge, label %land.lhs.true16

land.lhs.true14.if.end26_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %flags17 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 1
  %21 = ptrtoint ptr %flags17 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags17, align 4
  %and18 = and i32 %22, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  br i1 %tobool19.not, label %if.then20, label %land.lhs.true16.if.end26_crit_edge

land.lhs.true16.if.end26_crit_edge:               ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

if.then20:                                        ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %20(i32 noundef %6, ptr noundef %data) #20
  br label %if.end26

if.end26:                                         ; preds = %if.then20, %land.lhs.true16.if.end26_crit_edge, %land.lhs.true14.if.end26_crit_edge, %if.then7.if.end26_crit_edge, %if.end5.if.end26_crit_edge
  %queue_ctx.i.i = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 6
  %ctx = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 7
  %hctx = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 8
  %rq_flags31 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 4
  %nr_tags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 5
  %cached_rq.i = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 6
  %flags50 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 1
  br label %retry

retry:                                            ; preds = %if.end54, %if.end26
  %23 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i, align 4
  %27 = ptrtoint ptr %queue_ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %queue_ctx.i.i, align 4
  %29 = ptrtoint ptr %28 to i32
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %30 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %31, %29
  %32 = inttoptr i32 %add.i.i to ptr
  %33 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %32, ptr %ctx, align 4
  %34 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cmd_flags, align 4
  %36 = and i32 %35, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i.i = icmp eq i32 %36, 0
  %and1.i.i = and i32 %35, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %cmp.i.i = icmp eq i32 %and1.i.i, 0
  %spec.select.i.i = zext i1 %cmp.i.i to i32
  %type.0.i.i = select i1 %tobool.not.i.i, i32 %spec.select.i.i, i32 2
  %arrayidx.i = getelementptr %struct.blk_mq_ctx, ptr %32, i32 0, i32 3, i32 %type.0.i.i
  %37 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx.i, align 4
  %39 = ptrtoint ptr %hctx to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %38, ptr %hctx, align 4
  %40 = ptrtoint ptr %rq_flags31 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rq_flags31, align 4
  %and32 = and i32 %41, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %if.then34, label %retry.if.end37_crit_edge

retry.if.end37_crit_edge:                         ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end37

if.then34:                                        ; preds = %retry
  %flags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %38, i32 0, i32 5
  %42 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags.i, align 16
  %and.i = and i32 %43, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then34.if.end37_crit_edge, label %if.end.i

if.then34.if.end37_crit_edge:                     ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end37

if.end.i:                                         ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #22
  %call.i91 = call zeroext i1 @__blk_mq_tag_busy(ptr noundef %38) #20
  br label %if.end37

if.end37:                                         ; preds = %if.end.i, %if.then34.if.end37_crit_edge, %retry.if.end37_crit_edge
  %44 = ptrtoint ptr %nr_tags to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %nr_tags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %45)
  %cmp = icmp ugt i32 %45, 1
  br i1 %cmp, label %if.then39, label %if.end37.if.end45_crit_edge

if.end37.if.end45_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end45

if.then39:                                        ; preds = %if.end37
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tag_offset.i) #20
  %46 = ptrtoint ptr %tag_offset.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 -1, ptr %tag_offset.i, align 4, !annotation !299
  %call.i92 = call i32 @blk_mq_get_tags(ptr noundef %data, i32 noundef %45, ptr noundef nonnull %tag_offset.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i92)
  %tobool.not.i93 = icmp eq i32 %call.i92, 0
  br i1 %tobool.not.i93, label %if.then39.if.end43_crit_edge, label %if.end.i96, !prof !300

if.then39.if.end43_crit_edge:                     ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43

if.end.i96:                                       ; preds = %if.then39
  %47 = ptrtoint ptr %rq_flags31 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rq_flags31, align 4
  %and.i.i94 = and i32 %48, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i94)
  %tobool.not.i.i95 = icmp eq i32 %and.i.i94, 0
  %49 = ptrtoint ptr %hctx to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %hctx, align 4
  %sched_tags.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %50, i32 0, i32 20
  %tags.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %50, i32 0, i32 19
  %retval.0.in.i.i = select i1 %tobool.not.i.i95, ptr %tags.i.i, ptr %sched_tags.i.i
  %51 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %retval.0.i.i = load ptr, ptr %retval.0.in.i.i, align 4
  %static_rqs.i = getelementptr inbounds %struct.blk_mq_tags, ptr %retval.0.i.i, i32 0, i32 6
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i96
  %nr.058.i = phi i32 [ 0, %if.end.i96 ], [ %nr.1.i, %for.inc.i.for.body.i_crit_edge ]
  %i.057.i = phi i32 [ 0, %if.end.i96 ], [ %inc13.i, %for.inc.i.for.body.i_crit_edge ]
  %tag_mask.056.i = phi i32 [ %call.i92, %if.end.i96 ], [ %tag_mask.1.i, %for.inc.i.for.body.i_crit_edge ]
  %shl.i = shl nuw i32 1, %i.057.i
  %and.i97 = and i32 %shl.i, %tag_mask.056.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i97)
  %tobool6.not.i = icmp eq i32 %and.i97, 0
  br i1 %tobool6.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end8.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc.i

if.end8.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %52 = ptrtoint ptr %tag_offset.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %tag_offset.i, align 4
  %add.i = add i32 %53, %i.057.i
  %54 = ptrtoint ptr %static_rqs.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %static_rqs.i, align 4
  %arrayidx.i98 = getelementptr ptr, ptr %55, i32 %add.i
  %56 = ptrtoint ptr %arrayidx.i98 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx.i98, align 4
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %57) #20, !srcloc !301
  %neg.i = xor i32 %shl.i, -1
  %and10.i = and i32 %tag_mask.056.i, %neg.i
  %call11.i = call fastcc ptr @blk_mq_rq_ctx_init(ptr noundef %data, ptr noundef %retval.0.i.i, i32 noundef %add.i, i64 noundef %alloc_time_ns.0) #20
  %58 = ptrtoint ptr %cached_rq.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %cached_rq.i, align 4
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %59, align 4
  %62 = getelementptr inbounds %struct.request, ptr %call11.i, i32 0, i32 12
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %61, ptr %62, align 8
  %64 = load ptr, ptr %cached_rq.i, align 4
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %call11.i, ptr %64, align 4
  %inc.i = add i32 %nr.058.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end8.i, %for.body.i.for.inc.i_crit_edge
  %tag_mask.1.i = phi i32 [ %and10.i, %if.end8.i ], [ %tag_mask.056.i, %for.body.i.for.inc.i_crit_edge ]
  %nr.1.i = phi i32 [ %inc.i, %if.end8.i ], [ %nr.058.i, %for.body.i.for.inc.i_crit_edge ]
  %inc13.i = add i32 %i.057.i, 1
  %tobool5.not.i = icmp eq i32 %tag_mask.1.i, 0
  br i1 %tobool5.not.i, label %for.end.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  %66 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %data, align 4
  %q_usage_counter.i = getelementptr inbounds %struct.request_queue, ptr %67, i32 0, i32 2
  %sub.i = add i32 %nr.1.i, -1
  %68 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i.i.i = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %71, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i.i.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i.i.i, label %for.end.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

for.end.i.rcu_read_lock.exit.i.i_crit_edge:       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %for.end.i
  %call1.i.i.i = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit.i.i

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b4.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i, label %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit.i.i

rcu_read_lock.exit.i.i:                           ; preds = %if.then.i.i.i, %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %for.end.i.rcu_read_lock.exit.i.i_crit_edge
  %72 = ptrtoint ptr %q_usage_counter.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %q_usage_counter.i, align 4
  %and.i.i.i = and i32 %73, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i41.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i41.i.i, label %do.body1.i.i, label %if.else.i.i, !prof !298

do.body1.i.i:                                     ; preds = %rcu_read_lock.exit.i.i
  %74 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #20, !srcloc !303
  %75 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i42.i.i = and i32 %75, -16384
  %76 = inttoptr i32 %and.i42.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 3
  %77 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i99 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %78
  %79 = ptrtoint ptr %arrayidx.i.i99 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %arrayidx.i.i99, align 4
  %add.i.i100 = add i32 %80, %73
  %81 = inttoptr i32 %add.i.i100 to ptr
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %81, align 4
  %add15.i.i = add i32 %83, %sub.i
  store i32 %add15.i.i, ptr %81, align 4
  %84 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !304
  %and.i.i.i.i = and i32 %84, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i54.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i54.i, label %if.then29.i.i, label %do.body1.i.i.do.end31.i.i_crit_edge, !prof !300

do.body1.i.i.do.end31.i.i_crit_edge:              ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end31.i.i

if.then29.i.i:                                    ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @warn_bogus_irq_restore() #20
  br label %do.end31.i.i

do.end31.i.i:                                     ; preds = %if.then29.i.i, %do.body1.i.i.do.end31.i.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %74) #20, !srcloc !305
  br label %if.end38.i.i

if.else.i.i:                                      ; preds = %rcu_read_lock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %data.i.i = getelementptr inbounds %struct.request_queue, ptr %67, i32 0, i32 2, i32 1
  %85 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %data.i.i, align 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %86, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %86, i32 1, i32 3, i32 1) #20
  %87 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %86, ptr %86, i32 %sub.i, ptr elementtype(i32) %86) #20, !srcloc !306
  br label %if.end38.i.i

if.end38.i.i:                                     ; preds = %if.else.i.i, %do.end31.i.i
  %call.i43.i.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i43.i.i, label %if.end38.i.i.percpu_ref_get_many.exit.i_crit_edge, label %land.lhs.true.i46.i.i

if.end38.i.i.percpu_ref_get_many.exit.i_crit_edge: ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %percpu_ref_get_many.exit.i

land.lhs.true.i46.i.i:                            ; preds = %if.end38.i.i
  %call1.i44.i.i = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i44.i.i)
  %tobool.not.i45.i.i = icmp eq i32 %call1.i44.i.i, 0
  br i1 %tobool.not.i45.i.i, label %land.lhs.true.i46.i.i.percpu_ref_get_many.exit.i_crit_edge, label %land.lhs.true2.i48.i.i

land.lhs.true.i46.i.i.percpu_ref_get_many.exit.i_crit_edge: ; preds = %land.lhs.true.i46.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %percpu_ref_get_many.exit.i

land.lhs.true2.i48.i.i:                           ; preds = %land.lhs.true.i46.i.i
  %.b4.i47.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i47.i.i, label %land.lhs.true2.i48.i.i.percpu_ref_get_many.exit.i_crit_edge, label %if.then.i49.i.i

land.lhs.true2.i48.i.i.percpu_ref_get_many.exit.i_crit_edge: ; preds = %land.lhs.true2.i48.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %percpu_ref_get_many.exit.i

if.then.i49.i.i:                                  ; preds = %land.lhs.true2.i48.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %percpu_ref_get_many.exit.i

percpu_ref_get_many.exit.i:                       ; preds = %if.then.i49.i.i, %land.lhs.true2.i48.i.i.percpu_ref_get_many.exit.i_crit_edge, %land.lhs.true.i46.i.i.percpu_ref_get_many.exit.i_crit_edge, %if.end38.i.i.percpu_ref_get_many.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %88 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i50.i.i = and i32 %88, -16384
  %89 = inttoptr i32 %and.i.i.i.i.i50.i.i to ptr
  %preempt_count.i.i.i.i51.i.i = getelementptr inbounds %struct.thread_info, ptr %89, i32 0, i32 1
  %90 = ptrtoint ptr %preempt_count.i.i.i.i51.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %preempt_count.i.i.i.i51.i.i, align 4
  %sub.i.i.i.i.i = add i32 %91, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i.i.i51.i.i, align 4
  call void @rcu_read_unlock_strict() #20
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  %92 = ptrtoint ptr %nr_tags to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %nr_tags, align 4
  %sub15.i = sub i32 %93, %nr.1.i
  store i32 %sub15.i, ptr %nr_tags, align 4
  %94 = ptrtoint ptr %cached_rq.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %cached_rq.i, align 4
  %tobool17.not.i = icmp eq ptr %95, null
  br i1 %tobool17.not.i, label %percpu_ref_get_many.exit.i.if.end43_crit_edge, label %land.lhs.true.i

percpu_ref_get_many.exit.i.if.end43_crit_edge:    ; preds = %percpu_ref_get_many.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43

land.lhs.true.i:                                  ; preds = %percpu_ref_get_many.exit.i
  %96 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %95, align 4
  %tobool19.not.i = icmp eq ptr %97, null
  br i1 %tobool19.not.i, label %land.lhs.true.i.if.end43_crit_edge, label %__blk_mq_alloc_requests_batch.exit

land.lhs.true.i.if.end43_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43

__blk_mq_alloc_requests_batch.exit:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %98 = getelementptr inbounds %struct.request, ptr %97, i32 0, i32 12
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %98, align 8
  %101 = ptrtoint ptr %95 to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %100, ptr %95, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tag_offset.i) #20
  br label %cleanup

if.end43:                                         ; preds = %land.lhs.true.i.if.end43_crit_edge, %percpu_ref_get_many.exit.i.if.end43_crit_edge, %if.then39.if.end43_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tag_offset.i) #20
  %102 = ptrtoint ptr %nr_tags to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 1, ptr %nr_tags, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.end43, %if.end37.if.end45_crit_edge
  %call46 = call i32 @blk_mq_get_tag(ptr noundef %data) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call46)
  %cmp47 = icmp eq i32 %call46, -1
  br i1 %cmp47, label %if.then49, label %if.end55

if.then49:                                        ; preds = %if.end45
  %103 = ptrtoint ptr %flags50 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %flags50, align 4
  %and51 = and i32 %104, 1
  %tobool52.not = icmp eq i32 %and51, 0
  br i1 %tobool52.not, label %if.end54, label %if.then49.cleanup_crit_edge

if.then49.cleanup_crit_edge:                      ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end54:                                         ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #22
  call void @msleep(i32 noundef 3) #20
  br label %retry

if.end55:                                         ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #22
  %105 = ptrtoint ptr %rq_flags31 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %rq_flags31, align 4
  %and.i101 = and i32 %106, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i101)
  %tobool.not.i102 = icmp eq i32 %and.i101, 0
  %107 = ptrtoint ptr %hctx to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %hctx, align 4
  %sched_tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %108, i32 0, i32 20
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %108, i32 0, i32 19
  %retval.0.in.i = select i1 %tobool.not.i102, ptr %tags.i, ptr %sched_tags.i
  %109 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %retval.0.i103 = load ptr, ptr %retval.0.in.i, align 4
  %call57 = call fastcc ptr @blk_mq_rq_ctx_init(ptr noundef %data, ptr noundef %retval.0.i103, i32 noundef %call46, i64 noundef %alloc_time_ns.0)
  br label %cleanup

cleanup:                                          ; preds = %if.end55, %if.then49.cleanup_crit_edge, %__blk_mq_alloc_requests_batch.exit
  %retval.0 = phi ptr [ %call57, %if.end55 ], [ %97, %__blk_mq_alloc_requests_batch.exit ], [ null, %if.then49.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_queue_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @blk_mq_alloc_request_hctx(ptr noundef %q, i32 noundef %op, i32 noundef %flags, i32 noundef %hctx_idx) #0 align 64 {
entry:
  %data = alloca %struct.blk_mq_alloc_data, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %data) #20
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %q, ptr %data, align 4
  %flags2 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 1
  %1 = ptrtoint ptr %flags2 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %flags, ptr %flags2, align 4
  %shallow_depth = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 2
  %2 = ptrtoint ptr %shallow_depth to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %shallow_depth, align 4
  %cmd_flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 3
  %3 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %op, ptr %cmd_flags, align 4
  %rq_flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 4
  %4 = ptrtoint ptr %rq_flags to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %rq_flags, align 4
  %nr_tags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 5
  %5 = ptrtoint ptr %nr_tags to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %nr_tags, align 4
  %cached_rq = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 6
  %6 = ptrtoint ptr %cached_rq to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %cached_rq, align 4
  %ctx = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 7
  %7 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %ctx, align 4
  %hctx = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 8
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 11
  %8 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %queue_flags, align 4
  %10 = and i32 %9, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call i64 @ktime_get() #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %alloc_time_ns.0 = phi i64 [ %call.i, %if.then ], [ 0, %entry.if.end_crit_edge ]
  %and = and i32 %flags, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %land.rhs, label %if.end46

land.rhs:                                         ; preds = %if.end
  %.b96 = load i1, ptr @blk_mq_alloc_request_hctx.__already_done, align 1
  br i1 %.b96, label %land.rhs.cleanup_crit_edge, label %if.then13, !prof !298

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then13:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_alloc_request_hctx.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 561, i32 noundef 9, ptr noundef null) #20
  br label %cleanup

if.end46:                                         ; preds = %if.end
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %11 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %hctx_idx)
  %cmp.not = icmp ugt i32 %12, %hctx_idx
  br i1 %cmp.not, label %if.end49, label %if.end46.cleanup_crit_edge

if.end46.cleanup_crit_edge:                       ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end49:                                         ; preds = %if.end46
  %call50 = tail call i32 @blk_queue_enter(ptr noundef %q, i32 noundef %flags) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %if.end54, label %if.then52

if.then52:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #22
  %13 = inttoptr i32 %call50 to ptr
  br label %cleanup

if.end54:                                         ; preds = %if.end49
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %14 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %15, i32 %hctx_idx
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx, align 4
  %18 = ptrtoint ptr %hctx to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %17, ptr %hctx, align 4
  %nr_ctx.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %17, i32 0, i32 14
  %19 = ptrtoint ptr %nr_ctx.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %nr_ctx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %20)
  %tobool.not.i = icmp eq i16 %20, 0
  br i1 %tobool.not.i, label %if.end54.out_queue_exit_crit_edge, label %blk_mq_hw_queue_mapped.exit

if.end54.out_queue_exit_crit_edge:                ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_queue_exit

blk_mq_hw_queue_mapped.exit:                      ; preds = %if.end54
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %17, i32 0, i32 19
  %21 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %tags.i, align 16
  %tobool1.i.not = icmp eq ptr %22, null
  br i1 %tobool1.i.not, label %blk_mq_hw_queue_mapped.exit.out_queue_exit_crit_edge, label %if.end.i.i

blk_mq_hw_queue_mapped.exit.out_queue_exit_crit_edge: ; preds = %blk_mq_hw_queue_mapped.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_queue_exit

if.end.i.i:                                       ; preds = %blk_mq_hw_queue_mapped.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %23 = load i32, ptr @nr_cpu_ids, align 4
  %cpumask = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %17, i32 0, i32 2
  %24 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %cpumask, align 4
  %call6.i.i = tail call i32 @_find_first_and_bit(ptr noundef %25, ptr noundef nonnull @__cpu_online_mask, i32 noundef %23) #20
  %queue_ctx.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 6
  %26 = ptrtoint ptr %queue_ctx.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %queue_ctx.i, align 4
  %28 = ptrtoint ptr %27 to i32
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call6.i.i
  %29 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %30, %28
  %31 = inttoptr i32 %add.i to ptr
  %32 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %31, ptr %ctx, align 4
  %elevator = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 1
  %33 = ptrtoint ptr %elevator to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %elevator, align 4
  %tobool64.not = icmp eq ptr %34, null
  br i1 %tobool64.not, label %if.then65, label %if.else

if.then65:                                        ; preds = %if.end.i.i
  %35 = ptrtoint ptr %hctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hctx, align 4
  %flags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %36, i32 0, i32 5
  %37 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %flags.i, align 16
  %and.i = and i32 %38, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i98 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i98, label %if.then65.if.end69_crit_edge, label %if.end.i

if.then65.if.end69_crit_edge:                     ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.end.i:                                         ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #22
  %call.i99 = tail call zeroext i1 @__blk_mq_tag_busy(ptr noundef %36) #20
  br label %if.end69

if.else:                                          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %39 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rq_flags, align 4
  %or = or i32 %40, 4194304
  store i32 %or, ptr %rq_flags, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else, %if.end.i, %if.then65.if.end69_crit_edge
  %call70 = call i32 @blk_mq_get_tag(ptr noundef nonnull %data) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call70)
  %cmp71 = icmp eq i32 %call70, -1
  br i1 %cmp71, label %if.end69.out_queue_exit_crit_edge, label %if.end73

if.end69.out_queue_exit_crit_edge:                ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_queue_exit

if.end73:                                         ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #22
  %41 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rq_flags, align 4
  %and.i100 = and i32 %42, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i100)
  %tobool.not.i101 = icmp eq i32 %and.i100, 0
  %43 = ptrtoint ptr %hctx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %hctx, align 4
  %sched_tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %44, i32 0, i32 20
  %tags.i102 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %44, i32 0, i32 19
  %retval.0.in.i = select i1 %tobool.not.i101, ptr %tags.i102, ptr %sched_tags.i
  %45 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %retval.0.i = load ptr, ptr %retval.0.in.i, align 4
  %call75 = call fastcc ptr @blk_mq_rq_ctx_init(ptr noundef nonnull %data, ptr noundef %retval.0.i, i32 noundef %call70, i64 noundef %alloc_time_ns.0)
  br label %cleanup

out_queue_exit:                                   ; preds = %if.end69.out_queue_exit_crit_edge, %blk_mq_hw_queue_mapped.exit.out_queue_exit_crit_edge, %if.end54.out_queue_exit_crit_edge
  %ret.0 = phi ptr [ inttoptr (i32 -11 to ptr), %if.end69.out_queue_exit_crit_edge ], [ inttoptr (i32 -18 to ptr), %blk_mq_hw_queue_mapped.exit.out_queue_exit_crit_edge ], [ inttoptr (i32 -18 to ptr), %if.end54.out_queue_exit_crit_edge ]
  call void @blk_queue_exit(ptr noundef %q) #20
  br label %cleanup

cleanup:                                          ; preds = %out_queue_exit, %if.end73, %if.then52, %if.end46.cleanup_crit_edge, %if.then13, %land.rhs.cleanup_crit_edge
  %retval.0 = phi ptr [ %13, %if.then52 ], [ %ret.0, %out_queue_exit ], [ %call75, %if.end73 ], [ inttoptr (i32 -22 to ptr), %land.rhs.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then13 ], [ inttoptr (i32 -5 to ptr), %if.end46.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %data) #20
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_mq_get_tag(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @blk_mq_rq_ctx_init(ptr nocapture noundef %data, ptr nocapture noundef readonly %tags, i32 noundef %tag, i64 noundef %alloc_time_ns) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %ctx1 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 7
  %0 = ptrtoint ptr %ctx1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ctx1, align 4
  %hctx2 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 8
  %2 = ptrtoint ptr %hctx2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hctx2, align 4
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data, align 4
  %static_rqs = getelementptr inbounds %struct.blk_mq_tags, ptr %tags, i32 0, i32 6
  %6 = ptrtoint ptr %static_rqs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %static_rqs, align 4
  %arrayidx = getelementptr ptr, ptr %7, i32 %tag
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %5, ptr %9, align 8
  %mq_ctx = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 1
  %11 = ptrtoint ptr %mq_ctx to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %1, ptr %mq_ctx, align 4
  %mq_hctx = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 2
  %12 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %3, ptr %mq_hctx, align 8
  %cmd_flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 3
  %13 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cmd_flags, align 4
  %cmd_flags5 = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 3
  %15 = ptrtoint ptr %cmd_flags5 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %cmd_flags5, align 4
  %flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 1
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags, align 4
  %and = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %rq_flags = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 4
  %18 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rq_flags, align 4
  %or = or i32 %19, 32768
  store i32 %or, ptr %rq_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %5, i32 0, i32 11
  %20 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %queue_flags, align 4
  %22 = and i32 %21, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool6.not = icmp eq i32 %22, 0
  br i1 %tobool6.not, label %if.end.if.end10_crit_edge, label %if.then7

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end10

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %rq_flags8 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 4
  %23 = ptrtoint ptr %rq_flags8 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %rq_flags8, align 4
  %or9 = or i32 %24, 8192
  store i32 %or9, ptr %rq_flags8, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %if.end.if.end10_crit_edge
  %rq_flags11 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data, i32 0, i32 4
  %25 = ptrtoint ptr %rq_flags11 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %rq_flags11, align 4
  %rq_flags12 = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 4
  %27 = ptrtoint ptr %rq_flags12 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %rq_flags12, align 8
  %28 = load i32, ptr %rq_flags11, align 4
  %and14 = and i32 %28, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  %spec.select = select i1 %tobool15.not, i32 %tag, i32 -1
  %spec.select96 = select i1 %tobool15.not, i32 -1, i32 %tag
  %29 = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 5
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %spec.select, ptr %29, align 4
  %31 = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 6
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %spec.select96, ptr %31, align 8
  %timeout = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 7
  %33 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %timeout, align 4
  %34 = ptrtoint ptr %rq_flags12 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rq_flags12, align 8
  %and.i = and i32 %35, 4333568
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end10.if.end26_crit_edge, label %if.then22

if.end10.if.end26_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

if.then22:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call i64 @ktime_get() #20
  br label %if.end26

if.end26:                                         ; preds = %if.then22, %if.end10.if.end26_crit_edge
  %call.i.sink = phi i64 [ %call.i, %if.then22 ], [ 0, %if.end10.if.end26_crit_edge ]
  %36 = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 15
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %call.i.sink, ptr %36, align 8
  %part = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 13
  %38 = ptrtoint ptr %part to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %part, align 8
  %alloc_time_ns27 = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 14
  %39 = ptrtoint ptr %alloc_time_ns27 to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %alloc_time_ns, ptr %alloc_time_ns27, align 8
  %io_start_time_ns = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 16
  %40 = ptrtoint ptr %io_start_time_ns to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 0, ptr %io_start_time_ns, align 8
  %stats_sectors = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 18
  %end_io = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 32
  %41 = ptrtoint ptr %end_io to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %end_io, align 8
  %end_io_data = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 33
  %42 = ptrtoint ptr %end_io_data to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr null, ptr %end_io_data, align 4
  %43 = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 12
  %44 = call ptr @memset(ptr %stats_sectors, i32 0, i32 14)
  %45 = ptrtoint ptr %43 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %43, ptr %43, align 4
  %prev.i = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 12, i32 0, i32 1
  %46 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %43, ptr %prev.i, align 4
  %deadline = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 27
  %47 = ptrtoint ptr %deadline to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile i32 0, ptr %deadline, align 4
  %ref.i = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 26
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ref.i, i32 noundef 4) #20
  %48 = ptrtoint ptr %ref.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 1, ptr %ref.i, align 4
  %49 = ptrtoint ptr %rq_flags12 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %rq_flags12, align 8
  %and35 = and i32 %50, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and35)
  %tobool36.not = icmp eq i32 %and35, 0
  br i1 %tobool36.not, label %if.end26.if.end49_crit_edge, label %if.then37

if.end26.if.end49_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end49

if.then37:                                        ; preds = %if.end26
  %51 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %data, align 4
  %elevator = getelementptr inbounds %struct.request_queue, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %elevator to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %elevator, align 4
  %55 = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 28
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr null, ptr %55, align 4
  %pprev.i = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 28, i32 0, i32 1
  %57 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr null, ptr %pprev.i, align 4
  %58 = getelementptr inbounds %struct.request, ptr %9, i32 0, i32 29
  %59 = ptrtoint ptr %58 to i32
  %60 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %58, align 8
  %61 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %cmd_flags, align 4
  %63 = and i32 %62, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool.i95.not = icmp eq i32 %63, 0
  br i1 %tobool.i95.not, label %land.lhs.true, label %if.then37.if.end49_crit_edge

if.then37.if.end49_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end49

land.lhs.true:                                    ; preds = %if.then37
  %64 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %54, align 4
  %prepare_request = getelementptr inbounds %struct.elevator_type, ptr %65, i32 0, i32 1, i32 11
  %66 = ptrtoint ptr %prepare_request to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %prepare_request, align 4
  %tobool41.not = icmp eq ptr %67, null
  br i1 %tobool41.not, label %land.lhs.true.if.end49_crit_edge, label %if.then42

land.lhs.true.if.end49_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end49

if.then42:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %67(ptr noundef %9) #20
  %68 = ptrtoint ptr %rq_flags12 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %rq_flags12, align 8
  %or47 = or i32 %69, 4096
  store i32 %or47, ptr %rq_flags12, align 8
  br label %if.end49

if.end49:                                         ; preds = %if.then42, %land.lhs.true.if.end49_crit_edge, %if.then37.if.end49_crit_edge, %if.end26.if.end49_crit_edge
  ret ptr %9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_free_request(ptr noundef %rq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq, align 8
  %mq_hctx = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %2 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mq_hctx, align 8
  %rq_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %4 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rq_flags, align 8
  %and = and i32 %5, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %elevator = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %elevator to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %elevator, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %finish_request = getelementptr inbounds %struct.elevator_type, ptr %9, i32 0, i32 1, i32 12
  %10 = ptrtoint ptr %finish_request to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %finish_request, align 4
  %tobool2.not = icmp eq ptr %11, null
  br i1 %tobool2.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %11(ptr noundef %rq) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %12 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rq_flags, align 8
  %and8 = and i32 %13, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end.if.end11_crit_edge, label %if.then10

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11

if.then10:                                        ; preds = %if.end
  %flags.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %3, i32 0, i32 5
  %14 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i.i, align 16
  %and.i.i.i = and i32 %15, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  %queue.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %3, i32 0, i32 7
  %16 = ptrtoint ptr %queue.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %queue.i.i, align 8
  %nr_active_requests_shared_tags.i.i = getelementptr inbounds %struct.request_queue, ptr %17, i32 0, i32 31
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_active_requests_shared_tags.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %nr_active_requests_shared_tags.i.i, i32 1, i32 3, i32 1) #20
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active_requests_shared_tags.i.i, ptr %nr_active_requests_shared_tags.i.i, i32 1, ptr elementtype(i32) %nr_active_requests_shared_tags.i.i) #20, !srcloc !308
  br label %if.end11

if.else.i.i:                                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %3, i32 0, i32 25
  %call.i.i4.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_active.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %nr_active.i.i, i32 1, i32 3, i32 1) #20
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active.i.i, ptr %nr_active.i.i, i32 1, ptr elementtype(i32) %nr_active.i.i) #20, !srcloc !308
  br label %if.end11

if.end11:                                         ; preds = %if.else.i.i, %if.then.i.i, %if.end.if.end11_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @laptop_mode to i32))
  %20 = load i32, ptr @laptop_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool12.not = icmp eq i32 %20, 0
  br i1 %tobool12.not, label %if.end11.if.end17_crit_edge, label %land.rhs

if.end11.if.end17_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

land.rhs:                                         ; preds = %if.end11
  %cmd_flags.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 3
  %21 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cmd_flags.i, align 4
  %23 = and i32 %22, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %23)
  %.not = icmp eq i32 %23, 34
  br i1 %.not, label %land.rhs.if.end17_crit_edge, label %if.then16, !prof !298

land.rhs.if.end17_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

if.then16:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  %disk = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 15
  %24 = ptrtoint ptr %disk to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %disk, align 8
  %bdi = getelementptr inbounds %struct.gendisk, ptr %25, i32 0, i32 15
  %26 = ptrtoint ptr %bdi to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %bdi, align 4
  tail call void @laptop_io_completion(ptr noundef %27) #20
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %land.rhs.if.end17_crit_edge, %if.end11.if.end17_crit_edge
  %rq_qos.i = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 4
  %28 = ptrtoint ptr %rq_qos.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %rq_qos.i, align 4
  %tobool.not.i = icmp eq ptr %29, null
  br i1 %tobool.not.i, label %if.end17.rq_qos_done.exit_crit_edge, label %if.then.i

if.end17.rq_qos_done.exit_crit_edge:              ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %rq_qos_done.exit

if.then.i:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__rq_qos_done(ptr noundef nonnull %29, ptr noundef %rq) #20
  br label %rq_qos_done.exit

rq_qos_done.exit:                                 ; preds = %if.then.i, %if.end17.rq_qos_done.exit_crit_edge
  %state = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 25
  %30 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile i32 0, ptr %state, align 4
  %ref.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 26
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %ref.i, i32 noundef 4) #20
  %31 = ptrtoint ptr %ref.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %ref.i, align 4
  %add.i = add i32 %32, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i)
  %cmp.i = icmp ult i32 %add.i, 128
  br i1 %cmp.i, label %land.rhs.i, label %rq_qos_done.exit.req_ref_put_and_test.exit_crit_edge

rq_qos_done.exit.req_ref_put_and_test.exit_crit_edge: ; preds = %rq_qos_done.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %req_ref_put_and_test.exit

land.rhs.i:                                       ; preds = %rq_qos_done.exit
  %.b40.i = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.req_ref_put_and_test.exit_crit_edge, label %if.then.i39, !prof !298

land.rhs.i.req_ref_put_and_test.exit_crit_edge:   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %req_ref_put_and_test.exit

if.then.i39:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 495, i32 noundef 9, ptr noundef null) #20
  br label %req_ref_put_and_test.exit

req_ref_put_and_test.exit:                        ; preds = %if.then.i39, %land.rhs.i.req_ref_put_and_test.exit_crit_edge, %rq_qos_done.exit.req_ref_put_and_test.exit_crit_edge
  %call.i.i41.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ref.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !309
  tail call void @llvm.prefetch.p0(ptr %ref.i, i32 1, i32 3, i32 1) #20
  %33 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ref.i, ptr %ref.i, i32 1, ptr elementtype(i32) %ref.i) #20, !srcloc !310
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %33, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !311
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then25, label %req_ref_put_and_test.exit.if.end26_crit_edge

req_ref_put_and_test.exit.if.end26_crit_edge:     ; preds = %req_ref_put_and_test.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

if.then25:                                        ; preds = %req_ref_put_and_test.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @__blk_mq_free_request(ptr noundef %rq)
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %req_ref_put_and_test.exit.if.end26_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @laptop_io_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__blk_mq_free_request(ptr noundef %rq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq, align 8
  %mq_ctx = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 1
  %2 = ptrtoint ptr %mq_ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mq_ctx, align 4
  %mq_hctx = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %4 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mq_hctx, align 8
  %internal_tag = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 6
  %6 = ptrtoint ptr %internal_tag to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %internal_tag, align 8
  %crypt_ctx.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 21
  %8 = ptrtoint ptr %crypt_ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %crypt_ctx.i.i, align 8
  %tobool.i.not.i = icmp eq ptr %9, null
  br i1 %tobool.i.not.i, label %entry.blk_crypto_free_request.exit_crit_edge, label %if.then.i

entry.blk_crypto_free_request.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_crypto_free_request.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__blk_crypto_free_request(ptr noundef %rq) #20
  br label %blk_crypto_free_request.exit

blk_crypto_free_request.exit:                     ; preds = %if.then.i, %entry.blk_crypto_free_request.exit_crit_edge
  %10 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rq, align 8
  %dev.i = getelementptr inbounds %struct.request_queue, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev.i, align 8
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %blk_crypto_free_request.exit.blk_pm_mark_last_busy.exit_crit_edge, label %land.lhs.true.i

blk_crypto_free_request.exit.blk_pm_mark_last_busy.exit_crit_edge: ; preds = %blk_crypto_free_request.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_pm_mark_last_busy.exit

land.lhs.true.i:                                  ; preds = %blk_crypto_free_request.exit
  %rq_flags.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %14 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rq_flags.i, align 8
  %and.i = and i32 %15, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.then.i20, label %land.lhs.true.i.blk_pm_mark_last_busy.exit_crit_edge

land.lhs.true.i.blk_pm_mark_last_busy.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_pm_mark_last_busy.exit

if.then.i20:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i = tail call i64 @ktime_get_mono_fast_ns() #20
  %last_busy.i.i = getelementptr inbounds %struct.device, ptr %13, i32 0, i32 12, i32 22
  %16 = ptrtoint ptr %last_busy.i.i to i32
  call void @__asan_store8_noabort(i32 %16)
  store volatile i64 %call.i.i, ptr %last_busy.i.i, align 8
  br label %blk_pm_mark_last_busy.exit

blk_pm_mark_last_busy.exit:                       ; preds = %if.then.i20, %land.lhs.true.i.blk_pm_mark_last_busy.exit_crit_edge, %blk_crypto_free_request.exit.blk_pm_mark_last_busy.exit_crit_edge
  %17 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %mq_hctx, align 8
  %tag = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 5
  %18 = ptrtoint ptr %tag to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %tag, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %cmp.not = icmp eq i32 %19, -1
  br i1 %cmp.not, label %blk_pm_mark_last_busy.exit.if.end_crit_edge, label %if.then

blk_pm_mark_last_busy.exit.if.end_crit_edge:      ; preds = %blk_pm_mark_last_busy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %blk_pm_mark_last_busy.exit
  call void @__sanitizer_cov_trace_pc() #22
  %tags = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %5, i32 0, i32 19
  %20 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %tags, align 16
  tail call void @blk_mq_put_tag(ptr noundef %21, ptr noundef %3, i32 noundef %19) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %blk_pm_mark_last_busy.exit.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp4.not = icmp eq i32 %7, -1
  br i1 %cmp4.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %sched_tags = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %5, i32 0, i32 20
  %22 = ptrtoint ptr %sched_tags to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sched_tags, align 4
  tail call void @blk_mq_put_tag(ptr noundef %23, ptr noundef %3, i32 noundef %7) #20
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  %state.i = getelementptr inbounds %struct.anon.3, ptr %5, i32 0, i32 2
  %24 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %state.i, align 4
  %26 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i21 = icmp eq i32 %26, 0
  br i1 %tobool.not.i21, label %if.end6.blk_mq_sched_restart.exit_crit_edge, label %if.then.i22

if.end6.blk_mq_sched_restart.exit_crit_edge:      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_sched_restart.exit

if.then.i22:                                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__blk_mq_sched_restart(ptr noundef %5) #20
  br label %blk_mq_sched_restart.exit

blk_mq_sched_restart.exit:                        ; preds = %if.then.i22, %if.end6.blk_mq_sched_restart.exit_crit_edge
  tail call void @blk_queue_exit(ptr noundef %1) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_free_plug_rqs(ptr noundef %plug) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %cached_rq = getelementptr inbounds %struct.blk_plug, ptr %plug, i32 0, i32 1
  %tobool.not = icmp eq ptr %cached_rq, null
  br i1 %tobool.not, label %entry.while.end_crit_edge, label %land.lhs.true.preheader

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

land.lhs.true.preheader:                          ; preds = %entry
  %0 = ptrtoint ptr %cached_rq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cached_rq, align 4
  %tobool2.not11 = icmp eq ptr %1, null
  br i1 %tobool2.not11, label %land.lhs.true.preheader.while.end_crit_edge, label %land.lhs.true.preheader.land.lhs.true.critedge_crit_edge

land.lhs.true.preheader.land.lhs.true.critedge_crit_edge: ; preds = %land.lhs.true.preheader
  br label %land.lhs.true.critedge

land.lhs.true.preheader.while.end_crit_edge:      ; preds = %land.lhs.true.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

land.lhs.true.critedge:                           ; preds = %land.lhs.true.critedge.land.lhs.true.critedge_crit_edge, %land.lhs.true.preheader.land.lhs.true.critedge_crit_edge
  %2 = phi ptr [ %8, %land.lhs.true.critedge.land.lhs.true.critedge_crit_edge ], [ %1, %land.lhs.true.preheader.land.lhs.true.critedge_crit_edge ]
  %3 = getelementptr inbounds %struct.request, ptr %2, i32 0, i32 12
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %6 = ptrtoint ptr %cached_rq to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %cached_rq, align 4
  tail call void @blk_mq_free_request(ptr noundef nonnull %2)
  %7 = ptrtoint ptr %cached_rq to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cached_rq, align 4
  %tobool2.not = icmp eq ptr %8, null
  br i1 %tobool2.not, label %land.lhs.true.critedge.while.end_crit_edge, label %land.lhs.true.critedge.land.lhs.true.critedge_crit_edge

land.lhs.true.critedge.land.lhs.true.critedge_crit_edge: ; preds = %land.lhs.true.critedge
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true.critedge

land.lhs.true.critedge.while.end_crit_edge:       ; preds = %land.lhs.true.critedge
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %land.lhs.true.critedge.while.end_crit_edge, %land.lhs.true.preheader.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_dump_rq_flags(ptr nocapture noundef readonly %rq, ptr noundef %msg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq, align 8
  %disk = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %disk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %disk, align 8
  %tobool.not = icmp eq ptr %3, null
  %disk_name = getelementptr inbounds %struct.gendisk, ptr %3, i32 0, i32 3
  %spec.select = select i1 %tobool.not, ptr @.str.3, ptr %disk_name
  %cmd_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 3
  %4 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cmd_flags, align 4
  %conv = zext i32 %5 to i64
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1, ptr noundef %msg, ptr noundef %spec.select, i64 noundef %conv) #23
  %__sector.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 9
  %6 = ptrtoint ptr %__sector.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %__sector.i, align 8
  %__data_len.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 8
  %8 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_len.i.i, align 8
  %bio.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %10 = ptrtoint ptr %bio.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bio.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.blk_rq_cur_sectors.exit_crit_edge, label %land.lhs.true.i.i.i

entry.blk_rq_cur_sectors.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_sectors.exit

land.lhs.true.i.i.i:                              ; preds = %entry
  %bi_size.i.i.i = getelementptr inbounds %struct.bio, ptr %11, i32 0, i32 8, i32 1
  %12 = ptrtoint ptr %bi_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %bi_size.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool1.not.i.i.i = icmp eq i32 %13, 0
  br i1 %tobool1.not.i.i.i, label %land.lhs.true.i.i.i.blk_rq_cur_sectors.exit_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i.i.i.blk_rq_cur_sectors.exit_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_sectors.exit

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %bi_opf.i.i.i = getelementptr inbounds %struct.bio, ptr %11, i32 0, i32 2
  %14 = ptrtoint ptr %bi_opf.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %bi_opf.i.i.i, align 8
  %trunc.i.i.i = trunc i32 %15 to i8
  %16 = zext i8 %trunc.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values)
  switch i8 %trunc.i.i.i, label %if.end4.i.i [
    i8 3, label %land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge
    i8 5, label %land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge24
    i8 9, label %land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge25
  ]

land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge25: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_sectors.exit

land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge24: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_sectors.exit

land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_sectors.exit

if.end4.i.i:                                      ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %bi_io_vec.i.i = getelementptr inbounds %struct.bio, ptr %11, i32 0, i32 20
  %17 = ptrtoint ptr %bi_io_vec.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bi_io_vec.i.i, align 8
  %bi_idx.i.i = getelementptr inbounds %struct.bio, ptr %11, i32 0, i32 8, i32 2
  %19 = ptrtoint ptr %bi_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %bi_idx.i.i, align 4
  %bi_bvec_done.i.i = getelementptr inbounds %struct.bio, ptr %11, i32 0, i32 8, i32 3
  %21 = ptrtoint ptr %bi_bvec_done.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %bi_bvec_done.i.i, align 8
  %bv_len26.i.i = getelementptr %struct.bio_vec, ptr %18, i32 %20, i32 1
  %23 = ptrtoint ptr %bv_len26.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bv_len26.i.i, align 4
  %sub.i.i = sub i32 %24, %22
  %25 = tail call i32 @llvm.umin.i32(i32 %13, i32 %sub.i.i) #20
  %bv_offset36.i.i = getelementptr %struct.bio_vec, ptr %18, i32 %20, i32 2
  %26 = ptrtoint ptr %bv_offset36.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %bv_offset36.i.i, align 4
  %add40.i.i = add i32 %27, %22
  %rem.i.i = and i32 %add40.i.i, 4095
  %sub41.i.i = sub nuw nsw i32 4096, %rem.i.i
  %28 = tail call i32 @llvm.umin.i32(i32 %25, i32 %sub41.i.i) #20
  br label %blk_rq_cur_sectors.exit

blk_rq_cur_sectors.exit:                          ; preds = %if.end4.i.i, %land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge, %land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge24, %land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge25, %land.lhs.true.i.i.i.blk_rq_cur_sectors.exit_crit_edge, %entry.blk_rq_cur_sectors.exit_crit_edge
  %retval.0.i.i = phi i32 [ %28, %if.end4.i.i ], [ 0, %entry.blk_rq_cur_sectors.exit_crit_edge ], [ %13, %land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge ], [ %13, %land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge24 ], [ %13, %land.lhs.true2.i.i.i.blk_rq_cur_sectors.exit_crit_edge25 ], [ 0, %land.lhs.true.i.i.i.blk_rq_cur_sectors.exit_crit_edge ]
  %shr.i = lshr i32 %9, 9
  %shr.i23 = ashr i32 %retval.0.i.i, 9
  %call9 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5, i64 noundef %7, i32 noundef %shr.i, i32 noundef %shr.i23) #23
  %29 = ptrtoint ptr %bio.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %bio.i.i, align 8
  %biotail = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 11
  %31 = ptrtoint ptr %biotail to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %biotail, align 4
  %33 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %__data_len.i.i, align 8
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.8, ptr noundef %30, ptr noundef %32, i32 noundef %34) #23
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @blk_update_request(ptr noundef %req, i8 noundef zeroext %error, i32 noundef %nr_bytes) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_block_rq_complete(ptr noundef %req, i8 noundef zeroext %error, i32 noundef %nr_bytes)
  %bio = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 10
  %0 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bio, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup75_crit_edge, label %if.end

entry.cleanup75_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup75

if.end:                                           ; preds = %entry
  %cmd_flags.i = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 3
  %2 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cmd_flags.i, align 4
  %4 = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not = icmp eq i32 %4, 0
  br i1 %tobool.i.not, label %if.end.if.end5_crit_edge, label %land.lhs.true

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %and = and i32 %3, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %error)
  %cmp2 = icmp eq i8 %error, 0
  %or.cond = and i1 %cmp2, %cmp
  br i1 %or.cond, label %if.end5.thread, label %land.lhs.true.if.end5_crit_edge

land.lhs.true.if.end5_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

if.end5.thread:                                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %5 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %req, align 8
  %integrity = getelementptr inbounds %struct.request_queue, ptr %6, i32 0, i32 18
  %7 = ptrtoint ptr %integrity to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %integrity, align 8
  %complete_fn = getelementptr inbounds %struct.blk_integrity_profile, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %complete_fn to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %complete_fn, align 4
  tail call void %10(ptr noundef %req, i32 noundef %nr_bytes) #20
  br label %if.end16

if.end5:                                          ; preds = %land.lhs.true.if.end5_crit_edge, %if.end.if.end5_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %error)
  %tobool7.not = icmp eq i8 %error, 0
  br i1 %tobool7.not, label %if.end5.if.end16_crit_edge, label %land.lhs.true8

if.end5.if.end16_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

land.lhs.true8:                                   ; preds = %if.end5
  %11 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cmd_flags.i, align 4
  %13 = and i32 %12, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %13)
  %14 = icmp eq i32 %13, 34
  br i1 %14, label %land.lhs.true8.if.end16_crit_edge, label %land.rhs

land.lhs.true8.if.end16_crit_edge:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

land.rhs:                                         ; preds = %land.lhs.true8
  %rq_flags = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 4
  %15 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %rq_flags, align 8
  %and10 = and i32 %16, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %if.then15, label %land.rhs.if.end16_crit_edge, !prof !300

land.rhs.if.end16_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

if.then15:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @blk_print_req_error(ptr noundef %req, i8 noundef zeroext %error)
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %land.rhs.if.end16_crit_edge, %land.lhs.true8.if.end16_crit_edge, %if.end5.if.end16_crit_edge, %if.end5.thread
  %tobool7.not156 = phi i1 [ true, %if.end5.thread ], [ true, %if.end5.if.end16_crit_edge ], [ false, %land.lhs.true8.if.end16_crit_edge ], [ false, %if.then15 ], [ false, %land.rhs.if.end16_crit_edge ]
  tail call fastcc void @blk_account_io_completion(ptr noundef %req, i32 noundef %nr_bytes)
  %__sector.i = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 9
  %rq_flags.i = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 4
  br label %while.cond

while.cond:                                       ; preds = %req_bio_endio.exit.while.cond_crit_edge, %if.end16
  %nr_bytes.addr.0 = phi i32 [ %nr_bytes, %if.end16 ], [ %sub, %req_bio_endio.exit.while.cond_crit_edge ]
  %total_bytes.0 = phi i32 [ 0, %if.end16 ], [ %add, %req_bio_endio.exit.while.cond_crit_edge ]
  %17 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bio, align 8
  %tobool18.not = icmp eq ptr %18, null
  br i1 %tobool18.not, label %while.cond.if.then36_crit_edge, label %while.body

while.cond.if.then36_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then36

while.body:                                       ; preds = %while.cond
  %bi_size = getelementptr inbounds %struct.bio, ptr %18, i32 0, i32 8, i32 1
  %19 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %bi_size, align 8
  %21 = tail call i32 @llvm.umin.i32(i32 %20, i32 %nr_bytes.addr.0)
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %nr_bytes.addr.0)
  %cmp25.not = icmp ugt i32 %20, %nr_bytes.addr.0
  br i1 %cmp25.not, label %while.body.if.end29_crit_edge, label %if.then27

while.body.if.end29_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29

if.then27:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %18, align 8
  %24 = ptrtoint ptr %bio to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %bio, align 8
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %while.body.if.end29_crit_edge
  %bi_flags.i = getelementptr inbounds %struct.bio, ptr %18, i32 0, i32 3
  %25 = ptrtoint ptr %bi_flags.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %bi_flags.i, align 4
  %27 = and i16 %26, -257
  store i16 %27, ptr %bi_flags.i, align 4
  br i1 %tobool7.not156, label %if.else.i, label %if.then.i, !prof !298

if.then.i:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %18, i32 0, i32 6
  %28 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %error, ptr %bi_status.i, align 2
  br label %if.end10.i

if.else.i:                                        ; preds = %if.end29
  %29 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cmd_flags.i, align 4
  %and.i = and i32 %30, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %and.i)
  %cmp.i = icmp eq i32 %and.i, 13
  br i1 %cmp.i, label %if.then3.i, label %if.else.i.if.end10.i_crit_edge

if.else.i.if.end10.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end10.i

if.then3.i:                                       ; preds = %if.else.i
  %31 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %bi_size, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %21)
  %cmp4.not.i = icmp eq i32 %32, %21
  br i1 %cmp4.not.i, label %if.else7.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #22
  %bi_status6.i = getelementptr inbounds %struct.bio, ptr %18, i32 0, i32 6
  %33 = ptrtoint ptr %bi_status6.i to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 10, ptr %bi_status6.i, align 2
  br label %if.end10.i

if.else7.i:                                       ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #22
  %bi_iter.i = getelementptr inbounds %struct.bio, ptr %18, i32 0, i32 8
  %34 = ptrtoint ptr %__sector.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %__sector.i, align 8
  %36 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %bi_iter.i, align 8
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.else7.i, %if.then5.i, %if.else.i.if.end10.i_crit_edge, %if.then.i
  %37 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %bi_size, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %38, i32 %21)
  %cmp.i.i = icmp eq i32 %38, %21
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #22
  %39 = ptrtoint ptr %bi_size to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 0, ptr %bi_size, align 8
  br label %bio_advance.exit.i

if.end.i.i:                                       ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__bio_advance(ptr noundef nonnull %18, i32 noundef %21) #20
  br label %bio_advance.exit.i

bio_advance.exit.i:                               ; preds = %if.end.i.i, %if.then.i.i
  %40 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rq_flags.i, align 8
  %and11.i = and i32 %41, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i)
  %tobool12.not.i = icmp eq i32 %and11.i, 0
  br i1 %tobool12.not.i, label %bio_advance.exit.i.if.end20.i_crit_edge, label %if.then19.i, !prof !298

bio_advance.exit.i.if.end20.i_crit_edge:          ; preds = %bio_advance.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20.i

if.then19.i:                                      ; preds = %bio_advance.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %42 = ptrtoint ptr %bi_flags.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %bi_flags.i, align 4
  %conv1.i.i = or i16 %43, 16
  store i16 %conv1.i.i, ptr %bi_flags.i, align 4
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %bio_advance.exit.i.if.end20.i_crit_edge
  %44 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %bi_size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp23.i = icmp eq i32 %45, 0
  br i1 %cmp23.i, label %land.lhs.true.i, label %if.end20.i.req_bio_endio.exit_crit_edge

if.end20.i.req_bio_endio.exit_crit_edge:          ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %req_bio_endio.exit

land.lhs.true.i:                                  ; preds = %if.end20.i
  %46 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rq_flags.i, align 8
  %and25.i = and i32 %47, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25.i)
  %tobool26.not.i = icmp eq i32 %and25.i, 0
  br i1 %tobool26.not.i, label %if.then27.i, label %land.lhs.true.i.req_bio_endio.exit_crit_edge

land.lhs.true.i.req_bio_endio.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %req_bio_endio.exit

if.then27.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @bio_endio(ptr noundef nonnull %18) #20
  br label %req_bio_endio.exit

req_bio_endio.exit:                               ; preds = %if.then27.i, %land.lhs.true.i.req_bio_endio.exit_crit_edge, %if.end20.i.req_bio_endio.exit_crit_edge
  %add = add i32 %21, %total_bytes.0
  %sub = sub i32 %nr_bytes.addr.0, %21
  %tobool30.not = icmp eq i32 %sub, 0
  br i1 %tobool30.not, label %while.end, label %req_bio_endio.exit.while.cond_crit_edge

req_bio_endio.exit.while.cond_crit_edge:          ; preds = %req_bio_endio.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond

while.end:                                        ; preds = %req_bio_endio.exit
  %48 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %48)
  %.pr = load ptr, ptr %bio, align 8
  %tobool35.not = icmp eq ptr %.pr, null
  br i1 %tobool35.not, label %while.end.if.then36_crit_edge, label %if.end37

while.end.if.then36_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then36

if.then36:                                        ; preds = %while.end.if.then36_crit_edge, %while.cond.if.then36_crit_edge
  %__data_len = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 8
  %49 = ptrtoint ptr %__data_len to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 0, ptr %__data_len, align 8
  br label %cleanup75

if.end37:                                         ; preds = %while.end
  %__data_len38 = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 8
  %50 = ptrtoint ptr %__data_len38 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %__data_len38, align 8
  %sub39 = sub i32 %51, %add
  store i32 %sub39, ptr %__data_len38, align 8
  %52 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cmd_flags.i, align 4
  %54 = and i32 %53, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %54)
  %55 = icmp eq i32 %54, 34
  br i1 %55, label %if.end37.if.end44_crit_edge, label %if.then41

if.end37.if.end44_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44

if.then41:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #22
  %shr = ashr i32 %add, 9
  %conv42 = sext i32 %shr to i64
  %56 = ptrtoint ptr %__sector.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %__sector.i, align 8
  %add43 = add i64 %57, %conv42
  store i64 %add43, ptr %__sector.i, align 8
  br label %if.end44

if.end44:                                         ; preds = %if.then41, %if.end37.if.end44_crit_edge
  %58 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %rq_flags.i, align 8
  %and46 = and i32 %59, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46)
  %tobool47.not = icmp eq i32 %and46, 0
  br i1 %tobool47.not, label %if.end44.if.end59_crit_edge, label %if.then48

if.end44.if.end59_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end59

if.then48:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #22
  %60 = and i32 %53, -1793
  %61 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %cmd_flags.i, align 4
  %bi_opf = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 2
  %62 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %bi_opf, align 8
  %64 = and i32 %63, 1792
  %or127 = or i32 %64, %60
  store i32 %or127, ptr %cmd_flags.i, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then48, %if.end44.if.end59_crit_edge
  %and61 = and i32 %59, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61)
  %tobool62.not = icmp eq i32 %and61, 0
  br i1 %tobool62.not, label %land.lhs.true.i.i, label %if.end59.cleanup75_crit_edge

if.end59.cleanup75_crit_edge:                     ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup75

land.lhs.true.i.i:                                ; preds = %if.end59
  %bi_size.i.i133 = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 8, i32 1
  %65 = ptrtoint ptr %bi_size.i.i133 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %bi_size.i.i133, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool1.not.i.i = icmp eq i32 %66, 0
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.if.end71_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.if.end71_crit_edge:             ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end71

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %bi_opf.i.i = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 2
  %67 = ptrtoint ptr %bi_opf.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %bi_opf.i.i, align 8
  %trunc.i.i = trunc i32 %68 to i8
  %69 = zext i8 %trunc.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %69, ptr @__sancov_gen_cov_switch_values.65)
  switch i8 %trunc.i.i, label %if.end4.i [
    i8 3, label %land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge
    i8 5, label %land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge161
    i8 9, label %land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge162
  ]

land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge162: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_bytes.exit

land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge161: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_bytes.exit

land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_bytes.exit

if.end4.i:                                        ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %bi_io_vec.i = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 20
  %70 = ptrtoint ptr %bi_io_vec.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %bi_io_vec.i, align 8
  %bi_idx.i = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 8, i32 2
  %72 = ptrtoint ptr %bi_idx.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %bi_idx.i, align 4
  %bi_bvec_done.i = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 8, i32 3
  %74 = ptrtoint ptr %bi_bvec_done.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %bi_bvec_done.i, align 8
  %bv_len26.i = getelementptr %struct.bio_vec, ptr %71, i32 %73, i32 1
  %76 = ptrtoint ptr %bv_len26.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %bv_len26.i, align 4
  %sub.i = sub i32 %77, %75
  %78 = tail call i32 @llvm.umin.i32(i32 %66, i32 %sub.i) #20
  %bv_offset36.i = getelementptr %struct.bio_vec, ptr %71, i32 %73, i32 2
  %79 = ptrtoint ptr %bv_offset36.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %bv_offset36.i, align 4
  %add40.i = add i32 %80, %75
  %rem.i = and i32 %add40.i, 4095
  %sub41.i = sub nuw nsw i32 4096, %rem.i
  %81 = tail call i32 @llvm.umin.i32(i32 %78, i32 %sub41.i) #20
  br label %blk_rq_cur_bytes.exit

blk_rq_cur_bytes.exit:                            ; preds = %if.end4.i, %land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge, %land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge161, %land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge162
  %retval.0.i = phi i32 [ %81, %if.end4.i ], [ %66, %land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge ], [ %66, %land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge161 ], [ %66, %land.lhs.true2.i.i.blk_rq_cur_bytes.exit_crit_edge162 ]
  call void @__sanitizer_cov_trace_cmp4(i32 %sub39, i32 %retval.0.i)
  %cmp66 = icmp ult i32 %sub39, %retval.0.i
  br i1 %cmp66, label %if.then68, label %blk_rq_cur_bytes.exit.if.end71_crit_edge

blk_rq_cur_bytes.exit.if.end71_crit_edge:         ; preds = %blk_rq_cur_bytes.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end71

if.then68:                                        ; preds = %blk_rq_cur_bytes.exit
  tail call void @blk_dump_rq_flags(ptr noundef %req, ptr noundef nonnull @.str.10)
  %82 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %bio, align 8
  %tobool.not.i135 = icmp eq ptr %83, null
  br i1 %tobool.not.i135, label %if.then68.blk_rq_cur_bytes.exit154_crit_edge, label %land.lhs.true.i.i138

if.then68.blk_rq_cur_bytes.exit154_crit_edge:     ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_bytes.exit154

land.lhs.true.i.i138:                             ; preds = %if.then68
  %bi_size.i.i136 = getelementptr inbounds %struct.bio, ptr %83, i32 0, i32 8, i32 1
  %84 = ptrtoint ptr %bi_size.i.i136 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %bi_size.i.i136, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool1.not.i.i137 = icmp eq i32 %85, 0
  br i1 %tobool1.not.i.i137, label %land.lhs.true.i.i138.blk_rq_cur_bytes.exit154_crit_edge, label %land.lhs.true2.i.i141

land.lhs.true.i.i138.blk_rq_cur_bytes.exit154_crit_edge: ; preds = %land.lhs.true.i.i138
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_bytes.exit154

land.lhs.true2.i.i141:                            ; preds = %land.lhs.true.i.i138
  %bi_opf.i.i139 = getelementptr inbounds %struct.bio, ptr %83, i32 0, i32 2
  %86 = ptrtoint ptr %bi_opf.i.i139 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %bi_opf.i.i139, align 8
  %trunc.i.i140 = trunc i32 %87 to i8
  %88 = zext i8 %trunc.i.i140 to i64
  call void @__sanitizer_cov_trace_switch(i64 %88, ptr @__sancov_gen_cov_switch_values.66)
  switch i8 %trunc.i.i140, label %if.end4.i152 [
    i8 3, label %land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge
    i8 5, label %land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge163
    i8 9, label %land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge164
  ]

land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge164: ; preds = %land.lhs.true2.i.i141
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_bytes.exit154

land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge163: ; preds = %land.lhs.true2.i.i141
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_bytes.exit154

land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge: ; preds = %land.lhs.true2.i.i141
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_cur_bytes.exit154

if.end4.i152:                                     ; preds = %land.lhs.true2.i.i141
  call void @__sanitizer_cov_trace_pc() #22
  %bi_io_vec.i143 = getelementptr inbounds %struct.bio, ptr %83, i32 0, i32 20
  %89 = ptrtoint ptr %bi_io_vec.i143 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %bi_io_vec.i143, align 8
  %bi_idx.i144 = getelementptr inbounds %struct.bio, ptr %83, i32 0, i32 8, i32 2
  %91 = ptrtoint ptr %bi_idx.i144 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %bi_idx.i144, align 4
  %bi_bvec_done.i145 = getelementptr inbounds %struct.bio, ptr %83, i32 0, i32 8, i32 3
  %93 = ptrtoint ptr %bi_bvec_done.i145 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %bi_bvec_done.i145, align 8
  %bv_len26.i146 = getelementptr %struct.bio_vec, ptr %90, i32 %92, i32 1
  %95 = ptrtoint ptr %bv_len26.i146 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %bv_len26.i146, align 4
  %sub.i147 = sub i32 %96, %94
  %97 = tail call i32 @llvm.umin.i32(i32 %85, i32 %sub.i147) #20
  %bv_offset36.i148 = getelementptr %struct.bio_vec, ptr %90, i32 %92, i32 2
  %98 = ptrtoint ptr %bv_offset36.i148 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %bv_offset36.i148, align 4
  %add40.i149 = add i32 %99, %94
  %rem.i150 = and i32 %add40.i149, 4095
  %sub41.i151 = sub nuw nsw i32 4096, %rem.i150
  %100 = tail call i32 @llvm.umin.i32(i32 %97, i32 %sub41.i151) #20
  br label %blk_rq_cur_bytes.exit154

blk_rq_cur_bytes.exit154:                         ; preds = %if.end4.i152, %land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge, %land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge163, %land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge164, %land.lhs.true.i.i138.blk_rq_cur_bytes.exit154_crit_edge, %if.then68.blk_rq_cur_bytes.exit154_crit_edge
  %retval.0.i153 = phi i32 [ %100, %if.end4.i152 ], [ 0, %if.then68.blk_rq_cur_bytes.exit154_crit_edge ], [ %85, %land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge ], [ %85, %land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge163 ], [ %85, %land.lhs.true2.i.i141.blk_rq_cur_bytes.exit154_crit_edge164 ], [ 0, %land.lhs.true.i.i138.blk_rq_cur_bytes.exit154_crit_edge ]
  %101 = ptrtoint ptr %__data_len38 to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %retval.0.i153, ptr %__data_len38, align 8
  br label %if.end71

if.end71:                                         ; preds = %blk_rq_cur_bytes.exit154, %blk_rq_cur_bytes.exit.if.end71_crit_edge, %land.lhs.true.i.i.if.end71_crit_edge
  %call72 = tail call i32 @blk_recalc_rq_segments(ptr noundef %req) #20
  %conv73 = trunc i32 %call72 to i16
  %nr_phys_segments = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 19
  %102 = ptrtoint ptr %nr_phys_segments to i32
  call void @__asan_store2_noabort(i32 %102)
  store i16 %conv73, ptr %nr_phys_segments, align 4
  br label %cleanup75

cleanup75:                                        ; preds = %if.end71, %if.end59.cleanup75_crit_edge, %if.then36, %entry.cleanup75_crit_edge
  %retval.0 = phi i1 [ false, %if.then36 ], [ false, %entry.cleanup75_crit_edge ], [ true, %if.end71 ], [ true, %if.end59.cleanup75_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_block_rq_complete(ptr noundef %rq, i8 noundef zeroext %error, i32 noundef %nr_bytes) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_complete, i32 0, i32 1), ptr blockaddress(@trace_block_rq_complete, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !312

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !298

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !313
  %call42 = tail call i32 @__traceiter_block_rq_complete(ptr noundef null, ptr noundef %rq, i8 noundef zeroext %error, i32 noundef %nr_bytes) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !314
  %13 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !298

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !315
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_complete, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_block_rq_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_block_rq_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.24, i32 noundef 145, ptr noundef nonnull @.str.25) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !316
  %31 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @blk_print_req_error(ptr nocapture noundef readonly %req, i8 noundef zeroext %status) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @___ratelimit(ptr noundef nonnull @blk_print_req_error._rs, ptr noundef nonnull @__func__.blk_print_req_error) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call1 = tail call ptr @blk_status_to_str(i8 noundef zeroext %status) #20
  %0 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %req, align 8
  %disk = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %disk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %disk, align 8
  %tobool2.not = icmp eq ptr %3, null
  %disk_name = getelementptr inbounds %struct.gendisk, ptr %3, i32 0, i32 3
  %spec.select = select i1 %tobool2.not, ptr @.str.3, ptr %disk_name
  %__sector.i = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 9
  %4 = ptrtoint ptr %__sector.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %__sector.i, align 8
  %cmd_flags = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 3
  %6 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cmd_flags, align 4
  %and = and i32 %7, 255
  %call8 = tail call ptr @blk_op_str(i32 noundef %and) #20
  %8 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cmd_flags, align 4
  %and10 = and i32 %9, -256
  %nr_phys_segments = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 19
  %10 = ptrtoint ptr %nr_phys_segments to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %nr_phys_segments, align 4
  %conv = zext i16 %11 to i32
  %ioprio = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 24
  %12 = ptrtoint ptr %ioprio to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %ioprio, align 2
  %14 = lshr i16 %13, 13
  %15 = zext i16 %14 to i32
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.28, ptr noundef %call1, ptr noundef %spec.select, i64 noundef %5, i32 noundef %and, ptr noundef %call8, i32 noundef %and10, i32 noundef %conv, i32 noundef %15) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @blk_account_io_completion(ptr nocapture noundef readonly %req, i32 noundef %bytes) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %part = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 13
  %0 = ptrtoint ptr %part to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %part, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end56_crit_edge, label %land.lhs.true

entry.if.end56_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end56

land.lhs.true:                                    ; preds = %entry
  %rq_flags.i = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 4
  %2 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rq_flags.i, align 8
  %and.i = and i32 %3, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.if.end56_crit_edge, label %blk_do_io_stat.exit

land.lhs.true.if.end56_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end56

blk_do_io_stat.exit:                              ; preds = %land.lhs.true
  %4 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %req, align 8
  %disk.i = getelementptr inbounds %struct.request_queue, ptr %5, i32 0, i32 15
  %6 = ptrtoint ptr %disk.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %disk.i, align 8
  %tobool1.i.not = icmp eq ptr %7, null
  br i1 %tobool1.i.not, label %blk_do_io_stat.exit.if.end56_crit_edge, label %if.then

blk_do_io_stat.exit.if.end56_crit_edge:           ; preds = %blk_do_io_stat.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end56

if.then:                                          ; preds = %blk_do_io_stat.exit
  %cmd_flags = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 3
  %8 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cmd_flags, align 4
  %and = and i32 %9, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and)
  %cmp.i.i = icmp eq i32 %and, 3
  %and.i3.i = and i32 %9, 1
  %retval.0.i = select i1 %cmp.i.i, i32 2, i32 %and.i3.i
  %10 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %13, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !317
  %shr = lshr i32 %bytes, 9
  %14 = ptrtoint ptr %part to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %part, align 8
  %bd_stats = getelementptr inbounds %struct.block_device, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %bd_stats to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bd_stats, align 8
  %arrayidx = getelementptr %struct.disk_stats, ptr %17, i32 0, i32 1, i32 %retval.0.i
  %18 = ptrtoint ptr %arrayidx to i32
  %19 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i66 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i66 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cpu, align 4
  %arrayidx15 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %22
  %23 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx15, align 4
  %add = add i32 %24, %18
  %25 = inttoptr i32 %add to ptr
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add16 = add i32 %27, %shr
  store i32 %add16, ptr %25, align 4
  %28 = ptrtoint ptr %part to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %part, align 8
  %bd_partno = getelementptr inbounds %struct.block_device, ptr %29, i32 0, i32 15
  %30 = ptrtoint ptr %bd_partno to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %bd_partno, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool22.not = icmp eq i8 %31, 0
  br i1 %tobool22.not, label %if.then.do.body53_crit_edge, label %if.then23

if.then.do.body53_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body53

if.then23:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %bd_disk = getelementptr inbounds %struct.block_device, ptr %29, i32 0, i32 17
  %32 = ptrtoint ptr %bd_disk to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %bd_disk, align 8
  %part0 = getelementptr inbounds %struct.gendisk, ptr %33, i32 0, i32 7
  %34 = ptrtoint ptr %part0 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %part0, align 4
  %bd_stats38 = getelementptr inbounds %struct.block_device, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %bd_stats38 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %bd_stats38, align 8
  %arrayidx40 = getelementptr %struct.disk_stats, ptr %37, i32 0, i32 1, i32 %retval.0.i
  %38 = ptrtoint ptr %arrayidx40 to i32
  %39 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %40
  %41 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %42, %38
  %43 = inttoptr i32 %add45 to ptr
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %43, align 4
  %add46 = add i32 %45, %shr
  store i32 %add46, ptr %43, align 4
  br label %do.body53

do.body53:                                        ; preds = %if.then23, %if.then.do.body53_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !318
  %46 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i64 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i64 to ptr
  %preempt_count.i.i65 = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i65 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i65, align 4
  %sub.i = add i32 %49, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i65, align 4
  br label %if.end56

if.end56:                                         ; preds = %do.body53, %blk_do_io_stat.exit.if.end56_crit_edge, %land.lhs.true.if.end56_crit_edge, %entry.if.end56_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_recalc_rq_segments(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__blk_mq_end_request(ptr noundef %rq, i8 noundef zeroext %error) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %rq_flags.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %0 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rq_flags.i, align 8
  %and.i = and i32 %1, 4333568
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  %call.i = tail call i64 @ktime_get() #20
  %2 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rq_flags.i, align 8
  %and.i13 = and i32 %3, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13)
  %tobool.not.i = icmp eq i32 %and.i13, 0
  br i1 %tobool.not.i, label %if.then.if.end.i_crit_edge, label %if.then.i

if.then.if.end.i_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then.i:                                        ; preds = %if.then
  %4 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rq, align 8
  %poll_stat.i.i = getelementptr inbounds %struct.request_queue, ptr %5, i32 0, i32 28
  %6 = ptrtoint ptr %poll_stat.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %poll_stat.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %if.then.i.blk_mq_poll_stats_start.exit.i_crit_edge, label %lor.lhs.false.i.i

if.then.i.blk_mq_poll_stats_start.exit.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_poll_stats_start.exit.i

lor.lhs.false.i.i:                                ; preds = %if.then.i
  %poll_cb.i.i = getelementptr inbounds %struct.request_queue, ptr %5, i32 0, i32 27
  %8 = ptrtoint ptr %poll_cb.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %poll_cb.i.i, align 8
  %pprev.i.i.i.i.i = getelementptr inbounds %struct.blk_stat_callback, ptr %9, i32 0, i32 1, i32 0, i32 1
  %10 = ptrtoint ptr %pprev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %pprev.i.i.i.i.i, align 4
  %tobool.not.i.i.i.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i.i.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.blk_mq_poll_stats_start.exit.i_crit_edge

lor.lhs.false.i.i.blk_mq_poll_stats_start.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_poll_stats_start.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %timer.i.i.i = getelementptr inbounds %struct.blk_stat_callback, ptr %9, i32 0, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %12 = load volatile i32, ptr @jiffies, align 128
  %add.i.i.i = add i32 %12, 10
  %call1.i.i.i = tail call i32 @mod_timer(ptr noundef %timer.i.i.i, i32 noundef %add.i.i.i) #20
  br label %blk_mq_poll_stats_start.exit.i

blk_mq_poll_stats_start.exit.i:                   ; preds = %if.end.i.i, %lor.lhs.false.i.i.blk_mq_poll_stats_start.exit.i_crit_edge, %if.then.i.blk_mq_poll_stats_start.exit.i_crit_edge
  tail call void @blk_stat_add(ptr noundef %rq, i64 noundef %call.i) #20
  br label %if.end.i

if.end.i:                                         ; preds = %blk_mq_poll_stats_start.exit.i, %if.then.if.end.i_crit_edge
  %13 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rq_flags.i, align 8
  %and.i.i = and i32 %14, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i7.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i7.i, label %if.end.i.__blk_mq_end_request_acct.exit_crit_edge, label %if.then.i.i

if.end.i.__blk_mq_end_request_acct.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_end_request_acct.exit

if.then.i.i:                                      ; preds = %if.end.i
  %15 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rq, align 8
  %elevator.i.i = getelementptr inbounds %struct.request_queue, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %elevator.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %elevator.i.i, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %18, align 4
  %completed_request.i.i = getelementptr inbounds %struct.elevator_type, ptr %20, i32 0, i32 1, i32 16
  %21 = ptrtoint ptr %completed_request.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %completed_request.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %22, null
  br i1 %tobool1.not.i.i, label %if.then.i.i.__blk_mq_end_request_acct.exit_crit_edge, label %if.then2.i.i

if.then.i.i.__blk_mq_end_request_acct.exit_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_end_request_acct.exit

if.then2.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %22(ptr noundef %rq, i64 noundef %call.i) #20
  br label %__blk_mq_end_request_acct.exit

__blk_mq_end_request_acct.exit:                   ; preds = %if.then2.i.i, %if.then.i.i.__blk_mq_end_request_acct.exit_crit_edge, %if.end.i.__blk_mq_end_request_acct.exit_crit_edge
  tail call fastcc void @blk_account_io_done(ptr noundef %rq, i64 noundef %call.i) #20
  br label %if.end

if.end:                                           ; preds = %__blk_mq_end_request_acct.exit, %entry.if.end_crit_edge
  %end_io = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 32
  %23 = ptrtoint ptr %end_io to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %end_io, align 8
  %tobool.not = icmp eq ptr %24, null
  br i1 %tobool.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  %25 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %rq, align 8
  %rq_qos.i = getelementptr inbounds %struct.request_queue, ptr %26, i32 0, i32 4
  %27 = ptrtoint ptr %rq_qos.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_qos.i, align 4
  %tobool.not.i14 = icmp eq ptr %28, null
  br i1 %tobool.not.i14, label %if.then2.rq_qos_done.exit_crit_edge, label %if.then.i15

if.then2.rq_qos_done.exit_crit_edge:              ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #22
  br label %rq_qos_done.exit

if.then.i15:                                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__rq_qos_done(ptr noundef nonnull %28, ptr noundef %rq) #20
  br label %rq_qos_done.exit

rq_qos_done.exit:                                 ; preds = %if.then.i15, %if.then2.rq_qos_done.exit_crit_edge
  %29 = ptrtoint ptr %end_io to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %end_io, align 8
  tail call void %30(ptr noundef %rq, i8 noundef zeroext %error) #20
  br label %if.end4

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_free_request(ptr noundef %rq)
  br label %if.end4

if.end4:                                          ; preds = %if.else, %rq_qos_done.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_end_request(ptr noundef %rq, i8 noundef zeroext %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %__data_len.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 8
  %0 = ptrtoint ptr %__data_len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %__data_len.i, align 8
  %call1 = tail call zeroext i1 @blk_update_request(ptr noundef %rq, i8 noundef zeroext %error, i32 noundef %1)
  br i1 %call1, label %do.body, label %if.end

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 933, 0\0A.popsection", ""() #20, !srcloc !319
  unreachable

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__blk_mq_end_request(ptr noundef %rq, i8 noundef zeroext %error)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_end_request_batch(ptr noundef %iob) #0 align 64 {
entry:
  %tags = alloca [32 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %tags) #20
  %0 = call ptr @memset(ptr %tags, i32 255, i32 128)
  %need_ts = getelementptr inbounds %struct.io_comp_batch, ptr %iob, i32 0, i32 1
  %1 = ptrtoint ptr %need_ts to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %need_ts, align 4, !range !320
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call i64 @ktime_get() #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %now.0 = phi i64 [ %call.i, %if.then ], [ 0, %entry.if.end_crit_edge ]
  %tobool1.not = icmp eq ptr %iob, null
  br i1 %tobool1.not, label %if.end.if.end32_crit_edge, label %if.end.while.cond.preheader_crit_edge

if.end.while.cond.preheader_crit_edge:            ; preds = %if.end
  br label %while.cond.preheader

if.end.if.end32_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end32

while.cond.preheader:                             ; preds = %if.end28.while.cond.preheader_crit_edge, %if.end.while.cond.preheader_crit_edge
  %nr_tags.0.ph119 = phi i32 [ %inc, %if.end28.while.cond.preheader_crit_edge ], [ 0, %if.end.while.cond.preheader_crit_edge ]
  %cur_hctx.0.ph118 = phi ptr [ %cur_hctx.1, %if.end28.while.cond.preheader_crit_edge ], [ null, %if.end.while.cond.preheader_crit_edge ]
  br label %while.cond

while.cond:                                       ; preds = %req_ref_put_and_test.exit.while.cond_crit_edge, %while.cond.preheader
  %3 = ptrtoint ptr %iob to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %iob, align 4
  %tobool3.not = icmp eq ptr %4, null
  br i1 %tobool3.not, label %while.end.split, label %while.body

while.body:                                       ; preds = %while.cond
  %5 = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 12
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  %8 = ptrtoint ptr %iob to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %iob, align 4
  %bio = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 10
  %9 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bio, align 8
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %10) #20, !srcloc !301
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %5, align 8
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %12) #20, !srcloc !301
  %rq_flags.i = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 4
  %13 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rq_flags.i, align 8
  %and.i = and i32 %14, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp.not.i = icmp eq i32 %and.i, 0
  %__data_len.i.i = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 8
  %15 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %__data_len.i.i, align 8
  %17 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bio, align 8
  call fastcc void @trace_block_rq_complete(ptr noundef nonnull %4, i8 noundef zeroext 0, i32 noundef %16) #20
  %tobool.not.i = icmp eq ptr %18, null
  br i1 %tobool.not.i, label %while.body.blk_complete_request.exit_crit_edge, label %if.end.i

while.body.blk_complete_request.exit_crit_edge:   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_complete_request.exit

if.end.i:                                         ; preds = %while.body
  %cmd_flags.i.i = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 3
  %19 = ptrtoint ptr %cmd_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cmd_flags.i.i, align 4
  %21 = and i32 %20, 65791
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %21)
  %22 = icmp eq i32 %21, 65536
  br i1 %22, label %if.then5.i, label %if.end.i.if.end6.i_crit_edge

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6.i

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %23 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %4, align 8
  %integrity.i = getelementptr inbounds %struct.request_queue, ptr %24, i32 0, i32 18
  %25 = ptrtoint ptr %integrity.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %integrity.i, align 8
  %complete_fn.i = getelementptr inbounds %struct.blk_integrity_profile, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %complete_fn.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %complete_fn.i, align 4
  call void %28(ptr noundef nonnull %4, i32 noundef %16) #20
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then5.i, %if.end.i.if.end6.i_crit_edge
  call fastcc void @blk_account_io_completion(ptr noundef nonnull %4, i32 noundef %16) #20
  %__sector.i = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 9
  br label %do.body.i

do.body.i:                                        ; preds = %if.end14.i.do.body.i_crit_edge, %if.end6.i
  %bio.0.i = phi ptr [ %18, %if.end6.i ], [ %30, %if.end14.i.do.body.i_crit_edge ]
  %29 = ptrtoint ptr %bio.0.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %bio.0.i, align 8
  %bi_flags.i.i = getelementptr inbounds %struct.bio, ptr %bio.0.i, i32 0, i32 3
  %31 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %bi_flags.i.i, align 4
  %33 = and i16 %32, -257
  store i16 %33, ptr %bi_flags.i.i, align 4
  %34 = ptrtoint ptr %cmd_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cmd_flags.i.i, align 4
  %and8.i = and i32 %35, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %and8.i)
  %cmp9.i = icmp eq i32 %and8.i, 13
  br i1 %cmp9.i, label %if.then10.i, label %do.body.i.if.end11.i_crit_edge

do.body.i.if.end11.i_crit_edge:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11.i

if.then10.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %36 = ptrtoint ptr %__sector.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %__sector.i, align 8
  %bi_iter.i = getelementptr inbounds %struct.bio, ptr %bio.0.i, i32 0, i32 8
  %38 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %bi_iter.i, align 8
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i, %do.body.i.if.end11.i_crit_edge
  br i1 %cmp.not.i, label %if.then13.i, label %if.end11.i.if.end14.i_crit_edge

if.end11.i.if.end14.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end14.i

if.then13.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @bio_endio(ptr noundef nonnull %bio.0.i) #20
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then13.i, %if.end11.i.if.end14.i_crit_edge
  %tobool15.not.i = icmp eq ptr %30, null
  br i1 %tobool15.not.i, label %do.end.i, label %if.end14.i.do.body.i_crit_edge

if.end14.i.do.body.i_crit_edge:                   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

do.end.i:                                         ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #22
  %39 = ptrtoint ptr %bio to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %bio, align 8
  %40 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 0, ptr %__data_len.i.i, align 8
  br label %blk_complete_request.exit

blk_complete_request.exit:                        ; preds = %do.end.i, %while.body.blk_complete_request.exit_crit_edge
  %41 = ptrtoint ptr %need_ts to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %need_ts, align 4, !range !320
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool9.not = icmp eq i8 %42, 0
  br i1 %tobool9.not, label %blk_complete_request.exit.if.end11_crit_edge, label %if.then10

blk_complete_request.exit.if.end11_crit_edge:     ; preds = %blk_complete_request.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11

if.then10:                                        ; preds = %blk_complete_request.exit
  %43 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rq_flags.i, align 8
  %and.i59 = and i32 %44, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i59)
  %tobool.not.i60 = icmp eq i32 %and.i59, 0
  br i1 %tobool.not.i60, label %if.then10.if.end.i61_crit_edge, label %if.then.i

if.then10.if.end.i61_crit_edge:                   ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i61

if.then.i:                                        ; preds = %if.then10
  %45 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %4, align 8
  %poll_stat.i.i = getelementptr inbounds %struct.request_queue, ptr %46, i32 0, i32 28
  %47 = ptrtoint ptr %poll_stat.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %poll_stat.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %48, null
  br i1 %tobool.not.i.i, label %if.then.i.blk_mq_poll_stats_start.exit.i_crit_edge, label %lor.lhs.false.i.i

if.then.i.blk_mq_poll_stats_start.exit.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_poll_stats_start.exit.i

lor.lhs.false.i.i:                                ; preds = %if.then.i
  %poll_cb.i.i = getelementptr inbounds %struct.request_queue, ptr %46, i32 0, i32 27
  %49 = ptrtoint ptr %poll_cb.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %poll_cb.i.i, align 8
  %pprev.i.i.i.i.i = getelementptr inbounds %struct.blk_stat_callback, ptr %50, i32 0, i32 1, i32 0, i32 1
  %51 = ptrtoint ptr %pprev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %pprev.i.i.i.i.i, align 4
  %tobool.not.i.i.i.not.i.i = icmp eq ptr %52, null
  br i1 %tobool.not.i.i.i.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.blk_mq_poll_stats_start.exit.i_crit_edge

lor.lhs.false.i.i.blk_mq_poll_stats_start.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_poll_stats_start.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %timer.i.i.i = getelementptr inbounds %struct.blk_stat_callback, ptr %50, i32 0, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %53 = load volatile i32, ptr @jiffies, align 128
  %add.i.i.i = add i32 %53, 10
  %call1.i.i.i = call i32 @mod_timer(ptr noundef %timer.i.i.i, i32 noundef %add.i.i.i) #20
  br label %blk_mq_poll_stats_start.exit.i

blk_mq_poll_stats_start.exit.i:                   ; preds = %if.end.i.i, %lor.lhs.false.i.i.blk_mq_poll_stats_start.exit.i_crit_edge, %if.then.i.blk_mq_poll_stats_start.exit.i_crit_edge
  call void @blk_stat_add(ptr noundef %4, i64 noundef %now.0) #20
  br label %if.end.i61

if.end.i61:                                       ; preds = %blk_mq_poll_stats_start.exit.i, %if.then10.if.end.i61_crit_edge
  %54 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %rq_flags.i, align 8
  %and.i.i = and i32 %55, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i7.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i7.i, label %if.end.i61.__blk_mq_end_request_acct.exit_crit_edge, label %if.then.i.i

if.end.i61.__blk_mq_end_request_acct.exit_crit_edge: ; preds = %if.end.i61
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_end_request_acct.exit

if.then.i.i:                                      ; preds = %if.end.i61
  %56 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %4, align 8
  %elevator.i.i = getelementptr inbounds %struct.request_queue, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %elevator.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %elevator.i.i, align 4
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %59, align 4
  %completed_request.i.i = getelementptr inbounds %struct.elevator_type, ptr %61, i32 0, i32 1, i32 16
  %62 = ptrtoint ptr %completed_request.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %completed_request.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %63, null
  br i1 %tobool1.not.i.i, label %if.then.i.i.__blk_mq_end_request_acct.exit_crit_edge, label %if.then2.i.i

if.then.i.i.__blk_mq_end_request_acct.exit_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_end_request_acct.exit

if.then2.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void %63(ptr noundef %4, i64 noundef %now.0) #20
  br label %__blk_mq_end_request_acct.exit

__blk_mq_end_request_acct.exit:                   ; preds = %if.then2.i.i, %if.then.i.i.__blk_mq_end_request_acct.exit_crit_edge, %if.end.i61.__blk_mq_end_request_acct.exit_crit_edge
  call fastcc void @blk_account_io_done(ptr noundef %4, i64 noundef %now.0) #20
  br label %if.end11

if.end11:                                         ; preds = %__blk_mq_end_request_acct.exit, %blk_complete_request.exit.if.end11_crit_edge
  %64 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %4, align 8
  %rq_qos.i = getelementptr inbounds %struct.request_queue, ptr %65, i32 0, i32 4
  %66 = ptrtoint ptr %rq_qos.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %rq_qos.i, align 4
  %tobool.not.i62 = icmp eq ptr %67, null
  br i1 %tobool.not.i62, label %if.end11.rq_qos_done.exit_crit_edge, label %if.then.i63

if.end11.rq_qos_done.exit_crit_edge:              ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %rq_qos_done.exit

if.then.i63:                                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  call void @__rq_qos_done(ptr noundef nonnull %67, ptr noundef %4) #20
  br label %rq_qos_done.exit

rq_qos_done.exit:                                 ; preds = %if.then.i63, %if.end11.rq_qos_done.exit_crit_edge
  %state = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 25
  %68 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %68)
  store volatile i32 0, ptr %state, align 4
  %ref.i = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 26
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %ref.i, i32 noundef 4) #20
  %69 = ptrtoint ptr %ref.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %ref.i, align 4
  %add.i = add i32 %70, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i)
  %cmp.i = icmp ult i32 %add.i, 128
  br i1 %cmp.i, label %land.rhs.i, label %rq_qos_done.exit.req_ref_put_and_test.exit_crit_edge

rq_qos_done.exit.req_ref_put_and_test.exit_crit_edge: ; preds = %rq_qos_done.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %req_ref_put_and_test.exit

land.rhs.i:                                       ; preds = %rq_qos_done.exit
  %.b40.i = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.req_ref_put_and_test.exit_crit_edge, label %if.then.i65, !prof !298

land.rhs.i.req_ref_put_and_test.exit_crit_edge:   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %req_ref_put_and_test.exit

if.then.i65:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 495, i32 noundef 9, ptr noundef null) #20
  br label %req_ref_put_and_test.exit

req_ref_put_and_test.exit:                        ; preds = %if.then.i65, %land.rhs.i.req_ref_put_and_test.exit_crit_edge, %rq_qos_done.exit.req_ref_put_and_test.exit_crit_edge
  %call.i.i41.i = call zeroext i1 @__kasan_check_write(ptr noundef %ref.i, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !309
  call void @llvm.prefetch.p0(ptr %ref.i, i32 1, i32 3, i32 1) #20
  %71 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ref.i, ptr %ref.i, i32 1, ptr elementtype(i32) %ref.i) #20, !srcloc !310
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %71, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !311
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.end20, label %req_ref_put_and_test.exit.while.cond_crit_edge

req_ref_put_and_test.exit.while.cond_crit_edge:   ; preds = %req_ref_put_and_test.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond

if.end20:                                         ; preds = %req_ref_put_and_test.exit
  %crypt_ctx.i.i = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 21
  %72 = ptrtoint ptr %crypt_ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %crypt_ctx.i.i, align 8
  %tobool.i.not.i = icmp eq ptr %73, null
  br i1 %tobool.i.not.i, label %if.end20.blk_crypto_free_request.exit_crit_edge, label %if.then.i66

if.end20.blk_crypto_free_request.exit_crit_edge:  ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_crypto_free_request.exit

if.then.i66:                                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #22
  call void @__blk_crypto_free_request(ptr noundef %4) #20
  br label %blk_crypto_free_request.exit

blk_crypto_free_request.exit:                     ; preds = %if.then.i66, %if.end20.blk_crypto_free_request.exit_crit_edge
  %74 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %4, align 8
  %dev.i = getelementptr inbounds %struct.request_queue, ptr %75, i32 0, i32 19
  %76 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %dev.i, align 8
  %tobool.not.i68 = icmp eq ptr %77, null
  br i1 %tobool.not.i68, label %blk_crypto_free_request.exit.blk_pm_mark_last_busy.exit_crit_edge, label %land.lhs.true.i

blk_crypto_free_request.exit.blk_pm_mark_last_busy.exit_crit_edge: ; preds = %blk_crypto_free_request.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_pm_mark_last_busy.exit

land.lhs.true.i:                                  ; preds = %blk_crypto_free_request.exit
  %78 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %rq_flags.i, align 8
  %and.i70 = and i32 %79, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i70)
  %tobool1.not.i = icmp eq i32 %and.i70, 0
  br i1 %tobool1.not.i, label %if.then.i71, label %land.lhs.true.i.blk_pm_mark_last_busy.exit_crit_edge

land.lhs.true.i.blk_pm_mark_last_busy.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_pm_mark_last_busy.exit

if.then.i71:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i = call i64 @ktime_get_mono_fast_ns() #20
  %last_busy.i.i = getelementptr inbounds %struct.device, ptr %77, i32 0, i32 12, i32 22
  %80 = ptrtoint ptr %last_busy.i.i to i32
  call void @__asan_store8_noabort(i32 %80)
  store volatile i64 %call.i.i, ptr %last_busy.i.i, align 8
  br label %blk_pm_mark_last_busy.exit

blk_pm_mark_last_busy.exit:                       ; preds = %if.then.i71, %land.lhs.true.i.blk_pm_mark_last_busy.exit_crit_edge, %blk_crypto_free_request.exit.blk_pm_mark_last_busy.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %nr_tags.0.ph119)
  %cmp21 = icmp eq i32 %nr_tags.0.ph119, 32
  br i1 %cmp21, label %blk_pm_mark_last_busy.exit.if.then23_crit_edge, label %lor.lhs.false

blk_pm_mark_last_busy.exit.if.then23_crit_edge:   ; preds = %blk_pm_mark_last_busy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then23

lor.lhs.false:                                    ; preds = %blk_pm_mark_last_busy.exit
  %mq_hctx = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 2
  %81 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %mq_hctx, align 8
  %cmp22.not = icmp eq ptr %cur_hctx.0.ph118, %82
  br i1 %cmp22.not, label %lor.lhs.false.if.end28_crit_edge, label %lor.lhs.false.if.then23_crit_edge

lor.lhs.false.if.then23_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then23

lor.lhs.false.if.end28_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.then23:                                        ; preds = %lor.lhs.false.if.then23_crit_edge, %blk_pm_mark_last_busy.exit.if.then23_crit_edge
  %tobool24.not = icmp eq ptr %cur_hctx.0.ph118, null
  br i1 %tobool24.not, label %if.then23.if.end26_crit_edge, label %if.then25

if.then23.if.end26_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

if.then25:                                        ; preds = %if.then23
  %queue.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %cur_hctx.0.ph118, i32 0, i32 7
  %83 = ptrtoint ptr %queue.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %queue.i, align 8
  %flags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %cur_hctx.0.ph118, i32 0, i32 5
  %85 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %flags.i, align 16
  %and.i73 = and i32 %86, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i73)
  %tobool.not.i74 = icmp eq i32 %and.i73, 0
  br i1 %tobool.not.i74, label %if.then25.blk_mq_flush_tag_batch.exit_crit_edge, label %if.then.i75

if.then25.blk_mq_flush_tag_batch.exit_crit_edge:  ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_flush_tag_batch.exit

if.then.i75:                                      ; preds = %if.then25
  %and.i.i.i = and i32 %86, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.else.i.i, label %if.then.i.i76

if.then.i.i76:                                    ; preds = %if.then.i75
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active_requests_shared_tags.i.i = getelementptr inbounds %struct.request_queue, ptr %84, i32 0, i32 31
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %nr_active_requests_shared_tags.i.i, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %nr_active_requests_shared_tags.i.i, i32 1, i32 3, i32 1) #20
  %87 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active_requests_shared_tags.i.i, ptr %nr_active_requests_shared_tags.i.i, i32 %nr_tags.0.ph119, ptr elementtype(i32) %nr_active_requests_shared_tags.i.i) #20, !srcloc !308
  br label %blk_mq_flush_tag_batch.exit

if.else.i.i:                                      ; preds = %if.then.i75
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %cur_hctx.0.ph118, i32 0, i32 25
  %call.i.i4.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %nr_active.i.i, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %nr_active.i.i, i32 1, i32 3, i32 1) #20
  %88 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active.i.i, ptr %nr_active.i.i, i32 %nr_tags.0.ph119, ptr elementtype(i32) %nr_active.i.i) #20, !srcloc !308
  br label %blk_mq_flush_tag_batch.exit

blk_mq_flush_tag_batch.exit:                      ; preds = %if.else.i.i, %if.then.i.i76, %if.then25.blk_mq_flush_tag_batch.exit_crit_edge
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %cur_hctx.0.ph118, i32 0, i32 19
  %89 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %tags.i, align 16
  call void @blk_mq_put_tags(ptr noundef %90, ptr noundef nonnull %tags, i32 noundef %nr_tags.0.ph119) #20
  %q_usage_counter.i = getelementptr inbounds %struct.request_queue, ptr %84, i32 0, i32 2
  call fastcc void @percpu_ref_put_many(ptr noundef %q_usage_counter.i, i32 noundef %nr_tags.0.ph119) #20
  br label %if.end26

if.end26:                                         ; preds = %blk_mq_flush_tag_batch.exit, %if.then23.if.end26_crit_edge
  %mq_hctx27 = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 2
  %91 = ptrtoint ptr %mq_hctx27 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %mq_hctx27, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.end26, %lor.lhs.false.if.end28_crit_edge
  %cur_hctx.1 = phi ptr [ %92, %if.end26 ], [ %cur_hctx.0.ph118, %lor.lhs.false.if.end28_crit_edge ]
  %nr_tags.1 = phi i32 [ 0, %if.end26 ], [ %nr_tags.0.ph119, %lor.lhs.false.if.end28_crit_edge ]
  %tag = getelementptr inbounds %struct.request, ptr %4, i32 0, i32 5
  %93 = ptrtoint ptr %tag to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %tag, align 4
  %inc = add i32 %nr_tags.1, 1
  %arrayidx = getelementptr [32 x i32], ptr %tags, i32 0, i32 %nr_tags.1
  %95 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %94, ptr %arrayidx, align 4
  br i1 %tobool1.not, label %if.end28.if.end32_crit_edge, label %if.end28.while.cond.preheader_crit_edge

if.end28.while.cond.preheader_crit_edge:          ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond.preheader

if.end28.if.end32_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end32

while.end.split:                                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_tags.0.ph119)
  %tobool29.not = icmp eq i32 %nr_tags.0.ph119, 0
  br i1 %tobool29.not, label %while.end.split.if.end32_crit_edge, label %if.then30

while.end.split.if.end32_crit_edge:               ; preds = %while.end.split
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end32

if.then30:                                        ; preds = %while.end.split
  %queue.i78 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %cur_hctx.0.ph118, i32 0, i32 7
  %96 = ptrtoint ptr %queue.i78 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %queue.i78, align 8
  %flags.i79 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %cur_hctx.0.ph118, i32 0, i32 5
  %98 = ptrtoint ptr %flags.i79 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %flags.i79, align 16
  %and.i80 = and i32 %99, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i80)
  %tobool.not.i81 = icmp eq i32 %and.i80, 0
  br i1 %tobool.not.i81, label %if.then30.blk_mq_flush_tag_batch.exit94_crit_edge, label %if.then.i84

if.then30.blk_mq_flush_tag_batch.exit94_crit_edge: ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_flush_tag_batch.exit94

if.then.i84:                                      ; preds = %if.then30
  %and.i.i.i82 = and i32 %99, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i82)
  %tobool.i.not.i.i83 = icmp eq i32 %and.i.i.i82, 0
  br i1 %tobool.i.not.i.i83, label %if.else.i.i90, label %if.then.i.i87

if.then.i.i87:                                    ; preds = %if.then.i84
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active_requests_shared_tags.i.i85 = getelementptr inbounds %struct.request_queue, ptr %97, i32 0, i32 31
  %call.i.i.i.i86 = call zeroext i1 @__kasan_check_write(ptr noundef %nr_active_requests_shared_tags.i.i85, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %nr_active_requests_shared_tags.i.i85, i32 1, i32 3, i32 1) #20
  %100 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active_requests_shared_tags.i.i85, ptr %nr_active_requests_shared_tags.i.i85, i32 %nr_tags.0.ph119, ptr elementtype(i32) %nr_active_requests_shared_tags.i.i85) #20, !srcloc !308
  br label %blk_mq_flush_tag_batch.exit94

if.else.i.i90:                                    ; preds = %if.then.i84
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active.i.i88 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %cur_hctx.0.ph118, i32 0, i32 25
  %call.i.i4.i.i89 = call zeroext i1 @__kasan_check_write(ptr noundef %nr_active.i.i88, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %nr_active.i.i88, i32 1, i32 3, i32 1) #20
  %101 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active.i.i88, ptr %nr_active.i.i88, i32 %nr_tags.0.ph119, ptr elementtype(i32) %nr_active.i.i88) #20, !srcloc !308
  br label %blk_mq_flush_tag_batch.exit94

blk_mq_flush_tag_batch.exit94:                    ; preds = %if.else.i.i90, %if.then.i.i87, %if.then30.blk_mq_flush_tag_batch.exit94_crit_edge
  %tags.i91 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %cur_hctx.0.ph118, i32 0, i32 19
  %102 = ptrtoint ptr %tags.i91 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %tags.i91, align 16
  call void @blk_mq_put_tags(ptr noundef %103, ptr noundef nonnull %tags, i32 noundef %nr_tags.0.ph119) #20
  %q_usage_counter.i92 = getelementptr inbounds %struct.request_queue, ptr %97, i32 0, i32 2
  call fastcc void @percpu_ref_put_many(ptr noundef %q_usage_counter.i92, i32 noundef %nr_tags.0.ph119) #20
  br label %if.end32

if.end32:                                         ; preds = %blk_mq_flush_tag_batch.exit94, %while.end.split.if.end32_crit_edge, %if.end28.if.end32_crit_edge, %if.end.if.end32_crit_edge
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %tags) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @blk_mq_complete_request_remote(ptr noundef %rq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 25
  %0 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile i32 2, ptr %state, align 4
  %cmd_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 3
  %1 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cmd_flags, align 4
  %3 = and i32 %2, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %entry
  %4 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %cpu1.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu1.i, align 4
  %8 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rq, align 8
  %queue_flags.i = getelementptr inbounds %struct.request_queue, ptr %9, i32 0, i32 11
  %10 = ptrtoint ptr %queue_flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %queue_flags.i, align 4
  %12 = and i32 %11, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i, label %if.end.if.end6_crit_edge, label %if.end.i

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @force_irqthreads_key, ptr blockaddress(@blk_mq_complete_request_remote, %if.end6)) #20
          to label %if.end8.i [label %if.end6], !srcloc !312

if.end8.i:                                        ; preds = %if.end.i
  %mq_ctx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 1
  %13 = ptrtoint ptr %mq_ctx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mq_ctx.i, align 4
  %cpu9.i = getelementptr inbounds %struct.blk_mq_ctx, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %cpu9.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu9.i, align 128
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %16)
  %cmp.i = icmp eq i32 %7, %16
  br i1 %cmp.i, label %if.end8.i.if.end6_crit_edge, label %lor.lhs.false.i

if.end8.i.if.end6_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

lor.lhs.false.i:                                  ; preds = %if.end8.i
  %17 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rq, align 8
  %queue_flags11.i = getelementptr inbounds %struct.request_queue, ptr %18, i32 0, i32 11
  %19 = ptrtoint ptr %queue_flags11.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %queue_flags11.i, align 4
  %21 = and i32 %20, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool13.not.i = icmp eq i32 %21, 0
  br i1 %tobool13.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.if.end18.i_crit_edge

lor.lhs.false.i.if.end18.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call16.i = tail call zeroext i1 @cpus_share_cache(i32 noundef %7, i32 noundef %16) #20
  br i1 %call16.i, label %land.lhs.true.i.if.end6_crit_edge, label %land.lhs.true.i.if.end18.i_crit_edge

land.lhs.true.i.if.end18.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18.i

land.lhs.true.i.if.end6_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.end18.i:                                       ; preds = %land.lhs.true.i.if.end18.i_crit_edge, %lor.lhs.false.i.if.end18.i_crit_edge
  %22 = ptrtoint ptr %mq_ctx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %mq_ctx.i, align 4
  %cpu20.i = getelementptr inbounds %struct.blk_mq_ctx, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %cpu20.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cpu20.i, align 128
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %26 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %25)
  %cmp.not.i.i.i.i.i = icmp ugt i32 %26, %25
  br i1 %cmp.not.i.i.i.i.i, label %if.end18.i.cpu_online.exit.i_crit_edge, label %land.rhs.i.i.i.i.i

if.end18.i.cpu_online.exit.i_crit_edge:           ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit.i

land.rhs.i.i.i.i.i:                               ; preds = %if.end18.i
  %.b37.i.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i.i, label %land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge, label %if.then.i.i.i.i.i, !prof !298

land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge:   ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit.i

if.then.i.i.i.i.i:                                ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit.i

cpu_online.exit.i:                                ; preds = %if.then.i.i.i.i.i, %land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge, %if.end18.i.cpu_online.exit.i_crit_edge
  %div3.i.i.i.i = lshr i32 %25, 5
  %arrayidx.i.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i.i
  %27 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %25, 31
  %29 = shl nuw i32 1, %and.i.i.i.i
  %30 = and i32 %28, %29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.i.i.not = icmp eq i32 %30, 0
  br i1 %tobool.i.i.not, label %cpu_online.exit.i.if.end6_crit_edge, label %if.then5

cpu_online.exit.i.if.end6_crit_edge:              ; preds = %cpu_online.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.then5:                                         ; preds = %cpu_online.exit.i
  %31 = ptrtoint ptr %mq_ctx.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %mq_ctx.i, align 4
  %cpu1.i16 = getelementptr inbounds %struct.blk_mq_ctx, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %cpu1.i16 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cpu1.i16, align 128
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %34
  %35 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %36, ptrtoint (ptr @blk_cpu_done to i32)
  %37 = inttoptr i32 %add.i to ptr
  %38 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 28
  %call.i.i = tail call zeroext i1 @llist_add_batch(ptr noundef %38, ptr noundef %38, ptr noundef %37) #20
  br i1 %call.i.i, label %do.body3.i, label %if.then5.return_crit_edge

if.then5.return_crit_edge:                        ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

do.body3.i:                                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #22
  %39 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 31
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 0, ptr %39, align 8
  %.compoundliteral.sroa.2.0..sroa_idx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 31, i32 1
  %41 = ptrtoint ptr %.compoundliteral.sroa.2.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @__blk_mq_complete_request_remote, ptr %.compoundliteral.sroa.2.0..sroa_idx.i, align 8
  %.compoundliteral.sroa.3.0..sroa_idx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 31, i32 1, i32 4
  %42 = ptrtoint ptr %.compoundliteral.sroa.3.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %rq, ptr %.compoundliteral.sroa.3.0..sroa_idx.i, align 4
  %call6.i = tail call i32 @smp_call_function_single_async(i32 noundef %34, ptr noundef %39) #20
  br label %return

if.end6:                                          ; preds = %cpu_online.exit.i.if.end6_crit_edge, %land.lhs.true.i.if.end6_crit_edge, %if.end8.i.if.end6_crit_edge, %if.end.i, %if.end.if.end6_crit_edge
  %43 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %rq, align 8
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %44, i32 0, i32 9
  %45 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %46)
  %cmp = icmp eq i32 %46, 1
  br i1 %cmp, label %if.then8, label %if.end6.return_crit_edge

if.end6.return_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then8:                                         ; preds = %if.end6
  %47 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i18 = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i.i.i18 to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %50, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !321
  %51 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i19 = and i32 %51, -16384
  %52 = inttoptr i32 %and.i.i19 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 3
  %53 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %cpu.i, align 4
  %arrayidx.i20 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %54
  %55 = ptrtoint ptr %arrayidx.i20 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx.i20, align 4
  %add.i21 = add i32 %56, ptrtoint (ptr @blk_cpu_done to i32)
  %57 = inttoptr i32 %add.i21 to ptr
  %58 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 28
  %call.i.i22 = tail call zeroext i1 @llist_add_batch(ptr noundef %58, ptr noundef %58, ptr noundef %57) #20
  br i1 %call.i.i22, label %if.then.i, label %if.then8.blk_mq_raise_softirq.exit_crit_edge

if.then8.blk_mq_raise_softirq.exit_crit_edge:     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_raise_softirq.exit

if.then.i:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @raise_softirq(i32 noundef 4) #20
  br label %blk_mq_raise_softirq.exit

blk_mq_raise_softirq.exit:                        ; preds = %if.then.i, %if.then8.blk_mq_raise_softirq.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !322
  %59 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i9.i = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i.i9.i to ptr
  %preempt_count.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %preempt_count.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %preempt_count.i.i10.i, align 4
  %sub.i.i = add i32 %62, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i10.i, align 4
  br label %return

return:                                           ; preds = %blk_mq_raise_softirq.exit, %if.end6.return_crit_edge, %do.body3.i, %if.then5.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ true, %blk_mq_raise_softirq.exit ], [ false, %entry.return_crit_edge ], [ false, %if.end6.return_crit_edge ], [ true, %if.then5.return_crit_edge ], [ true, %do.body3.i ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_complete_request(ptr noundef %rq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @blk_mq_complete_request_remote(ptr noundef %rq)
  br i1 %call, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq, align 8
  %mq_ops = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %mq_ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mq_ops, align 8
  %complete = getelementptr inbounds %struct.blk_mq_ops, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %complete to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %complete, align 4
  tail call void %5(ptr noundef %rq) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_start_request(ptr noundef %rq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq, align 8
  tail call fastcc void @trace_block_rq_issue(ptr noundef %rq)
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %queue_flags, align 4
  %4 = and i32 %3, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end8_crit_edge, label %if.then

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.then:                                          ; preds = %entry
  %bio = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %5 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bio, align 8
  %tobool2.not = icmp eq ptr %6, null
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %bi_issue = getelementptr inbounds %struct.bio, ptr %6, i32 0, i32 13
  %7 = ptrtoint ptr %bi_issue to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %bi_issue, align 8
  %and.i.i = and i64 %8, 2251799813685247
  br label %if.end

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call i64 @ktime_get() #20
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %start_time.0 = phi i64 [ %and.i.i, %if.then3 ], [ %call.i, %if.else ]
  %io_start_time_ns = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 16
  %9 = ptrtoint ptr %io_start_time_ns to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %start_time.0, ptr %io_start_time_ns, align 8
  %__data_len.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 8
  %10 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_len.i.i, align 8
  %shr.i108 = lshr i32 %11, 9
  %conv = trunc i32 %shr.i108 to i16
  %stats_sectors = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 18
  %12 = ptrtoint ptr %stats_sectors to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %conv, ptr %stats_sectors, align 2
  %rq_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %13 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rq_flags, align 8
  %or = or i32 %14, 131072
  store i32 %or, ptr %rq_flags, align 8
  %rq_qos.i = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 4
  %15 = ptrtoint ptr %rq_qos.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rq_qos.i, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %if.end.if.end8_crit_edge, label %if.then.i

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__rq_qos_issue(ptr noundef nonnull %16, ptr noundef %rq) #20
  br label %if.end8

if.end8:                                          ; preds = %if.then.i, %if.end.if.end8_crit_edge, %entry.if.end8_crit_edge
  %state.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 25
  %17 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.not = icmp eq i32 %18, 0
  br i1 %cmp.not, label %if.end8.if.end41_crit_edge, label %land.rhs

if.end8.if.end41_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end41

land.rhs:                                         ; preds = %if.end8
  %.b107 = load i1, ptr @blk_mq_start_request.__already_done, align 1
  br i1 %.b107, label %land.rhs.if.end41_crit_edge, label %if.then19, !prof !298

land.rhs.if.end41_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end41

if.then19:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_start_request.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1138, i32 noundef 9, ptr noundef null) #20
  br label %if.end41

if.end41:                                         ; preds = %if.then19, %land.rhs.if.end41_crit_edge, %if.end8.if.end41_crit_edge
  tail call void @blk_add_timer(ptr noundef %rq) #20
  %19 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile i32 1, ptr %state.i, align 4
  %cmd_flags.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 3
  %20 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cmd_flags.i, align 4
  %22 = and i32 %21, 65791
  call void @__sanitizer_cov_trace_const_cmp4(i32 65537, i32 %22)
  %23 = icmp eq i32 %22, 65537
  br i1 %23, label %if.then62, label %if.end41.if.end63_crit_edge

if.end41.if.end63_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end63

if.then62:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #22
  %integrity = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 18
  %24 = ptrtoint ptr %integrity to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %integrity, align 8
  %prepare_fn = getelementptr inbounds %struct.blk_integrity_profile, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %prepare_fn to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prepare_fn, align 4
  tail call void %27(ptr noundef %rq) #20
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %if.end41.if.end63_crit_edge
  %bio64 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %28 = ptrtoint ptr %bio64 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %bio64, align 8
  %tobool65.not = icmp eq ptr %29, null
  br i1 %tobool65.not, label %if.end63.if.end83_crit_edge, label %land.lhs.true66

if.end63.if.end83_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end83

land.lhs.true66:                                  ; preds = %if.end63
  %bi_opf = getelementptr inbounds %struct.bio, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %bi_opf, align 8
  %32 = and i32 %31, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool70.not = icmp eq i32 %32, 0
  br i1 %tobool70.not, label %land.lhs.true66.if.end83_crit_edge, label %do.body76

land.lhs.true66.if.end83_crit_edge:               ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end83

do.body76:                                        ; preds = %land.lhs.true66
  %mq_hctx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %33 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %mq_hctx.i, align 8
  %queue_num.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %34, i32 0, i32 24
  %35 = ptrtoint ptr %queue_num.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %queue_num.i, align 4
  %tag.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 5
  %37 = ptrtoint ptr %tag.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %tag.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %38)
  %cmp.not.i = icmp eq i32 %38, -1
  br i1 %cmp.not.i, label %cond.false.i, label %do.body76.blk_rq_to_qc.exit_crit_edge

do.body76.blk_rq_to_qc.exit_crit_edge:            ; preds = %do.body76
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_rq_to_qc.exit

cond.false.i:                                     ; preds = %do.body76
  call void @__sanitizer_cov_trace_pc() #22
  %internal_tag.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 6
  %39 = ptrtoint ptr %internal_tag.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %internal_tag.i, align 8
  %or.i = or i32 %40, -2147483648
  br label %blk_rq_to_qc.exit

blk_rq_to_qc.exit:                                ; preds = %cond.false.i, %do.body76.blk_rq_to_qc.exit_crit_edge
  %cond.i = phi i32 [ %or.i, %cond.false.i ], [ %38, %do.body76.blk_rq_to_qc.exit_crit_edge ]
  %shl.i = shl i32 %36, 16
  %or2.i = or i32 %cond.i, %shl.i
  %bi_cookie = getelementptr inbounds %struct.bio, ptr %29, i32 0, i32 9
  %41 = ptrtoint ptr %bi_cookie to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile i32 %or2.i, ptr %bi_cookie, align 4
  br label %if.end83

if.end83:                                         ; preds = %blk_rq_to_qc.exit, %land.lhs.true66.if.end83_crit_edge, %if.end63.if.end83_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_block_rq_issue(ptr noundef %rq) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_issue, i32 0, i32 1), ptr blockaddress(@trace_block_rq_issue, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !312

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !298

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !323
  %call42 = tail call i32 @__traceiter_block_rq_issue(ptr noundef null, ptr noundef %rq) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !324
  %13 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !298

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !315
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_issue, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_issue, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_block_rq_issue.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_block_rq_issue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.24, i32 noundef 209, ptr noundef nonnull @.str.25) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !316
  %31 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_add_timer(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_execute_rq_nowait(ptr noundef %rq, i1 noundef zeroext %at_head, ptr noundef %done) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !304
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end20, !prof !298

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

do.end20:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1185, i32 noundef 9, ptr noundef null) #20
  br label %if.end

if.end:                                           ; preds = %do.end20, %entry.if.end_crit_edge
  %cmd_flags.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 3
  %1 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cmd_flags.i, align 4
  %3 = and i32 %2, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %3)
  %4 = icmp eq i32 %3, 34
  br i1 %4, label %if.end.if.end58_crit_edge, label %do.end52, !prof !298

if.end.if.end58_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end58

do.end52:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1186, i32 noundef 9, ptr noundef null) #20
  br label %if.end58

if.end58:                                         ; preds = %do.end52, %if.end.if.end58_crit_edge
  %end_io = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 32
  %5 = ptrtoint ptr %end_io to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %done, ptr %end_io, align 8
  %rq_flags.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %6 = ptrtoint ptr %rq_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rq_flags.i.i, align 8
  %and.i.i = and i32 %7, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end58.blk_account_io_start.exit_crit_edge, label %blk_do_io_stat.exit.i

if.end58.blk_account_io_start.exit_crit_edge:     ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_account_io_start.exit

blk_do_io_stat.exit.i:                            ; preds = %if.end58
  %8 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rq, align 8
  %disk.i.i = getelementptr inbounds %struct.request_queue, ptr %9, i32 0, i32 15
  %10 = ptrtoint ptr %disk.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %disk.i.i, align 8
  %tobool1.i.not.i = icmp eq ptr %11, null
  br i1 %tobool1.i.not.i, label %blk_do_io_stat.exit.i.blk_account_io_start.exit_crit_edge, label %if.then.i

blk_do_io_stat.exit.i.blk_account_io_start.exit_crit_edge: ; preds = %blk_do_io_stat.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_account_io_start.exit

if.then.i:                                        ; preds = %blk_do_io_stat.exit.i
  %bio.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %12 = ptrtoint ptr %bio.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %bio.i.i, align 8
  %tobool.not.i2.i = icmp eq ptr %13, null
  br i1 %tobool.not.i2.i, label %if.then.i.if.then6.i.i_crit_edge, label %land.lhs.true.i.i

if.then.i.if.then6.i.i_crit_edge:                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then6.i.i

land.lhs.true.i.i:                                ; preds = %if.then.i
  %bi_bdev.i.i = getelementptr inbounds %struct.bio, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %bi_bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bi_bdev.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %15, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.then6.i.i_crit_edge, label %land.lhs.true.i.i.__blk_account_io_start.exit.i_crit_edge

land.lhs.true.i.i.__blk_account_io_start.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_account_io_start.exit.i

land.lhs.true.i.i.if.then6.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then6.i.i

if.then6.i.i:                                     ; preds = %land.lhs.true.i.i.if.then6.i.i_crit_edge, %if.then.i.if.then6.i.i_crit_edge
  %part0.i.i = getelementptr inbounds %struct.gendisk, ptr %11, i32 0, i32 7
  %16 = ptrtoint ptr %part0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %part0.i.i, align 4
  br label %__blk_account_io_start.exit.i

__blk_account_io_start.exit.i:                    ; preds = %if.then6.i.i, %land.lhs.true.i.i.__blk_account_io_start.exit.i_crit_edge
  %.sink.i.i = phi ptr [ %17, %if.then6.i.i ], [ %15, %land.lhs.true.i.i.__blk_account_io_start.exit.i_crit_edge ]
  %part.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 13
  %18 = ptrtoint ptr %part.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %.sink.i.i, ptr %part.i.i, align 8
  %19 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %22, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !325
  %23 = ptrtoint ptr %part.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %part.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %25 = load volatile i32, ptr @jiffies, align 128
  tail call void @update_io_ticks(ptr noundef %24, i32 noundef %25, i1 noundef zeroext false) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !326
  %26 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i23.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i23.i.i to ptr
  %preempt_count.i.i24.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i24.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i24.i.i, align 4
  %sub.i.i.i = add i32 %29, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i24.i.i, align 4
  br label %blk_account_io_start.exit

blk_account_io_start.exit:                        ; preds = %__blk_account_io_start.exit.i, %blk_do_io_stat.exit.i.blk_account_io_start.exit_crit_edge, %if.end58.blk_account_io_start.exit_crit_edge
  tail call void @blk_mq_sched_insert_request(ptr noundef %rq, i1 noundef zeroext %at_head, i1 noundef zeroext true, i1 noundef zeroext false) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_sched_insert_request(ptr noundef, i1 noundef zeroext, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @blk_execute_rq(ptr noundef %rq, i1 noundef zeroext %at_head) #0 align 64 {
entry:
  %wait = alloca %struct.completion, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %wait) #20
  %0 = getelementptr inbounds i8, ptr %wait, i32 4
  %1 = call ptr @memset(ptr %0, i32 255, i32 52)
  %2 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %wait, align 4
  %wait.i = getelementptr inbounds %struct.completion, ptr %wait, i32 0, i32 1
  call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.30, ptr noundef nonnull @init_completion.__key) #20
  %end_io_data = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 33
  %3 = ptrtoint ptr %end_io_data to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %wait, ptr %end_io_data, align 4
  call void @blk_execute_rq_nowait(ptr noundef %rq, i1 noundef zeroext %at_head, ptr noundef nonnull @blk_end_sync_rq)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sysctl_hung_task_timeout_secs to i32))
  %4 = load i32, ptr @sysctl_hung_task_timeout_secs, align 4
  %mq_hctx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %5 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mq_hctx.i, align 8
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %entry.if.else_crit_edge, label %if.end.i

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.end.i:                                         ; preds = %entry
  %type.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %6, i32 0, i32 13
  %7 = ptrtoint ptr %type.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %8)
  %cmp.not.i = icmp eq i16 %8, 2
  br i1 %cmp.not.i, label %if.end4.i, label %if.end.i.if.else_crit_edge

if.end.i.if.else_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.end4.i:                                        ; preds = %if.end.i
  %bio.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %9 = ptrtoint ptr %bio.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bio.i, align 8
  %tobool5.not.i = icmp eq ptr %10, null
  br i1 %tobool5.not.i, label %land.rhs.i, label %if.end4.i.do.body.i_crit_edge

if.end4.i.do.body.i_crit_edge:                    ; preds = %if.end4.i
  br label %do.body.i

land.rhs.i:                                       ; preds = %if.end4.i
  %.b52.i = load i1, ptr @blk_rq_is_poll.__already_done, align 1
  br i1 %.b52.i, label %land.rhs.i.if.else_crit_edge, label %if.then15.i, !prof !298

land.rhs.i.if.else_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.then15.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_rq_is_poll.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1206, i32 noundef 9, ptr noundef null) #20
  br label %if.else

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end4.i.do.body.i_crit_edge
  %11 = ptrtoint ptr %bio.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bio.i, align 8
  %call.i = call i32 @bio_poll(ptr noundef %12, ptr noundef null, i32 noundef 0) #20
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 1215, i32 noundef 0) #20
  %call.i.i = call i32 @__cond_resched() #20
  %call2.i = call zeroext i1 @completion_done(ptr noundef nonnull %wait) #20
  br i1 %call2.i, label %do.body.i.if.end6_crit_edge, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

do.body.i.if.end6_crit_edge:                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.else:                                          ; preds = %if.then15.i, %land.rhs.i.if.else_crit_edge, %if.end.i.if.else_crit_edge, %entry.if.else_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool1.not = icmp eq i32 %4, 0
  br i1 %tobool1.not, label %if.else5, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.else
  %mul = mul i32 %4, 50
  br label %while.cond

while.cond:                                       ; preds = %while.cond.while.cond_crit_edge, %while.cond.preheader
  %call3 = call i32 @wait_for_completion_io_timeout(ptr noundef nonnull %wait, i32 noundef %mul) #20
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %while.cond.while.cond_crit_edge, label %while.cond.if.end6_crit_edge

while.cond.if.end6_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

while.cond.while.cond_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond

if.else5:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  call void @wait_for_completion_io(ptr noundef nonnull %wait) #20
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %while.cond.if.end6_crit_edge, %do.body.i.if.end6_crit_edge
  %13 = ptrtoint ptr %end_io_data to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %end_io_data, align 4
  %15 = ptrtoint ptr %14 to i32
  %conv = trunc i32 %15 to i8
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %wait) #20
  ret i8 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @blk_end_sync_rq(ptr nocapture noundef %rq, i8 noundef zeroext %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end_io_data = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 33
  %0 = ptrtoint ptr %end_io_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end_io_data, align 4
  %conv = zext i8 %error to i32
  %2 = inttoptr i32 %conv to ptr
  store ptr %2, ptr %end_io_data, align 4
  tail call void @complete(ptr noundef %1) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_for_completion_io_timeout(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion_io(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_requeue_request(ptr noundef %rq, i1 noundef zeroext %kick_requeue_list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__blk_mq_requeue_request(ptr noundef %rq)
  %rq_flags.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %0 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rq_flags.i, align 8
  %2 = and i32 %1, 4198400
  call void @__sanitizer_cov_trace_const_cmp4(i32 4198400, i32 %2)
  %.not.i = icmp eq i32 %2, 4198400
  br i1 %.not.i, label %land.lhs.true.i, label %entry.blk_mq_sched_requeue_request.exit_crit_edge

entry.blk_mq_sched_requeue_request.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_sched_requeue_request.exit

land.lhs.true.i:                                  ; preds = %entry
  %3 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq, align 8
  %elevator.i = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %elevator.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %elevator.i, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %requeue_request.i = getelementptr inbounds %struct.elevator_type, ptr %8, i32 0, i32 1, i32 17
  %9 = ptrtoint ptr %requeue_request.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %requeue_request.i, align 4
  %tobool5.not.i = icmp eq ptr %10, null
  br i1 %tobool5.not.i, label %land.lhs.true.i.blk_mq_sched_requeue_request.exit_crit_edge, label %if.then6.i

land.lhs.true.i.blk_mq_sched_requeue_request.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_sched_requeue_request.exit

if.then6.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %10(ptr noundef %rq) #20
  br label %blk_mq_sched_requeue_request.exit

blk_mq_sched_requeue_request.exit:                ; preds = %if.then6.i, %land.lhs.true.i.blk_mq_sched_requeue_request.exit_crit_edge, %entry.blk_mq_sched_requeue_request.exit_crit_edge
  %11 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rq, align 8
  %13 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rq_flags.i, align 8
  %and.i = and i32 %14, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.body12.i, label %do.body5.i, !prof !298

do.body5.i:                                       ; preds = %blk_mq_sched_requeue_request.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1326, 0\0A.popsection", ""() #20, !srcloc !327
  unreachable

do.body12.i:                                      ; preds = %blk_mq_sched_requeue_request.exit
  %requeue_lock.i = getelementptr inbounds %struct.request_queue, ptr %12, i32 0, i32 49
  %call13.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %requeue_lock.i) #20
  %15 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %rq_flags.i, align 8
  %or.i = or i32 %16, 8
  store i32 %or.i, ptr %rq_flags.i, align 8
  %17 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12
  %requeue_list.i = getelementptr inbounds %struct.request_queue, ptr %12, i32 0, i32 48
  %18 = ptrtoint ptr %requeue_list.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %requeue_list.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %17, ptr noundef %requeue_list.i, ptr noundef %19) #20
  br i1 %call.i.i.i, label %if.end.i.i.i, label %do.body12.i.if.end22.i_crit_edge

do.body12.i.if.end22.i_crit_edge:                 ; preds = %do.body12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22.i

if.end.i.i.i:                                     ; preds = %do.body12.i
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev1.i.i.i, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %19, ptr %17, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12, i32 0, i32 1
  %22 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %requeue_list.i, ptr %prev3.i.i.i, align 4
  %23 = ptrtoint ptr %requeue_list.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %17, ptr %requeue_list.i, align 4
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.end.i.i.i, %do.body12.i.if.end22.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %requeue_lock.i, i32 noundef %call13.i) #20
  br i1 %kick_requeue_list, label %if.then25.i, label %if.end22.i.blk_mq_add_to_requeue_list.exit_crit_edge

if.end22.i.blk_mq_add_to_requeue_list.exit_crit_edge: ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_add_to_requeue_list.exit

if.then25.i:                                      ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #22
  %requeue_work.i.i = getelementptr inbounds %struct.request_queue, ptr %12, i32 0, i32 50
  %call.i.i = tail call i32 @kblockd_mod_delayed_work_on(i32 noundef 4, ptr noundef %requeue_work.i.i, i32 noundef 0) #20
  br label %blk_mq_add_to_requeue_list.exit

blk_mq_add_to_requeue_list.exit:                  ; preds = %if.then25.i, %if.end22.i.blk_mq_add_to_requeue_list.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__blk_mq_requeue_request(ptr noundef %rq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq, align 8
  %tag.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 5
  %2 = ptrtoint ptr %tag.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tag.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp.i = icmp eq i32 %3, -1
  br i1 %cmp.i, label %entry.blk_mq_put_driver_tag.exit_crit_edge, label %lor.lhs.false.i

entry.blk_mq_put_driver_tag.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_put_driver_tag.exit

lor.lhs.false.i:                                  ; preds = %entry
  %internal_tag.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 6
  %4 = ptrtoint ptr %internal_tag.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %internal_tag.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %cmp1.i = icmp eq i32 %5, -1
  br i1 %cmp1.i, label %lor.lhs.false.i.blk_mq_put_driver_tag.exit_crit_edge, label %if.end.i

lor.lhs.false.i.blk_mq_put_driver_tag.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_put_driver_tag.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  %mq_hctx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %6 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mq_hctx.i, align 8
  %tags.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %7, i32 0, i32 19
  %8 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tags.i.i, align 16
  %mq_ctx.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 1
  %10 = ptrtoint ptr %mq_ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mq_ctx.i.i, align 4
  tail call void @blk_mq_put_tag(ptr noundef %9, ptr noundef %11, i32 noundef %3) #20
  %12 = ptrtoint ptr %tag.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %tag.i, align 4
  %rq_flags.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %13 = ptrtoint ptr %rq_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rq_flags.i.i, align 8
  %and.i.i = and i32 %14, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.blk_mq_put_driver_tag.exit_crit_edge, label %if.then.i.i

if.end.i.blk_mq_put_driver_tag.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_put_driver_tag.exit

if.then.i.i:                                      ; preds = %if.end.i
  %and3.i.i = and i32 %14, -65
  %15 = ptrtoint ptr %rq_flags.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %and3.i.i, ptr %rq_flags.i.i, align 8
  %flags.i.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %7, i32 0, i32 5
  %16 = ptrtoint ptr %flags.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i.i.i.i, align 16
  %and.i.i.i.i.i = and i32 %17, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.i.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.i.not.i.i.i.i, label %if.else.i.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %queue.i.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %7, i32 0, i32 7
  %18 = ptrtoint ptr %queue.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %queue.i.i.i.i, align 8
  %nr_active_requests_shared_tags.i.i.i.i = getelementptr inbounds %struct.request_queue, ptr %19, i32 0, i32 31
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_active_requests_shared_tags.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %nr_active_requests_shared_tags.i.i.i.i, i32 1, i32 3, i32 1) #20
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active_requests_shared_tags.i.i.i.i, ptr %nr_active_requests_shared_tags.i.i.i.i, i32 1, ptr elementtype(i32) %nr_active_requests_shared_tags.i.i.i.i) #20, !srcloc !308
  br label %blk_mq_put_driver_tag.exit

if.else.i.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active.i.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %7, i32 0, i32 25
  %call.i.i4.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_active.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %nr_active.i.i.i.i, i32 1, i32 3, i32 1) #20
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active.i.i.i.i, ptr %nr_active.i.i.i.i, i32 1, ptr elementtype(i32) %nr_active.i.i.i.i) #20, !srcloc !308
  br label %blk_mq_put_driver_tag.exit

blk_mq_put_driver_tag.exit:                       ; preds = %if.else.i.i.i.i, %if.then.i.i.i.i, %if.end.i.blk_mq_put_driver_tag.exit_crit_edge, %lor.lhs.false.i.blk_mq_put_driver_tag.exit_crit_edge, %entry.blk_mq_put_driver_tag.exit_crit_edge
  tail call fastcc void @trace_block_rq_requeue(ptr noundef %rq)
  %rq_qos.i = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 4
  %22 = ptrtoint ptr %rq_qos.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rq_qos.i, align 4
  %tobool.not.i = icmp eq ptr %23, null
  br i1 %tobool.not.i, label %blk_mq_put_driver_tag.exit.rq_qos_requeue.exit_crit_edge, label %if.then.i

blk_mq_put_driver_tag.exit.rq_qos_requeue.exit_crit_edge: ; preds = %blk_mq_put_driver_tag.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %rq_qos_requeue.exit

if.then.i:                                        ; preds = %blk_mq_put_driver_tag.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__rq_qos_requeue(ptr noundef nonnull %23, ptr noundef %rq) #20
  br label %rq_qos_requeue.exit

rq_qos_requeue.exit:                              ; preds = %if.then.i, %blk_mq_put_driver_tag.exit.rq_qos_requeue.exit_crit_edge
  %state.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 25
  %24 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i15.not = icmp eq i32 %25, 0
  br i1 %cmp.i15.not, label %rq_qos_requeue.exit.if.end_crit_edge, label %do.body3

rq_qos_requeue.exit.if.end_crit_edge:             ; preds = %rq_qos_requeue.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

do.body3:                                         ; preds = %rq_qos_requeue.exit
  call void @__sanitizer_cov_trace_pc() #22
  %26 = ptrtoint ptr %state.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 0, ptr %state.i.i, align 4
  %rq_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %27 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rq_flags, align 8
  %and = and i32 %28, -2097153
  store i32 %and, ptr %rq_flags, align 8
  br label %if.end

if.end:                                           ; preds = %do.body3, %rq_qos_requeue.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_add_to_requeue_list(ptr noundef %rq, i1 noundef zeroext %at_head, i1 noundef zeroext %kick_requeue_list) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq, align 8
  %rq_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %2 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rq_flags, align 8
  %and = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body12, label %do.body5, !prof !298

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1326, 0\0A.popsection", ""() #20, !srcloc !327
  unreachable

do.body12:                                        ; preds = %entry
  %requeue_lock = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 49
  %call13 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %requeue_lock) #20
  br i1 %at_head, label %if.then19, label %if.else

if.then19:                                        ; preds = %do.body12
  %4 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rq_flags, align 8
  %or = or i32 %5, 8
  store i32 %or, ptr %rq_flags, align 8
  %6 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12
  %requeue_list = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 48
  %7 = ptrtoint ptr %requeue_list to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %requeue_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %6, ptr noundef %requeue_list, ptr noundef %8) #20
  br i1 %call.i.i, label %if.end.i.i, label %if.then19.if.end22_crit_edge

if.then19.if.end22_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22

if.end.i.i:                                       ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev1.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %8, ptr %6, align 4
  %prev3.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12, i32 0, i32 1
  %11 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %requeue_list, ptr %prev3.i.i, align 4
  %12 = ptrtoint ptr %requeue_list to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %6, ptr %requeue_list, align 4
  br label %if.end22

if.else:                                          ; preds = %do.body12
  %13 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12
  %requeue_list21 = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 48
  %prev.i = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 48, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i, align 4
  %call.i.i35 = tail call zeroext i1 @__list_add_valid(ptr noundef %13, ptr noundef %15, ptr noundef %requeue_list21) #20
  br i1 %call.i.i35, label %if.end.i.i37, label %if.else.if.end22_crit_edge

if.else.if.end22_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22

if.end.i.i37:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %16 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %requeue_list21, ptr %13, align 4
  %prev3.i.i36 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12, i32 0, i32 1
  %18 = ptrtoint ptr %prev3.i.i36 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %15, ptr %prev3.i.i36, align 4
  %19 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %13, ptr %15, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.end.i.i37, %if.else.if.end22_crit_edge, %if.end.i.i, %if.then19.if.end22_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %requeue_lock, i32 noundef %call13) #20
  br i1 %kick_requeue_list, label %if.then25, label %if.end22.if.end26_crit_edge

if.end22.if.end26_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

if.then25:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  %requeue_work.i = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 50
  %call.i = tail call i32 @kblockd_mod_delayed_work_on(i32 noundef 4, ptr noundef %requeue_work.i, i32 noundef 0) #20
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %if.end22.if.end26_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_kick_requeue_list(ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %requeue_work = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 50
  %call = tail call i32 @kblockd_mod_delayed_work_on(i32 noundef 4, ptr noundef %requeue_work, i32 noundef 0) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kblockd_mod_delayed_work_on(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_delay_kick_requeue_list(ptr noundef %q, i32 noundef %msecs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %msecs) #20
  %requeue_work = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 50
  %call1 = tail call i32 @kblockd_mod_delayed_work_on(i32 noundef 4, ptr noundef %requeue_work, i32 noundef %call2.i) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @blk_mq_queue_inflight(ptr noundef %q) #0 align 64 {
entry:
  %busy = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %busy) #20
  %0 = ptrtoint ptr %busy to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %busy, align 1
  call void @blk_mq_queue_tag_busy_iter(ptr noundef %q, ptr noundef nonnull @blk_mq_rq_inflight, ptr noundef nonnull %busy) #20
  %1 = ptrtoint ptr %busy to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %busy, align 1, !range !320
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool = icmp ne i8 %2, 0
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %busy) #20
  ret i1 %tobool
}

; Function Attrs: argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @blk_mq_rq_inflight(ptr noundef %rq, ptr nocapture noundef writeonly %priv, i1 noundef zeroext %reserved) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 25
  %0 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.i.not = icmp eq i32 %1, 0
  br i1 %cmp.i.not, label %entry.return_crit_edge, label %if.then

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %2 = ptrtoint ptr %priv to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %priv, align 1
  br label %return

return:                                           ; preds = %if.then, %entry.return_crit_edge
  ret i1 %cmp.i.not
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_put_rq_ref(ptr noundef %rq) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @is_flush_rq(ptr noundef %rq) #20
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %end_io = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 32
  %0 = ptrtoint ptr %end_io to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end_io, align 8
  tail call void %1(ptr noundef %rq, i8 noundef zeroext 0) #20
  br label %if.end3

if.else:                                          ; preds = %entry
  %ref.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 26
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %ref.i, i32 noundef 4) #20
  %2 = ptrtoint ptr %ref.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %ref.i, align 4
  %add.i = add i32 %3, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i)
  %cmp.i = icmp ult i32 %add.i, 128
  br i1 %cmp.i, label %land.rhs.i, label %if.else.req_ref_put_and_test.exit_crit_edge

if.else.req_ref_put_and_test.exit_crit_edge:      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %req_ref_put_and_test.exit

land.rhs.i:                                       ; preds = %if.else
  %.b40.i = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.req_ref_put_and_test.exit_crit_edge, label %if.then.i, !prof !298

land.rhs.i.req_ref_put_and_test.exit_crit_edge:   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %req_ref_put_and_test.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 495, i32 noundef 9, ptr noundef null) #20
  br label %req_ref_put_and_test.exit

req_ref_put_and_test.exit:                        ; preds = %if.then.i, %land.rhs.i.req_ref_put_and_test.exit_crit_edge, %if.else.req_ref_put_and_test.exit_crit_edge
  %call.i.i41.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ref.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !309
  tail call void @llvm.prefetch.p0(ptr %ref.i, i32 1, i32 3, i32 1) #20
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ref.i, ptr %ref.i, i32 1, ptr elementtype(i32) %ref.i) #20, !srcloc !310
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %4, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !311
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then2, label %req_ref_put_and_test.exit.if.end3_crit_edge

req_ref_put_and_test.exit.if.end3_crit_edge:      ; preds = %req_ref_put_and_test.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end3

if.then2:                                         ; preds = %req_ref_put_and_test.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @__blk_mq_free_request(ptr noundef %rq)
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %req_ref_put_and_test.exit.if.end3_crit_edge, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_flush_rq(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_flush_busy_ctxs(ptr noundef %hctx, ptr noundef %list) #0 align 64 {
entry:
  %word.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %ctx_map = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10
  %shift.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 1
  %0 = ptrtoint ptr %ctx_map to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ctx_map, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp377.not.i.i = icmp eq i32 %1, 0
  br i1 %cmp377.not.i.i, label %entry.sbitmap_for_each_set.exit_crit_edge, label %while.body.lr.ph.i.i

entry.sbitmap_for_each_set.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %sbitmap_for_each_set.exit

while.body.lr.ph.i.i:                             ; preds = %entry
  %map.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 4
  %map_nr.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 2
  %ctxs.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 15
  %type2.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 13
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %cleanup.i.i.while.body.i.i_crit_edge, %while.body.lr.ph.i.i
  %2 = phi i32 [ %1, %while.body.lr.ph.i.i ], [ %39, %cleanup.i.i.while.body.i.i_crit_edge ]
  %index.080.i.i = phi i32 [ 0, %while.body.lr.ph.i.i ], [ %spec.store.select42.i.i, %cleanup.i.i.while.body.i.i_crit_edge ]
  %scanned.079.i.i = phi i32 [ 0, %while.body.lr.ph.i.i ], [ %add.i.i, %cleanup.i.i.while.body.i.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %word.i.i) #20
  %3 = ptrtoint ptr %word.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %word.i.i, align 4, !annotation !299
  %4 = ptrtoint ptr %map.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %map.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.sbitmap_word, ptr %5, i32 %index.080.i.i
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i, align 128
  %sub8.i.i = sub i32 %2, %scanned.079.i.i
  %8 = call i32 @llvm.umin.i32(i32 %7, i32 %sub8.i.i) #20
  %add.i.i = add i32 %8, %scanned.079.i.i
  %word12.i.i = getelementptr %struct.sbitmap_word, ptr %5, i32 %index.080.i.i, i32 2
  %9 = ptrtoint ptr %word12.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %word12.i.i, align 128
  %cleared.i.i = getelementptr %struct.sbitmap_word, ptr %5, i32 %index.080.i.i, i32 4
  %11 = ptrtoint ptr %cleared.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cleared.i.i, align 128
  %neg.i.i = xor i32 %12, -1
  %and15.i.i = and i32 %10, %neg.i.i
  %13 = ptrtoint ptr %word.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %and15.i.i, ptr %word.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i.i)
  %tobool.not.i.i = icmp eq i32 %and15.i.i, 0
  br i1 %tobool.not.i.i, label %while.body.i.i.cleanup.i.i_crit_edge, label %if.end17.i.i

while.body.i.i.cleanup.i.i_crit_edge:             ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i.i

if.end17.i.i:                                     ; preds = %while.body.i.i
  %call74.i.i = call i32 @_find_next_bit_be(ptr noundef nonnull %word.i.i, i32 noundef %8, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %call74.i.i, i32 %8)
  %cmp21.not75.i.i = icmp ult i32 %call74.i.i, %8
  br i1 %cmp21.not75.i.i, label %if.end17.i.i.if.end23.i.i_crit_edge, label %if.end17.i.i.cleanup.i.i_crit_edge

if.end17.i.i.cleanup.i.i_crit_edge:               ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i.i

if.end17.i.i.if.end23.i.i_crit_edge:              ; preds = %if.end17.i.i
  br label %if.end23.i.i

while.cond19.i.i:                                 ; preds = %if.then.i.i.i, %if.end23.i.i.while.cond19.i.i_crit_edge
  %14 = ptrtoint ptr %shift.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %shift.i.i, align 4
  %notmask.i.i.i = shl nsw i32 -1, %15
  %sub.i.i.i = xor i32 %notmask.i.i.i, -1
  %and.i.i.i = and i32 %add26.i.i, %sub.i.i.i
  %16 = ptrtoint ptr %map.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %map.i.i, align 4
  %shr.i.i.i.i = lshr i32 %add26.i.i, %15
  %word.i.i.i.i = getelementptr %struct.sbitmap_word, ptr %17, i32 %shr.i.i.i.i, i32 2
  call void @_clear_bit(i32 noundef %and.i.i.i, ptr noundef %word.i.i.i.i) #20
  call void @_raw_spin_unlock(ptr noundef %23) #20
  %inc.i.i = add nuw i32 %call76.i.i, 1
  %call.i.i = call i32 @_find_next_bit_be(ptr noundef nonnull %word.i.i, i32 noundef %8, i32 noundef %inc.i.i) #20
  %cmp21.not.i.i = icmp ult i32 %call.i.i, %8
  br i1 %cmp21.not.i.i, label %while.cond19.i.i.if.end23.i.i_crit_edge, label %while.cond19.i.i.cleanup.i.i_crit_edge

while.cond19.i.i.cleanup.i.i_crit_edge:           ; preds = %while.cond19.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i.i

while.cond19.i.i.if.end23.i.i_crit_edge:          ; preds = %while.cond19.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end23.i.i

if.end23.i.i:                                     ; preds = %while.cond19.i.i.if.end23.i.i_crit_edge, %if.end17.i.i.if.end23.i.i_crit_edge
  %call76.i.i = phi i32 [ %call.i.i, %while.cond19.i.i.if.end23.i.i_crit_edge ], [ %call74.i.i, %if.end17.i.i.if.end23.i.i_crit_edge ]
  %18 = ptrtoint ptr %shift.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %shift.i.i, align 4
  %shl25.i.i = shl i32 %index.080.i.i, %19
  %add26.i.i = add i32 %shl25.i.i, %call76.i.i
  %20 = ptrtoint ptr %ctxs.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ctxs.i.i, align 8
  %arrayidx.i1.i = getelementptr ptr, ptr %21, i32 %add26.i.i
  %22 = ptrtoint ptr %arrayidx.i1.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx.i1.i, align 4
  %24 = ptrtoint ptr %type2.i.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %type2.i.i, align 4
  %conv.i.i = zext i16 %25 to i32
  call void @_raw_spin_lock(ptr noundef %23) #20
  %arrayidx3.i.i = getelementptr %struct.anon, ptr %23, i32 0, i32 1, i32 %conv.i.i
  %26 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %arrayidx3.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %27, %arrayidx3.i.i
  br i1 %cmp.i.not.i.i.i, label %if.end23.i.i.while.cond19.i.i_crit_edge, label %if.then.i.i.i

if.end23.i.i.while.cond19.i.i_crit_edge:          ; preds = %if.end23.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond19.i.i

if.then.i.i.i:                                    ; preds = %if.end23.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %28 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev.i.i.i, align 4
  %prev2.i.i.i.i = getelementptr %struct.anon, ptr %23, i32 0, i32 1, i32 %conv.i.i, i32 1
  %30 = ptrtoint ptr %prev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev2.i.i.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %32 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev3.i.i.i.i, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %27, ptr %29, align 4
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %list, ptr %31, align 4
  store ptr %31, ptr %prev.i.i.i, align 4
  %35 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %arrayidx3.i.i, ptr %arrayidx3.i.i, align 4
  store ptr %arrayidx3.i.i, ptr %prev2.i.i.i.i, align 4
  br label %while.cond19.i.i

cleanup.i.i:                                      ; preds = %while.cond19.i.i.cleanup.i.i_crit_edge, %if.end17.i.i.cleanup.i.i_crit_edge, %while.body.i.i.cleanup.i.i_crit_edge
  %inc30.i.i = add i32 %index.080.i.i, 1
  %36 = ptrtoint ptr %map_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %map_nr.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc30.i.i, i32 %37)
  %cmp31.not.i.i = icmp ult i32 %inc30.i.i, %37
  %spec.store.select42.i.i = select i1 %cmp31.not.i.i, i32 %inc30.i.i, i32 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %word.i.i) #20
  %38 = ptrtoint ptr %ctx_map to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ctx_map, align 4
  %cmp3.i.i = icmp ugt i32 %39, %add.i.i
  br i1 %cmp3.i.i, label %cleanup.i.i.while.body.i.i_crit_edge, label %cleanup.i.i.sbitmap_for_each_set.exit_crit_edge

cleanup.i.i.sbitmap_for_each_set.exit_crit_edge:  ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sbitmap_for_each_set.exit

cleanup.i.i.while.body.i.i_crit_edge:             ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i.i

sbitmap_for_each_set.exit:                        ; preds = %cleanup.i.i.sbitmap_for_each_set.exit_crit_edge, %entry.sbitmap_for_each_set.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @blk_mq_dequeue_from_ctx(ptr noundef %hctx, ptr noundef readonly %start) local_unnamed_addr #0 align 64 {
entry:
  %word.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %start, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %type = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 13
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %type, align 4
  %idxprom = zext i16 %1 to i32
  %arrayidx = getelementptr %struct.blk_mq_ctx, ptr %start, i32 0, i32 2, i32 %idxprom
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %arrayidx, align 2
  %conv = zext i16 %3 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  %ctx_map = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10
  %shift.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 1
  %4 = ptrtoint ptr %ctx_map to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ctx_map, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp377.not.i = icmp eq i32 %5, 0
  br i1 %cmp377.not.i, label %cond.end.__sbitmap_for_each_set.exit_crit_edge, label %while.body.lr.ph.i

cond.end.__sbitmap_for_each_set.exit_crit_edge:   ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %__sbitmap_for_each_set.exit

while.body.lr.ph.i:                               ; preds = %cond.end
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %cond)
  %cmp.not.i = icmp ugt i32 %5, %cond
  %spec.store.select.i = select i1 %cmp.not.i, i32 %cond, i32 0
  %6 = ptrtoint ptr %shift.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %shift.i, align 4
  %notmask.i = shl nsw i32 -1, %7
  %sub.i = xor i32 %notmask.i, -1
  %and.i = and i32 %spec.store.select.i, %sub.i
  %shr.i = lshr i32 %spec.store.select.i, %7
  %map.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 4
  %map_nr.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 2
  %ctxs.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 15
  %type2.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 13
  br label %while.body.i

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %8 = phi i32 [ %5, %while.body.lr.ph.i ], [ %47, %cleanup.i.while.body.i_crit_edge ]
  %index.080.i = phi i32 [ %shr.i, %while.body.lr.ph.i ], [ %spec.store.select42.i, %cleanup.i.while.body.i_crit_edge ]
  %scanned.079.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %add.i, %cleanup.i.while.body.i_crit_edge ]
  %nr.078.i = phi i32 [ %and.i, %while.body.lr.ph.i ], [ 0, %cleanup.i.while.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %word.i) #20
  %9 = ptrtoint ptr %word.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %word.i, align 4, !annotation !299
  %10 = ptrtoint ptr %map.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %map.i, align 4
  %arrayidx.i = getelementptr %struct.sbitmap_word, ptr %11, i32 %index.080.i
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 128
  %sub6.i = sub i32 %13, %nr.078.i
  %sub8.i = sub i32 %8, %scanned.079.i
  %14 = call i32 @llvm.umin.i32(i32 %sub6.i, i32 %sub8.i) #20
  %add.i = add i32 %14, %scanned.079.i
  %word12.i = getelementptr %struct.sbitmap_word, ptr %11, i32 %index.080.i, i32 2
  %15 = ptrtoint ptr %word12.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %word12.i, align 128
  %cleared.i = getelementptr %struct.sbitmap_word, ptr %11, i32 %index.080.i, i32 4
  %17 = ptrtoint ptr %cleared.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cleared.i, align 128
  %neg.i = xor i32 %18, -1
  %and15.i = and i32 %16, %neg.i
  %19 = ptrtoint ptr %word.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %and15.i, ptr %word.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i)
  %tobool.not.i = icmp eq i32 %and15.i, 0
  br i1 %tobool.not.i, label %while.body.i.cleanup.i_crit_edge, label %if.end17.i

while.body.i.cleanup.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i

if.end17.i:                                       ; preds = %while.body.i
  %add18.i = add i32 %14, %nr.078.i
  %call74.i = call i32 @_find_next_bit_be(ptr noundef nonnull %word.i, i32 noundef %add18.i, i32 noundef %nr.078.i) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %call74.i, i32 %add18.i)
  %cmp21.not75.i = icmp ult i32 %call74.i, %add18.i
  br i1 %cmp21.not75.i, label %if.end17.i.if.end23.i_crit_edge, label %if.end17.i.cleanup.i_crit_edge

if.end17.i.cleanup.i_crit_edge:                   ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i

if.end17.i.if.end23.i_crit_edge:                  ; preds = %if.end17.i
  br label %if.end23.i

while.cond19.i:                                   ; preds = %dispatch_rq_from_ctx.exit.while.cond19.i_crit_edge, %dispatch_rq_from_ctx.exit.thread
  %inc.i = add nuw i32 %call76.i, 1
  %call.i = call i32 @_find_next_bit_be(ptr noundef nonnull %word.i, i32 noundef %add18.i, i32 noundef %inc.i) #20
  %cmp21.not.i = icmp ult i32 %call.i, %add18.i
  br i1 %cmp21.not.i, label %while.cond19.i.if.end23.i_crit_edge, label %while.cond19.i.cleanup.i_crit_edge

while.cond19.i.cleanup.i_crit_edge:               ; preds = %while.cond19.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i

while.cond19.i.if.end23.i_crit_edge:              ; preds = %while.cond19.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end23.i

if.end23.i:                                       ; preds = %while.cond19.i.if.end23.i_crit_edge, %if.end17.i.if.end23.i_crit_edge
  %call76.i = phi i32 [ %call.i, %while.cond19.i.if.end23.i_crit_edge ], [ %call74.i, %if.end17.i.if.end23.i_crit_edge ]
  %20 = ptrtoint ptr %shift.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %shift.i, align 4
  %shl25.i = shl i32 %index.080.i, %21
  %add26.i = add i32 %shl25.i, %call76.i
  %22 = ptrtoint ptr %ctxs.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ctxs.i, align 8
  %arrayidx.i6 = getelementptr ptr, ptr %23, i32 %add26.i
  %24 = ptrtoint ptr %arrayidx.i6 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx.i6, align 4
  %26 = ptrtoint ptr %type2.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %type2.i, align 4
  %conv.i = zext i16 %27 to i32
  call void @_raw_spin_lock(ptr noundef %25) #20
  %arrayidx3.i = getelementptr %struct.anon, ptr %25, i32 0, i32 1, i32 %conv.i
  %28 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %arrayidx3.i, align 4
  %cmp.i.not.i = icmp eq ptr %29, %arrayidx3.i
  br i1 %cmp.i.not.i, label %dispatch_rq_from_ctx.exit.thread, label %if.then.i

dispatch_rq_from_ctx.exit.thread:                 ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @_raw_spin_unlock(ptr noundef %25) #20
  br label %while.cond19.i

if.then.i:                                        ; preds = %if.end23.i
  %add.ptr.i = getelementptr i8, ptr %29, i32 -56
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %29) #20
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.list_del_init.exit.i_crit_edge

if.then.i.list_del_init.exit.i_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev.i.i.i, align 4
  %32 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %29, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %31, ptr %prev1.i.i.i.i, align 4
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %33, ptr %31, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %if.then.i.list_del_init.exit.i_crit_edge
  %36 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %29, ptr %29, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %37 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %29, ptr %prev.i3.i.i, align 4
  %38 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile ptr, ptr %arrayidx3.i, align 4
  %cmp.i27.not.i = icmp eq ptr %39, %arrayidx3.i
  br i1 %cmp.i27.not.i, label %if.then11.i, label %list_del_init.exit.i.dispatch_rq_from_ctx.exit_crit_edge

list_del_init.exit.i.dispatch_rq_from_ctx.exit_crit_edge: ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %dispatch_rq_from_ctx.exit

if.then11.i:                                      ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %40 = ptrtoint ptr %shift.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %shift.i, align 4
  %notmask.i.i = shl nsw i32 -1, %41
  %sub.i.i = xor i32 %notmask.i.i, -1
  %and.i.i = and i32 %add26.i, %sub.i.i
  %42 = ptrtoint ptr %map.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %map.i, align 4
  %shr.i.i.i = lshr i32 %add26.i, %41
  %word.i.i.i = getelementptr %struct.sbitmap_word, ptr %43, i32 %shr.i.i.i, i32 2
  call void @_clear_bit(i32 noundef %and.i.i, ptr noundef %word.i.i.i) #20
  br label %dispatch_rq_from_ctx.exit

dispatch_rq_from_ctx.exit:                        ; preds = %if.then11.i, %list_del_init.exit.i.dispatch_rq_from_ctx.exit_crit_edge
  call void @_raw_spin_unlock(ptr noundef %25) #20
  %tobool15.not.i = icmp eq ptr %add.ptr.i, null
  br i1 %tobool15.not.i, label %dispatch_rq_from_ctx.exit.while.cond19.i_crit_edge, label %cleanup.thread.i

dispatch_rq_from_ctx.exit.while.cond19.i_crit_edge: ; preds = %dispatch_rq_from_ctx.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond19.i

cleanup.thread.i:                                 ; preds = %dispatch_rq_from_ctx.exit
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %word.i) #20
  br label %__sbitmap_for_each_set.exit

cleanup.i:                                        ; preds = %while.cond19.i.cleanup.i_crit_edge, %if.end17.i.cleanup.i_crit_edge, %while.body.i.cleanup.i_crit_edge
  %inc30.i = add i32 %index.080.i, 1
  %44 = ptrtoint ptr %map_nr.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %map_nr.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc30.i, i32 %45)
  %cmp31.not.i = icmp ult i32 %inc30.i, %45
  %spec.store.select42.i = select i1 %cmp31.not.i, i32 %inc30.i, i32 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %word.i) #20
  %46 = ptrtoint ptr %ctx_map to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ctx_map, align 4
  %cmp3.i = icmp ugt i32 %47, %add.i
  br i1 %cmp3.i, label %cleanup.i.while.body.i_crit_edge, label %cleanup.i.__sbitmap_for_each_set.exit_crit_edge

cleanup.i.__sbitmap_for_each_set.exit_crit_edge:  ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__sbitmap_for_each_set.exit

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

__sbitmap_for_each_set.exit:                      ; preds = %cleanup.i.__sbitmap_for_each_set.exit_crit_edge, %cleanup.thread.i, %cond.end.__sbitmap_for_each_set.exit_crit_edge
  %data.sroa.5.4 = phi ptr [ null, %cond.end.__sbitmap_for_each_set.exit_crit_edge ], [ %add.ptr.i, %cleanup.thread.i ], [ null, %cleanup.i.__sbitmap_for_each_set.exit_crit_edge ]
  ret ptr %data.sroa.5.4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @__blk_mq_get_driver_tag(ptr noundef %hctx, ptr noundef %rq) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tag = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 5
  %0 = ptrtoint ptr %tag to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tag, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp = icmp eq i32 %1, -1
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %mq_hctx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %2 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mq_hctx.i, align 8
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tags.i, align 16
  %nr_reserved_tags.i = getelementptr inbounds %struct.blk_mq_tags, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %nr_reserved_tags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_reserved_tags.i, align 4
  %flags.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %3, i32 0, i32 5
  %8 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags.i.i, align 16
  %and.i.i = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.blk_mq_tag_busy.exit.i_crit_edge, label %if.end.i.i

land.lhs.true.blk_mq_tag_busy.exit.i_crit_edge:   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_tag_busy.exit.i

if.end.i.i:                                       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i = tail call zeroext i1 @__blk_mq_tag_busy(ptr noundef %3) #20
  br label %blk_mq_tag_busy.exit.i

blk_mq_tag_busy.exit.i:                           ; preds = %if.end.i.i, %land.lhs.true.blk_mq_tag_busy.exit.i_crit_edge
  %10 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mq_hctx.i, align 8
  %sched_tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %11, i32 0, i32 20
  %12 = ptrtoint ptr %sched_tags.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sched_tags.i, align 4
  %internal_tag.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 6
  %14 = ptrtoint ptr %internal_tag.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %internal_tag.i, align 8
  %nr_reserved_tags.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %13, i32 0, i32 1
  %16 = ptrtoint ptr %nr_reserved_tags.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %nr_reserved_tags.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %15)
  %cmp.i.i = icmp ugt i32 %17, %15
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %blk_mq_tag_busy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %tags7.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %11, i32 0, i32 19
  %18 = ptrtoint ptr %tags7.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %tags7.i, align 16
  %breserved_tags.i = getelementptr inbounds %struct.blk_mq_tags, ptr %19, i32 0, i32 4
  br label %if.end11.i

if.else.i:                                        ; preds = %blk_mq_tag_busy.exit.i
  %bitmap_tags.i = getelementptr inbounds %struct.blk_mq_tags, ptr %5, i32 0, i32 3
  %tobool.not.i27.i = icmp eq ptr %11, null
  br i1 %tobool.not.i27.i, label %if.else.i.if.end11.i_crit_edge, label %lor.lhs.false.i.i

if.else.i.if.end11.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11.i

lor.lhs.false.i.i:                                ; preds = %if.else.i
  %flags.i28.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %11, i32 0, i32 5
  %20 = ptrtoint ptr %flags.i28.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i28.i, align 16
  %and.i29.i = and i32 %21, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i29.i)
  %tobool1.not.i.i = icmp eq i32 %and.i29.i, 0
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end11.i_crit_edge, label %if.end.i31.i

lor.lhs.false.i.i.if.end11.i_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11.i

if.end.i31.i:                                     ; preds = %lor.lhs.false.i.i
  %22 = ptrtoint ptr %bitmap_tags.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %bitmap_tags.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %23)
  %cmp.i30.i = icmp eq i32 %23, 1
  br i1 %cmp.i30.i, label %if.end.i31.i.if.end11.i_crit_edge, label %if.end4.i.i

if.end.i31.i.if.end11.i_crit_edge:                ; preds = %if.end.i31.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11.i

if.end4.i.i:                                      ; preds = %if.end.i31.i
  %and.i.i.i = and i32 %21, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.else.i.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %if.end4.i.i
  %queue.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %11, i32 0, i32 7
  %24 = ptrtoint ptr %queue.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %queue.i.i, align 8
  %queue_flags.i.i = getelementptr inbounds %struct.request_queue, ptr %25, i32 0, i32 11
  %26 = ptrtoint ptr %queue_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %queue_flags.i.i, align 4
  %28 = and i32 %27, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool8.not.i.i = icmp eq i32 %28, 0
  br i1 %tobool8.not.i.i, label %if.then6.i.i.if.end11.i_crit_edge, label %if.then6.i.i.if.end15.i.i_crit_edge

if.then6.i.i.if.end15.i.i_crit_edge:              ; preds = %if.then6.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.i.i

if.then6.i.i.if.end11.i_crit_edge:                ; preds = %if.then6.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11.i

if.else.i.i:                                      ; preds = %if.end4.i.i
  %state.i.i = getelementptr inbounds %struct.anon.3, ptr %11, i32 0, i32 2
  %29 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %state.i.i, align 4
  %31 = and i32 %30, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool12.not.i.i = icmp eq i32 %31, 0
  br i1 %tobool12.not.i.i, label %if.else.i.i.if.end11.i_crit_edge, label %if.else.i.i.if.end15.i.i_crit_edge

if.else.i.i.if.end15.i.i_crit_edge:               ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.i.i

if.else.i.i.if.end11.i_crit_edge:                 ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11.i

if.end15.i.i:                                     ; preds = %if.else.i.i.if.end15.i.i_crit_edge, %if.then6.i.i.if.end15.i.i_crit_edge
  %tags.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %11, i32 0, i32 19
  %32 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %tags.i.i, align 16
  %active_queues.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %33, i32 0, i32 2
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %active_queues.i.i, i32 noundef 4) #20
  %34 = ptrtoint ptr %active_queues.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %active_queues.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool17.not.i.i = icmp eq i32 %35, 0
  br i1 %tobool17.not.i.i, label %if.end15.i.i.if.end11.i_crit_edge, label %if.end19.i.i

if.end15.i.i.if.end11.i_crit_edge:                ; preds = %if.end15.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11.i

if.end19.i.i:                                     ; preds = %if.end15.i.i
  %36 = ptrtoint ptr %bitmap_tags.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %bitmap_tags.i, align 4
  %add.i.i = add i32 %35, -1
  %sub.i.i = add i32 %add.i.i, %37
  %div.i.i = udiv i32 %sub.i.i, %35
  %38 = tail call i32 @llvm.umax.i32(i32 %div.i.i, i32 4) #20
  %39 = ptrtoint ptr %flags.i28.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %flags.i28.i, align 16
  %and.i.i.i.i = and i32 %40, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.i.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.i.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %queue.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %11, i32 0, i32 7
  %41 = ptrtoint ptr %queue.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %queue.i.i.i, align 8
  %nr_active_requests_shared_tags.i.i.i = getelementptr inbounds %struct.request_queue, ptr %42, i32 0, i32 31
  br label %hctx_may_queue.exit.i

if.end.i.i.i:                                     ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %11, i32 0, i32 25
  br label %hctx_may_queue.exit.i

hctx_may_queue.exit.i:                            ; preds = %if.end.i.i.i, %if.then.i.i.i
  %nr_active.sink.i.i.i = phi ptr [ %nr_active.i.i.i, %if.end.i.i.i ], [ %nr_active_requests_shared_tags.i.i.i, %if.then.i.i.i ]
  %call.i.i5.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_active.sink.i.i.i, i32 noundef 4) #20
  %43 = ptrtoint ptr %nr_active.sink.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %retval.0.i.i.i = load volatile i32, ptr %nr_active.sink.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i.i.i, i32 %38)
  %cmp24.i.i = icmp ult i32 %retval.0.i.i.i, %38
  br i1 %cmp24.i.i, label %hctx_may_queue.exit.i.if.end11.i_crit_edge, label %hctx_may_queue.exit.i.return_crit_edge

hctx_may_queue.exit.i.return_crit_edge:           ; preds = %hctx_may_queue.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

hctx_may_queue.exit.i.if.end11.i_crit_edge:       ; preds = %hctx_may_queue.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11.i

if.end11.i:                                       ; preds = %hctx_may_queue.exit.i.if.end11.i_crit_edge, %if.end15.i.i.if.end11.i_crit_edge, %if.else.i.i.if.end11.i_crit_edge, %if.then6.i.i.if.end11.i_crit_edge, %if.end.i31.i.if.end11.i_crit_edge, %lor.lhs.false.i.i.if.end11.i_crit_edge, %if.else.i.if.end11.i_crit_edge, %if.then.i
  %bt.0.i = phi ptr [ %breserved_tags.i, %if.then.i ], [ %bitmap_tags.i, %hctx_may_queue.exit.i.if.end11.i_crit_edge ], [ %bitmap_tags.i, %if.then6.i.i.if.end11.i_crit_edge ], [ %bitmap_tags.i, %lor.lhs.false.i.i.if.end11.i_crit_edge ], [ %bitmap_tags.i, %if.else.i.if.end11.i_crit_edge ], [ %bitmap_tags.i, %if.end.i31.i.if.end11.i_crit_edge ], [ %bitmap_tags.i, %if.else.i.i.if.end11.i_crit_edge ], [ %bitmap_tags.i, %if.end15.i.i.if.end11.i_crit_edge ]
  %tag_offset.0.i = phi i32 [ 0, %if.then.i ], [ %7, %hctx_may_queue.exit.i.if.end11.i_crit_edge ], [ %7, %if.then6.i.i.if.end11.i_crit_edge ], [ %7, %lor.lhs.false.i.i.if.end11.i_crit_edge ], [ %7, %if.else.i.if.end11.i_crit_edge ], [ %7, %if.end.i31.i.if.end11.i_crit_edge ], [ %7, %if.else.i.i.if.end11.i_crit_edge ], [ %7, %if.end15.i.i.if.end11.i_crit_edge ]
  %call12.i = tail call i32 @__sbitmap_queue_get(ptr noundef %bt.0.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call12.i)
  %cmp.i = icmp eq i32 %call12.i, -1
  br i1 %cmp.i, label %if.end11.i.return_crit_edge, label %__blk_mq_alloc_driver_tag.exit

if.end11.i.return_crit_edge:                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

__blk_mq_alloc_driver_tag.exit:                   ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #22
  %add.i = add i32 %call12.i, %tag_offset.0.i
  %44 = ptrtoint ptr %tag to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %add.i, ptr %tag, align 4
  br label %if.end

if.end:                                           ; preds = %__blk_mq_alloc_driver_tag.exit, %entry.if.end_crit_edge
  %flags = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 5
  %45 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %flags, align 16
  %and = and i32 %46, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.if.end6_crit_edge, label %land.lhs.true1

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

land.lhs.true1:                                   ; preds = %if.end
  %rq_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %47 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rq_flags, align 8
  %and2 = and i32 %48, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.then4, label %land.lhs.true1.if.end6_crit_edge

land.lhs.true1.if.end6_crit_edge:                 ; preds = %land.lhs.true1
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.then4:                                         ; preds = %land.lhs.true1
  %or = or i32 %48, 64
  %49 = ptrtoint ptr %rq_flags to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %or, ptr %rq_flags, align 8
  %50 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %flags, align 16
  %and.i.i15 = and i32 %51, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i15)
  %tobool.i.not.i = icmp eq i32 %and.i.i15, 0
  br i1 %tobool.i.not.i, label %if.else.i17, label %if.then.i16

if.then.i16:                                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  %queue.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 7
  %52 = ptrtoint ptr %queue.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %queue.i, align 8
  %nr_active_requests_shared_tags.i = getelementptr inbounds %struct.request_queue, ptr %53, i32 0, i32 31
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_active_requests_shared_tags.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %nr_active_requests_shared_tags.i, i32 1, i32 3, i32 1) #20
  %54 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active_requests_shared_tags.i, ptr %nr_active_requests_shared_tags.i, i32 1, ptr elementtype(i32) %nr_active_requests_shared_tags.i) #20, !srcloc !306
  br label %if.end6

if.else.i17:                                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 25
  %call.i.i3.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_active.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %nr_active.i, i32 1, i32 3, i32 1) #20
  %55 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active.i, ptr %nr_active.i, i32 1, ptr elementtype(i32) %nr_active.i) #20, !srcloc !306
  br label %if.end6

if.end6:                                          ; preds = %if.else.i17, %if.then.i16, %land.lhs.true1.if.end6_crit_edge, %if.end.if.end6_crit_edge
  %tags = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 19
  %56 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %tags, align 16
  %rqs = getelementptr inbounds %struct.blk_mq_tags, ptr %57, i32 0, i32 5
  %58 = ptrtoint ptr %rqs to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %rqs, align 4
  %60 = ptrtoint ptr %tag to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %tag, align 4
  %arrayidx = getelementptr ptr, ptr %59, i32 %61
  %62 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %rq, ptr %arrayidx, align 4
  br label %return

return:                                           ; preds = %if.end6, %if.end11.i.return_crit_edge, %hctx_may_queue.exit.i.return_crit_edge
  %retval.0 = phi i1 [ true, %if.end6 ], [ false, %hctx_may_queue.exit.i.return_crit_edge ], [ false, %if.end11.i.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @blk_mq_dispatch_rq_list(ptr noundef %hctx, ptr noundef %list, i32 noundef %nr_budgets) local_unnamed_addr #0 align 64 {
entry:
  %zone_list = alloca %struct.list_head, align 4
  %bd = alloca %struct.blk_mq_queue_data, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 7
  %0 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queue, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %zone_list) #20
  %2 = getelementptr inbounds %struct.list_head, ptr %zone_list, i32 0, i32 1
  %3 = ptrtoint ptr %zone_list to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %zone_list, ptr %zone_list, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %zone_list, ptr %2, align 4
  %5 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %list, align 4
  %cmp.i.not = icmp eq ptr %6, %list
  br i1 %cmp.i.not, label %entry.cleanup140_crit_edge, label %do.body.preheader

entry.cleanup140_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup140

do.body.preheader:                                ; preds = %entry
  %last59 = getelementptr inbounds %struct.blk_mq_queue_data, ptr %bd, i32 0, i32 1
  %mq_ops = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 5
  br label %do.body

do.body:                                          ; preds = %do.cond70.do.body_crit_edge, %do.body.preheader
  %errors.0 = phi i32 [ %errors.2.ph, %do.cond70.do.body_crit_edge ], [ 0, %do.body.preheader ]
  %queued.0 = phi i32 [ %queued.2.ph, %do.cond70.do.body_crit_edge ], [ 0, %do.body.preheader ]
  %needs_resource.0.off0 = phi i1 [ %needs_resource.3.off0.ph, %do.cond70.do.body_crit_edge ], [ false, %do.body.preheader ]
  %nr_budgets.addr.0 = phi i32 [ %spec.select, %do.cond70.do.body_crit_edge ], [ %nr_budgets, %do.body.preheader ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %bd) #20
  %7 = ptrtoint ptr %bd to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 -1, ptr %bd, align 8, !annotation !299
  %8 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %list, align 4
  %add.ptr = getelementptr i8, ptr %9, i32 -56
  %mq_hctx = getelementptr i8, ptr %9, i32 -48
  %10 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mq_hctx, align 8
  %cmp.not = icmp eq ptr %11, %hctx
  br i1 %cmp.not, label %do.body.if.end33_crit_edge, label %land.rhs

do.body.if.end33_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

land.rhs:                                         ; preds = %do.body
  %.b201 = load i1, ptr @blk_mq_dispatch_rq_list.__already_done, align 1
  br i1 %.b201, label %land.rhs.if.end33_crit_edge, label %if.then9, !prof !298

land.rhs.if.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

if.then9:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_dispatch_rq_list.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1829, i32 noundef 9, ptr noundef null) #20
  %12 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %mq_hctx, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then9, %land.rhs.if.end33_crit_edge, %do.body.if.end33_crit_edge
  %13 = phi ptr [ %11, %do.body.if.end33_crit_edge ], [ %.pr, %if.then9 ], [ %11, %land.rhs.if.end33_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_budgets.addr.0)
  %tobool41.not = icmp eq i32 %nr_budgets.addr.0, 0
  br i1 %tobool41.not, label %if.then.i, label %if.end33.if.end2.i_crit_edge

if.end33.if.end2.i_crit_edge:                     ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end2.i

if.then.i:                                        ; preds = %if.end33
  %14 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %add.ptr, align 8
  %mq_ops.i.i = getelementptr inbounds %struct.request_queue, ptr %15, i32 0, i32 5
  %16 = ptrtoint ptr %mq_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mq_ops.i.i, align 8
  %get_budget.i.i = getelementptr inbounds %struct.blk_mq_ops, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %get_budget.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %get_budget.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %19, null
  br i1 %tobool.not.i.i, label %if.then.i.if.end.i_crit_edge, label %blk_mq_get_dispatch_budget.exit.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

blk_mq_get_dispatch_budget.exit.i:                ; preds = %if.then.i
  %call.i.i = call i32 %19(ptr noundef %15) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i204 = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i204, label %if.then1.i, label %blk_mq_get_dispatch_budget.exit.i.if.end.i_crit_edge

blk_mq_get_dispatch_budget.exit.i.if.end.i_crit_edge: ; preds = %blk_mq_get_dispatch_budget.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then1.i:                                       ; preds = %blk_mq_get_dispatch_budget.exit.i
  %tag.i.i = getelementptr i8, ptr %9, i32 -36
  %20 = ptrtoint ptr %tag.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %tag.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %cmp.i.i = icmp eq i32 %21, -1
  br i1 %cmp.i.i, label %if.then1.i.cleanup_crit_edge, label %lor.lhs.false.i.i

if.then1.i.cleanup_crit_edge:                     ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %if.then1.i
  %internal_tag.i.i = getelementptr i8, ptr %9, i32 -32
  %22 = ptrtoint ptr %internal_tag.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %internal_tag.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %23)
  %cmp1.i.i = icmp eq i32 %23, -1
  br i1 %cmp1.i.i, label %lor.lhs.false.i.i.cleanup_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %24 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mq_hctx, align 8
  %tags.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %25, i32 0, i32 19
  %26 = ptrtoint ptr %tags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %tags.i.i.i, align 16
  %mq_ctx.i.i.i = getelementptr i8, ptr %9, i32 -52
  %28 = ptrtoint ptr %mq_ctx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mq_ctx.i.i.i, align 4
  call void @blk_mq_put_tag(ptr noundef %27, ptr noundef %29, i32 noundef %21) #20
  %30 = ptrtoint ptr %tag.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 -1, ptr %tag.i.i, align 4
  %rq_flags.i.i.i = getelementptr i8, ptr %9, i32 -40
  %31 = ptrtoint ptr %rq_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rq_flags.i.i.i, align 8
  %and.i.i.i = and i32 %32, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.cleanup_crit_edge, label %if.then.i.i.i

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %and3.i.i.i = and i32 %32, -65
  %33 = ptrtoint ptr %rq_flags.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %and3.i.i.i, ptr %rq_flags.i.i.i, align 8
  %flags.i.i.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %25, i32 0, i32 5
  %34 = ptrtoint ptr %flags.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags.i.i.i.i.i, align 16
  %and.i.i.i.i.i.i = and i32 %35, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.i.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.i.not.i.i.i.i.i, label %if.else.i.i.i.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %queue.i.i.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %25, i32 0, i32 7
  %36 = ptrtoint ptr %queue.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %queue.i.i.i.i.i, align 8
  %nr_active_requests_shared_tags.i.i.i.i.i = getelementptr inbounds %struct.request_queue, ptr %37, i32 0, i32 31
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %nr_active_requests_shared_tags.i.i.i.i.i, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %nr_active_requests_shared_tags.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %38 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active_requests_shared_tags.i.i.i.i.i, ptr %nr_active_requests_shared_tags.i.i.i.i.i, i32 1, ptr elementtype(i32) %nr_active_requests_shared_tags.i.i.i.i.i) #20, !srcloc !308
  br label %cleanup

if.else.i.i.i.i.i:                                ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active.i.i.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %25, i32 0, i32 25
  %call.i.i4.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %nr_active.i.i.i.i.i, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %nr_active.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %39 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active.i.i.i.i.i, ptr %nr_active.i.i.i.i.i, i32 1, ptr elementtype(i32) %nr_active.i.i.i.i.i) #20, !srcloc !308
  br label %cleanup

if.end.i:                                         ; preds = %blk_mq_get_dispatch_budget.exit.i.if.end.i_crit_edge, %if.then.i.if.end.i_crit_edge
  %retval.0.i51.i = phi i32 [ %call.i.i, %blk_mq_get_dispatch_budget.exit.i.if.end.i_crit_edge ], [ 0, %if.then.i.if.end.i_crit_edge ]
  %40 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %add.ptr, align 8
  %mq_ops.i23.i = getelementptr inbounds %struct.request_queue, ptr %41, i32 0, i32 5
  %42 = ptrtoint ptr %mq_ops.i23.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %mq_ops.i23.i, align 8
  %set_rq_budget_token.i.i = getelementptr inbounds %struct.blk_mq_ops, ptr %43, i32 0, i32 5
  %44 = ptrtoint ptr %set_rq_budget_token.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %set_rq_budget_token.i.i, align 4
  %tobool.not.i24.i = icmp eq ptr %45, null
  br i1 %tobool.not.i24.i, label %if.end.i.if.end2.i_crit_edge, label %if.then1.i.i

if.end.i.if.end2.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end2.i

if.then1.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  call void %45(ptr noundef %add.ptr, i32 noundef %retval.0.i51.i) #20
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.then1.i.i, %if.end.i.if.end2.i_crit_edge, %if.end33.if.end2.i_crit_edge
  %budget_token.0.i = phi i32 [ -1, %if.end33.if.end2.i_crit_edge ], [ %retval.0.i51.i, %if.end.i.if.end2.i_crit_edge ], [ %retval.0.i51.i, %if.then1.i.i ]
  %46 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mq_hctx, align 8
  %tag.i26.i = getelementptr i8, ptr %9, i32 -36
  %48 = ptrtoint ptr %tag.i26.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %tag.i26.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %49)
  %cmp.not.i.i = icmp eq i32 %49, -1
  br i1 %cmp.not.i.i, label %if.end2.i.blk_mq_get_driver_tag.exit.i_crit_edge, label %land.lhs.true.i.i

if.end2.i.blk_mq_get_driver_tag.exit.i_crit_edge: ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_get_driver_tag.exit.i

land.lhs.true.i.i:                                ; preds = %if.end2.i
  %flags.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %47, i32 0, i32 5
  %50 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %flags.i.i, align 16
  %and.i.i = and i32 %51, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i27.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i27.i, label %blk_mq_get_driver_tag.exit.thread.i, label %land.lhs.true.i.i.blk_mq_get_driver_tag.exit.i_crit_edge

land.lhs.true.i.i.blk_mq_get_driver_tag.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_get_driver_tag.exit.i

blk_mq_get_driver_tag.exit.thread.i:              ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %tags.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %47, i32 0, i32 19
  %52 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %tags.i.i, align 16
  %rqs.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %53, i32 0, i32 5
  %54 = ptrtoint ptr %rqs.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %rqs.i.i, align 4
  %arrayidx.i.i = getelementptr ptr, ptr %55, i32 %49
  %56 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %add.ptr, ptr %arrayidx.i.i, align 4
  br label %if.end47

blk_mq_get_driver_tag.exit.i:                     ; preds = %land.lhs.true.i.i.blk_mq_get_driver_tag.exit.i_crit_edge, %if.end2.i.blk_mq_get_driver_tag.exit.i_crit_edge
  %call.i29.i = call zeroext i1 @__blk_mq_get_driver_tag(ptr noundef %47, ptr noundef %add.ptr) #20
  br i1 %call.i29.i, label %blk_mq_get_driver_tag.exit.i.if.end47_crit_edge, label %if.then4.i

blk_mq_get_driver_tag.exit.i.if.end47_crit_edge:  ; preds = %blk_mq_get_driver_tag.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end47

if.then4.i:                                       ; preds = %blk_mq_get_driver_tag.exit.i
  %tags.i32.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %13, i32 0, i32 19
  %57 = ptrtoint ptr %tags.i32.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %tags.i32.i, align 16
  %flags.i33.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %13, i32 0, i32 5
  %59 = ptrtoint ptr %flags.i33.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %flags.i33.i, align 16
  %and.i34.i = and i32 %60, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i34.i)
  %tobool.not.i35.i = icmp eq i32 %and.i34.i, 0
  br i1 %tobool.not.i35.i, label %if.then.i36.i, label %if.end.i41.i

if.then.i36.i:                                    ; preds = %if.then4.i
  call void @blk_mq_sched_mark_restart_hctx(ptr noundef %13) #20
  %61 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %mq_hctx, align 8
  %63 = ptrtoint ptr %tag.i26.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %tag.i26.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %64)
  %cmp.not.i.i.i = icmp eq i32 %64, -1
  br i1 %cmp.not.i.i.i, label %if.then.i36.i.blk_mq_mark_tag_wait.exit.i_crit_edge, label %land.lhs.true.i.i.i

if.then.i36.i.blk_mq_mark_tag_wait.exit.i_crit_edge: ; preds = %if.then.i36.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_mark_tag_wait.exit.i

land.lhs.true.i.i.i:                              ; preds = %if.then.i36.i
  %flags.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %62, i32 0, i32 5
  %65 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %flags.i.i.i, align 16
  %and.i.i37.i = and i32 %66, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i37.i)
  %tobool.not.i.i38.i = icmp eq i32 %and.i.i37.i, 0
  br i1 %tobool.not.i.i38.i, label %if.then.i.i40.i, label %land.lhs.true.i.i.i.blk_mq_mark_tag_wait.exit.i_crit_edge

land.lhs.true.i.i.i.blk_mq_mark_tag_wait.exit.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_mark_tag_wait.exit.i

if.then.i.i40.i:                                  ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %tags.i.i39.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %62, i32 0, i32 19
  %67 = ptrtoint ptr %tags.i.i39.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %tags.i.i39.i, align 16
  %rqs.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %68, i32 0, i32 5
  %69 = ptrtoint ptr %rqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %rqs.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr ptr, ptr %70, i32 %64
  %71 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %add.ptr, ptr %arrayidx.i.i.i, align 4
  br label %if.end47

if.end.i41.i:                                     ; preds = %if.then4.i
  %dispatch_wait.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %13, i32 0, i32 17
  %entry1.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %13, i32 0, i32 17, i32 3
  %72 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile ptr, ptr %entry1.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !297
  %cmp.i.not.i.i.i = icmp eq ptr %73, %entry1.i.i
  br i1 %cmp.i.not.i.i.i, label %list_empty_careful.exit.i.i, label %if.end.i41.i.blk_mq_mark_tag_wait.exit.thread.i_crit_edge

if.end.i41.i.blk_mq_mark_tag_wait.exit.thread.i_crit_edge: ; preds = %if.end.i41.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_mark_tag_wait.exit.thread.i

list_empty_careful.exit.i.i:                      ; preds = %if.end.i41.i
  %prev.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %13, i32 0, i32 17, i32 3, i32 1
  %74 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %prev.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %75, %entry1.i.i
  br i1 %cmp.i.not.i.i, label %if.end5.i.i, label %list_empty_careful.exit.i.i.blk_mq_mark_tag_wait.exit.thread.i_crit_edge

list_empty_careful.exit.i.i.blk_mq_mark_tag_wait.exit.thread.i_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_mark_tag_wait.exit.thread.i

if.end5.i.i:                                      ; preds = %list_empty_careful.exit.i.i
  %tobool.not.i50.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i50.i.i, label %if.then.i51.i.i, label %if.end.i52.i.i

if.then.i51.i.i:                                  ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %ws.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %58, i32 0, i32 3, i32 3
  %76 = ptrtoint ptr %ws.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %ws.i.i.i, align 4
  br label %bt_wait_ptr.exit.i.i

if.end.i52.i.i:                                   ; preds = %if.end5.i.i
  %wait_index.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %13, i32 0, i32 18
  %ws1.i.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %58, i32 0, i32 3, i32 3
  %78 = ptrtoint ptr %ws1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %ws1.i.i.i.i, align 4
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %wait_index.i.i.i, i32 noundef 4) #20
  %80 = ptrtoint ptr %wait_index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %wait_index.i.i.i, align 4
  %call.i.i.i.i.i.i42.i = call zeroext i1 @__kasan_check_read(ptr noundef %wait_index.i.i.i, i32 noundef 4) #20
  %82 = ptrtoint ptr %wait_index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %wait_index.i.i.i, align 4
  %add.i.i.i.i.i.i = add i32 %83, 1
  %and.i.i.i.i.i43.i = and i32 %add.i.i.i.i.i.i, 7
  %call.i.i5.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %wait_index.i.i.i, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !328
  call void @llvm.prefetch.p0(ptr %wait_index.i.i.i, i32 1, i32 3, i32 1) #20
  br label %do.body.i.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i.i:                          ; preds = %do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge, %if.end.i52.i.i
  %84 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %wait_index.i.i.i, ptr %wait_index.i.i.i, i32 %83, i32 %and.i.i.i.i.i43.i, ptr elementtype(i32) %wait_index.i.i.i) #20, !srcloc !329
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %84, 0
  %tobool.not.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %sbq_wait_ptr.exit.i.i.i, label %do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i.i.i.i.i.i

sbq_wait_ptr.exit.i.i.i:                          ; preds = %do.body.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx.i.i.i.i = getelementptr %struct.sbq_wait_state, ptr %79, i32 %81
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !330
  br label %bt_wait_ptr.exit.i.i

bt_wait_ptr.exit.i.i:                             ; preds = %sbq_wait_ptr.exit.i.i.i, %if.then.i51.i.i
  %retval.0.i53.i.i = phi ptr [ %arrayidx.i.i.i.i, %sbq_wait_ptr.exit.i.i.i ], [ %77, %if.then.i51.i.i ]
  %wait7.i.i = getelementptr inbounds %struct.sbq_wait_state, ptr %retval.0.i53.i.i, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %wait7.i.i) #20
  %dispatch_wait_lock.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %13, i32 0, i32 16
  call void @_raw_spin_lock(ptr noundef %dispatch_wait_lock.i.i) #20
  %85 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile ptr, ptr %entry1.i.i, align 4
  %cmp.i54.not.i.i = icmp eq ptr %86, %entry1.i.i
  br i1 %cmp.i54.not.i.i, label %if.end14.i.i, label %bt_wait_ptr.exit.i.i.blk_mq_mark_tag_wait.exit.thread.sink.split.i_crit_edge

bt_wait_ptr.exit.i.i.blk_mq_mark_tag_wait.exit.thread.sink.split.i_crit_edge: ; preds = %bt_wait_ptr.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_mark_tag_wait.exit.thread.sink.split.i

if.end14.i.i:                                     ; preds = %bt_wait_ptr.exit.i.i
  %ws_active.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %58, i32 0, i32 3, i32 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %ws_active.i.i, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %ws_active.i.i, i32 1, i32 3, i32 1) #20
  %87 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ws_active.i.i, ptr %ws_active.i.i, i32 1, ptr elementtype(i32) %ws_active.i.i) #20, !srcloc !306
  %88 = ptrtoint ptr %dispatch_wait.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %dispatch_wait.i.i, align 4
  %and16.i.i = and i32 %89, -2
  store i32 %and16.i.i, ptr %dispatch_wait.i.i, align 4
  %head1.i.i.i = getelementptr inbounds %struct.sbq_wait_state, ptr %retval.0.i53.i.i, i32 0, i32 1, i32 1
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.end14.i.i
  %head.0.i.i.i = phi ptr [ %head1.i.i.i, %if.end14.i.i ], [ %.pn.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %90 = ptrtoint ptr %head.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %.pn.i.i.i = load ptr, ptr %head.0.i.i.i, align 4
  %cmp.not.i55.i.i = icmp eq ptr %.pn.i.i.i, %head1.i.i.i
  br i1 %cmp.not.i55.i.i, label %for.cond.i.i.i.for.end.i.i.i_crit_edge, label %for.body.i.i.i

for.cond.i.i.i.for.end.i.i.i_crit_edge:           ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i.i.i

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %wq.0.i.i.i = getelementptr i8, ptr %.pn.i.i.i, i32 -12
  %91 = ptrtoint ptr %wq.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %wq.0.i.i.i, align 4
  %and.i56.i.i = and i32 %92, 32
  %tobool.not.i57.i.i = icmp eq i32 %and.i56.i.i, 0
  br i1 %tobool.not.i57.i.i, label %for.body.i.i.i.for.end.i.i.i_crit_edge, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i.i.i

for.body.i.i.i.for.end.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i.i.i

for.end.i.i.i:                                    ; preds = %for.body.i.i.i.for.end.i.i.i_crit_edge, %for.cond.i.i.i.for.end.i.i.i_crit_edge
  %.pn.lcssa.i.i.i = phi ptr [ %.pn.i.i.i, %for.body.i.i.i.for.end.i.i.i_crit_edge ], [ %head1.i.i.i, %for.cond.i.i.i.for.end.i.i.i_crit_edge ]
  %call.i.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %entry1.i.i, ptr noundef %head.0.i.i.i, ptr noundef %.pn.lcssa.i.i.i) #20
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i.i.i, label %for.end.i.i.i.__add_wait_queue.exit.i.i_crit_edge

for.end.i.i.i.__add_wait_queue.exit.i.i_crit_edge: ; preds = %for.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__add_wait_queue.exit.i.i

if.end.i.i.i.i.i:                                 ; preds = %for.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.lcssa.i.i.i, i32 0, i32 1
  %93 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %entry1.i.i, ptr %prev1.i.i.i.i.i, align 4
  %94 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %.pn.lcssa.i.i.i, ptr %entry1.i.i, align 4
  %95 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %head.0.i.i.i, ptr %prev.i.i.i, align 4
  %96 = ptrtoint ptr %head.0.i.i.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store volatile ptr %entry1.i.i, ptr %head.0.i.i.i, align 4
  br label %__add_wait_queue.exit.i.i

__add_wait_queue.exit.i.i:                        ; preds = %if.end.i.i.i.i.i, %for.end.i.i.i.__add_wait_queue.exit.i.i_crit_edge
  %97 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %mq_hctx, align 8
  %99 = ptrtoint ptr %tag.i26.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %tag.i26.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %100)
  %cmp.not.i60.i.i = icmp eq i32 %100, -1
  br i1 %cmp.not.i60.i.i, label %__add_wait_queue.exit.i.i.blk_mq_get_driver_tag.exit72.i.i_crit_edge, label %land.lhs.true.i64.i.i

__add_wait_queue.exit.i.i.blk_mq_get_driver_tag.exit72.i.i_crit_edge: ; preds = %__add_wait_queue.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_get_driver_tag.exit72.i.i

land.lhs.true.i64.i.i:                            ; preds = %__add_wait_queue.exit.i.i
  %flags.i61.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %98, i32 0, i32 5
  %101 = ptrtoint ptr %flags.i61.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %flags.i61.i.i, align 16
  %and.i62.i.i = and i32 %102, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i62.i.i)
  %tobool.not.i63.i.i = icmp eq i32 %and.i62.i.i, 0
  br i1 %tobool.not.i63.i.i, label %blk_mq_get_driver_tag.exit72.thread.i.i, label %land.lhs.true.i64.i.i.blk_mq_get_driver_tag.exit72.i.i_crit_edge

land.lhs.true.i64.i.i.blk_mq_get_driver_tag.exit72.i.i_crit_edge: ; preds = %land.lhs.true.i64.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_get_driver_tag.exit72.i.i

blk_mq_get_driver_tag.exit72.thread.i.i:          ; preds = %land.lhs.true.i64.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %tags.i65.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %98, i32 0, i32 19
  %103 = ptrtoint ptr %tags.i65.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %tags.i65.i.i, align 16
  %rqs.i66.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %104, i32 0, i32 5
  %105 = ptrtoint ptr %rqs.i66.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %rqs.i66.i.i, align 4
  %arrayidx.i67.i.i = getelementptr ptr, ptr %106, i32 %100
  %107 = ptrtoint ptr %arrayidx.i67.i.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %add.ptr, ptr %arrayidx.i67.i.i, align 4
  br label %if.end22.i.i

blk_mq_get_driver_tag.exit72.i.i:                 ; preds = %land.lhs.true.i64.i.i.blk_mq_get_driver_tag.exit72.i.i_crit_edge, %__add_wait_queue.exit.i.i.blk_mq_get_driver_tag.exit72.i.i_crit_edge
  %call.i69.i.i = call zeroext i1 @__blk_mq_get_driver_tag(ptr noundef %98, ptr noundef %add.ptr) #20
  br i1 %call.i69.i.i, label %blk_mq_get_driver_tag.exit72.i.i.if.end22.i.i_crit_edge, label %blk_mq_get_driver_tag.exit72.i.i.blk_mq_mark_tag_wait.exit.thread.sink.split.i_crit_edge

blk_mq_get_driver_tag.exit72.i.i.blk_mq_mark_tag_wait.exit.thread.sink.split.i_crit_edge: ; preds = %blk_mq_get_driver_tag.exit72.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_mark_tag_wait.exit.thread.sink.split.i

blk_mq_get_driver_tag.exit72.i.i.if.end22.i.i_crit_edge: ; preds = %blk_mq_get_driver_tag.exit72.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22.i.i

if.end22.i.i:                                     ; preds = %blk_mq_get_driver_tag.exit72.i.i.if.end22.i.i_crit_edge, %blk_mq_get_driver_tag.exit72.thread.i.i
  %call.i.i73.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1.i.i) #20
  br i1 %call.i.i73.i.i, label %if.end.i.i.i.i, label %if.end22.i.i.list_del_init.exit.i.i_crit_edge

if.end22.i.i.list_del_init.exit.i.i_crit_edge:    ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit.i.i

if.end.i.i.i.i:                                   ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %108 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %prev.i.i.i, align 4
  %110 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %entry1.i.i, align 4
  %prev1.i.i.i74.i.i = getelementptr inbounds %struct.list_head, ptr %111, i32 0, i32 1
  %112 = ptrtoint ptr %prev1.i.i.i74.i.i to i32
  call void @__asan_store4_noabort(i32 %112)
  store ptr %109, ptr %prev1.i.i.i74.i.i, align 4
  %113 = ptrtoint ptr %109 to i32
  call void @__asan_store4_noabort(i32 %113)
  store volatile ptr %111, ptr %109, align 4
  br label %list_del_init.exit.i.i

list_del_init.exit.i.i:                           ; preds = %if.end.i.i.i.i, %if.end22.i.i.list_del_init.exit.i.i_crit_edge
  %114 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store volatile ptr %entry1.i.i, ptr %entry1.i.i, align 4
  %115 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store ptr %entry1.i.i, ptr %prev.i.i.i, align 4
  %call.i.i49.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %ws_active.i.i, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %ws_active.i.i, i32 1, i32 3, i32 1) #20
  %116 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ws_active.i.i, ptr %ws_active.i.i, i32 1, ptr elementtype(i32) %ws_active.i.i) #20, !srcloc !308
  call void @_raw_spin_unlock(ptr noundef %dispatch_wait_lock.i.i) #20
  call void @_raw_spin_unlock_irq(ptr noundef %wait7.i.i) #20
  br label %if.end47

blk_mq_mark_tag_wait.exit.thread.sink.split.i:    ; preds = %blk_mq_get_driver_tag.exit72.i.i.blk_mq_mark_tag_wait.exit.thread.sink.split.i_crit_edge, %bt_wait_ptr.exit.i.i.blk_mq_mark_tag_wait.exit.thread.sink.split.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %dispatch_wait_lock.i.i) #20
  call void @_raw_spin_unlock_irq(ptr noundef %wait7.i.i) #20
  br label %blk_mq_mark_tag_wait.exit.thread.i

blk_mq_mark_tag_wait.exit.thread.i:               ; preds = %blk_mq_mark_tag_wait.exit.thread.sink.split.i, %list_empty_careful.exit.i.i.blk_mq_mark_tag_wait.exit.thread.i_crit_edge, %if.end.i41.i.blk_mq_mark_tag_wait.exit.thread.i_crit_edge
  br i1 %tobool41.not, label %blk_mq_mark_tag_wait.exit.thread.i.if.then8.i_crit_edge, label %blk_mq_mark_tag_wait.exit.thread.i.cleanup_crit_edge

blk_mq_mark_tag_wait.exit.thread.i.cleanup_crit_edge: ; preds = %blk_mq_mark_tag_wait.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

blk_mq_mark_tag_wait.exit.thread.i.if.then8.i_crit_edge: ; preds = %blk_mq_mark_tag_wait.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then8.i

blk_mq_mark_tag_wait.exit.i:                      ; preds = %land.lhs.true.i.i.i.blk_mq_mark_tag_wait.exit.i_crit_edge, %if.then.i36.i.blk_mq_mark_tag_wait.exit.i_crit_edge
  %call.i.i.i = call zeroext i1 @__blk_mq_get_driver_tag(ptr noundef %62, ptr noundef %add.ptr) #20
  %need_budget.not.i = xor i1 %tobool41.not, true
  %brmerge.i = or i1 %call.i.i.i, %need_budget.not.i
  br i1 %brmerge.i, label %blk_mq_prep_dispatch_rq.exit, label %blk_mq_mark_tag_wait.exit.i.if.then8.i_crit_edge

blk_mq_mark_tag_wait.exit.i.if.then8.i_crit_edge: ; preds = %blk_mq_mark_tag_wait.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then8.i

if.then8.i:                                       ; preds = %blk_mq_mark_tag_wait.exit.i.if.then8.i_crit_edge, %blk_mq_mark_tag_wait.exit.thread.i.if.then8.i_crit_edge
  %117 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %add.ptr, align 8
  %mq_ops.i45.i = getelementptr inbounds %struct.request_queue, ptr %118, i32 0, i32 5
  %119 = ptrtoint ptr %mq_ops.i45.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %mq_ops.i45.i, align 8
  %put_budget.i.i = getelementptr inbounds %struct.blk_mq_ops, ptr %120, i32 0, i32 4
  %121 = ptrtoint ptr %put_budget.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %put_budget.i.i, align 4
  %tobool.not.i46.i = icmp eq ptr %122, null
  br i1 %tobool.not.i46.i, label %if.then8.i.cleanup_crit_edge, label %if.then.i47.i

if.then8.i.cleanup_crit_edge:                     ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then.i47.i:                                    ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #22
  call void %122(ptr noundef %118, i32 noundef %budget_token.0.i) #20
  br label %cleanup

blk_mq_prep_dispatch_rq.exit:                     ; preds = %blk_mq_mark_tag_wait.exit.i
  br i1 %call.i.i.i, label %blk_mq_prep_dispatch_rq.exit.if.end47_crit_edge, label %blk_mq_prep_dispatch_rq.exit.cleanup_crit_edge

blk_mq_prep_dispatch_rq.exit.cleanup_crit_edge:   ; preds = %blk_mq_prep_dispatch_rq.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

blk_mq_prep_dispatch_rq.exit.if.end47_crit_edge:  ; preds = %blk_mq_prep_dispatch_rq.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end47

if.end47:                                         ; preds = %blk_mq_prep_dispatch_rq.exit.if.end47_crit_edge, %list_del_init.exit.i.i, %if.then.i.i40.i, %blk_mq_get_driver_tag.exit.i.if.end47_crit_edge, %blk_mq_get_driver_tag.exit.thread.i
  %call.i.i205 = call zeroext i1 @__list_del_entry_valid(ptr noundef %9) #20
  br i1 %call.i.i205, label %if.end.i.i206, label %if.end47.list_del_init.exit_crit_edge

if.end47.list_del_init.exit_crit_edge:            ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit

if.end.i.i206:                                    ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %123 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %prev.i.i, align 4
  %125 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %9, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %126, i32 0, i32 1
  %127 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %127)
  store ptr %124, ptr %prev1.i.i.i, align 4
  %128 = ptrtoint ptr %124 to i32
  call void @__asan_store4_noabort(i32 %128)
  store volatile ptr %126, ptr %124, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i206, %if.end47.list_del_init.exit_crit_edge
  %129 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %129)
  store volatile ptr %9, ptr %9, align 4
  %prev.i3.i = getelementptr %struct.list_head, ptr %9, i32 0, i32 1
  %130 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %130)
  store ptr %9, ptr %prev.i3.i, align 4
  %131 = ptrtoint ptr %bd to i32
  call void @__asan_store4_noabort(i32 %131)
  store ptr %add.ptr, ptr %bd, align 8
  %132 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load volatile ptr, ptr %list, align 4
  %cmp.i207.not = icmp eq ptr %133, %list
  br i1 %cmp.i207.not, label %list_del_init.exit.if.end61_crit_edge, label %if.else

list_del_init.exit.if.end61_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end61

if.else:                                          ; preds = %list_del_init.exit
  %add.ptr55 = getelementptr i8, ptr %133, i32 -56
  %mq_hctx.i209 = getelementptr i8, ptr %133, i32 -48
  %134 = ptrtoint ptr %mq_hctx.i209 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %mq_hctx.i209, align 8
  %tag.i = getelementptr i8, ptr %133, i32 -36
  %136 = ptrtoint ptr %tag.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %tag.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %137)
  %cmp.not.i = icmp eq i32 %137, -1
  br i1 %cmp.not.i, label %if.else.if.end.i211_crit_edge, label %land.lhs.true.i

if.else.if.end.i211_crit_edge:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i211

land.lhs.true.i:                                  ; preds = %if.else
  %flags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %135, i32 0, i32 5
  %138 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %flags.i, align 16
  %and.i = and i32 %139, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i210, label %land.lhs.true.i.if.end.i211_crit_edge

land.lhs.true.i.if.end.i211_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i211

if.then.i210:                                     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %135, i32 0, i32 19
  %140 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %tags.i, align 16
  %rqs.i = getelementptr inbounds %struct.blk_mq_tags, ptr %141, i32 0, i32 5
  %142 = ptrtoint ptr %rqs.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %rqs.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %143, i32 %137
  %144 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store ptr %add.ptr55, ptr %arrayidx.i, align 4
  br label %blk_mq_get_driver_tag.exit

if.end.i211:                                      ; preds = %land.lhs.true.i.if.end.i211_crit_edge, %if.else.if.end.i211_crit_edge
  %call.i = call zeroext i1 @__blk_mq_get_driver_tag(ptr noundef %135, ptr noundef %add.ptr55) #20
  br label %blk_mq_get_driver_tag.exit

blk_mq_get_driver_tag.exit:                       ; preds = %if.end.i211, %if.then.i210
  %retval.0.i212 = phi i1 [ %call.i, %if.end.i211 ], [ true, %if.then.i210 ]
  %lnot57 = xor i1 %retval.0.i212, true
  %frombool60 = zext i1 %lnot57 to i8
  br label %if.end61

if.end61:                                         ; preds = %blk_mq_get_driver_tag.exit, %list_del_init.exit.if.end61_crit_edge
  %storemerge = phi i8 [ %frombool60, %blk_mq_get_driver_tag.exit ], [ 1, %list_del_init.exit.if.end61_crit_edge ]
  %145 = ptrtoint ptr %last59 to i32
  call void @__asan_store1_noabort(i32 %145)
  store i8 %storemerge, ptr %last59, align 4
  %dec = add i32 %nr_budgets.addr.0, -1
  %spec.select = select i1 %tobool41.not, i32 0, i32 %dec
  %146 = ptrtoint ptr %mq_ops to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %mq_ops, align 8
  %148 = ptrtoint ptr %147 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %147, align 4
  %call65 = call zeroext i8 %149(ptr noundef %hctx, ptr noundef nonnull %bd) #20
  %150 = zext i8 %call65 to i64
  call void @__sanitizer_cov_trace_switch(i64 %150, ptr @__sancov_gen_cov_switch_values.67)
  switch i8 %call65, label %sw.default [
    i8 0, label %sw.bb
    i8 9, label %if.end61.sw.bb67_crit_edge
    i8 13, label %sw.bb67.loopexit
    i8 14, label %sw.bb68
  ]

if.end61.sw.bb67_crit_edge:                       ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb67

sw.bb:                                            ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #22
  %inc = add i32 %queued.0, 1
  br label %do.cond70

sw.bb67.loopexit:                                 ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb67

sw.bb67:                                          ; preds = %sw.bb67.loopexit, %if.end61.sw.bb67_crit_edge
  %needs_resource.1.off0 = phi i1 [ %needs_resource.0.off0, %sw.bb67.loopexit ], [ true, %if.end61.sw.bb67_crit_edge ]
  %151 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile ptr, ptr %list, align 4
  %cmp.not.i213 = icmp eq ptr %152, %list
  %add.ptr.i = getelementptr i8, ptr %152, i32 -56
  %tobool.not9.i = icmp eq ptr %add.ptr.i, null
  %tobool.not.i214 = or i1 %cmp.not.i213, %tobool.not9.i
  br i1 %tobool.not.i214, label %sw.bb67.if.end.i240_crit_edge, label %if.then.i217

sw.bb67.if.end.i240_crit_edge:                    ; preds = %sw.bb67
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i240

if.then.i217:                                     ; preds = %sw.bb67
  %tag.i.i215 = getelementptr i8, ptr %152, i32 -36
  %153 = ptrtoint ptr %tag.i.i215 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %tag.i.i215, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %154)
  %cmp.i.i216 = icmp eq i32 %154, -1
  br i1 %cmp.i.i216, label %if.then.i217.if.end.i240_crit_edge, label %lor.lhs.false.i.i220

if.then.i217.if.end.i240_crit_edge:               ; preds = %if.then.i217
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i240

lor.lhs.false.i.i220:                             ; preds = %if.then.i217
  %internal_tag.i.i218 = getelementptr i8, ptr %152, i32 -32
  %155 = ptrtoint ptr %internal_tag.i.i218 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %internal_tag.i.i218, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %156)
  %cmp1.i.i219 = icmp eq i32 %156, -1
  br i1 %cmp1.i.i219, label %lor.lhs.false.i.i220.if.end.i240_crit_edge, label %if.end.i.i226

lor.lhs.false.i.i220.if.end.i240_crit_edge:       ; preds = %lor.lhs.false.i.i220
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i240

if.end.i.i226:                                    ; preds = %lor.lhs.false.i.i220
  %mq_hctx.i.i = getelementptr i8, ptr %152, i32 -48
  %157 = ptrtoint ptr %mq_hctx.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %mq_hctx.i.i, align 8
  %tags.i.i.i221 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %158, i32 0, i32 19
  %159 = ptrtoint ptr %tags.i.i.i221 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %tags.i.i.i221, align 16
  %mq_ctx.i.i.i222 = getelementptr i8, ptr %152, i32 -52
  %161 = ptrtoint ptr %mq_ctx.i.i.i222 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %mq_ctx.i.i.i222, align 4
  call void @blk_mq_put_tag(ptr noundef %160, ptr noundef %162, i32 noundef %154) #20
  %163 = ptrtoint ptr %tag.i.i215 to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 -1, ptr %tag.i.i215, align 4
  %rq_flags.i.i.i223 = getelementptr i8, ptr %152, i32 -40
  %164 = ptrtoint ptr %rq_flags.i.i.i223 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %rq_flags.i.i.i223, align 8
  %and.i.i.i224 = and i32 %165, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i224)
  %tobool.not.i.i.i225 = icmp eq i32 %and.i.i.i224, 0
  br i1 %tobool.not.i.i.i225, label %if.end.i.i226.if.end.i240_crit_edge, label %if.then.i.i.i231

if.end.i.i226.if.end.i240_crit_edge:              ; preds = %if.end.i.i226
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i240

if.then.i.i.i231:                                 ; preds = %if.end.i.i226
  %and3.i.i.i227 = and i32 %165, -65
  %166 = ptrtoint ptr %rq_flags.i.i.i223 to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 %and3.i.i.i227, ptr %rq_flags.i.i.i223, align 8
  %flags.i.i.i.i.i228 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %158, i32 0, i32 5
  %167 = ptrtoint ptr %flags.i.i.i.i.i228 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %flags.i.i.i.i.i228, align 16
  %and.i.i.i.i.i.i229 = and i32 %168, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i229)
  %tobool.i.not.i.i.i.i.i230 = icmp eq i32 %and.i.i.i.i.i.i229, 0
  br i1 %tobool.i.not.i.i.i.i.i230, label %if.else.i.i.i.i.i238, label %if.then.i.i.i.i.i235

if.then.i.i.i.i.i235:                             ; preds = %if.then.i.i.i231
  call void @__sanitizer_cov_trace_pc() #22
  %queue.i.i.i.i.i232 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %158, i32 0, i32 7
  %169 = ptrtoint ptr %queue.i.i.i.i.i232 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %queue.i.i.i.i.i232, align 8
  %nr_active_requests_shared_tags.i.i.i.i.i233 = getelementptr inbounds %struct.request_queue, ptr %170, i32 0, i32 31
  %call.i.i.i.i.i.i.i234 = call zeroext i1 @__kasan_check_write(ptr noundef %nr_active_requests_shared_tags.i.i.i.i.i233, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %nr_active_requests_shared_tags.i.i.i.i.i233, i32 1, i32 3, i32 1) #20
  %171 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active_requests_shared_tags.i.i.i.i.i233, ptr %nr_active_requests_shared_tags.i.i.i.i.i233, i32 1, ptr elementtype(i32) %nr_active_requests_shared_tags.i.i.i.i.i233) #20, !srcloc !308
  br label %if.end.i240

if.else.i.i.i.i.i238:                             ; preds = %if.then.i.i.i231
  call void @__sanitizer_cov_trace_pc() #22
  %nr_active.i.i.i.i.i236 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %158, i32 0, i32 25
  %call.i.i4.i.i.i.i.i237 = call zeroext i1 @__kasan_check_write(ptr noundef %nr_active.i.i.i.i.i236, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %nr_active.i.i.i.i.i236, i32 1, i32 3, i32 1) #20
  %172 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_active.i.i.i.i.i236, ptr %nr_active.i.i.i.i.i236, i32 1, ptr elementtype(i32) %nr_active.i.i.i.i.i236) #20, !srcloc !308
  br label %if.end.i240

if.end.i240:                                      ; preds = %if.else.i.i.i.i.i238, %if.then.i.i.i.i.i235, %if.end.i.i226.if.end.i240_crit_edge, %lor.lhs.false.i.i220.if.end.i240_crit_edge, %if.then.i217.if.end.i240_crit_edge, %sw.bb67.if.end.i240_crit_edge
  %173 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %list, align 4
  %call.i.i.i239 = call zeroext i1 @__list_add_valid(ptr noundef %9, ptr noundef %list, ptr noundef %174) #20
  br i1 %call.i.i.i239, label %if.end.i.i.i, label %if.end.i240.blk_mq_handle_dev_resource.exit_crit_edge

if.end.i240.blk_mq_handle_dev_resource.exit_crit_edge: ; preds = %if.end.i240
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_handle_dev_resource.exit

if.end.i.i.i:                                     ; preds = %if.end.i240
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i.i241 = getelementptr inbounds %struct.list_head, ptr %174, i32 0, i32 1
  %175 = ptrtoint ptr %prev1.i.i.i241 to i32
  call void @__asan_store4_noabort(i32 %175)
  store ptr %9, ptr %prev1.i.i.i241, align 4
  %176 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %176)
  store ptr %174, ptr %9, align 4
  %177 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store ptr %list, ptr %prev.i3.i, align 4
  %178 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %178)
  store volatile ptr %9, ptr %list, align 4
  br label %blk_mq_handle_dev_resource.exit

blk_mq_handle_dev_resource.exit:                  ; preds = %if.end.i.i.i, %if.end.i240.blk_mq_handle_dev_resource.exit_crit_edge
  call fastcc void @__blk_mq_requeue_request(ptr noundef %add.ptr) #20
  br label %cleanup

sw.bb68:                                          ; preds = %if.end61
  %179 = ptrtoint ptr %zone_list to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %zone_list, align 4
  %call.i.i.i242 = call zeroext i1 @__list_add_valid(ptr noundef %9, ptr noundef nonnull %zone_list, ptr noundef %180) #20
  br i1 %call.i.i.i242, label %if.end.i.i.i245, label %sw.bb68.blk_mq_handle_zone_resource.exit_crit_edge

sw.bb68.blk_mq_handle_zone_resource.exit_crit_edge: ; preds = %sw.bb68
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_handle_zone_resource.exit

if.end.i.i.i245:                                  ; preds = %sw.bb68
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i.i243 = getelementptr inbounds %struct.list_head, ptr %180, i32 0, i32 1
  %181 = ptrtoint ptr %prev1.i.i.i243 to i32
  call void @__asan_store4_noabort(i32 %181)
  store ptr %9, ptr %prev1.i.i.i243, align 4
  %182 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %182)
  store ptr %180, ptr %9, align 4
  %183 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %183)
  store ptr %zone_list, ptr %prev.i3.i, align 4
  %184 = ptrtoint ptr %zone_list to i32
  call void @__asan_store4_noabort(i32 %184)
  store volatile ptr %9, ptr %zone_list, align 4
  br label %blk_mq_handle_zone_resource.exit

blk_mq_handle_zone_resource.exit:                 ; preds = %if.end.i.i.i245, %sw.bb68.blk_mq_handle_zone_resource.exit_crit_edge
  call fastcc void @__blk_mq_requeue_request(ptr noundef %add.ptr) #20
  br label %do.cond70

sw.default:                                       ; preds = %if.end61
  %__data_len.i.i = getelementptr i8, ptr %9, i32 -24
  %185 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %__data_len.i.i, align 8
  %call1.i = call zeroext i1 @blk_update_request(ptr noundef %add.ptr, i8 noundef zeroext %call65, i32 noundef %186) #20
  br i1 %call1.i, label %do.body.i, label %blk_mq_end_request.exit

do.body.i:                                        ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #22
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 933, 0\0A.popsection", ""() #20, !srcloc !319
  unreachable

blk_mq_end_request.exit:                          ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #22
  %inc69 = add i32 %errors.0, 1
  call void @__blk_mq_end_request(ptr noundef %add.ptr, i8 noundef zeroext %call65) #20
  br label %do.cond70

cleanup:                                          ; preds = %blk_mq_handle_dev_resource.exit, %blk_mq_prep_dispatch_rq.exit.cleanup_crit_edge, %if.then.i47.i, %if.then8.i.cleanup_crit_edge, %blk_mq_mark_tag_wait.exit.thread.i.cleanup_crit_edge, %if.else.i.i.i.i.i, %if.then.i.i.i.i.i, %if.end.i.i.cleanup_crit_edge, %lor.lhs.false.i.i.cleanup_crit_edge, %if.then1.i.cleanup_crit_edge
  %retval.0.i284 = phi i32 [ 0, %blk_mq_handle_dev_resource.exit ], [ 1, %if.then.i47.i ], [ 1, %if.then8.i.cleanup_crit_edge ], [ 1, %blk_mq_mark_tag_wait.exit.thread.i.cleanup_crit_edge ], [ 2, %if.else.i.i.i.i.i ], [ 2, %if.then.i.i.i.i.i ], [ 2, %if.end.i.i.cleanup_crit_edge ], [ 2, %lor.lhs.false.i.i.cleanup_crit_edge ], [ 2, %if.then1.i.cleanup_crit_edge ], [ 1, %blk_mq_prep_dispatch_rq.exit.cleanup_crit_edge ]
  %needs_resource.3.off0 = phi i1 [ %needs_resource.1.off0, %blk_mq_handle_dev_resource.exit ], [ %needs_resource.0.off0, %if.then.i47.i ], [ %needs_resource.0.off0, %if.then8.i.cleanup_crit_edge ], [ %needs_resource.0.off0, %blk_mq_mark_tag_wait.exit.thread.i.cleanup_crit_edge ], [ %needs_resource.0.off0, %if.else.i.i.i.i.i ], [ %needs_resource.0.off0, %if.then.i.i.i.i.i ], [ %needs_resource.0.off0, %if.end.i.i.cleanup_crit_edge ], [ %needs_resource.0.off0, %lor.lhs.false.i.i.cleanup_crit_edge ], [ %needs_resource.0.off0, %if.then1.i.cleanup_crit_edge ], [ %needs_resource.0.off0, %blk_mq_prep_dispatch_rq.exit.cleanup_crit_edge ]
  %nr_budgets.addr.2 = phi i32 [ %spec.select, %blk_mq_handle_dev_resource.exit ], [ %nr_budgets.addr.0, %if.then.i47.i ], [ %nr_budgets.addr.0, %if.then8.i.cleanup_crit_edge ], [ %nr_budgets.addr.0, %blk_mq_mark_tag_wait.exit.thread.i.cleanup_crit_edge ], [ 0, %if.else.i.i.i.i.i ], [ 0, %if.then.i.i.i.i.i ], [ 0, %if.end.i.i.cleanup_crit_edge ], [ 0, %lor.lhs.false.i.i.cleanup_crit_edge ], [ 0, %if.then1.i.cleanup_crit_edge ], [ %nr_budgets.addr.0, %blk_mq_prep_dispatch_rq.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bd) #20
  br label %out

do.cond70:                                        ; preds = %blk_mq_end_request.exit, %blk_mq_handle_zone_resource.exit, %sw.bb
  %errors.2.ph = phi i32 [ %errors.0, %sw.bb ], [ %errors.0, %blk_mq_handle_zone_resource.exit ], [ %inc69, %blk_mq_end_request.exit ]
  %queued.2.ph = phi i32 [ %inc, %sw.bb ], [ %queued.0, %blk_mq_handle_zone_resource.exit ], [ %queued.0, %blk_mq_end_request.exit ]
  %needs_resource.3.off0.ph = phi i1 [ %needs_resource.0.off0, %sw.bb ], [ true, %blk_mq_handle_zone_resource.exit ], [ %needs_resource.0.off0, %blk_mq_end_request.exit ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bd) #20
  %187 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load volatile ptr, ptr %list, align 4
  %cmp.i247.not = icmp eq ptr %188, %list
  br i1 %cmp.i247.not, label %do.cond70.out_crit_edge, label %do.cond70.do.body_crit_edge

do.cond70.do.body_crit_edge:                      ; preds = %do.cond70
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

do.cond70.out_crit_edge:                          ; preds = %do.cond70
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

out:                                              ; preds = %do.cond70.out_crit_edge, %cleanup
  %nr_budgets.addr.2304 = phi i32 [ %nr_budgets.addr.2, %cleanup ], [ %spec.select, %do.cond70.out_crit_edge ]
  %needs_resource.3.off0303 = phi i1 [ %needs_resource.3.off0, %cleanup ], [ %needs_resource.3.off0.ph, %do.cond70.out_crit_edge ]
  %queued.2300 = phi i32 [ %queued.0, %cleanup ], [ %queued.2.ph, %do.cond70.out_crit_edge ]
  %errors.2298 = phi i32 [ %errors.0, %cleanup ], [ %errors.2.ph, %do.cond70.out_crit_edge ]
  %retval.0.i284296 = phi i32 [ %retval.0.i284, %cleanup ], [ 0, %do.cond70.out_crit_edge ]
  %189 = ptrtoint ptr %zone_list to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load volatile ptr, ptr %zone_list, align 4
  %cmp.i249.not = icmp eq ptr %190, %zone_list
  br i1 %cmp.i249.not, label %out.if.end79_crit_edge, label %if.then78

out.if.end79_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end79

if.then78:                                        ; preds = %out
  %191 = ptrtoint ptr %zone_list to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load volatile ptr, ptr %zone_list, align 4
  %cmp.i.not.i = icmp eq ptr %192, %zone_list
  br i1 %cmp.i.not.i, label %if.then78.if.end79_crit_edge, label %if.then.i251

if.then78.if.end79_crit_edge:                     ; preds = %if.then78
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end79

if.then.i251:                                     ; preds = %if.then78
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %193 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %prev.i, align 4
  %195 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %2, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %192, i32 0, i32 1
  %197 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %197)
  store ptr %194, ptr %prev3.i.i, align 4
  %198 = ptrtoint ptr %194 to i32
  call void @__asan_store4_noabort(i32 %198)
  store ptr %192, ptr %194, align 4
  %199 = ptrtoint ptr %196 to i32
  call void @__asan_store4_noabort(i32 %199)
  store ptr %list, ptr %196, align 4
  store ptr %196, ptr %prev.i, align 4
  %200 = ptrtoint ptr %zone_list to i32
  call void @__asan_store4_noabort(i32 %200)
  store volatile ptr %zone_list, ptr %zone_list, align 4
  store ptr %zone_list, ptr %2, align 4
  br label %if.end79

if.end79:                                         ; preds = %if.then.i251, %if.then78.if.end79_crit_edge, %out.if.end79_crit_edge
  %201 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load volatile ptr, ptr %list, align 4
  %cmp.i253 = icmp eq ptr %202, %list
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %errors.2298)
  %tobool82.not = icmp eq i32 %errors.2298, 0
  %or.cond = select i1 %cmp.i253, i1 %tobool82.not, i1 false
  br i1 %or.cond, label %if.end79.if.end90_crit_edge, label %land.lhs.true

if.end79.if.end90_crit_edge:                      ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end90

land.lhs.true:                                    ; preds = %if.end79
  %203 = ptrtoint ptr %mq_ops to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %mq_ops, align 8
  %commit_rqs = getelementptr inbounds %struct.blk_mq_ops, ptr %204, i32 0, i32 1
  %205 = ptrtoint ptr %commit_rqs to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %commit_rqs, align 4
  %tobool84.not = icmp eq ptr %206, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %queued.2300)
  %tobool86.not = icmp eq i32 %queued.2300, 0
  %or.cond202 = select i1 %tobool84.not, i1 true, i1 %tobool86.not
  br i1 %or.cond202, label %land.lhs.true.if.end90_crit_edge, label %if.then87

land.lhs.true.if.end90_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end90

if.then87:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  call void %206(ptr noundef %hctx) #20
  br label %if.end90

if.end90:                                         ; preds = %if.then87, %land.lhs.true.if.end90_crit_edge, %if.end79.if.end90_crit_edge
  %207 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load volatile ptr, ptr %list, align 4
  %cmp.i255 = icmp eq ptr %208, %list
  br i1 %cmp.i255, label %if.else136, label %if.then93

if.then93:                                        ; preds = %if.end90
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retval.0.i284296)
  %cmp94 = icmp eq i32 %retval.0.i284296, 1
  br i1 %cmp94, label %land.rhs96, label %if.then93.land.end98_crit_edge

if.then93.land.end98_crit_edge:                   ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end98

land.rhs96:                                       ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #22
  %flags = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 5
  %209 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %flags, align 16
  %and = and i32 %210, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool97 = icmp ne i32 %and, 0
  br label %land.end98

land.end98:                                       ; preds = %land.rhs96, %if.then93.land.end98_crit_edge
  %211 = phi i1 [ false, %if.then93.land.end98_crit_edge ], [ %tobool97, %land.rhs96 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_budgets.addr.2304)
  %tobool100.not = icmp eq i32 %nr_budgets.addr.2304, 0
  br i1 %tobool100.not, label %land.end98.if.end102_crit_edge, label %land.end98.for.body.i_crit_edge

land.end98.for.body.i_crit_edge:                  ; preds = %land.end98
  br label %for.body.i

land.end98.if.end102_crit_edge:                   ; preds = %land.end98
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end102

for.body.i:                                       ; preds = %if.end.i263.for.body.i_crit_edge, %land.end98.for.body.i_crit_edge
  %.pn17.i = phi ptr [ %.pn.i, %if.end.i263.for.body.i_crit_edge ], [ %208, %land.end98.for.body.i_crit_edge ]
  %rq.0.i = getelementptr i8, ptr %.pn17.i, i32 -56
  %212 = ptrtoint ptr %rq.0.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %rq.0.i, align 8
  %mq_ops.i.i257 = getelementptr inbounds %struct.request_queue, ptr %213, i32 0, i32 5
  %214 = ptrtoint ptr %mq_ops.i.i257 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %mq_ops.i.i257, align 8
  %get_rq_budget_token.i.i = getelementptr inbounds %struct.blk_mq_ops, ptr %215, i32 0, i32 6
  %216 = ptrtoint ptr %get_rq_budget_token.i.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %get_rq_budget_token.i.i, align 4
  %tobool.not.i.i258 = icmp eq ptr %217, null
  br i1 %tobool.not.i.i258, label %for.body.i.if.end.i263_crit_edge, label %blk_mq_get_rq_budget_token.exit.i

for.body.i.if.end.i263_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i263

blk_mq_get_rq_budget_token.exit.i:                ; preds = %for.body.i
  %call.i.i259 = call i32 %217(ptr noundef %rq.0.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i259)
  %cmp1.i = icmp sgt i32 %call.i.i259, -1
  br i1 %cmp1.i, label %if.then.i261, label %blk_mq_get_rq_budget_token.exit.i.if.end.i263_crit_edge

blk_mq_get_rq_budget_token.exit.i.if.end.i263_crit_edge: ; preds = %blk_mq_get_rq_budget_token.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i263

if.then.i261:                                     ; preds = %blk_mq_get_rq_budget_token.exit.i
  %218 = ptrtoint ptr %mq_ops to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %mq_ops, align 8
  %put_budget.i.i260 = getelementptr inbounds %struct.blk_mq_ops, ptr %219, i32 0, i32 4
  %220 = ptrtoint ptr %put_budget.i.i260 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %put_budget.i.i260, align 4
  %tobool.not.i11.i = icmp eq ptr %221, null
  br i1 %tobool.not.i11.i, label %if.then.i261.if.end.i263_crit_edge, label %if.then.i12.i

if.then.i261.if.end.i263_crit_edge:               ; preds = %if.then.i261
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i263

if.then.i12.i:                                    ; preds = %if.then.i261
  call void @__sanitizer_cov_trace_pc() #22
  call void %221(ptr noundef %1, i32 noundef %call.i.i259) #20
  br label %if.end.i263

if.end.i263:                                      ; preds = %if.then.i12.i, %if.then.i261.if.end.i263_crit_edge, %blk_mq_get_rq_budget_token.exit.i.if.end.i263_crit_edge, %for.body.i.if.end.i263_crit_edge
  %222 = ptrtoint ptr %.pn17.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %.pn.i = load ptr, ptr %.pn17.i, align 4
  %cmp.not.i262 = icmp eq ptr %.pn.i, %list
  br i1 %cmp.not.i262, label %if.end.i263.if.end102_crit_edge, label %if.end.i263.for.body.i_crit_edge

if.end.i263.for.body.i_crit_edge:                 ; preds = %if.end.i263
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

if.end.i263.if.end102_crit_edge:                  ; preds = %if.end.i263
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end102

if.end102:                                        ; preds = %if.end.i263.if.end102_crit_edge, %land.end98.if.end102_crit_edge
  call void @_raw_spin_lock(ptr noundef %hctx) #20
  %223 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load volatile ptr, ptr %list, align 4
  %cmp.i.not.i264 = icmp eq ptr %224, %list
  br i1 %cmp.i.not.i264, label %if.end102.list_splice_tail_init.exit270_crit_edge, label %if.then.i268

if.end102.list_splice_tail_init.exit270_crit_edge: ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_splice_tail_init.exit270

if.then.i268:                                     ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #22
  %dispatch = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 1
  %prev.i265 = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 1, i32 1
  %225 = ptrtoint ptr %prev.i265 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %prev.i265, align 4
  %prev2.i.i266 = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %227 = ptrtoint ptr %prev2.i.i266 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %prev2.i.i266, align 4
  %prev3.i.i267 = getelementptr inbounds %struct.list_head, ptr %224, i32 0, i32 1
  %229 = ptrtoint ptr %prev3.i.i267 to i32
  call void @__asan_store4_noabort(i32 %229)
  store ptr %226, ptr %prev3.i.i267, align 4
  %230 = ptrtoint ptr %226 to i32
  call void @__asan_store4_noabort(i32 %230)
  store ptr %224, ptr %226, align 4
  %231 = ptrtoint ptr %228 to i32
  call void @__asan_store4_noabort(i32 %231)
  store ptr %dispatch, ptr %228, align 4
  store ptr %228, ptr %prev.i265, align 4
  %232 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %232)
  store volatile ptr %list, ptr %list, align 4
  store ptr %list, ptr %prev2.i.i266, align 4
  br label %list_splice_tail_init.exit270

list_splice_tail_init.exit270:                    ; preds = %if.then.i268, %if.end102.list_splice_tail_init.exit270_crit_edge
  call void @_raw_spin_unlock(ptr noundef %hctx) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !331
  %state.i = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 2
  %233 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load volatile i32, ptr %state.i, align 4
  %235 = and i32 %234, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %235)
  %tobool.i.not = icmp eq i32 %235, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %retval.0.i284296)
  %cmp112 = icmp eq i32 %retval.0.i284296, 2
  %spec.select203 = select i1 %cmp112, i1 true, i1 %needs_resource.3.off0303
  br i1 %tobool.i.not, label %list_splice_tail_init.exit270.if.then124_crit_edge, label %lor.lhs.false117

list_splice_tail_init.exit270.if.then124_crit_edge: ; preds = %list_splice_tail_init.exit270
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then124

lor.lhs.false117:                                 ; preds = %list_splice_tail_init.exit270
  br i1 %211, label %land.lhs.true120, label %lor.lhs.false117.land.lhs.true128_crit_edge

lor.lhs.false117.land.lhs.true128_crit_edge:      ; preds = %lor.lhs.false117
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true128

land.lhs.true120:                                 ; preds = %lor.lhs.false117
  %entry121 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 17, i32 3
  %236 = ptrtoint ptr %entry121 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load volatile ptr, ptr %entry121, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !297
  %cmp.i.not.i271 = icmp eq ptr %237, %entry121
  br i1 %cmp.i.not.i271, label %list_empty_careful.exit, label %land.lhs.true120.land.lhs.true128_crit_edge

land.lhs.true120.land.lhs.true128_crit_edge:      ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true128

list_empty_careful.exit:                          ; preds = %land.lhs.true120
  %prev.i272 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 17, i32 3, i32 1
  %238 = ptrtoint ptr %prev.i272 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %prev.i272, align 4
  %cmp.i273.not = icmp eq ptr %239, %entry121
  br i1 %cmp.i273.not, label %list_empty_careful.exit.if.then124_crit_edge, label %list_empty_careful.exit.land.lhs.true128_crit_edge

list_empty_careful.exit.land.lhs.true128_crit_edge: ; preds = %list_empty_careful.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true128

list_empty_careful.exit.if.then124_crit_edge:     ; preds = %list_empty_careful.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then124

if.then124:                                       ; preds = %list_empty_careful.exit.if.then124_crit_edge, %list_splice_tail_init.exit270.if.then124_crit_edge
  call void @blk_mq_run_hw_queue(ptr noundef %hctx, i1 noundef zeroext true)
  br label %if.end133

land.lhs.true128:                                 ; preds = %list_empty_careful.exit.land.lhs.true128_crit_edge, %land.lhs.true120.land.lhs.true128_crit_edge, %lor.lhs.false117.land.lhs.true128_crit_edge
  br i1 %spec.select203, label %if.then131, label %land.lhs.true128.if.end133_crit_edge

land.lhs.true128.if.end133_crit_edge:             ; preds = %land.lhs.true128
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end133

if.then131:                                       ; preds = %land.lhs.true128
  call void @__sanitizer_cov_trace_pc() #22
  call fastcc void @__blk_mq_delay_run_hw_queue(ptr noundef %hctx, i1 noundef zeroext true, i32 noundef 3) #20
  br label %if.end133

if.end133:                                        ; preds = %if.then131, %land.lhs.true128.if.end133_crit_edge, %if.then124
  %dispatch_busy.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 12
  %240 = ptrtoint ptr %dispatch_busy.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %dispatch_busy.i, align 32
  %mul.i = mul i32 %241, 7
  %add.i = add i32 %mul.i, 16
  %div12.i = lshr i32 %add.i, 3
  store i32 %div12.i, ptr %dispatch_busy.i, align 32
  br label %cleanup140

if.else136:                                       ; preds = %if.end90
  %dispatch_busy.i276 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 12
  %242 = ptrtoint ptr %dispatch_busy.i276 to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %dispatch_busy.i276, align 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %243)
  %tobool.not.i277.not = icmp eq i32 %243, 0
  br i1 %tobool.not.i277.not, label %if.else136.blk_mq_update_dispatch_busy.exit_crit_edge, label %if.end.i281

if.else136.blk_mq_update_dispatch_busy.exit_crit_edge: ; preds = %if.else136
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_update_dispatch_busy.exit

if.end.i281:                                      ; preds = %if.else136
  call void @__sanitizer_cov_trace_pc() #22
  %mul.i278 = mul i32 %243, 7
  %div12.i280 = lshr i32 %mul.i278, 3
  %244 = ptrtoint ptr %dispatch_busy.i276 to i32
  call void @__asan_store4_noabort(i32 %244)
  store i32 %div12.i280, ptr %dispatch_busy.i276, align 32
  br label %blk_mq_update_dispatch_busy.exit

blk_mq_update_dispatch_busy.exit:                 ; preds = %if.end.i281, %if.else136.blk_mq_update_dispatch_busy.exit_crit_edge
  %add = sub i32 0, %errors.2298
  call void @__sanitizer_cov_trace_cmp4(i32 %queued.2300, i32 %add)
  %cmp138 = icmp ne i32 %queued.2300, %add
  br label %cleanup140

cleanup140:                                       ; preds = %blk_mq_update_dispatch_busy.exit, %if.end133, %entry.cleanup140_crit_edge
  %retval.0 = phi i1 [ %cmp138, %blk_mq_update_dispatch_busy.exit ], [ false, %if.end133 ], [ false, %entry.cleanup140_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %zone_list) #20
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_run_hw_queue(ptr noundef %hctx, i1 noundef zeroext %async) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 7
  %0 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queue, align 8
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %queue_flags, align 4
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %if.then.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then.rcu_read_lock.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then.rcu_read_lock.exit_crit_edge
  %9 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %queue, align 8
  %queue_flags2 = getelementptr inbounds %struct.request_queue, ptr %10, i32 0, i32 11
  %11 = ptrtoint ptr %queue_flags2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %queue_flags2, align 4
  %13 = and i32 %12, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool4.not = icmp eq i32 %13, 0
  br i1 %tobool4.not, label %land.rhs, label %rcu_read_lock.exit.land.end_crit_edge

rcu_read_lock.exit.land.end_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end

land.rhs:                                         ; preds = %rcu_read_lock.exit
  %dispatch.i = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 1
  %14 = ptrtoint ptr %dispatch.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %dispatch.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !297
  %cmp.i.not.i.i = icmp eq ptr %15, %dispatch.i
  br i1 %cmp.i.not.i.i, label %list_empty_careful.exit.i, label %land.rhs.land.end_crit_edge

land.rhs.land.end_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end

list_empty_careful.exit.i:                        ; preds = %land.rhs
  %prev.i.i = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %17, %dispatch.i
  br i1 %cmp.i.not.i, label %lor.lhs.false.i, label %list_empty_careful.exit.i.land.end_crit_edge

list_empty_careful.exit.i.land.end_crit_edge:     ; preds = %list_empty_careful.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end

lor.lhs.false.i:                                  ; preds = %list_empty_careful.exit.i
  %ctx_map.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10
  %call1.i38 = tail call zeroext i1 @sbitmap_any_bit_set(ptr noundef %ctx_map.i) #20
  br i1 %call1.i38, label %lor.lhs.false.i.land.end_crit_edge, label %lor.rhs.i

lor.lhs.false.i.land.end_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end

lor.rhs.i:                                        ; preds = %lor.lhs.false.i
  %18 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %queue, align 8
  %elevator.i.i = getelementptr inbounds %struct.request_queue, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %elevator.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %elevator.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.i, label %lor.rhs.i.land.end_crit_edge, label %land.lhs.true.i.i

lor.rhs.i.land.end_crit_edge:                     ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end

land.lhs.true.i.i:                                ; preds = %lor.rhs.i
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %has_work.i.i = getelementptr inbounds %struct.elevator_type, ptr %23, i32 0, i32 1, i32 15
  %24 = ptrtoint ptr %has_work.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %has_work.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %25, null
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.land.end_crit_edge, label %if.then.i.i

land.lhs.true.i.i.land.end_crit_edge:             ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i = tail call zeroext i1 %25(ptr noundef %hctx) #20
  br label %land.end

land.end:                                         ; preds = %if.then.i.i, %land.lhs.true.i.i.land.end_crit_edge, %lor.rhs.i.land.end_crit_edge, %lor.lhs.false.i.land.end_crit_edge, %list_empty_careful.exit.i.land.end_crit_edge, %land.rhs.land.end_crit_edge, %rcu_read_lock.exit.land.end_crit_edge
  %26 = phi i1 [ false, %rcu_read_lock.exit.land.end_crit_edge ], [ true, %lor.lhs.false.i.land.end_crit_edge ], [ true, %list_empty_careful.exit.i.land.end_crit_edge ], [ %call.i.i, %if.then.i.i ], [ false, %land.lhs.true.i.i.land.end_crit_edge ], [ false, %lor.rhs.i.land.end_crit_edge ], [ true, %land.rhs.land.end_crit_edge ]
  %call.i39 = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i39, label %land.end.do.end22_crit_edge, label %land.lhs.true.i42

land.end.do.end22_crit_edge:                      ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end22

land.lhs.true.i42:                                ; preds = %land.end
  %call1.i40 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i40)
  %tobool.not.i41 = icmp eq i32 %call1.i40, 0
  br i1 %tobool.not.i41, label %land.lhs.true.i42.do.end22_crit_edge, label %land.lhs.true2.i44

land.lhs.true.i42.do.end22_crit_edge:             ; preds = %land.lhs.true.i42
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end22

land.lhs.true2.i44:                               ; preds = %land.lhs.true.i42
  %.b4.i43 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i43, label %land.lhs.true2.i44.do.end22_crit_edge, label %if.then.i45

land.lhs.true2.i44.do.end22_crit_edge:            ; preds = %land.lhs.true2.i44
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end22

if.then.i45:                                      ; preds = %land.lhs.true2.i44
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %do.end22

if.else:                                          ; preds = %entry
  %srcu = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 70
  %call.i48 = tail call i32 @__srcu_read_lock(ptr noundef %srcu) #20
  %dep_map.i = getelementptr inbounds %struct.request_queue, ptr %1, i32 1, i32 50, i32 2
  tail call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i) #20
  %27 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %queue, align 8
  %queue_flags11 = getelementptr inbounds %struct.request_queue, ptr %28, i32 0, i32 11
  %29 = ptrtoint ptr %queue_flags11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %queue_flags11, align 4
  %31 = and i32 %30, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool13.not = icmp eq i32 %31, 0
  br i1 %tobool13.not, label %land.rhs14, label %if.else.land.end16_crit_edge

if.else.land.end16_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end16

land.rhs14:                                       ; preds = %if.else
  %dispatch.i49 = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 1
  %32 = ptrtoint ptr %dispatch.i49 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %dispatch.i49, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !297
  %cmp.i.not.i.i50 = icmp eq ptr %33, %dispatch.i49
  br i1 %cmp.i.not.i.i50, label %list_empty_careful.exit.i53, label %land.rhs14.land.end16_crit_edge

land.rhs14.land.end16_crit_edge:                  ; preds = %land.rhs14
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end16

list_empty_careful.exit.i53:                      ; preds = %land.rhs14
  %prev.i.i51 = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 1, i32 1
  %34 = ptrtoint ptr %prev.i.i51 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i.i51, align 4
  %cmp.i.not.i52 = icmp eq ptr %35, %dispatch.i49
  br i1 %cmp.i.not.i52, label %lor.lhs.false.i56, label %list_empty_careful.exit.i53.land.end16_crit_edge

list_empty_careful.exit.i53.land.end16_crit_edge: ; preds = %list_empty_careful.exit.i53
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end16

lor.lhs.false.i56:                                ; preds = %list_empty_careful.exit.i53
  %ctx_map.i54 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10
  %call1.i55 = tail call zeroext i1 @sbitmap_any_bit_set(ptr noundef %ctx_map.i54) #20
  br i1 %call1.i55, label %lor.lhs.false.i56.land.end16_crit_edge, label %lor.rhs.i60

lor.lhs.false.i56.land.end16_crit_edge:           ; preds = %lor.lhs.false.i56
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end16

lor.rhs.i60:                                      ; preds = %lor.lhs.false.i56
  %36 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %queue, align 8
  %elevator.i.i58 = getelementptr inbounds %struct.request_queue, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %elevator.i.i58 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %elevator.i.i58, align 4
  %tobool.not.i.i59 = icmp eq ptr %39, null
  br i1 %tobool.not.i.i59, label %lor.rhs.i60.land.end16_crit_edge, label %land.lhs.true.i.i63

lor.rhs.i60.land.end16_crit_edge:                 ; preds = %lor.rhs.i60
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end16

land.lhs.true.i.i63:                              ; preds = %lor.rhs.i60
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %has_work.i.i61 = getelementptr inbounds %struct.elevator_type, ptr %41, i32 0, i32 1, i32 15
  %42 = ptrtoint ptr %has_work.i.i61 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %has_work.i.i61, align 4
  %tobool1.not.i.i62 = icmp eq ptr %43, null
  br i1 %tobool1.not.i.i62, label %land.lhs.true.i.i63.land.end16_crit_edge, label %if.then.i.i65

land.lhs.true.i.i63.land.end16_crit_edge:         ; preds = %land.lhs.true.i.i63
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end16

if.then.i.i65:                                    ; preds = %land.lhs.true.i.i63
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i64 = tail call zeroext i1 %43(ptr noundef %hctx) #20
  br label %land.end16

land.end16:                                       ; preds = %if.then.i.i65, %land.lhs.true.i.i63.land.end16_crit_edge, %lor.rhs.i60.land.end16_crit_edge, %lor.lhs.false.i56.land.end16_crit_edge, %list_empty_careful.exit.i53.land.end16_crit_edge, %land.rhs14.land.end16_crit_edge, %if.else.land.end16_crit_edge
  %44 = phi i1 [ false, %if.else.land.end16_crit_edge ], [ true, %lor.lhs.false.i56.land.end16_crit_edge ], [ true, %list_empty_careful.exit.i53.land.end16_crit_edge ], [ %call.i.i64, %if.then.i.i65 ], [ false, %land.lhs.true.i.i63.land.end16_crit_edge ], [ false, %lor.rhs.i60.land.end16_crit_edge ], [ true, %land.rhs14.land.end16_crit_edge ]
  %45 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %queue, align 8
  %srcu19 = getelementptr inbounds %struct.request_queue, ptr %46, i32 0, i32 70
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i48)
  %tobool.not.i67 = icmp ult i32 %call.i48, 2
  br i1 %tobool.not.i67, label %land.end16.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

land.end16.srcu_read_unlock.exit_crit_edge:       ; preds = %land.end16
  call void @__sanitizer_cov_trace_pc() #22
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %land.end16
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i68, !prof !298

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %srcu_read_unlock.exit

if.then.i68:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.34, i32 noundef 189, i32 noundef 9, ptr noundef null) #20
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i68, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %land.end16.srcu_read_unlock.exit_crit_edge
  %dep_map.i69 = getelementptr inbounds %struct.request_queue, ptr %46, i32 1, i32 50, i32 2
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i69) #20
  tail call void @__srcu_read_unlock(ptr noundef %srcu19, i32 noundef %call.i48) #20
  br i1 %44, label %srcu_read_unlock.exit.if.then24_crit_edge, label %srcu_read_unlock.exit.if.end26_crit_edge

srcu_read_unlock.exit.if.end26_crit_edge:         ; preds = %srcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

srcu_read_unlock.exit.if.then24_crit_edge:        ; preds = %srcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then24

do.end22:                                         ; preds = %if.then.i45, %land.lhs.true2.i44.do.end22_crit_edge, %land.lhs.true.i42.do.end22_crit_edge, %land.end.do.end22_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %47 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i46 = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i.i.i.i46 to ptr
  %preempt_count.i.i.i.i47 = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i.i.i.i47 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i.i.i.i47, align 4
  %sub.i.i.i = add i32 %50, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i47, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  br i1 %26, label %do.end22.if.then24_crit_edge, label %do.end22.if.end26_crit_edge

do.end22.if.end26_crit_edge:                      ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

do.end22.if.then24_crit_edge:                     ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then24

if.then24:                                        ; preds = %do.end22.if.then24_crit_edge, %srcu_read_unlock.exit.if.then24_crit_edge
  tail call fastcc void @__blk_mq_delay_run_hw_queue(ptr noundef %hctx, i1 noundef zeroext %async, i32 noundef 0)
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %do.end22.if.end26_crit_edge, %srcu_read_unlock.exit.if.end26_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_delay_run_hw_queue(ptr noundef %hctx, i32 noundef %msecs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__blk_mq_delay_run_hw_queue(ptr noundef %hctx, i1 noundef zeroext true, i32 noundef %msecs)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__blk_mq_delay_run_hw_queue(ptr noundef %hctx, i1 noundef zeroext %async, i32 noundef %msecs) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 2
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end, label %entry.return_crit_edge, !prof !298

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %entry
  br i1 %async, label %if.end.if.end17_crit_edge, label %land.lhs.true

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

land.lhs.true:                                    ; preds = %if.end
  %flags = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 5
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 16
  %and = and i32 %3, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.then4, label %land.lhs.true.if.end17_crit_edge

land.lhs.true.if.end17_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

if.then4:                                         ; preds = %land.lhs.true
  %4 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %7, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !332
  %8 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu6 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu6, align 4
  %cpumask = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 2
  %12 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %14 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %11)
  %cmp.not.i.i.i = icmp ugt i32 %14, %11
  br i1 %cmp.not.i.i.i, label %if.then4.cpumask_test_cpu.exit_crit_edge, label %land.rhs.i.i.i

if.then4.cpumask_test_cpu.exit_crit_edge:         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

land.rhs.i.i.i:                                   ; preds = %if.then4
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, label %if.then.i.i.i, !prof !298

land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge:   ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, %if.then4.cpumask_test_cpu.exit_crit_edge
  %div3.i.i = lshr i32 %11, 5
  %arrayidx.i.i = getelementptr i32, ptr %13, i32 %div3.i.i
  %15 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %11, 31
  %17 = shl nuw i32 1, %and.i.i
  %18 = and i32 %16, %17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool8.not = icmp eq i32 %18, 0
  br i1 %tobool8.not, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %cpumask_test_cpu.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !333
  %19 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i28 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i28 to ptr
  %preempt_count.i.i29 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i29 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i29, align 4
  %sub.i30 = add i32 %22, -1
  store volatile i32 %sub.i30, ptr %preempt_count.i.i29, align 4
  br label %if.end17

cleanup:                                          ; preds = %cpumask_test_cpu.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @__blk_mq_run_hw_queue(ptr noundef %hctx)
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !334
  %23 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i26 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i26 to ptr
  %preempt_count.i.i27 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i27 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i27, align 4
  %sub.i = add i32 %26, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i27, align 4
  br label %return

if.end17:                                         ; preds = %cleanup.thread, %land.lhs.true.if.end17_crit_edge, %if.end.if.end17_crit_edge
  %next_cpu1.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 3
  %queue.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 7
  %27 = ptrtoint ptr %queue.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %queue.i, align 8
  %nr_hw_queues.i = getelementptr inbounds %struct.request_queue, ptr %28, i32 0, i32 9
  %29 = ptrtoint ptr %nr_hw_queues.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %nr_hw_queues.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp.i32 = icmp eq i32 %30, 1
  br i1 %cmp.i32, label %if.end17.blk_mq_hctx_next_cpu.exit_crit_edge, label %if.end.i33

if.end17.blk_mq_hctx_next_cpu.exit_crit_edge:     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_hctx_next_cpu.exit

if.end.i33:                                       ; preds = %if.end17
  %31 = ptrtoint ptr %next_cpu1.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %next_cpu1.i, align 8
  %next_cpu_batch.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 4
  %33 = ptrtoint ptr %next_cpu_batch.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %next_cpu_batch.i, align 4
  %dec.i = add i32 %34, -1
  store i32 %dec.i, ptr %next_cpu_batch.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp2.i = icmp slt i32 %dec.i, 1
  br i1 %cmp2.i, label %if.end.i33.select_cpu.i_crit_edge, label %if.end.i33.if.end9.i_crit_edge

if.end.i33.if.end9.i_crit_edge:                   ; preds = %if.end.i33
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9.i

if.end.i33.select_cpu.i_crit_edge:                ; preds = %if.end.i33
  call void @__sanitizer_cov_trace_pc() #22
  br label %select_cpu.i

select_cpu.i:                                     ; preds = %if.then11.i.select_cpu.i_crit_edge, %if.end.i33.select_cpu.i_crit_edge
  %tried.0.i = phi i1 [ false, %if.end.i33.select_cpu.i_crit_edge ], [ true, %if.then11.i.select_cpu.i_crit_edge ]
  %next_cpu.0.i = phi i32 [ %32, %if.end.i33.select_cpu.i_crit_edge ], [ %next_cpu.2.i, %if.then11.i.select_cpu.i_crit_edge ]
  %cpumask.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 2
  %35 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %cpumask.i, align 4
  %call.i = tail call i32 @cpumask_next_and(i32 noundef %next_cpu.0.i, ptr noundef %36, ptr noundef nonnull @__cpu_online_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %37 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %37)
  %cmp4.not.i = icmp ult i32 %call.i, %37
  br i1 %cmp4.not.i, label %select_cpu.i.if.end7.i_crit_edge, label %if.end.i.i.i.i

select_cpu.i.if.end7.i_crit_edge:                 ; preds = %select_cpu.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7.i

if.end.i.i.i.i:                                   ; preds = %select_cpu.i
  %call6.i.i.i.i = tail call i32 @_find_first_and_bit(ptr noundef %36, ptr noundef nonnull @__cpu_online_mask, i32 noundef %37) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %38 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i.i.i, i32 %38)
  %cmp.not.i.i = icmp ult i32 %call6.i.i.i.i, %38
  br i1 %cmp.not.i.i, label %if.end.i.i.i.i.if.end7.i_crit_edge, label %if.then.i.i

if.end.i.i.i.i.if.end7.i_crit_edge:               ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7.i

if.then.i.i:                                      ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %39 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %cpumask.i, align 4
  %call.i.i.i = tail call i32 @_find_first_bit_be(ptr noundef %40, i32 noundef %38) #20
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then.i.i, %if.end.i.i.i.i.if.end7.i_crit_edge, %select_cpu.i.if.end7.i_crit_edge
  %next_cpu.1.i = phi i32 [ %call.i, %select_cpu.i.if.end7.i_crit_edge ], [ %call.i.i.i, %if.then.i.i ], [ %call6.i.i.i.i, %if.end.i.i.i.i.if.end7.i_crit_edge ]
  %41 = ptrtoint ptr %next_cpu_batch.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 8, ptr %next_cpu_batch.i, align 4
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.end7.i, %if.end.i33.if.end9.i_crit_edge
  %tried.1.off0.i = phi i1 [ %tried.0.i, %if.end7.i ], [ false, %if.end.i33.if.end9.i_crit_edge ]
  %next_cpu.2.i = phi i32 [ %next_cpu.1.i, %if.end7.i ], [ %32, %if.end.i33.if.end9.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %42 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %next_cpu.2.i)
  %cmp.not.i.i.i.i.i = icmp ugt i32 %42, %next_cpu.2.i
  br i1 %cmp.not.i.i.i.i.i, label %if.end9.i.cpu_online.exit.i_crit_edge, label %land.rhs.i.i.i.i.i

if.end9.i.cpu_online.exit.i_crit_edge:            ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit.i

land.rhs.i.i.i.i.i:                               ; preds = %if.end9.i
  %.b37.i.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i.i, label %land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge, label %if.then.i.i.i.i.i, !prof !298

land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge:   ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit.i

if.then.i.i.i.i.i:                                ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit.i

cpu_online.exit.i:                                ; preds = %if.then.i.i.i.i.i, %land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge, %if.end9.i.cpu_online.exit.i_crit_edge
  %div3.i.i.i.i = lshr i32 %next_cpu.2.i, 5
  %arrayidx.i.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i.i
  %43 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i32.i = and i32 %next_cpu.2.i, 31
  %45 = shl nuw i32 1, %and.i.i.i32.i
  %46 = and i32 %44, %45
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.i.not.i = icmp eq i32 %46, 0
  br i1 %tobool.i.not.i, label %if.then11.i, label %if.end16.i

if.then11.i:                                      ; preds = %cpu_online.exit.i
  br i1 %tried.1.off0.i, label %if.end13.i, label %if.then11.i.select_cpu.i_crit_edge

if.then11.i.select_cpu.i_crit_edge:               ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %select_cpu.i

if.end13.i:                                       ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #22
  %47 = ptrtoint ptr %next_cpu1.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %next_cpu.2.i, ptr %next_cpu1.i, align 8
  %48 = ptrtoint ptr %next_cpu_batch.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 1, ptr %next_cpu_batch.i, align 4
  br label %blk_mq_hctx_next_cpu.exit

if.end16.i:                                       ; preds = %cpu_online.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %49 = ptrtoint ptr %next_cpu1.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %next_cpu.2.i, ptr %next_cpu1.i, align 8
  br label %blk_mq_hctx_next_cpu.exit

blk_mq_hctx_next_cpu.exit:                        ; preds = %if.end16.i, %if.end13.i, %if.end17.blk_mq_hctx_next_cpu.exit_crit_edge
  %retval.0.i34 = phi i32 [ %next_cpu.2.i, %if.end16.i ], [ 4, %if.end13.i ], [ 4, %if.end17.blk_mq_hctx_next_cpu.exit_crit_edge ]
  %run_work = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 1
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %msecs) #20
  %call20 = tail call i32 @kblockd_mod_delayed_work_on(i32 noundef %retval.0.i34, ptr noundef %run_work, i32 noundef %call2.i) #20
  br label %return

return:                                           ; preds = %blk_mq_hctx_next_cpu.exit, %cleanup, %entry.return_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %call = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @srcu_read_unlock(ptr noundef %ssp, i32 noundef %idx) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %idx)
  %tobool.not = icmp ult i32 %idx, 2
  br i1 %tobool.not, label %entry.if.end28_crit_edge, label %land.rhs

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

land.rhs:                                         ; preds = %entry
  %.b40 = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40, label %land.rhs.if.end28_crit_edge, label %if.then, !prof !298

land.rhs.if.end28_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.34, i32 noundef 189, i32 noundef 9, ptr noundef null) #20
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs.if.end28_crit_edge, %entry.if.end28_crit_edge
  %dep_map = getelementptr inbounds %struct.srcu_struct, ptr %ssp, i32 0, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map)
  tail call void @__srcu_read_unlock(ptr noundef %ssp, i32 noundef %idx) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_delay_run_hw_queues(ptr nocapture noundef readonly %q, i32 noundef %msecs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %elevator.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 1
  %0 = ptrtoint ptr %elevator.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %elevator.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %land.lhs.true.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true.i:                                  ; preds = %entry
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %dispatch_request.i = getelementptr inbounds %struct.elevator_type, ptr %3, i32 0, i32 1, i32 14
  %4 = ptrtoint ptr %dispatch_request.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dispatch_request.i, align 4
  %tobool1.not.i = icmp eq ptr %5, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.end_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %elevator_features.i = getelementptr inbounds %struct.elevator_type, ptr %3, i32 0, i32 7
  %6 = ptrtoint ptr %elevator_features.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elevator_features.i, align 4
  %and.i = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool4.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool4.not.i, label %if.then, label %land.lhs.true2.i.if.end_crit_edge

land.lhs.true2.i.if.end_crit_edge:                ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  %8 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i, align 4
  %queue_hw_ctx.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %12 = ptrtoint ptr %queue_hw_ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %queue_hw_ctx.i.i, align 4
  %tag_set.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 61
  %14 = ptrtoint ptr %tag_set.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tag_set.i.i, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %arrayidx1.i.i = getelementptr i32, ptr %17, i32 %11
  %18 = ptrtoint ptr %arrayidx1.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx1.i.i, align 4
  %arrayidx2.i.i = getelementptr ptr, ptr %13, i32 %19
  %20 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx2.i.i, align 4
  %state.i.i = getelementptr inbounds %struct.anon.3, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  %.call1.i = select i1 %tobool.i.not.i, ptr %21, ptr null
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true2.i.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge, %entry.if.end_crit_edge
  %sq_hctx.0 = phi ptr [ %.call1.i, %if.then ], [ null, %entry.if.end_crit_edge ], [ null, %land.lhs.true.i.if.end_crit_edge ], [ null, %land.lhs.true2.i.if.end_crit_edge ]
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %24 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp23.not = icmp eq i32 %25, 0
  br i1 %cmp23.not, label %if.end.for.end_crit_edge, label %land.rhs.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

land.rhs.lr.ph:                                   ; preds = %if.end
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %tobool5.not = icmp eq ptr %sq_hctx.0, null
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %land.rhs.lr.ph
  %i.024 = phi i32 [ 0, %land.rhs.lr.ph ], [ %inc, %for.inc.land.rhs_crit_edge ]
  %26 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %27, i32 %i.024
  %28 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx, align 4
  %state.i = getelementptr inbounds %struct.anon.3, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end4, label %land.rhs.for.inc_crit_edge

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.end4:                                          ; preds = %land.rhs
  %cmp6 = icmp eq ptr %sq_hctx.0, %29
  %or.cond = or i1 %tobool5.not, %cmp6
  br i1 %or.cond, label %if.end4.if.then10_crit_edge, label %lor.lhs.false7

if.end4.if.then10_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then10

lor.lhs.false7:                                   ; preds = %if.end4
  %dispatch = getelementptr inbounds %struct.anon.3, ptr %29, i32 0, i32 1
  %32 = ptrtoint ptr %dispatch to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %dispatch, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !297
  %cmp.i.not.i = icmp eq ptr %33, %dispatch
  br i1 %cmp.i.not.i, label %list_empty_careful.exit, label %lor.lhs.false7.if.then10_crit_edge

lor.lhs.false7.if.then10_crit_edge:               ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then10

list_empty_careful.exit:                          ; preds = %lor.lhs.false7
  %prev.i = getelementptr inbounds %struct.anon.3, ptr %29, i32 0, i32 1, i32 1
  %34 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i, align 4
  %cmp.i.not = icmp eq ptr %35, %dispatch
  br i1 %cmp.i.not, label %list_empty_careful.exit.for.inc_crit_edge, label %list_empty_careful.exit.if.then10_crit_edge

list_empty_careful.exit.if.then10_crit_edge:      ; preds = %list_empty_careful.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then10

list_empty_careful.exit.for.inc_crit_edge:        ; preds = %list_empty_careful.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then10:                                        ; preds = %list_empty_careful.exit.if.then10_crit_edge, %lor.lhs.false7.if.then10_crit_edge, %if.end4.if.then10_crit_edge
  tail call fastcc void @__blk_mq_delay_run_hw_queue(ptr noundef %29, i1 noundef zeroext true, i32 noundef %msecs) #20
  br label %for.inc

for.inc:                                          ; preds = %if.then10, %list_empty_careful.exit.for.inc_crit_edge, %land.rhs.for.inc_crit_edge
  %inc = add nuw i32 %i.024, 1
  %36 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %nr_hw_queues, align 8
  %cmp = icmp ult i32 %inc, %37
  br i1 %cmp, label %for.inc.land.rhs_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  ret void
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @blk_mq_queue_stopped(ptr nocapture noundef readonly %q) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %0 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp5.not = icmp eq i32 %1, 0
  br i1 %cmp5.not, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %2 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %queue_hw_ctx, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %state.i9 = getelementptr inbounds %struct.anon.3, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %state.i9 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i9, align 4
  %and1.i.i10 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i10)
  %tobool.i.not11 = icmp eq i32 %and1.i.i10, 0
  br i1 %tobool.i.not11, label %for.body.lr.ph.for.cond_crit_edge, label %for.body.lr.ph.cleanup_crit_edge

for.body.lr.ph.cleanup_crit_edge:                 ; preds = %for.body.lr.ph
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.body.lr.ph.for.cond_crit_edge:                ; preds = %for.body.lr.ph
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %for.body.lr.ph.for.cond_crit_edge
  %i.0612 = phi i32 [ %inc, %for.body.for.cond_crit_edge ], [ 0, %for.body.lr.ph.for.cond_crit_edge ]
  %inc = add nuw i32 %i.0612, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %1)
  %exitcond.not = icmp eq i32 %inc, %1
  br i1 %exitcond.not, label %for.cond.cleanup.loopexit_crit_edge, label %for.body

for.cond.cleanup.loopexit_crit_edge:              ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.loopexit

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr ptr, ptr %3, i32 %inc
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %state.i = getelementptr inbounds %struct.anon.3, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %11, 1
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %for.body.for.cond_crit_edge, label %for.body.cleanup.loopexit_crit_edge

for.body.cleanup.loopexit_crit_edge:              ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.loopexit

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond

cleanup.loopexit:                                 ; preds = %for.body.cleanup.loopexit_crit_edge, %for.cond.cleanup.loopexit_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %1)
  %cmp.le = icmp ult i32 %inc, %1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %for.body.lr.ph.cleanup_crit_edge, %entry.cleanup_crit_edge
  %cmp.lcssa = phi i1 [ false, %entry.cleanup_crit_edge ], [ true, %for.body.lr.ph.cleanup_crit_edge ], [ %cmp.le, %cleanup.loopexit ]
  ret i1 %cmp.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_stop_hw_queue(ptr noundef %hctx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %run_work = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 1
  %call = tail call zeroext i1 @cancel_delayed_work(ptr noundef %run_work) #20
  %state = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_stop_hw_queues(ptr nocapture noundef readonly %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %0 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp4.not = icmp eq i32 %1, 0
  br i1 %cmp4.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.05 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %2 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %3, i32 %i.05
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %run_work.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %5, i32 0, i32 1
  %call.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %run_work.i) #20
  %state.i = getelementptr inbounds %struct.anon.3, ptr %5, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i) #20
  %inc = add nuw i32 %i.05, 1
  %6 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_hw_queues, align 8
  %cmp = icmp ult i32 %inc, %7
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_start_hw_queue(ptr noundef %hctx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 2
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state) #20
  tail call void @blk_mq_run_hw_queue(ptr noundef %hctx, i1 noundef zeroext false)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_start_hw_queues(ptr nocapture noundef readonly %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %0 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp4.not = icmp eq i32 %1, 0
  br i1 %cmp4.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.05 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %2 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %3, i32 %i.05
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %state.i = getelementptr inbounds %struct.anon.3, ptr %5, i32 0, i32 2
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i) #20
  tail call void @blk_mq_run_hw_queue(ptr noundef %5, i1 noundef zeroext false) #20
  %inc = add nuw i32 %i.05, 1
  %6 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_hw_queues, align 8
  %cmp = icmp ult i32 %inc, %7
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_start_stopped_hw_queue(ptr noundef %hctx, i1 noundef zeroext %async) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 2
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i) #20
  tail call void @blk_mq_run_hw_queue(ptr noundef %hctx, i1 noundef zeroext %async)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_start_stopped_hw_queues(ptr nocapture noundef readonly %q, i1 noundef zeroext %async) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %0 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp5.not = icmp eq i32 %1, 0
  br i1 %cmp5.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %for.body

for.body:                                         ; preds = %blk_mq_start_stopped_hw_queue.exit.for.body_crit_edge, %for.body.lr.ph
  %i.06 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %blk_mq_start_stopped_hw_queue.exit.for.body_crit_edge ]
  %2 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %3, i32 %i.06
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %state.i.i = getelementptr inbounds %struct.anon.3, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %for.body.blk_mq_start_stopped_hw_queue.exit_crit_edge, label %if.end.i

for.body.blk_mq_start_stopped_hw_queue.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_start_stopped_hw_queue.exit

if.end.i:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #20
  tail call void @blk_mq_run_hw_queue(ptr noundef %5, i1 noundef zeroext %async) #20
  br label %blk_mq_start_stopped_hw_queue.exit

blk_mq_start_stopped_hw_queue.exit:               ; preds = %if.end.i, %for.body.blk_mq_start_stopped_hw_queue.exit_crit_edge
  %inc = add nuw i32 %i.06, 1
  %8 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_hw_queues, align 8
  %cmp = icmp ult i32 %inc, %9
  br i1 %cmp, label %blk_mq_start_stopped_hw_queue.exit.for.body_crit_edge, label %blk_mq_start_stopped_hw_queue.exit.for.end_crit_edge

blk_mq_start_stopped_hw_queue.exit.for.end_crit_edge: ; preds = %blk_mq_start_stopped_hw_queue.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

blk_mq_start_stopped_hw_queue.exit.for.body_crit_edge: ; preds = %blk_mq_start_stopped_hw_queue.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %blk_mq_start_stopped_hw_queue.exit.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__blk_mq_insert_request(ptr nocapture noundef readonly %hctx, ptr noundef %rq, i1 noundef zeroext %at_head) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %mq_ctx = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 1
  %0 = ptrtoint ptr %mq_ctx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mq_ctx, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.end.thread, label %land.rhs

if.end.thread:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %3 = ptrtoint ptr %mq_ctx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mq_ctx, align 4
  %type1.i33 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 13
  %5 = ptrtoint ptr %type1.i33 to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %type1.i33, align 4
  br label %if.end.i

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.anon.2, ptr %1, i32 0, i32 1
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !300

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2327, i32 noundef 9, ptr noundef null) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %.pr = load i32, ptr @debug_locks, align 4
  %7 = ptrtoint ptr %mq_ctx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mq_ctx, align 4
  %type1.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 13
  %9 = ptrtoint ptr %type1.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %type1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool.not.i = icmp eq i32 %.pr, 0
  br i1 %tobool.not.i, label %if.end.if.end.i_crit_edge, label %land.rhs.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end
  %dep_map.i = getelementptr inbounds %struct.anon.2, ptr %8, i32 0, i32 1
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !300

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2312, i32 noundef 9, ptr noundef null) #20
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end.if.end.i_crit_edge, %if.end.thread
  %conv.i37.in = phi i16 [ %6, %if.end.thread ], [ %10, %do.end.i ], [ %10, %land.rhs.i.if.end.i_crit_edge ], [ %10, %if.end.if.end.i_crit_edge ]
  %type1.i36 = phi ptr [ %type1.i33, %if.end.thread ], [ %type1.i, %do.end.i ], [ %type1.i, %land.rhs.i.if.end.i_crit_edge ], [ %type1.i, %if.end.if.end.i_crit_edge ]
  %11 = phi ptr [ %4, %if.end.thread ], [ %8, %do.end.i ], [ %8, %land.rhs.i.if.end.i_crit_edge ], [ %8, %if.end.if.end.i_crit_edge ]
  %conv.i37 = zext i16 %conv.i37.in to i32
  tail call fastcc void @trace_block_rq_insert(ptr noundef %rq) #20
  %12 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12
  %arrayidx.i = getelementptr %struct.anon, ptr %11, i32 0, i32 1, i32 %conv.i37
  br i1 %at_head, label %if.then27.i, label %if.else.i

if.then27.i:                                      ; preds = %if.end.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %12, ptr noundef %arrayidx.i, ptr noundef %14) #20
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then27.i.__blk_mq_insert_req_list.exit_crit_edge

if.then27.i.__blk_mq_insert_req_list.exit_crit_edge: ; preds = %if.then27.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_insert_req_list.exit

if.end.i.i.i:                                     ; preds = %if.then27.i
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  br label %if.end30.sink.split.i

if.else.i:                                        ; preds = %if.end.i
  %prev.i.i = getelementptr %struct.anon, ptr %11, i32 0, i32 1, i32 %conv.i37, i32 1
  %15 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i, align 4
  %call.i.i38.i = tail call zeroext i1 @__list_add_valid(ptr noundef %12, ptr noundef %16, ptr noundef %arrayidx.i) #20
  br i1 %call.i.i38.i, label %if.else.i.if.end30.sink.split.i_crit_edge, label %if.else.i.__blk_mq_insert_req_list.exit_crit_edge

if.else.i.__blk_mq_insert_req_list.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_insert_req_list.exit

if.else.i.if.end30.sink.split.i_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30.sink.split.i

if.end30.sink.split.i:                            ; preds = %if.else.i.if.end30.sink.split.i_crit_edge, %if.end.i.i.i
  %prev.i.sink.i = phi ptr [ %prev1.i.i.i, %if.end.i.i.i ], [ %prev.i.i, %if.else.i.if.end30.sink.split.i_crit_edge ]
  %arrayidx.sink.i = phi ptr [ %14, %if.end.i.i.i ], [ %arrayidx.i, %if.else.i.if.end30.sink.split.i_crit_edge ]
  %.sink41.i = phi ptr [ %arrayidx.i, %if.end.i.i.i ], [ %16, %if.else.i.if.end30.sink.split.i_crit_edge ]
  %17 = ptrtoint ptr %prev.i.sink.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %12, ptr %prev.i.sink.i, align 4
  %18 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %arrayidx.sink.i, ptr %12, align 4
  %prev3.i.i39.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12, i32 0, i32 1
  %19 = ptrtoint ptr %prev3.i.i39.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %.sink41.i, ptr %prev3.i.i39.i, align 4
  %20 = ptrtoint ptr %.sink41.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %12, ptr %.sink41.i, align 4
  br label %__blk_mq_insert_req_list.exit

__blk_mq_insert_req_list.exit:                    ; preds = %if.end30.sink.split.i, %if.else.i.__blk_mq_insert_req_list.exit_crit_edge, %if.then27.i.__blk_mq_insert_req_list.exit_crit_edge
  %21 = ptrtoint ptr %type1.i36 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %type1.i36, align 4
  %idxprom.i = zext i16 %22 to i32
  %arrayidx.i29 = getelementptr %struct.blk_mq_ctx, ptr %1, i32 0, i32 2, i32 %idxprom.i
  %23 = ptrtoint ptr %arrayidx.i29 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %arrayidx.i29, align 2
  %conv.i30 = zext i16 %24 to i32
  %shift.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 1
  %25 = ptrtoint ptr %shift.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %shift.i.i, align 4
  %notmask.i.i = shl nsw i32 -1, %26
  %sub.i.i = xor i32 %notmask.i.i, -1
  %and.i.i = and i32 %sub.i.i, %conv.i30
  %map.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 4
  %27 = ptrtoint ptr %map.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %map.i.i.i, align 4
  %shr.i4.i.i = lshr i32 %conv.i30, %26
  %word.i.i.i = getelementptr %struct.sbitmap_word, ptr %28, i32 %shr.i4.i.i, i32 2
  %div3.i.i.i = lshr i32 %and.i.i, 5
  %arrayidx.i.i.i = getelementptr i32, ptr %word.i.i.i, i32 %div3.i.i.i
  %29 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %and.i.i, 31
  %31 = shl nuw i32 1, %and.i.i.i
  %32 = and i32 %31, %30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i31 = icmp eq i32 %32, 0
  br i1 %tobool.not.i31, label %if.then.i, label %__blk_mq_insert_req_list.exit.blk_mq_hctx_mark_pending.exit_crit_edge

__blk_mq_insert_req_list.exit.blk_mq_hctx_mark_pending.exit_crit_edge: ; preds = %__blk_mq_insert_req_list.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_hctx_mark_pending.exit

if.then.i:                                        ; preds = %__blk_mq_insert_req_list.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_set_bit(i32 noundef %and.i.i, ptr noundef %word.i.i.i) #20
  br label %blk_mq_hctx_mark_pending.exit

blk_mq_hctx_mark_pending.exit:                    ; preds = %if.then.i, %__blk_mq_insert_req_list.exit.blk_mq_hctx_mark_pending.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_request_bypass_insert(ptr noundef %rq, i1 noundef zeroext %at_head, i1 noundef zeroext %run_queue) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %mq_hctx = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %0 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mq_hctx, align 8
  tail call void @_raw_spin_lock(ptr noundef %1) #20
  %2 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12
  %dispatch = getelementptr inbounds %struct.anon.3, ptr %1, i32 0, i32 1
  br i1 %at_head, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = ptrtoint ptr %dispatch to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dispatch, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %2, ptr noundef %dispatch, ptr noundef %4) #20
  br i1 %call.i.i, label %if.end.i.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  br label %if.end.sink.split

if.else:                                          ; preds = %entry
  %prev.i = getelementptr inbounds %struct.anon.3, ptr %1, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i, align 4
  %call.i.i13 = tail call zeroext i1 @__list_add_valid(ptr noundef %2, ptr noundef %6, ptr noundef %dispatch) #20
  br i1 %call.i.i13, label %if.else.if.end.sink.split_crit_edge, label %if.else.if.end_crit_edge

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.else.if.end.sink.split_crit_edge:              ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.sink.split

if.end.sink.split:                                ; preds = %if.else.if.end.sink.split_crit_edge, %if.end.i.i
  %prev.i.sink = phi ptr [ %prev1.i.i, %if.end.i.i ], [ %prev.i, %if.else.if.end.sink.split_crit_edge ]
  %dispatch.sink = phi ptr [ %4, %if.end.i.i ], [ %dispatch, %if.else.if.end.sink.split_crit_edge ]
  %.sink16 = phi ptr [ %dispatch, %if.end.i.i ], [ %6, %if.else.if.end.sink.split_crit_edge ]
  %7 = ptrtoint ptr %prev.i.sink to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %2, ptr %prev.i.sink, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %dispatch.sink, ptr %2, align 4
  %prev3.i.i14 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12, i32 0, i32 1
  %9 = ptrtoint ptr %prev3.i.i14 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %.sink16, ptr %prev3.i.i14, align 4
  %10 = ptrtoint ptr %.sink16 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %2, ptr %.sink16, align 4
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %if.else.if.end_crit_edge, %if.then.if.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %1) #20
  br i1 %run_queue, label %if.then5, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_run_hw_queue(ptr noundef %1, i1 noundef zeroext false)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_insert_requests(ptr nocapture noundef readonly %hctx, ptr noundef %ctx, ptr noundef %list) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %type1 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 13
  %0 = ptrtoint ptr %type1 to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %type1, align 4
  %2 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn29 = load ptr, ptr %list, align 4
  %cmp.not31 = icmp eq ptr %.pn29, %list
  br i1 %cmp.not31, label %entry.for.end_crit_edge, label %entry.do.body_crit_edge

entry.do.body_crit_edge:                          ; preds = %entry
  br label %do.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

do.body:                                          ; preds = %do.end12.do.body_crit_edge, %entry.do.body_crit_edge
  %.pn32 = phi ptr [ %.pn, %do.end12.do.body_crit_edge ], [ %.pn29, %entry.do.body_crit_edge ]
  %mq_ctx = getelementptr i8, ptr %.pn32, i32 -52
  %3 = ptrtoint ptr %mq_ctx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mq_ctx, align 4
  %cmp3.not = icmp eq ptr %4, %ctx
  br i1 %cmp3.not, label %do.end12, label %do.body7, !prof !298

do.body7:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2370, 0\0A.popsection", ""() #20, !srcloc !335
  unreachable

do.end12:                                         ; preds = %do.body
  %rq.033 = getelementptr i8, ptr %.pn32, i32 -56
  tail call fastcc void @trace_block_rq_insert(ptr noundef %rq.033)
  %5 = ptrtoint ptr %.pn32 to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn = load ptr, ptr %.pn32, align 4
  %cmp.not = icmp eq ptr %.pn, %list
  br i1 %cmp.not, label %do.end12.for.end_crit_edge, label %do.end12.do.body_crit_edge

do.end12.do.body_crit_edge:                       ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

do.end12.for.end_crit_edge:                       ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %do.end12.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %ctx) #20
  %6 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %list, align 4
  %cmp.i.not.i = icmp eq ptr %7, %list
  br i1 %cmp.i.not.i, label %for.end.list_splice_tail_init.exit_crit_edge, label %if.then.i

for.end.list_splice_tail_init.exit_crit_edge:     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_splice_tail_init.exit

if.then.i:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  %conv = zext i16 %1 to i32
  %arrayidx = getelementptr %struct.anon, ptr %ctx, i32 0, i32 1, i32 %conv
  %prev.i = getelementptr %struct.anon, ptr %ctx, i32 0, i32 1, i32 %conv, i32 1
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev.i, align 4
  %prev2.i.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %10 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %12 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %prev3.i.i, align 4
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %7, ptr %9, align 4
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %arrayidx, ptr %11, align 4
  store ptr %11, ptr %prev.i, align 4
  %15 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %list, ptr %list, align 4
  store ptr %list, ptr %prev2.i.i, align 4
  br label %list_splice_tail_init.exit

list_splice_tail_init.exit:                       ; preds = %if.then.i, %for.end.list_splice_tail_init.exit_crit_edge
  %16 = ptrtoint ptr %type1 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %type1, align 4
  %idxprom.i = zext i16 %17 to i32
  %arrayidx.i = getelementptr %struct.blk_mq_ctx, ptr %ctx, i32 0, i32 2, i32 %idxprom.i
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %arrayidx.i, align 2
  %conv.i = zext i16 %19 to i32
  %shift.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 1
  %20 = ptrtoint ptr %shift.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %shift.i.i, align 4
  %notmask.i.i = shl nsw i32 -1, %21
  %sub.i.i = xor i32 %notmask.i.i, -1
  %and.i.i = and i32 %sub.i.i, %conv.i
  %map.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 10, i32 4
  %22 = ptrtoint ptr %map.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %map.i.i.i, align 4
  %shr.i4.i.i = lshr i32 %conv.i, %21
  %word.i.i.i = getelementptr %struct.sbitmap_word, ptr %23, i32 %shr.i4.i.i, i32 2
  %div3.i.i.i = lshr i32 %and.i.i, 5
  %arrayidx.i.i.i = getelementptr i32, ptr %word.i.i.i, i32 %div3.i.i.i
  %24 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %and.i.i, 31
  %26 = shl nuw i32 1, %and.i.i.i
  %27 = and i32 %26, %25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i, label %if.then.i28, label %list_splice_tail_init.exit.blk_mq_hctx_mark_pending.exit_crit_edge

list_splice_tail_init.exit.blk_mq_hctx_mark_pending.exit_crit_edge: ; preds = %list_splice_tail_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_hctx_mark_pending.exit

if.then.i28:                                      ; preds = %list_splice_tail_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_set_bit(i32 noundef %and.i.i, ptr noundef %word.i.i.i) #20
  br label %blk_mq_hctx_mark_pending.exit

blk_mq_hctx_mark_pending.exit:                    ; preds = %if.then.i28, %list_splice_tail_init.exit.blk_mq_hctx_mark_pending.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %ctx) #20
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_block_rq_insert(ptr noundef %rq) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_insert, i32 0, i32 1), ptr blockaddress(@trace_block_rq_insert, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !312

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !298

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !336
  %call42 = tail call i32 @__traceiter_block_rq_insert(ptr noundef null, ptr noundef %rq) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !337
  %13 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !298

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !315
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_insert, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_insert, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_block_rq_insert.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_block_rq_insert.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.24, i32 noundef 195, ptr noundef nonnull @.str.25) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !316
  %31 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_flush_plug_list(ptr noundef %plug, i1 noundef zeroext %from_schedule) local_unnamed_addr #0 align 64 {
entry:
  %list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %list) #20
  %0 = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %1 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %list, ptr %list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %list, ptr %0, align 4
  %3 = ptrtoint ptr %plug to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %plug, align 4
  %cmp = icmp eq ptr %4, null
  br i1 %cmp, label %entry.cleanup107_crit_edge, label %if.end

entry.cleanup107_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup107

if.end:                                           ; preds = %entry
  %rq_count = getelementptr inbounds %struct.blk_plug, ptr %plug, i32 0, i32 3
  %5 = ptrtoint ptr %rq_count to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 0, ptr %rq_count, align 2
  %multiple_queues = getelementptr inbounds %struct.blk_plug, ptr %plug, i32 0, i32 4
  %6 = ptrtoint ptr %multiple_queues to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %multiple_queues, align 4, !range !320
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end.if.end66_crit_edge

if.end.if.end66_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end66

land.lhs.true:                                    ; preds = %if.end
  %has_elevator = getelementptr inbounds %struct.blk_plug, ptr %plug, i32 0, i32 5
  %8 = ptrtoint ptr %has_elevator to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %has_elevator, align 1, !range !320
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool1.not = icmp ne i8 %9, 0
  %brmerge = or i1 %tobool1.not, %from_schedule
  br i1 %brmerge, label %land.lhs.true.if.end66_crit_edge, label %if.then4

land.lhs.true.if.end66_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end66

if.then4:                                         ; preds = %land.lhs.true
  %tobool6.not = icmp eq ptr %plug, null
  %spec.select = select i1 %tobool6.not, ptr null, ptr %4
  %10 = ptrtoint ptr %spec.select to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %spec.select, align 8
  %mq_ops = getelementptr inbounds %struct.request_queue, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %mq_ops to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mq_ops, align 8
  %queue_rqs = getelementptr inbounds %struct.blk_mq_ops, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %queue_rqs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %queue_rqs, align 4
  %tobool14.not = icmp eq ptr %15, null
  br i1 %tobool14.not, label %if.then4.do.body38_crit_edge, label %land.lhs.true15

if.then4.do.body38_crit_edge:                     ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body38

land.lhs.true15:                                  ; preds = %if.then4
  %mq_hctx = getelementptr inbounds %struct.request, ptr %spec.select, i32 0, i32 2
  %16 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mq_hctx, align 8
  %flags = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %17, i32 0, i32 5
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags, align 16
  %and = and i32 %19, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool16.not = icmp eq i32 %and, 0
  br i1 %tobool16.not, label %do.body, label %land.lhs.true15.do.body38_crit_edge

land.lhs.true15.do.body38_crit_edge:              ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body38

do.body:                                          ; preds = %land.lhs.true15
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %11, i32 0, i32 11
  %20 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %queue_flags, align 4
  %22 = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool18.not = icmp eq i32 %22, 0
  br i1 %tobool18.not, label %if.then19, label %if.else

if.then19:                                        ; preds = %do.body
  %23 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %26, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %if.then19.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then19.rcu_read_lock.exit_crit_edge:           ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then19
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then19.rcu_read_lock.exit_crit_edge
  %27 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %queue_flags, align 4
  %29 = and i32 %28, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i175 = icmp eq i32 %29, 0
  br i1 %tobool.not.i175, label %if.end.i, label %rcu_read_lock.exit.__blk_mq_flush_plug_list.exit_crit_edge

rcu_read_lock.exit.__blk_mq_flush_plug_list.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_flush_plug_list.exit

if.end.i:                                         ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  %30 = ptrtoint ptr %mq_ops to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mq_ops, align 8
  %queue_rqs.i = getelementptr inbounds %struct.blk_mq_ops, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %queue_rqs.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %queue_rqs.i, align 4
  call void %33(ptr noundef %plug) #20
  br label %__blk_mq_flush_plug_list.exit

__blk_mq_flush_plug_list.exit:                    ; preds = %if.end.i, %rcu_read_lock.exit.__blk_mq_flush_plug_list.exit_crit_edge
  call fastcc void @rcu_read_unlock()
  br label %do.end32

if.else:                                          ; preds = %do.body
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 2595) #20
  %srcu = getelementptr inbounds %struct.request_queue, ptr %11, i32 0, i32 70
  %call.i176 = call i32 @__srcu_read_lock(ptr noundef %srcu) #20
  %dep_map.i = getelementptr inbounds %struct.request_queue, ptr %11, i32 1, i32 50, i32 2
  call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i) #20
  %34 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %queue_flags, align 4
  %36 = and i32 %35, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i178 = icmp eq i32 %36, 0
  br i1 %tobool.not.i178, label %if.end.i181, label %if.else.__blk_mq_flush_plug_list.exit182_crit_edge

if.else.__blk_mq_flush_plug_list.exit182_crit_edge: ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_flush_plug_list.exit182

if.end.i181:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %37 = ptrtoint ptr %mq_ops to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mq_ops, align 8
  %queue_rqs.i180 = getelementptr inbounds %struct.blk_mq_ops, ptr %38, i32 0, i32 2
  %39 = ptrtoint ptr %queue_rqs.i180 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %queue_rqs.i180, align 4
  call void %40(ptr noundef %plug) #20
  br label %__blk_mq_flush_plug_list.exit182

__blk_mq_flush_plug_list.exit182:                 ; preds = %if.end.i181, %if.else.__blk_mq_flush_plug_list.exit182_crit_edge
  call fastcc void @srcu_read_unlock(ptr noundef %srcu, i32 noundef %call.i176)
  br label %do.end32

do.end32:                                         ; preds = %__blk_mq_flush_plug_list.exit182, %__blk_mq_flush_plug_list.exit
  %41 = ptrtoint ptr %plug to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %plug, align 4
  %cmp34 = icmp eq ptr %42, null
  br i1 %cmp34, label %do.end32.cleanup107_crit_edge, label %do.end32.do.body38_crit_edge

do.end32.do.body38_crit_edge:                     ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body38

do.end32.cleanup107_crit_edge:                    ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup107

do.body38:                                        ; preds = %do.end32.do.body38_crit_edge, %land.lhs.true15.do.body38_crit_edge, %if.then4.do.body38_crit_edge
  %queue_flags39 = getelementptr inbounds %struct.request_queue, ptr %11, i32 0, i32 11
  %43 = ptrtoint ptr %queue_flags39 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %queue_flags39, align 4
  %45 = and i32 %44, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool41.not = icmp eq i32 %45, 0
  br i1 %tobool41.not, label %if.then42, label %if.else43

if.then42:                                        ; preds = %do.body38
  %46 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i164 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i.i.i164 to ptr
  %preempt_count.i.i.i.i165 = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i.i.i165 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i.i.i165, align 4
  %add.i.i.i166 = add i32 %49, 1
  store volatile i32 %add.i.i.i166, ptr %preempt_count.i.i.i.i165, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i167 = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i167, label %if.then42.rcu_read_lock.exit174_crit_edge, label %land.lhs.true.i170

if.then42.rcu_read_lock.exit174_crit_edge:        ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit174

land.lhs.true.i170:                               ; preds = %if.then42
  %call1.i168 = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i168)
  %tobool.not.i169 = icmp eq i32 %call1.i168, 0
  br i1 %tobool.not.i169, label %land.lhs.true.i170.rcu_read_lock.exit174_crit_edge, label %land.lhs.true2.i172

land.lhs.true.i170.rcu_read_lock.exit174_crit_edge: ; preds = %land.lhs.true.i170
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit174

land.lhs.true2.i172:                              ; preds = %land.lhs.true.i170
  %.b4.i171 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i171, label %land.lhs.true2.i172.rcu_read_lock.exit174_crit_edge, label %if.then.i173

land.lhs.true2.i172.rcu_read_lock.exit174_crit_edge: ; preds = %land.lhs.true2.i172
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit174

if.then.i173:                                     ; preds = %land.lhs.true2.i172
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit174

rcu_read_lock.exit174:                            ; preds = %if.then.i173, %land.lhs.true2.i172.rcu_read_lock.exit174_crit_edge, %land.lhs.true.i170.rcu_read_lock.exit174_crit_edge, %if.then42.rcu_read_lock.exit174_crit_edge
  call fastcc void @blk_mq_plug_issue_direct(ptr noundef %plug)
  %call.i183 = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i183, label %rcu_read_lock.exit174.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i186

rcu_read_lock.exit174.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit174
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true.i186:                               ; preds = %rcu_read_lock.exit174
  %call1.i184 = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i184)
  %tobool.not.i185 = icmp eq i32 %call1.i184, 0
  br i1 %tobool.not.i185, label %land.lhs.true.i186.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i188

land.lhs.true.i186.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i186
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true2.i188:                              ; preds = %land.lhs.true.i186
  %.b4.i187 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i187, label %land.lhs.true2.i188.rcu_read_unlock.exit_crit_edge, label %if.then.i189

land.lhs.true2.i188.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i188
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

if.then.i189:                                     ; preds = %land.lhs.true2.i188
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i189, %land.lhs.true2.i188.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i186.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit174.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %50 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i190 = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i.i.i.i190 to ptr
  %preempt_count.i.i.i.i191 = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %preempt_count.i.i.i.i191 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %preempt_count.i.i.i.i191, align 4
  %sub.i.i.i = add i32 %53, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i191, align 4
  call void @rcu_read_unlock_strict() #20
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  br label %do.end61

if.else43:                                        ; preds = %do.body38
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 2601) #20
  %srcu54 = getelementptr inbounds %struct.request_queue, ptr %11, i32 0, i32 70
  %call.i192 = call i32 @__srcu_read_lock(ptr noundef %srcu54) #20
  %dep_map.i193 = getelementptr inbounds %struct.request_queue, ptr %11, i32 1, i32 50, i32 2
  call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i193) #20
  call fastcc void @blk_mq_plug_issue_direct(ptr noundef %plug)
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i192)
  %tobool.not.i194 = icmp ult i32 %call.i192, 2
  br i1 %tobool.not.i194, label %if.else43.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

if.else43.srcu_read_unlock.exit_crit_edge:        ; preds = %if.else43
  call void @__sanitizer_cov_trace_pc() #22
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %if.else43
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i195, !prof !298

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %srcu_read_unlock.exit

if.then.i195:                                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.34, i32 noundef 189, i32 noundef 9, ptr noundef null) #20
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i195, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %if.else43.srcu_read_unlock.exit_crit_edge
  call fastcc void @rcu_lock_release(ptr noundef %dep_map.i193) #20
  call void @__srcu_read_unlock(ptr noundef %srcu54, i32 noundef %call.i192) #20
  br label %do.end61

do.end61:                                         ; preds = %srcu_read_unlock.exit, %rcu_read_unlock.exit
  %54 = ptrtoint ptr %plug to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %plug, align 4
  %cmp63.not = icmp eq ptr %55, null
  br i1 %cmp63.not, label %do.end61.cleanup107_crit_edge, label %do.end61.if.end66_crit_edge

do.end61.if.end66_crit_edge:                      ; preds = %do.end61
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end66

do.end61.cleanup107_crit_edge:                    ; preds = %do.end61
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup107

if.end66:                                         ; preds = %do.end61.if.end66_crit_edge, %land.lhs.true.if.end66_crit_edge, %if.end.if.end66_crit_edge
  %tobool70.not = icmp eq ptr %plug, null
  %lnot = xor i1 %from_schedule, true
  br label %do.body67

do.body67:                                        ; preds = %list_add.exit.do.body67_crit_edge, %if.end66
  %depth.0 = phi i32 [ 0, %if.end66 ], [ %inc, %list_add.exit.do.body67_crit_edge ]
  %this_ctx.0 = phi ptr [ null, %if.end66 ], [ %this_ctx.1, %list_add.exit.do.body67_crit_edge ]
  %this_hctx.0 = phi ptr [ null, %if.end66 ], [ %this_hctx.1, %list_add.exit.do.body67_crit_edge ]
  br i1 %tobool70.not, label %do.body67.if.end77_crit_edge, label %land.lhs.true71

do.body67.if.end77_crit_edge:                     ; preds = %do.body67
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end77

land.lhs.true71:                                  ; preds = %do.body67
  %56 = ptrtoint ptr %plug to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %plug, align 4
  %tobool73.not = icmp eq ptr %57, null
  br i1 %tobool73.not, label %land.lhs.true71.if.end77_crit_edge, label %if.then74

land.lhs.true71.if.end77_crit_edge:               ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end77

if.then74:                                        ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #22
  %58 = getelementptr inbounds %struct.request, ptr %57, i32 0, i32 12
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %58, align 8
  %61 = ptrtoint ptr %plug to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %60, ptr %plug, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then74, %land.lhs.true71.if.end77_crit_edge, %do.body67.if.end77_crit_edge
  %__req68.0 = phi ptr [ %57, %if.then74 ], [ null, %land.lhs.true71.if.end77_crit_edge ], [ null, %do.body67.if.end77_crit_edge ]
  %tobool79.not = icmp eq ptr %this_hctx.0, null
  %mq_hctx81 = getelementptr inbounds %struct.request, ptr %__req68.0, i32 0, i32 2
  %62 = ptrtoint ptr %mq_hctx81 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %mq_hctx81, align 8
  br i1 %tobool79.not, label %if.end77.if.end93.sink.split_crit_edge, label %if.else82

if.end77.if.end93.sink.split_crit_edge:           ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end93.sink.split

if.else82:                                        ; preds = %if.end77
  %cmp84.not = icmp eq ptr %this_hctx.0, %63
  br i1 %cmp84.not, label %lor.lhs.false, label %if.else82.if.then87_crit_edge

if.else82.if.then87_crit_edge:                    ; preds = %if.else82
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then87

lor.lhs.false:                                    ; preds = %if.else82
  %mq_ctx85 = getelementptr inbounds %struct.request, ptr %__req68.0, i32 0, i32 1
  %64 = ptrtoint ptr %mq_ctx85 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %mq_ctx85, align 4
  %cmp86.not = icmp eq ptr %this_ctx.0, %65
  br i1 %cmp86.not, label %lor.lhs.false.if.end93_crit_edge, label %lor.lhs.false.if.then87_crit_edge

lor.lhs.false.if.then87_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then87

lor.lhs.false.if.end93_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end93

if.then87:                                        ; preds = %lor.lhs.false.if.then87_crit_edge, %if.else82.if.then87_crit_edge
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %this_hctx.0, i32 0, i32 7
  %66 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %queue, align 8
  call fastcc void @trace_block_unplug(ptr noundef %67, i32 noundef %depth.0, i1 noundef zeroext %lnot)
  call void @blk_mq_sched_insert_requests(ptr noundef nonnull %this_hctx.0, ptr noundef %this_ctx.0, ptr noundef nonnull %list, i1 noundef zeroext %from_schedule) #20
  %68 = ptrtoint ptr %mq_hctx81 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %mq_hctx81, align 8
  br label %if.end93.sink.split

if.end93.sink.split:                              ; preds = %if.then87, %if.end77.if.end93.sink.split_crit_edge
  %depth.1.ph = phi i32 [ 0, %if.then87 ], [ %depth.0, %if.end77.if.end93.sink.split_crit_edge ]
  %this_hctx.1.ph = phi ptr [ %69, %if.then87 ], [ %63, %if.end77.if.end93.sink.split_crit_edge ]
  %mq_ctx91 = getelementptr inbounds %struct.request, ptr %__req68.0, i32 0, i32 1
  %70 = ptrtoint ptr %mq_ctx91 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %mq_ctx91, align 4
  br label %if.end93

if.end93:                                         ; preds = %if.end93.sink.split, %lor.lhs.false.if.end93_crit_edge
  %depth.1 = phi i32 [ %depth.0, %lor.lhs.false.if.end93_crit_edge ], [ %depth.1.ph, %if.end93.sink.split ]
  %this_ctx.1 = phi ptr [ %this_ctx.0, %lor.lhs.false.if.end93_crit_edge ], [ %71, %if.end93.sink.split ]
  %this_hctx.1 = phi ptr [ %this_hctx.0, %lor.lhs.false.if.end93_crit_edge ], [ %this_hctx.1.ph, %if.end93.sink.split ]
  %72 = getelementptr inbounds %struct.request, ptr %__req68.0, i32 0, i32 12
  %73 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %list, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %72, ptr noundef nonnull %list, ptr noundef %74) #20
  br i1 %call.i.i, label %if.end.i.i, label %if.end93.list_add.exit_crit_edge

if.end93.list_add.exit_crit_edge:                 ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %74, i32 0, i32 1
  %75 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %72, ptr %prev1.i.i, align 4
  %76 = ptrtoint ptr %72 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %74, ptr %72, align 4
  %prev3.i.i = getelementptr inbounds %struct.request, ptr %__req68.0, i32 0, i32 12, i32 0, i32 1
  %77 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %list, ptr %prev3.i.i, align 4
  %78 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %78)
  store volatile ptr %72, ptr %list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end93.list_add.exit_crit_edge
  %inc = add i32 %depth.1, 1
  %79 = ptrtoint ptr %plug to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %plug, align 4
  %cmp96.not = icmp eq ptr %80, null
  br i1 %cmp96.not, label %do.end98, label %list_add.exit.do.body67_crit_edge

list_add.exit.do.body67_crit_edge:                ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body67

do.end98:                                         ; preds = %list_add.exit
  %81 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile ptr, ptr %list, align 4
  %cmp.i.not = icmp eq ptr %82, %list
  br i1 %cmp.i.not, label %do.end98.cleanup107_crit_edge, label %if.then101

do.end98.cleanup107_crit_edge:                    ; preds = %do.end98
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup107

if.then101:                                       ; preds = %do.end98
  call void @__sanitizer_cov_trace_pc() #22
  %queue102 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %this_hctx.1, i32 0, i32 7
  %83 = ptrtoint ptr %queue102 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %queue102, align 8
  call fastcc void @trace_block_unplug(ptr noundef %84, i32 noundef %inc, i1 noundef zeroext %lnot)
  call void @blk_mq_sched_insert_requests(ptr noundef %this_hctx.1, ptr noundef %this_ctx.1, ptr noundef nonnull %list, i1 noundef zeroext %from_schedule) #20
  br label %cleanup107

cleanup107:                                       ; preds = %if.then101, %do.end98.cleanup107_crit_edge, %do.end61.cleanup107_crit_edge, %do.end32.cleanup107_crit_edge, %entry.cleanup107_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %list) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @blk_mq_plug_issue_direct(ptr noundef %plug) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %plug, null
  br i1 %tobool.not, label %entry.cleanup26_crit_edge, label %land.lhs.true.preheader

entry.cleanup26_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup26

land.lhs.true.preheader:                          ; preds = %entry
  %0 = ptrtoint ptr %plug to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %plug, align 4
  %tobool2.not86 = icmp eq ptr %1, null
  br i1 %tobool2.not86, label %land.lhs.true.preheader.while.end_crit_edge, label %land.lhs.true.preheader.while.body_crit_edge

land.lhs.true.preheader.while.body_crit_edge:     ; preds = %land.lhs.true.preheader
  br label %while.body

land.lhs.true.preheader.while.end_crit_edge:      ; preds = %land.lhs.true.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %land.lhs.true.preheader.while.body_crit_edge
  %2 = phi ptr [ %43, %cleanup.while.body_crit_edge ], [ %1, %land.lhs.true.preheader.while.body_crit_edge ]
  %queued.04089 = phi i32 [ %queued.3, %cleanup.while.body_crit_edge ], [ 0, %land.lhs.true.preheader.while.body_crit_edge ]
  %errors.04188 = phi i32 [ %errors.2, %cleanup.while.body_crit_edge ], [ 0, %land.lhs.true.preheader.while.body_crit_edge ]
  %hctx.04287 = phi ptr [ %hctx.1, %cleanup.while.body_crit_edge ], [ null, %land.lhs.true.preheader.while.body_crit_edge ]
  %3 = getelementptr inbounds %struct.request, ptr %2, i32 0, i32 12
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %6 = ptrtoint ptr %plug to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %plug, align 4
  %cmp = icmp eq ptr %5, null
  %mq_hctx = getelementptr inbounds %struct.request, ptr %2, i32 0, i32 2
  %7 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mq_hctx, align 8
  %cmp8.not = icmp eq ptr %hctx.04287, %8
  br i1 %cmp8.not, label %while.body.if.end15_crit_edge, label %if.then9

while.body.if.end15_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.then9:                                         ; preds = %while.body
  %tobool10.not = icmp eq ptr %hctx.04287, null
  br i1 %tobool10.not, label %if.then9.if.end13_crit_edge, label %if.then11

if.then9.if.end13_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.then11:                                        ; preds = %if.then9
  %queue.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.04287, i32 0, i32 7
  %9 = ptrtoint ptr %queue.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %queue.i, align 8
  %mq_ops.i = getelementptr inbounds %struct.request_queue, ptr %10, i32 0, i32 5
  %11 = ptrtoint ptr %mq_ops.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mq_ops.i, align 8
  %commit_rqs.i = getelementptr inbounds %struct.blk_mq_ops, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %commit_rqs.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %commit_rqs.i, align 4
  %tobool.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i, label %if.then11.if.end13_crit_edge, label %if.then.i

if.then11.if.end13_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.then.i:                                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @trace_block_unplug(ptr noundef %10, i32 noundef %queued.04089, i1 noundef zeroext true) #20
  %15 = ptrtoint ptr %queue.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %queue.i, align 8
  %mq_ops4.i = getelementptr inbounds %struct.request_queue, ptr %16, i32 0, i32 5
  %17 = ptrtoint ptr %mq_ops4.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mq_ops4.i, align 8
  %commit_rqs5.i = getelementptr inbounds %struct.blk_mq_ops, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %commit_rqs5.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %commit_rqs5.i, align 4
  tail call void %20(ptr noundef nonnull %hctx.04287) #20
  br label %if.end13

if.end13:                                         ; preds = %if.then.i, %if.then11.if.end13_crit_edge, %if.then9.if.end13_crit_edge
  %queued.1 = phi i32 [ %queued.04089, %if.then9.if.end13_crit_edge ], [ 0, %if.then11.if.end13_crit_edge ], [ 0, %if.then.i ]
  %21 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mq_hctx, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.end13, %while.body.if.end15_crit_edge
  %queued.2 = phi i32 [ %queued.04089, %while.body.if.end15_crit_edge ], [ %queued.1, %if.end13 ]
  %hctx.1 = phi ptr [ %hctx.04287, %while.body.if.end15_crit_edge ], [ %22, %if.end13 ]
  %23 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mq_hctx, align 8
  %call.i = tail call fastcc zeroext i8 @__blk_mq_try_issue_directly(ptr noundef %24, ptr noundef nonnull %2, i1 noundef zeroext true, i1 noundef zeroext %cmp) #20
  %25 = zext i8 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.68)
  switch i8 %call.i, label %sw.default [
    i8 0, label %sw.bb
    i8 9, label %if.end15.sw.bb17_crit_edge
    i8 13, label %if.end15.sw.bb17_crit_edge118
  ]

if.end15.sw.bb17_crit_edge118:                    ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb17

if.end15.sw.bb17_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb17

sw.bb:                                            ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  %inc = add i32 %queued.2, 1
  br label %cleanup

sw.bb17:                                          ; preds = %if.end15.sw.bb17_crit_edge, %if.end15.sw.bb17_crit_edge118
  %26 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mq_hctx, align 8
  tail call void @_raw_spin_lock(ptr noundef %27) #20
  %dispatch.i = getelementptr inbounds %struct.anon.3, ptr %27, i32 0, i32 1
  %prev.i.i = getelementptr inbounds %struct.anon.3, ptr %27, i32 0, i32 1, i32 1
  %28 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev.i.i, align 4
  %call.i.i13.i = tail call zeroext i1 @__list_add_valid(ptr noundef %3, ptr noundef %29, ptr noundef %dispatch.i) #20
  br i1 %call.i.i13.i, label %if.end.sink.split.i, label %sw.bb17.if.end.i_crit_edge

sw.bb17.if.end.i_crit_edge:                       ; preds = %sw.bb17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.end.sink.split.i:                              ; preds = %sw.bb17
  call void @__sanitizer_cov_trace_pc() #22
  %30 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %3, ptr %prev.i.i, align 4
  %31 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %dispatch.i, ptr %3, align 4
  %prev3.i.i14.i = getelementptr inbounds %struct.request, ptr %2, i32 0, i32 12, i32 0, i32 1
  %32 = ptrtoint ptr %prev3.i.i14.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev3.i.i14.i, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %3, ptr %29, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.end.sink.split.i, %sw.bb17.if.end.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %27) #20
  br i1 %cmp, label %if.then5.i, label %if.end.i.blk_mq_request_bypass_insert.exit_crit_edge

if.end.i.blk_mq_request_bypass_insert.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_request_bypass_insert.exit

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_run_hw_queue(ptr noundef %27, i1 noundef zeroext false) #20
  br label %blk_mq_request_bypass_insert.exit

blk_mq_request_bypass_insert.exit:                ; preds = %if.then5.i, %if.end.i.blk_mq_request_bypass_insert.exit_crit_edge
  %queue.i2 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1, i32 0, i32 7
  %34 = ptrtoint ptr %queue.i2 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %queue.i2, align 8
  %mq_ops.i3 = getelementptr inbounds %struct.request_queue, ptr %35, i32 0, i32 5
  %36 = ptrtoint ptr %mq_ops.i3 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mq_ops.i3, align 8
  %commit_rqs.i4 = getelementptr inbounds %struct.blk_mq_ops, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %commit_rqs.i4 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %commit_rqs.i4, align 4
  %tobool.not.i5 = icmp eq ptr %39, null
  br i1 %tobool.not.i5, label %blk_mq_request_bypass_insert.exit.cleanup26_crit_edge, label %if.then.i8

blk_mq_request_bypass_insert.exit.cleanup26_crit_edge: ; preds = %blk_mq_request_bypass_insert.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup26

if.then.i8:                                       ; preds = %blk_mq_request_bypass_insert.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @trace_block_unplug(ptr noundef %35, i32 noundef %queued.2, i1 noundef zeroext true) #20
  br label %cleanup26.sink.split

sw.default:                                       ; preds = %if.end15
  %__data_len.i.i = getelementptr inbounds %struct.request, ptr %2, i32 0, i32 8
  %40 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %__data_len.i.i, align 8
  %call1.i = tail call zeroext i1 @blk_update_request(ptr noundef nonnull %2, i8 noundef zeroext %call.i, i32 noundef %41) #20
  br i1 %call1.i, label %do.body.i, label %blk_mq_end_request.exit

do.body.i:                                        ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 933, 0\0A.popsection", ""() #20, !srcloc !319
  unreachable

blk_mq_end_request.exit:                          ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__blk_mq_end_request(ptr noundef nonnull %2, i8 noundef zeroext %call.i) #20
  %inc20 = add i32 %errors.04188, 1
  br label %cleanup

cleanup:                                          ; preds = %blk_mq_end_request.exit, %sw.bb
  %queued.3 = phi i32 [ %queued.2, %blk_mq_end_request.exit ], [ %inc, %sw.bb ]
  %errors.2 = phi i32 [ %inc20, %blk_mq_end_request.exit ], [ %errors.04188, %sw.bb ]
  %42 = ptrtoint ptr %plug to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %plug, align 4
  %tobool2.not = icmp eq ptr %43, null
  br i1 %tobool2.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %land.lhs.true.preheader.while.end_crit_edge
  %hctx.042.lcssa = phi ptr [ null, %land.lhs.true.preheader.while.end_crit_edge ], [ %hctx.1, %cleanup.while.end_crit_edge ]
  %errors.041.lcssa = phi i32 [ 0, %land.lhs.true.preheader.while.end_crit_edge ], [ %errors.2, %cleanup.while.end_crit_edge ]
  %queued.040.lcssa = phi i32 [ 0, %land.lhs.true.preheader.while.end_crit_edge ], [ %queued.3, %cleanup.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %errors.041.lcssa)
  %tobool22.not = icmp eq i32 %errors.041.lcssa, 0
  br i1 %tobool22.not, label %while.end.cleanup26_crit_edge, label %if.then23

while.end.cleanup26_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup26

if.then23:                                        ; preds = %while.end
  %queue.i12 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.042.lcssa, i32 0, i32 7
  %44 = ptrtoint ptr %queue.i12 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %queue.i12, align 8
  %mq_ops.i13 = getelementptr inbounds %struct.request_queue, ptr %45, i32 0, i32 5
  %46 = ptrtoint ptr %mq_ops.i13 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mq_ops.i13, align 8
  %commit_rqs.i14 = getelementptr inbounds %struct.blk_mq_ops, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %commit_rqs.i14 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %commit_rqs.i14, align 4
  %tobool.not.i15 = icmp eq ptr %49, null
  br i1 %tobool.not.i15, label %if.then23.cleanup26_crit_edge, label %if.then.i18

if.then23.cleanup26_crit_edge:                    ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup26

if.then.i18:                                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @trace_block_unplug(ptr noundef %45, i32 noundef %queued.040.lcssa, i1 noundef zeroext true) #20
  br label %cleanup26.sink.split

cleanup26.sink.split:                             ; preds = %if.then.i18, %if.then.i8
  %queue.i2.sink = phi ptr [ %queue.i2, %if.then.i8 ], [ %queue.i12, %if.then.i18 ]
  %hctx.1.lcssa.sink = phi ptr [ %hctx.1, %if.then.i8 ], [ %hctx.042.lcssa, %if.then.i18 ]
  %50 = ptrtoint ptr %queue.i2.sink to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %queue.i2.sink, align 8
  %mq_ops4.i6 = getelementptr inbounds %struct.request_queue, ptr %51, i32 0, i32 5
  %52 = ptrtoint ptr %mq_ops4.i6 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %mq_ops4.i6, align 8
  %commit_rqs5.i7 = getelementptr inbounds %struct.blk_mq_ops, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %commit_rqs5.i7 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %commit_rqs5.i7, align 4
  tail call void %55(ptr noundef %hctx.1.lcssa.sink) #20
  br label %cleanup26

cleanup26:                                        ; preds = %cleanup26.sink.split, %if.then23.cleanup26_crit_edge, %while.end.cleanup26_crit_edge, %blk_mq_request_bypass_insert.exit.cleanup26_crit_edge, %entry.cleanup26_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_block_unplug(ptr noundef %q, i32 noundef %depth, i1 noundef zeroext %explicit) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_unplug, i32 0, i32 1), ptr blockaddress(@trace_block_unplug, %do.body)) #20
          to label %if.end49 [label %do.body], !srcloc !312

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !298

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i76 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i76
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end70_crit_edge, label %cleanup.thread

cpu_online.exit.if.end70_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end70

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !338
  %call43 = tail call i32 @__traceiter_block_unplug(ptr noundef null, ptr noundef %q, i32 noundef %depth, i1 noundef zeroext %explicit) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !339
  %13 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i74 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i74 to ptr
  %preempt_count.i.i75 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i75 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i75, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i75, align 4
  br label %if.end49

if.end49:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i77 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i77 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i78 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i78, label %if.end49.cpu_online.exit86_crit_edge, label %land.rhs.i.i.i.i80

if.end49.cpu_online.exit86_crit_edge:             ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit86

land.rhs.i.i.i.i80:                               ; preds = %if.end49
  %.b37.i.i.i.i79 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i79, label %land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge, label %if.then.i.i.i.i81, !prof !298

land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge:   ; preds = %land.rhs.i.i.i.i80
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit86

if.then.i.i.i.i81:                                ; preds = %land.rhs.i.i.i.i80
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit86

cpu_online.exit86:                                ; preds = %if.then.i.i.i.i81, %land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge, %if.end49.cpu_online.exit86_crit_edge
  %div3.i.i.i82 = lshr i32 %20, 5
  %arrayidx.i.i.i83 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i82
  %22 = ptrtoint ptr %arrayidx.i.i.i83 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i83, align 4
  %and.i.i.i84 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i84
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i85.not = icmp eq i32 %25, 0
  br i1 %tobool.i85.not, label %cpu_online.exit86.if.end70_crit_edge, label %if.then53

cpu_online.exit86.if.end70_crit_edge:             ; preds = %cpu_online.exit86
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end70

if.then53:                                        ; preds = %cpu_online.exit86
  %26 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !315
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_unplug, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_unplug, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %if.then53.do.end68_crit_edge

if.then53.do.end68_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %land.lhs.true.do.end68_crit_edge, label %land.lhs.true63

land.lhs.true.do.end68_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end68

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @trace_block_unplug.__warned, align 1
  br i1 %.b73, label %land.lhs.true63.do.end68_crit_edge, label %if.then65

land.lhs.true63.do.end68_crit_edge:               ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end68

if.then65:                                        ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_block_unplug.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.24, i32 noundef 406, ptr noundef nonnull @.str.25) #20
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63.do.end68_crit_edge, %land.lhs.true.do.end68_crit_edge, %if.then53.do.end68_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !316
  %31 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i87 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i88 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i88 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i88, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i88, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit86.if.end70_crit_edge, %cpu_online.exit.if.end70_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_sched_insert_requests(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_try_issue_list_directly(ptr noundef %hctx, ptr noundef %list) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %list, align 4
  %cmp.i.not66 = icmp eq ptr %1, %list
  br i1 %cmp.i.not66, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %entry.while.body_crit_edge
  %2 = phi ptr [ %29, %cleanup.while.body_crit_edge ], [ %1, %entry.while.body_crit_edge ]
  %queued.068 = phi i32 [ %queued.2, %cleanup.while.body_crit_edge ], [ 0, %entry.while.body_crit_edge ]
  %errors.067 = phi i32 [ %errors.2, %cleanup.while.body_crit_edge ], [ 0, %entry.while.body_crit_edge ]
  %add.ptr = getelementptr i8, ptr %2, i32 -56
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %2) #20
  br i1 %call.i.i, label %if.end.i.i, label %while.body.list_del_init.exit_crit_edge

while.body.list_del_init.exit_crit_edge:          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %2, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %while.body.list_del_init.exit_crit_edge
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %2, ptr %2, align 4
  %prev.i3.i = getelementptr %struct.list_head, ptr %2, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %2, ptr %prev.i3.i, align 4
  %11 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %list, align 4
  %cmp.i44 = icmp eq ptr %12, %list
  %mq_hctx.i = getelementptr i8, ptr %2, i32 -48
  %13 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mq_hctx.i, align 8
  %call.i = tail call fastcc zeroext i8 @__blk_mq_try_issue_directly(ptr noundef %14, ptr noundef %add.ptr, i1 noundef zeroext true, i1 noundef zeroext %cmp.i44) #20
  %15 = zext i8 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.69)
  switch i8 %call.i, label %if.end [
    i8 0, label %if.else
    i8 9, label %list_del_init.exit.if.then11_crit_edge
    i8 13, label %list_del_init.exit.if.then11_crit_edge106
  ]

list_del_init.exit.if.then11_crit_edge106:        ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11

list_del_init.exit.if.then11_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11

if.then11:                                        ; preds = %list_del_init.exit.if.then11_crit_edge, %list_del_init.exit.if.then11_crit_edge106
  %mq_hctx.i.le = getelementptr i8, ptr %2, i32 -48
  %16 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %list, align 4
  %cmp.i46 = icmp eq ptr %17, %list
  %18 = ptrtoint ptr %mq_hctx.i.le to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mq_hctx.i.le, align 8
  tail call void @_raw_spin_lock(ptr noundef %19) #20
  %dispatch.i = getelementptr inbounds %struct.anon.3, ptr %19, i32 0, i32 1
  %prev.i.i49 = getelementptr inbounds %struct.anon.3, ptr %19, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %prev.i.i49 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i49, align 4
  %call.i.i13.i = tail call zeroext i1 @__list_add_valid(ptr noundef %2, ptr noundef %21, ptr noundef %dispatch.i) #20
  br i1 %call.i.i13.i, label %if.end.sink.split.i, label %if.then11.if.end.i_crit_edge

if.then11.if.end.i_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.end.sink.split.i:                              ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i3.i.le = getelementptr %struct.list_head, ptr %2, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i.i49 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %2, ptr %prev.i.i49, align 4
  %23 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %dispatch.i, ptr %2, align 4
  %24 = ptrtoint ptr %prev.i3.i.le to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev.i3.i.le, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %2, ptr %21, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.end.sink.split.i, %if.then11.if.end.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %19) #20
  br i1 %cmp.i46, label %if.then5.i, label %if.end.i.while.end_crit_edge

if.end.i.while.end_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_run_hw_queue(ptr noundef %19, i1 noundef zeroext false) #20
  br label %while.end

if.end:                                           ; preds = %list_del_init.exit
  %__data_len.i.i = getelementptr i8, ptr %2, i32 -24
  %26 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %__data_len.i.i, align 8
  %call1.i = tail call zeroext i1 @blk_update_request(ptr noundef %add.ptr, i8 noundef zeroext %call.i, i32 noundef %27) #20
  br i1 %call1.i, label %do.body.i, label %blk_mq_end_request.exit

do.body.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 933, 0\0A.popsection", ""() #20, !srcloc !319
  unreachable

blk_mq_end_request.exit:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__blk_mq_end_request(ptr noundef %add.ptr, i8 noundef zeroext %call.i) #20
  %inc = add i32 %errors.067, 1
  br label %cleanup

if.else:                                          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  %inc14 = add i32 %queued.068, 1
  br label %cleanup

cleanup:                                          ; preds = %if.else, %blk_mq_end_request.exit
  %errors.2 = phi i32 [ %inc, %blk_mq_end_request.exit ], [ %errors.067, %if.else ]
  %queued.2 = phi i32 [ %queued.068, %blk_mq_end_request.exit ], [ %inc14, %if.else ]
  %28 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %list, align 4
  %cmp.i.not = icmp eq ptr %29, %list
  br i1 %cmp.i.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %if.then5.i, %if.end.i.while.end_crit_edge, %entry.while.end_crit_edge
  %errors.064 = phi i32 [ %errors.067, %if.then5.i ], [ %errors.067, %if.end.i.while.end_crit_edge ], [ 0, %entry.while.end_crit_edge ], [ %errors.2, %cleanup.while.end_crit_edge ]
  %queued.061 = phi i32 [ %queued.068, %if.then5.i ], [ %queued.068, %if.end.i.while.end_crit_edge ], [ 0, %entry.while.end_crit_edge ], [ %queued.2, %cleanup.while.end_crit_edge ]
  %30 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %list, align 4
  %cmp.i51 = icmp eq ptr %31, %list
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %errors.064)
  %tobool20.not = icmp eq i32 %errors.064, 0
  %or.cond = select i1 %cmp.i51, i1 %tobool20.not, i1 false
  br i1 %or.cond, label %while.end.if.end28_crit_edge, label %land.lhs.true

while.end.if.end28_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

land.lhs.true:                                    ; preds = %while.end
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 7
  %32 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %queue, align 8
  %mq_ops = getelementptr inbounds %struct.request_queue, ptr %33, i32 0, i32 5
  %34 = ptrtoint ptr %mq_ops to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mq_ops, align 8
  %commit_rqs = getelementptr inbounds %struct.blk_mq_ops, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %commit_rqs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %commit_rqs, align 4
  %tobool21.not = icmp eq ptr %37, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %queued.061)
  %tobool23.not = icmp eq i32 %queued.061, 0
  %or.cond43 = select i1 %tobool21.not, i1 true, i1 %tobool23.not
  br i1 %or.cond43, label %land.lhs.true.if.end28_crit_edge, label %if.then24

land.lhs.true.if.end28_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.then24:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %37(ptr noundef %hctx) #20
  br label %if.end28

if.end28:                                         ; preds = %if.then24, %land.lhs.true.if.end28_crit_edge, %while.end.if.end28_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_submit_bio(ptr noundef %bio) local_unnamed_addr #0 align 64 {
entry:
  %data.i = alloca %struct.blk_mq_alloc_data, align 4
  %bio.addr = alloca ptr, align 4
  %nr_segs = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bio.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %bio, ptr %bio.addr, align 4
  %bi_bdev = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 1
  %1 = ptrtoint ptr %bi_bdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %bi_bdev, align 4
  %bd_queue.i = getelementptr inbounds %struct.block_device, ptr %2, i32 0, i32 18
  %3 = ptrtoint ptr %bd_queue.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bd_queue.i, align 4
  %zoned.i.i.i = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 37, i32 27
  %5 = ptrtoint ptr %zoned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %zoned.i.i.i, align 4
  %call.off.i.i = add i32 %6, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.off.i.i)
  %switch.i.i = icmp ult i32 %call.off.i.i, 2
  br i1 %switch.i.i, label %lor.lhs.false.i, label %entry.if.then.i107_crit_edge

entry.if.then.i107_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i107

lor.lhs.false.i:                                  ; preds = %entry
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %7 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %bi_opf.i, align 8
  %and.i.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %lor.lhs.false.i.if.then.i107_crit_edge, label %lor.lhs.false.i.blk_mq_plug.exit_crit_edge

lor.lhs.false.i.blk_mq_plug.exit_crit_edge:       ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_plug.exit

lor.lhs.false.i.if.then.i107_crit_edge:           ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i107

if.then.i107:                                     ; preds = %lor.lhs.false.i.if.then.i107_crit_edge, %entry.if.then.i107_crit_edge
  %9 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i3.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i3.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i, align 8
  %plug.i = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 148
  %13 = ptrtoint ptr %plug.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %plug.i, align 4
  br label %blk_mq_plug.exit

blk_mq_plug.exit:                                 ; preds = %if.then.i107, %lor.lhs.false.i.blk_mq_plug.exit_crit_edge
  %retval.0.i = phi ptr [ %14, %if.then.i107 ], [ null, %lor.lhs.false.i.blk_mq_plug.exit_crit_edge ]
  %bi_opf = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %15 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %bi_opf, align 8
  %and.i = and i32 %16, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp.i = icmp ne i32 %and.i, 0
  %17 = and i32 %16, 395264
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i = icmp eq i32 %17, 0
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr_segs) #20
  %18 = ptrtoint ptr %nr_segs to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %nr_segs, align 4
  %bi_crypt_context.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 15
  %19 = ptrtoint ptr %bi_crypt_context.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %bi_crypt_context.i.i, align 8
  %tobool.i.not.i108 = icmp eq ptr %20, null
  br i1 %tobool.i.not.i108, label %blk_mq_plug.exit.if.end_crit_edge, label %blk_crypto_bio_prep.exit

blk_mq_plug.exit.if.end_crit_edge:                ; preds = %blk_mq_plug.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

blk_crypto_bio_prep.exit:                         ; preds = %blk_mq_plug.exit
  %call1.i109 = call zeroext i1 @__blk_crypto_bio_prep(ptr noundef nonnull %bio.addr) #20
  br i1 %call1.i109, label %blk_crypto_bio_prep.exit.if.end_crit_edge, label %blk_crypto_bio_prep.exit.cleanup_crit_edge, !prof !298

blk_crypto_bio_prep.exit.cleanup_crit_edge:       ; preds = %blk_crypto_bio_prep.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

blk_crypto_bio_prep.exit.if.end_crit_edge:        ; preds = %blk_crypto_bio_prep.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end:                                           ; preds = %blk_crypto_bio_prep.exit.if.end_crit_edge, %blk_mq_plug.exit.if.end_crit_edge
  %limits.i.i = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 37
  %21 = ptrtoint ptr %limits.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %limits.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp.i.i = icmp eq i32 %22, 1
  br i1 %cmp.i.i, label %blk_queue_may_bounce.exit.i, label %if.end.blk_queue_bounce.exit_crit_edge

if.end.blk_queue_bounce.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_queue_bounce.exit

blk_queue_may_bounce.exit.i:                      ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @max_low_pfn to i32))
  %23 = load i32, ptr @max_low_pfn, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @max_pfn to i32))
  %24 = load i32, ptr @max_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %23, i32 %24)
  %cmp1.i.not.i = icmp ult i32 %23, %24
  br i1 %cmp1.i.not.i, label %blk_queue_may_bounce.exit.i.blk_queue_bounce.exit_crit_edge, label %land.rhs.i

blk_queue_may_bounce.exit.i.blk_queue_bounce.exit_crit_edge: ; preds = %blk_queue_may_bounce.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_queue_bounce.exit

land.rhs.i:                                       ; preds = %blk_queue_may_bounce.exit.i
  %25 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %bio.addr, align 4
  %tobool.not.i.i = icmp eq ptr %26, null
  br i1 %tobool.not.i.i, label %land.rhs.i.blk_queue_bounce.exit_crit_edge, label %land.lhs.true.i.i

land.rhs.i.blk_queue_bounce.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_queue_bounce.exit

land.lhs.true.i.i:                                ; preds = %land.rhs.i
  %bi_size.i.i = getelementptr inbounds %struct.bio, ptr %26, i32 0, i32 8, i32 1
  %27 = ptrtoint ptr %bi_size.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %bi_size.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool1.not.i.i = icmp eq i32 %28, 0
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.blk_queue_bounce.exit_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.blk_queue_bounce.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_queue_bounce.exit

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %bi_opf.i.i = getelementptr inbounds %struct.bio, ptr %26, i32 0, i32 2
  %29 = ptrtoint ptr %bi_opf.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bi_opf.i.i, align 8
  %trunc.i.i = trunc i32 %30 to i8
  %31 = zext i8 %trunc.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.70)
  switch i8 %trunc.i.i, label %if.then.i112 [
    i8 3, label %land.lhs.true2.i.i.blk_queue_bounce.exit_crit_edge
    i8 5, label %land.lhs.true2.i.i.blk_queue_bounce.exit_crit_edge185
    i8 9, label %land.lhs.true2.i.i.blk_queue_bounce.exit_crit_edge186
  ]

land.lhs.true2.i.i.blk_queue_bounce.exit_crit_edge186: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_queue_bounce.exit

land.lhs.true2.i.i.blk_queue_bounce.exit_crit_edge185: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_queue_bounce.exit

land.lhs.true2.i.i.blk_queue_bounce.exit_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_queue_bounce.exit

if.then.i112:                                     ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @__blk_queue_bounce(ptr noundef %4, ptr noundef nonnull %bio.addr) #20
  br label %blk_queue_bounce.exit

blk_queue_bounce.exit:                            ; preds = %if.then.i112, %land.lhs.true2.i.i.blk_queue_bounce.exit_crit_edge, %land.lhs.true2.i.i.blk_queue_bounce.exit_crit_edge185, %land.lhs.true2.i.i.blk_queue_bounce.exit_crit_edge186, %land.lhs.true.i.i.blk_queue_bounce.exit_crit_edge, %land.rhs.i.blk_queue_bounce.exit_crit_edge, %blk_queue_may_bounce.exit.i.blk_queue_bounce.exit_crit_edge, %if.end.blk_queue_bounce.exit_crit_edge
  %32 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %bio.addr, align 4
  %bi_opf.i113 = getelementptr inbounds %struct.bio, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %bi_opf.i113 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %bi_opf.i113, align 8
  %trunc.i = trunc i32 %35 to i8
  %36 = zext i8 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.71)
  switch i8 %trunc.i, label %sw.epilog.i [
    i8 3, label %blk_queue_bounce.exit.if.then7_crit_edge
    i8 5, label %blk_queue_bounce.exit.if.then7_crit_edge187
    i8 9, label %blk_queue_bounce.exit.if.then7_crit_edge188
    i8 7, label %blk_queue_bounce.exit.if.then7_crit_edge189
  ]

blk_queue_bounce.exit.if.then7_crit_edge189:      ; preds = %blk_queue_bounce.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

blk_queue_bounce.exit.if.then7_crit_edge188:      ; preds = %blk_queue_bounce.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

blk_queue_bounce.exit.if.then7_crit_edge187:      ; preds = %blk_queue_bounce.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

blk_queue_bounce.exit.if.then7_crit_edge:         ; preds = %blk_queue_bounce.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

sw.epilog.i:                                      ; preds = %blk_queue_bounce.exit
  %chunk_sectors.i = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 37, i32 5
  %37 = ptrtoint ptr %chunk_sectors.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %chunk_sectors.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i114 = icmp eq i32 %38, 0
  br i1 %tobool.not.i114, label %lor.lhs.false.i115, label %sw.epilog.i.if.then7_crit_edge

sw.epilog.i.if.then7_crit_edge:                   ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

lor.lhs.false.i115:                               ; preds = %sw.epilog.i
  %bi_vcnt.i = getelementptr inbounds %struct.bio, ptr %33, i32 0, i32 17
  %39 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %bi_vcnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %40)
  %cmp.not.i = icmp eq i16 %40, 1
  br i1 %cmp.not.i, label %blk_may_split.exit, label %lor.lhs.false.i115.if.then7_crit_edge

lor.lhs.false.i115.if.then7_crit_edge:            ; preds = %lor.lhs.false.i115
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

blk_may_split.exit:                               ; preds = %lor.lhs.false.i115
  %bi_io_vec.i = getelementptr inbounds %struct.bio, ptr %33, i32 0, i32 20
  %41 = ptrtoint ptr %bi_io_vec.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %bi_io_vec.i, align 8
  %bv_len.i = getelementptr inbounds %struct.bio_vec, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %bv_len.i, align 4
  %bv_offset.i = getelementptr inbounds %struct.bio_vec, ptr %42, i32 0, i32 2
  %45 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %bv_offset.i, align 4
  %add.i = add i32 %46, %44
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add.i)
  %cmp3.i = icmp ugt i32 %add.i, 4096
  br i1 %cmp3.i, label %blk_may_split.exit.if.then7_crit_edge, label %blk_may_split.exit.if.end8_crit_edge

blk_may_split.exit.if.end8_crit_edge:             ; preds = %blk_may_split.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

blk_may_split.exit.if.then7_crit_edge:            ; preds = %blk_may_split.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

if.then7:                                         ; preds = %blk_may_split.exit.if.then7_crit_edge, %lor.lhs.false.i115.if.then7_crit_edge, %sw.epilog.i.if.then7_crit_edge, %blk_queue_bounce.exit.if.then7_crit_edge, %blk_queue_bounce.exit.if.then7_crit_edge187, %blk_queue_bounce.exit.if.then7_crit_edge188, %blk_queue_bounce.exit.if.then7_crit_edge189
  call void @__blk_queue_split(ptr noundef %4, ptr noundef nonnull %bio.addr, ptr noundef nonnull %nr_segs) #20
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %blk_may_split.exit.if.end8_crit_edge
  %47 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %bio.addr, align 4
  %call9 = call zeroext i1 @bio_integrity_prep(ptr noundef %48) #20
  br i1 %call9, label %if.end11, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end11:                                         ; preds = %if.end8
  %49 = ptrtoint ptr %nr_segs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %nr_segs, align 4
  %tobool.not.i117 = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not.i117, label %if.end11.if.then14_crit_edge, label %if.end.i

if.end11.if.then14_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14

if.end.i:                                         ; preds = %if.end11
  %cached_rq.i = getelementptr inbounds %struct.blk_plug, ptr %retval.0.i, i32 0, i32 1
  %51 = ptrtoint ptr %cached_rq.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %cached_rq.i, align 4
  %tobool7.not.i = icmp eq ptr %52, null
  br i1 %tobool7.not.i, label %if.end.i.if.then14_crit_edge, label %lor.lhs.false.i119

if.end.i.if.then14_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14

lor.lhs.false.i119:                               ; preds = %if.end.i
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %52, align 8
  %cmp.not.i118 = icmp eq ptr %54, %4
  br i1 %cmp.not.i118, label %if.end10.i, label %lor.lhs.false.i119.if.then14_crit_edge

lor.lhs.false.i119.if.then14_crit_edge:           ; preds = %lor.lhs.false.i119
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14

if.end10.i:                                       ; preds = %lor.lhs.false.i119
  %55 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %bio.addr, align 4
  %queue_flags.i.i = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 11
  %57 = ptrtoint ptr %queue_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %queue_flags.i.i, align 4
  %59 = and i32 %58, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool.not.i.i120 = icmp eq i32 %59, 0
  br i1 %tobool.not.i.i120, label %land.lhs.true.i.i121, label %if.end10.i.if.end12.i_crit_edge

if.end10.i.if.end12.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12.i

land.lhs.true.i.i121:                             ; preds = %if.end10.i
  %bi_opf.i.i.i = getelementptr inbounds %struct.bio, ptr %56, i32 0, i32 2
  %60 = ptrtoint ptr %bi_opf.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %bi_opf.i.i.i, align 8
  %62 = and i32 %61, 409600
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.i.i.i = icmp eq i32 %62, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i, label %land.lhs.true.i.i121.if.end12.i_crit_edge

land.lhs.true.i.i121.if.end12.i_crit_edge:        ; preds = %land.lhs.true.i.i121
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i121
  %call2.i.i = call zeroext i1 @blk_attempt_plug_merge(ptr noundef %4, ptr noundef %56, i32 noundef %50) #20
  br i1 %call2.i.i, label %if.then.i.i.if.then14.thread_crit_edge, label %if.end.i.i

if.then.i.i.if.then14.thread_crit_edge:           ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14.thread

if.end.i.i:                                       ; preds = %if.then.i.i
  %call4.i.i = call zeroext i1 @blk_mq_sched_bio_merge(ptr noundef %4, ptr noundef %56, i32 noundef %50) #20
  br i1 %call4.i.i, label %if.end.i.i.if.then14.thread_crit_edge, label %if.end.i.i.if.end12.i_crit_edge

if.end.i.i.if.end12.i_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12.i

if.end.i.i.if.then14.thread_crit_edge:            ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14.thread

if.then14.thread:                                 ; preds = %if.end.i.i.if.then14.thread_crit_edge, %if.then.i.i.if.then14.thread_crit_edge
  %63 = ptrtoint ptr %bio.addr to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr null, ptr %bio.addr, align 4
  br label %cleanup

if.end12.i:                                       ; preds = %if.end.i.i.if.end12.i_crit_edge, %land.lhs.true.i.i121.if.end12.i_crit_edge, %if.end10.i.if.end12.i_crit_edge
  %rq_qos.i.i = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 4
  %64 = ptrtoint ptr %rq_qos.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %rq_qos.i.i, align 4
  %tobool.not.i48.i = icmp eq ptr %65, null
  br i1 %tobool.not.i48.i, label %if.end12.i.rq_qos_throttle.exit.i_crit_edge, label %if.then.i49.i

if.end12.i.rq_qos_throttle.exit.i_crit_edge:      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rq_qos_throttle.exit.i

if.then.i49.i:                                    ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #22
  %66 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %bio.addr, align 4
  %bi_flags.i.i.i = getelementptr inbounds %struct.bio, ptr %67, i32 0, i32 3
  %68 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %bi_flags.i.i.i, align 4
  %conv1.i.i.i = or i16 %69, 1024
  store i16 %conv1.i.i.i, ptr %bi_flags.i.i.i, align 4
  %70 = ptrtoint ptr %rq_qos.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %rq_qos.i.i, align 4
  call void @__rq_qos_throttle(ptr noundef %71, ptr noundef %67) #20
  br label %rq_qos_throttle.exit.i

rq_qos_throttle.exit.i:                           ; preds = %if.then.i49.i, %if.end12.i.rq_qos_throttle.exit.i_crit_edge
  %72 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %bio.addr, align 4
  %bi_opf.i122 = getelementptr inbounds %struct.bio, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %bi_opf.i122 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %bi_opf.i122, align 8
  %76 = and i32 %75, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %tobool.not.i51.i = icmp eq i32 %76, 0
  %and1.i.i = and i32 %75, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %cmp.i.i123 = icmp eq i32 %and1.i.i, 0
  %spec.select.i.i = zext i1 %cmp.i.i123 to i32
  %type.0.i.i = select i1 %tobool.not.i51.i, i32 %spec.select.i.i, i32 2
  %mq_hctx.i = getelementptr inbounds %struct.request, ptr %52, i32 0, i32 2
  %77 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %mq_hctx.i, align 8
  %type.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %78, i32 0, i32 13
  %79 = ptrtoint ptr %type.i to i32
  call void @__asan_load2_noabort(i32 %79)
  %80 = load i16, ptr %type.i, align 4
  %conv.i = zext i16 %80 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %type.0.i.i, i32 %conv.i)
  %cmp14.not.i = icmp eq i32 %type.0.i.i, %conv.i
  br i1 %cmp14.not.i, label %if.end17.i, label %rq_qos_throttle.exit.i.if.then14_crit_edge

rq_qos_throttle.exit.i.if.then14_crit_edge:       ; preds = %rq_qos_throttle.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14

if.end17.i:                                       ; preds = %rq_qos_throttle.exit.i
  %cmd_flags.i = getelementptr inbounds %struct.request, ptr %52, i32 0, i32 3
  %81 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %cmd_flags.i, align 4
  %83 = and i32 %82, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %tobool.i.i = icmp ne i32 %83, 0
  %84 = and i32 %75, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %tobool.i52.i = icmp ne i32 %84, 0
  %85 = xor i1 %tobool.i52.i, %tobool.i.i
  br i1 %85, label %if.end17.i.if.then14_crit_edge, label %blk_mq_get_cached_request.exit

if.end17.i.if.then14_crit_edge:                   ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14

blk_mq_get_cached_request.exit:                   ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #22
  %86 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %75, ptr %cmd_flags.i, align 4
  %87 = getelementptr inbounds %struct.request, ptr %52, i32 0, i32 12
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %87, align 8
  %90 = ptrtoint ptr %cached_rq.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %89, ptr %cached_rq.i, align 4
  store volatile ptr %87, ptr %87, align 4
  %prev.i.i = getelementptr inbounds %struct.request, ptr %52, i32 0, i32 12, i32 0, i32 1
  %91 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %87, ptr %prev.i.i, align 4
  br label %if.end30

if.then14:                                        ; preds = %if.end17.i.if.then14_crit_edge, %rq_qos_throttle.exit.i.if.then14_crit_edge, %lor.lhs.false.i119.if.then14_crit_edge, %if.end.i.if.then14_crit_edge, %if.end11.if.then14_crit_edge
  %92 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %92)
  %.pr = load ptr, ptr %bio.addr, align 4
  %tobool15.not = icmp eq ptr %.pr, null
  br i1 %tobool15.not, label %if.then14.cleanup_crit_edge, label %if.end17

if.then14.cleanup_crit_edge:                      ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end17:                                         ; preds = %if.then14
  %93 = ptrtoint ptr %nr_segs to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %nr_segs, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %data.i) #20
  %95 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %4, ptr %data.i, align 4
  %flags.i = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data.i, i32 0, i32 1
  %96 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 0, ptr %flags.i, align 4
  %shallow_depth.i = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data.i, i32 0, i32 2
  %97 = ptrtoint ptr %shallow_depth.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 0, ptr %shallow_depth.i, align 4
  %cmd_flags.i125 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data.i, i32 0, i32 3
  %bi_opf.i126 = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 2
  %98 = ptrtoint ptr %bi_opf.i126 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %bi_opf.i126, align 8
  %100 = ptrtoint ptr %cmd_flags.i125 to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %99, ptr %cmd_flags.i125, align 4
  %rq_flags.i = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data.i, i32 0, i32 4
  %101 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 0, ptr %rq_flags.i, align 4
  %nr_tags.i = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data.i, i32 0, i32 5
  %102 = ptrtoint ptr %nr_tags.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 1, ptr %nr_tags.i, align 4
  %cached_rq.i127 = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data.i, i32 0, i32 6
  %103 = ptrtoint ptr %cached_rq.i127 to i32
  call void @__asan_store4_noabort(i32 %103)
  store ptr null, ptr %cached_rq.i127, align 4
  %ctx.i = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data.i, i32 0, i32 7
  %104 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store ptr null, ptr %ctx.i, align 4
  %hctx.i = getelementptr inbounds %struct.blk_mq_alloc_data, ptr %data.i, i32 0, i32 8
  %105 = ptrtoint ptr %hctx.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store ptr null, ptr %hctx.i, align 4
  %bi_bdev.i.i = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 1
  %106 = ptrtoint ptr %bi_bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %bi_bdev.i.i, align 4
  %bd_queue.i.i.i = getelementptr inbounds %struct.block_device, ptr %107, i32 0, i32 18
  %108 = ptrtoint ptr %bd_queue.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %bd_queue.i.i.i, align 4
  %110 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i.i.i.i = and i32 %110, -16384
  %111 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %111, i32 0, i32 1
  %112 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i = add i32 %113, 1
  store volatile i32 %add.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i.i.i.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i.i.i.i, label %if.end17.rcu_read_lock.exit.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.end17.rcu_read_lock.exit.i.i.i_crit_edge:      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end17
  %call1.i.i.i.i = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, label %land.lhs.true2.i.i.i.i

land.lhs.true.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit.i.i.i

land.lhs.true2.i.i.i.i:                           ; preds = %land.lhs.true.i.i.i.i
  %.b4.i.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i.i, label %land.lhs.true2.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

land.lhs.true2.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.lhs.true2.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit.i.i.i

rcu_read_lock.exit.i.i.i:                         ; preds = %if.then.i.i.i.i, %land.lhs.true2.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, %if.end17.rcu_read_lock.exit.i.i.i_crit_edge
  %q_usage_counter.i.i.i = getelementptr inbounds %struct.request_queue, ptr %109, i32 0, i32 2
  %call.i1.i.i.i = call i32 @rcu_read_lock_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1.i.i.i)
  %tobool.not.i2.i.i.i = icmp eq i32 %call.i1.i.i.i, 0
  br i1 %tobool.not.i2.i.i.i, label %land.rhs.i.i.i.i, label %rcu_read_lock.exit.i.i.i.if.end29.i.i.i.i_crit_edge

rcu_read_lock.exit.i.i.i.if.end29.i.i.i.i_crit_edge: ; preds = %rcu_read_lock.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %rcu_read_lock.exit.i.i.i
  %.b104.i.i.i.i = load i1, ptr @percpu_ref_tryget_live_rcu.__already_done, align 1
  br i1 %.b104.i.i.i.i, label %land.rhs.i.i.i.i.if.end29.i.i.i.i_crit_edge, label %if.then.i3.i.i.i, !prof !298

land.rhs.i.i.i.i.if.end29.i.i.i.i_crit_edge:      ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29.i.i.i.i

if.then.i3.i.i.i:                                 ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @percpu_ref_tryget_live_rcu.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.35, i32 noundef 280, i32 noundef 9, ptr noundef null) #20
  br label %if.end29.i.i.i.i

if.end29.i.i.i.i:                                 ; preds = %if.then.i3.i.i.i, %land.rhs.i.i.i.i.if.end29.i.i.i.i_crit_edge, %rcu_read_lock.exit.i.i.i.if.end29.i.i.i.i_crit_edge
  %114 = ptrtoint ptr %q_usage_counter.i.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %q_usage_counter.i.i.i, align 4
  %and.i.i.i.i.i128 = and i32 %115, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i128)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i128, 0
  br i1 %tobool.not.i.i.i.i.i, label %do.body46.i.i.i.i, label %if.else.i.i.i.i, !prof !298

do.body46.i.i.i.i:                                ; preds = %if.end29.i.i.i.i
  %116 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #20, !srcloc !303
  %117 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i105.i.i.i.i = and i32 %117, -16384
  %118 = inttoptr i32 %and.i105.i.i.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %118, i32 0, i32 3
  %119 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %120
  %121 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %122, %115
  %123 = inttoptr i32 %add.i.i.i.i to ptr
  %124 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %123, align 4
  %add63.i.i.i.i = add i32 %125, 1
  store i32 %add63.i.i.i.i, ptr %123, align 4
  %126 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !304
  %and.i.i.i.i.i.i = and i32 %126, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool74.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool74.not.i.i.i.i, label %if.then83.i.i.i.i, label %do.body46.i.i.i.i.percpu_ref_tryget_live_rcu.exit.thread.i.i.i_crit_edge, !prof !300

do.body46.i.i.i.i.percpu_ref_tryget_live_rcu.exit.thread.i.i.i_crit_edge: ; preds = %do.body46.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %percpu_ref_tryget_live_rcu.exit.thread.i.i.i

if.then83.i.i.i.i:                                ; preds = %do.body46.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @warn_bogus_irq_restore() #20
  br label %percpu_ref_tryget_live_rcu.exit.thread.i.i.i

percpu_ref_tryget_live_rcu.exit.thread.i.i.i:     ; preds = %if.then83.i.i.i.i, %do.body46.i.i.i.i.percpu_ref_tryget_live_rcu.exit.thread.i.i.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %116) #20, !srcloc !305
  br label %if.end.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end29.i.i.i.i
  %and.i.i.i.i = and i32 %115, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool93.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool93.not.i.i.i.i, label %if.then94.i.i.i.i, label %if.else.i.i.i.i.fail.i.i.i_crit_edge

if.else.i.i.i.i.fail.i.i.i_crit_edge:             ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail.i.i.i

if.then94.i.i.i.i:                                ; preds = %if.else.i.i.i.i
  %data.i.i.i.i = getelementptr inbounds %struct.request_queue, ptr %109, i32 0, i32 2, i32 1
  %127 = ptrtoint ptr %data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %data.i.i.i.i, align 4
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %128, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !340
  call void @llvm.prefetch.p0(ptr %128, i32 1, i32 3, i32 1) #20
  %129 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %128, ptr %128, i32 0, i32 1, ptr elementtype(i32) %128) #20, !srcloc !341
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %129, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i.i.i, label %if.then94.i.i.i.i.fail.i.i.i_crit_edge, label %percpu_ref_tryget_live_rcu.exit.thread27.i.i.i

if.then94.i.i.i.i.fail.i.i.i_crit_edge:           ; preds = %if.then94.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail.i.i.i

percpu_ref_tryget_live_rcu.exit.thread27.i.i.i:   ; preds = %if.then94.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !342
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %percpu_ref_tryget_live_rcu.exit.thread27.i.i.i, %percpu_ref_tryget_live_rcu.exit.thread.i.i.i
  %pm_only.i.i.i = getelementptr inbounds %struct.request_queue, ptr %109, i32 0, i32 12
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %pm_only.i.i.i, i32 noundef 4) #20
  %130 = ptrtoint ptr %pm_only.i.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %pm_only.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %131)
  %tobool.not.i.i.i129 = icmp eq i32 %131, 0
  br i1 %tobool.not.i.i.i129, label %if.end5.i.i.i, label %fail_put.i.i.i

if.end5.i.i.i:                                    ; preds = %if.end.i.i.i
  %call.i4.i.i.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i4.i.i.i, label %if.end5.i.i.i.bio_queue_enter.exit.thread.i_crit_edge, label %land.lhs.true.i7.i.i.i

if.end5.i.i.i.bio_queue_enter.exit.thread.i_crit_edge: ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %bio_queue_enter.exit.thread.i

land.lhs.true.i7.i.i.i:                           ; preds = %if.end5.i.i.i
  %call1.i5.i.i.i = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i5.i.i.i)
  %tobool.not.i6.i.i.i = icmp eq i32 %call1.i5.i.i.i, 0
  br i1 %tobool.not.i6.i.i.i, label %land.lhs.true.i7.i.i.i.bio_queue_enter.exit.thread.i_crit_edge, label %land.lhs.true2.i9.i.i.i

land.lhs.true.i7.i.i.i.bio_queue_enter.exit.thread.i_crit_edge: ; preds = %land.lhs.true.i7.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %bio_queue_enter.exit.thread.i

land.lhs.true2.i9.i.i.i:                          ; preds = %land.lhs.true.i7.i.i.i
  %.b4.i8.i.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i8.i.i.i, label %land.lhs.true2.i9.i.i.i.bio_queue_enter.exit.thread.i_crit_edge, label %if.then.i10.i.i.i

land.lhs.true2.i9.i.i.i.bio_queue_enter.exit.thread.i_crit_edge: ; preds = %land.lhs.true2.i9.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %bio_queue_enter.exit.thread.i

if.then.i10.i.i.i:                                ; preds = %land.lhs.true2.i9.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %bio_queue_enter.exit.thread.i

bio_queue_enter.exit.thread.i:                    ; preds = %if.then.i10.i.i.i, %land.lhs.true2.i9.i.i.i.bio_queue_enter.exit.thread.i_crit_edge, %land.lhs.true.i7.i.i.i.bio_queue_enter.exit.thread.i_crit_edge, %if.end5.i.i.i.bio_queue_enter.exit.thread.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %132 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i20.i.i.i = and i32 %132, -16384
  %133 = inttoptr i32 %and.i.i.i.i.i20.i.i.i to ptr
  %preempt_count.i.i.i.i21.i.i.i = getelementptr inbounds %struct.thread_info, ptr %133, i32 0, i32 1
  %134 = ptrtoint ptr %preempt_count.i.i.i.i21.i.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load volatile i32, ptr %preempt_count.i.i.i.i21.i.i.i, align 4
  %sub.i.i.i22.i.i.i = add i32 %135, -1
  store volatile i32 %sub.i.i.i22.i.i.i, ptr %preempt_count.i.i.i.i21.i.i.i, align 4
  call void @rcu_read_unlock_strict() #20
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  br label %if.end.i134

fail_put.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @blk_queue_exit(ptr noundef %109) #20
  br label %fail.i.i.i

fail.i.i.i:                                       ; preds = %fail_put.i.i.i, %if.then94.i.i.i.i.fail.i.i.i_crit_edge, %if.else.i.i.i.i.fail.i.i.i_crit_edge
  %call.i13.i.i.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i13.i.i.i, label %fail.i.i.i.bio_queue_enter.exit.i_crit_edge, label %land.lhs.true.i16.i.i.i

fail.i.i.i.bio_queue_enter.exit.i_crit_edge:      ; preds = %fail.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %bio_queue_enter.exit.i

land.lhs.true.i16.i.i.i:                          ; preds = %fail.i.i.i
  %call1.i14.i.i.i = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i14.i.i.i)
  %tobool.not.i15.i.i.i = icmp eq i32 %call1.i14.i.i.i, 0
  br i1 %tobool.not.i15.i.i.i, label %land.lhs.true.i16.i.i.i.bio_queue_enter.exit.i_crit_edge, label %land.lhs.true2.i18.i.i.i

land.lhs.true.i16.i.i.i.bio_queue_enter.exit.i_crit_edge: ; preds = %land.lhs.true.i16.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %bio_queue_enter.exit.i

land.lhs.true2.i18.i.i.i:                         ; preds = %land.lhs.true.i16.i.i.i
  %.b4.i17.i.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i17.i.i.i, label %land.lhs.true2.i18.i.i.i.bio_queue_enter.exit.i_crit_edge, label %if.then.i19.i.i.i

land.lhs.true2.i18.i.i.i.bio_queue_enter.exit.i_crit_edge: ; preds = %land.lhs.true2.i18.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %bio_queue_enter.exit.i

if.then.i19.i.i.i:                                ; preds = %land.lhs.true2.i18.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %bio_queue_enter.exit.i

bio_queue_enter.exit.i:                           ; preds = %if.then.i19.i.i.i, %land.lhs.true2.i18.i.i.i.bio_queue_enter.exit.i_crit_edge, %land.lhs.true.i16.i.i.i.bio_queue_enter.exit.i_crit_edge, %fail.i.i.i.bio_queue_enter.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %136 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i20.i.c.i.i = and i32 %136, -16384
  %137 = inttoptr i32 %and.i.i.i.i.i20.i.c.i.i to ptr
  %preempt_count.i.i.i.i21.i.c.i.i = getelementptr inbounds %struct.thread_info, ptr %137, i32 0, i32 1
  %138 = ptrtoint ptr %preempt_count.i.i.i.i21.i.c.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile i32, ptr %preempt_count.i.i.i.i21.i.c.i.i, align 4
  %sub.i.i.i22.i.c.i.i = add i32 %139, -1
  store volatile i32 %sub.i.i.i22.i.c.i.i, ptr %preempt_count.i.i.i.i21.i.c.i.i, align 4
  call void @rcu_read_unlock_strict() #20
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  %call2.i.i130 = call i32 @__bio_queue_enter(ptr noundef %109, ptr noundef nonnull %.pr) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i130)
  %tobool.not.i131 = icmp eq i32 %call2.i.i130, 0
  br i1 %tobool.not.i131, label %bio_queue_enter.exit.i.if.end.i134_crit_edge, label %bio_queue_enter.exit.i.blk_mq_get_new_requests.exit.thread_crit_edge, !prof !298

bio_queue_enter.exit.i.blk_mq_get_new_requests.exit.thread_crit_edge: ; preds = %bio_queue_enter.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_get_new_requests.exit.thread

bio_queue_enter.exit.i.if.end.i134_crit_edge:     ; preds = %bio_queue_enter.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i134

if.end.i134:                                      ; preds = %bio_queue_enter.exit.i.if.end.i134_crit_edge, %bio_queue_enter.exit.thread.i
  %queue_flags.i.i132 = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 11
  %140 = ptrtoint ptr %queue_flags.i.i132 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %queue_flags.i.i132, align 4
  %142 = and i32 %141, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %142)
  %tobool.not.i.i133 = icmp eq i32 %142, 0
  br i1 %tobool.not.i.i133, label %land.lhs.true.i.i135, label %if.end.i134.if.end6.i_crit_edge

if.end.i134.if.end6.i_crit_edge:                  ; preds = %if.end.i134
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6.i

land.lhs.true.i.i135:                             ; preds = %if.end.i134
  %143 = ptrtoint ptr %bi_opf.i126 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %bi_opf.i126, align 8
  %145 = and i32 %144, 409600
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %145)
  %tobool.not.i.i38.i = icmp eq i32 %145, 0
  br i1 %tobool.not.i.i38.i, label %if.then.i.i136, label %land.lhs.true.i.i135.if.end6.i_crit_edge

land.lhs.true.i.i135.if.end6.i_crit_edge:         ; preds = %land.lhs.true.i.i135
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6.i

if.then.i.i136:                                   ; preds = %land.lhs.true.i.i135
  %call2.i39.i = call zeroext i1 @blk_attempt_plug_merge(ptr noundef %4, ptr noundef nonnull %.pr, i32 noundef %94) #20
  br i1 %call2.i39.i, label %if.then.i.i136.queue_exit.i_crit_edge, label %if.end.i.i138

if.then.i.i136.queue_exit.i_crit_edge:            ; preds = %if.then.i.i136
  call void @__sanitizer_cov_trace_pc() #22
  br label %queue_exit.i

if.end.i.i138:                                    ; preds = %if.then.i.i136
  %call4.i.i137 = call zeroext i1 @blk_mq_sched_bio_merge(ptr noundef %4, ptr noundef nonnull %.pr, i32 noundef %94) #20
  br i1 %call4.i.i137, label %if.end.i.i138.queue_exit.i_crit_edge, label %if.end.i.i138.if.end6.i_crit_edge

if.end.i.i138.if.end6.i_crit_edge:                ; preds = %if.end.i.i138
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6.i

if.end.i.i138.queue_exit.i_crit_edge:             ; preds = %if.end.i.i138
  call void @__sanitizer_cov_trace_pc() #22
  br label %queue_exit.i

if.end6.i:                                        ; preds = %if.end.i.i138.if.end6.i_crit_edge, %land.lhs.true.i.i135.if.end6.i_crit_edge, %if.end.i134.if.end6.i_crit_edge
  %rq_qos.i.i139 = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 4
  %146 = ptrtoint ptr %rq_qos.i.i139 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %rq_qos.i.i139, align 4
  %tobool.not.i41.i = icmp eq ptr %147, null
  br i1 %tobool.not.i41.i, label %if.end6.i.rq_qos_throttle.exit.i143_crit_edge, label %if.then.i42.i

if.end6.i.rq_qos_throttle.exit.i143_crit_edge:    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rq_qos_throttle.exit.i143

if.then.i42.i:                                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  %bi_flags.i.i.i140 = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 3
  %148 = ptrtoint ptr %bi_flags.i.i.i140 to i32
  call void @__asan_load2_noabort(i32 %148)
  %149 = load i16, ptr %bi_flags.i.i.i140, align 4
  %conv1.i.i.i141 = or i16 %149, 1024
  store i16 %conv1.i.i.i141, ptr %bi_flags.i.i.i140, align 4
  %150 = ptrtoint ptr %rq_qos.i.i139 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %rq_qos.i.i139, align 4
  call void @__rq_qos_throttle(ptr noundef %151, ptr noundef nonnull %.pr) #20
  br label %rq_qos_throttle.exit.i143

rq_qos_throttle.exit.i143:                        ; preds = %if.then.i42.i, %if.end6.i.rq_qos_throttle.exit.i143_crit_edge
  br i1 %tobool.not.i117, label %rq_qos_throttle.exit.i143.if.end13.i_crit_edge, label %if.then8.i

rq_qos_throttle.exit.i143.if.end13.i_crit_edge:   ; preds = %rq_qos_throttle.exit.i143
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13.i

if.then8.i:                                       ; preds = %rq_qos_throttle.exit.i143
  call void @__sanitizer_cov_trace_pc() #22
  %nr_ios.i = getelementptr inbounds %struct.blk_plug, ptr %retval.0.i, i32 0, i32 2
  %152 = ptrtoint ptr %nr_ios.i to i32
  call void @__asan_load2_noabort(i32 %152)
  %153 = load i16, ptr %nr_ios.i, align 4
  %conv.i144 = zext i16 %153 to i32
  %154 = ptrtoint ptr %nr_tags.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 %conv.i144, ptr %nr_tags.i, align 4
  store i16 1, ptr %nr_ios.i, align 4
  %cached_rq11.i = getelementptr inbounds %struct.blk_plug, ptr %retval.0.i, i32 0, i32 1
  %155 = ptrtoint ptr %cached_rq.i127 to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr %cached_rq11.i, ptr %cached_rq.i127, align 4
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then8.i, %rq_qos_throttle.exit.i143.if.end13.i_crit_edge
  %call14.i = call fastcc ptr @__blk_mq_alloc_requests(ptr noundef nonnull %data.i) #20
  %tobool15.not.i = icmp eq ptr %call14.i, null
  br i1 %tobool15.not.i, label %if.end17.i145, label %blk_mq_get_new_requests.exit

if.end17.i145:                                    ; preds = %if.end13.i
  %156 = ptrtoint ptr %rq_qos.i.i139 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %rq_qos.i.i139, align 4
  %tobool.not.i45.i = icmp eq ptr %157, null
  br i1 %tobool.not.i45.i, label %if.end17.i145.rq_qos_cleanup.exit.i_crit_edge, label %if.then.i46.i

if.end17.i145.rq_qos_cleanup.exit.i_crit_edge:    ; preds = %if.end17.i145
  call void @__sanitizer_cov_trace_pc() #22
  br label %rq_qos_cleanup.exit.i

if.then.i46.i:                                    ; preds = %if.end17.i145
  call void @__sanitizer_cov_trace_pc() #22
  call void @__rq_qos_cleanup(ptr noundef nonnull %157, ptr noundef nonnull %.pr) #20
  br label %rq_qos_cleanup.exit.i

rq_qos_cleanup.exit.i:                            ; preds = %if.then.i46.i, %if.end17.i145.rq_qos_cleanup.exit.i_crit_edge
  %158 = ptrtoint ptr %bi_opf.i126 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %bi_opf.i126, align 8
  %160 = and i32 %159, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %160)
  %tobool20.not.i = icmp eq i32 %160, 0
  br i1 %tobool20.not.i, label %rq_qos_cleanup.exit.i.queue_exit.i_crit_edge, label %if.then21.i

rq_qos_cleanup.exit.i.queue_exit.i_crit_edge:     ; preds = %rq_qos_cleanup.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %queue_exit.i

if.then21.i:                                      ; preds = %rq_qos_cleanup.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %bi_flags.i.i48.i = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 3
  %161 = ptrtoint ptr %bi_flags.i.i48.i to i32
  call void @__asan_load2_noabort(i32 %161)
  %162 = load i16, ptr %bi_flags.i.i48.i, align 4
  %conv1.i.i49.i = or i16 %162, 16
  store i16 %conv1.i.i49.i, ptr %bi_flags.i.i48.i, align 4
  %bi_status.i.i = getelementptr inbounds %struct.bio, ptr %.pr, i32 0, i32 6
  %163 = ptrtoint ptr %bi_status.i.i to i32
  call void @__asan_store1_noabort(i32 %163)
  store i8 12, ptr %bi_status.i.i, align 2
  call void @bio_endio(ptr noundef nonnull %.pr) #20
  br label %queue_exit.i

queue_exit.i:                                     ; preds = %if.then21.i, %rq_qos_cleanup.exit.i.queue_exit.i_crit_edge, %if.end.i.i138.queue_exit.i_crit_edge, %if.then.i.i136.queue_exit.i_crit_edge
  call void @blk_queue_exit(ptr noundef %4) #20
  br label %blk_mq_get_new_requests.exit.thread

blk_mq_get_new_requests.exit.thread:              ; preds = %queue_exit.i, %bio_queue_enter.exit.i.blk_mq_get_new_requests.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %data.i) #20
  br label %cleanup

blk_mq_get_new_requests.exit:                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %data.i) #20
  br label %if.end30

if.end30:                                         ; preds = %blk_mq_get_new_requests.exit, %blk_mq_get_cached_request.exit
  %rq.0 = phi ptr [ %52, %blk_mq_get_cached_request.exit ], [ %call14.i, %blk_mq_get_new_requests.exit ]
  %164 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %bio.addr, align 4
  call fastcc void @trace_block_getrq(ptr noundef %165)
  %rq_qos.i = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 4
  %166 = ptrtoint ptr %rq_qos.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %rq_qos.i, align 4
  %tobool.not.i147 = icmp eq ptr %167, null
  br i1 %tobool.not.i147, label %if.end30.rq_qos_track.exit_crit_edge, label %if.then.i148

if.end30.rq_qos_track.exit_crit_edge:             ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #22
  br label %rq_qos_track.exit

if.then.i148:                                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #22
  %168 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %bio.addr, align 4
  call void @__rq_qos_track(ptr noundef nonnull %167, ptr noundef nonnull %rq.0, ptr noundef %169) #20
  br label %rq_qos_track.exit

rq_qos_track.exit:                                ; preds = %if.then.i148, %if.end30.rq_qos_track.exit_crit_edge
  %170 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %bio.addr, align 4
  %172 = ptrtoint ptr %nr_segs to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %nr_segs, align 4
  %bi_opf.i150 = getelementptr inbounds %struct.bio, ptr %171, i32 0, i32 2
  %174 = ptrtoint ptr %bi_opf.i150 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %bi_opf.i150, align 8
  %176 = and i32 %175, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %176)
  %tobool.not.i151 = icmp eq i32 %176, 0
  br i1 %tobool.not.i151, label %rq_qos_track.exit.if.end.i155_crit_edge, label %if.then.i153

rq_qos_track.exit.if.end.i155_crit_edge:          ; preds = %rq_qos_track.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i155

if.then.i153:                                     ; preds = %rq_qos_track.exit
  call void @__sanitizer_cov_trace_pc() #22
  %cmd_flags.i152 = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 3
  %177 = ptrtoint ptr %cmd_flags.i152 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %cmd_flags.i152, align 4
  %179 = or i32 %178, 1792
  store i32 %179, ptr %cmd_flags.i152, align 4
  br label %if.end.i155

if.end.i155:                                      ; preds = %if.then.i153, %rq_qos_track.exit.if.end.i155_crit_edge
  %bi_iter.i = getelementptr inbounds %struct.bio, ptr %171, i32 0, i32 8
  %180 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %180)
  %181 = load i64, ptr %bi_iter.i, align 8
  %__sector.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 9
  %182 = ptrtoint ptr %__sector.i to i32
  call void @__asan_store8_noabort(i32 %182)
  store i64 %181, ptr %__sector.i, align 8
  %bi_write_hint.i = getelementptr inbounds %struct.bio, ptr %171, i32 0, i32 5
  %183 = ptrtoint ptr %bi_write_hint.i to i32
  call void @__asan_load2_noabort(i32 %183)
  %184 = load i16, ptr %bi_write_hint.i, align 8
  %write_hint.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 23
  %185 = ptrtoint ptr %write_hint.i to i32
  call void @__asan_store2_noabort(i32 %185)
  store i16 %184, ptr %write_hint.i, align 8
  %conv.i.i = trunc i32 %173 to i16
  %nr_phys_segments.i.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 19
  %186 = ptrtoint ptr %nr_phys_segments.i.i to i32
  call void @__asan_store2_noabort(i32 %186)
  store i16 %conv.i.i, ptr %nr_phys_segments.i.i, align 4
  %bi_size.i.i154 = getelementptr inbounds %struct.bio, ptr %171, i32 0, i32 8, i32 1
  %187 = ptrtoint ptr %bi_size.i.i154 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %bi_size.i.i154, align 8
  %__data_len.i.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 8
  %189 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store i32 %188, ptr %__data_len.i.i, align 8
  %biotail.i.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 11
  %190 = ptrtoint ptr %biotail.i.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store ptr %171, ptr %biotail.i.i, align 4
  %bio1.i.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 10
  %191 = ptrtoint ptr %bio1.i.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store ptr %171, ptr %bio1.i.i, align 8
  %bi_ioprio.i.i = getelementptr inbounds %struct.bio, ptr %171, i32 0, i32 4
  %192 = ptrtoint ptr %bi_ioprio.i.i to i32
  call void @__asan_load2_noabort(i32 %192)
  %193 = load i16, ptr %bi_ioprio.i.i, align 2
  %ioprio.i.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 24
  %194 = ptrtoint ptr %ioprio.i.i to i32
  call void @__asan_store2_noabort(i32 %194)
  store i16 %193, ptr %ioprio.i.i, align 2
  %bi_crypt_context.i.i.i = getelementptr inbounds %struct.bio, ptr %171, i32 0, i32 15
  %195 = ptrtoint ptr %bi_crypt_context.i.i.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %bi_crypt_context.i.i.i, align 8
  %tobool.i.not.i.i = icmp eq ptr %196, null
  br i1 %tobool.i.not.i.i, label %if.end.i155.if.end34.i_crit_edge, label %blk_crypto_rq_bio_prep.exit.i

if.end.i155.if.end34.i_crit_edge:                 ; preds = %if.end.i155
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end34.i

blk_crypto_rq_bio_prep.exit.i:                    ; preds = %if.end.i155
  %call1.i.i = call i32 @__blk_crypto_rq_bio_prep(ptr noundef nonnull %rq.0, ptr noundef %171, i32 noundef 3072) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool3.not.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool3.not.i, label %blk_crypto_rq_bio_prep.exit.i.if.end34.i_crit_edge, label %land.rhs.i156

blk_crypto_rq_bio_prep.exit.i.if.end34.i_crit_edge: ; preds = %blk_crypto_rq_bio_prep.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end34.i

land.rhs.i156:                                    ; preds = %blk_crypto_rq_bio_prep.exit.i
  %.b53.i = load i1, ptr @blk_mq_bio_to_request.__already_done, align 1
  br i1 %.b53.i, label %land.rhs.i156.if.end34.i_crit_edge, label %if.then12.i, !prof !298

land.rhs.i156.if.end34.i_crit_edge:               ; preds = %land.rhs.i156
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end34.i

if.then12.i:                                      ; preds = %land.rhs.i156
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_bio_to_request.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2404, i32 noundef 9, ptr noundef null) #20
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.then12.i, %land.rhs.i156.if.end34.i_crit_edge, %blk_crypto_rq_bio_prep.exit.i.if.end34.i_crit_edge, %if.end.i155.if.end34.i_crit_edge
  %rq_flags.i.i.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 4
  %197 = ptrtoint ptr %rq_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %rq_flags.i.i.i, align 8
  %and.i.i.i = and i32 %198, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i157 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i157, label %if.end34.i.blk_mq_bio_to_request.exit_crit_edge, label %blk_do_io_stat.exit.i.i

if.end34.i.blk_mq_bio_to_request.exit_crit_edge:  ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_bio_to_request.exit

blk_do_io_stat.exit.i.i:                          ; preds = %if.end34.i
  %199 = ptrtoint ptr %rq.0 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %rq.0, align 8
  %disk.i.i.i = getelementptr inbounds %struct.request_queue, ptr %200, i32 0, i32 15
  %201 = ptrtoint ptr %disk.i.i.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %disk.i.i.i, align 8
  %tobool1.i.not.i.i = icmp eq ptr %202, null
  br i1 %tobool1.i.not.i.i, label %blk_do_io_stat.exit.i.i.blk_mq_bio_to_request.exit_crit_edge, label %if.then.i54.i

blk_do_io_stat.exit.i.i.blk_mq_bio_to_request.exit_crit_edge: ; preds = %blk_do_io_stat.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_bio_to_request.exit

if.then.i54.i:                                    ; preds = %blk_do_io_stat.exit.i.i
  %203 = ptrtoint ptr %bio1.i.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %bio1.i.i, align 8
  %tobool.not.i2.i.i = icmp eq ptr %204, null
  br i1 %tobool.not.i2.i.i, label %if.then.i54.i.if.then6.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.then.i54.i.if.then6.i.i.i_crit_edge:           ; preds = %if.then.i54.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then6.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then.i54.i
  %bi_bdev.i.i.i = getelementptr inbounds %struct.bio, ptr %204, i32 0, i32 1
  %205 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %bi_bdev.i.i.i, align 4
  %tobool2.not.i.i.i = icmp eq ptr %206, null
  br i1 %tobool2.not.i.i.i, label %land.lhs.true.i.i.i.if.then6.i.i.i_crit_edge, label %land.lhs.true.i.i.i.__blk_account_io_start.exit.i.i_crit_edge

land.lhs.true.i.i.i.__blk_account_io_start.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_account_io_start.exit.i.i

land.lhs.true.i.i.i.if.then6.i.i.i_crit_edge:     ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then6.i.i.i

if.then6.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.if.then6.i.i.i_crit_edge, %if.then.i54.i.if.then6.i.i.i_crit_edge
  %part0.i.i.i = getelementptr inbounds %struct.gendisk, ptr %202, i32 0, i32 7
  %207 = ptrtoint ptr %part0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %part0.i.i.i, align 4
  br label %__blk_account_io_start.exit.i.i

__blk_account_io_start.exit.i.i:                  ; preds = %if.then6.i.i.i, %land.lhs.true.i.i.i.__blk_account_io_start.exit.i.i_crit_edge
  %.sink.i.i.i = phi ptr [ %208, %if.then6.i.i.i ], [ %206, %land.lhs.true.i.i.i.__blk_account_io_start.exit.i.i_crit_edge ]
  %part.i.i.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 13
  %209 = ptrtoint ptr %part.i.i.i to i32
  call void @__asan_store4_noabort(i32 %209)
  store ptr %.sink.i.i.i, ptr %part.i.i.i, align 8
  %210 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i.i158 = and i32 %210, -16384
  %211 = inttoptr i32 %and.i.i.i.i.i.i158 to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %211, i32 0, i32 1
  %212 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i159 = add i32 %213, 1
  store volatile i32 %add.i.i.i.i159, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !325
  %214 = ptrtoint ptr %part.i.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %part.i.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %216 = load volatile i32, ptr @jiffies, align 128
  call void @update_io_ticks(ptr noundef %215, i32 noundef %216, i1 noundef zeroext false) #20
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !326
  %217 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i23.i.i.i = and i32 %217, -16384
  %218 = inttoptr i32 %and.i.i.i23.i.i.i to ptr
  %preempt_count.i.i24.i.i.i = getelementptr inbounds %struct.thread_info, ptr %218, i32 0, i32 1
  %219 = ptrtoint ptr %preempt_count.i.i24.i.i.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load volatile i32, ptr %preempt_count.i.i24.i.i.i, align 4
  %sub.i.i.i.i = add i32 %220, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i24.i.i.i, align 4
  br label %blk_mq_bio_to_request.exit

blk_mq_bio_to_request.exit:                       ; preds = %__blk_account_io_start.exit.i.i, %blk_do_io_stat.exit.i.i.blk_mq_bio_to_request.exit_crit_edge, %if.end34.i.blk_mq_bio_to_request.exit_crit_edge
  %crypt_ctx.i.i = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 21
  %221 = ptrtoint ptr %crypt_ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %crypt_ctx.i.i, align 8
  %tobool.i.not.i160 = icmp eq ptr %222, null
  br i1 %tobool.i.not.i160, label %blk_mq_bio_to_request.exit.if.end35_crit_edge, label %blk_crypto_init_request.exit

blk_mq_bio_to_request.exit.if.end35_crit_edge:    ; preds = %blk_mq_bio_to_request.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

blk_crypto_init_request.exit:                     ; preds = %blk_mq_bio_to_request.exit
  %call1.i161 = call zeroext i8 @__blk_crypto_init_request(ptr noundef nonnull %rq.0) #20
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call1.i161)
  %cmp.not = icmp eq i8 %call1.i161, 0
  br i1 %cmp.not, label %blk_crypto_init_request.exit.if.end35_crit_edge, label %if.then34

blk_crypto_init_request.exit.if.end35_crit_edge:  ; preds = %blk_crypto_init_request.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

if.then34:                                        ; preds = %blk_crypto_init_request.exit
  call void @__sanitizer_cov_trace_pc() #22
  %223 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %bio.addr, align 4
  %bi_status = getelementptr inbounds %struct.bio, ptr %224, i32 0, i32 6
  %225 = ptrtoint ptr %bi_status to i32
  call void @__asan_store1_noabort(i32 %225)
  store i8 %call1.i161, ptr %bi_status, align 2
  call void @bio_endio(ptr noundef %224) #20
  call void @blk_mq_free_request(ptr noundef nonnull %rq.0)
  br label %cleanup

if.end35:                                         ; preds = %blk_crypto_init_request.exit.if.end35_crit_edge, %blk_mq_bio_to_request.exit.if.end35_crit_edge
  %226 = ptrtoint ptr %bio.addr to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %bio.addr, align 4
  %bi_opf36 = getelementptr inbounds %struct.bio, ptr %227, i32 0, i32 2
  %228 = ptrtoint ptr %bi_opf36 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %bi_opf36, align 8
  %230 = and i32 %229, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %230)
  %tobool.i164.not = icmp eq i32 %230, 0
  br i1 %tobool.i164.not, label %if.end39, label %if.then38

if.then38:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #22
  call void @blk_insert_flush(ptr noundef nonnull %rq.0) #20
  br label %cleanup

if.end39:                                         ; preds = %if.end35
  br i1 %tobool.not.i117, label %if.else, label %if.end.i167

if.end.i167:                                      ; preds = %if.end39
  %231 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %retval.0.i, align 4
  %rq_count.i = getelementptr inbounds %struct.blk_plug, ptr %retval.0.i, i32 0, i32 3
  %233 = ptrtoint ptr %rq_count.i to i32
  call void @__asan_load2_noabort(i32 %233)
  %234 = load i16, ptr %rq_count.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %234)
  %tobool4.not.i = icmp eq i16 %234, 0
  br i1 %tobool4.not.i, label %if.end.i167.if.end19.sink.split.i_crit_edge, label %if.else.i

if.end.i167.if.end19.sink.split.i_crit_edge:      ; preds = %if.end.i167
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19.sink.split.i

if.else.i:                                        ; preds = %if.end.i167
  %multiple_queues.i.i = getelementptr inbounds %struct.blk_plug, ptr %retval.0.i, i32 0, i32 4
  %235 = ptrtoint ptr %multiple_queues.i.i to i32
  call void @__asan_load1_noabort(i32 %235)
  %236 = load i8, ptr %multiple_queues.i.i, align 4, !range !320
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %236)
  %tobool.not.i.i168 = icmp eq i8 %236, 0
  %..i.i = select i1 %tobool.not.i.i168, i16 32, i16 64
  call void @__sanitizer_cov_trace_cmp2(i16 %234, i16 %..i.i)
  %cmp.not.i169 = icmp ult i16 %234, %..i.i
  br i1 %cmp.not.i169, label %lor.lhs.false.i170, label %if.else.i.if.then16.i_crit_edge

if.else.i.if.then16.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then16.i

lor.lhs.false.i170:                               ; preds = %if.else.i
  %237 = ptrtoint ptr %rq.0 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %rq.0, align 8
  %queue_flags.i = getelementptr inbounds %struct.request_queue, ptr %238, i32 0, i32 11
  %239 = ptrtoint ptr %queue_flags.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load volatile i32, ptr %queue_flags.i, align 4
  %241 = and i32 %240, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %241)
  %tobool11.not.i = icmp eq i32 %241, 0
  br i1 %tobool11.not.i, label %land.lhs.true12.i, label %lor.lhs.false.i170.if.end19.i_crit_edge

lor.lhs.false.i170.if.end19.i_crit_edge:          ; preds = %lor.lhs.false.i170
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19.i

land.lhs.true12.i:                                ; preds = %lor.lhs.false.i170
  %__data_len.i.i171 = getelementptr inbounds %struct.request, ptr %232, i32 0, i32 8
  %242 = ptrtoint ptr %__data_len.i.i171 to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %__data_len.i.i171, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 131071, i32 %243)
  %cmp14.i = icmp ugt i32 %243, 131071
  br i1 %cmp14.i, label %land.lhs.true12.i.if.then16.i_crit_edge, label %land.lhs.true12.i.if.end19.i_crit_edge

land.lhs.true12.i.if.end19.i_crit_edge:           ; preds = %land.lhs.true12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19.i

land.lhs.true12.i.if.then16.i_crit_edge:          ; preds = %land.lhs.true12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then16.i

if.then16.i:                                      ; preds = %land.lhs.true12.i.if.then16.i_crit_edge, %if.else.i.if.then16.i_crit_edge
  call void @blk_mq_flush_plug_list(ptr noundef nonnull %retval.0.i, i1 noundef zeroext false) #20
  br label %if.end19.sink.split.i

if.end19.sink.split.i:                            ; preds = %if.then16.i, %if.end.i167.if.end19.sink.split.i_crit_edge
  %244 = ptrtoint ptr %rq.0 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %rq.0, align 8
  call fastcc void @trace_block_plug(ptr noundef %245) #20
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.end19.sink.split.i, %land.lhs.true12.i.if.end19.i_crit_edge, %lor.lhs.false.i170.if.end19.i_crit_edge
  %multiple_queues.i = getelementptr inbounds %struct.blk_plug, ptr %retval.0.i, i32 0, i32 4
  %246 = ptrtoint ptr %multiple_queues.i to i32
  call void @__asan_load1_noabort(i32 %246)
  %247 = load i8, ptr %multiple_queues.i, align 4, !range !320
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %247)
  %tobool20.not.i172 = icmp ne i8 %247, 0
  %tobool22.not.i = icmp eq ptr %232, null
  %or.cond.i = select i1 %tobool20.not.i172, i1 true, i1 %tobool22.not.i
  br i1 %or.cond.i, label %if.end19.i.if.end30.i_crit_edge, label %land.lhs.true23.i

if.end19.i.if.end30.i_crit_edge:                  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30.i

land.lhs.true23.i:                                ; preds = %if.end19.i
  %248 = ptrtoint ptr %232 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %232, align 8
  %250 = ptrtoint ptr %rq.0 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %rq.0, align 8
  %cmp26.not.i = icmp eq ptr %249, %251
  br i1 %cmp26.not.i, label %land.lhs.true23.i.if.end30.i_crit_edge, label %if.then28.i

land.lhs.true23.i.if.end30.i_crit_edge:           ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30.i

if.then28.i:                                      ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #22
  %252 = ptrtoint ptr %multiple_queues.i to i32
  call void @__asan_store1_noabort(i32 %252)
  store i8 1, ptr %multiple_queues.i, align 4
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then28.i, %land.lhs.true23.i.if.end30.i_crit_edge, %if.end19.i.if.end30.i_crit_edge
  %has_elevator.i = getelementptr inbounds %struct.blk_plug, ptr %retval.0.i, i32 0, i32 5
  %253 = ptrtoint ptr %has_elevator.i to i32
  call void @__asan_load1_noabort(i32 %253)
  %254 = load i8, ptr %has_elevator.i, align 1, !range !320
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %254)
  %tobool31.not.i = icmp eq i8 %254, 0
  br i1 %tobool31.not.i, label %land.lhs.true32.i, label %if.end30.i.blk_add_rq_to_plug.exit_crit_edge

if.end30.i.blk_add_rq_to_plug.exit_crit_edge:     ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_add_rq_to_plug.exit

land.lhs.true32.i:                                ; preds = %if.end30.i
  %255 = ptrtoint ptr %rq_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load i32, ptr %rq_flags.i.i.i, align 8
  %and.i174 = and i32 %256, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i174)
  %tobool33.not.i = icmp eq i32 %and.i174, 0
  br i1 %tobool33.not.i, label %land.lhs.true32.i.blk_add_rq_to_plug.exit_crit_edge, label %if.then34.i

land.lhs.true32.i.blk_add_rq_to_plug.exit_crit_edge: ; preds = %land.lhs.true32.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_add_rq_to_plug.exit

if.then34.i:                                      ; preds = %land.lhs.true32.i
  call void @__sanitizer_cov_trace_pc() #22
  %257 = ptrtoint ptr %has_elevator.i to i32
  call void @__asan_store1_noabort(i32 %257)
  store i8 1, ptr %has_elevator.i, align 1
  br label %blk_add_rq_to_plug.exit

blk_add_rq_to_plug.exit:                          ; preds = %if.then34.i, %land.lhs.true32.i.blk_add_rq_to_plug.exit_crit_edge, %if.end30.i.blk_add_rq_to_plug.exit_crit_edge
  %258 = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 12
  %259 = ptrtoint ptr %258 to i32
  call void @__asan_store4_noabort(i32 %259)
  store ptr null, ptr %258, align 8
  %260 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %retval.0.i, align 4
  store ptr %261, ptr %258, align 8
  store ptr %rq.0, ptr %retval.0.i, align 4
  %262 = ptrtoint ptr %rq_count.i to i32
  call void @__asan_load2_noabort(i32 %262)
  %263 = load i16, ptr %rq_count.i, align 2
  %inc.i = add i16 %263, 1
  store i16 %inc.i, ptr %rq_count.i, align 2
  br label %cleanup

if.else:                                          ; preds = %if.end39
  %264 = ptrtoint ptr %rq_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %rq_flags.i.i.i, align 8
  %and = and i32 %265, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool42.not = icmp eq i32 %and, 0
  br i1 %tobool42.not, label %lor.lhs.false, label %if.else.if.then48_crit_edge

if.else.if.then48_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then48

lor.lhs.false:                                    ; preds = %if.else
  %mq_hctx = getelementptr inbounds %struct.request, ptr %rq.0, i32 0, i32 2
  %266 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %mq_hctx, align 8
  %dispatch_busy = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %267, i32 0, i32 12
  %268 = ptrtoint ptr %dispatch_busy to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %dispatch_busy, align 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %269)
  %tobool43.not = icmp eq i32 %269, 0
  br i1 %tobool43.not, label %lor.lhs.false.do.body_crit_edge, label %land.lhs.true

lor.lhs.false.do.body_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

land.lhs.true:                                    ; preds = %lor.lhs.false
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %4, i32 0, i32 9
  %270 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %271)
  %cmp44 = icmp eq i32 %271, 1
  %call2.not = and i1 %cmp.i, %tobool.i
  %brmerge = select i1 %cmp44, i1 true, i1 %call2.not
  br i1 %brmerge, label %land.lhs.true.if.then48_crit_edge, label %land.lhs.true.do.body_crit_edge

land.lhs.true.do.body_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

land.lhs.true.if.then48_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then48

if.then48:                                        ; preds = %land.lhs.true.if.then48_crit_edge, %if.else.if.then48_crit_edge
  call void @blk_mq_sched_insert_request(ptr noundef nonnull %rq.0, i1 noundef zeroext false, i1 noundef zeroext true, i1 noundef zeroext true) #20
  br label %cleanup

do.body:                                          ; preds = %land.lhs.true.do.body_crit_edge, %lor.lhs.false.do.body_crit_edge
  %272 = ptrtoint ptr %rq.0 to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load ptr, ptr %rq.0, align 8
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %273, i32 0, i32 11
  %274 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load volatile i32, ptr %queue_flags, align 4
  %276 = and i32 %275, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %276)
  %tobool52.not = icmp eq i32 %276, 0
  br i1 %tobool52.not, label %if.then53, label %if.else55

if.then53:                                        ; preds = %do.body
  %277 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i = and i32 %277, -16384
  %278 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %278, i32 0, i32 1
  %279 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %280, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %if.then53.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then53.rcu_read_lock.exit_crit_edge:           ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then53
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then53.rcu_read_lock.exit_crit_edge
  %281 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load ptr, ptr %mq_hctx, align 8
  call fastcc void @blk_mq_try_issue_directly(ptr noundef %282, ptr noundef nonnull %rq.0)
  call fastcc void @rcu_read_unlock()
  br label %cleanup

if.else55:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 2853) #20
  %283 = ptrtoint ptr %rq.0 to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load ptr, ptr %rq.0, align 8
  %srcu = getelementptr inbounds %struct.request_queue, ptr %284, i32 0, i32 70
  %call.i175 = call i32 @__srcu_read_lock(ptr noundef %srcu) #20
  %dep_map.i = getelementptr inbounds %struct.request_queue, ptr %284, i32 1, i32 50, i32 2
  call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i) #20
  %285 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load ptr, ptr %mq_hctx, align 8
  call fastcc void @blk_mq_try_issue_directly(ptr noundef %286, ptr noundef nonnull %rq.0)
  %287 = ptrtoint ptr %rq.0 to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load ptr, ptr %rq.0, align 8
  %srcu67 = getelementptr inbounds %struct.request_queue, ptr %288, i32 0, i32 70
  call fastcc void @srcu_read_unlock(ptr noundef %srcu67, i32 noundef %call.i175)
  br label %cleanup

cleanup:                                          ; preds = %if.else55, %rcu_read_lock.exit, %if.then48, %blk_add_rq_to_plug.exit, %if.then38, %if.then34, %blk_mq_get_new_requests.exit.thread, %if.then14.cleanup_crit_edge, %if.then14.thread, %if.end8.cleanup_crit_edge, %blk_crypto_bio_prep.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr_segs) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__blk_queue_split(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @bio_integrity_prep(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_block_getrq(ptr noundef %bio) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_getrq, i32 0, i32 1), ptr blockaddress(@trace_block_getrq, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !312

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !298

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !343
  %call42 = tail call i32 @__traceiter_block_getrq(ptr noundef null, ptr noundef %bio) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !344
  %13 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !298

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !315
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_getrq, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_getrq, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_block_getrq.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_block_getrq.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.24, i32 noundef 346, ptr noundef nonnull @.str.25) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !316
  %31 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_endio(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_insert_flush(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @blk_mq_try_issue_directly(ptr noundef %hctx, ptr noundef %rq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i8 @__blk_mq_try_issue_directly(ptr noundef %hctx, ptr noundef %rq, i1 noundef zeroext false, i1 noundef zeroext true)
  %0 = zext i8 %call to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.72)
  switch i8 %call, label %if.then8 [
    i8 9, label %entry.if.then_crit_edge
    i8 13, label %entry.if.then_crit_edge15
    i8 0, label %entry.if.end9_crit_edge
  ]

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

entry.if.then_crit_edge15:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

if.then:                                          ; preds = %entry.if.then_crit_edge, %entry.if.then_crit_edge15
  %mq_hctx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %1 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mq_hctx.i, align 8
  tail call void @_raw_spin_lock(ptr noundef %2) #20
  %3 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12
  %dispatch.i = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 1
  %prev.i.i = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 1, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %call.i.i13.i = tail call zeroext i1 @__list_add_valid(ptr noundef %3, ptr noundef %5, ptr noundef %dispatch.i) #20
  br i1 %call.i.i13.i, label %if.end.sink.split.i, label %if.then.blk_mq_request_bypass_insert.exit_crit_edge

if.then.blk_mq_request_bypass_insert.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_request_bypass_insert.exit

if.end.sink.split.i:                              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %dispatch.i, ptr %3, align 4
  %prev3.i.i14.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 12, i32 0, i32 1
  %8 = ptrtoint ptr %prev3.i.i14.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev3.i.i14.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %3, ptr %5, align 4
  br label %blk_mq_request_bypass_insert.exit

blk_mq_request_bypass_insert.exit:                ; preds = %if.end.sink.split.i, %if.then.blk_mq_request_bypass_insert.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %2) #20
  tail call void @blk_mq_run_hw_queue(ptr noundef %2, i1 noundef zeroext false) #20
  br label %if.end9

if.then8:                                         ; preds = %entry
  %__data_len.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 8
  %10 = ptrtoint ptr %__data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_len.i.i, align 8
  %call1.i = tail call zeroext i1 @blk_update_request(ptr noundef %rq, i8 noundef zeroext %call, i32 noundef %11) #20
  br i1 %call1.i, label %do.body.i, label %blk_mq_end_request.exit

do.body.i:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 933, 0\0A.popsection", ""() #20, !srcloc !319
  unreachable

blk_mq_end_request.exit:                          ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__blk_mq_end_request(ptr noundef %rq, i8 noundef zeroext %call) #20
  br label %if.end9

if.end9:                                          ; preds = %blk_mq_end_request.exit, %blk_mq_request_bypass_insert.exit, %entry.if.end9_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @blk_insert_cloned_request(ptr nocapture noundef readonly %q, ptr noundef %rq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %cmd_flags.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 3
  %0 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cmd_flags.i, align 4
  %trunc.i = trunc i32 %1 to i8
  %2 = zext i8 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.73)
  switch i8 %trunc.i, label %if.end23.i.i [
    i8 5, label %entry.if.then.i.i_crit_edge
    i8 3, label %entry.if.then.i.i_crit_edge82
    i8 7, label %if.then11.i.i
    i8 9, label %if.then21.i.i
  ], !prof !345

entry.if.then.i.i_crit_edge82:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i.i

entry.if.then.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %entry.if.then.i.i_crit_edge, %entry.if.then.i.i_crit_edge82
  %max_discard_sectors.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 37, i32 13
  %3 = ptrtoint ptr %max_discard_sectors.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_discard_sectors.i.i, align 4
  %5 = tail call i32 @llvm.umin.i32(i32 %4, i32 8388607) #20
  br label %blk_queue_get_max_sectors.exit.i

if.then11.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %max_write_same_sectors.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 37, i32 15
  %6 = ptrtoint ptr %max_write_same_sectors.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %max_write_same_sectors.i.i, align 4
  br label %blk_queue_get_max_sectors.exit.i

if.then21.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %max_write_zeroes_sectors.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 37, i32 16
  %8 = ptrtoint ptr %max_write_zeroes_sectors.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %max_write_zeroes_sectors.i.i, align 4
  br label %blk_queue_get_max_sectors.exit.i

if.end23.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %max_sectors.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 37, i32 6
  %10 = ptrtoint ptr %max_sectors.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_sectors.i.i, align 4
  br label %blk_queue_get_max_sectors.exit.i

blk_queue_get_max_sectors.exit.i:                 ; preds = %if.end23.i.i, %if.then21.i.i, %if.then11.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %5, %if.then.i.i ], [ %7, %if.then11.i.i ], [ %9, %if.then21.i.i ], [ %11, %if.end23.i.i ]
  %__data_len.i.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 8
  %12 = ptrtoint ptr %__data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %__data_len.i.i.i, align 8
  %shr.i.i = lshr i32 %13, 9
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i.i, i32 %retval.0.i.i)
  %cmp.i = icmp ugt i32 %shr.i.i, %retval.0.i.i
  br i1 %cmp.i, label %if.then.i53, label %if.end6.i

if.then.i53:                                      ; preds = %blk_queue_get_max_sectors.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %cmp2.i = icmp eq i32 %retval.0.i.i, 0
  br i1 %cmp2.i, label %if.then.i53.cleanup_crit_edge, label %do.end.i

if.then.i53.cleanup_crit_edge:                    ; preds = %if.then.i53
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

do.end.i:                                         ; preds = %if.then.i53
  call void @__sanitizer_cov_trace_pc() #22
  %call5.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37, i32 noundef %shr.i.i, i32 noundef %retval.0.i.i) #23
  br label %cleanup

if.end6.i:                                        ; preds = %blk_queue_get_max_sectors.exit.i
  %call7.i = tail call i32 @blk_recalc_rq_segments(ptr noundef %rq) #20
  %conv.i = trunc i32 %call7.i to i16
  %nr_phys_segments.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 19
  %14 = ptrtoint ptr %nr_phys_segments.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %conv.i, ptr %nr_phys_segments.i, align 4
  %conv9.i = and i32 %call7.i, 65535
  %max_segments.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 37, i32 21
  %15 = ptrtoint ptr %max_segments.i.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %max_segments.i.i, align 4
  %conv11.i = zext i16 %16 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv9.i, i32 %conv11.i)
  %cmp12.i = icmp ugt i32 %conv9.i, %conv11.i
  br i1 %cmp12.i, label %do.end17.i, label %if.end

do.end17.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  %call23.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39, ptr noundef nonnull @.str.37, i32 noundef %conv9.i, i32 noundef %conv11.i) #23
  br label %cleanup

if.end:                                           ; preds = %if.end6.i
  %17 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rq, align 8
  %disk = getelementptr inbounds %struct.request_queue, ptr %18, i32 0, i32 15
  %19 = ptrtoint ptr %disk to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %disk, align 8
  %tobool.not = icmp eq ptr %20, null
  br i1 %tobool.not, label %if.end.if.end9_crit_edge, label %land.lhs.true

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

land.lhs.true:                                    ; preds = %if.end
  %part0 = getelementptr inbounds %struct.gendisk, ptr %20, i32 0, i32 7
  %21 = ptrtoint ptr %part0 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %part0, align 4
  %23 = ptrtoint ptr %__data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %__data_len.i.i.i, align 8
  %call6 = tail call zeroext i1 @should_fail_request(ptr noundef %22, i32 noundef %24) #20
  br i1 %call6, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end9_crit_edge

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end9:                                          ; preds = %land.lhs.true.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %crypt_ctx.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 21
  %25 = ptrtoint ptr %crypt_ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %crypt_ctx.i.i, align 8
  %tobool.i.not.i = icmp eq ptr %26, null
  br i1 %tobool.i.not.i, label %if.end9.if.end13_crit_edge, label %blk_crypto_insert_cloned_request.exit

if.end9.if.end13_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

blk_crypto_insert_cloned_request.exit:            ; preds = %if.end9
  %call1.i.i = tail call zeroext i8 @__blk_crypto_init_request(ptr noundef %rq) #20
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call1.i.i)
  %tobool11.not = icmp eq i8 %call1.i.i, 0
  br i1 %tobool11.not, label %blk_crypto_insert_cloned_request.exit.if.end13_crit_edge, label %blk_crypto_insert_cloned_request.exit.cleanup_crit_edge

blk_crypto_insert_cloned_request.exit.cleanup_crit_edge: ; preds = %blk_crypto_insert_cloned_request.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

blk_crypto_insert_cloned_request.exit.if.end13_crit_edge: ; preds = %blk_crypto_insert_cloned_request.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.end13:                                         ; preds = %blk_crypto_insert_cloned_request.exit.if.end13_crit_edge, %if.end9.if.end13_crit_edge
  %rq_flags.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %27 = ptrtoint ptr %rq_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rq_flags.i.i, align 8
  %and.i.i = and i32 %28, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end13.blk_account_io_start.exit_crit_edge, label %blk_do_io_stat.exit.i

if.end13.blk_account_io_start.exit_crit_edge:     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_account_io_start.exit

blk_do_io_stat.exit.i:                            ; preds = %if.end13
  %29 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %rq, align 8
  %disk.i.i = getelementptr inbounds %struct.request_queue, ptr %30, i32 0, i32 15
  %31 = ptrtoint ptr %disk.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %disk.i.i, align 8
  %tobool1.i.not.i = icmp eq ptr %32, null
  br i1 %tobool1.i.not.i, label %blk_do_io_stat.exit.i.blk_account_io_start.exit_crit_edge, label %if.then.i55

blk_do_io_stat.exit.i.blk_account_io_start.exit_crit_edge: ; preds = %blk_do_io_stat.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_account_io_start.exit

if.then.i55:                                      ; preds = %blk_do_io_stat.exit.i
  %bio.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %33 = ptrtoint ptr %bio.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %bio.i.i, align 8
  %tobool.not.i2.i = icmp eq ptr %34, null
  br i1 %tobool.not.i2.i, label %if.then.i55.if.then6.i.i_crit_edge, label %land.lhs.true.i.i

if.then.i55.if.then6.i.i_crit_edge:               ; preds = %if.then.i55
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then6.i.i

land.lhs.true.i.i:                                ; preds = %if.then.i55
  %bi_bdev.i.i = getelementptr inbounds %struct.bio, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %bi_bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bi_bdev.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %36, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.then6.i.i_crit_edge, label %land.lhs.true.i.i.__blk_account_io_start.exit.i_crit_edge

land.lhs.true.i.i.__blk_account_io_start.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_account_io_start.exit.i

land.lhs.true.i.i.if.then6.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then6.i.i

if.then6.i.i:                                     ; preds = %land.lhs.true.i.i.if.then6.i.i_crit_edge, %if.then.i55.if.then6.i.i_crit_edge
  %part0.i.i = getelementptr inbounds %struct.gendisk, ptr %32, i32 0, i32 7
  %37 = ptrtoint ptr %part0.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %part0.i.i, align 4
  br label %__blk_account_io_start.exit.i

__blk_account_io_start.exit.i:                    ; preds = %if.then6.i.i, %land.lhs.true.i.i.__blk_account_io_start.exit.i_crit_edge
  %.sink.i.i = phi ptr [ %38, %if.then6.i.i ], [ %36, %land.lhs.true.i.i.__blk_account_io_start.exit.i_crit_edge ]
  %part.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 13
  %39 = ptrtoint ptr %part.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %.sink.i.i, ptr %part.i.i, align 8
  %40 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i56 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i.i.i56 to ptr
  %preempt_count.i.i.i.i57 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %preempt_count.i.i.i.i57 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %preempt_count.i.i.i.i57, align 4
  %add.i.i.i58 = add i32 %43, 1
  store volatile i32 %add.i.i.i58, ptr %preempt_count.i.i.i.i57, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !325
  %44 = ptrtoint ptr %part.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %part.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %46 = load volatile i32, ptr @jiffies, align 128
  tail call void @update_io_ticks(ptr noundef %45, i32 noundef %46, i1 noundef zeroext false) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !326
  %47 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i23.i.i = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i.i23.i.i to ptr
  %preempt_count.i.i24.i.i = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i.i24.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i.i24.i.i, align 4
  %sub.i.i.i = add i32 %50, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i24.i.i, align 4
  br label %blk_account_io_start.exit

blk_account_io_start.exit:                        ; preds = %__blk_account_io_start.exit.i, %blk_do_io_stat.exit.i.blk_account_io_start.exit_crit_edge, %if.end13.blk_account_io_start.exit_crit_edge
  %51 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %rq, align 8
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %52, i32 0, i32 11
  %53 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %queue_flags, align 4
  %55 = and i32 %54, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool16.not = icmp eq i32 %55, 0
  br i1 %tobool16.not, label %if.then17, label %if.else

if.then17:                                        ; preds = %blk_account_io_start.exit
  %56 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i = and i32 %56, -16384
  %57 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %59, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %if.then17.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then17.rcu_read_lock.exit_crit_edge:           ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then17
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then17.rcu_read_lock.exit_crit_edge
  %mq_hctx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %60 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %mq_hctx.i, align 8
  %call.i59 = tail call fastcc zeroext i8 @__blk_mq_try_issue_directly(ptr noundef %61, ptr noundef %rq, i1 noundef zeroext true, i1 noundef zeroext true) #20
  %call.i60 = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i60, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i63

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true.i63:                                ; preds = %rcu_read_lock.exit
  %call1.i61 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i61)
  %tobool.not.i62 = icmp eq i32 %call1.i61, 0
  br i1 %tobool.not.i62, label %land.lhs.true.i63.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i65

land.lhs.true.i63.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i63
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true2.i65:                               ; preds = %land.lhs.true.i63
  %.b4.i64 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i64, label %land.lhs.true2.i65.rcu_read_unlock.exit_crit_edge, label %if.then.i66

land.lhs.true2.i65.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i65
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

if.then.i66:                                      ; preds = %land.lhs.true2.i65
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i66, %land.lhs.true2.i65.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i63.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %62 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i67 = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i.i.i.i67 to ptr
  %preempt_count.i.i.i.i68 = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %preempt_count.i.i.i.i68 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %preempt_count.i.i.i.i68, align 4
  %sub.i.i.i69 = add i32 %65, -1
  store volatile i32 %sub.i.i.i69, ptr %preempt_count.i.i.i.i68, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  br label %do.end34

if.else:                                          ; preds = %blk_account_io_start.exit
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 2939) #20
  %66 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %rq, align 8
  %srcu = getelementptr inbounds %struct.request_queue, ptr %67, i32 0, i32 70
  %call.i71 = tail call i32 @__srcu_read_lock(ptr noundef %srcu) #20
  %dep_map.i = getelementptr inbounds %struct.request_queue, ptr %67, i32 1, i32 50, i32 2
  tail call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i) #20
  %mq_hctx.i72 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %68 = ptrtoint ptr %mq_hctx.i72 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %mq_hctx.i72, align 8
  %call.i73 = tail call fastcc zeroext i8 @__blk_mq_try_issue_directly(ptr noundef %69, ptr noundef %rq, i1 noundef zeroext true, i1 noundef zeroext true) #20
  %70 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %rq, align 8
  %srcu30 = getelementptr inbounds %struct.request_queue, ptr %71, i32 0, i32 70
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i71)
  %tobool.not.i74 = icmp ult i32 %call.i71, 2
  br i1 %tobool.not.i74, label %if.else.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

if.else.srcu_read_unlock.exit_crit_edge:          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %if.else
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i75, !prof !298

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %srcu_read_unlock.exit

if.then.i75:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.34, i32 noundef 189, i32 noundef 9, ptr noundef null) #20
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i75, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %if.else.srcu_read_unlock.exit_crit_edge
  %dep_map.i76 = getelementptr inbounds %struct.request_queue, ptr %71, i32 1, i32 50, i32 2
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i76) #20
  tail call void @__srcu_read_unlock(ptr noundef %srcu30, i32 noundef %call.i71) #20
  br label %do.end34

do.end34:                                         ; preds = %srcu_read_unlock.exit, %rcu_read_unlock.exit
  %ret.0 = phi i8 [ %call.i73, %srcu_read_unlock.exit ], [ %call.i59, %rcu_read_unlock.exit ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %ret.0)
  %tobool35.not = icmp eq i8 %ret.0, 0
  br i1 %tobool35.not, label %do.end34.cleanup_crit_edge, label %if.then36

do.end34.cleanup_crit_edge:                       ; preds = %do.end34
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then36:                                        ; preds = %do.end34
  call void @__sanitizer_cov_trace_pc() #22
  %call.i77 = tail call i64 @ktime_get() #20
  tail call fastcc void @blk_account_io_done(ptr noundef %rq, i64 noundef %call.i77)
  br label %cleanup

cleanup:                                          ; preds = %if.then36, %do.end34.cleanup_crit_edge, %blk_crypto_insert_cloned_request.exit.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %do.end17.i, %do.end.i, %if.then.i53.cleanup_crit_edge
  %retval.0 = phi i8 [ 10, %land.lhs.true.cleanup_crit_edge ], [ 10, %blk_crypto_insert_cloned_request.exit.cleanup_crit_edge ], [ %ret.0, %if.then36 ], [ 0, %do.end34.cleanup_crit_edge ], [ 1, %if.then.i53.cleanup_crit_edge ], [ 10, %do.end17.i ], [ 10, %do.end.i ]
  ret i8 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_request(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @blk_account_io_done(ptr nocapture noundef readonly %req, i64 noundef %now) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %rq_flags.i = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 4
  %0 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rq_flags.i, align 8
  %and.i = and i32 %1, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %blk_do_io_stat.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

blk_do_io_stat.exit:                              ; preds = %entry
  %2 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %req, align 8
  %disk.i = getelementptr inbounds %struct.request_queue, ptr %3, i32 0, i32 15
  %4 = ptrtoint ptr %disk.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %disk.i, align 8
  %tobool1.i.not = icmp eq ptr %5, null
  br i1 %tobool1.i.not, label %blk_do_io_stat.exit.if.end_crit_edge, label %land.lhs.true

blk_do_io_stat.exit.if.end_crit_edge:             ; preds = %blk_do_io_stat.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %blk_do_io_stat.exit
  %part = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 13
  %6 = ptrtoint ptr %part to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %part, align 8
  %tobool.not = icmp ne ptr %7, null
  %and = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  %or.cond = select i1 %tobool.not, i1 %tobool2.not, i1 false
  br i1 %or.cond, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %cmd_flags.i = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 3
  %8 = ptrtoint ptr %cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cmd_flags.i, align 4
  %and.i6 = and i32 %9, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i6)
  %cmp.i.i.i = icmp eq i32 %and.i6, 3
  %and.i3.i.i = and i32 %9, 1
  %retval.0.i.i = select i1 %cmp.i.i.i, i32 2, i32 %and.i3.i.i
  %10 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %13, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !346
  %14 = ptrtoint ptr %part to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %part, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %16 = load volatile i32, ptr @jiffies, align 128
  tail call void @update_io_ticks(ptr noundef %15, i32 noundef %16, i1 noundef zeroext true) #20
  %17 = ptrtoint ptr %part to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %part, align 8
  %bd_stats.i = getelementptr inbounds %struct.block_device, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %bd_stats.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %bd_stats.i, align 8
  %arrayidx.i = getelementptr %struct.disk_stats, ptr %20, i32 0, i32 2, i32 %retval.0.i.i
  %21 = ptrtoint ptr %arrayidx.i to i32
  %22 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cpu.i, align 4
  %arrayidx14.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %25
  %26 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx14.i, align 4
  %add.i = add i32 %27, %21
  %28 = inttoptr i32 %add.i to ptr
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 4
  %add15.i = add i32 %30, 1
  store i32 %add15.i, ptr %28, align 4
  %31 = ptrtoint ptr %part to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %part, align 8
  %bd_partno.i = getelementptr inbounds %struct.block_device, ptr %32, i32 0, i32 15
  %33 = ptrtoint ptr %bd_partno.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %bd_partno.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.i7 = icmp eq i8 %34, 0
  br i1 %tobool.not.i7, label %if.then.do.body49.i_crit_edge, label %if.then.i

if.then.do.body49.i_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body49.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %bd_disk.i = getelementptr inbounds %struct.block_device, ptr %32, i32 0, i32 17
  %35 = ptrtoint ptr %bd_disk.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bd_disk.i, align 8
  %part0.i = getelementptr inbounds %struct.gendisk, ptr %36, i32 0, i32 7
  %37 = ptrtoint ptr %part0.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %part0.i, align 4
  %bd_stats34.i = getelementptr inbounds %struct.block_device, ptr %38, i32 0, i32 2
  %39 = ptrtoint ptr %bd_stats34.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %bd_stats34.i, align 8
  %arrayidx36.i = getelementptr %struct.disk_stats, ptr %40, i32 0, i32 2, i32 %retval.0.i.i
  %41 = ptrtoint ptr %arrayidx36.i to i32
  %42 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cpu.i, align 4
  %arrayidx40.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %43
  %44 = ptrtoint ptr %arrayidx40.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx40.i, align 4
  %add41.i = add i32 %45, %41
  %46 = inttoptr i32 %add41.i to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %46, align 4
  %add42.i = add i32 %48, 1
  store i32 %add42.i, ptr %46, align 4
  br label %do.body49.i

do.body49.i:                                      ; preds = %if.then.i, %if.then.do.body49.i_crit_edge
  %start_time_ns.i = getelementptr inbounds %struct.request, ptr %req, i32 0, i32 15
  %49 = ptrtoint ptr %start_time_ns.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %start_time_ns.i, align 8
  %sub.i = sub i64 %now, %50
  %51 = ptrtoint ptr %part to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %part, align 8
  %bd_stats63.i = getelementptr inbounds %struct.block_device, ptr %52, i32 0, i32 2
  %53 = ptrtoint ptr %bd_stats63.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %bd_stats63.i, align 8
  %arrayidx64.i = getelementptr [4 x i64], ptr %54, i32 0, i32 %retval.0.i.i
  %55 = ptrtoint ptr %arrayidx64.i to i32
  %56 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %cpu.i, align 4
  %arrayidx68.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %57
  %58 = ptrtoint ptr %arrayidx68.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %arrayidx68.i, align 4
  %add69.i = add i32 %59, %55
  %60 = inttoptr i32 %add69.i to ptr
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %60, align 8
  %add70.i = add i64 %sub.i, %62
  store i64 %add70.i, ptr %60, align 8
  %63 = load ptr, ptr %part, align 8
  %bd_partno76.i = getelementptr inbounds %struct.block_device, ptr %63, i32 0, i32 15
  %64 = ptrtoint ptr %bd_partno76.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %bd_partno76.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %tobool77.not.i = icmp eq i8 %65, 0
  br i1 %tobool77.not.i, label %do.body49.i.__blk_account_io_done.exit_crit_edge, label %if.then78.i

do.body49.i.__blk_account_io_done.exit_crit_edge: ; preds = %do.body49.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_account_io_done.exit

if.then78.i:                                      ; preds = %do.body49.i
  call void @__sanitizer_cov_trace_pc() #22
  %66 = ptrtoint ptr %start_time_ns.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %start_time_ns.i, align 8
  %sub86.i = sub i64 %now, %67
  %bd_disk94.i = getelementptr inbounds %struct.block_device, ptr %63, i32 0, i32 17
  %68 = ptrtoint ptr %bd_disk94.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %bd_disk94.i, align 8
  %part095.i = getelementptr inbounds %struct.gendisk, ptr %69, i32 0, i32 7
  %70 = ptrtoint ptr %part095.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %part095.i, align 4
  %bd_stats96.i = getelementptr inbounds %struct.block_device, ptr %71, i32 0, i32 2
  %72 = ptrtoint ptr %bd_stats96.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %bd_stats96.i, align 8
  %arrayidx98.i = getelementptr [4 x i64], ptr %73, i32 0, i32 %retval.0.i.i
  %74 = ptrtoint ptr %arrayidx98.i to i32
  %75 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %cpu.i, align 4
  %arrayidx102.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %76
  %77 = ptrtoint ptr %arrayidx102.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %arrayidx102.i, align 4
  %add103.i = add i32 %78, %74
  %79 = inttoptr i32 %add103.i to ptr
  %80 = ptrtoint ptr %79 to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %79, align 8
  %add104.i = add i64 %sub86.i, %81
  store i64 %add104.i, ptr %79, align 8
  br label %__blk_account_io_done.exit

__blk_account_io_done.exit:                       ; preds = %if.then78.i, %do.body49.i.__blk_account_io_done.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !347
  %82 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i128.i = and i32 %82, -16384
  %83 = inttoptr i32 %and.i.i.i128.i to ptr
  %preempt_count.i.i129.i = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %preempt_count.i.i129.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %preempt_count.i.i129.i, align 4
  %sub.i.i = add i32 %85, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i129.i, align 4
  br label %if.end

if.end:                                           ; preds = %__blk_account_io_done.exit, %land.lhs.true.if.end_crit_edge, %blk_do_io_stat.exit.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_rq_unprep_clone(ptr nocapture noundef %rq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %bio1 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %0 = ptrtoint ptr %bio1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bio1, align 8
  %cmp.not5 = icmp eq ptr %1, null
  br i1 %cmp.not5, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  %2 = phi ptr [ %7, %while.body.while.body_crit_edge ], [ %1, %entry.while.body_crit_edge ]
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %5 = ptrtoint ptr %bio1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %bio1, align 8
  tail call void @bio_put(ptr noundef nonnull %2) #20
  %6 = ptrtoint ptr %bio1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bio1, align 8
  %cmp.not = icmp eq ptr %7, null
  br i1 %cmp.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @blk_rq_prep_clone(ptr noundef %rq, ptr nocapture noundef readonly %rq_src, ptr noundef %bs, i32 noundef %gfp_mask, ptr noundef readonly %bio_ctr, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %bs, null
  %spec.store.select = select i1 %tobool.not, ptr @fs_bio_set, ptr %bs
  %bio1 = getelementptr inbounds %struct.request, ptr %rq_src, i32 0, i32 10
  %0 = ptrtoint ptr %bio1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bio1, align 8
  %tobool2.not = icmp eq ptr %1, null
  br i1 %tobool2.not, label %entry.if.end22_crit_edge, label %for.body.lr.ph

entry.if.end22_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22

for.body.lr.ph:                                   ; preds = %entry
  %tobool9.not = icmp eq ptr %bio_ctr, null
  %bio14 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %biotail = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 11
  br label %for.body

for.body:                                         ; preds = %if.end20.for.body_crit_edge, %for.body.lr.ph
  %bio_src.090 = phi ptr [ %1, %for.body.lr.ph ], [ %17, %if.end20.for.body_crit_edge ]
  %call = tail call ptr @bio_clone_fast(ptr noundef nonnull %bio_src.090, i32 noundef %gfp_mask, ptr noundef %spec.store.select) #20
  %tobool6.not = icmp eq ptr %call, null
  br i1 %tobool6.not, label %for.body.if.end40_crit_edge, label %if.end8

for.body.if.end40_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end40

if.end8:                                          ; preds = %for.body
  %2 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq, align 8
  %disk = getelementptr inbounds %struct.request_queue, ptr %3, i32 0, i32 15
  %4 = ptrtoint ptr %disk to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %disk, align 8
  %part0 = getelementptr inbounds %struct.gendisk, ptr %5, i32 0, i32 7
  %6 = ptrtoint ptr %part0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %part0, align 4
  %bi_bdev = getelementptr inbounds %struct.bio, ptr %call, i32 0, i32 1
  %8 = ptrtoint ptr %bi_bdev to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %bi_bdev, align 4
  br i1 %tobool9.not, label %if.end8.if.end13_crit_edge, label %land.lhs.true

if.end8.if.end13_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

land.lhs.true:                                    ; preds = %if.end8
  %call10 = tail call i32 %bio_ctr(ptr noundef nonnull %call, ptr noundef nonnull %bio_src.090, ptr noundef %data) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %land.lhs.true.if.end13_crit_edge, label %land.lhs.true.if.then39_crit_edge

land.lhs.true.if.then39_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then39

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.end13:                                         ; preds = %land.lhs.true.if.end13_crit_edge, %if.end8.if.end13_crit_edge
  %9 = ptrtoint ptr %bio14 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bio14, align 8
  %tobool15.not = icmp eq ptr %10, null
  br i1 %tobool15.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  %11 = ptrtoint ptr %biotail to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %biotail, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call, ptr %12, align 8
  store ptr %call, ptr %biotail, align 4
  br label %if.end20

if.else:                                          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  %14 = ptrtoint ptr %biotail to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %call, ptr %biotail, align 4
  %15 = ptrtoint ptr %bio14 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call, ptr %bio14, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then16
  %16 = ptrtoint ptr %bio_src.090 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bio_src.090, align 8
  %tobool5.not = icmp eq ptr %17, null
  br i1 %tobool5.not, label %if.end20.if.end22_crit_edge, label %if.end20.for.body_crit_edge

if.end20.for.body_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.end20.if.end22_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22

if.end22:                                         ; preds = %if.end20.if.end22_crit_edge, %entry.if.end22_crit_edge
  %bio.1 = phi ptr [ inttoptr (i32 -1 to ptr), %entry.if.end22_crit_edge ], [ null, %if.end20.if.end22_crit_edge ]
  %__sector.i = getelementptr inbounds %struct.request, ptr %rq_src, i32 0, i32 9
  %18 = ptrtoint ptr %__sector.i to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %__sector.i, align 8
  %__sector = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 9
  %20 = ptrtoint ptr %__sector to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %__sector, align 8
  %__data_len.i = getelementptr inbounds %struct.request, ptr %rq_src, i32 0, i32 8
  %21 = ptrtoint ptr %__data_len.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %__data_len.i, align 8
  %__data_len = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 8
  %23 = ptrtoint ptr %__data_len to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %__data_len, align 8
  %rq_flags = getelementptr inbounds %struct.request, ptr %rq_src, i32 0, i32 4
  %24 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %rq_flags, align 8
  %and = and i32 %25, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool25.not = icmp eq i32 %and, 0
  br i1 %tobool25.not, label %if.end22.if.end28_crit_edge, label %if.then26

if.end22.if.end28_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.then26:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  %rq_flags27 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %26 = ptrtoint ptr %rq_flags27 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rq_flags27, align 8
  %or = or i32 %27, 262144
  store i32 %or, ptr %rq_flags27, align 8
  %28 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 29
  %29 = getelementptr inbounds %struct.request, ptr %rq_src, i32 0, i32 29
  %30 = call ptr @memcpy(ptr %28, ptr %29, i32 12)
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end22.if.end28_crit_edge
  %nr_phys_segments = getelementptr inbounds %struct.request, ptr %rq_src, i32 0, i32 19
  %31 = ptrtoint ptr %nr_phys_segments to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %nr_phys_segments, align 4
  %nr_phys_segments29 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 19
  %33 = ptrtoint ptr %nr_phys_segments29 to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %32, ptr %nr_phys_segments29, align 4
  %ioprio = getelementptr inbounds %struct.request, ptr %rq_src, i32 0, i32 24
  %34 = ptrtoint ptr %ioprio to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %ioprio, align 2
  %ioprio30 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 24
  %36 = ptrtoint ptr %ioprio30 to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 %35, ptr %ioprio30, align 2
  %bio31 = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %37 = ptrtoint ptr %bio31 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %bio31, align 8
  %tobool32.not = icmp eq ptr %38, null
  br i1 %tobool32.not, label %if.end28.cleanup_crit_edge, label %land.lhs.true33

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

land.lhs.true33:                                  ; preds = %if.end28
  %bi_crypt_context.i.i = getelementptr inbounds %struct.bio, ptr %38, i32 0, i32 15
  %39 = ptrtoint ptr %bi_crypt_context.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %bi_crypt_context.i.i, align 8
  %tobool.i.not.i = icmp eq ptr %40, null
  br i1 %tobool.i.not.i, label %land.lhs.true33.cleanup_crit_edge, label %blk_crypto_rq_bio_prep.exit

land.lhs.true33.cleanup_crit_edge:                ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

blk_crypto_rq_bio_prep.exit:                      ; preds = %land.lhs.true33
  %call1.i = tail call i32 @__blk_crypto_rq_bio_prep(ptr noundef %rq, ptr noundef nonnull %38, i32 noundef %gfp_mask) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %cmp = icmp slt i32 %call1.i, 0
  br i1 %cmp, label %free_and_out, label %blk_crypto_rq_bio_prep.exit.cleanup_crit_edge

blk_crypto_rq_bio_prep.exit.cleanup_crit_edge:    ; preds = %blk_crypto_rq_bio_prep.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

free_and_out:                                     ; preds = %blk_crypto_rq_bio_prep.exit
  br i1 %tobool2.not, label %free_and_out.if.then39_crit_edge, label %free_and_out.if.end40_crit_edge

free_and_out.if.end40_crit_edge:                  ; preds = %free_and_out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end40

free_and_out.if.then39_crit_edge:                 ; preds = %free_and_out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then39

if.then39:                                        ; preds = %free_and_out.if.then39_crit_edge, %land.lhs.true.if.then39_crit_edge
  %bio.285 = phi ptr [ %bio.1, %free_and_out.if.then39_crit_edge ], [ %call, %land.lhs.true.if.then39_crit_edge ]
  tail call void @bio_put(ptr noundef nonnull %bio.285) #20
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %free_and_out.if.end40_crit_edge, %for.body.if.end40_crit_edge
  %bio1.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %41 = ptrtoint ptr %bio1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %bio1.i, align 8
  %cmp.not5.i = icmp eq ptr %42, null
  br i1 %cmp.not5.i, label %if.end40.cleanup_crit_edge, label %if.end40.while.body.i_crit_edge

if.end40.while.body.i_crit_edge:                  ; preds = %if.end40
  br label %while.body.i

if.end40.cleanup_crit_edge:                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %if.end40.while.body.i_crit_edge
  %43 = phi ptr [ %48, %while.body.i.while.body.i_crit_edge ], [ %42, %if.end40.while.body.i_crit_edge ]
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %43, align 8
  %46 = ptrtoint ptr %bio1.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %45, ptr %bio1.i, align 8
  tail call void @bio_put(ptr noundef nonnull %43) #20
  %47 = ptrtoint ptr %bio1.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %bio1.i, align 8
  %cmp.not.i = icmp eq ptr %48, null
  br i1 %cmp.not.i, label %while.body.i.cleanup_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

while.body.i.cleanup_crit_edge:                   ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

cleanup:                                          ; preds = %while.body.i.cleanup_crit_edge, %if.end40.cleanup_crit_edge, %blk_crypto_rq_bio_prep.exit.cleanup_crit_edge, %land.lhs.true33.cleanup_crit_edge, %if.end28.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %blk_crypto_rq_bio_prep.exit.cleanup_crit_edge ], [ 0, %if.end28.cleanup_crit_edge ], [ -12, %if.end40.cleanup_crit_edge ], [ 0, %land.lhs.true33.cleanup_crit_edge ], [ -12, %while.body.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bio_clone_fast(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @blk_steal_bios(ptr nocapture noundef %list, ptr nocapture noundef %rq) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %bio = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 10
  %0 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bio, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end9_crit_edge, label %if.then

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

if.then:                                          ; preds = %entry
  %tail = getelementptr inbounds %struct.bio_list, ptr %list, i32 0, i32 1
  %2 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tail, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %3, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %5 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %1, ptr %list, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %biotail = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 11
  %6 = ptrtoint ptr %biotail to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %biotail, align 4
  %8 = ptrtoint ptr %tail to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %tail, align 4
  %9 = ptrtoint ptr %bio to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %bio, align 8
  store ptr null, ptr %biotail, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.end, %entry.if.end9_crit_edge
  %__data_len = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 8
  %10 = ptrtoint ptr %__data_len to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %__data_len, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_free_rqs(ptr noundef %set, ptr noundef %tags, i32 noundef %hctx_idx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and.i = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %shared_tags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 12
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %tags1 = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  %2 = ptrtoint ptr %tags1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tags1, align 4
  %arrayidx = getelementptr ptr, ptr %3, i32 %hctx_idx
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %drv_tags.0.in = phi ptr [ %shared_tags, %if.then ], [ %arrayidx, %if.else ]
  %4 = ptrtoint ptr %drv_tags.0.in to i32
  call void @__asan_load4_noabort(i32 %4)
  %drv_tags.0 = load ptr, ptr %drv_tags.0.in, align 4
  %static_rqs = getelementptr inbounds %struct.blk_mq_tags, ptr %tags, i32 0, i32 6
  %5 = ptrtoint ptr %static_rqs to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %static_rqs, align 4
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %if.end.if.end13_crit_edge, label %land.lhs.true

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

land.lhs.true:                                    ; preds = %if.end
  %ops = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 2
  %7 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops, align 4
  %exit_request = getelementptr inbounds %struct.blk_mq_ops, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %exit_request to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %exit_request, align 4
  %tobool2.not = icmp eq ptr %10, null
  br i1 %tobool2.not, label %land.lhs.true.if.end13_crit_edge, label %for.cond.preheader

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

for.cond.preheader:                               ; preds = %land.lhs.true
  %11 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %tags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp39.not = icmp eq i32 %12, 0
  br i1 %cmp39.not, label %for.cond.preheader.if.end13_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end13_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.040 = phi i32 [ %inc, %cleanup.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %13 = ptrtoint ptr %static_rqs to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %static_rqs, align 4
  %arrayidx5 = getelementptr ptr, ptr %14, i32 %i.040
  %15 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx5, align 4
  %tobool6.not = icmp eq ptr %16, null
  br i1 %tobool6.not, label %for.body.cleanup_crit_edge, label %if.end8

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %17 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ops, align 4
  %exit_request10 = getelementptr inbounds %struct.blk_mq_ops, ptr %18, i32 0, i32 13
  %19 = ptrtoint ptr %exit_request10 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %exit_request10, align 4
  tail call void %20(ptr noundef %set, ptr noundef nonnull %16, i32 noundef %hctx_idx) #20
  %21 = ptrtoint ptr %static_rqs to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %static_rqs, align 4
  %arrayidx12 = getelementptr ptr, ptr %22, i32 %i.040
  %23 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %arrayidx12, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %for.body.cleanup_crit_edge
  %inc = add nuw i32 %i.040, 1
  %24 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %tags, align 4
  %cmp = icmp ult i32 %inc, %25
  br i1 %cmp, label %cleanup.for.body_crit_edge, label %cleanup.if.end13_crit_edge

cleanup.if.end13_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.end13:                                         ; preds = %cleanup.if.end13_crit_edge, %for.cond.preheader.if.end13_crit_edge, %land.lhs.true.if.end13_crit_edge, %if.end.if.end13_crit_edge
  %cmp.i = icmp eq ptr %drv_tags.0, %tags
  br i1 %cmp.i, label %if.end13.blk_mq_clear_rq_mapping.exit_crit_edge, label %if.end.i

if.end13.blk_mq_clear_rq_mapping.exit_crit_edge:  ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_clear_rq_mapping.exit

if.end.i:                                         ; preds = %if.end13
  %page_list.i = getelementptr inbounds %struct.blk_mq_tags, ptr %tags, i32 0, i32 7
  %26 = ptrtoint ptr %page_list.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn115.i = load ptr, ptr %page_list.i, align 4
  %cmp2.not116.i = icmp eq ptr %.pn115.i, %page_list.i
  br i1 %cmp2.not116.i, label %if.end.i.do.body80.i_crit_edge, label %for.body.lr.ph.i

if.end.i.do.body80.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body80.i

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %rqs.i = getelementptr inbounds %struct.blk_mq_tags, ptr %drv_tags.0, i32 0, i32 5
  br label %for.body.i

for.cond.loopexit.i:                              ; preds = %if.end71.i.for.cond.loopexit.i_crit_edge, %for.body.i.for.cond.loopexit.i_crit_edge
  %27 = ptrtoint ptr %.pn117.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pn.i = load ptr, ptr %.pn117.i, align 4
  %cmp2.not.i = icmp eq ptr %.pn.i, %page_list.i
  br i1 %cmp2.not.i, label %for.cond.loopexit.i.do.body80.i_crit_edge, label %for.cond.loopexit.i.for.body.i_crit_edge

for.cond.loopexit.i.for.body.i_crit_edge:         ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.cond.loopexit.i.do.body80.i_crit_edge:        ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body80.i

for.body.i:                                       ; preds = %for.cond.loopexit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn117.i = phi ptr [ %.pn115.i, %for.body.lr.ph.i ], [ %.pn.i, %for.cond.loopexit.i.for.body.i_crit_edge ]
  %page.0.i = getelementptr i8, ptr %.pn117.i, i32 -4
  %call.i = tail call ptr @page_address(ptr noundef %page.0.i) #20
  %28 = ptrtoint ptr %call.i to i32
  %private.i = getelementptr inbounds %struct.anon.5, ptr %.pn117.i, i32 0, i32 3
  %29 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %private.i, align 4
  %shl.i.i = shl i32 4096, %30
  %add.i = add i32 %shl.i.i, %28
  %31 = ptrtoint ptr %drv_tags.0 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %drv_tags.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp5112.not.i = icmp eq i32 %32, 0
  br i1 %cmp5112.not.i, label %for.body.i.for.cond.loopexit.i_crit_edge, label %for.body.i.for.body6.i_crit_edge

for.body.i.for.body6.i_crit_edge:                 ; preds = %for.body.i
  br label %for.body6.i

for.body.i.for.cond.loopexit.i_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.loopexit.i

for.body6.i:                                      ; preds = %if.end71.i.for.body6.i_crit_edge, %for.body.i.for.body6.i_crit_edge
  %i.0113.i = phi i32 [ %inc.i, %if.end71.i.for.body6.i_crit_edge ], [ 0, %for.body.i.for.body6.i_crit_edge ]
  %33 = ptrtoint ptr %rqs.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %rqs.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %34, i32 %i.0113.i
  %35 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.i, align 4
  %37 = ptrtoint ptr %36 to i32
  %cmp7.not.i = icmp uge ptr %36, %call.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %37)
  %cmp8.i = icmp ugt i32 %add.i, %37
  %or.cond.i = select i1 %cmp7.not.i, i1 %cmp8.i, i1 false
  br i1 %or.cond.i, label %if.then9.i, label %for.body6.i.if.end71.i_crit_edge

for.body6.i.if.end71.i_crit_edge:                 ; preds = %for.body6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end71.i

if.then9.i:                                       ; preds = %for.body6.i
  %ref.i.i = getelementptr inbounds %struct.request, ptr %36, i32 0, i32 26
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %ref.i.i, i32 noundef 4) #20
  %38 = ptrtoint ptr %ref.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %ref.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp11.not.i = icmp eq i32 %39, 0
  br i1 %cmp11.not.i, label %if.then9.i.if.end42.i_crit_edge, label %land.rhs.i

if.then9.i.if.end42.i_crit_edge:                  ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end42.i

land.rhs.i:                                       ; preds = %if.then9.i
  %.b111.i = load i1, ptr @blk_mq_clear_rq_mapping.__already_done, align 1
  br i1 %.b111.i, label %land.rhs.i.if.end42.i_crit_edge, label %if.then19.i, !prof !298

land.rhs.i.if.end42.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end42.i

if.then19.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_clear_rq_mapping.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3081, i32 noundef 9, ptr noundef null) #20
  br label %if.end42.i

if.end42.i:                                       ; preds = %if.then19.i, %land.rhs.i.if.end42.i_crit_edge, %if.then9.i.if.end42.i_crit_edge
  %40 = ptrtoint ptr %rqs.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %rqs.i, align 4
  %arrayidx51.i = getelementptr ptr, ptr %41, i32 %i.0113.i
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx51.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !348
  tail call void @llvm.prefetch.p0(ptr %arrayidx51.i, i32 1, i32 3, i32 1) #20
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %if.end42.i
  %42 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %arrayidx51.i, i32 %37, i32 0) #20, !srcloc !349
  %asmresult.i.i = extractvalue { i32, i32 } %42, 0
  %tobool.not.i.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool.not.i.i, label %__cmpxchg.exit.i, label %do.body.i.i.do.body.i.i_crit_edge

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i

__cmpxchg.exit.i:                                 ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !350
  br label %if.end71.i

if.end71.i:                                       ; preds = %__cmpxchg.exit.i, %for.body6.i.if.end71.i_crit_edge
  %inc.i = add nuw i32 %i.0113.i, 1
  %43 = ptrtoint ptr %drv_tags.0 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %drv_tags.0, align 4
  %cmp5.i = icmp ult i32 %inc.i, %44
  br i1 %cmp5.i, label %if.end71.i.for.body6.i_crit_edge, label %if.end71.i.for.cond.loopexit.i_crit_edge

if.end71.i.for.cond.loopexit.i_crit_edge:         ; preds = %if.end71.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.loopexit.i

if.end71.i.for.body6.i_crit_edge:                 ; preds = %if.end71.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body6.i

do.body80.i:                                      ; preds = %for.cond.loopexit.i.do.body80.i_crit_edge, %if.end.i.do.body80.i_crit_edge
  %lock.i = getelementptr inbounds %struct.blk_mq_tags, ptr %drv_tags.0, i32 0, i32 8
  %call84.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #20
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call84.i) #20
  br label %blk_mq_clear_rq_mapping.exit

blk_mq_clear_rq_mapping.exit:                     ; preds = %do.body80.i, %if.end13.blk_mq_clear_rq_mapping.exit_crit_edge
  %page_list = getelementptr inbounds %struct.blk_mq_tags, ptr %tags, i32 0, i32 7
  %45 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile ptr, ptr %page_list, align 4
  %cmp.i37.not42 = icmp eq ptr %46, %page_list
  br i1 %cmp.i37.not42, label %blk_mq_clear_rq_mapping.exit.while.end_crit_edge, label %blk_mq_clear_rq_mapping.exit.while.body_crit_edge

blk_mq_clear_rq_mapping.exit.while.body_crit_edge: ; preds = %blk_mq_clear_rq_mapping.exit
  br label %while.body

blk_mq_clear_rq_mapping.exit.while.end_crit_edge: ; preds = %blk_mq_clear_rq_mapping.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body:                                       ; preds = %list_del_init.exit.while.body_crit_edge, %blk_mq_clear_rq_mapping.exit.while.body_crit_edge
  %47 = phi ptr [ %59, %list_del_init.exit.while.body_crit_edge ], [ %46, %blk_mq_clear_rq_mapping.exit.while.body_crit_edge ]
  %add.ptr = getelementptr i8, ptr %47, i32 -4
  %call.i.i38 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %47) #20
  br i1 %call.i.i38, label %if.end.i.i, label %while.body.list_del_init.exit_crit_edge

while.body.list_del_init.exit_crit_edge:          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %prev.i.i, align 4
  %50 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %47, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %49, ptr %prev1.i.i.i, align 4
  %53 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %51, ptr %49, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %while.body.list_del_init.exit_crit_edge
  %54 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %47, ptr %47, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %47, i32 0, i32 1
  %55 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %47, ptr %prev.i3.i, align 4
  %call17 = tail call ptr @page_address(ptr noundef %add.ptr) #20
  tail call void @kmemleak_free(ptr noundef %call17) #20
  %private = getelementptr inbounds %struct.anon.5, ptr %47, i32 0, i32 3
  %56 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %private, align 4
  tail call void @__free_pages(ptr noundef %add.ptr, i32 noundef %57) #20
  %58 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile ptr, ptr %page_list, align 4
  %cmp.i37.not = icmp eq ptr %59, %page_list
  br i1 %cmp.i37.not, label %list_del_init.exit.while.end_crit_edge, label %list_del_init.exit.while.body_crit_edge

list_del_init.exit.while.body_crit_edge:          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

list_del_init.exit.while.end_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %list_del_init.exit.while.end_crit_edge, %blk_mq_clear_rq_mapping.exit.while.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmemleak_free(ptr noundef) local_unnamed_addr #2 section ".ref.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__free_pages(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_free_rq_map(ptr noundef %tags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %rqs = getelementptr inbounds %struct.blk_mq_tags, ptr %tags, i32 0, i32 5
  %0 = ptrtoint ptr %rqs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rqs, align 4
  tail call void @kfree(ptr noundef %1) #20
  %2 = ptrtoint ptr %rqs to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %rqs, align 4
  %static_rqs = getelementptr inbounds %struct.blk_mq_tags, ptr %tags, i32 0, i32 6
  %3 = ptrtoint ptr %static_rqs to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %static_rqs, align 4
  tail call void @kfree(ptr noundef %4) #20
  %5 = ptrtoint ptr %static_rqs to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %static_rqs, align 4
  tail call void @blk_mq_free_tags(ptr noundef %tags) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_free_tags(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @blk_mq_alloc_map_and_rqs(ptr noundef %set, i32 noundef %hctx_idx, i32 noundef %depth) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %reserved_tags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 5
  %0 = ptrtoint ptr %reserved_tags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %reserved_tags, align 4
  %call.i = tail call i32 @blk_mq_hw_queue_to_node(ptr noundef %set, i32 noundef %hctx_idx) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i)
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %if.then.i, label %entry.if.end.i_crit_edge

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %numa_node.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 7
  %2 = ptrtoint ptr %numa_node.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %numa_node.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry.if.end.i_crit_edge
  %node.0.i = phi i32 [ %3, %if.then.i ], [ %call.i, %entry.if.end.i_crit_edge ]
  %flags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i, align 4
  %shr.i = lshr i32 %5, 8
  %and.i = and i32 %shr.i, 1
  %call1.i = tail call ptr @blk_mq_init_tags(i32 noundef %depth, i32 noundef %1, i32 noundef %node.0.i, i32 noundef %and.i) #20
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %if.end.i.cleanup_crit_edge, label %if.end3.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %6 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %depth, i32 4) #20
  %7 = extractvalue { i32, i1 } %6, 1
  %8 = extractvalue { i32, i1 } %6, 0
  br i1 %7, label %kcalloc_node.exit.thread.i, label %kcalloc_node.exit.thread74.i, !prof !300

kcalloc_node.exit.thread.i:                       ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #22
  %rqs61.i = getelementptr inbounds %struct.blk_mq_tags, ptr %call1.i, i32 0, i32 5
  %9 = ptrtoint ptr %rqs61.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %rqs61.i, align 4
  br label %cleanup.sink.split

kcalloc_node.exit.thread74.i:                     ; preds = %if.end3.i
  %call.i.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %8, i32 noundef 77056) #25
  %rqs76.i = getelementptr inbounds %struct.blk_mq_tags, ptr %call1.i, i32 0, i32 5
  %10 = ptrtoint ptr %rqs76.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call.i.i.i.i, ptr %rqs76.i, align 4
  %tobool6.not77.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool6.not77.i, label %kcalloc_node.exit.thread74.i.cleanup.sink.split_crit_edge, label %if.end7.i.i57.i

kcalloc_node.exit.thread74.i.cleanup.sink.split_crit_edge: ; preds = %kcalloc_node.exit.thread74.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.sink.split

if.end7.i.i57.i:                                  ; preds = %kcalloc_node.exit.thread74.i
  %call.i.i.i56.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %8, i32 noundef 77056) #25
  %static_rqs.i = getelementptr inbounds %struct.blk_mq_tags, ptr %call1.i, i32 0, i32 6
  %11 = ptrtoint ptr %static_rqs.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call.i.i.i56.i, ptr %static_rqs.i, align 4
  %tobool11.not.i = icmp eq ptr %call.i.i.i56.i, null
  br i1 %tobool11.not.i, label %if.then12.i, label %if.end

if.then12.i:                                      ; preds = %if.end7.i.i57.i
  call void @__sanitizer_cov_trace_pc() #22
  %12 = ptrtoint ptr %rqs76.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rqs76.i, align 4
  tail call void @kfree(ptr noundef %13) #20
  br label %cleanup.sink.split

if.end:                                           ; preds = %if.end7.i.i57.i
  %call.i13 = tail call i32 @blk_mq_hw_queue_to_node(ptr noundef %set, i32 noundef %hctx_idx) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i13)
  %cmp.i14 = icmp eq i32 %call.i13, -1
  br i1 %cmp.i14, label %if.then.i16, label %if.end.if.end.i18_crit_edge

if.end.if.end.i18_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i18

if.then.i16:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %numa_node.i15 = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 7
  %14 = ptrtoint ptr %numa_node.i15 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %numa_node.i15, align 4
  br label %if.end.i18

if.end.i18:                                       ; preds = %if.then.i16, %if.end.if.end.i18_crit_edge
  %node.0.i17 = phi i32 [ %15, %if.then.i16 ], [ %call.i13, %if.end.if.end.i18_crit_edge ]
  %page_list.i = getelementptr inbounds %struct.blk_mq_tags, ptr %call1.i, i32 0, i32 7
  %16 = ptrtoint ptr %page_list.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %page_list.i, ptr %page_list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %call1.i, i32 0, i32 7, i32 1
  %17 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %page_list.i, ptr %prev.i.i, align 4
  %cmd_size.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 6
  %18 = ptrtoint ptr %cmd_size.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cmd_size.i, align 4
  %sub.i = add i32 %19, 191
  %or.i = or i32 %sub.i, 127
  %add1.i = add i32 %or.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %depth)
  %cmp2126.not.i = icmp eq i32 %depth, 0
  br i1 %cmp2126.not.i, label %if.end.i18.cleanup_crit_edge, label %while.cond.preheader.lr.ph.i

if.end.i18.cleanup_crit_edge:                     ; preds = %if.end.i18
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

while.cond.preheader.lr.ph.i:                     ; preds = %if.end.i18
  %mul.i = mul i32 %add1.i, %depth
  %static_rqs.i19 = getelementptr inbounds %struct.blk_mq_tags, ptr %call1.i, i32 0, i32 6
  %ops.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 2
  br label %while.cond.preheader.i

for.cond.loopexit.i:                              ; preds = %for.inc.i.for.cond.loopexit.i_crit_edge, %list_add_tail.exit.i.for.cond.loopexit.i_crit_edge
  %i.1.lcssa.i = phi i32 [ %i.0128.i, %list_add_tail.exit.i.for.cond.loopexit.i_crit_edge ], [ %30, %for.inc.i.for.cond.loopexit.i_crit_edge ]
  %cmp2.i = icmp ult i32 %i.1.lcssa.i, %depth
  br i1 %cmp2.i, label %for.cond.loopexit.i.while.cond.preheader.i_crit_edge, label %for.cond.loopexit.i.cleanup_crit_edge

for.cond.loopexit.i.cleanup_crit_edge:            ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.loopexit.i.while.cond.preheader.i_crit_edge: ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %for.cond.loopexit.i.while.cond.preheader.i_crit_edge, %while.cond.preheader.lr.ph.i
  %i.0128.i = phi i32 [ 0, %while.cond.preheader.lr.ph.i ], [ %i.1.lcssa.i, %for.cond.loopexit.i.while.cond.preheader.i_crit_edge ]
  %left.0127.i = phi i32 [ %mul.i, %while.cond.preheader.lr.ph.i ], [ %sub28.i, %for.cond.loopexit.i.while.cond.preheader.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 32768, i32 %left.0127.i)
  %cmp5.i = icmp ult i32 %left.0127.i, 32768
  br i1 %cmp5.i, label %while.cond.1.i, label %while.cond.preheader.i.while.end.i_crit_edge

while.cond.preheader.i.while.end.i_crit_edge:     ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.cond.1.i:                                   ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16384, i32 %left.0127.i)
  %cmp5.1.i = icmp ult i32 %left.0127.i, 16384
  br i1 %cmp5.1.i, label %while.cond.2.i, label %while.cond.1.i.while.end.i_crit_edge

while.cond.1.i.while.end.i_crit_edge:             ; preds = %while.cond.1.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.cond.2.i:                                   ; preds = %while.cond.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 8192, i32 %left.0127.i)
  %cmp5.2.i = icmp ult i32 %left.0127.i, 8192
  br i1 %cmp5.2.i, label %while.cond.3.i, label %while.cond.2.i.while.end.i_crit_edge

while.cond.2.i.while.end.i_crit_edge:             ; preds = %while.cond.2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.cond.3.i:                                   ; preds = %while.cond.2.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %left.0127.i)
  %cmp5.3.i = icmp ugt i32 %left.0127.i, 4095
  %spec.select.i = zext i1 %cmp5.3.i to i32
  br label %while.end.i

while.end.i:                                      ; preds = %while.cond.3.i, %while.cond.2.i.while.end.i_crit_edge, %while.cond.1.i.while.end.i_crit_edge, %while.cond.preheader.i.while.end.i_crit_edge
  %this_order.0.lcssa.i = phi i32 [ 4, %while.cond.preheader.i.while.end.i_crit_edge ], [ 3, %while.cond.1.i.while.end.i_crit_edge ], [ 2, %while.cond.2.i.while.end.i_crit_edge ], [ %spec.select.i, %while.cond.3.i ]
  %20 = zext i32 %node.0.i17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.74)
  switch i32 %node.0.i17, label %do.body3.i.i.i [
    i32 -1, label %while.end.i.do.body.i_crit_edge
    i32 0, label %while.end.i.do.body.i_crit_edge59
  ], !prof !351

while.end.i.do.body.i_crit_edge59:                ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

while.end.i.do.body.i_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

do.body.i:                                        ; preds = %while.end.i.do.body.i_crit_edge, %while.end.i.do.body.i_crit_edge59
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 77056, i32 noundef %this_order.0.lcssa.i, i32 noundef 0, ptr noundef null) #20
  %tobool7.not.i = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool7.not.i, label %if.end9.i, label %do.body.i.if.end20.i_crit_edge

do.body.i.if.end20.i_crit_edge:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20.i

do.body3.i.i.i:                                   ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/gfp.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 569, 0\0A.popsection", ""() #20, !srcloc !352
  unreachable

if.end9.i:                                        ; preds = %do.body.i
  %dec10.i = add nsw i32 %this_order.0.lcssa.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %this_order.0.lcssa.i)
  %tobool11.not.i20 = icmp eq i32 %this_order.0.lcssa.i, 0
  %shl.i98.i = shl i32 4096, %dec10.i
  call void @__sanitizer_cov_trace_cmp4(i32 %shl.i98.i, i32 %add1.i)
  %cmp15.i = icmp ult i32 %shl.i98.i, %add1.i
  %or.cond.i = select i1 %tobool11.not.i20, i1 true, i1 %cmp15.i
  br i1 %or.cond.i, label %if.end9.i.if.then3_crit_edge, label %do.body.i.1

if.end9.i.if.then3_crit_edge:                     ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then3

do.body.i.1:                                      ; preds = %if.end9.i
  %call38.i.i.i.1 = tail call ptr @__alloc_pages(i32 noundef 77056, i32 noundef %dec10.i, i32 noundef 0, ptr noundef null) #20
  %tobool7.not.i.1 = icmp eq ptr %call38.i.i.i.1, null
  br i1 %tobool7.not.i.1, label %if.end9.i.1, label %do.body.i.1.if.end20.i_crit_edge

do.body.i.1.if.end20.i_crit_edge:                 ; preds = %do.body.i.1
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20.i

if.end9.i.1:                                      ; preds = %do.body.i.1
  %dec10.i.1 = add nsw i32 %this_order.0.lcssa.i, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec10.i)
  %tobool11.not.i20.1 = icmp eq i32 %dec10.i, 0
  %shl.i98.i.1 = shl i32 4096, %dec10.i.1
  call void @__sanitizer_cov_trace_cmp4(i32 %shl.i98.i.1, i32 %add1.i)
  %cmp15.i.1 = icmp ult i32 %shl.i98.i.1, %add1.i
  %or.cond.i.1 = select i1 %tobool11.not.i20.1, i1 true, i1 %cmp15.i.1
  br i1 %or.cond.i.1, label %if.end9.i.1.if.then3_crit_edge, label %do.body.i.2

if.end9.i.1.if.then3_crit_edge:                   ; preds = %if.end9.i.1
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then3

do.body.i.2:                                      ; preds = %if.end9.i.1
  %call38.i.i.i.2 = tail call ptr @__alloc_pages(i32 noundef 77056, i32 noundef %dec10.i.1, i32 noundef 0, ptr noundef null) #20
  %tobool7.not.i.2 = icmp eq ptr %call38.i.i.i.2, null
  br i1 %tobool7.not.i.2, label %if.end9.i.2, label %do.body.i.2.if.end20.i_crit_edge

do.body.i.2.if.end20.i_crit_edge:                 ; preds = %do.body.i.2
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20.i

if.end9.i.2:                                      ; preds = %do.body.i.2
  %dec10.i.2 = add nsw i32 %this_order.0.lcssa.i, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec10.i.1)
  %tobool11.not.i20.2 = icmp eq i32 %dec10.i.1, 0
  %shl.i98.i.2 = shl i32 4096, %dec10.i.2
  call void @__sanitizer_cov_trace_cmp4(i32 %shl.i98.i.2, i32 %add1.i)
  %cmp15.i.2 = icmp ult i32 %shl.i98.i.2, %add1.i
  %or.cond.i.2 = select i1 %tobool11.not.i20.2, i1 true, i1 %cmp15.i.2
  br i1 %or.cond.i.2, label %if.end9.i.2.if.then3_crit_edge, label %do.body.i.3

if.end9.i.2.if.then3_crit_edge:                   ; preds = %if.end9.i.2
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then3

do.body.i.3:                                      ; preds = %if.end9.i.2
  %call38.i.i.i.3 = tail call ptr @__alloc_pages(i32 noundef 77056, i32 noundef %dec10.i.2, i32 noundef 0, ptr noundef null) #20
  %tobool7.not.i.3 = icmp eq ptr %call38.i.i.i.3, null
  br i1 %tobool7.not.i.3, label %if.end9.i.3, label %do.body.i.3.if.end20.i_crit_edge

do.body.i.3.if.end20.i_crit_edge:                 ; preds = %do.body.i.3
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20.i

if.end9.i.3:                                      ; preds = %do.body.i.3
  %dec10.i.3 = add nsw i32 %this_order.0.lcssa.i, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec10.i.2)
  %tobool11.not.i20.3 = icmp eq i32 %dec10.i.2, 0
  %shl.i98.i.3 = shl i32 4096, %dec10.i.3
  call void @__sanitizer_cov_trace_cmp4(i32 %shl.i98.i.3, i32 %add1.i)
  %cmp15.i.3 = icmp ult i32 %shl.i98.i.3, %add1.i
  %or.cond.i.3 = select i1 %tobool11.not.i20.3, i1 true, i1 %cmp15.i.3
  br i1 %or.cond.i.3, label %if.end9.i.3.if.then3_crit_edge, label %do.body.i.4

if.end9.i.3.if.then3_crit_edge:                   ; preds = %if.end9.i.3
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then3

do.body.i.4:                                      ; preds = %if.end9.i.3
  %call38.i.i.i.4 = tail call ptr @__alloc_pages(i32 noundef 77056, i32 noundef %dec10.i.3, i32 noundef 0, ptr noundef null) #20
  %tobool7.not.i.4 = icmp eq ptr %call38.i.i.i.4, null
  br i1 %tobool7.not.i.4, label %do.body.i.4.if.then3_crit_edge, label %do.body.i.4.if.end20.i_crit_edge

do.body.i.4.if.end20.i_crit_edge:                 ; preds = %do.body.i.4
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20.i

do.body.i.4.if.then3_crit_edge:                   ; preds = %do.body.i.4
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then3

if.end20.i:                                       ; preds = %do.body.i.4.if.end20.i_crit_edge, %do.body.i.3.if.end20.i_crit_edge, %do.body.i.2.if.end20.i_crit_edge, %do.body.i.1.if.end20.i_crit_edge, %do.body.i.if.end20.i_crit_edge
  %this_order.1.i.lcssa = phi i32 [ %this_order.0.lcssa.i, %do.body.i.if.end20.i_crit_edge ], [ %dec10.i, %do.body.i.1.if.end20.i_crit_edge ], [ %dec10.i.1, %do.body.i.2.if.end20.i_crit_edge ], [ %dec10.i.2, %do.body.i.3.if.end20.i_crit_edge ], [ %dec10.i.3, %do.body.i.4.if.end20.i_crit_edge ]
  %call38.i.i.i.lcssa = phi ptr [ %call38.i.i.i, %do.body.i.if.end20.i_crit_edge ], [ %call38.i.i.i.1, %do.body.i.1.if.end20.i_crit_edge ], [ %call38.i.i.i.2, %do.body.i.2.if.end20.i_crit_edge ], [ %call38.i.i.i.3, %do.body.i.3.if.end20.i_crit_edge ], [ %call38.i.i.i.4, %do.body.i.4.if.end20.i_crit_edge ]
  %21 = getelementptr inbounds %struct.page, ptr %call38.i.i.i.lcssa, i32 0, i32 1
  %private.i = getelementptr inbounds %struct.page, ptr %call38.i.i.i.lcssa, i32 0, i32 1, i32 0, i32 3
  %22 = ptrtoint ptr %private.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %this_order.1.i.lcssa, ptr %private.i, align 4
  %23 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %21, ptr noundef %24, ptr noundef %page_list.i) #20
  br i1 %call.i.i.i, label %if.end.i.i.i21, label %if.end20.i.list_add_tail.exit.i_crit_edge

if.end20.i.list_add_tail.exit.i_crit_edge:        ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_add_tail.exit.i

if.end.i.i.i21:                                   ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #22
  %25 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %21, ptr %prev.i.i, align 4
  %26 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %page_list.i, ptr %21, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.page, ptr %call38.i.i.i.lcssa, i32 0, i32 1, i32 0, i32 0, i32 1
  %27 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %prev3.i.i.i, align 4
  %28 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %21, ptr %24, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i21, %if.end20.i.list_add_tail.exit.i_crit_edge
  %call22.i = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i.lcssa) #20
  %shl.i100.i = shl i32 4096, %this_order.1.i.lcssa
  tail call void @kmemleak_alloc(ptr noundef %call22.i, i32 noundef %shl.i100.i, i32 noundef 1, i32 noundef 3072) #20
  %div.i = udiv i32 %shl.i100.i, %add1.i
  %sub25.i = sub i32 %depth, %i.0128.i
  %29 = tail call i32 @llvm.umin.i32(i32 %div.i, i32 %sub25.i) #20
  %mul27.i = mul i32 %29, %add1.i
  %sub28.i = sub i32 %left.0127.i, %mul27.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %cmp30121.not.i = icmp eq i32 %29, 0
  br i1 %cmp30121.not.i, label %list_add_tail.exit.i.for.cond.loopexit.i_crit_edge, label %for.body31.preheader.i

list_add_tail.exit.i.for.cond.loopexit.i_crit_edge: ; preds = %list_add_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.loopexit.i

for.body31.preheader.i:                           ; preds = %list_add_tail.exit.i
  %30 = add i32 %29, %i.0128.i
  br label %for.body31.i

for.body31.i:                                     ; preds = %for.inc.i.for.body31.i_crit_edge, %for.body31.preheader.i
  %i.1124.i = phi i32 [ %inc.i, %for.inc.i.for.body31.i_crit_edge ], [ %i.0128.i, %for.body31.preheader.i ]
  %p.0123.i = phi ptr [ %add.ptr.i, %for.inc.i.for.body31.i_crit_edge ], [ %call22.i, %for.body31.preheader.i ]
  %31 = ptrtoint ptr %static_rqs.i19 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %static_rqs.i19, align 4
  %arrayidx32.i = getelementptr ptr, ptr %32, i32 %i.1124.i
  %33 = ptrtoint ptr %arrayidx32.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %p.0123.i, ptr %arrayidx32.i, align 4
  %34 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ops.i.i, align 4
  %init_request.i.i = getelementptr inbounds %struct.blk_mq_ops, ptr %35, i32 0, i32 12
  %36 = ptrtoint ptr %init_request.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %init_request.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %37, null
  br i1 %tobool.not.i.i, label %for.body31.i.for.inc.i_crit_edge, label %if.then.i.i

for.body31.i.for.inc.i_crit_edge:                 ; preds = %for.body31.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc.i

if.then.i.i:                                      ; preds = %for.body31.i
  %call.i.i = tail call i32 %37(ptr noundef %set, ptr noundef %p.0123.i, i32 noundef %hctx_idx, i32 noundef %node.0.i17) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool3.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool3.not.i.i, label %if.then.i.i.for.inc.i_crit_edge, label %cleanup.i

if.then.i.i.for.inc.i_crit_edge:                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc.i

cleanup.i:                                        ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %38 = ptrtoint ptr %static_rqs.i19 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %static_rqs.i19, align 4
  %arrayidx37.i = getelementptr ptr, ptr %39, i32 %i.1124.i
  %40 = ptrtoint ptr %arrayidx37.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %arrayidx37.i, align 4
  br label %if.then3

for.inc.i:                                        ; preds = %if.then.i.i.for.inc.i_crit_edge, %for.body31.i.for.inc.i_crit_edge
  %state.i.i = getelementptr inbounds %struct.request, ptr %p.0123.i, i32 0, i32 25
  %41 = ptrtoint ptr %state.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile i32 0, ptr %state.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %p.0123.i, i32 %add1.i
  %inc.i = add i32 %i.1124.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %30
  br i1 %exitcond.not.i, label %for.inc.i.for.cond.loopexit.i_crit_edge, label %for.inc.i.for.body31.i_crit_edge

for.inc.i.for.body31.i_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body31.i

for.inc.i.for.cond.loopexit.i_crit_edge:          ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.loopexit.i

if.then3:                                         ; preds = %cleanup.i, %do.body.i.4.if.then3_crit_edge, %if.end9.i.3.if.then3_crit_edge, %if.end9.i.2.if.then3_crit_edge, %if.end9.i.1.if.then3_crit_edge, %if.end9.i.if.then3_crit_edge
  tail call void @blk_mq_free_rqs(ptr noundef %set, ptr noundef nonnull %call1.i, i32 noundef %hctx_idx) #20
  %rqs.i23 = getelementptr inbounds %struct.blk_mq_tags, ptr %call1.i, i32 0, i32 5
  %42 = ptrtoint ptr %rqs.i23 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %rqs.i23, align 4
  tail call void @kfree(ptr noundef %43) #20
  %44 = ptrtoint ptr %rqs.i23 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %rqs.i23, align 4
  %45 = ptrtoint ptr %static_rqs.i19 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %static_rqs.i19, align 4
  tail call void @kfree(ptr noundef %46) #20
  %47 = ptrtoint ptr %static_rqs.i19 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %static_rqs.i19, align 4
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.then3, %if.then12.i, %kcalloc_node.exit.thread74.i.cleanup.sink.split_crit_edge, %kcalloc_node.exit.thread.i
  tail call void @blk_mq_free_tags(ptr noundef nonnull %call1.i) #20
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %for.cond.loopexit.i.cleanup_crit_edge, %if.end.i18.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.end.i.cleanup_crit_edge ], [ %call1.i, %if.end.i18.cleanup_crit_edge ], [ null, %cleanup.sink.split ], [ %call1.i, %for.cond.loopexit.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_free_map_and_rqs(ptr noundef %set, ptr noundef %tags, i32 noundef %hctx_idx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %tags, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_free_rqs(ptr noundef %set, ptr noundef nonnull %tags, i32 noundef %hctx_idx)
  %rqs.i = getelementptr inbounds %struct.blk_mq_tags, ptr %tags, i32 0, i32 5
  %0 = ptrtoint ptr %rqs.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rqs.i, align 4
  tail call void @kfree(ptr noundef %1) #20
  %2 = ptrtoint ptr %rqs.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %rqs.i, align 4
  %static_rqs.i = getelementptr inbounds %struct.blk_mq_tags, ptr %tags, i32 0, i32 6
  %3 = ptrtoint ptr %static_rqs.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %static_rqs.i, align 4
  tail call void @kfree(ptr noundef %4) #20
  %5 = ptrtoint ptr %static_rqs.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %static_rqs.i, align 4
  tail call void @blk_mq_free_tags(ptr noundef nonnull %tags) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_release(ptr noundef %q) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %0 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp84.not = icmp eq i32 %1, 0
  br i1 %cmp84.not, label %entry.for.end_crit_edge, label %land.rhs.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

land.rhs.lr.ph:                                   ; preds = %entry
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %land.rhs

land.rhs:                                         ; preds = %if.end35.land.rhs_crit_edge, %land.rhs.lr.ph
  %i.085 = phi i32 [ 0, %land.rhs.lr.ph ], [ %inc, %if.end35.land.rhs_crit_edge ]
  %2 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %3, i32 %i.085
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %land.rhs.if.end35_crit_edge, label %land.rhs2

land.rhs.if.end35_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

land.rhs2:                                        ; preds = %land.rhs
  %hctx_list = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %5, i32 0, i32 31
  %6 = ptrtoint ptr %hctx_list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %hctx_list, align 4
  %cmp.i = icmp eq ptr %7, %hctx_list
  br i1 %cmp.i, label %land.rhs7, label %land.rhs2.if.end35_crit_edge

land.rhs2.if.end35_crit_edge:                     ; preds = %land.rhs2
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

land.rhs7:                                        ; preds = %land.rhs2
  %.b81 = load i1, ptr @blk_mq_release.__already_done, align 1
  br i1 %.b81, label %land.rhs7.if.end35_crit_edge, label %if.then, !prof !298

land.rhs7.if.end35_crit_edge:                     ; preds = %land.rhs7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

if.then:                                          ; preds = %land.rhs7
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_release.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3860, i32 noundef 9, ptr noundef null) #20
  br label %if.end35

if.end35:                                         ; preds = %if.then, %land.rhs7.if.end35_crit_edge, %land.rhs2.if.end35_crit_edge, %land.rhs.if.end35_crit_edge
  %inc = add nuw i32 %i.085, 1
  %8 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_hw_queues, align 8
  %cmp = icmp ult i32 %inc, %9
  br i1 %cmp, label %if.end35.land.rhs_crit_edge, label %if.end35.for.end_crit_edge

if.end35.for.end_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

if.end35.land.rhs_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs

for.end:                                          ; preds = %if.end35.for.end_crit_edge, %entry.for.end_crit_edge
  %unused_hctx_list = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 53
  %10 = ptrtoint ptr %unused_hctx_list to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %unused_hctx_list, align 8
  %cmp53.not86 = icmp eq ptr %11, %unused_hctx_list
  br i1 %cmp53.not86, label %for.end.for.end64_crit_edge, label %for.end.for.body56_crit_edge

for.end.for.body56_crit_edge:                     ; preds = %for.end
  br label %for.body56

for.end.for.end64_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end64

for.body56:                                       ; preds = %list_del_init.exit.for.body56_crit_edge, %for.end.for.body56_crit_edge
  %.pn.in87 = phi ptr [ %.pn, %list_del_init.exit.for.body56_crit_edge ], [ %11, %for.end.for.body56_crit_edge ]
  %12 = ptrtoint ptr %.pn.in87 to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn = load ptr, ptr %.pn.in87, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in87) #20
  br i1 %call.i.i, label %if.end.i.i, label %for.body56.list_del_init.exit_crit_edge

for.body56.list_del_init.exit_crit_edge:          ; preds = %for.body56
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %for.body56
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in87, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i, align 4
  %15 = ptrtoint ptr %.pn.in87 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %.pn.in87, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %for.body56.list_del_init.exit_crit_edge
  %19 = ptrtoint ptr %.pn.in87 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %.pn.in87, ptr %.pn.in87, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %.pn.in87, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %.pn.in87, ptr %prev.i3.i, align 4
  %kobj = getelementptr i8, ptr %.pn.in87, i32 -144
  tail call void @kobject_put(ptr noundef %kobj) #20
  %cmp53.not = icmp eq ptr %.pn, %unused_hctx_list
  br i1 %cmp53.not, label %list_del_init.exit.for.end64_crit_edge, label %list_del_init.exit.for.body56_crit_edge

list_del_init.exit.for.body56_crit_edge:          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body56

list_del_init.exit.for.end64_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end64

for.end64:                                        ; preds = %list_del_init.exit.for.end64_crit_edge, %for.end.for.end64_crit_edge
  %queue_hw_ctx65 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %21 = ptrtoint ptr %queue_hw_ctx65 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %queue_hw_ctx65, align 4
  tail call void @kfree(ptr noundef %22) #20
  tail call void @blk_mq_sysfs_deinit(ptr noundef %q) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_sysfs_deinit(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @blk_mq_init_queue(ptr noundef %set) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %numa_node.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 7
  %0 = ptrtoint ptr %numa_node.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %numa_node.i, align 4
  %flags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %3, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i = icmp ne i32 %and.i, 0
  %call.i = tail call ptr @blk_alloc_queue(i32 noundef %1, i1 noundef zeroext %tobool.i) #20
  %tobool1.not.i = icmp eq ptr %call.i, null
  br i1 %tobool1.not.i, label %entry.blk_mq_init_queue_data.exit_crit_edge, label %if.end.i

entry.blk_mq_init_queue_data.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_init_queue_data.exit

if.end.i:                                         ; preds = %entry
  %queuedata3.i = getelementptr inbounds %struct.request_queue, ptr %call.i, i32 0, i32 10
  %4 = ptrtoint ptr %queuedata3.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %queuedata3.i, align 4
  %call4.i = tail call i32 @blk_mq_init_allocated_queue(ptr noundef %set, ptr noundef nonnull %call.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %if.end.i.blk_mq_init_queue_data.exit_crit_edge, label %if.then6.i

if.end.i.blk_mq_init_queue_data.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_init_queue_data.exit

if.then6.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_cleanup_queue(ptr noundef nonnull %call.i) #20
  %5 = inttoptr i32 %call4.i to ptr
  br label %blk_mq_init_queue_data.exit

blk_mq_init_queue_data.exit:                      ; preds = %if.then6.i, %if.end.i.blk_mq_init_queue_data.exit_crit_edge, %entry.blk_mq_init_queue_data.exit_crit_edge
  %retval.0.i = phi ptr [ %5, %if.then6.i ], [ %call.i, %if.end.i.blk_mq_init_queue_data.exit_crit_edge ], [ inttoptr (i32 -12 to ptr), %entry.blk_mq_init_queue_data.exit_crit_edge ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__blk_mq_alloc_disk(ptr noundef %set, ptr noundef %queuedata, ptr noundef %lkclass) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %numa_node.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 7
  %0 = ptrtoint ptr %numa_node.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %numa_node.i, align 4
  %flags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %3, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i = icmp ne i32 %and.i, 0
  %call.i = tail call ptr @blk_alloc_queue(i32 noundef %1, i1 noundef zeroext %tobool.i) #20
  %tobool1.not.i = icmp eq ptr %call.i, null
  br i1 %tobool1.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %queuedata3.i = getelementptr inbounds %struct.request_queue, ptr %call.i, i32 0, i32 10
  %4 = ptrtoint ptr %queuedata3.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %queuedata, ptr %queuedata3.i, align 4
  %call4.i = tail call i32 @blk_mq_init_allocated_queue(ptr noundef %set, ptr noundef nonnull %call.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %if.end.i.blk_mq_init_queue_data.exit_crit_edge, label %if.then6.i

if.end.i.blk_mq_init_queue_data.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_init_queue_data.exit

if.then6.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_cleanup_queue(ptr noundef nonnull %call.i) #20
  %5 = inttoptr i32 %call4.i to ptr
  br label %blk_mq_init_queue_data.exit

blk_mq_init_queue_data.exit:                      ; preds = %if.then6.i, %if.end.i.blk_mq_init_queue_data.exit_crit_edge
  %retval.0.i = phi ptr [ %5, %if.then6.i ], [ %call.i, %if.end.i.blk_mq_init_queue_data.exit_crit_edge ]
  %cmp.i = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %blk_mq_init_queue_data.exit.cleanup_crit_edge, label %if.end

blk_mq_init_queue_data.exit.cleanup_crit_edge:    ; preds = %blk_mq_init_queue_data.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %blk_mq_init_queue_data.exit
  %6 = ptrtoint ptr %numa_node.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %numa_node.i, align 4
  %call3 = tail call ptr @__alloc_disk_node(ptr noundef %retval.0.i, i32 noundef %7, ptr noundef %lkclass) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.then4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_cleanup_queue(ptr noundef %retval.0.i) #20
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %if.end.cleanup_crit_edge, %blk_mq_init_queue_data.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -12 to ptr), %if.then4 ], [ %call3, %if.end.cleanup_crit_edge ], [ %retval.0.i, %blk_mq_init_queue_data.exit.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_disk_node(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_cleanup_queue(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @blk_mq_init_allocated_queue(ptr noundef %set, ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 11
  %0 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %queue_flags, align 4
  %shr.i = lshr i32 %1, 2
  %flags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = lshr i32 %3, 5
  %4 = xor i32 %and, %shr.i
  %5 = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.not = icmp eq i32 %5, 0
  br i1 %cmp.not, label %entry.if.end35_crit_edge, label %land.rhs

entry.if.end35_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

land.rhs:                                         ; preds = %entry
  %.b157 = load i1, ptr @blk_mq_init_allocated_queue.__already_done, align 1
  br i1 %.b157, label %land.rhs.if.end35_crit_edge, label %if.then, !prof !298

land.rhs.if.end35_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_init_allocated_queue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4033, i32 noundef 9, ptr noundef null) #20
  br label %if.end35

if.end35:                                         ; preds = %if.then, %land.rhs.if.end35_crit_edge, %entry.if.end35_crit_edge
  %ops = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 2
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %mq_ops = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 5
  %8 = ptrtoint ptr %mq_ops to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %mq_ops, align 8
  %call43 = tail call ptr @blk_stat_alloc_callback(ptr noundef nonnull @blk_mq_poll_stats_fn, ptr noundef nonnull @blk_mq_poll_stats_bkt, i32 noundef 16, ptr noundef %q) #20
  %poll_cb = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 27
  %9 = ptrtoint ptr %poll_cb to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call43, ptr %poll_cb, align 8
  %tobool45.not = icmp eq ptr %call43, null
  br i1 %tobool45.not, label %if.end35.err_exit_crit_edge, label %if.end47

if.end35.err_exit_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_exit

if.end47:                                         ; preds = %if.end35
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %10 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 3520, i32 noundef 140) #26
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.end47.err_poll_crit_edge, label %if.end.i

if.end47.err_poll_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_poll

if.end.i:                                         ; preds = %if.end47
  %call1.i = tail call noalias ptr @__alloc_percpu(i32 noundef 384, i32 noundef 128) #25
  %queue_ctx.i = getelementptr inbounds %struct.blk_mq_ctxs, ptr %call7.i.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %queue_ctx.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call1.i, ptr %queue_ctx.i, align 8
  %tobool3.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool3.not.i, label %fail.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %12 = load i32, ptr @nr_cpu_ids, align 4
  %call623.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__sanitizer_cov_trace_cmp4(i32 %call623.i, i32 %12)
  %cmp24.i = icmp ult i32 %call623.i, %12
  br i1 %cmp24.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.if.end51_crit_edge

for.cond.preheader.i.if.end51_crit_edge:          ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end51

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %call625.i = phi i32 [ %call6.i, %for.body.i.for.body.i_crit_edge ], [ %call623.i, %for.cond.preheader.i.for.body.i_crit_edge ]
  %13 = ptrtoint ptr %queue_ctx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %queue_ctx.i, align 8
  %15 = ptrtoint ptr %14 to i32
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call625.i
  %16 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %17, %15
  %18 = inttoptr i32 %add.i to ptr
  %ctxs9.i = getelementptr inbounds %struct.blk_mq_ctx, ptr %18, i32 0, i32 5
  %19 = ptrtoint ptr %ctxs9.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call7.i.i.i, ptr %ctxs9.i, align 4
  %call6.i = tail call i32 @cpumask_next(i32 noundef %call625.i, ptr noundef nonnull @__cpu_possible_mask) #24
  %cmp.i = icmp ult i32 %call6.i, %12
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.if.end51_crit_edge

for.body.i.if.end51_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end51

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

fail.i:                                           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #20
  br label %err_poll

if.end51:                                         ; preds = %for.body.i.if.end51_crit_edge, %for.cond.preheader.i.if.end51_crit_edge
  %mq_kobj.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 17
  %20 = ptrtoint ptr %mq_kobj.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call7.i.i.i, ptr %mq_kobj.i, align 4
  %21 = ptrtoint ptr %queue_ctx.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %queue_ctx.i, align 8
  %queue_ctx11.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 6
  %23 = ptrtoint ptr %queue_ctx11.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %22, ptr %queue_ctx11.i, align 4
  tail call void @blk_mq_sysfs_init(ptr noundef %q) #20
  %unused_hctx_list = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 53
  %24 = ptrtoint ptr %unused_hctx_list to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %unused_hctx_list, ptr %unused_hctx_list, align 4
  %prev.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 53, i32 1
  %25 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %unused_hctx_list, ptr %prev.i, align 4
  %unused_hctx_lock = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 54
  tail call void @__raw_spin_lock_init(ptr noundef %unused_hctx_lock, ptr noundef nonnull @.str.11, ptr noundef nonnull @blk_mq_init_allocated_queue.__key, i16 noundef signext 3) #20
  tail call fastcc void @blk_mq_realloc_hw_ctxs(ptr noundef %set, ptr noundef %q)
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %26 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool56.not = icmp eq i32 %27, 0
  br i1 %tobool56.not, label %err_hctxs, label %do.body59

do.body59:                                        ; preds = %if.end51
  %timeout_work = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 30
  tail call void @__init_work(ptr noundef %timeout_work, i32 noundef 0) #20
  %28 = ptrtoint ptr %timeout_work to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -64, ptr %timeout_work, align 8
  %lockdep_map = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 30, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.13, ptr noundef nonnull @blk_mq_init_allocated_queue.__key.12, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #20
  %entry63 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 30, i32 1
  %29 = ptrtoint ptr %entry63 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %entry63, ptr %entry63, align 4
  %prev.i158 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 30, i32 1, i32 1
  %30 = ptrtoint ptr %prev.i158 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %entry63, ptr %prev.i158, align 4
  %func = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 30, i32 2
  %31 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @blk_mq_timeout_work, ptr %func, align 4
  %timeout = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 8
  %32 = ptrtoint ptr %timeout to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %timeout, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool67.not = icmp eq i32 %33, 0
  %spec.select = select i1 %tobool67.not, i32 3000, i32 %33
  tail call void @blk_queue_rq_timeout(ptr noundef %q, i32 noundef %spec.select) #20
  %tag_set = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 61
  %34 = ptrtoint ptr %tag_set to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %set, ptr %tag_set, align 8
  %35 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %queue_flags, align 8
  %or = or i32 %36, 536871056
  store i32 %or, ptr %queue_flags, align 8
  %nr_maps = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 1
  %37 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %nr_maps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %38)
  %cmp70 = icmp ugt i32 %38, 2
  br i1 %cmp70, label %land.lhs.true, label %do.body59.do.body75_crit_edge

do.body59.do.body75_crit_edge:                    ; preds = %do.body59
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body75

land.lhs.true:                                    ; preds = %do.body59
  %nr_queues = getelementptr [3 x %struct.blk_mq_queue_map], ptr %set, i32 0, i32 2, i32 1
  %39 = ptrtoint ptr %nr_queues to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %nr_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool71.not = icmp eq i32 %40, 0
  br i1 %tobool71.not, label %land.lhs.true.do.body75_crit_edge, label %if.then72

land.lhs.true.do.body75_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body75

if.then72:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_queue_flag_set(i32 noundef 16, ptr noundef %q) #20
  br label %do.body75

do.body75:                                        ; preds = %if.then72, %land.lhs.true.do.body75_crit_edge, %do.body59.do.body75_crit_edge
  %requeue_work = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 50
  tail call void @__init_work(ptr noundef %requeue_work, i32 noundef 0) #20
  %41 = ptrtoint ptr %requeue_work to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 -64, ptr %requeue_work, align 4
  %lockdep_map83 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 50, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map83, ptr noundef nonnull @.str.15, ptr noundef nonnull @blk_mq_init_allocated_queue.__key.14, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #20
  %entry86 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 50, i32 0, i32 1
  %42 = ptrtoint ptr %entry86 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %entry86, ptr %entry86, align 4
  %prev.i159 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 50, i32 0, i32 1, i32 1
  %43 = ptrtoint ptr %prev.i159 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %entry86, ptr %prev.i159, align 4
  %func89 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 50, i32 0, i32 2
  %44 = ptrtoint ptr %func89 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr @blk_mq_requeue_work, ptr %func89, align 4
  %timer = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 50, i32 1
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.17, ptr noundef nonnull @blk_mq_init_allocated_queue.__key.16) #20
  %requeue_list = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 48
  %45 = ptrtoint ptr %requeue_list to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %requeue_list, ptr %requeue_list, align 4
  %prev.i160 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 48, i32 1
  %46 = ptrtoint ptr %prev.i160 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %requeue_list, ptr %prev.i160, align 4
  %requeue_lock = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 49
  tail call void @__raw_spin_lock_init(ptr noundef %requeue_lock, ptr noundef nonnull @.str.19, ptr noundef nonnull @blk_mq_init_allocated_queue.__key.18, i16 noundef signext 3) #20
  %queue_depth = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 4
  %47 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %queue_depth, align 4
  %nr_requests = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 21
  %49 = ptrtoint ptr %nr_requests to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %nr_requests, align 8
  %poll_nsec = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 26
  %50 = ptrtoint ptr %poll_nsec to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 -1, ptr %poll_nsec, align 4
  %call41.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %51 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call41.i, i32 %51)
  %cmp42.i = icmp ult i32 %call41.i, %51
  br i1 %cmp42.i, label %for.body.lr.ph.i, label %do.body75.blk_mq_init_cpu_queues.exit_crit_edge

do.body75.blk_mq_init_cpu_queues.exit_crit_edge:  ; preds = %do.body75
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_init_cpu_queues.exit

for.body.lr.ph.i:                                 ; preds = %do.body75
  %nr_hw_queues102 = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 3
  %52 = ptrtoint ptr %nr_hw_queues102 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %nr_hw_queues102, align 4
  %54 = ptrtoint ptr %tag_set to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %tag_set, align 8
  %nr_maps.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %55, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %53)
  %cmp14.i = icmp ugt i32 %53, 1
  %queue_hw_ctx.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %for.body.i165

for.cond.loopexit.i:                              ; preds = %for.inc17.i.for.cond.loopexit.i_crit_edge, %for.body.i165.for.cond.loopexit.i_crit_edge
  %call.i = tail call i32 @cpumask_next(i32 noundef %call43.i, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %56 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i162 = icmp ult i32 %call.i, %56
  br i1 %cmp.i162, label %for.cond.loopexit.i.for.body.i165_crit_edge, label %for.cond.loopexit.i.blk_mq_init_cpu_queues.exit_crit_edge

for.cond.loopexit.i.blk_mq_init_cpu_queues.exit_crit_edge: ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_init_cpu_queues.exit

for.cond.loopexit.i.for.body.i165_crit_edge:      ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i165

for.body.i165:                                    ; preds = %for.cond.loopexit.i.for.body.i165_crit_edge, %for.body.lr.ph.i
  %call43.i = phi i32 [ %call41.i, %for.body.lr.ph.i ], [ %call.i, %for.cond.loopexit.i.for.body.i165_crit_edge ]
  %57 = ptrtoint ptr %queue_ctx11.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %queue_ctx11.i, align 4
  %59 = ptrtoint ptr %58 to i32
  %arrayidx.i163 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call43.i
  %60 = ptrtoint ptr %arrayidx.i163 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx.i163, align 4
  %add.i164 = add i32 %61, %59
  %62 = inttoptr i32 %add.i164 to ptr
  %cpu.i = getelementptr inbounds %struct.blk_mq_ctx, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %cpu.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %call43.i, ptr %cpu.i, align 128
  tail call void @__raw_spin_lock_init(ptr noundef %62, ptr noundef nonnull @.str.51, ptr noundef nonnull @blk_mq_init_cpu_queues.__key, i16 noundef signext 3) #20
  %arrayidx9.i = getelementptr %struct.anon, ptr %62, i32 0, i32 1, i32 0
  %64 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %arrayidx9.i, ptr %arrayidx9.i, align 4
  %prev.i.i = getelementptr %struct.anon, ptr %62, i32 0, i32 1, i32 0, i32 1
  %65 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %arrayidx9.i, ptr %prev.i.i, align 4
  %arrayidx9.1.i = getelementptr %struct.anon, ptr %62, i32 0, i32 1, i32 1
  %66 = ptrtoint ptr %arrayidx9.1.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile ptr %arrayidx9.1.i, ptr %arrayidx9.1.i, align 4
  %prev.i.1.i = getelementptr %struct.anon, ptr %62, i32 0, i32 1, i32 1, i32 1
  %67 = ptrtoint ptr %prev.i.1.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %arrayidx9.1.i, ptr %prev.i.1.i, align 4
  %arrayidx9.2.i = getelementptr %struct.anon, ptr %62, i32 0, i32 1, i32 2
  %68 = ptrtoint ptr %arrayidx9.2.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store volatile ptr %arrayidx9.2.i, ptr %arrayidx9.2.i, align 4
  %prev.i.2.i = getelementptr %struct.anon, ptr %62, i32 0, i32 1, i32 2, i32 1
  %69 = ptrtoint ptr %prev.i.2.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %arrayidx9.2.i, ptr %prev.i.2.i, align 4
  %queue.i = getelementptr inbounds %struct.blk_mq_ctx, ptr %62, i32 0, i32 4
  %70 = ptrtoint ptr %queue.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %q, ptr %queue.i, align 8
  %71 = ptrtoint ptr %nr_maps.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %nr_maps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %cmp1138.not.i = icmp eq i32 %72, 0
  br i1 %cmp1138.not.i, label %for.body.i165.for.cond.loopexit.i_crit_edge, label %for.body.i165.for.body12.i_crit_edge

for.body.i165.for.body12.i_crit_edge:             ; preds = %for.body.i165
  br label %for.body12.i

for.body.i165.for.cond.loopexit.i_crit_edge:      ; preds = %for.body.i165
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.loopexit.i

for.body12.i:                                     ; preds = %for.inc17.i.for.body12.i_crit_edge, %for.body.i165.for.body12.i_crit_edge
  %j.039.i = phi i32 [ %inc18.i, %for.inc17.i.for.body12.i_crit_edge ], [ 0, %for.body.i165.for.body12.i_crit_edge ]
  br i1 %cmp14.i, label %land.lhs.true.i, label %for.body12.i.for.inc17.i_crit_edge

for.body12.i.for.inc17.i_crit_edge:               ; preds = %for.body12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc17.i

land.lhs.true.i:                                  ; preds = %for.body12.i
  %73 = ptrtoint ptr %queue_hw_ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %queue_hw_ctx.i.i, align 4
  %75 = ptrtoint ptr %tag_set to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %tag_set, align 8
  %arrayidx.i.i = getelementptr [3 x %struct.blk_mq_queue_map], ptr %76, i32 0, i32 %j.039.i
  %77 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %arrayidx.i.i, align 4
  %arrayidx1.i.i = getelementptr i32, ptr %78, i32 %call43.i
  %79 = ptrtoint ptr %arrayidx1.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %arrayidx1.i.i, align 4
  %arrayidx2.i.i = getelementptr ptr, ptr %74, i32 %80
  %81 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %arrayidx2.i.i, align 4
  %numa_node.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %82, i32 0, i32 23
  %83 = ptrtoint ptr %numa_node.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %numa_node.i, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %84)
  %cmp15.i = icmp eq i32 %84, -1
  br i1 %cmp15.i, label %if.then.i, label %land.lhs.true.i.for.inc17.i_crit_edge

land.lhs.true.i.for.inc17.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc17.i

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %85 = ptrtoint ptr %numa_node.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 0, ptr %numa_node.i, align 128
  br label %for.inc17.i

for.inc17.i:                                      ; preds = %if.then.i, %land.lhs.true.i.for.inc17.i_crit_edge, %for.body12.i.for.inc17.i_crit_edge
  %inc18.i = add nuw i32 %j.039.i, 1
  %86 = ptrtoint ptr %nr_maps.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %nr_maps.i, align 4
  %cmp11.i = icmp ult i32 %inc18.i, %87
  br i1 %cmp11.i, label %for.inc17.i.for.body12.i_crit_edge, label %for.inc17.i.for.cond.loopexit.i_crit_edge

for.inc17.i.for.cond.loopexit.i_crit_edge:        ; preds = %for.inc17.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.loopexit.i

for.inc17.i.for.body12.i_crit_edge:               ; preds = %for.inc17.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body12.i

blk_mq_init_cpu_queues.exit:                      ; preds = %for.cond.loopexit.i.blk_mq_init_cpu_queues.exit_crit_edge, %do.body75.blk_mq_init_cpu_queues.exit_crit_edge
  %tag_list_lock.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 13
  tail call void @mutex_lock_nested(ptr noundef %tag_list_lock.i, i32 noundef 0) #20
  %tag_list.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 14
  %88 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile ptr, ptr %tag_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %89, %tag_list.i
  br i1 %cmp.i.not.i, label %blk_mq_init_cpu_queues.exit.if.end.i168_crit_edge, label %land.lhs.true.i166

blk_mq_init_cpu_queues.exit.if.end.i168_crit_edge: ; preds = %blk_mq_init_cpu_queues.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i168

land.lhs.true.i166:                               ; preds = %blk_mq_init_cpu_queues.exit
  %90 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %flags, align 4
  %and.i = and i32 %91, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.then.i167, label %land.lhs.true.i166.if.end.i168_crit_edge

land.lhs.true.i166.if.end.i168_crit_edge:         ; preds = %land.lhs.true.i166
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i168

if.then.i167:                                     ; preds = %land.lhs.true.i166
  call void @__sanitizer_cov_trace_pc() #22
  %or.i = or i32 %91, 2
  %92 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %or.i, ptr %flags, align 4
  tail call fastcc void @blk_mq_update_tag_set_shared(ptr noundef %set, i1 noundef zeroext true) #20
  br label %if.end.i168

if.end.i168:                                      ; preds = %if.then.i167, %land.lhs.true.i166.if.end.i168_crit_edge, %blk_mq_init_cpu_queues.exit.if.end.i168_crit_edge
  %93 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %flags, align 4
  %and4.i = and i32 %94, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %if.end.i168.if.end7.i_crit_edge, label %if.then6.i

if.end.i168.if.end7.i_crit_edge:                  ; preds = %if.end.i168
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7.i

if.then6.i:                                       ; preds = %if.end.i168
  %95 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %cmp8.not.i.i = icmp eq i32 %96, 0
  br i1 %cmp8.not.i.i, label %if.then6.i.if.end7.i_crit_edge, label %land.rhs.lr.ph.i.i

if.then6.i.if.end7.i_crit_edge:                   ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7.i

land.rhs.lr.ph.i.i:                               ; preds = %if.then6.i
  %queue_hw_ctx.i.i169 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %land.rhs.i.i.land.rhs.i.i_crit_edge, %land.rhs.lr.ph.i.i
  %i.09.i.i = phi i32 [ 0, %land.rhs.lr.ph.i.i ], [ %inc.i.i, %land.rhs.i.i.land.rhs.i.i_crit_edge ]
  %97 = ptrtoint ptr %queue_hw_ctx.i.i169 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %queue_hw_ctx.i.i169, align 4
  %arrayidx.i.i170 = getelementptr ptr, ptr %98, i32 %i.09.i.i
  %99 = ptrtoint ptr %arrayidx.i.i170 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %arrayidx.i.i170, align 4
  %flags.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %100, i32 0, i32 5
  %101 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %flags.i.i, align 16
  %or.i.i = or i32 %102, 2
  store i32 %or.i.i, ptr %flags.i.i, align 16
  %inc.i.i = add nuw i32 %i.09.i.i, 1
  %103 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %nr_hw_queues, align 8
  %cmp.i18.i = icmp ult i32 %inc.i.i, %104
  br i1 %cmp.i18.i, label %land.rhs.i.i.land.rhs.i.i_crit_edge, label %land.rhs.i.i.if.end7.i_crit_edge

land.rhs.i.i.if.end7.i_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7.i

land.rhs.i.i.land.rhs.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs.i.i

if.end7.i:                                        ; preds = %land.rhs.i.i.if.end7.i_crit_edge, %if.then6.i.if.end7.i_crit_edge, %if.end.i168.if.end7.i_crit_edge
  %tag_set_list.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 62
  %prev.i.i171 = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 14, i32 1
  %105 = ptrtoint ptr %prev.i.i171 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %prev.i.i171, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %tag_set_list.i, ptr noundef %106, ptr noundef %tag_list.i) #20
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end7.i.blk_mq_add_queue_tag_set.exit_crit_edge

if.end7.i.blk_mq_add_queue_tag_set.exit_crit_edge: ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_add_queue_tag_set.exit

if.end.i.i.i:                                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  %107 = ptrtoint ptr %prev.i.i171 to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %tag_set_list.i, ptr %prev.i.i171, align 4
  %108 = ptrtoint ptr %tag_set_list.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr %tag_list.i, ptr %tag_set_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 62, i32 1
  %109 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr %106, ptr %prev3.i.i.i, align 4
  %110 = ptrtoint ptr %106 to i32
  call void @__asan_store4_noabort(i32 %110)
  store volatile ptr %tag_set_list.i, ptr %106, align 4
  br label %blk_mq_add_queue_tag_set.exit

blk_mq_add_queue_tag_set.exit:                    ; preds = %if.end.i.i.i, %if.end7.i.blk_mq_add_queue_tag_set.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %tag_list_lock.i) #20
  tail call fastcc void @blk_mq_map_swqueue(ptr noundef %q)
  br label %return

err_hctxs:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #22
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %111 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %queue_hw_ctx, align 4
  tail call void @kfree(ptr noundef %112) #20
  %113 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 0, ptr %nr_hw_queues, align 8
  tail call void @blk_mq_sysfs_deinit(ptr noundef %q) #20
  br label %err_poll

err_poll:                                         ; preds = %err_hctxs, %fail.i, %if.end47.err_poll_crit_edge
  %114 = ptrtoint ptr %poll_cb to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %poll_cb, align 8
  tail call void @blk_stat_free_callback(ptr noundef %115) #20
  %116 = ptrtoint ptr %poll_cb to i32
  call void @__asan_store4_noabort(i32 %116)
  store ptr null, ptr %poll_cb, align 8
  br label %err_exit

err_exit:                                         ; preds = %err_poll, %if.end35.err_exit_crit_edge
  %117 = ptrtoint ptr %mq_ops to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr null, ptr %mq_ops, align 8
  br label %return

return:                                           ; preds = %err_exit, %blk_mq_add_queue_tag_set.exit
  %retval.0 = phi i32 [ -12, %err_exit ], [ 0, %blk_mq_add_queue_tag_set.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @blk_stat_alloc_callback(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @blk_mq_poll_stats_fn(ptr nocapture noundef readonly %cb) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %data = getelementptr inbounds %struct.blk_stat_callback, ptr %cb, i32 0, i32 7
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %stat = getelementptr inbounds %struct.blk_stat_callback, ptr %cb, i32 0, i32 5
  %poll_stat = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 28
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %bucket.010 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %stat to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %stat, align 4
  %nr_samples = getelementptr %struct.blk_rq_stat, ptr %3, i32 %bucket.010, i32 3
  %4 = ptrtoint ptr %nr_samples to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_samples, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx = getelementptr %struct.blk_rq_stat, ptr %3, i32 %bucket.010
  %6 = ptrtoint ptr %poll_stat to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %poll_stat, align 4
  %arrayidx1 = getelementptr %struct.blk_rq_stat, ptr %7, i32 %bucket.010
  %8 = call ptr @memcpy(ptr %arrayidx1, ptr %arrayidx, i32 40)
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %bucket.010, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @blk_mq_poll_stats_bkt(ptr nocapture noundef readonly %rq) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %cmd_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 3
  %0 = ptrtoint ptr %cmd_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cmd_flags, align 4
  %stats_sectors.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 18
  %2 = ptrtoint ptr %stats_sectors.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %stats_sectors.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i.i = icmp eq i16 %3, 0
  %conv.i = zext i16 %3 to i32
  %4 = tail call i32 @llvm.ctlz.i32(i32 %conv.i, i1 true) #20, !range !353
  %and.i = and i32 %1, 1
  %sub.i.op.i = shl nuw nsw i32 %4, 1
  %sub.i.op.i.op = xor i32 %sub.i.op.i, 62
  %mul = select i1 %tobool.not.i.i, i32 -2, i32 %sub.i.op.i.op
  %add = or i32 %mul, %and.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %add)
  %cmp10 = icmp sgt i32 %add, 15
  %5 = or i32 %and.i, 14
  %spec.select = select i1 %cmp10, i32 %5, i32 %add
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %add)
  %cmp8.inv = icmp sgt i32 %add, -1
  %retval.0 = select i1 %cmp8.inv, i32 %spec.select, i32 -1
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_sysfs_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @blk_mq_realloc_hw_ctxs(ptr noundef %set, ptr noundef %q) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %0 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queue_hw_ctx, align 4
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %2 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_hw_queues, align 8
  %nr_hw_queues1 = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 3
  %4 = ptrtoint ptr %nr_hw_queues1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_hw_queues1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %5)
  %cmp = icmp ult i32 %3, %5
  br i1 %cmp, label %if.then, label %entry.if.end9_crit_edge

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

if.then:                                          ; preds = %entry
  %6 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %5, i32 4) #20
  %7 = extractvalue { i32, i1 } %6, 1
  br i1 %7, label %if.then.cleanup64_crit_edge, label %if.end7.i.i, !prof !300

if.then.cleanup64_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup64

if.end7.i.i:                                      ; preds = %if.then
  %8 = extractvalue { i32, i1 } %6, 0
  %call.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %8, i32 noundef 3520) #25
  %tobool.not = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not, label %if.end7.i.i.cleanup64_crit_edge, label %if.end

if.end7.i.i.cleanup64_crit_edge:                  ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup64

if.end:                                           ; preds = %if.end7.i.i
  %tobool4.not = icmp eq ptr %1, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.then5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %9 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nr_hw_queues, align 8
  %mul = shl i32 %10, 2
  %11 = call ptr @memcpy(ptr %call.i.i.i, ptr %1, i32 %mul)
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %if.end.cleanup_crit_edge
  %12 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call.i.i.i, ptr %queue_hw_ctx, align 4
  tail call void @kfree(ptr noundef %1) #20
  br label %if.end9

if.end9:                                          ; preds = %cleanup, %entry.if.end9_crit_edge
  %hctxs.1 = phi ptr [ %call.i.i.i, %cleanup ], [ %1, %entry.if.end9_crit_edge ]
  %sysfs_lock = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 51
  tail call void @mutex_lock_nested(ptr noundef %sysfs_lock, i32 noundef 0) #20
  %13 = ptrtoint ptr %nr_hw_queues1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %nr_hw_queues1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp11158.not = icmp eq i32 %14, 0
  br i1 %cmp11158.not, label %if.end9.for.end_crit_edge, label %for.body.lr.ph

if.end9.for.end_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end9
  %unused_hctx_lock.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 54
  %unused_hctx_list.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 53
  %numa_node.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 7
  %flags.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %cmd_size.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 6
  %tags.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  %ops.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 2
  %driver_data.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 10
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0159 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %call12 = tail call i32 @blk_mq_hw_queue_to_node(ptr noundef %set, i32 noundef %i.0159) #20
  %arrayidx13 = getelementptr ptr, ptr %hctxs.1, i32 %i.0159
  %15 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx13, align 4
  %tobool14.not = icmp eq ptr %16, null
  br i1 %tobool14.not, label %for.body.if.end19_crit_edge, label %land.lhs.true

for.body.if.end19_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

land.lhs.true:                                    ; preds = %for.body
  %numa_node16 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %numa_node16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %numa_node16, align 128
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %call12)
  %cmp17 = icmp eq i32 %18, %call12
  br i1 %cmp17, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.if.end19_crit_edge

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.end19:                                         ; preds = %land.lhs.true.if.end19_crit_edge, %for.body.if.end19_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %unused_hctx_lock.i) #20
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end19
  %.pn.in.i = phi ptr [ %unused_hctx_list.i, %if.end19 ], [ %.pn.i, %for.body.i.for.cond.i_crit_edge ]
  %19 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %unused_hctx_list.i
  br i1 %cmp.not.i, label %for.cond.i.if.then14.critedge.i_crit_edge, label %for.body.i

for.cond.i.if.then14.critedge.i_crit_edge:        ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14.critedge.i

for.body.i:                                       ; preds = %for.cond.i
  %numa_node.i = getelementptr i8, ptr %.pn.i, i32 -172
  %20 = ptrtoint ptr %numa_node.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %numa_node.i, align 128
  %cmp3.i = icmp eq i32 %21, %call12
  br i1 %cmp3.i, label %for.end.i, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i

for.end.i:                                        ; preds = %for.body.i
  %tmp.0.le.i = getelementptr i8, ptr %.pn.i, i32 -556
  %tobool.not.i = icmp eq ptr %tmp.0.le.i, null
  br i1 %tobool.not.i, label %for.end.i.if.then14.critedge.i_crit_edge, label %if.then9.i

for.end.i.if.then14.critedge.i_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14.critedge.i

if.then9.i:                                       ; preds = %for.end.i
  %call.i.i.i133 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.i) #20
  br i1 %call.i.i.i133, label %if.end.i.i.i134, label %if.then9.i.list_del_init.exit.i_crit_edge

if.then9.i.list_del_init.exit.i_crit_edge:        ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit.i

if.end.i.i.i134:                                  ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.i, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %prev.i.i.i, align 4
  %24 = ptrtoint ptr %.pn.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %.pn.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %23, ptr %prev1.i.i.i.i, align 4
  %27 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %25, ptr %23, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i134, %if.then9.i.list_del_init.exit.i_crit_edge
  %28 = ptrtoint ptr %.pn.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %.pn.i, ptr %.pn.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.i, i32 0, i32 1
  %29 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %.pn.i, ptr %prev.i3.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %unused_hctx_lock.i) #20
  br label %if.end18.i

if.then14.critedge.i:                             ; preds = %for.end.i.if.then14.critedge.i_crit_edge, %for.cond.i.if.then14.critedge.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %unused_hctx_lock.i) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %30 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call.i.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %30, i32 noundef 77056, i32 noundef 640) #26
  %tobool.not.i.i = icmp eq ptr %call.i.i.i.i.i, null
  br i1 %tobool.not.i.i, label %if.then14.critedge.i.if.else_crit_edge, label %if.end.i.i135

if.then14.critedge.i.if.else_crit_edge:           ; preds = %if.then14.critedge.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.end.i.i135:                                    ; preds = %if.then14.critedge.i
  %cpumask.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 2
  %call1.i.i = tail call zeroext i1 @zalloc_cpumask_var_node(ptr noundef %cpumask.i.i, i32 noundef 76800, i32 noundef %call12) #20
  br i1 %call1.i.i, label %if.end3.i.i, label %if.end.i.i135.free_hctx.i.i_crit_edge

if.end.i.i135.free_hctx.i.i_crit_edge:            ; preds = %if.end.i.i135
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_hctx.i.i

if.end3.i.i:                                      ; preds = %if.end.i.i135
  %nr_active.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 25
  %call.i.i.i.i136 = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_active.i.i, i32 noundef 4) #20
  %31 = ptrtoint ptr %nr_active.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile i32 0, ptr %nr_active.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call12)
  %cmp.i.i = icmp eq i32 %call12, -1
  br i1 %cmp.i.i, label %if.then4.i.i, label %if.end3.i.i.if.end5.i.i_crit_edge

if.end3.i.i.if.end5.i.i_crit_edge:                ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %32 = ptrtoint ptr %numa_node.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %numa_node.i.i, align 4
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.end3.i.i.if.end5.i.i_crit_edge
  %node.addr.0.i.i = phi i32 [ %33, %if.then4.i.i ], [ %call12, %if.end3.i.i.if.end5.i.i_crit_edge ]
  %numa_node6.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 23
  %34 = ptrtoint ptr %numa_node6.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %node.addr.0.i.i, ptr %numa_node6.i.i, align 128
  %run_work.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 1
  tail call void @__init_work(ptr noundef %run_work.i.i, i32 noundef 0) #20
  %35 = ptrtoint ptr %run_work.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 -64, ptr %run_work.i.i, align 128
  %lockdep_map.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 1, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map.i.i, ptr noundef nonnull @.str.44, ptr noundef nonnull @blk_mq_alloc_hctx.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #20
  %entry14.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 1, i32 0, i32 1
  %36 = ptrtoint ptr %entry14.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %entry14.i.i, ptr %entry14.i.i, align 4
  %prev.i.i40.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 1, i32 0, i32 1, i32 1
  %37 = ptrtoint ptr %prev.i.i40.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %entry14.i.i, ptr %prev.i.i40.i, align 8
  %func.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 1, i32 0, i32 2
  %38 = ptrtoint ptr %func.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @blk_mq_run_work_fn, ptr %func.i.i, align 4
  %timer.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 1, i32 1
  tail call void @init_timer_key(ptr noundef %timer.i.i, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.46, ptr noundef nonnull @blk_mq_alloc_hctx.__key.45) #20
  tail call void @__raw_spin_lock_init(ptr noundef nonnull %call.i.i.i.i.i, ptr noundef nonnull @.str.48, ptr noundef nonnull @blk_mq_alloc_hctx.__key.47, i16 noundef signext 3) #20
  %dispatch.i.i = getelementptr inbounds %struct.anon.3, ptr %call.i.i.i.i.i, i32 0, i32 1
  %39 = ptrtoint ptr %dispatch.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %dispatch.i.i, ptr %dispatch.i.i, align 4
  %prev.i94.i.i = getelementptr inbounds %struct.anon.3, ptr %call.i.i.i.i.i, i32 0, i32 1, i32 1
  %40 = ptrtoint ptr %prev.i94.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %dispatch.i.i, ptr %prev.i94.i.i, align 8
  %queue.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 7
  %41 = ptrtoint ptr %queue.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %q, ptr %queue.i.i, align 8
  %42 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %43, -3
  %flags27.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 5
  %44 = ptrtoint ptr %flags27.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %and.i.i, ptr %flags27.i.i, align 16
  %hctx_list.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 31
  %45 = ptrtoint ptr %hctx_list.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %hctx_list.i.i, ptr %hctx_list.i.i, align 4
  %prev.i95.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 31, i32 1
  %46 = ptrtoint ptr %prev.i95.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %hctx_list.i.i, ptr %prev.i95.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %47 = load i32, ptr @nr_cpu_ids, align 4
  %48 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %47, i32 4) #20
  %49 = extractvalue { i32, i1 } %48, 1
  br i1 %49, label %kmalloc_array_node.exit.thread.i.i, label %if.end7.i.i.i, !prof !300

kmalloc_array_node.exit.thread.i.i:               ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %ctxs100.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 15
  %50 = ptrtoint ptr %ctxs100.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr null, ptr %ctxs100.i.i, align 8
  br label %free_cpumask.i.i

if.end7.i.i.i:                                    ; preds = %if.end5.i.i
  %51 = extractvalue { i32, i1 } %48, 0
  %call.i.i97.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %51, i32 noundef 76800) #25
  %ctxs.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 15
  %52 = ptrtoint ptr %ctxs.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %call.i.i97.i.i, ptr %ctxs.i.i, align 8
  %tobool30.not.i.i = icmp eq ptr %call.i.i97.i.i, null
  br i1 %tobool30.not.i.i, label %if.end7.i.i.i.free_cpumask.i.i_crit_edge, label %if.end32.i.i

if.end7.i.i.i.free_cpumask.i.i_crit_edge:         ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_cpumask.i.i

if.end32.i.i:                                     ; preds = %if.end7.i.i.i
  %ctx_map.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %53 = load i32, ptr @nr_cpu_ids, align 4
  %call33.i.i = tail call i32 @sbitmap_init_node(ptr noundef %ctx_map.i.i, i32 noundef %53, i32 noundef 3, i32 noundef 76800, i32 noundef %node.addr.0.i.i, i1 noundef zeroext false, i1 noundef zeroext false) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i.i)
  %tobool34.not.i.i = icmp eq i32 %call33.i.i, 0
  br i1 %tobool34.not.i.i, label %if.end36.i.i, label %if.end32.i.i.free_ctxs.i.i_crit_edge

if.end32.i.i.free_ctxs.i.i_crit_edge:             ; preds = %if.end32.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_ctxs.i.i

if.end36.i.i:                                     ; preds = %if.end32.i.i
  %nr_ctx.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 14
  %54 = ptrtoint ptr %nr_ctx.i.i to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 0, ptr %nr_ctx.i.i, align 2
  %dispatch_wait_lock.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 16
  tail call void @__raw_spin_lock_init(ptr noundef %dispatch_wait_lock.i.i, ptr noundef nonnull @.str.50, ptr noundef nonnull @blk_mq_alloc_hctx.__key.49, i16 noundef signext 3) #20
  %dispatch_wait.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 17
  %55 = ptrtoint ptr %dispatch_wait.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %dispatch_wait.i.i, align 8
  %private.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 17, i32 1
  %56 = ptrtoint ptr %private.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr null, ptr %private.i.i.i, align 4
  %func1.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 17, i32 2
  %57 = ptrtoint ptr %func1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr @blk_mq_dispatch_wake, ptr %func1.i.i.i, align 8
  %entry42.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 17, i32 3
  %58 = ptrtoint ptr %entry42.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store volatile ptr %entry42.i.i, ptr %entry42.i.i, align 4
  %prev.i98.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 17, i32 3, i32 1
  %59 = ptrtoint ptr %prev.i98.i.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %entry42.i.i, ptr %prev.i98.i.i, align 8
  %60 = ptrtoint ptr %numa_node6.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %numa_node6.i.i, align 128
  %62 = ptrtoint ptr %cmd_size.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %cmd_size.i.i, align 4
  %call44.i.i = tail call ptr @blk_alloc_flush_queue(i32 noundef %61, i32 noundef %63, i32 noundef 76800) #20
  %fq.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 8
  %64 = ptrtoint ptr %fq.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %call44.i.i, ptr %fq.i.i, align 4
  %tobool46.not.i.i = icmp eq ptr %call44.i.i, null
  br i1 %tobool46.not.i.i, label %free_bitmap.i.i, label %if.end48.i.i

if.end48.i.i:                                     ; preds = %if.end36.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_hctx_kobj_init(ptr noundef nonnull %call.i.i.i.i.i) #20
  br label %if.end18.i

free_bitmap.i.i:                                  ; preds = %if.end36.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %alloc_hint.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 10, i32 5
  %65 = ptrtoint ptr %alloc_hint.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %alloc_hint.i.i.i, align 8
  tail call void @free_percpu(ptr noundef %66) #20
  %map.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %call.i.i.i.i.i, i32 0, i32 10, i32 4
  %67 = ptrtoint ptr %map.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %map.i.i.i, align 4
  tail call void @kfree(ptr noundef %68) #20
  %69 = ptrtoint ptr %map.i.i.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr null, ptr %map.i.i.i, align 4
  br label %free_ctxs.i.i

free_ctxs.i.i:                                    ; preds = %free_bitmap.i.i, %if.end32.i.i.free_ctxs.i.i_crit_edge
  %70 = ptrtoint ptr %ctxs.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %ctxs.i.i, align 8
  tail call void @kfree(ptr noundef %71) #20
  br label %free_cpumask.i.i

free_cpumask.i.i:                                 ; preds = %free_ctxs.i.i, %if.end7.i.i.i.free_cpumask.i.i_crit_edge, %kmalloc_array_node.exit.thread.i.i
  %72 = ptrtoint ptr %cpumask.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %cpumask.i.i, align 4
  tail call void @free_cpumask_var(ptr noundef %73) #20
  br label %free_hctx.i.i

free_hctx.i.i:                                    ; preds = %free_cpumask.i.i, %if.end.i.i135.free_hctx.i.i_crit_edge
  tail call void @kfree(ptr noundef nonnull %call.i.i.i.i.i) #20
  br label %if.else

if.end18.i:                                       ; preds = %if.end48.i.i, %list_del_init.exit.i
  %hctx.1.i = phi ptr [ %tmp.0.le.i, %list_del_init.exit.i ], [ %call.i.i.i.i.i, %if.end48.i.i ]
  %queue_num.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1.i, i32 0, i32 24
  %74 = ptrtoint ptr %queue_num.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %i.0159, ptr %queue_num.i.i, align 4
  %flags.i42.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1.i, i32 0, i32 5
  %75 = ptrtoint ptr %flags.i42.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %flags.i42.i, align 16
  %and.i43.i = and i32 %76, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i43.i)
  %tobool.not.i44.i = icmp eq i32 %and.i43.i, 0
  br i1 %tobool.not.i44.i, label %if.then.i.i, label %if.end18.i.if.end.i46.i_crit_edge

if.end18.i.if.end.i46.i_crit_edge:                ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i46.i

if.then.i.i:                                      ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #22
  %cpuhp_online.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1.i, i32 0, i32 26
  %call.i.i45.i = tail call i32 @__cpuhp_state_add_instance(i32 noundef 156, ptr noundef %cpuhp_online.i.i, i1 noundef zeroext false) #20
  br label %if.end.i46.i

if.end.i46.i:                                     ; preds = %if.then.i.i, %if.end18.i.if.end.i46.i_crit_edge
  %cpuhp_dead.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1.i, i32 0, i32 27
  %call.i1.i.i = tail call i32 @__cpuhp_state_add_instance(i32 noundef 26, ptr noundef %cpuhp_dead.i.i, i1 noundef zeroext false) #20
  %77 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %tags.i.i, align 4
  %arrayidx.i.i = getelementptr ptr, ptr %78, i32 %i.0159
  %79 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %arrayidx.i.i, align 4
  %tags2.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1.i, i32 0, i32 19
  %81 = ptrtoint ptr %tags2.i.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %80, ptr %tags2.i.i, align 16
  %82 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ops.i.i, align 4
  %init_hctx.i.i = getelementptr inbounds %struct.blk_mq_ops, ptr %83, i32 0, i32 10
  %84 = ptrtoint ptr %init_hctx.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %init_hctx.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %85, null
  br i1 %tobool3.not.i.i, label %if.end.i46.i.if.end9.i.i_crit_edge, label %land.lhs.true.i.i

if.end.i46.i.if.end9.i.i_crit_edge:               ; preds = %if.end.i46.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i46.i
  %86 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %driver_data.i.i, align 4
  %call6.i.i = tail call i32 %85(ptr noundef nonnull %hctx.1.i, ptr noundef %87, i32 noundef %i.0159) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i.i.if.end9.i.i_crit_edge, label %land.lhs.true.i.i.unregister_cpu_notifier.i.i_crit_edge

land.lhs.true.i.i.unregister_cpu_notifier.i.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %unregister_cpu_notifier.i.i

land.lhs.true.i.i.if.end9.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %land.lhs.true.i.i.if.end9.i.i_crit_edge, %if.end.i46.i.if.end9.i.i_crit_edge
  %fq.i47.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1.i, i32 0, i32 8
  %88 = ptrtoint ptr %fq.i47.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %fq.i47.i, align 4
  %flush_rq.i.i = getelementptr inbounds %struct.blk_flush_queue, ptr %89, i32 0, i32 5
  %90 = ptrtoint ptr %flush_rq.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %flush_rq.i.i, align 4
  %92 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %ops.i.i, align 4
  %init_request.i.i.i = getelementptr inbounds %struct.blk_mq_ops, ptr %93, i32 0, i32 12
  %94 = ptrtoint ptr %init_request.i.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %init_request.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %95, null
  br i1 %tobool.not.i.i.i, label %if.end9.i.i.if.then22_crit_edge, label %if.then.i.i.i139

if.end9.i.i.if.then22_crit_edge:                  ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then22

if.then.i.i.i139:                                 ; preds = %if.end9.i.i
  %numa_node.i48.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1.i, i32 0, i32 23
  %96 = ptrtoint ptr %numa_node.i48.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %numa_node.i48.i, align 128
  %call.i2.i.i = tail call i32 %95(ptr noundef %set, ptr noundef %91, i32 noundef %i.0159, i32 noundef %97) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i2.i.i)
  %tobool3.not.i.i.i = icmp eq i32 %call.i2.i.i, 0
  br i1 %tobool3.not.i.i.i, label %if.then.i.i.i139.if.then22_crit_edge, label %exit_hctx.i.i

if.then.i.i.i139.if.then22_crit_edge:             ; preds = %if.then.i.i.i139
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then22

exit_hctx.i.i:                                    ; preds = %if.then.i.i.i139
  %98 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %ops.i.i, align 4
  %exit_hctx15.i.i = getelementptr inbounds %struct.blk_mq_ops, ptr %99, i32 0, i32 11
  %100 = ptrtoint ptr %exit_hctx15.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %exit_hctx15.i.i, align 4
  %tobool16.not.i.i = icmp eq ptr %101, null
  br i1 %tobool16.not.i.i, label %exit_hctx.i.i.unregister_cpu_notifier.i.i_crit_edge, label %if.then17.i.i

exit_hctx.i.i.unregister_cpu_notifier.i.i_crit_edge: ; preds = %exit_hctx.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %unregister_cpu_notifier.i.i

if.then17.i.i:                                    ; preds = %exit_hctx.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %101(ptr noundef nonnull %hctx.1.i, i32 noundef %i.0159) #20
  br label %unregister_cpu_notifier.i.i

unregister_cpu_notifier.i.i:                      ; preds = %if.then17.i.i, %exit_hctx.i.i.unregister_cpu_notifier.i.i_crit_edge, %land.lhs.true.i.i.unregister_cpu_notifier.i.i_crit_edge
  %102 = ptrtoint ptr %flags.i42.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %flags.i42.i, align 16
  %and.i.i.i = and i32 %103, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i3.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i3.i.i, label %if.then.i4.i.i, label %unregister_cpu_notifier.i.i.free_hctx.i_crit_edge

unregister_cpu_notifier.i.i.free_hctx.i_crit_edge: ; preds = %unregister_cpu_notifier.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_hctx.i

if.then.i4.i.i:                                   ; preds = %unregister_cpu_notifier.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %cpuhp_online.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1.i, i32 0, i32 26
  %call.i.i.i49.i = tail call i32 @__cpuhp_state_remove_instance(i32 noundef 156, ptr noundef %cpuhp_online.i.i.i, i1 noundef zeroext false) #20
  br label %free_hctx.i

free_hctx.i:                                      ; preds = %if.then.i4.i.i, %unregister_cpu_notifier.i.i.free_hctx.i_crit_edge
  %call.i4.i.i.i140 = tail call i32 @__cpuhp_state_remove_instance(i32 noundef 26, ptr noundef %cpuhp_dead.i.i, i1 noundef zeroext false) #20
  %kobj.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx.1.i, i32 0, i32 28
  tail call void @kobject_put(ptr noundef %kobj.i) #20
  br label %if.else

if.then22:                                        ; preds = %if.then.i.i.i139.if.then22_crit_edge, %if.end9.i.i.if.then22_crit_edge
  %state.i.i.i = getelementptr inbounds %struct.request, ptr %91, i32 0, i32 25
  %104 = ptrtoint ptr %state.i.i.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store volatile i32 0, ptr %state.i.i.i, align 4
  %105 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %arrayidx13, align 4
  %tobool24.not = icmp eq ptr %106, null
  br i1 %tobool24.not, label %if.then22.if.end27_crit_edge, label %if.then25

if.then22.if.end27_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end27

if.then25:                                        ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @blk_mq_exit_hctx(ptr noundef %q, ptr noundef %set, ptr noundef nonnull %106, i32 noundef %i.0159)
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %if.then22.if.end27_crit_edge
  %107 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %hctx.1.i, ptr %arrayidx13, align 4
  br label %for.inc

if.else:                                          ; preds = %free_hctx.i, %free_hctx.i.i, %if.then14.critedge.i.if.else_crit_edge
  %108 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %arrayidx13, align 4
  %tobool30.not = icmp eq ptr %109, null
  br i1 %tobool30.not, label %if.else.for.end_crit_edge, label %do.end

if.else.for.end_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

do.end:                                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %numa_node33 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %109, i32 0, i32 23
  %110 = ptrtoint ptr %numa_node33 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %numa_node33, align 128
  %call34 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.42, i32 noundef %call12, i32 noundef %111) #23
  br label %for.inc

for.inc:                                          ; preds = %do.end, %if.end27, %land.lhs.true.for.inc_crit_edge
  %inc = add nuw i32 %i.0159, 1
  %112 = ptrtoint ptr %nr_hw_queues1 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %nr_hw_queues1, align 4
  %cmp11 = icmp ult i32 %inc, %113
  br i1 %cmp11, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.else.for.end_crit_edge, %if.end9.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %if.end9.for.end_crit_edge ], [ %i.0159, %if.else.for.end_crit_edge ], [ %inc, %for.inc.for.end_crit_edge ]
  %114 = ptrtoint ptr %nr_hw_queues1 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %nr_hw_queues1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa, i32 %115)
  %cmp43.not = icmp eq i32 %i.0.lcssa, %115
  %116 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %nr_hw_queues, align 8
  br i1 %cmp43.not, label %if.else46, label %for.end.if.end50_crit_edge

for.end.if.end50_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end50

if.else46:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  %118 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 %i.0.lcssa, ptr %nr_hw_queues, align 8
  br label %if.end50

if.end50:                                         ; preds = %if.else46, %for.end.if.end50_crit_edge
  %j.0 = phi i32 [ %i.0.lcssa, %if.else46 ], [ %117, %for.end.if.end50_crit_edge ]
  %end.0 = phi i32 [ %117, %if.else46 ], [ %i.0.lcssa, %for.end.if.end50_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %j.0, i32 %end.0)
  %cmp52163 = icmp slt i32 %j.0, %end.0
  br i1 %cmp52163, label %if.end50.for.body53_crit_edge, label %if.end50.for.end62_crit_edge

if.end50.for.end62_crit_edge:                     ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end62

if.end50.for.body53_crit_edge:                    ; preds = %if.end50
  br label %for.body53

for.body53:                                       ; preds = %if.end59.for.body53_crit_edge, %if.end50.for.body53_crit_edge
  %j.1164 = phi i32 [ %inc61, %if.end59.for.body53_crit_edge ], [ %j.0, %if.end50.for.body53_crit_edge ]
  %arrayidx55 = getelementptr ptr, ptr %hctxs.1, i32 %j.1164
  %119 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %arrayidx55, align 4
  %tobool56.not = icmp eq ptr %120, null
  br i1 %tobool56.not, label %for.body53.if.end59_crit_edge, label %if.then57

for.body53.if.end59_crit_edge:                    ; preds = %for.body53
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end59

if.then57:                                        ; preds = %for.body53
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @blk_mq_exit_hctx(ptr noundef %q, ptr noundef %set, ptr noundef nonnull %120, i32 noundef %j.1164)
  %121 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_store4_noabort(i32 %121)
  store ptr null, ptr %arrayidx55, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then57, %for.body53.if.end59_crit_edge
  %inc61 = add i32 %j.1164, 1
  %exitcond.not = icmp eq i32 %inc61, %end.0
  br i1 %exitcond.not, label %if.end59.for.end62_crit_edge, label %if.end59.for.body53_crit_edge

if.end59.for.body53_crit_edge:                    ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body53

if.end59.for.end62_crit_edge:                     ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end62

for.end62:                                        ; preds = %if.end59.for.end62_crit_edge, %if.end50.for.end62_crit_edge
  tail call void @mutex_unlock(ptr noundef %sysfs_lock) #20
  br label %cleanup64

cleanup64:                                        ; preds = %for.end62, %if.end7.i.i.cleanup64_crit_edge, %if.then.cleanup64_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @blk_mq_timeout_work(ptr noundef %work) #0 align 64 {
entry:
  %next = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -344
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %next) #20
  %0 = ptrtoint ptr %next to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %next, align 4
  %q_usage_counter = getelementptr i8, ptr %work, i32 -336
  %call = tail call fastcc zeroext i1 @percpu_ref_tryget(ptr noundef %q_usage_counter)
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @blk_mq_queue_tag_busy_iter(ptr noundef %add.ptr, ptr noundef nonnull @blk_mq_check_expired, ptr noundef nonnull %next) #20
  %1 = ptrtoint ptr %next to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %next, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp.not = icmp eq i32 %2, 0
  br i1 %cmp.not, label %for.cond.preheader, label %if.then1

for.cond.preheader:                               ; preds = %if.end
  %nr_hw_queues = getelementptr i8, ptr %work, i32 -304
  %3 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp321.not = icmp eq i32 %4, 0
  br i1 %cmp321.not, label %for.cond.preheader.if.end8_crit_edge, label %land.rhs.lr.ph

for.cond.preheader.if.end8_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

land.rhs.lr.ph:                                   ; preds = %for.cond.preheader
  %queue_hw_ctx = getelementptr i8, ptr %work, i32 -308
  br label %land.rhs

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %timeout = getelementptr i8, ptr %work, i32 -48
  %call2 = call i32 @mod_timer(ptr noundef %timeout, i32 noundef %2) #20
  br label %if.end8

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %land.rhs.lr.ph
  %i.022 = phi i32 [ 0, %land.rhs.lr.ph ], [ %inc, %for.inc.land.rhs_crit_edge ]
  %5 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %6, i32 %i.022
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %nr_ctx.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %8, i32 0, i32 14
  %9 = ptrtoint ptr %nr_ctx.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %nr_ctx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool.not.i = icmp eq i16 %10, 0
  br i1 %tobool.not.i, label %land.rhs.for.inc_crit_edge, label %blk_mq_hw_queue_mapped.exit

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

blk_mq_hw_queue_mapped.exit:                      ; preds = %land.rhs
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %8, i32 0, i32 19
  %11 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tags.i, align 16
  %tobool1.i.not = icmp eq ptr %12, null
  br i1 %tobool1.i.not, label %blk_mq_hw_queue_mapped.exit.for.inc_crit_edge, label %if.then6

blk_mq_hw_queue_mapped.exit.for.inc_crit_edge:    ; preds = %blk_mq_hw_queue_mapped.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then6:                                         ; preds = %blk_mq_hw_queue_mapped.exit
  %flags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %8, i32 0, i32 5
  %13 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags.i, align 16
  %and.i = and i32 %14, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i20 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i20, label %if.then6.for.inc_crit_edge, label %if.end.i

if.then6.for.inc_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.end.i:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #22
  call void @__blk_mq_tag_idle(ptr noundef %8) #20
  br label %for.inc

for.inc:                                          ; preds = %if.end.i, %if.then6.for.inc_crit_edge, %blk_mq_hw_queue_mapped.exit.for.inc_crit_edge, %land.rhs.for.inc_crit_edge
  %inc = add nuw i32 %i.022, 1
  %15 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %nr_hw_queues, align 8
  %cmp3 = icmp ult i32 %inc, %16
  br i1 %cmp3, label %for.inc.land.rhs_crit_edge, label %for.inc.if.end8_crit_edge

for.inc.if.end8_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs

if.end8:                                          ; preds = %for.inc.if.end8_crit_edge, %if.then1, %for.cond.preheader.if.end8_crit_edge
  call void @blk_queue_exit(ptr noundef %add.ptr) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %next) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_queue_rq_timeout(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @blk_mq_requeue_work(ptr noundef %work) #0 align 64 {
entry:
  %rq_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %rq_list) #20
  %0 = getelementptr inbounds %struct.list_head, ptr %rq_list, i32 0, i32 1
  %1 = ptrtoint ptr %rq_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %rq_list, ptr %rq_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %rq_list, ptr %0, align 4
  %requeue_lock = getelementptr i8, ptr %work, i32 -44
  call void @_raw_spin_lock_irq(ptr noundef %requeue_lock) #20
  %requeue_list = getelementptr i8, ptr %work, i32 -52
  %3 = ptrtoint ptr %requeue_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %requeue_list, align 4
  %cmp.i.not.i = icmp eq ptr %4, %requeue_list
  br i1 %cmp.i.not.i, label %entry.list_splice_init.exit_crit_edge, label %if.then.i

entry.list_splice_init.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_splice_init.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %5 = ptrtoint ptr %rq_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %rq_list, align 4
  %prev2.i.i = getelementptr i8, ptr %work, i32 -48
  %7 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %9 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %rq_list, ptr %prev3.i.i, align 4
  store ptr %4, ptr %rq_list, align 4
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %6, ptr %8, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %11 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev6.i.i, align 4
  %12 = ptrtoint ptr %requeue_list to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %requeue_list, ptr %requeue_list, align 4
  store ptr %requeue_list, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i, %entry.list_splice_init.exit_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %requeue_lock) #20
  %13 = ptrtoint ptr %rq_list to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rq_list, align 4
  %cmp.not51 = icmp eq ptr %14, %rq_list
  br i1 %cmp.not51, label %list_splice_init.exit.while.cond.preheader_crit_edge, label %list_splice_init.exit.for.body_crit_edge

list_splice_init.exit.for.body_crit_edge:         ; preds = %list_splice_init.exit
  br label %for.body

list_splice_init.exit.while.cond.preheader_crit_edge: ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.inc.while.cond.preheader_crit_edge, %list_splice_init.exit.while.cond.preheader_crit_edge
  %15 = ptrtoint ptr %rq_list to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %rq_list, align 4
  %cmp.i.not55 = icmp eq ptr %16, %rq_list
  br i1 %cmp.i.not55, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %list_splice_init.exit.for.body_crit_edge
  %.pn.in52 = phi ptr [ %.pn54, %for.inc.for.body_crit_edge ], [ %14, %list_splice_init.exit.for.body_crit_edge ]
  %rq.053 = getelementptr i8, ptr %.pn.in52, i32 -56
  %17 = ptrtoint ptr %.pn.in52 to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pn54 = load ptr, ptr %.pn.in52, align 8
  %rq_flags = getelementptr i8, ptr %.pn.in52, i32 -40
  %18 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rq_flags, align 8
  %and = and i32 %19, 136
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.end:                                           ; preds = %for.body
  %and12 = and i32 %19, -9
  %20 = ptrtoint ptr %rq_flags to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %and12, ptr %rq_flags, align 8
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in52) #20
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_del_init.exit_crit_edge

if.end.list_del_init.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in52, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i.i, align 4
  %23 = ptrtoint ptr %.pn.in52 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %.pn.in52, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev1.i.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %24, ptr %22, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.end.list_del_init.exit_crit_edge
  %27 = ptrtoint ptr %.pn.in52 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %.pn.in52, ptr %.pn.in52, align 4
  %prev.i3.i = getelementptr %struct.list_head, ptr %.pn.in52, i32 0, i32 1
  %28 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %.pn.in52, ptr %prev.i3.i, align 4
  %29 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rq_flags, align 8
  %and14 = and i32 %30, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %list_del_init.exit
  %mq_hctx.i = getelementptr i8, ptr %.pn.in52, i32 -48
  %31 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %mq_hctx.i, align 8
  call void @_raw_spin_lock(ptr noundef %32) #20
  %dispatch.i = getelementptr inbounds %struct.anon.3, ptr %32, i32 0, i32 1
  %prev.i.i42 = getelementptr inbounds %struct.anon.3, ptr %32, i32 0, i32 1, i32 1
  %33 = ptrtoint ptr %prev.i.i42 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %prev.i.i42, align 4
  %call.i.i13.i = call zeroext i1 @__list_add_valid(ptr noundef %.pn.in52, ptr noundef %34, ptr noundef %dispatch.i) #20
  br i1 %call.i.i13.i, label %if.end.sink.split.i, label %if.then16.blk_mq_request_bypass_insert.exit_crit_edge

if.then16.blk_mq_request_bypass_insert.exit_crit_edge: ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_request_bypass_insert.exit

if.end.sink.split.i:                              ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #22
  %35 = ptrtoint ptr %prev.i.i42 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %.pn.in52, ptr %prev.i.i42, align 4
  %36 = ptrtoint ptr %.pn.in52 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %dispatch.i, ptr %.pn.in52, align 4
  %37 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %34, ptr %prev.i3.i, align 4
  %38 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %.pn.in52, ptr %34, align 4
  br label %blk_mq_request_bypass_insert.exit

blk_mq_request_bypass_insert.exit:                ; preds = %if.end.sink.split.i, %if.then16.blk_mq_request_bypass_insert.exit_crit_edge
  call void @_raw_spin_unlock(ptr noundef %32) #20
  br label %for.inc

if.else:                                          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  call void @blk_mq_sched_insert_request(ptr noundef %rq.053, i1 noundef zeroext true, i1 noundef zeroext false, i1 noundef zeroext false) #20
  br label %for.inc

for.inc:                                          ; preds = %if.else, %blk_mq_request_bypass_insert.exit, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %.pn54, %rq_list
  br i1 %cmp.not, label %for.inc.while.cond.preheader_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.inc.while.cond.preheader_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond.preheader

while.body:                                       ; preds = %list_del_init.exit48.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %39 = phi ptr [ %49, %list_del_init.exit48.while.body_crit_edge ], [ %16, %while.cond.preheader.while.body_crit_edge ]
  %add.ptr27 = getelementptr i8, ptr %39, i32 -56
  %call.i.i43 = call zeroext i1 @__list_del_entry_valid(ptr noundef %39) #20
  br i1 %call.i.i43, label %if.end.i.i46, label %while.body.list_del_init.exit48_crit_edge

while.body.list_del_init.exit48_crit_edge:        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit48

if.end.i.i46:                                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i44 = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %prev.i.i44 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prev.i.i44, align 4
  %42 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %39, align 4
  %prev1.i.i.i45 = getelementptr inbounds %struct.list_head, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %prev1.i.i.i45 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %41, ptr %prev1.i.i.i45, align 4
  %45 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %43, ptr %41, align 4
  br label %list_del_init.exit48

list_del_init.exit48:                             ; preds = %if.end.i.i46, %while.body.list_del_init.exit48_crit_edge
  %46 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %39, ptr %39, align 4
  %prev.i3.i47 = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  %47 = ptrtoint ptr %prev.i3.i47 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %39, ptr %prev.i3.i47, align 4
  call void @blk_mq_sched_insert_request(ptr noundef %add.ptr27, i1 noundef zeroext false, i1 noundef zeroext false, i1 noundef zeroext false) #20
  %48 = ptrtoint ptr %rq_list to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile ptr, ptr %rq_list, align 4
  %cmp.i.not = icmp eq ptr %49, %rq_list
  br i1 %cmp.i.not, label %list_del_init.exit48.while.end_crit_edge, label %list_del_init.exit48.while.body_crit_edge

list_del_init.exit48.while.body_crit_edge:        ; preds = %list_del_init.exit48
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

list_del_init.exit48.while.end_crit_edge:         ; preds = %list_del_init.exit48
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %list_del_init.exit48.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  %add.ptr = getelementptr i8, ptr %work, i32 -700
  call void @blk_mq_run_hw_queues(ptr noundef %add.ptr, i1 noundef zeroext false)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %rq_list) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @blk_mq_map_swqueue(ptr nocapture noundef readonly %q) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tag_set = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 61
  %0 = ptrtoint ptr %tag_set to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tag_set, align 8
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %2 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp230.not = icmp eq i32 %3, 0
  br i1 %cmp230.not, label %entry.for.cond1.preheader_crit_edge, label %for.body.lr.ph

entry.for.cond1.preheader_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond1.preheader

for.body.lr.ph:                                   ; preds = %entry
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %for.body

for.cond1.preheader:                              ; preds = %for.body.for.cond1.preheader_crit_edge, %entry.for.cond1.preheader_crit_edge
  %call237 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call237, i32 %4)
  %cmp2238 = icmp ult i32 %call237, %4
  br i1 %cmp2238, label %do.body.lr.ph, label %for.cond1.preheader.for.cond72.preheader_crit_edge

for.cond1.preheader.for.cond72.preheader_crit_edge: ; preds = %for.cond1.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond72.preheader

do.body.lr.ph:                                    ; preds = %for.cond1.preheader
  %queue_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 6
  %nr_maps = getelementptr inbounds %struct.blk_mq_tag_set, ptr %1, i32 0, i32 1
  %tags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %1, i32 0, i32 11
  %flags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %1, i32 0, i32 9
  %shared_tags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %1, i32 0, i32 12
  %queue_depth.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %1, i32 0, i32 4
  %queue_hw_ctx.i203 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %do.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.0231 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %5 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %6, i32 %i.0231
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %cpumask = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i = add i32 %11, 31
  %12 = lshr i32 %sub.i.i, 3
  %mul.i.i = and i32 %12, 536870908
  %13 = call ptr @memset(ptr %10, i32 0, i32 %mul.i.i)
  %nr_ctx = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %8, i32 0, i32 14
  %14 = ptrtoint ptr %nr_ctx to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 0, ptr %nr_ctx, align 2
  %dispatch_from = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %8, i32 0, i32 11
  %15 = ptrtoint ptr %dispatch_from to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %dispatch_from, align 4
  %inc = add nuw i32 %i.0231, 1
  %16 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %nr_hw_queues, align 8
  %cmp = icmp ult i32 %inc, %17
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.cond1.preheader_crit_edge

for.body.for.cond1.preheader_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond1.preheader

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.cond1.loopexit:                               ; preds = %for.body64.for.cond1.loopexit_crit_edge, %for.cond61.preheader.for.cond1.loopexit_crit_edge
  %call = tail call i32 @cpumask_next(i32 noundef %call239, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %18 = load i32, ptr @nr_cpu_ids, align 4
  %cmp2 = icmp ult i32 %call, %18
  br i1 %cmp2, label %for.cond1.loopexit.do.body_crit_edge, label %for.cond1.loopexit.for.cond72.preheader_crit_edge

for.cond1.loopexit.for.cond72.preheader_crit_edge: ; preds = %for.cond1.loopexit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond72.preheader

for.cond1.loopexit.do.body_crit_edge:             ; preds = %for.cond1.loopexit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

for.cond72.preheader:                             ; preds = %for.cond1.loopexit.for.cond72.preheader_crit_edge, %for.cond1.preheader.for.cond72.preheader_crit_edge
  %19 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp74240.not = icmp eq i32 %20, 0
  br i1 %cmp74240.not, label %for.cond72.preheader.for.end132_crit_edge, label %land.rhs76.lr.ph

for.cond72.preheader.for.end132_crit_edge:        ; preds = %for.cond72.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end132

land.rhs76.lr.ph:                                 ; preds = %for.cond72.preheader
  %queue_hw_ctx77 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %tags91 = getelementptr inbounds %struct.blk_mq_tag_set, ptr %1, i32 0, i32 11
  %flags.i217 = getelementptr inbounds %struct.blk_mq_tag_set, ptr %1, i32 0, i32 9
  %21 = ptrtoint ptr %queue_hw_ctx77 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %queue_hw_ctx77, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %nr_ctx83.peel = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %24, i32 0, i32 14
  %25 = ptrtoint ptr %nr_ctx83.peel to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %nr_ctx83.peel, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %26)
  %tobool84.not.peel = icmp eq i16 %26, 0
  br i1 %tobool84.not.peel, label %if.end88.peel, label %if.end90.peel

if.end90.peel:                                    ; preds = %land.rhs76.lr.ph
  %27 = ptrtoint ptr %tags91 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tags91, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  %tags93.peel = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %24, i32 0, i32 19
  %31 = ptrtoint ptr %tags93.peel to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %30, ptr %tags93.peel, align 16
  %tobool95.not.peel = icmp eq ptr %30, null
  br i1 %tobool95.not.peel, label %do.end113.peel, label %if.end90.peel.if.end119.peel_crit_edge, !prof !300

if.end90.peel.if.end119.peel_crit_edge:           ; preds = %if.end90.peel
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end119.peel

do.end113.peel:                                   ; preds = %if.end90.peel
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3733, i32 noundef 9, ptr noundef null) #20
  br label %if.end119.peel

if.end119.peel:                                   ; preds = %do.end113.peel, %if.end90.peel.if.end119.peel_crit_edge
  %ctx_map.peel = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %24, i32 0, i32 10
  %32 = ptrtoint ptr %nr_ctx83.peel to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %nr_ctx83.peel, align 2
  %conv128.peel = zext i16 %33 to i32
  tail call void @sbitmap_resize(ptr noundef %ctx_map.peel, i32 noundef %conv128.peel) #20
  %cpumask.i.peel = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %24, i32 0, i32 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %34 = load i32, ptr @nr_cpu_ids, align 4
  %35 = ptrtoint ptr %cpumask.i.peel to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %cpumask.i.peel, align 4
  %call6.i.i.i.peel = tail call i32 @_find_first_and_bit(ptr noundef %36, ptr noundef nonnull @__cpu_online_mask, i32 noundef %34) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %37 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i.i.peel, i32 %37)
  %cmp.not.i.peel = icmp ult i32 %call6.i.i.i.peel, %37
  br i1 %cmp.not.i.peel, label %if.end119.peel.blk_mq_first_mapped_cpu.exit.peel_crit_edge, label %if.then.i226.peel

if.end119.peel.blk_mq_first_mapped_cpu.exit.peel_crit_edge: ; preds = %if.end119.peel
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_first_mapped_cpu.exit.peel

if.then.i226.peel:                                ; preds = %if.end119.peel
  call void @__sanitizer_cov_trace_pc() #22
  %38 = ptrtoint ptr %cpumask.i.peel to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %cpumask.i.peel, align 4
  %call.i.i.peel = tail call i32 @_find_first_bit_be(ptr noundef %39, i32 noundef %37) #20
  br label %blk_mq_first_mapped_cpu.exit.peel

blk_mq_first_mapped_cpu.exit.peel:                ; preds = %if.then.i226.peel, %if.end119.peel.blk_mq_first_mapped_cpu.exit.peel_crit_edge
  %cpu.0.i.peel = phi i32 [ %call.i.i.peel, %if.then.i226.peel ], [ %call6.i.i.i.peel, %if.end119.peel.blk_mq_first_mapped_cpu.exit.peel_crit_edge ]
  %next_cpu.peel = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %24, i32 0, i32 3
  %40 = ptrtoint ptr %next_cpu.peel to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %cpu.0.i.peel, ptr %next_cpu.peel, align 8
  %next_cpu_batch.peel = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %24, i32 0, i32 4
  %41 = ptrtoint ptr %next_cpu_batch.peel to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 8, ptr %next_cpu_batch.peel, align 4
  br label %for.inc130.peel

if.end88.peel:                                    ; preds = %land.rhs76.lr.ph
  call void @__sanitizer_cov_trace_pc() #22
  %tags89.peel = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %24, i32 0, i32 19
  %42 = ptrtoint ptr %tags89.peel to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr null, ptr %tags89.peel, align 16
  br label %for.inc130.peel

for.inc130.peel:                                  ; preds = %if.end88.peel, %blk_mq_first_mapped_cpu.exit.peel
  %43 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %44)
  %cmp74.peel = icmp ugt i32 %44, 1
  br i1 %cmp74.peel, label %for.inc130.peel.land.rhs76_crit_edge, label %for.inc130.peel.for.end132_crit_edge

for.inc130.peel.for.end132_crit_edge:             ; preds = %for.inc130.peel
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end132

for.inc130.peel.land.rhs76_crit_edge:             ; preds = %for.inc130.peel
  br label %land.rhs76

do.body:                                          ; preds = %for.cond1.loopexit.do.body_crit_edge, %do.body.lr.ph
  %call239 = phi i32 [ %call237, %do.body.lr.ph ], [ %call, %for.cond1.loopexit.do.body_crit_edge ]
  %45 = ptrtoint ptr %queue_ctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %queue_ctx, align 4
  %47 = ptrtoint ptr %46 to i32
  %arrayidx6 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call239
  %48 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx6, align 4
  %add = add i32 %49, %47
  %50 = inttoptr i32 %add to ptr
  %51 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %nr_maps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %cmp8232.not = icmp eq i32 %52, 0
  br i1 %cmp8232.not, label %do.body.for.body64.preheader_crit_edge, label %for.body9.lr.ph

do.body.for.body64.preheader_crit_edge:           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body64.preheader

for.body9.lr.ph:                                  ; preds = %do.body
  %div3.i.i = lshr i32 %call239, 5
  %and.i.i208 = and i32 %call239, 31
  %53 = shl nuw i32 1, %and.i.i208
  br label %for.body9

for.cond61.preheader:                             ; preds = %for.inc58
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %j.0233)
  %cmp62235 = icmp ult i32 %j.0233, 2
  br i1 %cmp62235, label %for.cond61.preheader.for.body64.preheader_crit_edge, label %for.cond61.preheader.for.cond1.loopexit_crit_edge

for.cond61.preheader.for.cond1.loopexit_crit_edge: ; preds = %for.cond61.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond1.loopexit

for.cond61.preheader.for.body64.preheader_crit_edge: ; preds = %for.cond61.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body64.preheader

for.body64.preheader:                             ; preds = %for.cond61.preheader.for.body64.preheader_crit_edge, %do.body.for.body64.preheader_crit_edge
  %j.1236.ph = phi i32 [ 0, %do.body.for.body64.preheader_crit_edge ], [ %inc59, %for.cond61.preheader.for.body64.preheader_crit_edge ]
  br label %for.body64

for.body9:                                        ; preds = %for.inc58.for.body9_crit_edge, %for.body9.lr.ph
  %j.0233 = phi i32 [ 0, %for.body9.lr.ph ], [ %inc59, %for.inc58.for.body9_crit_edge ]
  %arrayidx10 = getelementptr [3 x %struct.blk_mq_queue_map], ptr %1, i32 0, i32 %j.0233
  %nr_queues = getelementptr [3 x %struct.blk_mq_queue_map], ptr %1, i32 0, i32 %j.0233, i32 1
  %54 = ptrtoint ptr %nr_queues to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %nr_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool11.not = icmp eq i32 %55, 0
  br i1 %tobool11.not, label %if.then, label %if.end

if.then:                                          ; preds = %for.body9
  call void @__sanitizer_cov_trace_pc() #22
  %56 = ptrtoint ptr %queue_hw_ctx.i203 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %queue_hw_ctx.i203, align 4
  %58 = ptrtoint ptr %tag_set to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %tag_set, align 8
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %59, align 4
  %arrayidx1.i = getelementptr i32, ptr %61, i32 %call239
  %62 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %arrayidx1.i, align 4
  %arrayidx2.i = getelementptr ptr, ptr %57, i32 %63
  %64 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %arrayidx2.i, align 4
  %arrayidx13 = getelementptr %struct.blk_mq_ctx, ptr %50, i32 0, i32 3, i32 %j.0233
  %66 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %65, ptr %arrayidx13, align 4
  br label %for.inc58

if.end:                                           ; preds = %for.body9
  %67 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %arrayidx10, align 4
  %arrayidx16 = getelementptr i32, ptr %68, i32 %call239
  %69 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx16, align 4
  %71 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %tags, align 4
  %arrayidx17 = getelementptr ptr, ptr %72, i32 %70
  %73 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx17, align 4
  %tobool18.not = icmp eq ptr %74, null
  br i1 %tobool18.not, label %land.lhs.true, label %if.end.if.end25_crit_edge

if.end.if.end25_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

land.lhs.true:                                    ; preds = %if.end
  %75 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %76, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %__blk_mq_alloc_map_and_rqs.exit, label %__blk_mq_alloc_map_and_rqs.exit.thread

__blk_mq_alloc_map_and_rqs.exit.thread:           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %77 = ptrtoint ptr %shared_tags.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %shared_tags.i, align 4
  %79 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %78, ptr %arrayidx17, align 4
  br label %if.end25

__blk_mq_alloc_map_and_rqs.exit:                  ; preds = %land.lhs.true
  %80 = ptrtoint ptr %queue_depth.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %queue_depth.i, align 4
  %call1.i = tail call ptr @blk_mq_alloc_map_and_rqs(ptr noundef %1, i32 noundef %70, i32 noundef %81) #20
  %82 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %tags, align 4
  %arrayidx3.i = getelementptr ptr, ptr %83, i32 %70
  %84 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %call1.i, ptr %arrayidx3.i, align 4
  %85 = load ptr, ptr %tags, align 4
  %arrayidx5.i = getelementptr ptr, ptr %85, i32 %70
  %86 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %arrayidx5.i, align 4
  %tobool.i.not = icmp eq ptr %87, null
  br i1 %tobool.i.not, label %if.then20, label %__blk_mq_alloc_map_and_rqs.exit.if.end25_crit_edge

__blk_mq_alloc_map_and_rqs.exit.if.end25_crit_edge: ; preds = %__blk_mq_alloc_map_and_rqs.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

if.then20:                                        ; preds = %__blk_mq_alloc_map_and_rqs.exit
  call void @__sanitizer_cov_trace_pc() #22
  %88 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %arrayidx10, align 4
  %arrayidx24 = getelementptr i32, ptr %89, i32 %call239
  %90 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 0, ptr %arrayidx24, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.then20, %__blk_mq_alloc_map_and_rqs.exit.if.end25_crit_edge, %__blk_mq_alloc_map_and_rqs.exit.thread, %if.end.if.end25_crit_edge
  %91 = ptrtoint ptr %queue_hw_ctx.i203 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %queue_hw_ctx.i203, align 4
  %93 = ptrtoint ptr %tag_set to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %tag_set, align 8
  %arrayidx.i205 = getelementptr [3 x %struct.blk_mq_queue_map], ptr %94, i32 0, i32 %j.0233
  %95 = ptrtoint ptr %arrayidx.i205 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %arrayidx.i205, align 4
  %arrayidx1.i206 = getelementptr i32, ptr %96, i32 %call239
  %97 = ptrtoint ptr %arrayidx1.i206 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx1.i206, align 4
  %arrayidx2.i207 = getelementptr ptr, ptr %92, i32 %98
  %99 = ptrtoint ptr %arrayidx2.i207 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %arrayidx2.i207, align 4
  %arrayidx28 = getelementptr %struct.blk_mq_ctx, ptr %50, i32 0, i32 3, i32 %j.0233
  %101 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %100, ptr %arrayidx28, align 4
  %cpumask29 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %100, i32 0, i32 2
  %102 = ptrtoint ptr %cpumask29 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %cpumask29, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %104 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %104, i32 %call239)
  %cmp.not.i.i.i = icmp ugt i32 %104, %call239
  br i1 %cmp.not.i.i.i, label %if.end25.cpumask_test_cpu.exit_crit_edge, label %land.rhs.i.i.i

if.end25.cpumask_test_cpu.exit_crit_edge:         ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

land.rhs.i.i.i:                                   ; preds = %if.end25
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, label %if.then.i.i.i, !prof !298

land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge:   ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, %if.end25.cpumask_test_cpu.exit_crit_edge
  %arrayidx.i.i = getelementptr i32, ptr %103, i32 %div3.i.i
  %105 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %arrayidx.i.i, align 4
  %107 = and i32 %106, %53
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %107)
  %tobool31.not = icmp eq i32 %107, 0
  br i1 %tobool31.not, label %if.end33, label %cpumask_test_cpu.exit.for.inc58_crit_edge

cpumask_test_cpu.exit.for.inc58_crit_edge:        ; preds = %cpumask_test_cpu.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc58

if.end33:                                         ; preds = %cpumask_test_cpu.exit
  %108 = ptrtoint ptr %cpumask29 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %cpumask29, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %110 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %110, i32 %call239)
  %cmp.not.i.i.i209 = icmp ugt i32 %110, %call239
  br i1 %cmp.not.i.i.i209, label %if.end33.cpumask_set_cpu.exit_crit_edge, label %land.rhs.i.i.i211

if.end33.cpumask_set_cpu.exit_crit_edge:          ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_set_cpu.exit

land.rhs.i.i.i211:                                ; preds = %if.end33
  %.b37.i.i.i210 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i210, label %land.rhs.i.i.i211.cpumask_set_cpu.exit_crit_edge, label %if.then.i.i.i212, !prof !298

land.rhs.i.i.i211.cpumask_set_cpu.exit_crit_edge: ; preds = %land.rhs.i.i.i211
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_set_cpu.exit

if.then.i.i.i212:                                 ; preds = %land.rhs.i.i.i211
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpumask_set_cpu.exit

cpumask_set_cpu.exit:                             ; preds = %if.then.i.i.i212, %land.rhs.i.i.i211.cpumask_set_cpu.exit_crit_edge, %if.end33.cpumask_set_cpu.exit_crit_edge
  tail call void @_set_bit(i32 noundef %call239, ptr noundef %109) #20
  %conv = trunc i32 %j.0233 to i16
  %type = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %100, i32 0, i32 13
  %111 = ptrtoint ptr %type to i32
  call void @__asan_store2_noabort(i32 %111)
  store i16 %conv, ptr %type, align 4
  %nr_ctx35 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %100, i32 0, i32 14
  %112 = ptrtoint ptr %nr_ctx35 to i32
  call void @__asan_load2_noabort(i32 %112)
  %113 = load i16, ptr %nr_ctx35, align 2
  %idxprom = and i32 %j.0233, 65535
  %arrayidx37 = getelementptr %struct.blk_mq_ctx, ptr %50, i32 0, i32 2, i32 %idxprom
  %114 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_store2_noabort(i32 %114)
  store i16 %113, ptr %arrayidx37, align 2
  %ctxs = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %100, i32 0, i32 15
  %115 = ptrtoint ptr %ctxs to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %ctxs, align 8
  %117 = load i16, ptr %nr_ctx35, align 2
  %inc39 = add i16 %117, 1
  store i16 %inc39, ptr %nr_ctx35, align 2
  %idxprom40 = zext i16 %117 to i32
  %arrayidx41 = getelementptr ptr, ptr %116, i32 %idxprom40
  %118 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %50, ptr %arrayidx41, align 4
  %119 = load i16, ptr %nr_ctx35, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %119)
  %tobool44.not = icmp eq i16 %119, 0
  br i1 %tobool44.not, label %do.body49, label %cpumask_set_cpu.exit.for.inc58_crit_edge, !prof !300

cpumask_set_cpu.exit.for.inc58_crit_edge:         ; preds = %cpumask_set_cpu.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc58

do.body49:                                        ; preds = %cpumask_set_cpu.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3707, 0\0A.popsection", ""() #20, !srcloc !354
  unreachable

for.inc58:                                        ; preds = %cpumask_set_cpu.exit.for.inc58_crit_edge, %cpumask_test_cpu.exit.for.inc58_crit_edge, %if.then
  %inc59 = add nuw i32 %j.0233, 1
  %120 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %nr_maps, align 4
  %cmp8 = icmp ult i32 %inc59, %121
  br i1 %cmp8, label %for.inc58.for.body9_crit_edge, label %for.cond61.preheader

for.inc58.for.body9_crit_edge:                    ; preds = %for.inc58
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body9

for.body64:                                       ; preds = %for.body64.for.body64_crit_edge, %for.body64.preheader
  %j.1236 = phi i32 [ %inc69, %for.body64.for.body64_crit_edge ], [ %j.1236.ph, %for.body64.preheader ]
  %122 = ptrtoint ptr %queue_hw_ctx.i203 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %queue_hw_ctx.i203, align 4
  %124 = ptrtoint ptr %tag_set to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %tag_set, align 8
  %126 = ptrtoint ptr %125 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %125, align 4
  %arrayidx1.i215 = getelementptr i32, ptr %127, i32 %call239
  %128 = ptrtoint ptr %arrayidx1.i215 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %arrayidx1.i215, align 4
  %arrayidx2.i216 = getelementptr ptr, ptr %123, i32 %129
  %130 = ptrtoint ptr %arrayidx2.i216 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %arrayidx2.i216, align 4
  %arrayidx67 = getelementptr %struct.blk_mq_ctx, ptr %50, i32 0, i32 3, i32 %j.1236
  %132 = ptrtoint ptr %arrayidx67 to i32
  call void @__asan_store4_noabort(i32 %132)
  store ptr %131, ptr %arrayidx67, align 4
  %inc69 = add i32 %j.1236, 1
  %exitcond.not = icmp eq i32 %inc69, 3
  br i1 %exitcond.not, label %for.body64.for.cond1.loopexit_crit_edge, label %for.body64.for.body64_crit_edge

for.body64.for.body64_crit_edge:                  ; preds = %for.body64
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body64

for.body64.for.cond1.loopexit_crit_edge:          ; preds = %for.body64
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond1.loopexit

land.rhs76:                                       ; preds = %for.inc130.land.rhs76_crit_edge, %for.inc130.peel.land.rhs76_crit_edge
  %i.2241 = phi i32 [ %inc131, %for.inc130.land.rhs76_crit_edge ], [ 1, %for.inc130.peel.land.rhs76_crit_edge ]
  %133 = ptrtoint ptr %queue_hw_ctx77 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %queue_hw_ctx77, align 4
  %arrayidx78 = getelementptr ptr, ptr %134, i32 %i.2241
  %135 = ptrtoint ptr %arrayidx78 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %arrayidx78, align 4
  %nr_ctx83 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %136, i32 0, i32 14
  %137 = ptrtoint ptr %nr_ctx83 to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %nr_ctx83, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %138)
  %tobool84.not = icmp eq i16 %138, 0
  br i1 %tobool84.not, label %if.then87, label %if.end90

if.then87:                                        ; preds = %land.rhs76
  %139 = ptrtoint ptr %flags.i217 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %flags.i217, align 4
  %and.i.i218 = and i32 %140, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i218)
  %tobool.i.not.i219 = icmp eq i32 %and.i.i218, 0
  br i1 %tobool.i.not.i219, label %if.then.i222, label %if.then87.__blk_mq_free_map_and_rqs.exit_crit_edge

if.then87.__blk_mq_free_map_and_rqs.exit_crit_edge: ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_free_map_and_rqs.exit

if.then.i222:                                     ; preds = %if.then87
  %141 = ptrtoint ptr %tags91 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %tags91, align 4
  %arrayidx.i221 = getelementptr ptr, ptr %142, i32 %i.2241
  %143 = ptrtoint ptr %arrayidx.i221 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %arrayidx.i221, align 4
  %tobool.not.i.i = icmp eq ptr %144, null
  br i1 %tobool.not.i.i, label %if.then.i222.__blk_mq_free_map_and_rqs.exit_crit_edge, label %if.then.i.i

if.then.i222.__blk_mq_free_map_and_rqs.exit_crit_edge: ; preds = %if.then.i222
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_free_map_and_rqs.exit

if.then.i.i:                                      ; preds = %if.then.i222
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_free_rqs(ptr noundef %1, ptr noundef nonnull %144, i32 noundef %i.2241) #20
  %rqs.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %144, i32 0, i32 5
  %145 = ptrtoint ptr %rqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %rqs.i.i.i, align 4
  tail call void @kfree(ptr noundef %146) #20
  %147 = ptrtoint ptr %rqs.i.i.i to i32
  call void @__asan_store4_noabort(i32 %147)
  store ptr null, ptr %rqs.i.i.i, align 4
  %static_rqs.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %144, i32 0, i32 6
  %148 = ptrtoint ptr %static_rqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %static_rqs.i.i.i, align 4
  tail call void @kfree(ptr noundef %149) #20
  %150 = ptrtoint ptr %static_rqs.i.i.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store ptr null, ptr %static_rqs.i.i.i, align 4
  tail call void @blk_mq_free_tags(ptr noundef nonnull %144) #20
  br label %__blk_mq_free_map_and_rqs.exit

__blk_mq_free_map_and_rqs.exit:                   ; preds = %if.then.i.i, %if.then.i222.__blk_mq_free_map_and_rqs.exit_crit_edge, %if.then87.__blk_mq_free_map_and_rqs.exit_crit_edge
  %151 = ptrtoint ptr %tags91 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %tags91, align 4
  %arrayidx2.i223 = getelementptr ptr, ptr %152, i32 %i.2241
  %153 = ptrtoint ptr %arrayidx2.i223 to i32
  call void @__asan_store4_noabort(i32 %153)
  store ptr null, ptr %arrayidx2.i223, align 4
  %tags89 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %136, i32 0, i32 19
  %154 = ptrtoint ptr %tags89 to i32
  call void @__asan_store4_noabort(i32 %154)
  store ptr null, ptr %tags89, align 16
  br label %for.inc130

if.end90:                                         ; preds = %land.rhs76
  %155 = ptrtoint ptr %tags91 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %tags91, align 4
  %arrayidx92 = getelementptr ptr, ptr %156, i32 %i.2241
  %157 = ptrtoint ptr %arrayidx92 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %arrayidx92, align 4
  %tags93 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %136, i32 0, i32 19
  %159 = ptrtoint ptr %tags93 to i32
  call void @__asan_store4_noabort(i32 %159)
  store ptr %158, ptr %tags93, align 16
  %tobool95.not = icmp eq ptr %158, null
  br i1 %tobool95.not, label %do.end113, label %if.end90.if.end119_crit_edge, !prof !300

if.end90.if.end119_crit_edge:                     ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end119

do.end113:                                        ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3733, i32 noundef 9, ptr noundef null) #20
  br label %if.end119

if.end119:                                        ; preds = %do.end113, %if.end90.if.end119_crit_edge
  %ctx_map = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %136, i32 0, i32 10
  %160 = ptrtoint ptr %nr_ctx83 to i32
  call void @__asan_load2_noabort(i32 %160)
  %161 = load i16, ptr %nr_ctx83, align 2
  %conv128 = zext i16 %161 to i32
  tail call void @sbitmap_resize(ptr noundef %ctx_map, i32 noundef %conv128) #20
  %cpumask.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %136, i32 0, i32 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %162 = load i32, ptr @nr_cpu_ids, align 4
  %163 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %cpumask.i, align 4
  %call6.i.i.i = tail call i32 @_find_first_and_bit(ptr noundef %164, ptr noundef nonnull @__cpu_online_mask, i32 noundef %162) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %165 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i.i, i32 %165)
  %cmp.not.i = icmp ult i32 %call6.i.i.i, %165
  br i1 %cmp.not.i, label %if.end119.blk_mq_first_mapped_cpu.exit_crit_edge, label %if.then.i226

if.end119.blk_mq_first_mapped_cpu.exit_crit_edge: ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_first_mapped_cpu.exit

if.then.i226:                                     ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #22
  %166 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %cpumask.i, align 4
  %call.i.i = tail call i32 @_find_first_bit_be(ptr noundef %167, i32 noundef %165) #20
  br label %blk_mq_first_mapped_cpu.exit

blk_mq_first_mapped_cpu.exit:                     ; preds = %if.then.i226, %if.end119.blk_mq_first_mapped_cpu.exit_crit_edge
  %cpu.0.i = phi i32 [ %call.i.i, %if.then.i226 ], [ %call6.i.i.i, %if.end119.blk_mq_first_mapped_cpu.exit_crit_edge ]
  %next_cpu = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %136, i32 0, i32 3
  %168 = ptrtoint ptr %next_cpu to i32
  call void @__asan_store4_noabort(i32 %168)
  store i32 %cpu.0.i, ptr %next_cpu, align 8
  %next_cpu_batch = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %136, i32 0, i32 4
  %169 = ptrtoint ptr %next_cpu_batch to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 8, ptr %next_cpu_batch, align 4
  br label %for.inc130

for.inc130:                                       ; preds = %blk_mq_first_mapped_cpu.exit, %__blk_mq_free_map_and_rqs.exit
  %inc131 = add nuw i32 %i.2241, 1
  %170 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %nr_hw_queues, align 8
  %cmp74 = icmp ult i32 %inc131, %171
  br i1 %cmp74, label %for.inc130.land.rhs76_crit_edge, label %for.inc130.for.end132_crit_edge, !llvm.loop !355

for.inc130.for.end132_crit_edge:                  ; preds = %for.inc130
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end132

for.inc130.land.rhs76_crit_edge:                  ; preds = %for.inc130
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs76

for.end132:                                       ; preds = %for.inc130.for.end132_crit_edge, %for.inc130.peel.for.end132_crit_edge, %for.cond72.preheader.for.end132_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_stat_free_callback(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_exit_queue(ptr noundef %q) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tag_set = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 61
  %0 = ptrtoint ptr %tag_set to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tag_set, align 8
  %nr_hw_queues = getelementptr inbounds %struct.blk_mq_tag_set, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_hw_queues, align 4
  %nr_hw_queues.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %4 = ptrtoint ptr %nr_hw_queues.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_hw_queues.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp9.i = icmp eq i32 %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp110.i = icmp eq i32 %3, 0
  %or.cond11.i = or i1 %cmp110.i, %cmp9.i
  br i1 %or.cond11.i, label %entry.blk_mq_exit_hw_queues.exit_crit_edge, label %if.end.lr.ph.i

entry.blk_mq_exit_hw_queues.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_exit_hw_queues.exit

if.end.lr.ph.i:                                   ; preds = %entry
  %queue_hw_ctx.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.end.i.if.end.i_crit_edge, %if.end.lr.ph.i
  %i.012.i = phi i32 [ 0, %if.end.lr.ph.i ], [ %inc.i, %if.end.i.if.end.i_crit_edge ]
  %6 = ptrtoint ptr %queue_hw_ctx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %queue_hw_ctx.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %7, i32 %i.012.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.i, align 4
  tail call void @blk_mq_debugfs_unregister_hctx(ptr noundef %9) #20
  tail call fastcc void @blk_mq_exit_hctx(ptr noundef %q, ptr noundef %1, ptr noundef %9, i32 noundef %i.012.i) #20
  %inc.i = add nuw i32 %i.012.i, 1
  %10 = ptrtoint ptr %nr_hw_queues.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_hw_queues.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %11)
  %cmp.i = icmp uge i32 %inc.i, %11
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %3)
  %cmp1.i = icmp eq i32 %inc.i, %3
  %or.cond.i = or i1 %cmp1.i, %cmp.i
  br i1 %or.cond.i, label %if.end.i.blk_mq_exit_hw_queues.exit_crit_edge, label %if.end.i.if.end.i_crit_edge

if.end.i.if.end.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.end.i.blk_mq_exit_hw_queues.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_exit_hw_queues.exit

blk_mq_exit_hw_queues.exit:                       ; preds = %if.end.i.blk_mq_exit_hw_queues.exit_crit_edge, %entry.blk_mq_exit_hw_queues.exit_crit_edge
  %12 = ptrtoint ptr %tag_set to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tag_set, align 8
  %tag_list_lock.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %13, i32 0, i32 13
  tail call void @mutex_lock_nested(ptr noundef %tag_list_lock.i, i32 noundef 0) #20
  %tag_set_list.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 62
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %tag_set_list.i) #20
  br i1 %call.i.i.i, label %if.end.i.i.i, label %blk_mq_exit_hw_queues.exit.list_del.exit.i_crit_edge

blk_mq_exit_hw_queues.exit.list_del.exit.i_crit_edge: ; preds = %blk_mq_exit_hw_queues.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %blk_mq_exit_hw_queues.exit
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 62, i32 1
  %14 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i.i.i, align 4
  %16 = ptrtoint ptr %tag_set_list.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %tag_set_list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %15, ptr %prev1.i.i.i.i, align 4
  %19 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %17, ptr %15, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %blk_mq_exit_hw_queues.exit.list_del.exit.i_crit_edge
  %20 = ptrtoint ptr %tag_set_list.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 256 to ptr), ptr %tag_set_list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 62, i32 1
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %tag_list.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %13, i32 0, i32 14
  %22 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %tag_list.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %23, %tag_list.i
  br i1 %cmp.i.not.i.i, label %list_del.exit.i.blk_mq_del_queue_tag_set.exit_crit_edge, label %list_is_singular.exit.i

list_del.exit.i.blk_mq_del_queue_tag_set.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_del_queue_tag_set.exit

list_is_singular.exit.i:                          ; preds = %list_del.exit.i
  %prev.i9.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %13, i32 0, i32 14, i32 1
  %24 = ptrtoint ptr %prev.i9.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prev.i9.i, align 4
  %cmp.i.not.i = icmp eq ptr %23, %25
  br i1 %cmp.i.not.i, label %if.then.i, label %list_is_singular.exit.i.blk_mq_del_queue_tag_set.exit_crit_edge

list_is_singular.exit.i.blk_mq_del_queue_tag_set.exit_crit_edge: ; preds = %list_is_singular.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_del_queue_tag_set.exit

if.then.i:                                        ; preds = %list_is_singular.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %flags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %13, i32 0, i32 9
  %26 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %27, -3
  store i32 %and.i, ptr %flags.i, align 4
  tail call fastcc void @blk_mq_update_tag_set_shared(ptr noundef %13, i1 noundef zeroext false) #20
  br label %blk_mq_del_queue_tag_set.exit

blk_mq_del_queue_tag_set.exit:                    ; preds = %if.then.i, %list_is_singular.exit.i.blk_mq_del_queue_tag_set.exit_crit_edge, %list_del.exit.i.blk_mq_del_queue_tag_set.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %tag_list_lock.i) #20
  %28 = ptrtoint ptr %tag_set_list.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %tag_set_list.i, ptr %tag_set_list.i, align 4
  %29 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %tag_set_list.i, ptr %prev.i.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @blk_mq_alloc_tag_set(ptr noundef %set) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_hw_queues = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 3
  %0 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_hw_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %queue_depth = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 4
  %2 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %queue_depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool1.not = icmp eq i32 %3, 0
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %reserved_tags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 5
  %4 = ptrtoint ptr %reserved_tags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %reserved_tags, align 4
  %add = add i32 %5, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %add)
  %cmp = icmp ult i32 %3, %add
  br i1 %cmp, label %if.end3.cleanup_crit_edge, label %if.end6

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6:                                          ; preds = %if.end3
  %ops = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 2
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool7.not = icmp eq ptr %9, null
  br i1 %tobool7.not, label %if.end6.cleanup_crit_edge, label %if.end9

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end9:                                          ; preds = %if.end6
  %get_budget = getelementptr inbounds %struct.blk_mq_ops, ptr %7, i32 0, i32 3
  %10 = ptrtoint ptr %get_budget to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %get_budget, align 4
  %tobool11.not = icmp eq ptr %11, null
  %put_budget = getelementptr inbounds %struct.blk_mq_ops, ptr %7, i32 0, i32 4
  %12 = ptrtoint ptr %put_budget to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %put_budget, align 4
  %tobool13.not = icmp eq ptr %13, null
  %xor149 = xor i1 %tobool11.not, %tobool13.not
  br i1 %xor149, label %if.end9.cleanup_crit_edge, label %if.end18

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end18:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp4(i32 10240, i32 %3)
  %cmp20 = icmp ugt i32 %3, 10240
  br i1 %cmp20, label %do.end24, label %if.end18.if.end26_crit_edge

if.end18.if.end26_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26

do.end24:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #22
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, i32 noundef 10240) #23
  %14 = ptrtoint ptr %queue_depth to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 10240, ptr %queue_depth, align 4
  br label %if.end26

if.end26:                                         ; preds = %do.end24, %if.end18.if.end26_crit_edge
  %nr_maps = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 1
  %15 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %nr_maps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool27.not = icmp eq i32 %16, 0
  br i1 %tobool27.not, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #22
  %17 = ptrtoint ptr %nr_maps to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 1, ptr %nr_maps, align 4
  br label %if.end34

if.else:                                          ; preds = %if.end26
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %16)
  %cmp31 = icmp ugt i32 %16, 3
  br i1 %cmp31, label %if.else.cleanup_crit_edge, label %if.else.if.end34_crit_edge

if.else.if.end34_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end34

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end34:                                         ; preds = %if.else.if.end34_crit_edge, %if.then28
  call void @__asan_load8_noabort(i32 ptrtoint (ptr @elfcorehdr_addr to i32))
  %18 = load i64, ptr @elfcorehdr_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %18)
  %cmp.i.not = icmp eq i64 %18, -1
  br i1 %cmp.i.not, label %if.end43, label %if.end43.thread

if.end43.thread:                                  ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #22
  %19 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 1, ptr %nr_hw_queues, align 4
  %20 = ptrtoint ptr %nr_maps to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 1, ptr %nr_maps, align 4
  %21 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %queue_depth, align 4
  %23 = tail call i32 @llvm.umin.i32(i32 %22, i32 64)
  %24 = ptrtoint ptr %queue_depth to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %queue_depth, align 4
  br label %land.lhs.true

if.end43:                                         ; preds = %if.end34
  %25 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pr = load i32, ptr %nr_maps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr)
  %cmp45 = icmp eq i32 %.pr, 1
  br i1 %cmp45, label %if.end43.land.lhs.true_crit_edge, label %if.end50thread-pre-split

if.end43.land.lhs.true_crit_edge:                 ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end43.land.lhs.true_crit_edge, %if.end43.thread
  %26 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %nr_hw_queues, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %28)
  %cmp47 = icmp ugt i32 %27, %28
  br i1 %cmp47, label %if.then48, label %land.lhs.true.if.end50_crit_edge

land.lhs.true.if.end50_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end50

if.then48:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %29 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %nr_hw_queues, align 4
  br label %if.end50

if.end50thread-pre-split:                         ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #22
  %30 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %30)
  %.pr155 = load i32, ptr %nr_hw_queues, align 4
  br label %if.end50

if.end50:                                         ; preds = %if.end50thread-pre-split, %if.then48, %land.lhs.true.if.end50_crit_edge
  %31 = phi i32 [ %.pr155, %if.end50thread-pre-split ], [ %28, %if.then48 ], [ %27, %land.lhs.true.if.end50_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp.not.i.i = icmp sgt i32 %31, 0
  br i1 %cmp.not.i.i, label %if.end.i.i, label %if.end50.blk_mq_alloc_tag_set_tags.exit_crit_edge

if.end50.blk_mq_alloc_tag_set_tags.exit_crit_edge: ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_alloc_tag_set_tags.exit

if.end.i.i:                                       ; preds = %if.end50
  %32 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %31, i32 4) #20
  %33 = extractvalue { i32, i1 } %32, 1
  br i1 %33, label %if.end.i.i.cleanup_crit_edge, label %if.end7.i.i.i.i, !prof !300

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end7.i.i.i.i:                                  ; preds = %if.end.i.i
  %34 = extractvalue { i32, i1 } %32, 0
  %call.i.i.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %34, i32 noundef 3520) #25
  %tobool.not.i.i = icmp eq ptr %call.i.i.i.i.i, null
  br i1 %tobool.not.i.i, label %if.end7.i.i.i.i.cleanup_crit_edge, label %if.end2.i.i

if.end7.i.i.i.i.cleanup_crit_edge:                ; preds = %if.end7.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end2.i.i:                                      ; preds = %if.end7.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %tags.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  %35 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %tags.i.i, align 4
  tail call void @kfree(ptr noundef %36) #20
  %37 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %call.i.i.i.i.i, ptr %tags.i.i, align 4
  %38 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %31, ptr %nr_hw_queues, align 4
  br label %blk_mq_alloc_tag_set_tags.exit

blk_mq_alloc_tag_set_tags.exit:                   ; preds = %if.end2.i.i, %if.end50.blk_mq_alloc_tag_set_tags.exit_crit_edge
  %39 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %nr_maps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %cmp57167.not = icmp eq i32 %40, 0
  br i1 %cmp57167.not, label %blk_mq_alloc_tag_set_tags.exit.for.end_crit_edge, label %blk_mq_alloc_tag_set_tags.exit.for.body_crit_edge

blk_mq_alloc_tag_set_tags.exit.for.body_crit_edge: ; preds = %blk_mq_alloc_tag_set_tags.exit
  br label %for.body

blk_mq_alloc_tag_set_tags.exit.for.end_crit_edge: ; preds = %blk_mq_alloc_tag_set_tags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %cond.end69.for.body_crit_edge, %blk_mq_alloc_tag_set_tags.exit.for.body_crit_edge
  %i.0168 = phi i32 [ %inc, %cond.end69.for.body_crit_edge ], [ 0, %blk_mq_alloc_tag_set_tags.exit.for.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %41 = load i32, ptr @nr_cpu_ids, align 4
  %42 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %41, i32 4) #20
  %43 = extractvalue { i32, i1 } %42, 1
  br i1 %43, label %kcalloc_node.exit.thread, label %if.end7.i.i, !prof !300

kcalloc_node.exit.thread:                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx159 = getelementptr [3 x %struct.blk_mq_queue_map], ptr %set, i32 0, i32 %i.0168
  %44 = ptrtoint ptr %arrayidx159 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %arrayidx159, align 4
  br label %out_free_mq_map

if.end7.i.i:                                      ; preds = %for.body
  %45 = extractvalue { i32, i1 } %42, 0
  %call.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %45, i32 noundef 3520) #25
  %arrayidx = getelementptr [3 x %struct.blk_mq_queue_map], ptr %set, i32 0, i32 %i.0168
  %46 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %call.i.i.i, ptr %arrayidx, align 4
  %tobool62.not = icmp eq ptr %call.i.i.i, null
  br i1 %tobool62.not, label %if.end7.i.i.out_free_mq_map_crit_edge, label %if.end64

if.end7.i.i.out_free_mq_map_crit_edge:            ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_free_mq_map

if.end64:                                         ; preds = %if.end7.i.i
  call void @__asan_load8_noabort(i32 ptrtoint (ptr @elfcorehdr_addr to i32))
  %47 = load i64, ptr @elfcorehdr_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %47)
  %cmp.i153.not = icmp eq i64 %47, -1
  br i1 %cmp.i153.not, label %cond.false67, label %if.end64.cond.end69_crit_edge

if.end64.cond.end69_crit_edge:                    ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.end69

cond.false67:                                     ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #22
  %48 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %nr_hw_queues, align 4
  br label %cond.end69

cond.end69:                                       ; preds = %cond.false67, %if.end64.cond.end69_crit_edge
  %cond70 = phi i32 [ %49, %cond.false67 ], [ 1, %if.end64.cond.end69_crit_edge ]
  %nr_queues = getelementptr [3 x %struct.blk_mq_queue_map], ptr %set, i32 0, i32 %i.0168, i32 1
  %50 = ptrtoint ptr %nr_queues to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %cond70, ptr %nr_queues, align 4
  %inc = add nuw i32 %i.0168, 1
  %51 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %nr_maps, align 4
  %cmp57 = icmp ult i32 %inc, %52
  br i1 %cmp57, label %cond.end69.for.body_crit_edge, label %cond.end69.for.end_crit_edge

cond.end69.for.end_crit_edge:                     ; preds = %cond.end69
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

cond.end69.for.body_crit_edge:                    ; preds = %cond.end69
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %cond.end69.for.end_crit_edge, %blk_mq_alloc_tag_set_tags.exit.for.end_crit_edge
  %call73 = tail call fastcc i32 @blk_mq_update_queue_map(ptr noundef %set)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73)
  %tobool74.not = icmp eq i32 %call73, 0
  br i1 %tobool74.not, label %if.end76, label %for.end.out_free_mq_map_crit_edge

for.end.out_free_mq_map_crit_edge:                ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_free_mq_map

if.end76:                                         ; preds = %for.end
  %call77 = tail call fastcc i32 @blk_mq_alloc_set_map_and_rqs(ptr noundef %set)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77)
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %do.body81, label %if.end76.out_free_mq_map_crit_edge

if.end76.out_free_mq_map_crit_edge:               ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_free_mq_map

do.body81:                                        ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #22
  %tag_list_lock = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 13
  tail call void @__mutex_init(ptr noundef %tag_list_lock, ptr noundef nonnull @.str.22, ptr noundef nonnull @blk_mq_alloc_tag_set.__key) #20
  %tag_list = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 14
  %53 = ptrtoint ptr %tag_list to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %tag_list, ptr %tag_list, align 4
  %prev.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 14, i32 1
  %54 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %tag_list, ptr %prev.i, align 4
  br label %cleanup

out_free_mq_map:                                  ; preds = %if.end76.out_free_mq_map_crit_edge, %for.end.out_free_mq_map_crit_edge, %if.end7.i.i.out_free_mq_map_crit_edge, %kcalloc_node.exit.thread
  %ret.0 = phi i32 [ %call73, %for.end.out_free_mq_map_crit_edge ], [ %call77, %if.end76.out_free_mq_map_crit_edge ], [ -12, %kcalloc_node.exit.thread ], [ -12, %if.end7.i.i.out_free_mq_map_crit_edge ]
  %55 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %nr_maps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %cmp86171.not = icmp eq i32 %56, 0
  br i1 %cmp86171.not, label %out_free_mq_map.for.end96_crit_edge, label %out_free_mq_map.for.body87_crit_edge

out_free_mq_map.for.body87_crit_edge:             ; preds = %out_free_mq_map
  br label %for.body87

out_free_mq_map.for.end96_crit_edge:              ; preds = %out_free_mq_map
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end96

for.body87:                                       ; preds = %for.body87.for.body87_crit_edge, %out_free_mq_map.for.body87_crit_edge
  %i.1172 = phi i32 [ %inc95, %for.body87.for.body87_crit_edge ], [ 0, %out_free_mq_map.for.body87_crit_edge ]
  %arrayidx89 = getelementptr [3 x %struct.blk_mq_queue_map], ptr %set, i32 0, i32 %i.1172
  %57 = ptrtoint ptr %arrayidx89 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx89, align 4
  tail call void @kfree(ptr noundef %58) #20
  %59 = ptrtoint ptr %arrayidx89 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr null, ptr %arrayidx89, align 4
  %inc95 = add nuw i32 %i.1172, 1
  %60 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %nr_maps, align 4
  %cmp86 = icmp ult i32 %inc95, %61
  br i1 %cmp86, label %for.body87.for.body87_crit_edge, label %for.body87.for.end96_crit_edge

for.body87.for.end96_crit_edge:                   ; preds = %for.body87
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end96

for.body87.for.body87_crit_edge:                  ; preds = %for.body87
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body87

for.end96:                                        ; preds = %for.body87.for.end96_crit_edge, %out_free_mq_map.for.end96_crit_edge
  %tags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  %62 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %tags, align 4
  tail call void @kfree(ptr noundef %63) #20
  %64 = ptrtoint ptr %tags to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr null, ptr %tags, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end96, %do.body81, %if.end7.i.i.i.i.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %for.end96 ], [ 0, %do.body81 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.end3.cleanup_crit_edge ], [ -22, %if.end6.cleanup_crit_edge ], [ -22, %if.end9.cleanup_crit_edge ], [ -22, %if.else.cleanup_crit_edge ], [ -12, %if.end7.i.i.i.i.cleanup_crit_edge ], [ -12, %if.end.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @blk_mq_update_queue_map(ptr noundef %set) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_maps = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 1
  %0 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_maps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %nr_hw_queues = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 3
  %2 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_hw_queues, align 4
  %nr_queues = getelementptr inbounds %struct.blk_mq_queue_map, ptr %set, i32 0, i32 1
  %4 = ptrtoint ptr %nr_queues to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %nr_queues, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ops = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 2
  %5 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops, align 4
  %map_queues = getelementptr inbounds %struct.blk_mq_ops, ptr %6, i32 0, i32 16
  %7 = ptrtoint ptr %map_queues to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %map_queues, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %if.end.do.body_crit_edge, label %land.lhs.true

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

land.lhs.true:                                    ; preds = %if.end
  call void @__asan_load8_noabort(i32 ptrtoint (ptr @elfcorehdr_addr to i32))
  %9 = load i64, ptr @elfcorehdr_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %9)
  %cmp.i.not = icmp eq i64 %9, -1
  br i1 %cmp.i.not, label %for.cond.preheader, label %land.lhs.true.do.body_crit_edge

land.lhs.true.do.body_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

for.cond.preheader:                               ; preds = %land.lhs.true
  %10 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_maps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp334.not = icmp eq i32 %11, 0
  br i1 %cmp334.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %blk_mq_clear_mq_map.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.035 = phi i32 [ %inc, %blk_mq_clear_mq_map.exit.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx5 = getelementptr [3 x %struct.blk_mq_queue_map], ptr %set, i32 0, i32 %i.035
  %call3.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %12 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call3.i, i32 %12)
  %cmp4.i = icmp ult i32 %call3.i, %12
  br i1 %cmp4.i, label %for.body.for.body.i_crit_edge, label %for.body.blk_mq_clear_mq_map.exit_crit_edge

for.body.blk_mq_clear_mq_map.exit_crit_edge:      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_clear_mq_map.exit

for.body.for.body.i_crit_edge:                    ; preds = %for.body
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.for.body.i_crit_edge
  %call5.i = phi i32 [ %call.i, %for.body.i.for.body.i_crit_edge ], [ %call3.i, %for.body.for.body.i_crit_edge ]
  %13 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx5, align 4
  %arrayidx.i = getelementptr i32, ptr %14, i32 %call5.i
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %arrayidx.i, align 4
  %call.i = tail call i32 @cpumask_next(i32 noundef %call5.i, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %16 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i33 = icmp ult i32 %call.i, %16
  br i1 %cmp.i33, label %for.body.i.for.body.i_crit_edge, label %for.body.i.blk_mq_clear_mq_map.exit_crit_edge

for.body.i.blk_mq_clear_mq_map.exit_crit_edge:    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_clear_mq_map.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

blk_mq_clear_mq_map.exit:                         ; preds = %for.body.i.blk_mq_clear_mq_map.exit_crit_edge, %for.body.blk_mq_clear_mq_map.exit_crit_edge
  %inc = add nuw i32 %i.035, 1
  %17 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nr_maps, align 4
  %cmp3 = icmp ult i32 %inc, %18
  br i1 %cmp3, label %blk_mq_clear_mq_map.exit.for.body_crit_edge, label %blk_mq_clear_mq_map.exit.for.end_crit_edge

blk_mq_clear_mq_map.exit.for.end_crit_edge:       ; preds = %blk_mq_clear_mq_map.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

blk_mq_clear_mq_map.exit.for.body_crit_edge:      ; preds = %blk_mq_clear_mq_map.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %blk_mq_clear_mq_map.exit.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %19 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ops, align 4
  %map_queues7 = getelementptr inbounds %struct.blk_mq_ops, ptr %20, i32 0, i32 16
  %21 = ptrtoint ptr %map_queues7 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %map_queues7, align 4
  %call8 = tail call i32 %22(ptr noundef %set) #20
  br label %return

do.body:                                          ; preds = %land.lhs.true.do.body_crit_edge, %if.end.do.body_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp10 = icmp ugt i32 %1, 1
  br i1 %cmp10, label %do.body14, label %do.end18, !prof !300

do.body14:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22block/blk-mq.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4206, 0\0A.popsection", ""() #20, !srcloc !357
  unreachable

do.end18:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  %call21 = tail call i32 @blk_mq_map_queues(ptr noundef %set) #20
  br label %return

return:                                           ; preds = %do.end18, %for.end
  %retval.0 = phi i32 [ %call21, %do.end18 ], [ %call8, %for.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @blk_mq_alloc_set_map_and_rqs(ptr noundef %set) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_depth = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 4
  %0 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %queue_depth, align 4
  %flags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %shared_tags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 12
  %nr_hw_queues.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 3
  %tags.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  %reserved_tags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 5
  br label %do.body

do.body:                                          ; preds = %if.end.do.body_crit_edge, %entry
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %do.body.if.end4.i_crit_edge, label %if.then.i

do.body.if.end4.i_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i

if.then.i:                                        ; preds = %do.body
  %4 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %queue_depth, align 4
  %call1.i = tail call ptr @blk_mq_alloc_map_and_rqs(ptr noundef %set, i32 noundef -1, i32 noundef %5) #20
  %6 = ptrtoint ptr %shared_tags.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call1.i, ptr %shared_tags.i, align 4
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %if.then.i.if.end_crit_edge, label %if.then.i.if.end4.i_crit_edge

if.then.i.if.end4.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i

if.then.i.if.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end4.i:                                        ; preds = %if.then.i.if.end4.i_crit_edge, %do.body.if.end4.i_crit_edge
  %7 = ptrtoint ptr %nr_hw_queues.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %nr_hw_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp43.not.i = icmp eq i32 %8, 0
  br i1 %cmp43.not.i, label %if.end4.i.do.end_crit_edge, label %if.end4.i.for.body.i_crit_edge

if.end4.i.for.body.i_crit_edge:                   ; preds = %if.end4.i
  br label %for.body.i

if.end4.i.do.end_crit_edge:                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

for.body.i:                                       ; preds = %if.end7.i.for.body.i_crit_edge, %if.end4.i.for.body.i_crit_edge
  %i.044.i = phi i32 [ %inc.i, %if.end7.i.for.body.i_crit_edge ], [ 0, %if.end4.i.for.body.i_crit_edge ]
  %9 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags.i, align 4
  %and.i.i.i = and i32 %10, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %__blk_mq_alloc_map_and_rqs.exit.i, label %__blk_mq_alloc_map_and_rqs.exit.thread.i

__blk_mq_alloc_map_and_rqs.exit.thread.i:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %11 = ptrtoint ptr %shared_tags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %shared_tags.i, align 4
  %13 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tags.i.i, align 4
  %arrayidx.i.i = getelementptr ptr, ptr %14, i32 %i.044.i
  %15 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %arrayidx.i.i, align 4
  br label %if.end7.i

__blk_mq_alloc_map_and_rqs.exit.i:                ; preds = %for.body.i
  %16 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %queue_depth, align 4
  %call1.i.i = tail call ptr @blk_mq_alloc_map_and_rqs(ptr noundef %set, i32 noundef %i.044.i, i32 noundef %17) #20
  %18 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %tags.i.i, align 4
  %arrayidx3.i.i = getelementptr ptr, ptr %19, i32 %i.044.i
  %20 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call1.i.i, ptr %arrayidx3.i.i, align 4
  %21 = load ptr, ptr %tags.i.i, align 4
  %arrayidx5.i.i = getelementptr ptr, ptr %21, i32 %i.044.i
  %22 = ptrtoint ptr %arrayidx5.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx5.i.i, align 4
  %tobool.i29.not.i = icmp eq ptr %23, null
  br i1 %tobool.i29.not.i, label %while.cond.preheader.i, label %__blk_mq_alloc_map_and_rqs.exit.i.if.end7.i_crit_edge

__blk_mq_alloc_map_and_rqs.exit.i.if.end7.i_crit_edge: ; preds = %__blk_mq_alloc_map_and_rqs.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7.i

while.cond.preheader.i:                           ; preds = %__blk_mq_alloc_map_and_rqs.exit.i
  %dec46.i = add i32 %i.044.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %dec46.i)
  %cmp947.i = icmp sgt i32 %dec46.i, -1
  br i1 %cmp947.i, label %while.cond.preheader.i.while.body.i_crit_edge, label %while.cond.preheader.i.while.end.i_crit_edge

while.cond.preheader.i.while.end.i_crit_edge:     ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.cond.preheader.i.while.body.i_crit_edge:    ; preds = %while.cond.preheader.i
  br label %while.body.i

if.end7.i:                                        ; preds = %__blk_mq_alloc_map_and_rqs.exit.i.if.end7.i_crit_edge, %__blk_mq_alloc_map_and_rqs.exit.thread.i
  tail call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 4122, i32 noundef 0) #20
  %call.i.i = tail call i32 @__cond_resched() #20
  %inc.i = add nuw i32 %i.044.i, 1
  %24 = ptrtoint ptr %nr_hw_queues.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %nr_hw_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %25
  br i1 %cmp.i, label %if.end7.i.for.body.i_crit_edge, label %if.end7.i.do.end_crit_edge

if.end7.i.do.end_crit_edge:                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

if.end7.i.for.body.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

while.body.i:                                     ; preds = %__blk_mq_free_map_and_rqs.exit.i.while.body.i_crit_edge, %while.cond.preheader.i.while.body.i_crit_edge
  %dec48.i = phi i32 [ %dec.i, %__blk_mq_free_map_and_rqs.exit.i.while.body.i_crit_edge ], [ %dec46.i, %while.cond.preheader.i.while.body.i_crit_edge ]
  %26 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags.i, align 4
  %and.i.i31.i = and i32 %27, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i31.i)
  %tobool.i.not.i32.i = icmp eq i32 %and.i.i31.i, 0
  br i1 %tobool.i.not.i32.i, label %if.then.i35.i, label %while.body.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge

while.body.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_free_map_and_rqs.exit.i

if.then.i35.i:                                    ; preds = %while.body.i
  %28 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %tags.i.i, align 4
  %arrayidx.i34.i = getelementptr ptr, ptr %29, i32 %dec48.i
  %30 = ptrtoint ptr %arrayidx.i34.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx.i34.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %31, null
  br i1 %tobool.not.i.i.i, label %if.then.i35.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge, label %if.then.i.i.i

if.then.i35.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge: ; preds = %if.then.i35.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_free_map_and_rqs.exit.i

if.then.i.i.i:                                    ; preds = %if.then.i35.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_free_rqs(ptr noundef %set, ptr noundef nonnull %31, i32 noundef %dec48.i) #20
  %rqs.i.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %31, i32 0, i32 5
  %32 = ptrtoint ptr %rqs.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %rqs.i.i.i.i, align 4
  tail call void @kfree(ptr noundef %33) #20
  %34 = ptrtoint ptr %rqs.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %rqs.i.i.i.i, align 4
  %static_rqs.i.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %31, i32 0, i32 6
  %35 = ptrtoint ptr %static_rqs.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %static_rqs.i.i.i.i, align 4
  tail call void @kfree(ptr noundef %36) #20
  %37 = ptrtoint ptr %static_rqs.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %static_rqs.i.i.i.i, align 4
  tail call void @blk_mq_free_tags(ptr noundef nonnull %31) #20
  br label %__blk_mq_free_map_and_rqs.exit.i

__blk_mq_free_map_and_rqs.exit.i:                 ; preds = %if.then.i.i.i, %if.then.i35.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge, %while.body.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge
  %38 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %tags.i.i, align 4
  %arrayidx2.i.i = getelementptr ptr, ptr %39, i32 %dec48.i
  %40 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %arrayidx2.i.i, align 4
  %dec.i = add i32 %dec48.i, -1
  %cmp9.i = icmp sgt i32 %dec.i, -1
  br i1 %cmp9.i, label %__blk_mq_free_map_and_rqs.exit.i.while.body.i_crit_edge, label %__blk_mq_free_map_and_rqs.exit.i.while.end.i_crit_edge

__blk_mq_free_map_and_rqs.exit.i.while.end.i_crit_edge: ; preds = %__blk_mq_free_map_and_rqs.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

__blk_mq_free_map_and_rqs.exit.i.while.body.i_crit_edge: ; preds = %__blk_mq_free_map_and_rqs.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

while.end.i:                                      ; preds = %__blk_mq_free_map_and_rqs.exit.i.while.end.i_crit_edge, %while.cond.preheader.i.while.end.i_crit_edge
  %41 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %flags.i, align 4
  %and.i37.i = and i32 %42, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i37.i)
  %tobool.i38.not.i = icmp eq i32 %and.i37.i, 0
  br i1 %tobool.i38.not.i, label %while.end.i.if.end_crit_edge, label %if.then12.i

while.end.i.if.end_crit_edge:                     ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then12.i:                                      ; preds = %while.end.i
  %43 = ptrtoint ptr %shared_tags.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %shared_tags.i, align 4
  %tobool.not.i.i = icmp eq ptr %44, null
  br i1 %tobool.not.i.i, label %if.then12.i.if.end_crit_edge, label %if.then.i39.i

if.then12.i.if.end_crit_edge:                     ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then.i39.i:                                    ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_free_rqs(ptr noundef %set, ptr noundef nonnull %44, i32 noundef -1) #20
  %rqs.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %44, i32 0, i32 5
  %45 = ptrtoint ptr %rqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %rqs.i.i.i, align 4
  tail call void @kfree(ptr noundef %46) #20
  %47 = ptrtoint ptr %rqs.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %rqs.i.i.i, align 4
  %static_rqs.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %44, i32 0, i32 6
  %48 = ptrtoint ptr %static_rqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %static_rqs.i.i.i, align 4
  tail call void @kfree(ptr noundef %49) #20
  %50 = ptrtoint ptr %static_rqs.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr null, ptr %static_rqs.i.i.i, align 4
  tail call void @blk_mq_free_tags(ptr noundef nonnull %44) #20
  br label %if.end

if.end:                                           ; preds = %if.then.i39.i, %if.then12.i.if.end_crit_edge, %while.end.i.if.end_crit_edge, %if.then.i.if.end_crit_edge
  %51 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %queue_depth, align 4
  %shr = lshr i32 %52, 1
  store i32 %shr, ptr %queue_depth, align 4
  %53 = ptrtoint ptr %reserved_tags to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %reserved_tags, align 4
  %add = add i32 %54, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %add)
  %cmp = icmp ult i32 %shr, %add
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %52)
  %tobool6.not = icmp ult i32 %52, 2
  %or.cond = or i1 %tobool6.not, %cmp
  br i1 %or.cond, label %if.end.do.end13_crit_edge, label %if.end.do.body_crit_edge

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

if.end.do.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end13

do.end:                                           ; preds = %if.end7.i.do.end_crit_edge, %if.end4.i.do.end_crit_edge
  %55 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %queue_depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool8.not = icmp eq i32 %56, 0
  br i1 %tobool8.not, label %do.end.do.end13_crit_edge, label %if.end15

do.end.do.end13_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end13

do.end13:                                         ; preds = %do.end.do.end13_crit_edge, %if.end.do.end13_crit_edge
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.52) #23
  br label %cleanup

if.end15:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %56)
  %cmp17.not = icmp eq i32 %1, %56
  br i1 %cmp17.not, label %if.end15.cleanup_crit_edge, label %do.end21

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

do.end21:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.55, i32 noundef %1, i32 noundef %56) #23
  br label %cleanup

cleanup:                                          ; preds = %do.end21, %if.end15.cleanup_crit_edge, %do.end13
  %retval.0 = phi i32 [ -12, %do.end13 ], [ 0, %do.end21 ], [ 0, %if.end15.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @blk_mq_alloc_sq_tag_set(ptr noundef %set, ptr noundef %ops, i32 noundef %queue_depth, i32 noundef %set_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = call ptr @memset(ptr %set, i32 0, i32 184)
  %ops1 = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 2
  %1 = ptrtoint ptr %ops1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %ops, ptr %ops1, align 4
  %nr_hw_queues = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 3
  %2 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %nr_hw_queues, align 4
  %nr_maps = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 1
  %3 = ptrtoint ptr %nr_maps to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %nr_maps, align 4
  %queue_depth2 = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 4
  %4 = ptrtoint ptr %queue_depth2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %queue_depth, ptr %queue_depth2, align 4
  %numa_node = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 7
  %5 = ptrtoint ptr %numa_node to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %numa_node, align 4
  %flags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %set_flags, ptr %flags, align 4
  %call = tail call i32 @blk_mq_alloc_tag_set(ptr noundef %set)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_free_tag_set(ptr noundef %set) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_hw_queues = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 3
  %0 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_hw_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp26.not = icmp eq i32 %1, 0
  br i1 %cmp26.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %flags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %tags.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  br label %for.body

for.body:                                         ; preds = %__blk_mq_free_map_and_rqs.exit.for.body_crit_edge, %for.body.lr.ph
  %i.027 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %__blk_mq_free_map_and_rqs.exit.for.body_crit_edge ]
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then.i, label %for.body.__blk_mq_free_map_and_rqs.exit_crit_edge

for.body.__blk_mq_free_map_and_rqs.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_free_map_and_rqs.exit

if.then.i:                                        ; preds = %for.body
  %4 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tags.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %5, i32 %i.027
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %if.then.i.__blk_mq_free_map_and_rqs.exit_crit_edge, label %if.then.i.i

if.then.i.__blk_mq_free_map_and_rqs.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_free_map_and_rqs.exit

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_free_rqs(ptr noundef %set, ptr noundef nonnull %7, i32 noundef %i.027) #20
  %rqs.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %rqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rqs.i.i.i, align 4
  tail call void @kfree(ptr noundef %9) #20
  %10 = ptrtoint ptr %rqs.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %rqs.i.i.i, align 4
  %static_rqs.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %7, i32 0, i32 6
  %11 = ptrtoint ptr %static_rqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %static_rqs.i.i.i, align 4
  tail call void @kfree(ptr noundef %12) #20
  %13 = ptrtoint ptr %static_rqs.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %static_rqs.i.i.i, align 4
  tail call void @blk_mq_free_tags(ptr noundef nonnull %7) #20
  br label %__blk_mq_free_map_and_rqs.exit

__blk_mq_free_map_and_rqs.exit:                   ; preds = %if.then.i.i, %if.then.i.__blk_mq_free_map_and_rqs.exit_crit_edge, %for.body.__blk_mq_free_map_and_rqs.exit_crit_edge
  %14 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tags.i, align 4
  %arrayidx2.i = getelementptr ptr, ptr %15, i32 %i.027
  %16 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %arrayidx2.i, align 4
  %inc = add nuw i32 %i.027, 1
  %17 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nr_hw_queues, align 4
  %cmp = icmp ult i32 %inc, %18
  br i1 %cmp, label %__blk_mq_free_map_and_rqs.exit.for.body_crit_edge, label %__blk_mq_free_map_and_rqs.exit.for.end_crit_edge

__blk_mq_free_map_and_rqs.exit.for.end_crit_edge: ; preds = %__blk_mq_free_map_and_rqs.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

__blk_mq_free_map_and_rqs.exit.for.body_crit_edge: ; preds = %__blk_mq_free_map_and_rqs.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %__blk_mq_free_map_and_rqs.exit.for.end_crit_edge, %entry.for.end_crit_edge
  %flags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %19 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags, align 4
  %and.i = and i32 %20, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %for.end.if.end_crit_edge, label %if.then

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %for.end
  %shared_tags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 12
  %21 = ptrtoint ptr %shared_tags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %shared_tags, align 4
  %tobool.not.i = icmp eq ptr %22, null
  br i1 %tobool.not.i, label %if.then.if.end_crit_edge, label %if.then.i25

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then.i25:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_free_rqs(ptr noundef %set, ptr noundef nonnull %22, i32 noundef -1) #20
  %rqs.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %22, i32 0, i32 5
  %23 = ptrtoint ptr %rqs.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %rqs.i.i, align 4
  tail call void @kfree(ptr noundef %24) #20
  %25 = ptrtoint ptr %rqs.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %rqs.i.i, align 4
  %static_rqs.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %22, i32 0, i32 6
  %26 = ptrtoint ptr %static_rqs.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %static_rqs.i.i, align 4
  tail call void @kfree(ptr noundef %27) #20
  %28 = ptrtoint ptr %static_rqs.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %static_rqs.i.i, align 4
  tail call void @blk_mq_free_tags(ptr noundef nonnull %22) #20
  br label %if.end

if.end:                                           ; preds = %if.then.i25, %if.then.if.end_crit_edge, %for.end.if.end_crit_edge
  %nr_maps = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 1
  %29 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %nr_maps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %cmp229.not = icmp eq i32 %30, 0
  br i1 %cmp229.not, label %if.end.for.end9_crit_edge, label %if.end.for.body3_crit_edge

if.end.for.body3_crit_edge:                       ; preds = %if.end
  br label %for.body3

if.end.for.end9_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end9

for.body3:                                        ; preds = %for.body3.for.body3_crit_edge, %if.end.for.body3_crit_edge
  %j.030 = phi i32 [ %inc8, %for.body3.for.body3_crit_edge ], [ 0, %if.end.for.body3_crit_edge ]
  %arrayidx = getelementptr [3 x %struct.blk_mq_queue_map], ptr %set, i32 0, i32 %j.030
  %31 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx, align 4
  tail call void @kfree(ptr noundef %32) #20
  %33 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %arrayidx, align 4
  %inc8 = add nuw i32 %j.030, 1
  %34 = ptrtoint ptr %nr_maps to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %nr_maps, align 4
  %cmp2 = icmp ult i32 %inc8, %35
  br i1 %cmp2, label %for.body3.for.body3_crit_edge, label %for.body3.for.end9_crit_edge

for.body3.for.end9_crit_edge:                     ; preds = %for.body3
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end9

for.body3.for.body3_crit_edge:                    ; preds = %for.body3
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body3

for.end9:                                         ; preds = %for.body3.for.end9_crit_edge, %if.end.for.end9_crit_edge
  %tags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  %36 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tags, align 4
  tail call void @kfree(ptr noundef %37) #20
  %38 = ptrtoint ptr %tags to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %tags, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @blk_mq_update_nr_requests(ptr noundef %q, i32 noundef %nr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tag_set = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 61
  %0 = ptrtoint ptr %tag_set to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tag_set, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %nr_requests = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 21
  %2 = ptrtoint ptr %nr_requests to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_requests, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %nr)
  %cmp = icmp eq i32 %3, %nr
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end2:                                          ; preds = %if.end
  tail call void @blk_freeze_queue(ptr noundef %q) #20
  %queue_lock.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 14
  %call2.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock.i.i) #20
  %quiesce_depth.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 60
  %4 = ptrtoint ptr %quiesce_depth.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %quiesce_depth.i.i, align 4
  %inc.i.i = add i32 %5, 1
  store i32 %inc.i.i, ptr %quiesce_depth.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end2.blk_mq_quiesce_queue_nowait.exit.i_crit_edge

if.end2.blk_mq_quiesce_queue_nowait.exit.i_crit_edge: ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_quiesce_queue_nowait.exit.i

if.then.i.i:                                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_queue_flag_set(i32 noundef 24, ptr noundef %q) #20
  br label %blk_mq_quiesce_queue_nowait.exit.i

blk_mq_quiesce_queue_nowait.exit.i:               ; preds = %if.then.i.i, %if.end2.blk_mq_quiesce_queue_nowait.exit.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock.i.i, i32 noundef %call2.i.i) #20
  %queue_flags.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 11
  %6 = ptrtoint ptr %queue_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %queue_flags.i.i, align 4
  %8 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i2.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i2.i, label %if.else.i.i, label %if.then.i3.i

if.then.i3.i:                                     ; preds = %blk_mq_quiesce_queue_nowait.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %srcu.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 70
  tail call void @synchronize_srcu(ptr noundef %srcu.i.i) #20
  br label %blk_mq_quiesce_queue.exit

if.else.i.i:                                      ; preds = %blk_mq_quiesce_queue_nowait.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @synchronize_rcu() #20
  br label %blk_mq_quiesce_queue.exit

blk_mq_quiesce_queue.exit:                        ; preds = %if.else.i.i, %if.then.i3.i
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %9 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp376.not = icmp eq i32 %10, 0
  br i1 %cmp376.not, label %blk_mq_quiesce_queue.exit.if.then27_crit_edge, label %land.rhs.lr.ph

blk_mq_quiesce_queue.exit.if.then27_crit_edge:    ; preds = %blk_mq_quiesce_queue.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then27

land.rhs.lr.ph:                                   ; preds = %blk_mq_quiesce_queue.exit
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %elevator = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 1
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %land.rhs.lr.ph
  %i.077 = phi i32 [ 0, %land.rhs.lr.ph ], [ %inc, %for.inc.land.rhs_crit_edge ]
  %11 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %12, i32 %i.077
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx, align 4
  %tags = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %14, i32 0, i32 19
  %15 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tags, align 16
  %tobool5.not = icmp eq ptr %16, null
  br i1 %tobool5.not, label %land.rhs.for.inc_crit_edge, label %if.end7

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.end7:                                          ; preds = %land.rhs
  %sched_tags = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %14, i32 0, i32 20
  %17 = ptrtoint ptr %sched_tags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sched_tags, align 4
  %tobool8.not = icmp eq ptr %18, null
  br i1 %tobool8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  %call = tail call i32 @blk_mq_tag_update_depth(ptr noundef %14, ptr noundef %sched_tags, i32 noundef %nr, i1 noundef zeroext true) #20
  br label %if.end13

if.else:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  %call12 = tail call i32 @blk_mq_tag_update_depth(ptr noundef %14, ptr noundef %tags, i32 noundef %nr, i1 noundef zeroext false) #20
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then9
  %ret.1 = phi i32 [ %call, %if.then9 ], [ %call12, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1)
  %tobool14.not = icmp eq i32 %ret.1, 0
  br i1 %tobool14.not, label %if.end16, label %if.end13.if.end37_crit_edge

if.end13.if.end37_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end37

if.end16:                                         ; preds = %if.end13
  %19 = ptrtoint ptr %elevator to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %elevator, align 4
  %tobool17.not = icmp eq ptr %20, null
  br i1 %tobool17.not, label %if.end16.for.inc_crit_edge, label %land.lhs.true

if.end16.for.inc_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

land.lhs.true:                                    ; preds = %if.end16
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %depth_updated = getelementptr inbounds %struct.elevator_type, ptr %22, i32 0, i32 1, i32 4
  %23 = ptrtoint ptr %depth_updated to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %depth_updated, align 4
  %tobool19.not = icmp eq ptr %24, null
  br i1 %tobool19.not, label %land.lhs.true.for.inc_crit_edge, label %if.then20

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then20:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %24(ptr noundef %14) #20
  br label %for.inc

for.inc:                                          ; preds = %if.then20, %land.lhs.true.for.inc_crit_edge, %if.end16.for.inc_crit_edge, %land.rhs.for.inc_crit_edge
  %inc = add nuw i32 %i.077, 1
  %25 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %nr_hw_queues, align 8
  %cmp3 = icmp ult i32 %inc, %26
  br i1 %cmp3, label %for.inc.land.rhs_crit_edge, label %for.inc.if.then27_crit_edge

for.inc.if.then27_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then27

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs

if.then27:                                        ; preds = %for.inc.if.then27_crit_edge, %blk_mq_quiesce_queue.exit.if.then27_crit_edge
  %27 = ptrtoint ptr %nr_requests to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nr, ptr %nr_requests, align 8
  %flags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %1, i32 0, i32 9
  %28 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %flags, align 4
  %and.i = and i32 %29, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.then27.if.end37_crit_edge, label %if.then30

if.then27.if.end37_crit_edge:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end37

if.then30:                                        ; preds = %if.then27
  %elevator31 = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 1
  %30 = ptrtoint ptr %elevator31 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %elevator31, align 4
  %tobool32.not = icmp eq ptr %31, null
  br i1 %tobool32.not, label %if.else34, label %if.then33

if.then33:                                        ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_tag_update_sched_shared_tags(ptr noundef %q) #20
  br label %if.end37

if.else34:                                        ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @blk_mq_tag_resize_shared_tags(ptr noundef nonnull %1, i32 noundef %nr) #20
  br label %if.end37

if.end37:                                         ; preds = %if.else34, %if.then33, %if.then27.if.end37_crit_edge, %if.end13.if.end37_crit_edge
  %ret.374 = phi i32 [ 0, %if.then27.if.end37_crit_edge ], [ 0, %if.else34 ], [ 0, %if.then33 ], [ %ret.1, %if.end13.if.end37_crit_edge ]
  tail call void @blk_mq_unquiesce_queue(ptr noundef %q)
  tail call void @__blk_mq_unfreeze_queue(ptr noundef %q, i1 noundef zeroext false) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.374, %if.end37 ], [ -22, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_mq_tag_update_depth(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_tag_update_sched_shared_tags(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_tag_resize_shared_tags(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_update_nr_hw_queues(ptr noundef %set, i32 noundef %nr_hw_queues) #0 align 64 {
entry:
  %head.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tag_list_lock = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 13
  tail call void @mutex_lock_nested(ptr noundef %tag_list_lock, i32 noundef 0) #20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %head.i) #20
  %0 = getelementptr inbounds %struct.list_head, ptr %head.i, i32 0, i32 1
  %1 = ptrtoint ptr %head.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %head.i, ptr %head.i, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %head.i, ptr %0, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.rhs.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

land.rhs.i:                                       ; preds = %entry
  %dep_map.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 13, i32 5
  %call.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !300

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4496, i32 noundef 9, ptr noundef null) #20
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %nr_maps.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 1
  %4 = ptrtoint ptr %nr_maps.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_maps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp24.i = icmp eq i32 %5, 1
  br i1 %cmp24.i, label %if.end27.i, label %if.end27.thread.i

if.end27.i:                                       ; preds = %if.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %6 = load i32, ptr @nr_cpu_ids, align 4
  %7 = call i32 @llvm.umin.i32(i32 %6, i32 %nr_hw_queues) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp28.i = icmp slt i32 %7, 1
  br i1 %cmp28.i, label %if.end27.i.__blk_mq_update_nr_hw_queues.exit_crit_edge, label %land.lhs.true33.i

if.end27.i.__blk_mq_update_nr_hw_queues.exit_crit_edge: ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_update_nr_hw_queues.exit

if.end27.thread.i:                                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %nr_hw_queues)
  %cmp28277.i = icmp slt i32 %nr_hw_queues, 1
  br i1 %cmp28277.i, label %if.end27.thread.i.__blk_mq_update_nr_hw_queues.exit_crit_edge, label %if.end27.thread.i.if.end37.i_crit_edge

if.end27.thread.i.if.end37.i_crit_edge:           ; preds = %if.end27.thread.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end37.i

if.end27.thread.i.__blk_mq_update_nr_hw_queues.exit_crit_edge: ; preds = %if.end27.thread.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_update_nr_hw_queues.exit

land.lhs.true33.i:                                ; preds = %if.end27.i
  %nr_hw_queues34.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 3
  %8 = ptrtoint ptr %nr_hw_queues34.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_hw_queues34.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp35.i = icmp eq i32 %7, %9
  br i1 %cmp35.i, label %land.lhs.true33.i.__blk_mq_update_nr_hw_queues.exit_crit_edge, label %land.lhs.true33.i.if.end37.i_crit_edge

land.lhs.true33.i.if.end37.i_crit_edge:           ; preds = %land.lhs.true33.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end37.i

land.lhs.true33.i.__blk_mq_update_nr_hw_queues.exit_crit_edge: ; preds = %land.lhs.true33.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_update_nr_hw_queues.exit

if.end37.i:                                       ; preds = %land.lhs.true33.i.if.end37.i_crit_edge, %if.end27.thread.i.if.end37.i_crit_edge
  %nr_hw_queues.addr.0278280.i = phi i32 [ %7, %land.lhs.true33.i.if.end37.i_crit_edge ], [ %nr_hw_queues, %if.end27.thread.i.if.end37.i_crit_edge ]
  %tag_list.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 14
  %10 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn287.i = load ptr, ptr %tag_list.i, align 4
  %cmp41.not288.i = icmp eq ptr %.pn287.i, %tag_list.i
  br i1 %cmp41.not288.i, label %if.end37.i.for.cond54.preheader.i_crit_edge, label %if.end37.i.for.body.i_crit_edge

if.end37.i.for.body.i_crit_edge:                  ; preds = %if.end37.i
  br label %for.body.i

if.end37.i.for.cond54.preheader.i_crit_edge:      ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond54.preheader.i

for.cond54.preheader.i:                           ; preds = %for.body.i.for.cond54.preheader.i_crit_edge, %if.end37.i.for.cond54.preheader.i_crit_edge
  %11 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn257290.i = load ptr, ptr %tag_list.i, align 4
  %cmp57.not291.i = icmp eq ptr %.pn257290.i, %tag_list.i
  br i1 %cmp57.not291.i, label %for.cond54.preheader.i.for.cond76.preheader.i_crit_edge, label %for.cond54.preheader.i.for.body60.i_crit_edge

for.cond54.preheader.i.for.body60.i_crit_edge:    ; preds = %for.cond54.preheader.i
  br label %for.body60.i

for.cond54.preheader.i.for.cond76.preheader.i_crit_edge: ; preds = %for.cond54.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond76.preheader.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end37.i.for.body.i_crit_edge
  %.pn289.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn287.i, %if.end37.i.for.body.i_crit_edge ]
  %q.0.i = getelementptr i8, ptr %.pn289.i, i32 -1204
  call void @blk_freeze_queue(ptr noundef %q.0.i) #20
  %12 = ptrtoint ptr %.pn289.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn.i = load ptr, ptr %.pn289.i, align 4
  %cmp41.not.i = icmp eq ptr %.pn.i, %tag_list.i
  br i1 %cmp41.not.i, label %for.body.i.for.cond54.preheader.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.body.i.for.cond54.preheader.i_crit_edge:      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond54.preheader.i

for.cond76.preheader.i:                           ; preds = %blk_mq_elv_switch_none.exit.i.for.cond76.preheader.i_crit_edge, %for.cond54.preheader.i.for.cond76.preheader.i_crit_edge
  %13 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn258293.i = load ptr, ptr %tag_list.i, align 4
  %cmp79.not294.i = icmp eq ptr %.pn258293.i, %tag_list.i
  br i1 %cmp79.not294.i, label %for.cond76.preheader.i.for.end89.i_crit_edge, label %for.cond76.preheader.i.for.body82.i_crit_edge

for.cond76.preheader.i.for.body82.i_crit_edge:    ; preds = %for.cond76.preheader.i
  br label %for.body82.i

for.cond76.preheader.i.for.end89.i_crit_edge:     ; preds = %for.cond76.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end89.i

for.body60.i:                                     ; preds = %blk_mq_elv_switch_none.exit.i.for.body60.i_crit_edge, %for.cond54.preheader.i.for.body60.i_crit_edge
  %.pn257292.i = phi ptr [ %.pn257.i, %blk_mq_elv_switch_none.exit.i.for.body60.i_crit_edge ], [ %.pn257290.i, %for.cond54.preheader.i.for.body60.i_crit_edge ]
  %q.1.i = getelementptr i8, ptr %.pn257292.i, i32 -1204
  %elevator.i.i = getelementptr i8, ptr %.pn257292.i, i32 -1200
  %14 = ptrtoint ptr %elevator.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %elevator.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i.i, label %for.body60.i.blk_mq_elv_switch_none.exit.i_crit_edge, label %if.end.i.i

for.body60.i.blk_mq_elv_switch_none.exit.i_crit_edge: ; preds = %for.body60.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_elv_switch_none.exit.i

if.end.i.i:                                       ; preds = %for.body60.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %16 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %16, i32 noundef 76800, i32 noundef 16) #26
  %tobool1.not.i.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool1.not.i.i, label %if.end.i.i.switch_back.i_crit_edge, label %if.end3.i.i

if.end.i.i.switch_back.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %switch_back.i

if.end3.i.i:                                      ; preds = %if.end.i.i
  %17 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %call7.i.i.i, ptr %call7.i.i.i, align 8
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call7.i.i.i, ptr %prev.i.i.i, align 4
  %q4.i.i = getelementptr inbounds %struct.blk_mq_qe_pair, ptr %call7.i.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %q4.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %q.1.i, ptr %q4.i.i, align 8
  %20 = ptrtoint ptr %elevator.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %elevator.i.i, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %type6.i.i = getelementptr inbounds %struct.blk_mq_qe_pair, ptr %call7.i.i.i, i32 0, i32 2
  %24 = ptrtoint ptr %type6.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %type6.i.i, align 4
  %25 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %head.i, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i, ptr noundef nonnull %head.i, ptr noundef %26) #20
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.end3.i.i.list_add.exit.i.i_crit_edge

if.end3.i.i.list_add.exit.i.i_crit_edge:          ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_add.exit.i.i

if.end.i.i.i.i:                                   ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %call7.i.i.i, ptr %prev1.i.i.i.i, align 4
  %28 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %26, ptr %call7.i.i.i, align 8
  %29 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %head.i, ptr %prev.i.i.i, align 4
  %30 = ptrtoint ptr %head.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %call7.i.i.i, ptr %head.i, align 4
  br label %list_add.exit.i.i

list_add.exit.i.i:                                ; preds = %if.end.i.i.i.i, %if.end3.i.i.list_add.exit.i.i_crit_edge
  %sysfs_lock.i.i = getelementptr i8, ptr %.pn257292.i, i32 -404
  call void @mutex_lock_nested(ptr noundef %sysfs_lock.i.i, i32 noundef 0) #20
  %31 = ptrtoint ptr %type6.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %type6.i.i, align 4
  %elevator_owner.i.i = getelementptr inbounds %struct.elevator_type, ptr %32, i32 0, i32 8
  %33 = ptrtoint ptr %elevator_owner.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %elevator_owner.i.i, align 4
  call void @__module_get(ptr noundef %34) #20
  %call9.i.i = call i32 @elevator_switch_mq(ptr noundef %q.1.i, ptr noundef null) #20
  call void @mutex_unlock(ptr noundef %sysfs_lock.i.i) #20
  br label %blk_mq_elv_switch_none.exit.i

blk_mq_elv_switch_none.exit.i:                    ; preds = %list_add.exit.i.i, %for.body60.i.blk_mq_elv_switch_none.exit.i_crit_edge
  %35 = ptrtoint ptr %.pn257292.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %.pn257.i = load ptr, ptr %.pn257292.i, align 4
  %cmp57.not.i = icmp eq ptr %.pn257.i, %tag_list.i
  br i1 %cmp57.not.i, label %blk_mq_elv_switch_none.exit.i.for.cond76.preheader.i_crit_edge, label %blk_mq_elv_switch_none.exit.i.for.body60.i_crit_edge

blk_mq_elv_switch_none.exit.i.for.body60.i_crit_edge: ; preds = %blk_mq_elv_switch_none.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body60.i

blk_mq_elv_switch_none.exit.i.for.cond76.preheader.i_crit_edge: ; preds = %blk_mq_elv_switch_none.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond76.preheader.i

for.body82.i:                                     ; preds = %for.body82.i.for.body82.i_crit_edge, %for.cond76.preheader.i.for.body82.i_crit_edge
  %.pn258295.i = phi ptr [ %.pn258.i, %for.body82.i.for.body82.i_crit_edge ], [ %.pn258293.i, %for.cond76.preheader.i.for.body82.i_crit_edge ]
  %q.2.i = getelementptr i8, ptr %.pn258295.i, i32 -1204
  call void @blk_mq_debugfs_unregister_hctxs(ptr noundef %q.2.i) #20
  call void @blk_mq_sysfs_unregister(ptr noundef %q.2.i) #20
  %36 = ptrtoint ptr %.pn258295.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %.pn258.i = load ptr, ptr %.pn258295.i, align 4
  %cmp79.not.i = icmp eq ptr %.pn258.i, %tag_list.i
  br i1 %cmp79.not.i, label %for.body82.i.for.end89.i_crit_edge, label %for.body82.i.for.body82.i_crit_edge

for.body82.i.for.body82.i_crit_edge:              ; preds = %for.body82.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body82.i

for.body82.i.for.end89.i_crit_edge:               ; preds = %for.body82.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end89.i

for.end89.i:                                      ; preds = %for.body82.i.for.end89.i_crit_edge, %for.cond76.preheader.i.for.end89.i_crit_edge
  %nr_hw_queues90.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 3
  %37 = ptrtoint ptr %nr_hw_queues90.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %nr_hw_queues90.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %38, i32 %nr_hw_queues.addr.0278280.i)
  %cmp.not.i.i = icmp slt i32 %38, %nr_hw_queues.addr.0278280.i
  br i1 %cmp.not.i.i, label %if.end.i263.i, label %for.end89.i.if.end95.i_crit_edge

for.end89.i.if.end95.i_crit_edge:                 ; preds = %for.end89.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end95.i

if.end.i263.i:                                    ; preds = %for.end89.i
  %39 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %nr_hw_queues.addr.0278280.i, i32 4) #20
  %40 = extractvalue { i32, i1 } %39, 1
  br i1 %40, label %if.end.i263.i.reregister.i_crit_edge, label %if.end7.i.i.i.i, !prof !300

if.end.i263.i.reregister.i_crit_edge:             ; preds = %if.end.i263.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %reregister.i

if.end7.i.i.i.i:                                  ; preds = %if.end.i263.i
  %41 = extractvalue { i32, i1 } %39, 0
  %call.i.i.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %41, i32 noundef 3520) #25
  %tobool.not.i265.i = icmp eq ptr %call.i.i.i.i.i, null
  br i1 %tobool.not.i265.i, label %if.end7.i.i.i.i.reregister.i_crit_edge, label %if.end2.i.i

if.end7.i.i.i.i.reregister.i_crit_edge:           ; preds = %if.end7.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %reregister.i

if.end2.i.i:                                      ; preds = %if.end7.i.i.i.i
  %tags.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  %42 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %tags.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %43, null
  br i1 %tobool3.not.i.i, label %if.end2.i.i.if.end6.i.i_crit_edge, label %if.then4.i.i

if.end2.i.i.if.end6.i.i_crit_edge:                ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6.i.i

if.then4.i.i:                                     ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %mul.i.i = shl i32 %38, 2
  %44 = call ptr @memcpy(ptr %call.i.i.i.i.i, ptr %43, i32 %mul.i.i)
  br label %if.end6.i.i

if.end6.i.i:                                      ; preds = %if.then4.i.i, %if.end2.i.i.if.end6.i.i_crit_edge
  %45 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %tags.i.i, align 4
  call void @kfree(ptr noundef %46) #20
  %47 = ptrtoint ptr %tags.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %call.i.i.i.i.i, ptr %tags.i.i, align 4
  br label %if.end95.i

if.end95.i:                                       ; preds = %if.end6.i.i, %for.end89.i.if.end95.i_crit_edge
  %48 = ptrtoint ptr %nr_hw_queues90.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %nr_hw_queues.addr.0278280.i, ptr %nr_hw_queues90.i, align 4
  %call97304.i = call fastcc i32 @blk_mq_update_queue_map(ptr noundef %set) #20
  %49 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %.pn259296305.i = load ptr, ptr %tag_list.i, align 4
  %cmp106.not298307.i = icmp eq ptr %.pn259296305.i, %tag_list.i
  br i1 %cmp106.not298307.i, label %if.end95.i.reregister.i_crit_edge, label %for.body109.lr.ph.lr.ph.i

if.end95.i.reregister.i_crit_edge:                ; preds = %if.end95.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %reregister.i

for.body109.lr.ph.lr.ph.i:                        ; preds = %if.end95.i
  %flags.i.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 9
  %tags.i267.i = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  br label %for.body109.i

for.body109.i:                                    ; preds = %for.body109.i.backedge, %for.body109.lr.ph.lr.ph.i
  %.pn259299.i = phi ptr [ %.pn259296305.i, %for.body109.lr.ph.lr.ph.i ], [ %.pn259299.i.be, %for.body109.i.backedge ]
  %q.3300.i = getelementptr i8, ptr %.pn259299.i, i32 -1204
  call fastcc void @blk_mq_realloc_hw_ctxs(ptr noundef %set, ptr noundef %q.3300.i) #20
  %nr_hw_queues110.i = getelementptr i8, ptr %.pn259299.i, i32 -1164
  %50 = ptrtoint ptr %nr_hw_queues110.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %nr_hw_queues110.i, align 8
  %52 = ptrtoint ptr %nr_hw_queues90.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %nr_hw_queues90.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %51, i32 %53)
  %cmp112.not.i = icmp eq i32 %51, %53
  br i1 %cmp112.not.i, label %if.end127.i, label %if.then113.i

if.then113.i:                                     ; preds = %for.body109.i
  %call118.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.57, i32 noundef %nr_hw_queues.addr.0278280.i, i32 noundef %38) #23
  %54 = ptrtoint ptr %nr_hw_queues90.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %nr_hw_queues90.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %38, i32 %55)
  %cmp121301.i = icmp ult i32 %38, %55
  br i1 %cmp121301.i, label %if.then113.i.for.body122.i_crit_edge, label %if.then113.i.for.end124.i_crit_edge

if.then113.i.for.end124.i_crit_edge:              ; preds = %if.then113.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end124.i

if.then113.i.for.body122.i_crit_edge:             ; preds = %if.then113.i
  br label %for.body122.i

for.body122.i:                                    ; preds = %__blk_mq_free_map_and_rqs.exit.i.for.body122.i_crit_edge, %if.then113.i.for.body122.i_crit_edge
  %i.0302.i = phi i32 [ %inc.i, %__blk_mq_free_map_and_rqs.exit.i.for.body122.i_crit_edge ], [ %38, %if.then113.i.for.body122.i_crit_edge ]
  %56 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %flags.i.i, align 4
  %and.i.i.i = and i32 %57, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.then.i.i, label %for.body122.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge

for.body122.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge: ; preds = %for.body122.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_free_map_and_rqs.exit.i

if.then.i.i:                                      ; preds = %for.body122.i
  %58 = ptrtoint ptr %tags.i267.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %tags.i267.i, align 4
  %arrayidx.i.i = getelementptr ptr, ptr %59, i32 %i.0302.i
  %60 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %61, null
  br i1 %tobool.not.i.i.i, label %if.then.i.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge, label %if.then.i.i.i

if.then.i.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_free_map_and_rqs.exit.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @blk_mq_free_rqs(ptr noundef %set, ptr noundef nonnull %61, i32 noundef %i.0302.i) #20
  %rqs.i.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %61, i32 0, i32 5
  %62 = ptrtoint ptr %rqs.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %rqs.i.i.i.i, align 4
  call void @kfree(ptr noundef %63) #20
  %64 = ptrtoint ptr %rqs.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr null, ptr %rqs.i.i.i.i, align 4
  %static_rqs.i.i.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %61, i32 0, i32 6
  %65 = ptrtoint ptr %static_rqs.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %static_rqs.i.i.i.i, align 4
  call void @kfree(ptr noundef %66) #20
  %67 = ptrtoint ptr %static_rqs.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr null, ptr %static_rqs.i.i.i.i, align 4
  call void @blk_mq_free_tags(ptr noundef nonnull %61) #20
  br label %__blk_mq_free_map_and_rqs.exit.i

__blk_mq_free_map_and_rqs.exit.i:                 ; preds = %if.then.i.i.i, %if.then.i.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge, %for.body122.i.__blk_mq_free_map_and_rqs.exit.i_crit_edge
  %68 = ptrtoint ptr %tags.i267.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %tags.i267.i, align 4
  %arrayidx2.i.i = getelementptr ptr, ptr %69, i32 %i.0302.i
  %70 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr null, ptr %arrayidx2.i.i, align 4
  %inc.i = add nuw i32 %i.0302.i, 1
  %71 = ptrtoint ptr %nr_hw_queues90.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %nr_hw_queues90.i, align 4
  %cmp121.i = icmp ult i32 %inc.i, %72
  br i1 %cmp121.i, label %__blk_mq_free_map_and_rqs.exit.i.for.body122.i_crit_edge, label %__blk_mq_free_map_and_rqs.exit.i.for.end124.i_crit_edge

__blk_mq_free_map_and_rqs.exit.i.for.end124.i_crit_edge: ; preds = %__blk_mq_free_map_and_rqs.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end124.i

__blk_mq_free_map_and_rqs.exit.i.for.body122.i_crit_edge: ; preds = %__blk_mq_free_map_and_rqs.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body122.i

for.end124.i:                                     ; preds = %__blk_mq_free_map_and_rqs.exit.i.for.end124.i_crit_edge, %if.then113.i.for.end124.i_crit_edge
  %73 = ptrtoint ptr %nr_hw_queues90.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %38, ptr %nr_hw_queues90.i, align 4
  %call126.i = call i32 @blk_mq_map_queues(ptr noundef %set) #20
  %call97.i = call fastcc i32 @blk_mq_update_queue_map(ptr noundef %set) #20
  %74 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %.pn259296.i = load ptr, ptr %tag_list.i, align 4
  %cmp106.not298.i = icmp eq ptr %.pn259296.i, %tag_list.i
  br i1 %cmp106.not298.i, label %for.end124.i.reregister.i_crit_edge, label %for.end124.i.for.body109.i.backedge_crit_edge

for.end124.i.for.body109.i.backedge_crit_edge:    ; preds = %for.end124.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body109.i.backedge

for.end124.i.reregister.i_crit_edge:              ; preds = %for.end124.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %reregister.i

if.end127.i:                                      ; preds = %for.body109.i
  call fastcc void @blk_mq_map_swqueue(ptr noundef %q.3300.i) #20
  %75 = ptrtoint ptr %.pn259299.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %.pn259.i = load ptr, ptr %.pn259299.i, align 4
  %cmp106.not.i = icmp eq ptr %.pn259.i, %tag_list.i
  br i1 %cmp106.not.i, label %if.end127.i.reregister.i_crit_edge, label %if.end127.i.for.body109.i.backedge_crit_edge

if.end127.i.for.body109.i.backedge_crit_edge:     ; preds = %if.end127.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body109.i.backedge

if.end127.i.reregister.i_crit_edge:               ; preds = %if.end127.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %reregister.i

for.body109.i.backedge:                           ; preds = %if.end127.i.for.body109.i.backedge_crit_edge, %for.end124.i.for.body109.i.backedge_crit_edge
  %.pn259299.i.be = phi ptr [ %.pn259.i, %if.end127.i.for.body109.i.backedge_crit_edge ], [ %.pn259296.i, %for.end124.i.for.body109.i.backedge_crit_edge ]
  br label %for.body109.i

reregister.i:                                     ; preds = %if.end127.i.reregister.i_crit_edge, %for.end124.i.reregister.i_crit_edge, %if.end95.i.reregister.i_crit_edge, %if.end7.i.i.i.i.reregister.i_crit_edge, %if.end.i263.i.reregister.i_crit_edge
  %76 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %.pn260310.i = load ptr, ptr %tag_list.i, align 4
  %cmp143.not311.i = icmp eq ptr %.pn260310.i, %tag_list.i
  br i1 %cmp143.not311.i, label %reregister.i.switch_back.i_crit_edge, label %reregister.i.for.body146.i_crit_edge

reregister.i.for.body146.i_crit_edge:             ; preds = %reregister.i
  br label %for.body146.i

reregister.i.switch_back.i_crit_edge:             ; preds = %reregister.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %switch_back.i

for.body146.i:                                    ; preds = %for.body146.i.for.body146.i_crit_edge, %reregister.i.for.body146.i_crit_edge
  %.pn260312.i = phi ptr [ %.pn260.i, %for.body146.i.for.body146.i_crit_edge ], [ %.pn260310.i, %reregister.i.for.body146.i_crit_edge ]
  %q.4.i = getelementptr i8, ptr %.pn260312.i, i32 -1204
  %call147.i = call i32 @blk_mq_sysfs_register(ptr noundef %q.4.i) #20
  call void @blk_mq_debugfs_register_hctxs(ptr noundef %q.4.i) #20
  %77 = ptrtoint ptr %.pn260312.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %.pn260.i = load ptr, ptr %.pn260312.i, align 4
  %cmp143.not.i = icmp eq ptr %.pn260.i, %tag_list.i
  br i1 %cmp143.not.i, label %for.body146.i.switch_back.i_crit_edge, label %for.body146.i.for.body146.i_crit_edge

for.body146.i.for.body146.i_crit_edge:            ; preds = %for.body146.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body146.i

for.body146.i.switch_back.i_crit_edge:            ; preds = %for.body146.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %switch_back.i

switch_back.i:                                    ; preds = %for.body146.i.switch_back.i_crit_edge, %reregister.i.switch_back.i_crit_edge, %if.end.i.i.switch_back.i_crit_edge
  %78 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %.pn261313.i = load ptr, ptr %tag_list.i, align 4
  %cmp163.not314.i = icmp eq ptr %.pn261313.i, %tag_list.i
  br i1 %cmp163.not314.i, label %switch_back.i.for.cond179.preheader.i_crit_edge, label %switch_back.i.for.body166.i_crit_edge

switch_back.i.for.body166.i_crit_edge:            ; preds = %switch_back.i
  br label %for.body166.i

switch_back.i.for.cond179.preheader.i_crit_edge:  ; preds = %switch_back.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond179.preheader.i

for.cond179.preheader.i:                          ; preds = %blk_mq_elv_switch_back.exit.i.for.cond179.preheader.i_crit_edge, %switch_back.i.for.cond179.preheader.i_crit_edge
  %79 = ptrtoint ptr %tag_list.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %.pn262316.i = load ptr, ptr %tag_list.i, align 4
  %cmp182.not317.i = icmp eq ptr %.pn262316.i, %tag_list.i
  br i1 %cmp182.not317.i, label %for.cond179.preheader.i.__blk_mq_update_nr_hw_queues.exit_crit_edge, label %for.cond179.preheader.i.for.body185.i_crit_edge

for.cond179.preheader.i.for.body185.i_crit_edge:  ; preds = %for.cond179.preheader.i
  br label %for.body185.i

for.cond179.preheader.i.__blk_mq_update_nr_hw_queues.exit_crit_edge: ; preds = %for.cond179.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_update_nr_hw_queues.exit

for.body166.i:                                    ; preds = %blk_mq_elv_switch_back.exit.i.for.body166.i_crit_edge, %switch_back.i.for.body166.i_crit_edge
  %.pn261315.i = phi ptr [ %.pn261.i, %blk_mq_elv_switch_back.exit.i.for.body166.i_crit_edge ], [ %.pn261313.i, %switch_back.i.for.body166.i_crit_edge ]
  %q.5.i = getelementptr i8, ptr %.pn261315.i, i32 -1204
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %for.body166.i
  %qe.0.in.i.i = phi ptr [ %head.i, %for.body166.i ], [ %qe.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ]
  %80 = ptrtoint ptr %qe.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %qe.0.i.i = load ptr, ptr %qe.0.in.i.i, align 4
  %cmp.not.i269.i = icmp eq ptr %qe.0.i.i, %head.i
  br i1 %cmp.not.i269.i, label %for.cond.i.i.blk_mq_elv_switch_back.exit.i_crit_edge, label %for.body.i.i

for.cond.i.i.blk_mq_elv_switch_back.exit.i_crit_edge: ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_elv_switch_back.exit.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %q1.i.i = getelementptr inbounds %struct.blk_mq_qe_pair, ptr %qe.0.i.i, i32 0, i32 1
  %81 = ptrtoint ptr %q1.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %q1.i.i, align 4
  %cmp2.i.i = icmp eq ptr %82, %q.5.i
  br i1 %cmp2.i.i, label %for.end.i.i, label %for.body.i.i.for.cond.i.i_crit_edge

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.body.i.i
  %type.i.i = getelementptr inbounds %struct.blk_mq_qe_pair, ptr %qe.0.i.i, i32 0, i32 2
  %83 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %type.i.i, align 4
  %tobool.not.i270.i = icmp eq ptr %84, null
  br i1 %tobool.not.i270.i, label %for.end.i.i.blk_mq_elv_switch_back.exit.i_crit_edge, label %if.end9.i.i

for.end.i.i.blk_mq_elv_switch_back.exit.i_crit_edge: ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_elv_switch_back.exit.i

if.end9.i.i:                                      ; preds = %for.end.i.i
  %call.i.i.i271.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %qe.0.i.i) #20
  br i1 %call.i.i.i271.i, label %if.end.i.i.i272.i, label %if.end9.i.i.list_del.exit.i.i_crit_edge

if.end9.i.i.list_del.exit.i.i_crit_edge:          ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del.exit.i.i

if.end.i.i.i272.i:                                ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %qe.0.i.i, i32 0, i32 1
  %85 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %prev.i.i.i.i, align 4
  %87 = ptrtoint ptr %qe.0.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %qe.0.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %88, i32 0, i32 1
  %89 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %86, ptr %prev1.i.i.i.i.i, align 4
  %90 = ptrtoint ptr %86 to i32
  call void @__asan_store4_noabort(i32 %90)
  store volatile ptr %88, ptr %86, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i.i272.i, %if.end9.i.i.list_del.exit.i.i_crit_edge
  %91 = ptrtoint ptr %qe.0.i.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr inttoptr (i32 256 to ptr), ptr %qe.0.i.i, align 4
  %prev.i.i273.i = getelementptr inbounds %struct.list_head, ptr %qe.0.i.i, i32 0, i32 1
  %92 = ptrtoint ptr %prev.i.i273.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i273.i, align 4
  call void @kfree(ptr noundef %qe.0.i.i) #20
  %sysfs_lock.i274.i = getelementptr i8, ptr %.pn261315.i, i32 -404
  call void @mutex_lock_nested(ptr noundef %sysfs_lock.i274.i, i32 noundef 0) #20
  %call.i275.i = call i32 @elevator_switch_mq(ptr noundef %q.5.i, ptr noundef nonnull %84) #20
  call void @mutex_unlock(ptr noundef %sysfs_lock.i274.i) #20
  br label %blk_mq_elv_switch_back.exit.i

blk_mq_elv_switch_back.exit.i:                    ; preds = %list_del.exit.i.i, %for.end.i.i.blk_mq_elv_switch_back.exit.i_crit_edge, %for.cond.i.i.blk_mq_elv_switch_back.exit.i_crit_edge
  %93 = ptrtoint ptr %.pn261315.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %.pn261.i = load ptr, ptr %.pn261315.i, align 4
  %cmp163.not.i = icmp eq ptr %.pn261.i, %tag_list.i
  br i1 %cmp163.not.i, label %blk_mq_elv_switch_back.exit.i.for.cond179.preheader.i_crit_edge, label %blk_mq_elv_switch_back.exit.i.for.body166.i_crit_edge

blk_mq_elv_switch_back.exit.i.for.body166.i_crit_edge: ; preds = %blk_mq_elv_switch_back.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body166.i

blk_mq_elv_switch_back.exit.i.for.cond179.preheader.i_crit_edge: ; preds = %blk_mq_elv_switch_back.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond179.preheader.i

for.body185.i:                                    ; preds = %for.body185.i.for.body185.i_crit_edge, %for.cond179.preheader.i.for.body185.i_crit_edge
  %.pn262318.i = phi ptr [ %.pn262.i, %for.body185.i.for.body185.i_crit_edge ], [ %.pn262316.i, %for.cond179.preheader.i.for.body185.i_crit_edge ]
  %q.6.i = getelementptr i8, ptr %.pn262318.i, i32 -1204
  call void @__blk_mq_unfreeze_queue(ptr noundef %q.6.i, i1 noundef zeroext false) #20
  %94 = ptrtoint ptr %.pn262318.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %.pn262.i = load ptr, ptr %.pn262318.i, align 4
  %cmp182.not.i = icmp eq ptr %.pn262.i, %tag_list.i
  br i1 %cmp182.not.i, label %for.body185.i.__blk_mq_update_nr_hw_queues.exit_crit_edge, label %for.body185.i.for.body185.i_crit_edge

for.body185.i.for.body185.i_crit_edge:            ; preds = %for.body185.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body185.i

for.body185.i.__blk_mq_update_nr_hw_queues.exit_crit_edge: ; preds = %for.body185.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_update_nr_hw_queues.exit

__blk_mq_update_nr_hw_queues.exit:                ; preds = %for.body185.i.__blk_mq_update_nr_hw_queues.exit_crit_edge, %for.cond179.preheader.i.__blk_mq_update_nr_hw_queues.exit_crit_edge, %land.lhs.true33.i.__blk_mq_update_nr_hw_queues.exit_crit_edge, %if.end27.thread.i.__blk_mq_update_nr_hw_queues.exit_crit_edge, %if.end27.i.__blk_mq_update_nr_hw_queues.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %head.i) #20
  call void @mutex_unlock(ptr noundef %tag_list_lock) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @blk_mq_poll(ptr noundef %q, i32 noundef %cookie, ptr noundef %iob, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end2_crit_edge

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end2

land.lhs.true:                                    ; preds = %entry
  %poll_nsec = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 26
  %0 = ptrtoint ptr %poll_nsec to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %poll_nsec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp.not = icmp eq i32 %1, -1
  br i1 %cmp.not, label %land.lhs.true.if.end2_crit_edge, label %if.then

land.lhs.true.if.end2_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end2

if.then:                                          ; preds = %land.lhs.true
  %call = tail call fastcc zeroext i1 @blk_mq_poll_hybrid(ptr noundef %q, i32 noundef %cookie)
  br i1 %call, label %if.then.return_crit_edge, label %if.then.if.end2_crit_edge

if.then.if.end2_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end2

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end2:                                          ; preds = %if.then.if.end2_crit_edge, %land.lhs.true.if.end2_crit_edge, %entry.if.end2_crit_edge
  %call3 = tail call fastcc i32 @blk_mq_poll_classic(ptr noundef %q, i32 noundef %cookie, ptr noundef %iob, i32 noundef %flags)
  br label %return

return:                                           ; preds = %if.end2, %if.then.return_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end2 ], [ 1, %if.then.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @blk_mq_poll_hybrid(ptr noundef %q, i32 noundef %qc) #0 align 64 {
entry:
  %hs = alloca %struct.hrtimer_sleeper, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_hw_ctx.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %0 = ptrtoint ptr %queue_hw_ctx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queue_hw_ctx.i, align 4
  %and.i = lshr i32 %qc, 16
  %shr.i = and i32 %and.i, 32767
  %arrayidx.i = getelementptr ptr, ptr %1, i32 %shr.i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %and.i191 = and i32 %qc, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %qc)
  %tobool.not.i = icmp sgt i32 %qc, -1
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %sched_tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %3, i32 0, i32 20
  %4 = ptrtoint ptr %sched_tags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sched_tags.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %and.i191)
  %cmp.i.i = icmp ugt i32 %7, %and.i191
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then.i.blk_qc_to_rq.exit.thread_crit_edge

if.then.i.blk_qc_to_rq.exit.thread_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_qc_to_rq.exit.thread

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %rqs.i.i = getelementptr inbounds %struct.blk_mq_tags, ptr %5, i32 0, i32 5
  %8 = ptrtoint ptr %rqs.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rqs.i.i, align 4
  %arrayidx.i.i = getelementptr ptr, ptr %9, i32 %and.i191
  %10 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx.i.i, align 4
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %11) #20, !srcloc !301
  br label %blk_qc_to_rq.exit

if.end.i:                                         ; preds = %entry
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %3, i32 0, i32 19
  %12 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tags.i, align 16
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %and.i191)
  %cmp.i6.i = icmp ugt i32 %15, %and.i191
  br i1 %cmp.i6.i, label %if.then.i10.i, label %if.end.i.blk_qc_to_rq.exit.thread_crit_edge

if.end.i.blk_qc_to_rq.exit.thread_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_qc_to_rq.exit.thread

if.then.i10.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %rqs.i7.i = getelementptr inbounds %struct.blk_mq_tags, ptr %13, i32 0, i32 5
  %16 = ptrtoint ptr %rqs.i7.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rqs.i7.i, align 4
  %arrayidx.i8.i = getelementptr ptr, ptr %17, i32 %and.i191
  %18 = ptrtoint ptr %arrayidx.i8.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.i8.i, align 4
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %19) #20, !srcloc !301
  br label %blk_qc_to_rq.exit

blk_qc_to_rq.exit.thread:                         ; preds = %if.end.i.blk_qc_to_rq.exit.thread_crit_edge, %if.then.i.blk_qc_to_rq.exit.thread_crit_edge
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %hs) #20
  br label %cleanup

blk_qc_to_rq.exit:                                ; preds = %if.then.i10.i, %if.then.i.i
  %rqs.i7.sink.i = phi ptr [ %rqs.i7.i, %if.then.i10.i ], [ %rqs.i.i, %if.then.i.i ]
  %20 = ptrtoint ptr %rqs.i7.sink.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %rqs.i7.sink.i, align 4
  %arrayidx2.i9.i = getelementptr ptr, ptr %21, i32 %and.i191
  %22 = ptrtoint ptr %arrayidx2.i9.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx2.i9.i, align 4
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %hs) #20
  %24 = call ptr @memset(ptr %hs, i32 255, i32 56)
  %tobool.not = icmp eq ptr %23, null
  br i1 %tobool.not, label %blk_qc_to_rq.exit.cleanup_crit_edge, label %lor.lhs.false

blk_qc_to_rq.exit.cleanup_crit_edge:              ; preds = %blk_qc_to_rq.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false:                                    ; preds = %blk_qc_to_rq.exit
  %rq_flags = getelementptr inbounds %struct.request, ptr %23, i32 0, i32 4
  %25 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %rq_flags, align 8
  %and = and i32 %26, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %poll_nsec = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 26
  %27 = ptrtoint ptr %poll_nsec to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %poll_nsec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp = icmp sgt i32 %28, 0
  br i1 %cmp, label %if.end.if.end9_crit_edge, label %if.else

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

if.else:                                          ; preds = %if.end
  %poll_stat.i.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 28
  %29 = ptrtoint ptr %poll_stat.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %poll_stat.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %30, null
  br i1 %tobool.not.i.i, label %blk_poll_stats_enable.exit.i, label %if.else.if.end.i192_crit_edge

if.else.if.end.i192_crit_edge:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i192

blk_poll_stats_enable.exit.i:                     ; preds = %if.else
  %call.i.i = tail call zeroext i1 @blk_stats_alloc_enable(ptr noundef %q) #20
  br i1 %call.i.i, label %blk_poll_stats_enable.exit.i.if.end.i192_crit_edge, label %blk_poll_stats_enable.exit.i.cleanup_crit_edge

blk_poll_stats_enable.exit.i.cleanup_crit_edge:   ; preds = %blk_poll_stats_enable.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

blk_poll_stats_enable.exit.i.if.end.i192_crit_edge: ; preds = %blk_poll_stats_enable.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i192

if.end.i192:                                      ; preds = %blk_poll_stats_enable.exit.i.if.end.i192_crit_edge, %if.else.if.end.i192_crit_edge
  %cmd_flags.i.i = getelementptr inbounds %struct.request, ptr %23, i32 0, i32 3
  %31 = ptrtoint ptr %cmd_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cmd_flags.i.i, align 4
  %stats_sectors.i.i.i = getelementptr inbounds %struct.request, ptr %23, i32 0, i32 18
  %33 = ptrtoint ptr %stats_sectors.i.i.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %stats_sectors.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %34)
  %tobool.not.i.i.i.i = icmp eq i16 %34, 0
  %conv.i.i.i = zext i16 %34 to i32
  %35 = tail call i32 @llvm.ctlz.i32(i32 %conv.i.i.i, i1 true) #20, !range !353
  %and.i.i.i = and i32 %32, 1
  %sub.i.op.i.i.i = shl nuw nsw i32 %35, 1
  %sub.i.op.i.i.i.op = xor i32 %sub.i.op.i.i.i, 62
  %mul.i.i = select i1 %tobool.not.i.i.i.i, i32 -2, i32 %sub.i.op.i.i.i.op
  %add.i.i = or i32 %mul.i.i, %and.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %add.i.i)
  %cmp10.i.i = icmp sgt i32 %add.i.i, 15
  %36 = or i32 %and.i.i.i, 14
  %spec.select.i.i = select i1 %cmp10.i.i, i32 %36, i32 %add.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %add.i.i)
  %cmp8.inv.i.i = icmp sgt i32 %add.i.i, -1
  %retval.0.i15.i = select i1 %cmp8.inv.i.i, i32 %spec.select.i.i, i32 -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i15.i)
  %cmp.i = icmp slt i32 %retval.0.i15.i, 0
  br i1 %cmp.i, label %if.end.i192.cleanup_crit_edge, label %if.end3.i

if.end.i192.cleanup_crit_edge:                    ; preds = %if.end.i192
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i192
  %37 = ptrtoint ptr %poll_stat.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %poll_stat.i.i, align 4
  %nr_samples.i = getelementptr %struct.blk_rq_stat, ptr %38, i32 %retval.0.i15.i, i32 3
  %39 = ptrtoint ptr %nr_samples.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %nr_samples.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i194 = icmp eq i32 %40, 0
  br i1 %tobool.not.i194, label %if.end3.i.cleanup_crit_edge, label %if.end6

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6:                                          ; preds = %if.end3.i
  %arrayidx.i195 = getelementptr %struct.blk_rq_stat, ptr %38, i32 %retval.0.i15.i
  %41 = ptrtoint ptr %arrayidx.i195 to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %arrayidx.i195, align 8
  %add.i = add i64 %42, 1
  %div14.i = lshr i64 %add.i, 1
  %conv.i = trunc i64 %div14.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i)
  %tobool7.not = icmp eq i32 %conv.i, 0
  br i1 %tobool7.not, label %if.end6.cleanup_crit_edge, label %if.end6.if.end9_crit_edge

if.end6.if.end9_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end9:                                          ; preds = %if.end6.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %nsecs.0214 = phi i32 [ %conv.i, %if.end6.if.end9_crit_edge ], [ %28, %if.end.if.end9_crit_edge ]
  %43 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rq_flags, align 8
  %or = or i32 %44, 1048576
  store i32 %or, ptr %rq_flags, align 8
  %conv = zext i32 %nsecs.0214 to i64
  call void @hrtimer_init_sleeper_on_stack(ptr noundef nonnull %hs, i32 noundef 1, i32 noundef 1) #20
  %expires.i = getelementptr inbounds %struct.timerqueue_node, ptr %hs, i32 0, i32 1
  %45 = ptrtoint ptr %expires.i to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %conv, ptr %expires.i, align 8
  %_softexpires.i = getelementptr inbounds %struct.hrtimer, ptr %hs, i32 0, i32 1
  %46 = ptrtoint ptr %_softexpires.i to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %conv, ptr %_softexpires.i, align 8
  %state.i = getelementptr inbounds %struct.request, ptr %23, i32 0, i32 25
  %task81 = getelementptr inbounds %struct.hrtimer_sleeper, ptr %hs, i32 0, i32 1
  br label %do.body

do.body:                                          ; preds = %signal_pending.exit.do.body_crit_edge, %if.end9
  %mode.0 = phi i32 [ 1, %if.end9 ], [ 0, %signal_pending.exit.do.body_crit_edge ]
  %47 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %48)
  %cmp12 = icmp eq i32 %48, 2
  br i1 %cmp12, label %do.body.__here150_crit_edge, label %__here

do.body.__here150_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here150

__here:                                           ; preds = %do.body
  %49 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i197 = and i32 %49, -16384
  %50 = inttoptr i32 %and.i197 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 2
  %51 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %52, i32 0, i32 212
  %53 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 ptrtoint (ptr blockaddress(@blk_mq_poll_hybrid, %__here) to i32), ptr %task_state_change, align 4
  %54 = load ptr, ptr %task, align 8
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile i32 2, ptr %54, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !358
  call void @hrtimer_sleeper_start_expires(ptr noundef nonnull %hs, i32 noundef %mode.0) #20
  %56 = ptrtoint ptr %task81 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %task81, align 8
  %tobool82.not = icmp eq ptr %57, null
  br i1 %tobool82.not, label %__here.if.end84_crit_edge, label %if.then83

__here.if.end84_crit_edge:                        ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end84

if.then83:                                        ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #22
  call void @io_schedule() #20
  br label %if.end84

if.end84:                                         ; preds = %if.then83, %__here.if.end84_crit_edge
  %call86 = call i32 @hrtimer_cancel(ptr noundef nonnull %hs) #20
  %58 = ptrtoint ptr %task81 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %task81, align 8
  %tobool89.not = icmp eq ptr %59, null
  br i1 %tobool89.not, label %if.end84.__here150_crit_edge, label %land.rhs90

if.end84.__here150_crit_edge:                     ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here150

land.rhs90:                                       ; preds = %if.end84
  %60 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %stack.i.i, align 4
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %63, align 4
  %66 = and i32 %65, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool.not.i198 = icmp eq i32 %66, 0
  br i1 %tobool.not.i198, label %signal_pending.exit, label %land.rhs90.__here150_crit_edge, !prof !298

land.rhs90.__here150_crit_edge:                   ; preds = %land.rhs90
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here150

signal_pending.exit:                              ; preds = %land.rhs90
  %67 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %63, align 4
  %and1.i.i.i.i.i = and i32 %68, 1
  %tobool94.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool94.not, label %signal_pending.exit.do.body_crit_edge, label %signal_pending.exit.__here150_crit_edge

signal_pending.exit.__here150_crit_edge:          ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here150

signal_pending.exit.do.body_crit_edge:            ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

__here150:                                        ; preds = %signal_pending.exit.__here150_crit_edge, %land.rhs90.__here150_crit_edge, %if.end84.__here150_crit_edge, %do.body.__here150_crit_edge
  %69 = call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i201 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i201 to ptr
  %task153 = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 2
  %71 = ptrtoint ptr %task153 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %task153, align 8
  %task_state_change154 = getelementptr inbounds %struct.task_struct, ptr %72, i32 0, i32 212
  %73 = ptrtoint ptr %task_state_change154 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 ptrtoint (ptr blockaddress(@blk_mq_poll_hybrid, %__here150) to i32), ptr %task_state_change154, align 4
  %74 = load ptr, ptr %task153, align 8
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_store4_noabort(i32 %75)
  store volatile i32 0, ptr %74, align 128
  call void @destroy_hrtimer_on_stack(ptr noundef nonnull %hs) #20
  br label %cleanup

cleanup:                                          ; preds = %__here150, %if.end6.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i192.cleanup_crit_edge, %blk_poll_stats_enable.exit.i.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %blk_qc_to_rq.exit.cleanup_crit_edge, %blk_qc_to_rq.exit.thread
  %retval.0 = phi i1 [ true, %__here150 ], [ false, %lor.lhs.false.cleanup_crit_edge ], [ false, %blk_qc_to_rq.exit.cleanup_crit_edge ], [ false, %if.end6.cleanup_crit_edge ], [ false, %blk_qc_to_rq.exit.thread ], [ false, %blk_poll_stats_enable.exit.i.cleanup_crit_edge ], [ false, %if.end.i192.cleanup_crit_edge ], [ false, %if.end3.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %hs) #20
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @blk_mq_poll_classic(ptr nocapture noundef readonly %q, i32 noundef %cookie, ptr noundef %iob, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_hw_ctx.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  %0 = ptrtoint ptr %queue_hw_ctx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queue_hw_ctx.i, align 4
  %and.i = lshr i32 %cookie, 16
  %shr.i = and i32 %and.i, 32767
  %arrayidx.i = getelementptr ptr, ptr %1, i32 %shr.i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %4 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i250 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i250 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 128
  %mq_ops = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 5
  %and.i251 = and i32 %9, 257
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i251)
  %tobool.not.i = icmp eq i32 %and.i251, 0
  %and4.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool151.not = icmp eq i32 %and, 0
  br label %do.body2

do.body2:                                         ; preds = %do.end158.do.body2_crit_edge, %entry
  %10 = ptrtoint ptr %mq_ops to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mq_ops, align 8
  %poll = getelementptr inbounds %struct.blk_mq_ops, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %poll to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %poll, align 4
  %call3 = tail call i32 %13(ptr noundef %3, ptr noundef %iob) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp = icmp sgt i32 %call3, 0
  br i1 %cmp, label %do.body2.cleanup.sink.split_crit_edge, label %if.end62

do.body2.cleanup.sink.split_crit_edge:            ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.sink.split

if.end62:                                         ; preds = %do.body2
  %14 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task, align 8
  br i1 %tobool.not.i, label %if.end62.do.end142_crit_edge, label %if.end.i

if.end62.do.end142_crit_edge:                     ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end142

if.end.i:                                         ; preds = %if.end62
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %stack.i.i.i, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %17, align 4
  %20 = and i32 %19, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i.i, label %signal_pending.exit.i, label %if.end.i.if.end3.i_crit_edge, !prof !298

if.end.i.if.end3.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end3.i

signal_pending.exit.i:                            ; preds = %if.end.i
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %17, align 4
  %and1.i.i.i.i.i.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool1.not.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i, label %signal_pending.exit.i.do.end142_crit_edge, label %signal_pending.exit.i.if.end3.i_crit_edge

signal_pending.exit.i.if.end3.i_crit_edge:        ; preds = %signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end3.i

signal_pending.exit.i.do.end142_crit_edge:        ; preds = %signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end142

if.end3.i:                                        ; preds = %signal_pending.exit.i.if.end3.i_crit_edge, %if.end.i.if.end3.i_crit_edge
  br i1 %tobool5.not.i, label %signal_pending_state.exit, label %if.end3.i.__here118_crit_edge

if.end3.i.__here118_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here118

signal_pending_state.exit:                        ; preds = %if.end3.i
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 116, i32 1
  %23 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %signal.i.i, align 4
  %25 = and i32 %24, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool66.not = icmp eq i32 %25, 0
  br i1 %tobool66.not, label %signal_pending_state.exit.do.end142_crit_edge, label %signal_pending_state.exit.__here118_crit_edge

signal_pending_state.exit.__here118_crit_edge:    ; preds = %signal_pending_state.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here118

signal_pending_state.exit.do.end142_crit_edge:    ; preds = %signal_pending_state.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end142

__here118:                                        ; preds = %signal_pending_state.exit.__here118_crit_edge, %if.end3.i.__here118_crit_edge
  %task_state_change122 = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 212
  %26 = ptrtoint ptr %task_state_change122 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 ptrtoint (ptr blockaddress(@blk_mq_poll_classic, %__here118) to i32), ptr %task_state_change122, align 4
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile i32 0, ptr %28, align 128
  br label %do.end142

do.end142:                                        ; preds = %__here118, %signal_pending_state.exit.do.end142_crit_edge, %signal_pending.exit.i.do.end142_crit_edge, %if.end62.do.end142_crit_edge
  %30 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task, align 8
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp147 = icmp eq i32 %33, 0
  br i1 %cmp147, label %do.end142.cleanup_crit_edge, label %if.end149

do.end142.cleanup_crit_edge:                      ; preds = %do.end142
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end149:                                        ; preds = %do.end142
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call3)
  %cmp150 = icmp sgt i32 %call3, -1
  %or.cond = and i1 %tobool151.not, %cmp150
  br i1 %or.cond, label %do.end158, label %if.end149.cleanup.sink.split_crit_edge

if.end149.cleanup.sink.split_crit_edge:           ; preds = %if.end149
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.sink.split

do.end158:                                        ; preds = %if.end149
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !359
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #20, !srcloc !360
  %34 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 16384
  %38 = and i32 %37, 2
  %tobool.i.not = icmp eq i32 %38, 0
  br i1 %tobool.i.not, label %do.end158.do.body2_crit_edge, label %do.end158.cleanup.sink.split_crit_edge

do.end158.cleanup.sink.split_crit_edge:           ; preds = %do.end158
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.sink.split

do.end158.do.body2_crit_edge:                     ; preds = %do.end158
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body2

cleanup.sink.split:                               ; preds = %do.end158.cleanup.sink.split_crit_edge, %if.end149.cleanup.sink.split_crit_edge, %do.body2.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ %call3, %do.body2.cleanup.sink.split_crit_edge ], [ 0, %do.end158.cleanup.sink.split_crit_edge ], [ 0, %if.end149.cleanup.sink.split_crit_edge ]
  %39 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %task, align 8
  %task_state_change222 = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 212
  %41 = ptrtoint ptr %task_state_change222 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 ptrtoint (ptr blockaddress(@blk_mq_poll_classic, %cleanup.sink.split) to i32), ptr %task_state_change222, align 4
  %42 = load ptr, ptr %task, align 8
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %43)
  store volatile i32 0, ptr %42, align 128
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end142.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.ph, %cleanup.sink.split ], [ 1, %do.end142.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @blk_mq_rq_cpu(ptr nocapture noundef readonly %rq) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %mq_ctx = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 1
  %0 = ptrtoint ptr %mq_ctx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mq_ctx, align 4
  %cpu = getelementptr inbounds %struct.blk_mq_ctx, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 128
  ret i32 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blk_mq_cancel_work_sync(ptr noundef %q) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %mq_ops.i = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 5
  %0 = ptrtoint ptr %mq_ops.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mq_ops.i, align 8
  %tobool.i.not = icmp eq ptr %1, null
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  %requeue_work = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 50
  %call1 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %requeue_work) #20
  %nr_hw_queues = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 9
  %2 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_hw_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp8.not = icmp eq i32 %3, 0
  br i1 %cmp8.not, label %if.then.if.end_crit_edge, label %for.body.lr.ph

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

for.body.lr.ph:                                   ; preds = %if.then
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.09 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %4 = ptrtoint ptr %queue_hw_ctx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %queue_hw_ctx, align 4
  %arrayidx = getelementptr ptr, ptr %5, i32 %i.09
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %run_work = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %7, i32 0, i32 1
  %call2 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %run_work) #20
  %inc = add nuw i32 %i.09, 1
  %8 = ptrtoint ptr %nr_hw_queues to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_hw_queues, align 8
  %cmp = icmp ult i32 %inc, %9
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.end:                                           ; preds = %for.body.if.end_crit_edge, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @blk_mq_init() #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call9 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call9, i32 %0)
  %cmp10 = icmp ult i32 %call9, %0
  br i1 %cmp10, label %entry.do.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

entry.do.body_crit_edge:                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %entry.do.body_crit_edge
  %call11 = phi i32 [ %call, %do.body.do.body_crit_edge ], [ %call9, %entry.do.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call11
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @blk_cpu_done to i32)
  %3 = inttoptr i32 %add to ptr
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %3, align 4
  %call = tail call i32 @cpumask_next(i32 noundef %call11, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %5
  br i1 %cmp, label %do.body.do.body_crit_edge, label %do.body.for.end_crit_edge

do.body.for.end_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

for.end:                                          ; preds = %do.body.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @open_softirq(i32 noundef 4, ptr noundef nonnull @blk_done_softirq) #20
  %call.i = tail call i32 @__cpuhp_setup_state(i32 noundef 22, ptr noundef nonnull @.str.62, i1 noundef zeroext false, ptr noundef null, ptr noundef nonnull @blk_softirq_cpu_dead, i1 noundef zeroext false) #20
  %call.i7 = tail call i32 @__cpuhp_setup_state(i32 noundef 26, ptr noundef nonnull @.str.63, i1 noundef zeroext false, ptr noundef null, ptr noundef nonnull @blk_mq_hctx_notify_dead, i1 noundef zeroext true) #20
  %call.i8 = tail call i32 @__cpuhp_setup_state(i32 noundef 156, ptr noundef nonnull @.str.64, i1 noundef zeroext false, ptr noundef nonnull @blk_mq_hctx_notify_online, ptr noundef nonnull @blk_mq_hctx_notify_offline, i1 noundef zeroext true) #20
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_kill_and_confirm(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #13

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_mq_get_tags(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_and_bit(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__blk_mq_tag_busy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rq_qos_done(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_put_tag(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__blk_mq_sched_restart(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_block_rq_complete(ptr noundef, ptr noundef, i8 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @blk_status_to_str(i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @blk_op_str(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__bio_advance(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_stat_add(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__blk_crypto_free_request(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_mono_fast_ns() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_put_tags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @percpu_ref_put_many(ptr noundef %ref, i32 noundef %nr) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = ptrtoint ptr %ref to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %ref, align 4
  %and.i = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i53 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i53, label %do.body1, label %if.else, !prof !298

do.body1:                                         ; preds = %rcu_read_lock.exit
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #20, !srcloc !303
  %7 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i54 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i54 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %5
  %13 = inttoptr i32 %add to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add15 = sub i32 %15, %nr
  store i32 %add15, ptr %13, align 4
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !304
  %and.i.i = and i32 %16, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %if.then29, label %do.body1.do.end31_crit_edge, !prof !300

do.body1.do.end31_crit_edge:                      ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end31

if.then29:                                        ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @warn_bogus_irq_restore() #20
  br label %do.end31

do.end31:                                         ; preds = %if.then29, %do.body1.do.end31_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #20, !srcloc !305
  br label %if.end48

if.else:                                          ; preds = %rcu_read_lock.exit
  %data = getelementptr inbounds %struct.percpu_ref, ptr %ref, i32 0, i32 1
  %17 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %18, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !309
  tail call void @llvm.prefetch.p0(ptr %18, i32 1, i32 3, i32 1) #20
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %18, ptr %18, i32 %nr, ptr elementtype(i32) %18) #20, !srcloc !310
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %19, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !311
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then45, label %if.else.if.end48_crit_edge, !prof !300

if.else.if.end48_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end48

if.then45:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %20 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data, align 4
  %release = getelementptr inbounds %struct.percpu_ref_data, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %release to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %release, align 4
  tail call void %23(ptr noundef %ref) #20
  br label %if.end48

if.end48:                                         ; preds = %if.then45, %if.else.if.end48_crit_edge, %do.end31
  %call.i55 = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i55, label %if.end48.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i58

if.end48.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true.i58:                                ; preds = %if.end48
  %call1.i56 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i56)
  %tobool.not.i57 = icmp eq i32 %call1.i56, 0
  br i1 %tobool.not.i57, label %land.lhs.true.i58.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i60

land.lhs.true.i58.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i58
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true2.i60:                               ; preds = %land.lhs.true.i58
  %.b4.i59 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i59, label %land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge, label %if.then.i61

land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i60
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

if.then.i61:                                      ; preds = %land.lhs.true2.i60
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i61, %land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i58.rcu_read_unlock.exit_crit_edge, %if.end48.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %24 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i62 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i62 to ptr
  %preempt_count.i.i.i.i63 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i63 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i63, align 4
  %sub.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i63, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cpus_share_cache(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__blk_mq_complete_request_remote(ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__raise_softirq_irqoff(i32 noundef 4) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @smp_call_function_single_async(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @llist_add_batch(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raise_softirq_irqoff(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @raise_softirq(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_block_rq_issue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rq_qos_issue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @update_io_ticks(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bio_poll(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @completion_done(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_block_rq_requeue(ptr noundef %rq) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_requeue, i32 0, i32 1), ptr blockaddress(@trace_block_rq_requeue, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !312

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !298

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !361
  %call42 = tail call i32 @__traceiter_block_rq_requeue(ptr noundef null, ptr noundef %rq) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !362
  %13 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !298

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !315
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_requeue, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_rq_requeue, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_block_rq_requeue.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_block_rq_requeue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.24, i32 noundef 101, ptr noundef nonnull @.str.25) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !316
  %31 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_block_rq_requeue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rq_qos_requeue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sbitmap_queue_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_sched_mark_restart_hctx(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__blk_mq_run_hw_queue(ptr noundef %hctx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i69 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i69 to ptr
  %preempt_count.i70 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i70 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i70, align 4
  %and2 = and i32 %7, 983040
  %or = or i32 %and2, %and
  %8 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i71 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i71 to ptr
  %preempt_count.i72 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i72 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i72, align 4
  %and4 = and i32 %11, 65280
  %or5 = or i32 %or, %and4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or5)
  %tobool.not = icmp eq i32 %or5, 0
  br i1 %tobool.not, label %entry.if.end33_crit_edge, label %land.rhs

entry.if.end33_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

land.rhs:                                         ; preds = %entry
  %.b68 = load i1, ptr @__blk_mq_run_hw_queue.__already_done, align 1
  br i1 %.b68, label %land.rhs.if.end33_crit_edge, label %if.then, !prof !298

land.rhs.if.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @__blk_mq_run_hw_queue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1970, i32 noundef 9, ptr noundef null) #20
  br label %if.end33

if.end33:                                         ; preds = %if.then, %land.rhs.if.end33_crit_edge, %entry.if.end33_crit_edge
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 7
  %12 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %queue, align 8
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %13, i32 0, i32 11
  %14 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %queue_flags, align 4
  %16 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool43.not = icmp eq i32 %16, 0
  br i1 %tobool43.not, label %if.then44, label %if.else

if.then44:                                        ; preds = %if.end33
  %17 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %20, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %if.then44.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then44.rcu_read_lock.exit_crit_edge:           ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then44
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then44.rcu_read_lock.exit_crit_edge
  tail call void @blk_mq_sched_dispatch_requests(ptr noundef %hctx) #20
  %call.i73 = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i73, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i76

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true.i76:                                ; preds = %rcu_read_lock.exit
  %call1.i74 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i74)
  %tobool.not.i75 = icmp eq i32 %call1.i74, 0
  br i1 %tobool.not.i75, label %land.lhs.true.i76.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i78

land.lhs.true.i76.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i76
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true2.i78:                               ; preds = %land.lhs.true.i76
  %.b4.i77 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i77, label %land.lhs.true2.i78.rcu_read_unlock.exit_crit_edge, label %if.then.i79

land.lhs.true2.i78.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i78
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

if.then.i79:                                      ; preds = %land.lhs.true2.i78
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i79, %land.lhs.true2.i78.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i76.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %21 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i80 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i.i.i80 to ptr
  %preempt_count.i.i.i.i81 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i.i.i81 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i.i.i81, align 4
  %sub.i.i.i = add i32 %24, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i81, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  br label %do.end61

if.else:                                          ; preds = %if.end33
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 1973) #20
  %25 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %queue, align 8
  %srcu = getelementptr inbounds %struct.request_queue, ptr %26, i32 0, i32 70
  %call.i82 = tail call i32 @__srcu_read_lock(ptr noundef %srcu) #20
  %dep_map.i = getelementptr inbounds %struct.request_queue, ptr %26, i32 1, i32 50, i32 2
  tail call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i) #20
  tail call void @blk_mq_sched_dispatch_requests(ptr noundef %hctx) #20
  %27 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %queue, align 8
  %srcu57 = getelementptr inbounds %struct.request_queue, ptr %28, i32 0, i32 70
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i82)
  %tobool.not.i83 = icmp ult i32 %call.i82, 2
  br i1 %tobool.not.i83, label %if.else.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

if.else.srcu_read_unlock.exit_crit_edge:          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %if.else
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i84, !prof !298

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %srcu_read_unlock.exit

if.then.i84:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.34, i32 noundef 189, i32 noundef 9, ptr noundef null) #20
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i84, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %if.else.srcu_read_unlock.exit_crit_edge
  %dep_map.i85 = getelementptr inbounds %struct.request_queue, ptr %28, i32 1, i32 50, i32 2
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i85) #20
  tail call void @__srcu_read_unlock(ptr noundef %srcu57, i32 noundef %call.i82) #20
  br label %do.end61

do.end61:                                         ; preds = %srcu_read_unlock.exit, %rcu_read_unlock.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_sched_dispatch_requests(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next_and(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr noundef %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @lock_acquire(ptr noundef %map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @sbitmap_any_bit_set(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr noundef %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @lock_release(ptr noundef %map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__srcu_read_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__srcu_read_unlock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_block_rq_insert(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_block_unplug(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i8 @__blk_mq_try_issue_directly(ptr noundef %hctx, ptr noundef %rq, i1 noundef zeroext %bypass_insert, i1 noundef zeroext %last) unnamed_addr #0 align 64 {
entry:
  %bd.i = alloca %struct.blk_mq_queue_data, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq, align 8
  %state.i = getelementptr inbounds %struct.anon.3, ptr %hctx, i32 0, i32 2
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %lor.lhs.false, label %entry.if.end18_crit_edge

entry.if.end18_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

lor.lhs.false:                                    ; preds = %entry
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 11
  %4 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %queue_flags, align 4
  %6 = and i32 %5, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.end, label %lor.lhs.false.if.end18_crit_edge

lor.lhs.false.if.end18_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

if.end:                                           ; preds = %lor.lhs.false
  %rq_flags = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %7 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rq_flags, align 8
  %and = and i32 %8, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  %brmerge = or i1 %tobool4.not, %bypass_insert
  br i1 %brmerge, label %if.end7, label %if.end.insert_crit_edge

if.end.insert_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %insert

if.end7:                                          ; preds = %if.end
  %mq_ops.i = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 5
  %9 = ptrtoint ptr %mq_ops.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mq_ops.i, align 8
  %get_budget.i = getelementptr inbounds %struct.blk_mq_ops, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %get_budget.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %get_budget.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %if.end7.if.end10_crit_edge, label %blk_mq_get_dispatch_budget.exit

if.end7.if.end10_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end10

blk_mq_get_dispatch_budget.exit:                  ; preds = %if.end7
  %call.i = tail call i32 %12(ptr noundef %1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %blk_mq_get_dispatch_budget.exit.insert_crit_edge, label %blk_mq_get_dispatch_budget.exit.if.end10_crit_edge

blk_mq_get_dispatch_budget.exit.if.end10_crit_edge: ; preds = %blk_mq_get_dispatch_budget.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end10

blk_mq_get_dispatch_budget.exit.insert_crit_edge: ; preds = %blk_mq_get_dispatch_budget.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %insert

if.end10:                                         ; preds = %blk_mq_get_dispatch_budget.exit.if.end10_crit_edge, %if.end7.if.end10_crit_edge
  %retval.0.i47 = phi i32 [ %call.i, %blk_mq_get_dispatch_budget.exit.if.end10_crit_edge ], [ 0, %if.end7.if.end10_crit_edge ]
  %13 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rq, align 8
  %mq_ops.i33 = getelementptr inbounds %struct.request_queue, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %mq_ops.i33 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mq_ops.i33, align 8
  %set_rq_budget_token.i = getelementptr inbounds %struct.blk_mq_ops, ptr %16, i32 0, i32 5
  %17 = ptrtoint ptr %set_rq_budget_token.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %set_rq_budget_token.i, align 4
  %tobool.not.i34 = icmp eq ptr %18, null
  br i1 %tobool.not.i34, label %if.end10.blk_mq_set_rq_budget_token.exit_crit_edge, label %if.then1.i

if.end10.blk_mq_set_rq_budget_token.exit_crit_edge: ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_set_rq_budget_token.exit

if.then1.i:                                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %18(ptr noundef %rq, i32 noundef %retval.0.i47) #20
  br label %blk_mq_set_rq_budget_token.exit

blk_mq_set_rq_budget_token.exit:                  ; preds = %if.then1.i, %if.end10.blk_mq_set_rq_budget_token.exit_crit_edge
  %mq_hctx.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %19 = ptrtoint ptr %mq_hctx.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mq_hctx.i, align 8
  %tag.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 5
  %21 = ptrtoint ptr %tag.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %tag.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %22)
  %cmp.not.i = icmp eq i32 %22, -1
  br i1 %cmp.not.i, label %blk_mq_set_rq_budget_token.exit.blk_mq_get_driver_tag.exit_crit_edge, label %land.lhs.true.i

blk_mq_set_rq_budget_token.exit.blk_mq_get_driver_tag.exit_crit_edge: ; preds = %blk_mq_set_rq_budget_token.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_get_driver_tag.exit

land.lhs.true.i:                                  ; preds = %blk_mq_set_rq_budget_token.exit
  %flags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %20, i32 0, i32 5
  %23 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags.i, align 16
  %and.i = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i35 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i35, label %blk_mq_get_driver_tag.exit.thread, label %land.lhs.true.i.blk_mq_get_driver_tag.exit_crit_edge

land.lhs.true.i.blk_mq_get_driver_tag.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_get_driver_tag.exit

blk_mq_get_driver_tag.exit.thread:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %20, i32 0, i32 19
  %25 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %tags.i, align 16
  %rqs.i = getelementptr inbounds %struct.blk_mq_tags, ptr %26, i32 0, i32 5
  %27 = ptrtoint ptr %rqs.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rqs.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %28, i32 %22
  %29 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %rq, ptr %arrayidx.i, align 4
  br label %if.end13

blk_mq_get_driver_tag.exit:                       ; preds = %land.lhs.true.i.blk_mq_get_driver_tag.exit_crit_edge, %blk_mq_set_rq_budget_token.exit.blk_mq_get_driver_tag.exit_crit_edge
  %call.i37 = tail call zeroext i1 @__blk_mq_get_driver_tag(ptr noundef %20, ptr noundef %rq) #20
  br i1 %call.i37, label %blk_mq_get_driver_tag.exit.if.end13_crit_edge, label %if.then12

blk_mq_get_driver_tag.exit.if.end13_crit_edge:    ; preds = %blk_mq_get_driver_tag.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.then12:                                        ; preds = %blk_mq_get_driver_tag.exit
  %30 = ptrtoint ptr %mq_ops.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mq_ops.i, align 8
  %put_budget.i = getelementptr inbounds %struct.blk_mq_ops, ptr %31, i32 0, i32 4
  %32 = ptrtoint ptr %put_budget.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %put_budget.i, align 4
  %tobool.not.i40 = icmp eq ptr %33, null
  br i1 %tobool.not.i40, label %if.then12.insert_crit_edge, label %if.then.i41

if.then12.insert_crit_edge:                       ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #22
  br label %insert

if.then.i41:                                      ; preds = %if.then12
  tail call void %33(ptr noundef %1, i32 noundef %retval.0.i47) #20
  br i1 %bypass_insert, label %if.then.i41.cleanup_crit_edge, label %if.then.i41.if.end18_crit_edge

if.then.i41.if.end18_crit_edge:                   ; preds = %if.then.i41
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

if.then.i41.cleanup_crit_edge:                    ; preds = %if.then.i41
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end13:                                         ; preds = %blk_mq_get_driver_tag.exit.if.end13_crit_edge, %blk_mq_get_driver_tag.exit.thread
  %frombool.i = zext i1 %last to i8
  %34 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rq, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %bd.i) #20
  %36 = ptrtoint ptr %bd.i to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 -1, ptr %bd.i, align 8, !annotation !299
  store ptr %rq, ptr %bd.i, align 8
  %last3.i = getelementptr inbounds %struct.blk_mq_queue_data, ptr %bd.i, i32 0, i32 1
  %37 = ptrtoint ptr %last3.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %frombool.i, ptr %last3.i, align 4
  %mq_ops.i43 = getelementptr inbounds %struct.request_queue, ptr %35, i32 0, i32 5
  %38 = ptrtoint ptr %mq_ops.i43 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mq_ops.i43, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %call.i44 = call zeroext i8 %41(ptr noundef %hctx, ptr noundef nonnull %bd.i) #20
  %42 = zext i8 %call.i44 to i64
  call void @__sanitizer_cov_trace_switch(i64 %42, ptr @__sancov_gen_cov_switch_values.75)
  switch i8 %call.i44, label %sw.default.i [
    i8 0, label %sw.bb.i
    i8 9, label %if.end13.sw.bb5.i_crit_edge
    i8 13, label %if.end13.sw.bb5.i_crit_edge53
  ]

if.end13.sw.bb5.i_crit_edge53:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb5.i

if.end13.sw.bb5.i_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb5.i

sw.bb.i:                                          ; preds = %if.end13
  %dispatch_busy.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 12
  %43 = ptrtoint ptr %dispatch_busy.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %dispatch_busy.i.i, align 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.not.i.not.i = icmp eq i32 %44, 0
  br i1 %tobool.not.i.not.i, label %sw.bb.i.__blk_mq_issue_directly.exit_crit_edge, label %if.end.i.i

sw.bb.i.__blk_mq_issue_directly.exit_crit_edge:   ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_issue_directly.exit

if.end.i.i:                                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #22
  %mul.i.i = mul i32 %44, 7
  %div12.i.i = lshr i32 %mul.i.i, 3
  %45 = ptrtoint ptr %dispatch_busy.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %div12.i.i, ptr %dispatch_busy.i.i, align 32
  br label %__blk_mq_issue_directly.exit

sw.bb5.i:                                         ; preds = %if.end13.sw.bb5.i_crit_edge, %if.end13.sw.bb5.i_crit_edge53
  %dispatch_busy.i12.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 12
  %46 = ptrtoint ptr %dispatch_busy.i12.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %dispatch_busy.i12.i, align 32
  %mul.i14.i = mul i32 %47, 7
  %add.i15.i = add i32 %mul.i14.i, 16
  %div12.i16.i = lshr i32 %add.i15.i, 3
  store i32 %div12.i16.i, ptr %dispatch_busy.i12.i, align 32
  call fastcc void @__blk_mq_requeue_request(ptr noundef %rq) #20
  br label %__blk_mq_issue_directly.exit

sw.default.i:                                     ; preds = %if.end13
  %dispatch_busy.i18.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 12
  %48 = ptrtoint ptr %dispatch_busy.i18.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %dispatch_busy.i18.i, align 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool.not.i19.not.i = icmp eq i32 %49, 0
  br i1 %tobool.not.i19.not.i, label %sw.default.i.__blk_mq_issue_directly.exit_crit_edge, label %if.end.i23.i

sw.default.i.__blk_mq_issue_directly.exit_crit_edge: ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__blk_mq_issue_directly.exit

if.end.i23.i:                                     ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #22
  %mul.i20.i = mul i32 %49, 7
  %div12.i22.i = lshr i32 %mul.i20.i, 3
  %50 = ptrtoint ptr %dispatch_busy.i18.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %div12.i22.i, ptr %dispatch_busy.i18.i, align 32
  br label %__blk_mq_issue_directly.exit

__blk_mq_issue_directly.exit:                     ; preds = %if.end.i23.i, %sw.default.i.__blk_mq_issue_directly.exit_crit_edge, %sw.bb5.i, %if.end.i.i, %sw.bb.i.__blk_mq_issue_directly.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bd.i) #20
  br label %cleanup

insert:                                           ; preds = %if.then12.insert_crit_edge, %blk_mq_get_dispatch_budget.exit.insert_crit_edge, %if.end.insert_crit_edge
  br i1 %bypass_insert, label %insert.cleanup_crit_edge, label %insert.if.end18_crit_edge

insert.if.end18_crit_edge:                        ; preds = %insert
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

insert.cleanup_crit_edge:                         ; preds = %insert
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end18:                                         ; preds = %insert.if.end18_crit_edge, %if.then.i41.if.end18_crit_edge, %lor.lhs.false.if.end18_crit_edge, %entry.if.end18_crit_edge
  %run_queue.0.off052 = phi i1 [ true, %insert.if.end18_crit_edge ], [ true, %if.then.i41.if.end18_crit_edge ], [ false, %lor.lhs.false.if.end18_crit_edge ], [ false, %entry.if.end18_crit_edge ]
  tail call void @blk_mq_sched_insert_request(ptr noundef %rq, i1 noundef zeroext false, i1 noundef zeroext %run_queue.0.off052, i1 noundef zeroext false) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %insert.cleanup_crit_edge, %__blk_mq_issue_directly.exit, %if.then.i41.cleanup_crit_edge
  %retval.0 = phi i8 [ 0, %if.end18 ], [ %call.i44, %__blk_mq_issue_directly.exit ], [ 9, %insert.cleanup_crit_edge ], [ 9, %if.then.i41.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__blk_crypto_bio_prep(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__blk_queue_bounce(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @blk_attempt_plug_merge(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @blk_mq_sched_bio_merge(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rq_qos_throttle(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bio_queue_enter(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rq_qos_cleanup(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_block_getrq(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rq_qos_track(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @__blk_crypto_init_request(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_block_plug(ptr noundef %q) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_plug, i32 0, i32 1), ptr blockaddress(@trace_block_plug, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !312

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !298

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !363
  %call42 = tail call i32 @__traceiter_block_plug(ptr noundef null, ptr noundef %q) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !364
  %13 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !298

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !315
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_plug, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_block_plug, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_block_plug.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_block_plug.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.24, i32 noundef 371, ptr noundef nonnull @.str.25) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !316
  %31 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_block_plug(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__blk_crypto_rq_bio_prep(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_mq_hw_queue_to_node(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @blk_mq_init_tags(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmemleak_alloc(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2 section ".ref.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @blk_alloc_queue(i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #16

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #17

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #17

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @blk_mq_exit_hctx(ptr noundef %q, ptr noundef %set, ptr noundef %hctx, i32 noundef %hctx_idx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %fq = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 8
  %0 = ptrtoint ptr %fq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fq, align 4
  %flush_rq1 = getelementptr inbounds %struct.blk_flush_queue, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %flush_rq1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %flush_rq1, align 4
  %nr_ctx.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 14
  %4 = ptrtoint ptr %nr_ctx.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %nr_ctx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not.i = icmp eq i16 %5, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %blk_mq_hw_queue_mapped.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

blk_mq_hw_queue_mapped.exit:                      ; preds = %entry
  %tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 19
  %6 = ptrtoint ptr %tags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tags.i, align 16
  %tobool1.i.not = icmp eq ptr %7, null
  br i1 %tobool1.i.not, label %blk_mq_hw_queue_mapped.exit.if.end_crit_edge, label %if.then

blk_mq_hw_queue_mapped.exit.if.end_crit_edge:     ; preds = %blk_mq_hw_queue_mapped.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %blk_mq_hw_queue_mapped.exit
  %flags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 5
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags.i, align 16
  %and.i = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i30 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i30, label %if.then.if.end_crit_edge, label %if.end.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__blk_mq_tag_idle(ptr noundef %hctx) #20
  br label %if.end

if.end:                                           ; preds = %if.end.i, %if.then.if.end_crit_edge, %blk_mq_hw_queue_mapped.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %tags = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 11
  %10 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tags, align 4
  %arrayidx = getelementptr ptr, ptr %11, i32 %hctx_idx
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 4
  %queue_depth = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 4
  %14 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %queue_depth, align 4
  %tobool.not.i31 = icmp eq ptr %13, null
  br i1 %tobool.not.i31, label %if.end.blk_mq_clear_flush_rq_mapping.exit_crit_edge, label %if.end.i32

if.end.blk_mq_clear_flush_rq_mapping.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_clear_flush_rq_mapping.exit

if.end.i32:                                       ; preds = %if.end
  %ref.i.i = getelementptr inbounds %struct.request, ptr %3, i32 0, i32 26
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %ref.i.i, i32 noundef 4) #20
  %16 = ptrtoint ptr %ref.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %ref.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp.not.i = icmp eq i32 %17, 0
  br i1 %cmp.not.i, label %if.end.i32.if.end30.i_crit_edge, label %land.rhs.i33

if.end.i32.if.end30.i_crit_edge:                  ; preds = %if.end.i32
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30.i

land.rhs.i33:                                     ; preds = %if.end.i32
  %.b79.i = load i1, ptr @blk_mq_clear_flush_rq_mapping.__already_done, align 1
  br i1 %.b79.i, label %land.rhs.i33.if.end30.i_crit_edge, label %if.then8.i, !prof !298

land.rhs.i33.if.end30.i_crit_edge:                ; preds = %land.rhs.i33
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30.i

if.then8.i:                                       ; preds = %land.rhs.i33
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_clear_flush_rq_mapping.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3415, i32 noundef 9, ptr noundef null) #20
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then8.i, %land.rhs.i33.if.end30.i_crit_edge, %if.end.i32.if.end30.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp3880.not.i = icmp eq i32 %15, 0
  br i1 %cmp3880.not.i, label %if.end30.i.do.body59.i_crit_edge, label %for.body.lr.ph.i

if.end30.i.do.body59.i_crit_edge:                 ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body59.i

for.body.lr.ph.i:                                 ; preds = %if.end30.i
  %rqs.i = getelementptr inbounds %struct.blk_mq_tags, ptr %13, i32 0, i32 5
  %18 = ptrtoint ptr %3 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %__cmpxchg.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.081.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %__cmpxchg.exit.i.for.body.i_crit_edge ]
  %19 = ptrtoint ptr %rqs.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rqs.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %20, i32 %i.081.i
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !365
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i, i32 1, i32 3, i32 1) #20
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %for.body.i
  %21 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %arrayidx.i, i32 %18, i32 0) #20, !srcloc !349
  %asmresult.i.i = extractvalue { i32, i32 } %21, 0
  %tobool.not.i.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool.not.i.i, label %__cmpxchg.exit.i, label %do.body.i.i.do.body.i.i_crit_edge

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i

__cmpxchg.exit.i:                                 ; preds = %do.body.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !366
  %inc.i = add nuw i32 %i.081.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %15
  br i1 %exitcond.not.i, label %__cmpxchg.exit.i.do.body59.i_crit_edge, label %__cmpxchg.exit.i.for.body.i_crit_edge

__cmpxchg.exit.i.for.body.i_crit_edge:            ; preds = %__cmpxchg.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

__cmpxchg.exit.i.do.body59.i_crit_edge:           ; preds = %__cmpxchg.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body59.i

do.body59.i:                                      ; preds = %__cmpxchg.exit.i.do.body59.i_crit_edge, %if.end30.i.do.body59.i_crit_edge
  %lock.i = getelementptr inbounds %struct.blk_mq_tags, ptr %13, i32 0, i32 8
  %call63.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #20
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call63.i) #20
  br label %blk_mq_clear_flush_rq_mapping.exit

blk_mq_clear_flush_rq_mapping.exit:               ; preds = %do.body59.i, %if.end.blk_mq_clear_flush_rq_mapping.exit_crit_edge
  %ops = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 2
  %22 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops, align 4
  %exit_request = getelementptr inbounds %struct.blk_mq_ops, ptr %23, i32 0, i32 13
  %24 = ptrtoint ptr %exit_request to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %exit_request, align 4
  %tobool.not = icmp eq ptr %25, null
  br i1 %tobool.not, label %blk_mq_clear_flush_rq_mapping.exit.if.end5_crit_edge, label %if.then2

blk_mq_clear_flush_rq_mapping.exit.if.end5_crit_edge: ; preds = %blk_mq_clear_flush_rq_mapping.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

if.then2:                                         ; preds = %blk_mq_clear_flush_rq_mapping.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %25(ptr noundef %set, ptr noundef %3, i32 noundef %hctx_idx) #20
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %blk_mq_clear_flush_rq_mapping.exit.if.end5_crit_edge
  %26 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ops, align 4
  %exit_hctx = getelementptr inbounds %struct.blk_mq_ops, ptr %27, i32 0, i32 11
  %28 = ptrtoint ptr %exit_hctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %exit_hctx, align 4
  %tobool7.not = icmp eq ptr %29, null
  br i1 %tobool7.not, label %if.end5.if.end11_crit_edge, label %if.then8

if.end5.if.end11_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %29(ptr noundef %hctx, i32 noundef %hctx_idx) #20
  br label %if.end11

if.end11:                                         ; preds = %if.then8, %if.end5.if.end11_crit_edge
  %flags.i34 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 5
  %30 = ptrtoint ptr %flags.i34 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags.i34, align 16
  %and.i35 = and i32 %31, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i35)
  %tobool.not.i36 = icmp eq i32 %and.i35, 0
  br i1 %tobool.not.i36, label %if.then.i, label %if.end11.blk_mq_remove_cpuhp.exit_crit_edge

if.end11.blk_mq_remove_cpuhp.exit_crit_edge:      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_remove_cpuhp.exit

if.then.i:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  %cpuhp_online.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 26
  %call.i.i37 = tail call i32 @__cpuhp_state_remove_instance(i32 noundef 156, ptr noundef %cpuhp_online.i, i1 noundef zeroext false) #20
  br label %blk_mq_remove_cpuhp.exit

blk_mq_remove_cpuhp.exit:                         ; preds = %if.then.i, %if.end11.blk_mq_remove_cpuhp.exit_crit_edge
  %cpuhp_dead.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 27
  %call.i4.i = tail call i32 @__cpuhp_state_remove_instance(i32 noundef 26, ptr noundef %cpuhp_dead.i, i1 noundef zeroext false) #20
  %unused_hctx_lock = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 54
  tail call void @_raw_spin_lock(ptr noundef %unused_hctx_lock) #20
  %hctx_list = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 31
  %unused_hctx_list = getelementptr inbounds %struct.request_queue, ptr %q, i32 0, i32 53
  %32 = ptrtoint ptr %unused_hctx_list to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %unused_hctx_list, align 4
  %call.i.i39 = tail call zeroext i1 @__list_add_valid(ptr noundef %hctx_list, ptr noundef %unused_hctx_list, ptr noundef %33) #20
  br i1 %call.i.i39, label %if.end.i.i, label %blk_mq_remove_cpuhp.exit.list_add.exit_crit_edge

blk_mq_remove_cpuhp.exit.list_add.exit_crit_edge: ; preds = %blk_mq_remove_cpuhp.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_add.exit

if.end.i.i:                                       ; preds = %blk_mq_remove_cpuhp.exit
  call void @__sanitizer_cov_trace_pc() #22
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %hctx_list, ptr %prev1.i.i, align 4
  %35 = ptrtoint ptr %hctx_list to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %33, ptr %hctx_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %hctx, i32 0, i32 31, i32 1
  %36 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %unused_hctx_list, ptr %prev3.i.i, align 4
  %37 = ptrtoint ptr %unused_hctx_list to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %hctx_list, ptr %unused_hctx_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %blk_mq_remove_cpuhp.exit.list_add.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %unused_hctx_lock) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @zalloc_cpumask_var_node(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @blk_mq_run_work_fn(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i = getelementptr i8, ptr %work, i32 -76
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr = getelementptr i8, ptr %work, i32 -128
  tail call fastcc void @__blk_mq_run_hw_queue(ptr noundef %add.ptr)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sbitmap_init_node(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @blk_mq_dispatch_wake(ptr noundef %wait, i32 noundef %mode, i32 noundef %flags, ptr nocapture noundef readnone %key) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %dispatch_wait_lock = getelementptr i8, ptr %wait, i32 -44
  tail call void @_raw_spin_lock(ptr noundef %dispatch_wait_lock) #20
  %entry1 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3
  %0 = ptrtoint ptr %entry1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %entry1, align 4
  %cmp.i.not = icmp eq ptr %1, %entry1
  br i1 %cmp.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  %call.i.i9 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1) #20
  br i1 %call.i.i9, label %if.end.i.i, label %if.then.list_del_init.exit_crit_edge

if.then.list_del_init.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %entry1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %entry1, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then.list_del_init.exit_crit_edge
  %8 = ptrtoint ptr %entry1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %entry1, ptr %entry1, align 4
  %prev.i3.i = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %9 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %entry1, ptr %prev.i3.i, align 4
  %tags = getelementptr i8, ptr %wait, i32 24
  %10 = ptrtoint ptr %tags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tags, align 16
  %ws_active = getelementptr inbounds %struct.blk_mq_tags, ptr %11, i32 0, i32 3, i32 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ws_active, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %ws_active, i32 1, i32 3, i32 1) #20
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ws_active, ptr %ws_active, i32 1, ptr elementtype(i32) %ws_active) #20, !srcloc !308
  br label %if.end

if.end:                                           ; preds = %list_del_init.exit, %entry.if.end_crit_edge
  %add.ptr = getelementptr i8, ptr %wait, i32 -344
  tail call void @_raw_spin_unlock(ptr noundef %dispatch_wait_lock) #20
  tail call void @blk_mq_run_hw_queue(ptr noundef %add.ptr, i1 noundef zeroext true)
  ret i32 1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @blk_alloc_flush_queue(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_hctx_kobj_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_cpumask_var(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #16

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_state_add_instance(i32 noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_state_remove_instance(i32 noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__blk_mq_tag_idle(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @percpu_ref_tryget(ptr noundef %ref) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !302
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i.i, label %entry.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

entry.rcu_read_lock.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 696, ptr noundef nonnull @.str.32) #20
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %entry.rcu_read_lock.exit.i_crit_edge
  %4 = ptrtoint ptr %ref to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %ref, align 4
  %and.i.i = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i1.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i1.i, label %do.body1.i, label %if.else.i, !prof !298

do.body1.i:                                       ; preds = %rcu_read_lock.exit.i
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #20, !srcloc !303
  %7 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i2.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i2.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %12, %5
  %13 = inttoptr i32 %add.i to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add15.i = add i32 %15, 1
  store i32 %add15.i, ptr %13, align 4
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !304
  %and.i.i.i = and i32 %16, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then29.i, label %do.body1.i.do.end31.i_crit_edge, !prof !300

do.body1.i.do.end31.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end31.i

if.then29.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @warn_bogus_irq_restore() #20
  br label %do.end31.i

do.end31.i:                                       ; preds = %if.then29.i, %do.body1.i.do.end31.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #20, !srcloc !305
  br label %if.end39.i

if.else.i:                                        ; preds = %rcu_read_lock.exit.i
  %data.i = getelementptr inbounds %struct.percpu_ref, ptr %ref, i32 0, i32 1
  %17 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %18, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !340
  tail call void @llvm.prefetch.p0(ptr %18, i32 1, i32 3, i32 1) #20
  %19 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %18, ptr %18, i32 0, i32 1, ptr elementtype(i32) %18) #20, !srcloc !341
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.else.i.atomic_long_add_unless.exit.i_crit_edge, label %do.end11.i.i.i.i.i

if.else.i.atomic_long_add_unless.exit.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %atomic_long_add_unless.exit.i

do.end11.i.i.i.i.i:                               ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !342
  br label %atomic_long_add_unless.exit.i

atomic_long_add_unless.exit.i:                    ; preds = %do.end11.i.i.i.i.i, %if.else.i.atomic_long_add_unless.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i, 0
  br label %if.end39.i

if.end39.i:                                       ; preds = %atomic_long_add_unless.exit.i, %do.end31.i
  %ret.0.off0.i = phi i1 [ true, %do.end31.i ], [ %cmp.i.i.i.i, %atomic_long_add_unless.exit.i ]
  %call.i3.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i3.i, label %if.end39.i.percpu_ref_tryget_many.exit_crit_edge, label %land.lhs.true.i6.i

if.end39.i.percpu_ref_tryget_many.exit_crit_edge: ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %percpu_ref_tryget_many.exit

land.lhs.true.i6.i:                               ; preds = %if.end39.i
  %call1.i4.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i)
  %tobool.not.i5.i = icmp eq i32 %call1.i4.i, 0
  br i1 %tobool.not.i5.i, label %land.lhs.true.i6.i.percpu_ref_tryget_many.exit_crit_edge, label %land.lhs.true2.i8.i

land.lhs.true.i6.i.percpu_ref_tryget_many.exit_crit_edge: ; preds = %land.lhs.true.i6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %percpu_ref_tryget_many.exit

land.lhs.true2.i8.i:                              ; preds = %land.lhs.true.i6.i
  %.b4.i7.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i, label %land.lhs.true2.i8.i.percpu_ref_tryget_many.exit_crit_edge, label %if.then.i9.i

land.lhs.true2.i8.i.percpu_ref_tryget_many.exit_crit_edge: ; preds = %land.lhs.true2.i8.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %percpu_ref_tryget_many.exit

if.then.i9.i:                                     ; preds = %land.lhs.true2.i8.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 724, ptr noundef nonnull @.str.33) #20
  br label %percpu_ref_tryget_many.exit

percpu_ref_tryget_many.exit:                      ; preds = %if.then.i9.i, %land.lhs.true2.i8.i.percpu_ref_tryget_many.exit_crit_edge, %land.lhs.true.i6.i.percpu_ref_tryget_many.exit_crit_edge, %if.end39.i.percpu_ref_tryget_many.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !307
  %20 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i.i.i.i.i10.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i10.i to ptr
  %preempt_count.i.i.i.i11.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i.i.i11.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i.i.i11.i, align 4
  %sub.i.i.i.i = add i32 %23, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i11.i, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  ret i1 %ret.0.off0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @blk_mq_check_expired(ptr noundef %rq, ptr nocapture noundef %priv, i1 noundef zeroext %reserved) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 25
  %0 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.not.i = icmp eq i32 %1, 1
  br i1 %cmp.not.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end.i:                                         ; preds = %entry
  %rq_flags.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 4
  %2 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rq_flags.i, align 8
  %and.i = and i32 %3, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i, label %if.end.i.if.end_crit_edge

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

do.end.i:                                         ; preds = %if.end.i
  %deadline3.i = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 27
  %4 = ptrtoint ptr %deadline3.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %deadline3.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %6 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %6, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i)
  %cmp4.i = icmp sgt i32 %sub.i, -1
  br i1 %cmp4.i, label %if.then, label %if.end6.i

if.end6.i:                                        ; preds = %do.end.i
  %7 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %priv, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp7.i = icmp eq i32 %8, 0
  %sub9.i = sub i32 %5, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub9.i)
  %cmp10.i = icmp slt i32 %sub9.i, 0
  %or.cond.i = select i1 %cmp7.i, i1 true, i1 %cmp10.i
  br i1 %or.cond.i, label %cleanup.sink.split.i, label %if.end6.i.if.end_crit_edge

if.end6.i.if.end_crit_edge:                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

cleanup.sink.split.i:                             ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  %9 = ptrtoint ptr %priv to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %5, ptr %priv, align 4
  br label %if.end

if.then:                                          ; preds = %do.end.i
  %10 = ptrtoint ptr %rq_flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rq_flags.i, align 8
  %or.i = or i32 %11, 2097152
  store i32 %or.i, ptr %rq_flags.i, align 8
  %12 = ptrtoint ptr %rq to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rq, align 8
  %mq_ops.i = getelementptr inbounds %struct.request_queue, ptr %13, i32 0, i32 5
  %14 = ptrtoint ptr %mq_ops.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mq_ops.i, align 8
  %timeout.i = getelementptr inbounds %struct.blk_mq_ops, ptr %15, i32 0, i32 7
  %16 = ptrtoint ptr %timeout.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %timeout.i, align 4
  %tobool.not.i3 = icmp eq ptr %17, null
  br i1 %tobool.not.i3, label %if.then.if.end45.i_crit_edge, label %if.then.i

if.then.if.end45.i_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end45.i

if.then.i:                                        ; preds = %if.then
  %call.i = tail call i32 %17(ptr noundef %rq, i1 noundef zeroext %reserved) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not.i4 = icmp eq i32 %call.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i)
  %switch54.i = icmp ult i32 %call.i, 2
  br i1 %switch54.i, label %if.then.i.cleanup.i_crit_edge, label %land.rhs.i

if.then.i.cleanup.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i

land.rhs.i:                                       ; preds = %if.then.i
  %.b53.i = load i1, ptr @blk_mq_rq_timed_out.__already_done, align 1
  br i1 %.b53.i, label %land.rhs.i.cleanup.i_crit_edge, label %if.then15.i, !prof !298

land.rhs.i.cleanup.i_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i

if.then15.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @blk_mq_rq_timed_out.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1391, i32 noundef 9, ptr noundef null) #20
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.then15.i, %land.rhs.i.cleanup.i_crit_edge, %if.then.i.cleanup.i_crit_edge
  br i1 %cmp.not.i4, label %cleanup.i.if.end_crit_edge, label %cleanup.i.if.end45.i_crit_edge

cleanup.i.if.end45.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end45.i

cleanup.i.if.end_crit_edge:                       ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end45.i:                                       ; preds = %cleanup.i.if.end45.i_crit_edge, %if.then.if.end45.i_crit_edge
  tail call void @blk_add_timer(ptr noundef %rq) #20
  br label %if.end

if.end:                                           ; preds = %if.end45.i, %cleanup.i.if.end_crit_edge, %cleanup.sink.split.i, %if.end6.i.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  ret i1 true
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @blk_mq_update_tag_set_shared(ptr noundef %set, i1 noundef zeroext %shared) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 13, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !300

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3774, i32 noundef 9, ptr noundef null) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tag_list = getelementptr inbounds %struct.blk_mq_tag_set, ptr %set, i32 0, i32 14
  %1 = ptrtoint ptr %tag_list to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn42 = load ptr, ptr %tag_list, align 4
  %cmp26.not43 = icmp eq ptr %.pn42, %tag_list
  br i1 %cmp26.not43, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %queue_set_hctx_shared.exit.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn44 = phi ptr [ %.pn, %queue_set_hctx_shared.exit.for.body_crit_edge ], [ %.pn42, %if.end.for.body_crit_edge ]
  %q.0 = getelementptr i8, ptr %.pn44, i32 -1204
  tail call void @blk_freeze_queue(ptr noundef %q.0) #20
  %nr_hw_queues.i = getelementptr i8, ptr %.pn44, i32 -1164
  %2 = ptrtoint ptr %nr_hw_queues.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_hw_queues.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp8.not.i = icmp eq i32 %3, 0
  br i1 %cmp8.not.i, label %for.body.queue_set_hctx_shared.exit_crit_edge, label %land.rhs.lr.ph.i

for.body.queue_set_hctx_shared.exit_crit_edge:    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %queue_set_hctx_shared.exit

land.rhs.lr.ph.i:                                 ; preds = %for.body
  %queue_hw_ctx.i = getelementptr i8, ptr %.pn44, i32 -1168
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.inc.i.land.rhs.i_crit_edge, %land.rhs.lr.ph.i
  %i.09.i = phi i32 [ 0, %land.rhs.lr.ph.i ], [ %inc.i, %for.inc.i.land.rhs.i_crit_edge ]
  %4 = ptrtoint ptr %queue_hw_ctx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %queue_hw_ctx.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %5, i32 %i.09.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i, align 4
  %flags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags.i, align 16
  br i1 %shared, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  %or.i = or i32 %9, 2
  br label %for.inc.i

if.else.i:                                        ; preds = %land.rhs.i
  %and.i.i = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.else.i.blk_mq_tag_idle.exit.i_crit_edge, label %if.end.i.i

if.else.i.blk_mq_tag_idle.exit.i_crit_edge:       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_tag_idle.exit.i

if.end.i.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__blk_mq_tag_idle(ptr noundef %7) #20
  br label %blk_mq_tag_idle.exit.i

blk_mq_tag_idle.exit.i:                           ; preds = %if.end.i.i, %if.else.i.blk_mq_tag_idle.exit.i_crit_edge
  %10 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags.i, align 16
  %and.i = and i32 %11, -3
  br label %for.inc.i

for.inc.i:                                        ; preds = %blk_mq_tag_idle.exit.i, %if.then.i
  %or.sink.i = phi i32 [ %or.i, %if.then.i ], [ %and.i, %blk_mq_tag_idle.exit.i ]
  %12 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or.sink.i, ptr %flags.i, align 16
  %inc.i = add nuw i32 %i.09.i, 1
  %13 = ptrtoint ptr %nr_hw_queues.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %nr_hw_queues.i, align 8
  %cmp.i = icmp ult i32 %inc.i, %14
  br i1 %cmp.i, label %for.inc.i.land.rhs.i_crit_edge, label %for.inc.i.queue_set_hctx_shared.exit_crit_edge

for.inc.i.queue_set_hctx_shared.exit_crit_edge:   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %queue_set_hctx_shared.exit

for.inc.i.land.rhs.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs.i

queue_set_hctx_shared.exit:                       ; preds = %for.inc.i.queue_set_hctx_shared.exit_crit_edge, %for.body.queue_set_hctx_shared.exit_crit_edge
  tail call void @__blk_mq_unfreeze_queue(ptr noundef %q.0, i1 noundef zeroext false) #20
  %15 = ptrtoint ptr %.pn44 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn = load ptr, ptr %.pn44, align 4
  %cmp26.not = icmp eq ptr %.pn, %tag_list
  br i1 %cmp26.not, label %queue_set_hctx_shared.exit.for.end_crit_edge, label %queue_set_hctx_shared.exit.for.body_crit_edge

queue_set_hctx_shared.exit.for.body_crit_edge:    ; preds = %queue_set_hctx_shared.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

queue_set_hctx_shared.exit.for.end_crit_edge:     ; preds = %queue_set_hctx_shared.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %queue_set_hctx_shared.exit.for.end_crit_edge, %if.end.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sbitmap_resize(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_debugfs_unregister_hctx(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_mq_map_queues(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_debugfs_unregister_hctxs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_sysfs_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_mq_sysfs_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_debugfs_register_hctxs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__module_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @elevator_switch_mq(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_init_sleeper_on_stack(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_sleeper_start_expires(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @io_schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hrtimer_cancel(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_hrtimer_on_stack(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @blk_stats_alloc_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @open_softirq(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @blk_done_softirq(ptr nocapture noundef readnone %h) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !287) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @blk_cpu_done to i32)
  %6 = inttoptr i32 %add to ptr
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %6, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !367
  tail call void @llvm.prefetch.p0(ptr %6, i32 1, i32 3, i32 1) #20
  %7 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %6) #20, !srcloc !368
  %asmresult.i.i.i = extractvalue { i32, i32 } %7, 0
  %8 = inttoptr i32 %asmresult.i.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !369
  %call2.i = tail call ptr @llist_reverse_order(ptr noundef %8) #20
  %rq.010.i = getelementptr i8, ptr %call2.i, i32 -128
  %cmp.not11.i = icmp eq ptr %rq.010.i, inttoptr (i32 -128 to ptr)
  br i1 %cmp.not11.i, label %entry.blk_complete_reqs.exit_crit_edge, label %entry.land.rhs.i_crit_edge

entry.land.rhs.i_crit_edge:                       ; preds = %entry
  br label %land.rhs.i

entry.blk_complete_reqs.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_complete_reqs.exit

land.rhs.i:                                       ; preds = %land.rhs.i.land.rhs.i_crit_edge, %entry.land.rhs.i_crit_edge
  %rq.013.i = phi ptr [ %rq.0.i, %land.rhs.i.land.rhs.i_crit_edge ], [ %rq.010.i, %entry.land.rhs.i_crit_edge ]
  %call2.pn12.i = phi ptr [ %10, %land.rhs.i.land.rhs.i_crit_edge ], [ %call2.i, %entry.land.rhs.i_crit_edge ]
  %9 = ptrtoint ptr %call2.pn12.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %call2.pn12.i, align 8
  %11 = ptrtoint ptr %rq.013.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rq.013.i, align 8
  %mq_ops.i = getelementptr inbounds %struct.request_queue, ptr %12, i32 0, i32 5
  %13 = ptrtoint ptr %mq_ops.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mq_ops.i, align 8
  %complete.i = getelementptr inbounds %struct.blk_mq_ops, ptr %14, i32 0, i32 9
  %15 = ptrtoint ptr %complete.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %complete.i, align 4
  tail call void %16(ptr noundef %rq.013.i) #20
  %rq.0.i = getelementptr i8, ptr %10, i32 -128
  %cmp.not.i = icmp eq ptr %rq.0.i, inttoptr (i32 -128 to ptr)
  br i1 %cmp.not.i, label %land.rhs.i.blk_complete_reqs.exit_crit_edge, label %land.rhs.i.land.rhs.i_crit_edge

land.rhs.i.land.rhs.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs.i

land.rhs.i.blk_complete_reqs.exit_crit_edge:      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_complete_reqs.exit

blk_complete_reqs.exit:                           ; preds = %land.rhs.i.blk_complete_reqs.exit_crit_edge, %entry.blk_complete_reqs.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @blk_softirq_cpu_dead(i32 noundef %cpu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @blk_cpu_done to i32)
  %2 = inttoptr i32 %add to ptr
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %2, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !367
  tail call void @llvm.prefetch.p0(ptr %2, i32 1, i32 3, i32 1) #20
  %3 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %2) #20, !srcloc !368
  %asmresult.i.i.i = extractvalue { i32, i32 } %3, 0
  %4 = inttoptr i32 %asmresult.i.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !369
  %call2.i = tail call ptr @llist_reverse_order(ptr noundef %4) #20
  %rq.010.i = getelementptr i8, ptr %call2.i, i32 -128
  %cmp.not11.i = icmp eq ptr %rq.010.i, inttoptr (i32 -128 to ptr)
  br i1 %cmp.not11.i, label %entry.blk_complete_reqs.exit_crit_edge, label %entry.land.rhs.i_crit_edge

entry.land.rhs.i_crit_edge:                       ; preds = %entry
  br label %land.rhs.i

entry.blk_complete_reqs.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_complete_reqs.exit

land.rhs.i:                                       ; preds = %land.rhs.i.land.rhs.i_crit_edge, %entry.land.rhs.i_crit_edge
  %rq.013.i = phi ptr [ %rq.0.i, %land.rhs.i.land.rhs.i_crit_edge ], [ %rq.010.i, %entry.land.rhs.i_crit_edge ]
  %call2.pn12.i = phi ptr [ %6, %land.rhs.i.land.rhs.i_crit_edge ], [ %call2.i, %entry.land.rhs.i_crit_edge ]
  %5 = ptrtoint ptr %call2.pn12.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %call2.pn12.i, align 8
  %7 = ptrtoint ptr %rq.013.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %rq.013.i, align 8
  %mq_ops.i = getelementptr inbounds %struct.request_queue, ptr %8, i32 0, i32 5
  %9 = ptrtoint ptr %mq_ops.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mq_ops.i, align 8
  %complete.i = getelementptr inbounds %struct.blk_mq_ops, ptr %10, i32 0, i32 9
  %11 = ptrtoint ptr %complete.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %complete.i, align 4
  tail call void %12(ptr noundef %rq.013.i) #20
  %rq.0.i = getelementptr i8, ptr %6, i32 -128
  %cmp.not.i = icmp eq ptr %rq.0.i, inttoptr (i32 -128 to ptr)
  br i1 %cmp.not.i, label %land.rhs.i.blk_complete_reqs.exit_crit_edge, label %land.rhs.i.land.rhs.i_crit_edge

land.rhs.i.land.rhs.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs.i

land.rhs.i.blk_complete_reqs.exit_crit_edge:      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_complete_reqs.exit

blk_complete_reqs.exit:                           ; preds = %land.rhs.i.blk_complete_reqs.exit_crit_edge, %entry.blk_complete_reqs.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @blk_mq_hctx_notify_dead(i32 noundef %cpu, ptr noundef %node) #0 align 64 {
entry:
  %tmp = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp) #20
  %0 = getelementptr inbounds %struct.list_head, ptr %tmp, i32 0, i32 1
  %1 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tmp, ptr %tmp, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %tmp, ptr %0, align 4
  %tobool.not = icmp eq ptr %node, null
  %add.ptr = getelementptr i8, ptr %node, i32 -404
  %spec.select = select i1 %tobool.not, ptr null, ptr %add.ptr
  %cpumask = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 2
  %3 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %cpu)
  %cmp.not.i.i.i = icmp ugt i32 %5, %cpu
  br i1 %cmp.not.i.i.i, label %entry.cpumask_test_cpu.exit_crit_edge, label %land.rhs.i.i.i

entry.cpumask_test_cpu.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

land.rhs.i.i.i:                                   ; preds = %entry
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, label %if.then.i.i.i, !prof !298

land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge:   ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, %entry.cpumask_test_cpu.exit_crit_edge
  %div3.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i = getelementptr i32, ptr %4, i32 %div3.i.i
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %cpu, 31
  %8 = shl nuw i32 1, %and.i.i
  %9 = and i32 %7, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool3.not = icmp eq i32 %9, 0
  br i1 %tobool3.not, label %cpumask_test_cpu.exit.cleanup_crit_edge, label %if.end

cpumask_test_cpu.exit.cleanup_crit_edge:          ; preds = %cpumask_test_cpu.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %cpumask_test_cpu.exit
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 7
  %10 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %queue, align 8
  %queue_ctx.i = getelementptr inbounds %struct.request_queue, ptr %11, i32 0, i32 6
  %12 = ptrtoint ptr %queue_ctx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %queue_ctx.i, align 4
  %14 = ptrtoint ptr %13 to i32
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %16, %14
  %17 = inttoptr i32 %add.i to ptr
  %type5 = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 13
  %18 = ptrtoint ptr %type5 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %type5, align 4
  %conv = zext i16 %19 to i32
  call void @_raw_spin_lock(ptr noundef %17) #20
  %arrayidx = getelementptr %struct.anon, ptr %17, i32 0, i32 1, i32 %conv
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %arrayidx, align 4
  %cmp.i.not = icmp eq ptr %21, %arrayidx
  br i1 %cmp.i.not, label %if.end.if.end11_crit_edge, label %if.then8

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11

if.then8:                                         ; preds = %if.end
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %arrayidx, align 4
  %cmp.i.not.i = icmp eq ptr %23, %arrayidx
  br i1 %cmp.i.not.i, label %if.then8.list_splice_init.exit_crit_edge, label %if.then.i

if.then8.list_splice_init.exit_crit_edge:         ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_splice_init.exit

if.then.i:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  %24 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %tmp, align 4
  %prev2.i.i = getelementptr %struct.anon, ptr %17, i32 0, i32 1, i32 %conv, i32 1
  %26 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %28 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %tmp, ptr %prev3.i.i, align 4
  store ptr %23, ptr %tmp, align 4
  %29 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %25, ptr %27, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  %30 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %27, ptr %prev6.i.i, align 4
  %31 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %arrayidx, ptr %arrayidx, align 4
  store ptr %arrayidx, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i, %if.then8.list_splice_init.exit_crit_edge
  %32 = ptrtoint ptr %type5 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %type5, align 4
  %idxprom.i = zext i16 %33 to i32
  %arrayidx.i36 = getelementptr %struct.blk_mq_ctx, ptr %17, i32 0, i32 2, i32 %idxprom.i
  %34 = ptrtoint ptr %arrayidx.i36 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %arrayidx.i36, align 2
  %conv.i37 = zext i16 %35 to i32
  %shift.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 10, i32 1
  %36 = ptrtoint ptr %shift.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %shift.i.i, align 4
  %notmask.i.i = shl nsw i32 -1, %37
  %sub.i.i = xor i32 %notmask.i.i, -1
  %and.i.i38 = and i32 %sub.i.i, %conv.i37
  %map.i.i.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 10, i32 4
  %38 = ptrtoint ptr %map.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %map.i.i.i, align 4
  %shr.i.i.i = lshr i32 %conv.i37, %37
  %word.i.i.i = getelementptr %struct.sbitmap_word, ptr %39, i32 %shr.i.i.i, i32 2
  call void @_clear_bit(i32 noundef %and.i.i38, ptr noundef %word.i.i.i) #20
  br label %if.end11

if.end11:                                         ; preds = %list_splice_init.exit, %if.end.if.end11_crit_edge
  call void @_raw_spin_unlock(ptr noundef %17) #20
  %40 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile ptr, ptr %tmp, align 4
  %cmp.i39.not = icmp eq ptr %41, %tmp
  br i1 %cmp.i39.not, label %if.end11.cleanup_crit_edge, label %if.end16

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end16:                                         ; preds = %if.end11
  call void @_raw_spin_lock(ptr noundef %spec.select) #20
  %42 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile ptr, ptr %tmp, align 4
  %cmp.i.not.i41 = icmp eq ptr %43, %tmp
  br i1 %cmp.i.not.i41, label %if.end16.list_splice_tail_init.exit_crit_edge, label %if.then.i44

if.end16.list_splice_tail_init.exit_crit_edge:    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_splice_tail_init.exit

if.then.i44:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  %dispatch = getelementptr inbounds %struct.anon.3, ptr %spec.select, i32 0, i32 1
  %prev.i = getelementptr inbounds %struct.anon.3, ptr %spec.select, i32 0, i32 1, i32 1
  %44 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %prev.i, align 4
  %46 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %0, align 4
  %prev3.i.i43 = getelementptr inbounds %struct.list_head, ptr %43, i32 0, i32 1
  %48 = ptrtoint ptr %prev3.i.i43 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %45, ptr %prev3.i.i43, align 4
  %49 = ptrtoint ptr %45 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %43, ptr %45, align 4
  %50 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %dispatch, ptr %47, align 4
  store ptr %47, ptr %prev.i, align 4
  %51 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %tmp, ptr %tmp, align 4
  store ptr %tmp, ptr %0, align 4
  br label %list_splice_tail_init.exit

list_splice_tail_init.exit:                       ; preds = %if.then.i44, %if.end16.list_splice_tail_init.exit_crit_edge
  call void @_raw_spin_unlock(ptr noundef %spec.select) #20
  call void @blk_mq_run_hw_queue(ptr noundef %spec.select, i1 noundef zeroext true)
  br label %cleanup

cleanup:                                          ; preds = %list_splice_tail_init.exit, %if.end11.cleanup_crit_edge, %cpumask_test_cpu.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp) #20
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @blk_mq_hctx_notify_online(i32 noundef %cpu, ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %node, null
  %add.ptr = getelementptr i8, ptr %node, i32 -396
  %spec.select = select i1 %tobool.not, ptr null, ptr %add.ptr
  %cpumask = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 2
  %0 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %cpu)
  %cmp.not.i.i.i = icmp ugt i32 %2, %cpu
  br i1 %cmp.not.i.i.i, label %entry.cpumask_test_cpu.exit_crit_edge, label %land.rhs.i.i.i

entry.cpumask_test_cpu.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

land.rhs.i.i.i:                                   ; preds = %entry
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, label %if.then.i.i.i, !prof !298

land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge:   ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, %entry.cpumask_test_cpu.exit_crit_edge
  %div3.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i = getelementptr i32, ptr %1, i32 %div3.i.i
  %3 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %cpu, 31
  %5 = shl nuw i32 1, %and.i.i
  %6 = and i32 %4, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool2.not = icmp eq i32 %6, 0
  br i1 %tobool2.not, label %cpumask_test_cpu.exit.if.end_crit_edge, label %if.then

cpumask_test_cpu.exit.if.end_crit_edge:           ; preds = %cpumask_test_cpu.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %cpumask_test_cpu.exit
  call void @__sanitizer_cov_trace_pc() #22
  %state = getelementptr inbounds %struct.anon.3, ptr %spec.select, i32 0, i32 2
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %state) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %cpumask_test_cpu.exit.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @blk_mq_hctx_notify_offline(i32 noundef %cpu, ptr noundef %node) #0 align 64 {
entry:
  %data.i = alloca %struct.rq_iter_data, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %node, null
  %add.ptr = getelementptr i8, ptr %node, i32 -396
  %spec.select = select i1 %tobool.not, ptr null, ptr %add.ptr
  %cpumask = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 2
  %0 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %cpu)
  %cmp.not.i.i.i = icmp ugt i32 %2, %cpu
  br i1 %cmp.not.i.i.i, label %entry.cpumask_test_cpu.exit_crit_edge, label %land.rhs.i.i.i

entry.cpumask_test_cpu.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

land.rhs.i.i.i:                                   ; preds = %entry
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, label %if.then.i.i.i, !prof !298

land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge:   ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpumask_test_cpu.exit

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.26, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, %entry.cpumask_test_cpu.exit_crit_edge
  %div3.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i = getelementptr i32, ptr %1, i32 %div3.i.i
  %3 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %cpu, 31
  %5 = shl nuw i32 1, %and.i.i
  %6 = and i32 %4, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool2.not = icmp eq i32 %6, 0
  br i1 %tobool2.not, label %cpumask_test_cpu.exit.cleanup_crit_edge, label %if.end.i.i.i

cpumask_test_cpu.exit.cleanup_crit_edge:          ; preds = %cpumask_test_cpu.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i.i.i:                                     ; preds = %cpumask_test_cpu.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %7 = load i32, ptr @nr_cpu_ids, align 4
  %8 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cpumask, align 4
  %call6.i.i.i = tail call i32 @_find_first_and_bit(ptr noundef %9, ptr noundef nonnull @__cpu_online_mask, i32 noundef %7) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i.i, i32 %cpu)
  %cmp.not.i = icmp eq i32 %call6.i.i.i, %cpu
  br i1 %cmp.not.i, label %blk_mq_last_cpu_in_hctx.exit, label %if.end.i.i.i.cleanup_crit_edge

if.end.i.i.i.cleanup_crit_edge:                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

blk_mq_last_cpu_in_hctx.exit:                     ; preds = %if.end.i.i.i
  %10 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cpumask, align 4
  %call2.i = tail call i32 @cpumask_next_and(i32 noundef %cpu, ptr noundef %11, ptr noundef nonnull @__cpu_online_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %12 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call2.i, i32 %12)
  %cmp3.i.not = icmp ult i32 %call2.i, %12
  br i1 %cmp3.i.not, label %blk_mq_last_cpu_in_hctx.exit.cleanup_crit_edge, label %if.end

blk_mq_last_cpu_in_hctx.exit.cleanup_crit_edge:   ; preds = %blk_mq_last_cpu_in_hctx.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %blk_mq_last_cpu_in_hctx.exit
  %state = getelementptr inbounds %struct.anon.3, ptr %spec.select, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 3, ptr noundef %state) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !370
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 7
  %13 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %queue, align 8
  %q_usage_counter = getelementptr inbounds %struct.request_queue, ptr %14, i32 0, i32 2
  %call7 = tail call fastcc zeroext i1 @percpu_ref_tryget(ptr noundef %q_usage_counter)
  br i1 %call7, label %while.cond.preheader, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

while.cond.preheader:                             ; preds = %if.end
  %sched_tags.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 20
  %has_rq.i = getelementptr inbounds %struct.rq_iter_data, ptr %data.i, i32 0, i32 1
  %tags2.i = getelementptr inbounds %struct.blk_mq_hw_ctx, ptr %spec.select, i32 0, i32 19
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.preheader
  %15 = ptrtoint ptr %sched_tags.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %sched_tags.i, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %cond.false.i, label %while.cond.blk_mq_hctx_has_requests.exit_crit_edge

while.cond.blk_mq_hctx_has_requests.exit_crit_edge: ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %blk_mq_hctx_has_requests.exit

cond.false.i:                                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #22
  %17 = ptrtoint ptr %tags2.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tags2.i, align 16
  br label %blk_mq_hctx_has_requests.exit

blk_mq_hctx_has_requests.exit:                    ; preds = %cond.false.i, %while.cond.blk_mq_hctx_has_requests.exit_crit_edge
  %cond.i = phi ptr [ %18, %cond.false.i ], [ %16, %while.cond.blk_mq_hctx_has_requests.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %data.i) #20
  %19 = ptrtoint ptr %data.i to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 -4278190081, ptr %data.i, align 8, !annotation !299
  store ptr %spec.select, ptr %data.i, align 8
  call void @blk_mq_all_tag_iter(ptr noundef %cond.i, ptr noundef nonnull @blk_mq_has_request, ptr noundef nonnull %data.i) #20
  %20 = ptrtoint ptr %has_rq.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %has_rq.i, align 4, !range !320
  %tobool5.i.not = icmp eq i8 %21, 0
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %data.i) #20
  br i1 %tobool5.i.not, label %while.end, label %while.body

while.body:                                       ; preds = %blk_mq_hctx_has_requests.exit
  call void @__sanitizer_cov_trace_pc() #22
  call void @msleep(i32 noundef 5) #20
  br label %while.cond

while.end:                                        ; preds = %blk_mq_hctx_has_requests.exit
  call void @__sanitizer_cov_trace_pc() #22
  %22 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %queue, align 8
  %q_usage_counter11 = getelementptr inbounds %struct.request_queue, ptr %23, i32 0, i32 2
  call fastcc void @percpu_ref_put_many(ptr noundef %q_usage_counter11, i32 noundef 1) #20
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.end.cleanup_crit_edge, %blk_mq_last_cpu_in_hctx.exit.cleanup_crit_edge, %if.end.i.i.i.cleanup_crit_edge, %cpumask_test_cpu.exit.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @llist_reverse_order(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_setup_state(i32 noundef, ptr noundef, i1 noundef zeroext, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_mq_all_tag_iter(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @blk_mq_has_request(ptr nocapture noundef readonly %rq, ptr nocapture noundef %data, i1 noundef zeroext %reserved) #19 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %mq_hctx = getelementptr inbounds %struct.request, ptr %rq, i32 0, i32 2
  %0 = ptrtoint ptr %mq_hctx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mq_hctx, align 8
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data, align 4
  %cmp.not = icmp eq ptr %1, %3
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %has_rq = getelementptr inbounds %struct.rq_iter_data, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %has_rq to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %has_rq, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %5 = xor i1 %cmp.not, true
  ret i1 %5
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #16

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #20

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #21 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 68)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #21 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 68)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { nounwind readonly }
attributes #14 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #15 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #17 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { nounwind }
attributes #21 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #22 = { nomerge }
attributes #23 = { cold nounwind }
attributes #24 = { nounwind readonly willreturn }
attributes #25 = { nounwind allocsize(0) }
attributes #26 = { nounwind allocsize(2) }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !37, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !125, !127, !128, !130, !131, !132, !133, !135, !136, !138, !140, !141, !142, !143, !145, !146, !148, !150, !152, !154, !156, !158, !160, !161, !163, !164, !166, !167, !168, !169, !171, !172, !174, !175, !176, !177, !178, !179, !181, !183, !184, !186, !187, !189, !191, !192, !194, !196, !197, !198, !200, !201, !203, !204, !206, !207, !209, !210, !212, !213, !215, !216, !218, !220, !221, !223, !224, !225, !226, !228, !229, !230, !232, !234, !236, !237, !238, !239, !241, !242, !243, !244, !246, !247, !249, !250, !252, !254, !256, !257, !259, !260, !261, !262, !264, !265, !266, !268, !269, !270, !271, !273, !275, !277, !279, !281, !283, !285}
!llvm.named.register.sp = !{!287}
!llvm.module.flags = !{!288, !289, !290, !291, !292, !293, !294, !295}
!llvm.ident = !{!296}

!0 = !{ptr @__ksymtab_blk_freeze_queue_start, !1, !"__ksymtab_blk_freeze_queue_start", i1 false, i1 false}
!1 = !{!"../block/blk-mq.c", i32 174, i32 1}
!2 = !{ptr @.str, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../block/blk-mq.c", i32 178, i32 2}
!4 = !{ptr @__ksymtab_blk_mq_freeze_queue_wait, !5, !"__ksymtab_blk_mq_freeze_queue_wait", i1 false, i1 false}
!5 = !{!"../block/blk-mq.c", i32 180, i32 1}
!6 = !{ptr @__ksymtab_blk_mq_freeze_queue_wait_timeout, !7, !"__ksymtab_blk_mq_freeze_queue_wait_timeout", i1 false, i1 false}
!7 = !{!"../block/blk-mq.c", i32 189, i32 1}
!8 = !{ptr @__ksymtab_blk_mq_freeze_queue, !9, !"__ksymtab_blk_mq_freeze_queue", i1 false, i1 false}
!9 = !{!"../block/blk-mq.c", i32 216, i32 1}
!10 = distinct !{null, !11, !"__already_done", i1 false, i1 false}
!11 = !{!"../block/blk-mq.c", i32 224, i32 2}
!12 = !{ptr @__ksymtab_blk_mq_unfreeze_queue, !13, !"__ksymtab_blk_mq_unfreeze_queue", i1 false, i1 false}
!13 = !{!"../block/blk-mq.c", i32 236, i32 1}
!14 = !{ptr @__ksymtab_blk_mq_quiesce_queue_nowait, !15, !"__ksymtab_blk_mq_quiesce_queue_nowait", i1 false, i1 false}
!15 = !{!"../block/blk-mq.c", i32 251, i32 1}
!16 = !{ptr @__ksymtab_blk_mq_wait_quiesce_done, !17, !"__ksymtab_blk_mq_wait_quiesce_done", i1 false, i1 false}
!17 = !{!"../block/blk-mq.c", i32 267, i32 1}
!18 = !{ptr @__ksymtab_blk_mq_quiesce_queue, !19, !"__ksymtab_blk_mq_quiesce_queue", i1 false, i1 false}
!19 = !{!"../block/blk-mq.c", i32 283, i32 1}
!20 = distinct !{null, !21, !"__already_done", i1 false, i1 false}
!21 = !{!"../block/blk-mq.c", i32 298, i32 6}
!22 = !{ptr @__ksymtab_blk_mq_unquiesce_queue, !23, !"__ksymtab_blk_mq_unquiesce_queue", i1 false, i1 false}
!23 = !{!"../block/blk-mq.c", i32 310, i32 1}
!24 = !{ptr @__ksymtab_blk_rq_init, !25, !"__ksymtab_blk_rq_init", i1 false, i1 false}
!25 = !{!"../block/blk-mq.c", i32 337, i32 1}
!26 = !{ptr @__ksymtab_blk_mq_alloc_request, !27, !"__ksymtab_blk_mq_alloc_request", i1 false, i1 false}
!27 = !{!"../block/blk-mq.c", i32 535, i32 1}
!28 = distinct !{null, !29, !"__already_done", i1 false, i1 false}
!29 = !{!"../block/blk-mq.c", i32 561, i32 6}
!30 = !{ptr @__ksymtab_blk_mq_alloc_request_hctx, !31, !"__ksymtab_blk_mq_alloc_request_hctx", i1 false, i1 false}
!31 = !{!"../block/blk-mq.c", i32 598, i32 1}
!32 = !{ptr @__ksymtab_blk_mq_free_request, !33, !"__ksymtab_blk_mq_free_request", i1 false, i1 false}
!33 = !{!"../block/blk-mq.c", i32 639, i32 1}
!34 = !{ptr @.str.1, !35, !"<string literal>", i1 false, i1 false}
!35 = !{!"../block/blk-mq.c", i32 651, i32 2}
!36 = !{ptr @.str.2, !35, !"<string literal>", i1 false, i1 false}
!37 = !{ptr @blk_dump_rq_flags._entry, !35, !"_entry", i1 false, i1 false}
!38 = !{ptr @blk_dump_rq_flags._entry_ptr, !35, !"_entry_ptr", i1 false, i1 false}
!39 = !{ptr @.str.3, !35, !"<string literal>", i1 false, i1 false}
!40 = !{ptr @.str.5, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../block/blk-mq.c", i32 655, i32 2}
!42 = !{ptr @blk_dump_rq_flags._entry.4, !41, !"_entry", i1 false, i1 false}
!43 = !{ptr @blk_dump_rq_flags._entry_ptr.6, !41, !"_entry_ptr", i1 false, i1 false}
!44 = !{ptr @.str.8, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../block/blk-mq.c", i32 658, i32 2}
!46 = !{ptr @blk_dump_rq_flags._entry.7, !45, !"_entry", i1 false, i1 false}
!47 = !{ptr @blk_dump_rq_flags._entry_ptr.9, !45, !"_entry_ptr", i1 false, i1 false}
!48 = !{ptr @__ksymtab_blk_dump_rq_flags, !49, !"__ksymtab_blk_dump_rq_flags", i1 false, i1 false}
!49 = !{!"../block/blk-mq.c", i32 661, i32 1}
!50 = !{ptr @.str.10, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../block/blk-mq.c", i32 851, i32 27}
!52 = !{ptr @__ksymtab_blk_update_request, !53, !"__ksymtab_blk_update_request", i1 false, i1 false}
!53 = !{!"../block/blk-mq.c", i32 861, i32 1}
!54 = !{ptr @__ksymtab___blk_mq_end_request, !55, !"__ksymtab___blk_mq_end_request", i1 false, i1 false}
!55 = !{!"../block/blk-mq.c", i32 928, i32 1}
!56 = !{ptr @__ksymtab_blk_mq_end_request, !57, !"__ksymtab_blk_mq_end_request", i1 false, i1 false}
!57 = !{!"../block/blk-mq.c", i32 936, i32 1}
!58 = !{ptr @__ksymtab_blk_mq_end_request_batch, !59, !"__ksymtab_blk_mq_end_request_batch", i1 false, i1 false}
!59 = !{!"../block/blk-mq.c", i32 995, i32 1}
!60 = !{ptr @__ksymtab_blk_mq_complete_request_remote, !61, !"__ksymtab_blk_mq_complete_request_remote", i1 false, i1 false}
!61 = !{!"../block/blk-mq.c", i32 1094, i32 1}
!62 = !{ptr @__ksymtab_blk_mq_complete_request, !63, !"__ksymtab_blk_mq_complete_request", i1 false, i1 false}
!63 = !{!"../block/blk-mq.c", i32 1108, i32 1}
!64 = distinct !{null, !65, !"__already_done", i1 false, i1 false}
!65 = !{!"../block/blk-mq.c", i32 1138, i32 2}
!66 = !{ptr @__ksymtab_blk_mq_start_request, !67, !"__ksymtab_blk_mq_start_request", i1 false, i1 false}
!67 = !{!"../block/blk-mq.c", i32 1150, i32 1}
!68 = !{ptr @__ksymtab_blk_execute_rq_nowait, !69, !"__ksymtab_blk_execute_rq_nowait", i1 false, i1 false}
!69 = !{!"../block/blk-mq.c", i32 1198, i32 1}
!70 = !{ptr @__ksymtab_blk_execute_rq, !71, !"__ksymtab_blk_execute_rq", i1 false, i1 false}
!71 = !{!"../block/blk-mq.c", i32 1251, i32 1}
!72 = !{ptr @__ksymtab_blk_mq_requeue_request, !73, !"__ksymtab_blk_mq_requeue_request", i1 false, i1 false}
!73 = !{!"../block/blk-mq.c", i32 1277, i32 1}
!74 = !{ptr @__ksymtab_blk_mq_kick_requeue_list, !75, !"__ksymtab_blk_mq_kick_requeue_list", i1 false, i1 false}
!75 = !{!"../block/blk-mq.c", i32 1345, i32 1}
!76 = !{ptr @__ksymtab_blk_mq_delay_kick_requeue_list, !77, !"__ksymtab_blk_mq_delay_kick_requeue_list", i1 false, i1 false}
!77 = !{!"../block/blk-mq.c", i32 1353, i32 1}
!78 = !{ptr @__ksymtab_blk_mq_queue_inflight, !79, !"__ksymtab_blk_mq_queue_inflight", i1 false, i1 false}
!79 = !{!"../block/blk-mq.c", i32 1380, i32 1}
!80 = !{ptr @__ksymtab_blk_mq_flush_busy_ctxs, !81, !"__ksymtab_blk_mq_flush_busy_ctxs", i1 false, i1 false}
!81 = !{!"../block/blk-mq.c", i32 1517, i32 1}
!82 = distinct !{null, !83, !"__already_done", i1 false, i1 false}
!83 = !{!"../block/blk-mq.c", i32 1829, i32 3}
!84 = !{ptr @__ksymtab_blk_mq_delay_run_hw_queue, !85, !"__ksymtab_blk_mq_delay_run_hw_queue", i1 false, i1 false}
!85 = !{!"../block/blk-mq.c", i32 2072, i32 1}
!86 = !{ptr @__ksymtab_blk_mq_run_hw_queue, !87, !"__ksymtab_blk_mq_run_hw_queue", i1 false, i1 false}
!87 = !{!"../block/blk-mq.c", i32 2102, i32 1}
!88 = !{ptr @__ksymtab_blk_mq_run_hw_queues, !89, !"__ksymtab_blk_mq_run_hw_queues", i1 false, i1 false}
!89 = !{!"../block/blk-mq.c", i32 2166, i32 1}
!90 = !{ptr @__ksymtab_blk_mq_delay_run_hw_queues, !91, !"__ksymtab_blk_mq_delay_run_hw_queues", i1 false, i1 false}
!91 = !{!"../block/blk-mq.c", i32 2194, i32 1}
!92 = !{ptr @__ksymtab_blk_mq_queue_stopped, !93, !"__ksymtab_blk_mq_queue_stopped", i1 false, i1 false}
!93 = !{!"../block/blk-mq.c", i32 2214, i32 1}
!94 = !{ptr @__ksymtab_blk_mq_stop_hw_queue, !95, !"__ksymtab_blk_mq_stop_hw_queue", i1 false, i1 false}
!95 = !{!"../block/blk-mq.c", i32 2231, i32 1}
!96 = !{ptr @__ksymtab_blk_mq_stop_hw_queues, !97, !"__ksymtab_blk_mq_stop_hw_queues", i1 false, i1 false}
!97 = !{!"../block/blk-mq.c", i32 2250, i32 1}
!98 = !{ptr @__ksymtab_blk_mq_start_hw_queue, !99, !"__ksymtab_blk_mq_start_hw_queue", i1 false, i1 false}
!99 = !{!"../block/blk-mq.c", i32 2258, i32 1}
!100 = !{ptr @__ksymtab_blk_mq_start_hw_queues, !101, !"__ksymtab_blk_mq_start_hw_queues", i1 false, i1 false}
!101 = !{!"../block/blk-mq.c", i32 2268, i32 1}
!102 = !{ptr @__ksymtab_blk_mq_start_stopped_hw_queue, !103, !"__ksymtab_blk_mq_start_stopped_hw_queue", i1 false, i1 false}
!103 = !{!"../block/blk-mq.c", i32 2278, i32 1}
!104 = !{ptr @__ksymtab_blk_mq_start_stopped_hw_queues, !105, !"__ksymtab_blk_mq_start_stopped_hw_queues", i1 false, i1 false}
!105 = !{!"../block/blk-mq.c", i32 2288, i32 1}
!106 = !{ptr @__ksymtab_blk_insert_cloned_request, !107, !"__ksymtab_blk_insert_cloned_request", i1 false, i1 false}
!107 = !{!"../block/blk-mq.c", i32 2944, i32 1}
!108 = !{ptr @__ksymtab_blk_rq_unprep_clone, !109, !"__ksymtab_blk_rq_unprep_clone", i1 false, i1 false}
!109 = !{!"../block/blk-mq.c", i32 2963, i32 1}
!110 = !{ptr @__ksymtab_blk_rq_prep_clone, !111, !"__ksymtab_blk_rq_prep_clone", i1 false, i1 false}
!111 = !{!"../block/blk-mq.c", i32 3032, i32 1}
!112 = !{ptr @__ksymtab_blk_steal_bios, !113, !"__ksymtab_blk_steal_bios", i1 false, i1 false}
!113 = !{!"../block/blk-mq.c", i32 3053, i32 1}
!114 = distinct !{null, !115, !"__already_done", i1 false, i1 false}
!115 = !{!"../block/blk-mq.c", i32 3860, i32 3}
!116 = !{ptr @__ksymtab_blk_mq_init_queue, !117, !"__ksymtab_blk_mq_init_queue", i1 false, i1 false}
!117 = !{!"../block/blk-mq.c", i32 3899, i32 1}
!118 = !{ptr @__ksymtab___blk_mq_alloc_disk, !119, !"__ksymtab___blk_mq_alloc_disk", i1 false, i1 false}
!119 = !{!"../block/blk-mq.c", i32 3918, i32 1}
!120 = distinct !{null, !121, !"__already_done", i1 false, i1 false}
!121 = !{!"../block/blk-mq.c", i32 4032, i32 2}
!122 = !{ptr @blk_mq_init_allocated_queue.__key, !123, !"__key", i1 false, i1 false}
!123 = !{!"../block/blk-mq.c", i32 4051, i32 2}
!124 = !{ptr @.str.11, !123, !"<string literal>", i1 false, i1 false}
!125 = !{ptr @blk_mq_init_allocated_queue.__key.12, !126, !"__key", i1 false, i1 false}
!126 = !{!"../block/blk-mq.c", i32 4057, i32 2}
!127 = !{ptr @.str.13, !126, !"<string literal>", i1 false, i1 false}
!128 = !{ptr @blk_mq_init_allocated_queue.__key.14, !129, !"__key", i1 false, i1 false}
!129 = !{!"../block/blk-mq.c", i32 4067, i32 2}
!130 = !{ptr @.str.15, !129, !"<string literal>", i1 false, i1 false}
!131 = !{ptr @blk_mq_init_allocated_queue.__key.16, !129, !"__key", i1 false, i1 false}
!132 = !{ptr @.str.17, !129, !"<string literal>", i1 false, i1 false}
!133 = !{ptr @blk_mq_init_allocated_queue.__key.18, !134, !"__key", i1 false, i1 false}
!134 = !{!"../block/blk-mq.c", i32 4069, i32 2}
!135 = !{ptr @.str.19, !134, !"<string literal>", i1 false, i1 false}
!136 = !{ptr @__ksymtab_blk_mq_init_allocated_queue, !137, !"__ksymtab_blk_mq_init_allocated_queue", i1 false, i1 false}
!137 = !{!"../block/blk-mq.c", i32 4094, i32 1}
!138 = !{ptr @.str.20, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../block/blk-mq.c", i32 4266, i32 3}
!140 = !{ptr @.str.21, !139, !"<string literal>", i1 false, i1 false}
!141 = !{ptr @blk_mq_alloc_tag_set._entry, !139, !"_entry", i1 false, i1 false}
!142 = !{ptr @blk_mq_alloc_tag_set._entry_ptr, !139, !"_entry_ptr", i1 false, i1 false}
!143 = !{ptr @blk_mq_alloc_tag_set.__key, !144, !"__key", i1 false, i1 false}
!144 = !{!"../block/blk-mq.c", i32 4314, i32 2}
!145 = !{ptr @.str.22, !144, !"<string literal>", i1 false, i1 false}
!146 = !{ptr @__ksymtab_blk_mq_alloc_tag_set, !147, !"__ksymtab_blk_mq_alloc_tag_set", i1 false, i1 false}
!147 = !{!"../block/blk-mq.c", i32 4328, i32 1}
!148 = !{ptr @__ksymtab_blk_mq_alloc_sq_tag_set, !149, !"__ksymtab_blk_mq_alloc_sq_tag_set", i1 false, i1 false}
!149 = !{!"../block/blk-mq.c", i32 4344, i32 1}
!150 = !{ptr @__ksymtab_blk_mq_free_tag_set, !151, !"__ksymtab_blk_mq_free_tag_set", i1 false, i1 false}
!151 = !{!"../block/blk-mq.c", i32 4366, i32 1}
!152 = !{ptr @__ksymtab_blk_mq_update_nr_hw_queues, !153, !"__ksymtab_blk_mq_update_nr_hw_queues", i1 false, i1 false}
!153 = !{!"../block/blk-mq.c", i32 4566, i32 1}
!154 = !{ptr @__ksymtab_blk_mq_rq_cpu, !155, !"__ksymtab_blk_mq_rq_cpu", i1 false, i1 false}
!155 = !{!"../block/blk-mq.c", i32 4741, i32 1}
!156 = !{ptr @__initcall__kmod_blk_mq__366_4774_blk_mq_init4, !157, !"__initcall__kmod_blk_mq__366_4774_blk_mq_init4", i1 false, i1 false}
!157 = !{!"../block/blk-mq.c", i32 4774, i32 1}
!158 = !{ptr @__pcpu_unique_blk_cpu_done, !159, !"__pcpu_unique_blk_cpu_done", i1 false, i1 false}
!159 = !{!"../block/blk-mq.c", i32 46, i32 8}
!160 = !{ptr @blk_cpu_done, !159, !"blk_cpu_done", i1 false, i1 false}
!161 = distinct !{null, !162, !"__already_done", i1 false, i1 false}
!162 = !{!"../block/blk.h", i32 495, i32 2}
!163 = !{ptr @.str.23, !162, !"<string literal>", i1 false, i1 false}
!164 = distinct !{null, !165, !"__already_done", i1 false, i1 false}
!165 = !{!"../include/trace/events/block.h", i32 115, i32 1}
!166 = !{ptr @.str.24, !165, !"<string literal>", i1 false, i1 false}
!167 = distinct !{null, !165, !"__warned", i1 false, i1 false}
!168 = !{ptr @.str.25, !165, !"<string literal>", i1 false, i1 false}
!169 = distinct !{null, !170, !"__already_done", i1 false, i1 false}
!170 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!171 = !{ptr @.str.26, !170, !"<string literal>", i1 false, i1 false}
!172 = !{ptr @.str.27, !173, !"<string literal>", i1 false, i1 false}
!173 = !{!"../block/blk-mq.c", i32 701, i32 2}
!174 = !{ptr @blk_print_req_error._rs, !173, !"_rs", i1 false, i1 false}
!175 = !{ptr @__func__.blk_print_req_error, !173, !"<string literal>", i1 false, i1 false}
!176 = !{ptr @.str.28, !173, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @blk_print_req_error._entry, !173, !"_entry", i1 false, i1 false}
!178 = !{ptr @blk_print_req_error._entry_ptr, !173, !"_entry_ptr", i1 false, i1 false}
!179 = distinct !{null, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../block/blk-mq.c", i32 694, i32 3}
!181 = distinct !{null, !182, !"__already_done", i1 false, i1 false}
!182 = !{!"../include/trace/events/block.h", i32 204, i32 1}
!183 = distinct !{null, !182, !"__warned", i1 false, i1 false}
!184 = !{ptr @init_completion.__key, !185, !"__key", i1 false, i1 false}
!185 = !{!"../include/linux/completion.h", i32 87, i32 2}
!186 = !{ptr @.str.30, !185, !"<string literal>", i1 false, i1 false}
!187 = distinct !{null, !188, !"__already_done", i1 false, i1 false}
!188 = !{!"../block/blk-mq.c", i32 1206, i32 6}
!189 = distinct !{null, !190, !"__already_done", i1 false, i1 false}
!190 = !{!"../include/trace/events/block.h", i32 73, i32 1}
!191 = distinct !{null, !190, !"__warned", i1 false, i1 false}
!192 = distinct !{null, !193, !"__already_done", i1 false, i1 false}
!193 = !{!"../block/blk-mq.c", i32 1970, i32 2}
!194 = distinct !{null, !195, !"__warned", i1 false, i1 false}
!195 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!196 = !{ptr @.str.31, !195, !"<string literal>", i1 false, i1 false}
!197 = !{ptr @.str.32, !195, !"<string literal>", i1 false, i1 false}
!198 = distinct !{null, !199, !"__warned", i1 false, i1 false}
!199 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!200 = !{ptr @.str.33, !199, !"<string literal>", i1 false, i1 false}
!201 = distinct !{null, !202, !"__already_done", i1 false, i1 false}
!202 = !{!"../include/linux/srcu.h", i32 189, i32 2}
!203 = !{ptr @.str.34, !202, !"<string literal>", i1 false, i1 false}
!204 = distinct !{null, !205, !"__already_done", i1 false, i1 false}
!205 = !{!"../include/trace/events/block.h", i32 190, i32 1}
!206 = distinct !{null, !205, !"__warned", i1 false, i1 false}
!207 = distinct !{null, !208, !"__already_done", i1 false, i1 false}
!208 = !{!"../include/trace/events/block.h", i32 401, i32 1}
!209 = distinct !{null, !208, !"__warned", i1 false, i1 false}
!210 = distinct !{null, !211, !"__already_done", i1 false, i1 false}
!211 = !{!"../include/linux/percpu-refcount.h", i32 280, i32 2}
!212 = !{ptr @.str.35, !211, !"<string literal>", i1 false, i1 false}
!213 = distinct !{null, !214, !"__already_done", i1 false, i1 false}
!214 = !{!"../include/trace/events/block.h", i32 343, i32 1}
!215 = distinct !{null, !214, !"__warned", i1 false, i1 false}
!216 = distinct !{null, !217, !"__already_done", i1 false, i1 false}
!217 = !{!"../block/blk-mq.c", i32 2404, i32 2}
!218 = distinct !{null, !219, !"__already_done", i1 false, i1 false}
!219 = !{!"../include/trace/events/block.h", i32 356, i32 1}
!220 = distinct !{null, !219, !"__warned", i1 false, i1 false}
!221 = !{ptr @.str.36, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../block/blk-mq.c", i32 2892, i32 3}
!223 = !{ptr @.str.37, !222, !"<string literal>", i1 false, i1 false}
!224 = !{ptr @blk_cloned_rq_check_limits._entry, !222, !"_entry", i1 false, i1 false}
!225 = !{ptr @blk_cloned_rq_check_limits._entry_ptr, !222, !"_entry_ptr", i1 false, i1 false}
!226 = !{ptr @.str.39, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../block/blk-mq.c", i32 2903, i32 3}
!228 = !{ptr @blk_cloned_rq_check_limits._entry.38, !227, !"_entry", i1 false, i1 false}
!229 = !{ptr @blk_cloned_rq_check_limits._entry_ptr.40, !227, !"_entry_ptr", i1 false, i1 false}
!230 = distinct !{null, !231, !"__already_done", i1 false, i1 false}
!231 = !{!"../block/blk-mq.c", i32 3081, i32 5}
!232 = distinct !{null, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!234 = !{ptr @.str.42, !235, !"<string literal>", i1 false, i1 false}
!235 = !{!"../block/blk-mq.c", i32 3998, i32 5}
!236 = !{ptr @.str.43, !235, !"<string literal>", i1 false, i1 false}
!237 = !{ptr @blk_mq_realloc_hw_ctxs._entry, !235, !"_entry", i1 false, i1 false}
!238 = !{ptr @blk_mq_realloc_hw_ctxs._entry_ptr, !235, !"_entry_ptr", i1 false, i1 false}
!239 = !{ptr @blk_mq_alloc_hctx.__key, !240, !"__key", i1 false, i1 false}
!240 = !{!"../block/blk-mq.c", i32 3518, i32 2}
!241 = !{ptr @.str.44, !240, !"<string literal>", i1 false, i1 false}
!242 = !{ptr @blk_mq_alloc_hctx.__key.45, !240, !"__key", i1 false, i1 false}
!243 = !{ptr @.str.46, !240, !"<string literal>", i1 false, i1 false}
!244 = !{ptr @blk_mq_alloc_hctx.__key.47, !245, !"__key", i1 false, i1 false}
!245 = !{!"../block/blk-mq.c", i32 3519, i32 2}
!246 = !{ptr @.str.48, !245, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @blk_mq_alloc_hctx.__key.49, !248, !"__key", i1 false, i1 false}
!248 = !{!"../block/blk-mq.c", i32 3540, i32 2}
!249 = !{ptr @.str.50, !248, !"<string literal>", i1 false, i1 false}
!250 = distinct !{null, !251, !"__already_done", i1 false, i1 false}
!251 = !{!"../block/blk-mq.c", i32 3415, i32 2}
!252 = distinct !{null, !253, !"__already_done", i1 false, i1 false}
!253 = !{!"../block/blk-mq.c", i32 1391, i32 3}
!254 = !{ptr @blk_mq_init_cpu_queues.__key, !255, !"__key", i1 false, i1 false}
!255 = !{!"../block/blk-mq.c", i32 3576, i32 3}
!256 = !{ptr @.str.51, !255, !"<string literal>", i1 false, i1 false}
!257 = !{ptr @.str.52, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../block/blk-mq.c", i32 4163, i32 3}
!259 = !{ptr @.str.53, !258, !"<string literal>", i1 false, i1 false}
!260 = !{ptr @blk_mq_alloc_set_map_and_rqs._entry, !258, !"_entry", i1 false, i1 false}
!261 = !{ptr @blk_mq_alloc_set_map_and_rqs._entry_ptr, !258, !"_entry_ptr", i1 false, i1 false}
!262 = !{ptr @.str.55, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../block/blk-mq.c", i32 4168, i32 3}
!264 = !{ptr @blk_mq_alloc_set_map_and_rqs._entry.54, !263, !"_entry", i1 false, i1 false}
!265 = !{ptr @blk_mq_alloc_set_map_and_rqs._entry_ptr.56, !263, !"_entry_ptr", i1 false, i1 false}
!266 = !{ptr @.str.57, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../block/blk-mq.c", i32 4534, i32 4}
!268 = !{ptr @.str.58, !267, !"<string literal>", i1 false, i1 false}
!269 = !{ptr @__blk_mq_update_nr_hw_queues._entry, !267, !"_entry", i1 false, i1 false}
!270 = !{ptr @__blk_mq_update_nr_hw_queues._entry_ptr, !267, !"_entry_ptr", i1 false, i1 false}
!271 = distinct !{null, !272, !"__already_done", i1 false, i1 false}
!272 = !{!"../block/blk-mq.c", i32 4677, i32 3}
!273 = distinct !{null, !274, !"__already_done", i1 false, i1 false}
!274 = !{!"../block/blk-mq.c", i32 4685, i32 2}
!275 = distinct !{null, !276, !"__already_done", i1 false, i1 false}
!276 = !{!"../block/blk-mq.c", i32 4708, i32 4}
!277 = distinct !{null, !278, !"__already_done", i1 false, i1 false}
!278 = !{!"../block/blk-mq.c", i32 4713, i32 4}
!279 = distinct !{null, !280, !"__already_done", i1 false, i1 false}
!280 = !{!"../block/blk-mq.c", i32 4722, i32 2}
!281 = !{ptr @.str.62, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../block/blk-mq.c", i32 4765, i32 7}
!283 = !{ptr @.str.63, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../block/blk-mq.c", i32 4767, i32 45}
!285 = !{ptr @.str.64, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../block/blk-mq.c", i32 4769, i32 50}
!287 = !{!"sp"}
!288 = !{i32 1, !"wchar_size", i32 2}
!289 = !{i32 1, !"min_enum_size", i32 4}
!290 = !{i32 8, !"branch-target-enforcement", i32 0}
!291 = !{i32 8, !"sign-return-address", i32 0}
!292 = !{i32 8, !"sign-return-address-all", i32 0}
!293 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!294 = !{i32 7, !"uwtable", i32 1}
!295 = !{i32 7, !"frame-pointer", i32 2}
!296 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!297 = !{i64 2148897808}
!298 = !{!"branch_weights", i32 2000, i32 1}
!299 = !{!"auto-init"}
!300 = !{!"branch_weights", i32 1, i32 2000}
!301 = !{i64 826557}
!302 = !{i64 2149475535}
!303 = !{i64 721547, i64 721608}
!304 = !{i64 724279}
!305 = !{i64 724564}
!306 = !{i64 2148329066, i64 2148329092, i64 2148329121, i64 2148329155, i64 2148329186, i64 2148329209}
!307 = !{i64 2149475801}
!308 = !{i64 2148331531, i64 2148331557, i64 2148331586, i64 2148331620, i64 2148331651, i64 2148331674}
!309 = !{i64 2148417518}
!310 = !{i64 2148332251, i64 2148332283, i64 2148332312, i64 2148332346, i64 2148332377, i64 2148332400}
!311 = !{i64 2148417747}
!312 = !{i64 2148810881, i64 2148810886, i64 2148810899, i64 2148810943, i64 2148810977, i64 2148810998}
!313 = !{i64 2155461088}
!314 = !{i64 2155461323}
!315 = !{i64 2149484094}
!316 = !{i64 2149485130}
!317 = !{i64 2155922085}
!318 = !{i64 2155937551}
!319 = !{i64 2155982588, i64 2155983067, i64 2155982625, i64 2155982681, i64 2155982715, i64 2155982739, i64 2155982780, i64 2155982801, i64 2155982829, i64 2155982863}
!320 = !{i8 0, i8 2}
!321 = !{i64 2155996905}
!322 = !{i64 2155997899}
!323 = !{i64 2155497349}
!324 = !{i64 2155497544}
!325 = !{i64 2155976105}
!326 = !{i64 2155976219}
!327 = !{i64 2156032492, i64 2156032972, i64 2156032529, i64 2156032585, i64 2156032619, i64 2156032643, i64 2156032684, i64 2156032705, i64 2156032733, i64 2156032767}
!328 = !{i64 2148430889}
!329 = !{i64 812802, i64 812826, i64 812847, i64 812864, i64 812881}
!330 = !{i64 2148431115}
!331 = !{i64 2156061345}
!332 = !{i64 2156064616}
!333 = !{i64 2156064945}
!334 = !{i64 2156064783}
!335 = !{i64 2156095311, i64 2156095791, i64 2156095348, i64 2156095404, i64 2156095438, i64 2156095462, i64 2156095503, i64 2156095524, i64 2156095552, i64 2156095586}
!336 = !{i64 2155477372}
!337 = !{i64 2155477569}
!338 = !{i64 2155650197}
!339 = !{i64 2155650420}
!340 = !{i64 2148328485}
!341 = !{i64 813308, i64 813333, i64 813355, i64 813371, i64 813383, i64 813403, i64 813427, i64 813443, i64 813455}
!342 = !{i64 2148328673}
!343 = !{i64 2155614249}
!344 = !{i64 2155614440}
!345 = !{!"branch_weights", i32 4000000, i32 4004001, i32 4004001, i32 2001, i32 2000}
!346 = !{i64 2155945373}
!347 = !{i64 2155975693}
!348 = !{i64 2156124221}
!349 = !{i64 838558, i64 838579, i64 838602, i64 838621, i64 838640}
!350 = !{i64 2156124633}
!351 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!352 = !{i64 2151266158, i64 2151266642, i64 2151266195, i64 2151266251, i64 2151266285, i64 2151266309, i64 2151266350, i64 2151266371, i64 2151266399, i64 2151266433}
!353 = !{i32 0, i32 33}
!354 = !{i64 2156143997, i64 2156144477, i64 2156144034, i64 2156144090, i64 2156144124, i64 2156144148, i64 2156144189, i64 2156144210, i64 2156144238, i64 2156144272}
!355 = distinct !{!355, !356}
!356 = !{!"llvm.loop.peeled.count", i32 1}
!357 = !{i64 2156180118, i64 2156180598, i64 2156180155, i64 2156180211, i64 2156180245, i64 2156180269, i64 2156180310, i64 2156180331, i64 2156180359, i64 2156180393}
!358 = !{i64 2156231954}
!359 = !{i64 2156252892}
!360 = !{i64 2156252734}
!361 = !{i64 2155444249}
!362 = !{i64 2155444448}
!363 = !{i64 2155633921}
!364 = !{i64 2155634106}
!365 = !{i64 2156138395}
!366 = !{i64 2156138813}
!367 = !{i64 2149318776}
!368 = !{i64 835834, i64 835851, i64 835875, i64 835901, i64 835919}
!369 = !{i64 2149319129}
!370 = !{i64 2156133177}
