; ModuleID = '/llk/IR_all_yes/crypto/wp512.c_pt.bc'
source_filename = "../crypto/wp512.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.shash_alg = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, [84 x i8], i32, i32, [120 x i8], %struct.crypto_alg }
%struct.crypto_alg = type { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, %struct.refcount_struct, [128 x i8], [128 x i8], ptr, %union.anon, ptr, ptr, ptr, ptr, %union.anon.68, [120 x i8] }
%struct.list_head = type { ptr, ptr }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%union.anon = type { %struct.cipher_alg }
%struct.cipher_alg = type { i32, i32, ptr, ptr, ptr }
%union.anon.68 = type { %struct.crypto_istat_akcipher }
%struct.crypto_istat_akcipher = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.atomic64_t = type { i64 }
%struct.shash_desc = type { ptr, [4 x i8], [0 x ptr] }
%struct.wp512_ctx = type { [32 x i8], [64 x i8], i32, i32, [8 x i64] }

@wp_algs = internal global [3 x %struct.shash_alg] [%struct.shash_alg { ptr @wp512_init, ptr @wp512_update, ptr @wp512_final, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 168, [84 x i8] undef, i32 64, i32 0, [120 x i8] undef, %struct.crypto_alg { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 0, i32 64, i32 0, i32 0, i32 0, %struct.refcount_struct zeroinitializer, [128 x i8] c"wp512\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [128 x i8] c"wp512-generic\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null, %union.anon zeroinitializer, ptr null, ptr null, ptr null, ptr null, %union.anon.68 zeroinitializer, [120 x i8] undef } }, %struct.shash_alg { ptr @wp512_init, ptr @wp512_update, ptr @wp384_final, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 168, [84 x i8] undef, i32 48, i32 0, [120 x i8] undef, %struct.crypto_alg { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 0, i32 64, i32 0, i32 0, i32 0, %struct.refcount_struct zeroinitializer, [128 x i8] c"wp384\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [128 x i8] c"wp384-generic\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null, %union.anon zeroinitializer, ptr null, ptr null, ptr null, ptr null, %union.anon.68 zeroinitializer, [120 x i8] undef } }, %struct.shash_alg { ptr @wp512_init, ptr @wp512_update, ptr @wp256_final, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 168, [84 x i8] undef, i32 32, i32 0, [120 x i8] undef, %struct.crypto_alg { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 0, i32 64, i32 0, i32 0, i32 0, %struct.refcount_struct zeroinitializer, [128 x i8] c"wp256\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [128 x i8] c"wp256-generic\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null, %union.anon zeroinitializer, ptr null, ptr null, ptr null, ptr null, %union.anon.68 zeroinitializer, [120 x i8] undef } }], align 128
@__UNIQUE_ID_alias_userspace226 = internal constant [18 x i8] c"wp512.alias=wp512\00", section ".modinfo", align 1
@__UNIQUE_ID_alias_crypto227 = internal constant [25 x i8] c"wp512.alias=crypto-wp512\00", section ".modinfo", align 1
@__UNIQUE_ID_alias_userspace228 = internal constant [18 x i8] c"wp512.alias=wp384\00", section ".modinfo", align 1
@__UNIQUE_ID_alias_crypto229 = internal constant [25 x i8] c"wp512.alias=crypto-wp384\00", section ".modinfo", align 1
@__UNIQUE_ID_alias_userspace230 = internal constant [18 x i8] c"wp512.alias=wp256\00", section ".modinfo", align 1
@__UNIQUE_ID_alias_crypto231 = internal constant [25 x i8] c"wp512.alias=crypto-wp256\00", section ".modinfo", align 1
@__initcall__kmod_wp512__232_1172_wp512_mod_init4 = internal global ptr @wp512_mod_init, section ".initcall4.init", align 4
@__exitcall_wp512_mod_fini = internal global ptr @wp512_mod_fini, section ".exitcall.exit", align 4
@__UNIQUE_ID_file233 = internal constant [24 x i8] c"wp512.file=crypto/wp512\00", section ".modinfo", align 1
@__UNIQUE_ID_license234 = internal constant [18 x i8] c"wp512.license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_description235 = internal constant [53 x i8] c"wp512.description=Whirlpool Message Digest Algorithm\00", section ".modinfo", align 1
@C0 = internal constant { [256 x i64], [512 x i8] } { [256 x i64] [i64 1736243315775910104, i64 2532021497559467558, i64 -4123538287044750920, i64 -1663930631485141509, i64 -8680927394185276469, i64 -5136114888365413103, i64 72343471490662921, i64 5714823076457127437, i64 3906547456148401307, i64 -6438279781937819137, i64 -3255416629164656372, i64 -723403927319021810, i64 8753301652875834006, i64 8029814160345718320, i64 -7957439901108060307, i64 5931897472728671480, i64 6944723661718667335, i64 -4846776187848596171, i64 -7234093149821523145, i64 -8174593464645975670, i64 -6655275011230311470, i64 868121657887955052, i64 8897971003671115396, i64 3834203984925649536, i64 2097960673226603253, i64 -2242608032518775373, i64 -2893708068075556063, i64 -4412912173006874212, i64 3327799684219952195, i64 5425484375942403625, i64 -72374259239755427, i64 6293570848374042325, i64 1519212901301299901, i64 8608561932266827496, i64 3978890927370104466, i64 -1880899471159142498, i64 -6944754449305230573, i64 -1085112488676557533, i64 5353149700813853728, i64 -2676739228136265404, i64 6365975894395564194, i64 -3906587039829946417, i64 2966082327036121724, i64 723434714905580634, i64 -5642448818175770800, i64 -6872287833246507575, i64 7740475459830994452, i64 -8825596744442374183, i64 -4774432716626892996, i64 6727649270040935055, i64 1157495543850606736, i64 -795738602716531449, i64 -3761900096849933347, i64 4485295228068461779, i64 361717357452790317, i64 7451066388424609400, i64 -1953234146556652137, i64 2821395383521594882, i64 4702067253759738483, i64 -8391588693670032473, i64 -6365936310716115978, i64 9042640353392655026, i64 -7668101200591767735, i64 -2821426171116278442, i64 -289413469802796176, i64 -1229869803079876147, i64 8970305677995145403, i64 7378731713027099761, i64 -2459717610027178117, i64 1663899844282625711, i64 5136075304531824197, i64 -7017097920795369190, i64 -3834234771978483244, i64 3255456212998249048, i64 -4629763365831875794, i64 506404300434116159, i64 -5931928260477499476, i64 6510645244653974704, i64 -8970266094699471889, i64 3689517041410074294, i64 7161727687909885532, i64 144686942981325842, i64 -6148941081418905197, i64 8174553880955773662, i64 -3978921714958496314, i64 1808586787266573009, i64 5280815025683993147, i64 -2749091495987728545, i64 -940425546232366799, i64 -2025586414677599320, i64 6582979919782524601, i64 -8608601515418841668, i64 -7306436621312186050, i64 2749051912299891723, i64 3617173570187846847, i64 -5714792289397998247, i64 -1591595956088156174, i64 1085152072358370935, i64 -3038395011056617677, i64 -9187278916447232524, i64 -4702106837053578969, i64 -3617213153867298837, i64 3761860513703946377, i64 5208480350555443250, i64 -39583842245804, i64 8825636328274130061, i64 -8029783372598723228, i64 6872318620299345565, i64 2314991083892785213, i64 7523471433638727695, i64 1880930258756187338, i64 -5859602380904185417, i64 -5425453588881181315, i64 6076566822987606222, i64 -7812770550850962561, i64 2459678026337240111, i64 7234062362232866915, i64 -1012777813279572182, i64 8319223231750006476, i64 1302182486831932546, i64 4629732578631188602, i64 578747771925303368, i64 -4340577497878324331, i64 -1374556745523018273, i64 -2604404553007715507, i64 -6799944362024280128, i64 -8246919343413983343, i64 4412951756846758600, i64 -7523431850334669989, i64 0, i64 -3472526210887285767, i64 3110769269479528046, i64 8536227256869317857, i64 -9042609566190134810, i64 -2966042743204630232, i64 1953273730246850243, i64 -5353110117659478156, i64 -5787258909682482242, i64 7668140784434009117, i64 5787228122471309546, i64 4991405954274462295, i64 -868090870835381448, i64 3472486627743391917, i64 -1157535127682366524, i64 4557638699290164954, i64 6148901498116680391, i64 -6727618482452538917, i64 -1519243689041999383, i64 7306397037630376554, i64 -4991445537570395901, i64 3400143155441655370, i64 -4557599115987935858, i64 -2387365342176239264, i64 2025617201736464636, i64 -144726526285387962, i64 5570153726198716959, i64 -7885114022341625482, i64 8463892581472594682, i64 434060828943977526, i64 -8463932165160695378, i64 -5570122938604029621, i64 -1808547204112461435, i64 1012808600868232318, i64 2242647616206880487, i64 7089393012512900181, i64 -3110729686185691846, i64 -6293610432213922431, i64 -7595775321824808622, i64 -434100412245938334, i64 -4195890554896738397, i64 2676708441077139984, i64 6438310569524114091, i64 -8897940215932512816, i64 8246888556353021125, i64 4123577870886728428, i64 5497819051069642774, i64 6799983945170271380, i64 8680966977478848671, i64 4051234399664500965, i64 -8319262814904121960, i64 -3327768897017168105, i64 -6510605661510084636, i64 -2097921090074584671, i64 7017058337115652686, i64 -5497779467381802174, i64 2387334555115012660, i64 -7161767271053515512, i64 2170304144716741870, i64 4846736604017100385, i64 -4051203611915676751, i64 -217061201682897585, i64 289373885962651684, i64 5859562797599859427, i64 -7378762500079669467, i64 7885144809550436898, i64 940465129378093669, i64 -361748145199781511, i64 -2315030667047165079, i64 9114975028790426793, i64 2604364969855436825, i64 4268264813330134782, i64 -6076597610196677734, i64 -3544860886016359952, i64 1229839015341269657, i64 -8102249993155837053, i64 5642488401328053252, i64 -5208440766865509530, i64 -1446909013645014048, i64 4340608285625055425, i64 -9114935444956569603, i64 -7740444672081906368, i64 -578716984874831076, i64 -5063771417143185640, i64 1374525958322595467, i64 3183112741776545873, i64 -3183081954036106491, i64 -1736212528714951796, i64 7957479484948208697, i64 -4268225230025812566, i64 217030414471988763, i64 6221236173244968156, i64 4919071279145388126, i64 9187309704187936416, i64 -6221266960991694968, i64 3038425798257300583, i64 -4919102066348168438, i64 -4485264440859385977, i64 6004232147857221361, i64 -2532052285156252302, i64 795778186396243539, i64 -7089423799563376895, i64 7812810134152927275, i64 3544830098965619364, i64 8391557906075085043, i64 -651051660272340715, i64 5063740629402750028, i64 -6004271731699202651, i64 -8536258043928178763, i64 1446869429811161268, i64 -2170273357121790022, i64 1591556372792487078, i64 4195921342107907319, i64 7595806109035713030, i64 651091243415966273, i64 8102219205558788311, i64 -5280784238087212689, i64 -3400103572145717986, i64 -1302222070125508650, i64 -3689547828996373022, i64 4774401928888550504, i64 -7451105971570332372, i64 -6582949132731787795, i64 2893738855813894261, i64 6655314594911860870, i64 -506435087642923669, i64 -8753270865675415102], [512 x i8] zeroinitializer }, align 32
@C1 = internal constant { [256 x i64], [512 x i8] } { [256 x i64] [i64 -2875521561064867792, i64 2748079282416103238, i64 -5132196748126652015, i64 -294730105180950579, i64 -3780904762605788909, i64 1276973743900025453, i64 648800938026861826, i64 959072250135473822, i64 -7262557046830141844, i64 -25149530398194607, i64 924032251285388729, i64 1078038113977829111, i64 -7603912383438814990, i64 3490130975384391390, i64 7895251594558369599, i64 -553289277800577116, i64 5143217003496472000, i64 3872177358564324965, i64 4006967089757474091, i64 -8462670508158841855, i64 -3268588899719375525, i64 7785611256322341912, i64 -8900383961469973770, i64 -9208394677538659990, i64 -784438375537415878, i64 -5485137334509549603, i64 2438654650148629683, i64 -7150939747930673767, i64 4840858018057655900, i64 2975554653898570390, i64 6773131127615070689, i64 -3073892282504440146, i64 -4821924375145463510, i64 -1695755061862353170, i64 -7910792801487033490, i64 -6996933885238225193, i64 1414023933690960163, i64 2589834664706512893, i64 2326753750232498068, i64 4961517976007120297, i64 -6748546746227743312, i64 -3474024619444876657, i64 8946727919793048914, i64 6488009380268614164, i64 5814624301376163711, i64 -3917954952396727715, i64 1471388113023523542, i64 -2772663560724239593, i64 4376863108514280295, i64 -8116228246324759366, i64 -8065929065279762400, i64 573352398386562037, i64 -2464653119542869877, i64 -3225071047222114692, i64 3244004690134307082, i64 8676017012631135950, i64 -7501619600829492267, i64 155136263792737102, i64 8304990764571711618, i64 -6373847918672306933, i64 -673385285055086253, i64 -5585169521077938950, i64 5302308438491855671, i64 6257989485318807469, i64 8141377604919439595, i64 -3607683880814677567, i64 -4936933732062359048, i64 8171331297039868876, i64 8925533388788895399, i64 -5830165508305433810, i64 4992036782775355022, i64 1918144500270947361, i64 -3113454023208942199, i64 6353784901169682778, i64 3368621906634832227, i64 4541606566188030734, i64 -6003951899915508921, i64 -5739175315047305292, i64 -1187961606539266789, i64 -5317849782863659162, i64 6657274150270268102, i64 1297601876053723652, i64 -7806239457195509687, i64 -2418026346192066334, i64 -4122825523110948979, i64 -3379642127644852942, i64 4272026231931826322, i64 6906790388984879791, i64 3599206164606426617, i64 -6276923128232064805, i64 -5090374411381232970, i64 -4861486150210776563, i64 4511087656337459241, i64 803372018449628748, i64 -4669614028206769564, i64 6462860056033053309, i64 -942965894196532529, i64 8579092565796074270, i64 3735126159460312759, i64 -828521342684579299, i64 2863936156684876897, i64 -1455281619640852857, i64 -8560158922881768344, i64 3623225328265754000, i64 6124895338599490787, i64 -8252148172454391820, i64 7246450656531507773, i64 -7106856815144321346, i64 4404556170235060288, i64 1110252470856570320, i64 -3883762694224842188, i64 -5211035842531218367, i64 9058063670697352821, i64 -3579143112744101464, i64 9192853401890514235, i64 3396315037072992836, i64 7161959865857337800, i64 3094520380297777919, i64 -3714497924223229210, i64 -9074170198439732700, i64 8809111365512486272, i64 5190407504214894608, i64 -7655060348871448421, i64 -2311212371500893243, i64 5610318879673192619, i64 -4566190707053617313, i64 -7958549872857283833, i64 -4017987173323781766, i64 6599910245824000307, i64 0, i64 -445910119738846077, i64 7938486786630977366, i64 -2200440777453620244, i64 -1836762544566128615, i64 2942775251089402289, i64 -4387883260804827338, i64 8409827916040461175, i64 -4706350092581263037, i64 2119623902039105492, i64 -1562660708981011040, i64 6288508360808615050, i64 4103891880197691643, i64 -5967215904258396064, i64 -4255919669830257469, i64 -2720385297272159362, i64 -4083263713684874070, i64 -2620353145062485927, i64 -1591201614494734903, i64 7666645581448604874, i64 268732542020577385, i64 5345543768007611230, i64 -8160311247832684643, i64 6980260975811133857, i64 -280317808957428680, i64 5115523838699581159, i64 2255543828168729754, i64 8544052463863652409, i64 -399283483831190294, i64 3892805628161170956, i64 -5869727352092321783, i64 5454618854153601145, i64 -8798091110143272495, i64 9083213132376061468, i64 -1792679508697390274, i64 6152588434679003076, i64 4239246760401085365, i64 -9103841264529755571, i64 5951109307797140529, i64 7132006105019529967, i64 -6645688848969435497, i64 1163377396954804554, i64 -6099745842561670990, i64 -3421464498751099371, i64 -4219183639814494236, i64 -1425044154700407438, i64 1606742924502655384, i64 -7755657718810395716, i64 -6955676594423233040, i64 -1929729904650364816, i64 -7454429306277296635, i64 1716383159656297151, i64 -1970987092389328041, i64 -6781608843823329831, i64 5647902719087737026, i64 4806383099496711547, i64 3756320415578170690, i64 620542692938798629, i64 -1288558942117403076, i64 7008519186538451590, i64 -5636317349067424621, i64 5763759627715161061, i64 2595203752107447304, i64 -2066781309921785694, i64 2709365282425325359, i64 2480759544201856218, i64 7281490689742354714, i64 8789613393935021545, i64 7629061879477208227, i64 -6233405310093517828, i64 1811613151611696200, i64 -127442278648785034, i64 -7301553707245552309, i64 -1094711023404920447, i64 -7417128127252900574, i64 -8966791074738829053, i64 310271346469399452, i64 7401586714161009011, i64 -2239437403510316853, i64 -4522672923273737096, i64 -179720404657717473, i64 4653507500464995893, i64 2087409613877742835, i64 1781659493849982831, i64 -8425369260412870874, i64 5849099151219727448, i64 419911650344614075, i64 -8293405394552005421, i64 4138366764399971292, i64 -6141568248028662891, i64 1946402814080585478, i64 -2569771681563667540, i64 6792628961749387656, i64 -6881641099109097730, i64 -8599155514579798193, i64 7433801036681019988, i64 773418291970534763, i64 -8664431848773459297, i64 -1057409878741351770, i64 8276732485122821029, i64 5983888813688629014, i64 116422126358811431, i64 3128995333217436120, i64 -6615451658915285662, i64 -903969199422457368, i64 1582723898286475761, i64 5496157383716127628, i64 -6508637649865464251, i64 -5365606716790761713, i64 -5470725313172323288, i64 -4980451618918284577, i64 -6478966446332293588, i64 -632128028598742412, i64 462016681840988370, i64 4686286937634909458, i64 -2922712061783331360, i64 8049822468817900657, i64 2220503760597071805, i64 -2959448160516473145, i64 -2104082523306927227, i64 7512639787479226244, i64 3213485849005310509, i64 -1322751337732436395, i64 8442042169843091536, i64 -8765029149990833736, i64 7780241894035111917, i64 -4429705700632648687], [512 x i8] zeroinitializer }, align 32
@C2 = internal constant { [256 x i64], [512 x i8] } { [256 x i64] [i64 3519589601760559224, i64 5054766267351893423, i64 -7946382987719442695, i64 -3604030991369759889, i64 1426382721529629857, i64 7859265928821254498, i64 146649566740023301, i64 -7057897839739846034, i64 7825908386669964782, i64 5908624470756972804, i64 -5112479675711299907, i64 -644307259958625530, i64 -966451505240871040, i64 -2436324873166954546, i64 4570469250930703599, i64 -6559402343692850681, i64 -4591595327007479811, i64 7292942690637613430, i64 3114128758825266381, i64 111057881403360396, i64 6616530726099841301, i64 1759794800880279612, i64 -683285471190843510, i64 7674192270349153761, i64 4248333835833305193, i64 -2471384515002477753, i64 -5538908746193307988, i64 -7377807950259003667, i64 6648208253122407830, i64 -7626481707653569926, i64 -2207327871708519647, i64 -5848672508800695786, i64 3079640901540489281, i64 -1231603141855174730, i64 7967491403829192171, i64 -2909635534506329258, i64 2527539322318458073, i64 -206056240454773993, i64 -7773131274259371393, i64 -6249629751705952619, i64 -5718911439723759067, i64 -8084020940917635382, i64 5943670867046782349, i64 1466495667400232994, i64 9174027818994098511, i64 6758109328032426266, i64 -3020671339776475174, i64 1718551539876191403, i64 7439029307424211315, i64 -5003678005204233676, i64 2346393067840372816, i64 -790393876611009789, i64 -8368308459647854912, i64 8994601320962780614, i64 733247833700116497, i64 -3568989010440806426, i64 -3055722151158713517, i64 5621098335988819387, i64 -9046815478604811688, i64 839793285022821533, i64 6050207487916200193, i64 -382105038631350380, i64 3983879814423895291, i64 -5956335033720992097, i64 -1481407218527270096, i64 -4481663345510964367, i64 -523688055656364143, i64 -3715075627093190685, i64 -6378260504575629682, i64 3363932835765794891, i64 -8195065576641068474, i64 2385393355205805276, i64 -8514958026253656379, i64 6510002935683708313, i64 7146860489077657977, i64 1026546967180163099, i64 5164693833621766435, i64 -5426738206418998737, i64 2012972158036438197, i64 7401159335192266239, i64 -4153335477050327054, i64 293299133480046602, i64 5301768835926997304, i64 -2099115642514722904, i64 -8230670507523436849, i64 3661735568873212029, i64 -7909647741703589264, i64 -5809685467115190630, i64 -490343759185001699, i64 -2618592616335062200, i64 -5280088639813197270, i64 989816136256730258, i64 2971982791712613576, i64 5479515318829591998, i64 7259576318033038842, i64 9032444801834871114, i64 -3462447974344746134, i64 2195239901472978995, i64 -5245614028208347482, i64 2158491409642976442, i64 7000773872291060092, i64 -8652595978378074402, i64 7532609253189926372, i64 -8056297308309390731, i64 -2065744854683505884, i64 -824868488215857265, i64 4423819684190680298, i64 -4711504771899473346, i64 4628891315967368608, i64 -3454427590106257451, i64 3803881535985864818, i64 4735445597743356204, i64 8466121563651230046, i64 -6282991709083887079, i64 4287307631838883045, i64 4913183250192666026, i64 -4007248860397959191, i64 -59969623802389742, i64 -1815949608464695390, i64 2630685002065678426, i64 -9188961445583242659, i64 1173196533920186408, i64 -7235661983280572696, i64 -4188368627525995653, i64 -6102980185100151152, i64 6899692345191653663, i64 545372666862574723, i64 8847388804269340105, i64 3700718195332074737, i64 0, i64 -8936883497108293932, i64 6227962801272079751, i64 -1377689758507558989, i64 1866322591296414896, i64 -5681054713171738967, i64 3946027503098517623, i64 8607704580810457435, i64 4881532214529954089, i64 -3162254356801488929, i64 -6851575576997610995, i64 -8478231610691087796, i64 -344257142532617448, i64 6966277184553000432, i64 -4340080328485950604, i64 9140687937749378499, i64 -6140845742105456100, i64 6474947708940613904, i64 -3897325709354728603, i64 -3861162243745574932, i64 7567097110474701160, i64 6794294869909005715, i64 -7093520431528784153, i64 -6818204789166391679, i64 4106187868720652396, i64 -1781457335953278162, i64 -7341063873789865372, i64 4140658065098859744, i64 -1514769175905202244, i64 879897400440139806, i64 697647317910168728, i64 8740275983488317760, i64 -3349016869143682215, i64 2053093934360326198, i64 4532625770058610787, i64 -4299422093702711305, i64 -5387759995186778461, i64 5584930455018809650, i64 3554068628592051444, i64 -1197119699797042374, i64 -7519949502010792202, i64 5336806401763521969, i64 -5572261873117957600, i64 1571901973136168110, i64 -1962036225117079641, i64 8281056735632414173, i64 -7487713440395666847, i64 -4858154338505274821, i64 -1108034522265884795, i64 8134970118845816280, i64 403226699749921926, i64 -4677038990747908430, i64 6333369107008012555, i64 -2764679232987446451, i64 -4445508710355095560, i64 8881859000647545157, i64 4770474333126596005, i64 2668554974297625814, i64 4390479802945957990, i64 -8763649444554792366, i64 -7804237020741011716, i64 -1923040352978291925, i64 586598266960093204, i64 -6709429610019180024, i64 3397290377917086919, i64 -2728498106471723068, i64 1901940767992932409, i64 -1622990235552283851, i64 -6671555222560590204, i64 -240522021606336613, i64 5195223384604294580, i64 8574355869112452567, i64 5447855452713595197, i64 -9083533063714095407, i64 2493042634580396117, i64 253203848516013193, i64 -7204547406345647509, i64 8315535762463904081, i64 -3755742692329714848, i64 8701302187482742220, i64 2305140976382999743, i64 3837230247683871998, i64 -928594778688853236, i64 8005352545607852391, i64 2777334568805701727, i64 6363916318897110428, i64 -4970333708732868936, i64 -3202930252491297956, i64 -2577907890191968309, i64 -7662095468989223181, i64 439948700220069903, i64 -5990818475779126765, i64 -8620377577669518775, i64 -98939004581322850, i64 5731017071805407543, i64 6081876184485481858, i64 7713183727261299053, i64 -6951374464550353182, i64 -6417256376714419710, i64 -6524910071181431157, i64 1608641634512885799, i64 2810700941410278611, i64 -2870081123496736831, i64 7107860201712227829, i64 -1660855792557586503, i64 -1074681395341237495, i64 -8337211543619499453, i64 5018607216835168550, i64 1131962103369383063, i64 2932991334800465988, i64 -2325297898350093502, i64 3217283269025771598, i64 8428269252325854674, i64 -3312844573081243696, i64 1315342501032839213, i64 -2245202259167107155, i64 8173952745304676692, i64 -4819184957726339401, i64 -4046785610500981890, i64 -8799245544983875877, i64 -8905795411533223337, i64 3255144410804434114, i64 6191786089848785166, i64 5797584250260184456, i64 -5150327571810035151, i64 -1338702716822056129, i64 1279733154789606564], [512 x i8] zeroinitializer }, align 32
@C3 = internal constant { [256 x i64], [512 x i8] } { [256 x i64] [i64 8660659681433229504, i64 -5816919936340319483, i64 -463386122773346690, i64 8056372286187890707, i64 -6839899626097178804, i64 7092344473251395753, i64 360860820059717896, i64 7970823024773517122, i64 -1266466738047273299, i64 311310940490606169, i64 -4775771830236491042, i64 501886333031282171, i64 -9155089644009195025, i64 -3540339001894277281, i64 -1207125703133326852, i64 550838086898373290, i64 -162051107321978841, i64 8531284153860799625, i64 -3662772730470163540, i64 -8358247088550408700, i64 1539055297945314161, i64 4330329840716614752, i64 -8433407586309407745, i64 -2203808101619714635, i64 7582642428028657128, i64 5178492924969082963, i64 -6002416667437836298, i64 -1325856254988402082, i64 -7612135404531601811, i64 8833293122494614370, i64 2441335822790688419, i64 1634478285884839810, i64 4695773459736958376, i64 -5265015314541611105, i64 -1482086461500278875, i64 6257644917493065083, i64 -2800372967001383028, i64 1728577349720994003, i64 9193008242814700138, i64 -7662517584237962594, i64 2715849075629840634, i64 -3850630690810640122, i64 -8263405850037311147, i64 2455686695990331984, i64 5728385975164252641, i64 1899896309548753001, i64 -2677930476824335489, i64 -6118182401271233188, i64 8315682022593838465, i64 3799506866802351570, i64 5773773120955486336, i64 285142900071199987, i64 -4572317129309959402, i64 -4144205292789809427, i64 1227843347995165992, i64 -1815381214270232801, i64 6040901484532982899, i64 -4950016573242071259, i64 6377786746412286258, i64 -7130421367235245268, i64 95691217037600593, i64 -7711655159865442865, i64 -344725939664546340, i64 -6940795961366554482, i64 3525035360911096715, i64 8197059222880382499, i64 -7928381000639480633, i64 -2032124647230314985, i64 -8167423206381855322, i64 5417459915484305336, i64 5084077201784129282, i64 -2584755442571633020, i64 -4212602008989873634, i64 -7396502486939062923, i64 8746886302374739857, i64 1949564988114601784, i64 2542190376615062785, i64 3437566317701716714, i64 -5396456380352265364, i64 -43146815384833147, i64 -952972689200291009, i64 721721640119435792, i64 4055935300639304249, i64 -6277210351778303569, i64 -3490915570490554354, i64 9021502909306902984, i64 8111611064794827122, i64 -7300511081686640250, i64 2159812415828521667, i64 5249975487361180491, i64 3077851197381630946, i64 -7922468874889820108, i64 -4023615958343837020, i64 -4734396849789065683, i64 -403987844235251059, i64 5367544946313834729, i64 7696637374658504987, i64 3683512451799453560, i64 -6433616549173275162, i64 -5035599975586037644, i64 8962488433641701017, i64 -2411699806292161242, i64 -1988188378166709059, i64 8471326185114912890, i64 2658061663564726187, i64 -8073672674780022025, i64 -1567986523193044748, i64 4521224108874227650, i64 -6899447420938084323, i64 -3039912807366825881, i64 8229424632573729488, i64 3189031972035014169, i64 6806484626923238601, i64 1848954508622517402, i64 -1928807743587183636, i64 -6177760965190737395, i64 -1600920384695344121, i64 1368860030377652699, i64 -6708449798685363265, i64 6495459576702833296, i64 6737519458918416442, i64 2886886560477743168, i64 -1685588967494532266, i64 8918780845751790643, i64 -8022232704558048362, i64 2260737338399170913, i64 -9005068892761060068, i64 -3928607559569359371, i64 -1066407980118403124, i64 0, i64 -3133386244791480522, i64 -8694640898896811195, i64 -5481758747501693289, i64 -5757317200411983260, i64 -6219144707235129602, i64 8590267860447402968, i64 6590864903470233025, i64 2973429840768053009, i64 -2318195565294949769, i64 982042349433344186, i64 5515316648691189010, i64 1800095096485180363, i64 -1125709484354686819, i64 8413785063654420267, i64 -4359807424056770587, i64 2065682548419810706, i64 1178214269094896249, i64 7334650663316482563, i64 -1384176951735261937, i64 7523548753032297145, i64 -7827737535798562971, i64 -1757091321095929778, i64 -9105890461236601154, i64 7798259952458407136, i64 3379748102064045499, i64 7249140967073729874, i64 -2289668563646901532, i64 -4833775867634551409, i64 2165164920358307376, i64 -7491264595108918748, i64 4645827721487889145, i64 6472101366268421731, i64 3899129976229203568, i64 7151407379169157112, i64 -593255369856949705, i64 -6650344588970568466, i64 3624695836486314025, i64 -850808047874697532, i64 4246721799410416027, i64 -677893149083581082, i64 -5671703028989418187, i64 2356133955309754866, i64 -5902582469027527596, i64 -6348732479342021961, i64 -2489667913453913643, i64 7032395335090392154, i64 4304478476890889930, i64 -8795354732479809305, i64 -2850526534490375971, i64 -8789451368331310060, i64 -5566704424478060090, i64 817373257491457345, i64 5609692806704521795, i64 -521768426665320145, i64 5006668750338307057, i64 -6538606392087666411, i64 -3015994906724623212, i64 7367024903598907120, i64 5946547299505226530, i64 -246658082976053386, i64 3163022261290007731, i64 1443443280238871584, i64 622309636927214002, i64 -4094012194623153732, i64 -4262056243966153393, i64 4114712316286864744, i64 3884770272440482435, i64 -8889144829253263434, i64 -7206698942939693353, i64 -5456083305536412611, i64 -2920867777941324859, i64 4416793921675766577, i64 -3350131876774818242, i64 6134633941015204232, i64 -8573864612980158708, i64 7754077392790179402, i64 5869147678644287441, i64 6974915751787096843, i64 -3713005428302398211, i64 -4674739155526319748, i64 -129126007420840748, i64 933121399138809835, i64 7453203094287858081, i64 6856320396762551192, i64 -7180900355672101763, i64 -5135504542742621226, i64 6688844799228503915, i64 -3757064842668315049, i64 -894621188880874386, i64 1082582460179153688, i64 1417750246087546506, i64 5298588608893895706, i64 -6989973102165655585, i64 3985554457522776353, i64 -9055499519933273523, i64 7884407374068759473, i64 -2116824033602059962, i64 191105374392243106, i64 -8384168838365193042, i64 2816529923864005464, i64 -3231612431154373220, i64 -4478782084740191161, i64 -764868455504268907, i64 -5050519300594633593, i64 716377966178727651, i64 4867349161986835978, i64 2757792507882023945, i64 -7561625647016146628, i64 4911373391980663968, i64 4818775605625741659, i64 5633059847728010928, i64 -3281726398977787187, i64 -3399647718896211601, i64 3247729788351416648, i64 -5917493032434962265, i64 6084767402097293017, i64 -5206971711971929906, i64 9135506686525828411, i64 -2628445438275498962, i64 6306280012011356714, i64 -4454855422496827212, i64 1032992980944462921, i64 -8624264471073773475, i64 3582761234819013850, i64 4606456710939801747, i64 -6624299693853473212], [512 x i8] zeroinitializer }, align 32
@C4 = internal constant { [256 x i64], [512 x i8] } { [256 x i64] [i64 -4577855316546789352, i64 409623220726238243, i64 9149504340774764486, i64 1400564490963552232, i64 5521716383006008967, i64 -6241306210701092168, i64 577870364881781761, i64 4786937233943765327, i64 -5913669846805587914, i64 6414341927736877734, i64 -2396555961963483182, i64 -358327476701236235, i64 -1188683573528757895, i64 6903699578414932335, i64 -220888116891648367, i64 -6194801375984855726, i64 2881670749379140960, i64 -8541528361787405636, i64 -5995088011126417765, i64 327638567499989646, i64 8148520061043455651, i64 6934444378581381132, i64 -32942998384021125, i64 -5340870584203619275, i64 -1699762559925783523, i64 6001008793136179168, i64 -671965286448530473, i64 6840292307607105474, i64 7896600440248121390, i64 7096149266976682315, i64 -6691819777469521922, i64 -9072872167974682281, i64 -6322725410260560875, i64 -6938095493713510025, i64 -6490972863653749705, i64 8887527992124093413, i64 -8297562271264061793, i64 -3235839476434409488, i64 7674015156468856138, i64 -7019518330992439334, i64 -421736778775888552, i64 489361632129516489, i64 6164674158160094249, i64 5774200049190447114, i64 -2211408907460280655, i64 7573468843941608096, i64 9212911370929680747, i64 6677457095522332293, i64 -9118831309916090691, i64 -3299807502046238371, i64 -9200818235601043440, i64 -935634883039660044, i64 1639464049085975499, i64 -1313224994607663042, i64 2887100024595223557, i64 2298751676345450855, i64 8310220585785669604, i64 2718852571202034727, i64 3627792931374569793, i64 3214738523240994443, i64 5837038910888715943, i64 -3488888166788765315, i64 -2523362377029292395, i64 -8169620610509944872, i64 -8416968833059009541, i64 2554035553916854254, i64 -4066195504407712388, i64 1721444270007027046, i64 -6445029866275515427, i64 -5166984817935950825, i64 163974864645325127, i64 -8873180767612681570, i64 2217329938578149322, i64 8473903508635890733, i64 -7964225413591349569, i64 4042840754358787079, i64 81988025196580525, i64 -1571839075405892262, i64 7833197842398393987, i64 -8791195014874805197, i64 4607963468860199267, i64 1155740729763563522, i64 4123126357430014634, i64 -5789127875970868879, i64 1067227521621690312, i64 -3999985020384484327, i64 8246251701045639497, i64 -8747486500002118695, i64 -4387076469064273934, i64 5424827269592099811, i64 -2149704964898066085, i64 3788105339967642248, i64 -6572958307288722790, i64 3296155588050196518, i64 -8216143797840328654, i64 -1636357690425804112, i64 1975620028768814057, i64 8661300005066193935, i64 -1826571165593406507, i64 8411068190032935552, i64 -7386922465462664514, i64 2800825465110860749, i64 -4763567567355457484, i64 8824117590537813320, i64 -6114512439850574849, i64 -607998536189282950, i64 -798758481773430128, i64 -4449909798676242081, i64 2134776854649798688, i64 7482115120540728680, i64 -3426618323849549798, i64 1813897007088960174, i64 -3936579841512117580, i64 -7342652113319342764, i64 -1376628691969018221, i64 984674437760714786, i64 570207157050707300, i64 -2660783869909670927, i64 -4637890900453502605, i64 -8045077643276433390, i64 4205658889586220352, i64 4622962919054254088, i64 6262426349395454915, i64 3709776283613042668, i64 -7597384220484613157, i64 6998417626907131553, i64 2054494176737562253, i64 -735922063658847171, i64 -3679102952106662249, i64 0, i64 3950927882067319759, i64 5010068141643639851, i64 -7515402900051933834, i64 7255327477516612226, i64 -96351128050565162, i64 -2848748027687244773, i64 -4513882858360279371, i64 1236594058960275119, i64 8637855833124418922, i64 -5040195479727481520, i64 1318580898341652805, i64 -3812020862539535373, i64 -7066041518390198224, i64 3131342891535801327, i64 -1890527942736348097, i64 -7918266271717308075, i64 8723571278077932194, i64 244823761267363818, i64 1147514563389131109, i64 -5086700314376351046, i64 7319297492119436335, i64 5685686291023275968, i64 -4719313497079521314, i64 -2275381056274403300, i64 -4958771847593339907, i64 5937039668012722509, i64 -1954499056850799982, i64 -8089332469230876299, i64 3467222189290690566, i64 2636868227078689418, i64 -486255393728433486, i64 7158983455716851686, i64 8085681508717574158, i64 -548525567228543969, i64 4032907862335460706, i64 -1250957007195441196, i64 2968520323666320040, i64 -4254721517174758762, i64 -7261228240801774599, i64 7419284165792969669, i64 3868954988091118629, i64 -999602668268062375, i64 6101838530454235780, i64 -5212946506978241166, i64 -3036144214879902663, i64 6512653757691211084, i64 -3874295708997753506, i64 -1763739111334019720, i64 -2461093066564902856, i64 1478875680388942476, i64 -4129027799320009775, i64 4686936476752391845, i64 4849771663067361250, i64 3456726355903879521, i64 -1061306610762910029, i64 1559725637615322145, i64 -7721943792162682212, i64 -1124144063577163746, i64 2473186897678242115, i64 8573890182376799175, i64 -5536079185212286980, i64 2311481459527127044, i64 -5618061437939132079, i64 -4843851035676418407, i64 5747958865831242093, i64 7510062874930000909, i64 -8992024370864271366, i64 -5294927586758009889, i64 -2910454929262975618, i64 4446258004939280420, i64 -4190750093957403589, i64 3548075209115014827, i64 4526541971745808334, i64 -8622947870719261679, i64 903257063848609423, i64 5362551323622253902, i64 -3363780561662908745, i64 819879299072625643, i64 -158619115530162116, i64 8988938554914717313, i64 -3098980942097388908, i64 -1509564469331100681, i64 -6816357359016091975, i64 -7467207278394651629, i64 9051206456764575788, i64 -2974421920175133741, i64 7736290862055275495, i64 6326392240795985262, i64 7994898324190934980, i64 1733611094645345283, i64 -8497258009576716970, i64 1894195056739618116, i64 -2333147591644028545, i64 2393469175351320233, i64 5585119289958639658, i64 -5661751462691350853, i64 5107820332811625409, i64 -6772667334196506285, i64 -5869415776597026852, i64 6352070345352752139, i64 -7146325295814062435, i64 5170651528212295020, i64 -7641092735424674767, i64 -8666639875569300108, i64 -2086871875669524490, i64 739589023043290438, i64 659290973325265580, i64 4365975636129947273, i64 -6898343975328657388, i64 6576064399660917729, i64 -5742603383004047338, i64 -3615698945642403782, i64 8057170658345990505, i64 5200833215216559113, i64 -6364183482495607440, i64 -2786477544814746954, i64 -3551161841108359216, i64 4287083621231989741, i64 3376439554789349324, i64 3051052855889892674, i64 -5421721331838723432, i64 5264239493600553636, i64 6739725306475094056, i64 -2724193412367749796, i64 -7836283778607036424, i64 4946097817937912454], [512 x i8] zeroinitializer }, align 32
@C5 = internal constant { [256 x i64], [512 x i8] } { [256 x i64] [i64 1783557603617937504, i64 2523615882033439628, i64 -4143600202868668865, i64 -1723911301867444089, i64 -8697399673968163034, i64 -5140469279078434598, i64 74314900150747396, i64 5711248902566399777, i64 3940067399246952152, i64 -6460127440258292062, i64 -3251953278433176977, i64 -721975657085143565, i64 8786383177418111481, i64 8025360514688184225, i64 -7927198188378680962, i64 5956581862273077845, i64 6928785554005844125, i64 -4861224145704403766, i64 -7229177716336256170, i64 -8213285882169487870, i64 -6669526089038847050, i64 891778801808968752, i64 8935012977115626481, i64 3870247302328563156, i64 2155088123638127988, i64 -2282401568615505753, i64 -2884928625917307013, i64 -4440850938524941777, i64 3345495421214404280, i64 5432038885918722865, i64 -98197515043668257, i64 6305627368431507265, i64 1560568922700584276, i64 8619809349029033921, i64 4009869903375316956, i64 -1910838132804819533, i64 -6949941380263207098, i64 -1093503908523740953, i64 5362238580511623733, i64 -2693550972883772849, i64 6411478460083492989, i64 -3961256103210530557, i64 2978442113985358244, i64 743131409321429544, i64 -5629130651003145730, i64 -6887945164969434950, i64 7746150497100983217, i64 -8837000249885752018, i64 -4791421641307603506, i64 6760523966510357865, i64 1189038402411958336, i64 -796288358179080969, i64 -3812648327568438517, i64 4534498639254273784, i64 371565704660714772, i64 7430911684642301825, i64 -1985150833898756937, i64 2820866685335447452, i64 4697914678603497753, i64 -8418180930081158378, i64 -6390324936129927258, i64 9065628379377401321, i64 -7647961852305631890, i64 -2842158747988993977, i64 -321109160655848501, i64 -1287059991300215137, i64 8991315678551899373, i64 7356598983548364421, i64 -2475134095204688557, i64 1709198722465208156, i64 5116729703507904257, i64 -7024247484052496830, i64 -3882448632975537649, i64 3275692917287366068, i64 -4642796273949229114, i64 520195504962209564, i64 -5980460039424594546, i64 6551101061063137909, i64 -8976600825669123274, i64 3712654284445397964, i64 7151701667055100817, i64 148629800301494792, i64 -6180847124928091502, i64 8191951939558273497, i64 -4031056408617629689, i64 1857872503500249444, i64 5292416285475948857, i64 -2772358442581894845, i64 -953885739950345489, i64 -2068479495578066005, i64 6620901366470237041, i64 -8632113998067103718, i64 -7303492616218568110, i64 2751064181207082648, i64 3642842984224010952, i64 -5698941951224532742, i64 -1649607397134964349, i64 1114697113713708860, i64 -3033553993208572557, i64 -9190516301737459654, i64 -4712598778346029374, i64 -3663996571461235437, i64 3800444798200198352, i64 5222615980068849725, i64 -23884814218166309, i64 8860709072383146741, i64 -8001513088529428358, i64 6900146567490002785, i64 2314181981302169728, i64 7523216792134117565, i64 1932169811196516968, i64 -5901637175926149502, i64 -5419696817850501910, i64 6096213258406220877, i64 -7787597611924221066, i64 2453804581812052616, i64 7207986775500022925, i64 -1019200003522825757, i64 8340564147069744081, i64 1337668202176582216, i64 4628114373464834077, i64 594519201205979168, i64 -4371050633386278101, i64 -1426660567150695273, i64 -2623750667476673717, i64 -6818133864748047938, i64 -8278597946483831538, i64 4464696134790364660, i64 -7508361275851171994, i64 0, i64 -3515388795819143397, i64 3118047122309196716, i64 8545496647935096517, i64 -9050915725819870670, i64 -2954737727148992897, i64 2006484711078828908, i64 -5349894313722137106, i64 -5831834671529349242, i64 7671846592368503477, i64 5816976853479477341, i64 4977124695251174665, i64 -879581834949430293, i64 3503220383177257152, i64 -1212747290474713189, i64 4604301143651074044, i64 6166022359637906761, i64 -6739337389260234062, i64 -1584310726016963953, i64 7282299476593960329, i64 -4991843911720060206, i64 3415297925611204540, i64 -4589476306353078233, i64 -2396335421599588769, i64 2080782019848838256, i64 -163485390605517357, i64 5571626302123625769, i64 -7861912512074968462, i64 8471197141517563337, i64 445889400904484376, i64 -8492495829963470318, i64 -5550334176052202766, i64 -1845532665862232385, i64 1040391009924419128, i64 2303700331216707452, i64 7077397762054185621, i64 -3103363094440258441, i64 -6329472492823336806, i64 -7582667379908897182, i64 -460709737043199549, i64 -4222416469465119437, i64 2681244084825564564, i64 6481278765490592121, i64 -8911306353943477206, i64 8266260242068828885, i64 4167480515860445668, i64 5501817200623504429, i64 6830337465989881445, i64 8712079272685631741, i64 4097669215370623200, i64 -8352904050273121270, i64 -3330778340585778845, i64 -6538932711839128146, i64 -2142783400578981201, i64 7003089459006759321, i64 -5480522875830815754, i64 2383993281523556740, i64 -7163865652693001142, i64 2229394227427417720, i64 4837519686860227345, i64 -4073791101636982981, i64 -237798091431019305, i64 297259600602989584, i64 5886777158618141017, i64 -7368795884976760482, i64 7876730714453798313, i64 966084905598258484, i64 -395413065388328241, i64 -2326526320099467429, i64 9139945478249414373, i64 2611441580697199760, i64 4307085524721155052, i64 -6111035824438269034, i64 -3585197897319264737, i64 1263353302562705732, i64 -8138979778380198138, i64 5641439801066278437, i64 -5201286538549807130, i64 -1510006821284484213, i64 4394893630393564400, i64 -9116201401586712258, i64 -7722267956363357078, i64 -582357488511748101, i64 -5070657978588612130, i64 1411983102327329612, i64 3205890412890565808, i64 -3182152973294513301, i64 -1771219964768294981, i64 7951047813862682277, i64 -4292225570696805321, i64 222944700452242188, i64 6235818267199821381, i64 4907315594019488781, i64 9214258179074916321, i64 -6259661192333514338, i64 3048235821819374248, i64 -4922032611230237738, i64 -4519676001214414557, i64 6026382167411741521, i64 -2544943196704809897, i64 817446309203741484, i64 -7089559548903711410, i64 7802418013628296365, i64 3573031683398644164, i64 8396884440423625933, i64 -656670189605685505, i64 5046920602276218373, i64 -6050262543821394806, i64 -8557799098184791778, i64 1486262818642859088, i64 -2208097663614590557, i64 1634892618407482968, i64 4237274224231332584, i64 7597520696866597305, i64 668834101088291108, i64 8117648034557358301, i64 -5271089042678171934, i64 -3400578645724442521, i64 -1352347866325193325, i64 -3733805672961356777, i64 4767719381721563669, i64 -7443110784859072422, i64 -6608735215967492950, i64 2908630813495535776, i64 6690714865010236525, i64 -535013641775679289, i64 -8771705778025888222], [512 x i8] zeroinitializer }, align 32
@C6 = internal constant { [256 x i64], [512 x i8] } { [256 x i64] [i64 6924496049530214424, i64 -8348823033860447453, i64 4595500080134932166, i64 -8653645313074272024, i64 2776271950002751367, i64 -2686210937524733768, i64 288520668730425601, i64 2400210169277271887, i64 -2866912873238809034, i64 -6726591118340807002, i64 8057747589754049234, i64 -867511345865624075, i64 -470081348978706055, i64 -6814122369092653201, i64 9120348824893493649, i64 6148163391123378770, i64 -7106636241184530336, i64 -3838041640829338436, i64 6240771705845291931, i64 184089634136559246, i64 -5286257201054047325, i64 3462248024765107212, i64 -1045961516127061125, i64 -3155415984144108235, i64 8367099221382602013, i64 -6349983906465062688, i64 8923872408258074583, i64 3441417439841927874, i64 -5175078429241692626, i64 3552041009756588875, i64 -2306226593256833282, i64 4708374969373251415, i64 6058933871540245781, i64 -4505957294119815305, i64 -2578409831055345865, i64 -5483841358338791963, i64 5088940968176230303, i64 -1733653756552941328, i64 3839998728465304138, i64 5754085839546407642, i64 9032244092475693144, i64 272756719498545609, i64 -6617664111981614807, i64 2885206618584779274, i64 -94046385643408975, i64 -4998880024417689440, i64 -5662291528617006229, i64 3352187387556496773, i64 -3549538598644826691, i64 7592455670726614365, i64 4616330699686809616, i64 -579571253702560524, i64 849797970925571019, i64 -558747866993836482, i64 1442603309292389637, i64 -9122287444048713881, i64 -5195901266175728412, i64 -7194740393303202009, i64 1819791080161493313, i64 1624441143614213003, i64 -6438088076157343833, i64 -1621912052015399555, i64 7968518087224432021, i64 5177044588121479384, i64 -3748249222631064581, i64 -6922556605732098322, i64 -1333971959851287428, i64 -8834347351885650330, i64 6043169406626553309, i64 6635975208998999831, i64 92044819442255687, i64 4800420333806591646, i64 1137755689634286282, i64 -5463581471424369363, i64 -4125418783107006529, i64 2019644646753240839, i64 -8165869298314859091, i64 8456328740957346394, i64 3928102825110766467, i64 -3732492334173637837, i64 -7970456603573066909, i64 577041337460851202, i64 -7878421684215895382, i64 -2778246355215289999, i64 560714438207260872, i64 7213016718259591449, i64 4127956361277032777, i64 4889086869412764121, i64 -1156647620778528014, i64 -6060917897215548445, i64 8168371022248631131, i64 1911835843719104648, i64 5952251037115914906, i64 -7483243435486665178, i64 -4020995410716839374, i64 -382549462186610512, i64 -8941585439598122519, i64 4327809927876120335, i64 8346831088113669589, i64 4215497593934086272, i64 -4413921825291518274, i64 1426839394151288269, i64 -3443919026327571404, i64 4415914079985748040, i64 -2594166685420945409, i64 -758021389603210630, i64 8831828156163068048, i64 7016540319208267615, i64 -9214332263490314208, i64 -4798471234946897816, i64 7501537318269491738, i64 -9030252524959453522, i64 -1534380165491215180, i64 5572248073961100372, i64 8544433387341845395, i64 -8637326110403648990, i64 -8258467116019915676, i64 -2021593883075743247, i64 -3354126591083121805, i64 5193372037145563666, i64 2107748798871257152, i64 2308165349843404808, i64 3153459721132164035, i64 -7499562672784937748, i64 5466128120837692379, i64 -4710376947874487903, i64 1048525637340466573, i64 -847250909178610371, i64 7392602649672783767, i64 0, i64 2003880645578313679, i64 -6040658027614426325, i64 -4218017201956751754, i64 3639582156380340866, i64 9211830092608100054, i64 7790057986998868763, i64 -1245877123307752011, i64 -8741749482774941777, i64 -5374351402093155734, i64 6724078811361202256, i64 667960239682176325, i64 -1444587747301329933, i64 -4598001563805601744, i64 -7210496697896210449, i64 -270244824809324737, i64 5284290389611074901, i64 -5574760277597248862, i64 -8076639246021432598, i64 -8546407208182979227, i64 -3262091121986913606, i64 -4886575387057180881, i64 2864376119695425728, i64 6908168342400458462, i64 8078578587012963356, i64 -3171172752475881987, i64 2976125520797715789, i64 8255912718611419794, i64 -3930077058251983499, i64 1731124012382553606, i64 1335920474884835978, i64 -958429715368267086, i64 -4618895130403412250, i64 4039289293506481678, i64 8944140490121879327, i64 -7682516477050264990, i64 8634788772463695060, i64 -7302541499755812696, i64 7104082015302096534, i64 -4325255289686001159, i64 3730501075638404549, i64 -7771746546389867227, i64 8744286373766977881, i64 3063666753185809540, i64 -3066186464560319886, i64 -2001333412296902343, i64 3264083205146692684, i64 7304498003557244510, i64 -182141222454855560, i64 -2289836488841152456, i64 760005002970827916, i64 7192748550899880401, i64 -5862207822977784411, i64 -5772977770692746526, i64 -7394576367707332255, i64 -669926638825065549, i64 -8925829186947112671, i64 5376335702638763164, i64 8655619855752240670, i64 1243875659921572675, i64 4307542395784906695, i64 -2883232660311769860, i64 1154082674921702404, i64 6436121092651438417, i64 6816687074677463449, i64 -6238242201946395283, i64 3750768659134745869, i64 -3460309096107214086, i64 6620210658051481567, i64 -1909852126999642498, i64 -8060249588573330396, i64 -1424327327927616709, i64 -7589918607671645269, i64 2291838329927290574, i64 4904851368417235217, i64 472610268506197903, i64 2688167853626248782, i64 -1821757376489408585, i64 -8364579372545283093, i64 -1135753951363122116, i64 4504018262664511873, i64 7679997452853744788, i64 -290505210091210761, i64 -2397707860980483655, i64 5481892705875989267, i64 -5752084513608881108, i64 7769789871044285395, i64 -4906835222566475801, i64 -6526182276928541074, i64 4018458759988430020, i64 865562006191276803, i64 4996332653723276886, i64 955917924032201796, i64 -2197792219163754625, i64 -7014038423211562583, i64 -6329161104158676438, i64 -2973588045442663493, i64 2576418400985661889, i64 5860205672413614931, i64 6331127090975530204, i64 3173727287314156299, i64 5664856337008401821, i64 -5950302109782283156, i64 -4309498487262400207, i64 -3642136966088919948, i64 -2565117928147210, i64 380002503792281158, i64 -8454372340499370836, i64 2200356512448481673, i64 5770413237169558548, i64 -6637924032987864607, i64 6347454574628312598, i64 -1712830404471866822, i64 -5086411361470748311, i64 2596686018572781833, i64 -2490306228692488080, i64 -2110260418672871754, i64 7480706269609644240, i64 -7787502764949049875, i64 1714797078500265164, i64 1531833378631336514, i64 6528166405948086424, i64 -6150710865161247580, i64 -6906167188525864920, i64 7880413355075591260, i64 -4037315163162150664, i64 2487751315632064134], [512 x i8] zeroinitializer }, align 32
@C7 = internal constant { [256 x i64], [512 x i8] } { [256 x i64] [i64 1756431069603747864, i64 2561460795389388323, i64 -4161389282011793210, i64 -1691127964876538904, i64 -8708124066284582009, i64 -5126582188167589448, i64 73184627900156161, i64 5701925749970046287, i64 3951968793674947382, i64 -6439401615931605082, i64 -3283173749222208302, i64 -723964656574066955, i64 8789190217357760121, i64 8043832866743660655, i64 -7962766575612760687, i64 5932738974356666450, i64 6961826323861882720, i64 -4842851150700661316, i64 -7253438983354763365, i64 -8213846620190438770, i64 -6649948093680987485, i64 878215534801873932, i64 8931055873530692731, i64 3878784234360045621, i64 2122354208433435933, i64 -2258590039810395168, i64 -2919502478960287273, i64 -4454127793477149502, i64 3366491769668387630, i64 5418194713038956875, i64 -81066291667837442, i64 6287402771023844695, i64 1536877185232190741, i64 8629309888871196791, i64 4025153352721404471, i64 -1894918700292137243, i64 -6969707946022071393, i64 -1087635995555453968, i64 5347261953839734858, i64 -2715711675630533414, i64 6376350478823891544, i64 -3962102216150495287, i64 3000568699155545129, i64 731846278733126154, i64 -5620859703652298575, i64 -6864998308698535520, i64 7760101829812556907, i64 -8849989584682493563, i64 -4769666591654200131, i64 6731014275491073885, i64 1170954046402498576, i64 -794897484626982924, i64 -3815732960686252597, i64 4537445815534015294, i64 365923139366563077, i64 7458355844616190055, i64 -1965851528345053212, i64 2854199306855776807, i64 4690852171372196673, i64 -8424393029220325493, i64 -6366217056885147993, i64 9072921254825734781, i64 -7679035538280068715, i64 -2862080931094767912, i64 -302871974677614341, i64 -1252020335385915922, i64 9001988426772822908, i64 7387423016563274086, i64 -2498409660832842787, i64 1683246441032494871, i64 5116448726768829767, i64 -7042892573788005730, i64 -3886665719885474614, i64 3293307210621933613, i64 -4627800935548899649, i64 512292395166875399, i64 -5940620638056633171, i64 6518215997557878874, i64 -8991855103080403069, i64 3732414841791886899, i64 7174624807685086307, i64 146369255800312322, i64 -6155670577927842902, i64 8203713195498724977, i64 -4033034975349717304, i64 1829615697503899929, i64 5276329194304977737, i64 -2791148171895545895, i64 -941266877261729294, i64 -2041288093597980445, i64 6589148756757100891, i64 -8639443175786824568, i64 -7326623611254915430, i64 2781014747809319718, i64 3659230282611212082, i64 -5694044262832973392, i64 -1620195136957844759, i64 1097769418099685135, i64 -3065871734692957227, i64 -9206905249378470784, i64 -4700985494595360834, i64 -3669363704550921267, i64 3805599675313588532, i64 5205396435105755720, i64 -10133463614925569, i64 8860123045611998586, i64 -8035951203512916848, i64 6872879794225061215, i64 2341907117847362848, i64 7547303345720921960, i64 1902800325135616538, i64 -5871939540997785682, i64 -5410313225366045260, i64 6074604493224857172, i64 -7820901057214840941, i64 2488276236208713506, i64 7245557360658768740, i64 -1016703167636755727, i64 8345578851403222131, i64 1317323302202802706, i64 4619919412172978752, i64 585477023201249288, i64 -4383195034277931581, i64 -1398389453411196948, i64 -2644778916431311397, i64 -6791813749517860703, i64 -8282527511090851443, i64 4464261256487553085, i64 -7537170019882148969, i64 0, i64 -3522994449086678577, i64 3146937817248460331, i64 8558377060818280822, i64 -9065039730980559230, i64 -2990435238293722922, i64 1975984953035768603, i64 -5337128666319588171, i64 -5798754981951324497, i64 7689169001893862762, i64 5790873455891114576, i64 4974583208303286085, i64 -870334049343031053, i64 3512861164249853232, i64 -1181087507333004049, i64 4610630374580476479, i64 6145537252558292821, i64 -6723132652861662302, i64 -1544758846851257878, i64 7316490188711684709, i64 -4984716532062288966, i64 3439676328714848815, i64 -4600497049209827648, i64 -2422973164702048034, i64 2049169580667501596, i64 -156502581640214787, i64 5560060231236067149, i64 -7894085685114997102, i64 8487444232966699637, i64 439107767400936966, i64 -8497577657120477558, i64 -5552178606996108366, i64 -1819482410051336730, i64 1024584790333750798, i64 2268723463965304607, i64 7103691979766388066, i64 -3136804494026392876, i64 -6297536234033151576, i64 -7610354647648087402, i64 -449241092702903559, i64 -4236825778411035707, i64 2707830188494426149, i64 6447283238023113561, i64 -8923174212448431996, i64 8274646023484523890, i64 4171522745558035513, i64 5489127471902627404, i64 6801947034891621470, i64 8718257389439065976, i64 4098338186377356600, i64 -8355712138856785780, i64 -3358610245755660335, i64 -6508082712722021211, i64 -2112220921516678686, i64 7032759151780580961, i64 -5478994047815433549, i64 2415091677028037665, i64 -7184758092454360932, i64 2195538836199370270, i64 4832717689837740355, i64 -4090456522678357561, i64 -227435409693126660, i64 292738511600624644, i64 5861806215090332497, i64 -7395304502021118567, i64 7901967210570719853, i64 951400162567808269, i64 -373804802596308486, i64 -2352040405368608289, i64 9143854082945755518, i64 2634645629447969060, i64 4317891863650958907, i64 -6082486018747163989, i64 -3593927208420118322, i64 1244138674302654737, i64 -8140661992424504433, i64 5630992990636606542, i64 -5195263010482723145, i64 -1473826018932563733, i64 4391076697441091900, i64 -9133720621478314623, i64 -7752220166046007148, i64 -577595538280342281, i64 -5053397628986910535, i64 1390507930102958867, i64 3220122651575472428, i64 -3212240990022990381, i64 -1748549581998420761, i64 7972900038690748782, i64 -4307758537744471356, i64 219553883700468483, i64 6216470011690409046, i64 4903650448969850436, i64 9214786910998667391, i64 -6224351674852472663, i64 3073753258067781418, i64 -4911531972881610053, i64 -4529564290010609727, i64 6003671733555884371, i64 -2569342420166282532, i64 805030906633278219, i64 -7111573464688426595, i64 7831034382517807980, i64 3586045723430528049, i64 8416511404913783668, i64 -648528366333258250, i64 5045515967435394118, i64 -6013805197103094356, i64 -8566258547886672503, i64 1463692557466252308, i64 -2187657211891696927, i64 1610061813266556438, i64 4244707304470279994, i64 7618236173639616105, i64 658661651101401353, i64 8132780367580026736, i64 -5268447569529180234, i64 -3429543004954878256, i64 -1327456625358285075, i64 -3740296463884361012, i64 4761784930638522434, i64 -7468489129921270632, i64 -6581267271768478300, i64 2927384139974866216, i64 6660081516157634140, i64 -520173920621597704, i64 -8781308694050520442], [512 x i8] zeroinitializer }, align 32
@rc = internal constant { [10 x i64], [48 x i8] } { [10 x i64] [i64 1739452583106838863, i64 3938066875928252754, i64 6970617360185850677, i64 2152957850883456599, i64 1546766456395418330, i64 6397689871562992517, i64 -4801662984139176601, i64 -2006563040903981608, i64 -293160144494704738, i64 -3878233664402062541], [48 x i8] zeroinitializer }, align 32
@___asan_gen_.1 = private unnamed_addr constant [3 x i8] c"C0\00", align 1
@___asan_gen_.3 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 53, i32 18 }
@___asan_gen_.4 = private unnamed_addr constant [3 x i8] c"C1\00", align 1
@___asan_gen_.6 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 142, i32 18 }
@___asan_gen_.7 = private unnamed_addr constant [3 x i8] c"C2\00", align 1
@___asan_gen_.9 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 231, i32 18 }
@___asan_gen_.10 = private unnamed_addr constant [3 x i8] c"C3\00", align 1
@___asan_gen_.12 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 320, i32 18 }
@___asan_gen_.13 = private unnamed_addr constant [3 x i8] c"C4\00", align 1
@___asan_gen_.15 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 409, i32 18 }
@___asan_gen_.16 = private unnamed_addr constant [3 x i8] c"C5\00", align 1
@___asan_gen_.18 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 498, i32 18 }
@___asan_gen_.19 = private unnamed_addr constant [3 x i8] c"C6\00", align 1
@___asan_gen_.21 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 587, i32 18 }
@___asan_gen_.22 = private unnamed_addr constant [3 x i8] c"C7\00", align 1
@___asan_gen_.24 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 676, i32 18 }
@___asan_gen_.25 = private unnamed_addr constant [3 x i8] c"rc\00", align 1
@___asan_gen_.26 = private constant [18 x i8] c"../crypto/wp512.c\00", align 1
@___asan_gen_.27 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 765, i32 18 }
@llvm.compiler.used = appending global [21 x ptr] [ptr @__UNIQUE_ID_alias_crypto227, ptr @__UNIQUE_ID_alias_crypto229, ptr @__UNIQUE_ID_alias_crypto231, ptr @__UNIQUE_ID_alias_userspace226, ptr @__UNIQUE_ID_alias_userspace228, ptr @__UNIQUE_ID_alias_userspace230, ptr @__UNIQUE_ID_description235, ptr @__UNIQUE_ID_file233, ptr @__UNIQUE_ID_license234, ptr @__exitcall_wp512_mod_fini, ptr @__initcall__kmod_wp512__232_1172_wp512_mod_init4, ptr @wp512_mod_fini, ptr @C0, ptr @C1, ptr @C2, ptr @C3, ptr @C4, ptr @C5, ptr @C6, ptr @C7, ptr @rc], section "llvm.metadata"
@0 = internal global [9 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @C0 to i32), i32 2048, i32 2560, i32 ptrtoint (ptr @___asan_gen_.1 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @C1 to i32), i32 2048, i32 2560, i32 ptrtoint (ptr @___asan_gen_.4 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.6 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @C2 to i32), i32 2048, i32 2560, i32 ptrtoint (ptr @___asan_gen_.7 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.9 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @C3 to i32), i32 2048, i32 2560, i32 ptrtoint (ptr @___asan_gen_.10 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.12 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @C4 to i32), i32 2048, i32 2560, i32 ptrtoint (ptr @___asan_gen_.13 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @C5 to i32), i32 2048, i32 2560, i32 ptrtoint (ptr @___asan_gen_.16 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.18 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @C6 to i32), i32 2048, i32 2560, i32 ptrtoint (ptr @___asan_gen_.19 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.21 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @C7 to i32), i32 2048, i32 2560, i32 ptrtoint (ptr @___asan_gen_.22 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.24 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rc to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.25 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.27 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @wp512_mod_fini() #0 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @crypto_unregister_shashes(ptr noundef nonnull @wp_algs, i32 noundef 3) #6
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @crypto_unregister_shashes(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @wp512_mod_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @crypto_register_shashes(ptr noundef nonnull @wp_algs, i32 noundef 3) #6
  ret i32 %call
}

; Function Attrs: argmemonly nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong writeonly uwtable(sync)
define internal i32 @wp512_init(ptr nocapture noundef writeonly %desc) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %__ctx.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 0, i32 2
  %bufferBits = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 13
  %0 = call ptr @memset(ptr %__ctx.i, i32 0, i32 33)
  %1 = call ptr @memset(ptr %bufferBits, i32 0, i32 72)
  ret i32 0
}

; Function Attrs: argmemonly nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wp512_update(ptr nocapture noundef %desc, ptr nocapture noundef readonly %source, i32 noundef %len) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %__ctx.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 0, i32 2
  %mul = shl i32 %len, 3
  %bufferBits = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 13
  %0 = ptrtoint ptr %bufferBits to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bufferBits, align 8
  %and2 = and i32 %1, 7
  %buffer3 = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 5
  %bufferPos8 = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 13, i32 1
  %2 = ptrtoint ptr %bufferPos8 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bufferPos8, align 4
  %conv = zext i32 %mul to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.body.land.rhs_crit_edge, %entry
  %value.0147 = phi i64 [ %conv, %entry ], [ %shr20, %for.body.land.rhs_crit_edge ]
  %carry.0146 = phi i32 [ 0, %entry ], [ %shr, %for.body.land.rhs_crit_edge ]
  %i.0145 = phi i32 [ 31, %entry ], [ %dec, %for.body.land.rhs_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %carry.0146)
  %cmp10.not = icmp eq i32 %carry.0146, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %value.0147)
  %cmp12.not = icmp eq i64 %value.0147, 0
  %or.cond = select i1 %cmp10.not, i1 %cmp12.not, i1 false
  br i1 %or.cond, label %land.rhs.for.end_crit_edge, label %for.body

land.rhs.for.end_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.end

for.body:                                         ; preds = %land.rhs
  %arrayidx = getelementptr i8, ptr %__ctx.i, i32 %i.0145
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx, align 1
  %conv14 = zext i8 %5 to i32
  %conv15 = trunc i64 %value.0147 to i32
  %and16 = and i32 %conv15, 255
  %add = add nuw nsw i32 %and16, %carry.0146
  %add17 = add nuw nsw i32 %add, %conv14
  %conv18 = trunc i32 %add17 to i8
  store i8 %conv18, ptr %arrayidx, align 1
  %shr = lshr i32 %add17, 8
  %shr20 = lshr i64 %value.0147, 8
  %dec = add nsw i32 %i.0145, -1
  %cmp.not = icmp eq i32 %i.0145, 0
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.land.rhs_crit_edge

for.body.land.rhs_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %land.rhs

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %land.rhs.for.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %mul)
  %cmp21148 = icmp ugt i32 %mul, 8
  br i1 %cmp21148, label %while.body.lr.ph, label %for.end.while.end_crit_edge

for.end.while.end_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.end

while.body.lr.ph:                                 ; preds = %for.end
  %sub39 = sub nuw nsw i32 8, %and2
  %6 = add i32 %mul, -9
  %7 = lshr i32 %6, 3
  %8 = add nuw nsw i32 %7, 1
  br label %while.body

while.body:                                       ; preds = %if.end.while.body_crit_edge, %while.body.lr.ph
  %bufferPos.0152 = phi i32 [ %3, %while.body.lr.ph ], [ %bufferPos.1, %if.end.while.body_crit_edge ]
  %bufferBits6.0151 = phi i32 [ %1, %while.body.lr.ph ], [ %add47, %if.end.while.body_crit_edge ]
  %bits_len.0150 = phi i32 [ %mul, %while.body.lr.ph ], [ %sub48, %if.end.while.body_crit_edge ]
  %sourcePos.0149 = phi i32 [ 0, %while.body.lr.ph ], [ %add26, %if.end.while.body_crit_edge ]
  %arrayidx23 = getelementptr i8, ptr %source, i32 %sourcePos.0149
  %9 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx23, align 1
  %conv24 = zext i8 %10 to i32
  %add26 = add nuw nsw i32 %sourcePos.0149, 1
  %shr32 = lshr i32 %conv24, %and2
  %inc = add i32 %bufferPos.0152, 1
  %arrayidx35 = getelementptr i8, ptr %buffer3, i32 %bufferPos.0152
  %11 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx35, align 1
  %13 = trunc i32 %shr32 to i8
  %conv38 = or i8 %12, %13
  store i8 %conv38, ptr %arrayidx35, align 1
  %add40 = add i32 %bufferBits6.0151, %sub39
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %add40)
  %cmp41 = icmp eq i32 %add40, 512
  br i1 %cmp41, label %if.then, label %while.body.if.end_crit_edge

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end

if.then:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #8
  tail call fastcc void @wp512_process_buffer(ptr noundef %__ctx.i)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body.if.end_crit_edge
  %bufferBits6.1 = phi i32 [ 0, %if.then ], [ %add40, %while.body.if.end_crit_edge ]
  %bufferPos.1 = phi i32 [ 0, %if.then ], [ %inc, %while.body.if.end_crit_edge ]
  %shl44 = shl nuw nsw i32 %conv24, %sub39
  %conv45 = trunc i32 %shl44 to i8
  %arrayidx46 = getelementptr i8, ptr %buffer3, i32 %bufferPos.1
  %14 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %conv45, ptr %arrayidx46, align 1
  %add47 = add i32 %bufferBits6.1, %and2
  %sub48 = add i32 %bits_len.0150, -8
  %exitcond.not = icmp eq i32 %sourcePos.0149, %7
  br i1 %exitcond.not, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %for.end.while.end_crit_edge
  %sourcePos.0.lcssa = phi i32 [ 0, %for.end.while.end_crit_edge ], [ %8, %if.end.while.end_crit_edge ]
  %bits_len.0.lcssa = phi i32 [ %mul, %for.end.while.end_crit_edge ], [ %sub48, %if.end.while.end_crit_edge ]
  %bufferBits6.0.lcssa = phi i32 [ %1, %for.end.while.end_crit_edge ], [ %add47, %if.end.while.end_crit_edge ]
  %bufferPos.0.lcssa = phi i32 [ %3, %for.end.while.end_crit_edge ], [ %bufferPos.1, %if.end.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bits_len.0.lcssa)
  %cmp50.not = icmp eq i32 %bits_len.0.lcssa, 0
  br i1 %cmp50.not, label %while.end.if.end83_crit_edge, label %if.else68

while.end.if.end83_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end83

if.else68:                                        ; preds = %while.end
  %arrayidx53 = getelementptr i8, ptr %source, i32 %sourcePos.0.lcssa
  %15 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx53, align 1
  %conv54 = zext i8 %16 to i32
  %shr57 = lshr i32 %conv54, %and2
  %arrayidx58 = getelementptr i8, ptr %buffer3, i32 %bufferPos.0.lcssa
  %17 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx58, align 1
  %19 = trunc i32 %shr57 to i8
  %conv61 = or i8 %18, %19
  store i8 %conv61, ptr %arrayidx58, align 1
  %inc69 = add i32 %bufferPos.0.lcssa, 1
  %sub70.neg156 = or i32 %1, -8
  %sub70 = sub nuw nsw i32 8, %and2
  %add71 = add i32 %bufferBits6.0.lcssa, %sub70
  %sub73 = add i32 %bits_len.0.lcssa, %sub70.neg156
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %add71)
  %cmp74 = icmp eq i32 %add71, 512
  br i1 %cmp74, label %if.then76, label %if.else68.if.end77_crit_edge

if.else68.if.end77_crit_edge:                     ; preds = %if.else68
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end77

if.then76:                                        ; preds = %if.else68
  call void @__sanitizer_cov_trace_pc() #8
  tail call fastcc void @wp512_process_buffer(ptr noundef %__ctx.i)
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %if.else68.if.end77_crit_edge
  %bufferBits6.2 = phi i32 [ 0, %if.then76 ], [ %add71, %if.else68.if.end77_crit_edge ]
  %bufferPos.2 = phi i32 [ 0, %if.then76 ], [ %inc69, %if.else68.if.end77_crit_edge ]
  %shl79 = shl nuw nsw i32 %conv54, %sub70
  %conv80 = trunc i32 %shl79 to i8
  %arrayidx81 = getelementptr i8, ptr %buffer3, i32 %bufferPos.2
  %20 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %conv80, ptr %arrayidx81, align 1
  %add82 = add i32 %sub73, %bufferBits6.2
  br label %if.end83

if.end83:                                         ; preds = %if.end77, %while.end.if.end83_crit_edge
  %bufferBits6.3 = phi i32 [ %add82, %if.end77 ], [ %bufferBits6.0.lcssa, %while.end.if.end83_crit_edge ]
  %bufferPos.3 = phi i32 [ %bufferPos.2, %if.end77 ], [ %bufferPos.0.lcssa, %while.end.if.end83_crit_edge ]
  %21 = ptrtoint ptr %bufferBits to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %bufferBits6.3, ptr %bufferBits, align 8
  %22 = ptrtoint ptr %bufferPos8 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %bufferPos.3, ptr %bufferPos8, align 4
  ret i32 0
}

; Function Attrs: argmemonly nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wp512_final(ptr nocapture noundef %desc, ptr nocapture noundef writeonly %out) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %__ctx.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 0, i32 2
  %buffer1 = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 5
  %bufferBits4 = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 13
  %0 = ptrtoint ptr %bufferBits4 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bufferBits4, align 8
  %bufferPos5 = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 13, i32 1
  %2 = ptrtoint ptr %bufferPos5 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bufferPos5, align 4
  %and = and i32 %1, 7
  %shr = lshr i32 128, %and
  %arrayidx = getelementptr i8, ptr %buffer1, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx, align 1
  %6 = trunc i32 %shr to i8
  %conv6 = or i8 %5, %6
  store i8 %conv6, ptr %arrayidx, align 1
  %inc = add i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %inc)
  %cmp = icmp sgt i32 %inc, 32
  br i1 %cmp, label %if.then, label %if.end12

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %inc)
  %cmp8 = icmp ult i32 %inc, 64
  br i1 %cmp8, label %if.then10, label %if.then.if.end12.thread_crit_edge

if.then.if.end12.thread_crit_edge:                ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.thread

if.then10:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  %arrayidx11 = getelementptr i8, ptr %buffer1, i32 %inc
  %sub = sub nuw nsw i32 63, %3
  %7 = call ptr @memset(ptr %arrayidx11, i32 0, i32 %sub)
  br label %if.end12.thread

if.end12.thread:                                  ; preds = %if.then10, %if.then.if.end12.thread_crit_edge
  tail call fastcc void @wp512_process_buffer(ptr noundef %__ctx.i)
  br label %if.then15

if.end12:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %inc)
  %cmp13.not = icmp eq i32 %inc, 32
  br i1 %cmp13.not, label %if.end12.if.end18_crit_edge, label %if.end12.if.then15_crit_edge

if.end12.if.then15_crit_edge:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then15

if.end12.if.end18_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end18

if.then15:                                        ; preds = %if.end12.if.then15_crit_edge, %if.end12.thread
  %bufferPos.053 = phi i32 [ 0, %if.end12.thread ], [ %inc, %if.end12.if.then15_crit_edge ]
  %arrayidx16 = getelementptr i8, ptr %buffer1, i32 %bufferPos.053
  %sub17 = sub i32 32, %bufferPos.053
  %8 = call ptr @memset(ptr %arrayidx16, i32 0, i32 %sub17)
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %if.end12.if.end18_crit_edge
  %arrayidx19 = getelementptr %struct.shash_desc, ptr %desc, i32 9
  %9 = call ptr @memcpy(ptr %arrayidx19, ptr %__ctx.i, i32 32)
  tail call fastcc void @wp512_process_buffer(ptr noundef %__ctx.i)
  %arrayidx22 = getelementptr %struct.shash_desc, ptr %desc, i32 14
  %10 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %arrayidx22, align 8
  %12 = ptrtoint ptr %out to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %out, align 8
  %arrayidx22.1 = getelementptr %struct.shash_desc, ptr %desc, i32 15
  %13 = ptrtoint ptr %arrayidx22.1 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %arrayidx22.1, align 8
  %arrayidx23.1 = getelementptr i64, ptr %out, i32 1
  %15 = ptrtoint ptr %arrayidx23.1 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %arrayidx23.1, align 8
  %arrayidx22.2 = getelementptr %struct.shash_desc, ptr %desc, i32 16
  %16 = ptrtoint ptr %arrayidx22.2 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %arrayidx22.2, align 8
  %arrayidx23.2 = getelementptr i64, ptr %out, i32 2
  %18 = ptrtoint ptr %arrayidx23.2 to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %arrayidx23.2, align 8
  %arrayidx22.3 = getelementptr %struct.shash_desc, ptr %desc, i32 17
  %19 = ptrtoint ptr %arrayidx22.3 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %arrayidx22.3, align 8
  %arrayidx23.3 = getelementptr i64, ptr %out, i32 3
  %21 = ptrtoint ptr %arrayidx23.3 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %arrayidx23.3, align 8
  %arrayidx22.4 = getelementptr %struct.shash_desc, ptr %desc, i32 18
  %22 = ptrtoint ptr %arrayidx22.4 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %arrayidx22.4, align 8
  %arrayidx23.4 = getelementptr i64, ptr %out, i32 4
  %24 = ptrtoint ptr %arrayidx23.4 to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %23, ptr %arrayidx23.4, align 8
  %arrayidx22.5 = getelementptr %struct.shash_desc, ptr %desc, i32 19
  %25 = ptrtoint ptr %arrayidx22.5 to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %arrayidx22.5, align 8
  %arrayidx23.5 = getelementptr i64, ptr %out, i32 5
  %27 = ptrtoint ptr %arrayidx23.5 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %arrayidx23.5, align 8
  %arrayidx22.6 = getelementptr %struct.shash_desc, ptr %desc, i32 20
  %28 = ptrtoint ptr %arrayidx22.6 to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %arrayidx22.6, align 8
  %arrayidx23.6 = getelementptr i64, ptr %out, i32 6
  %30 = ptrtoint ptr %arrayidx23.6 to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %arrayidx23.6, align 8
  %arrayidx22.7 = getelementptr %struct.shash_desc, ptr %desc, i32 21
  %31 = ptrtoint ptr %arrayidx22.7 to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %arrayidx22.7, align 8
  %arrayidx23.7 = getelementptr i64, ptr %out, i32 7
  %33 = ptrtoint ptr %arrayidx23.7 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %arrayidx23.7, align 8
  %34 = ptrtoint ptr %bufferBits4 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %1, ptr %bufferBits4, align 8
  %35 = ptrtoint ptr %bufferPos5 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 32, ptr %bufferPos5, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wp384_final(ptr nocapture noundef %desc, ptr nocapture noundef writeonly %out) #4 align 64 {
entry:
  %D = alloca [64 x i8], align 8
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %D) #6
  %__ctx.i.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 0, i32 2
  %buffer1.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 5
  %bufferBits4.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 13
  %0 = ptrtoint ptr %bufferBits4.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bufferBits4.i, align 8
  %bufferPos5.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 13, i32 1
  %2 = ptrtoint ptr %bufferPos5.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bufferPos5.i, align 4
  %and.i = and i32 %1, 7
  %shr.i = lshr i32 128, %and.i
  %arrayidx.i = getelementptr i8, ptr %buffer1.i, i32 %3
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx.i, align 1
  %6 = trunc i32 %shr.i to i8
  %conv6.i = or i8 %5, %6
  store i8 %conv6.i, ptr %arrayidx.i, align 1
  %inc.i = add i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %inc.i)
  %cmp.i = icmp sgt i32 %inc.i, 32
  br i1 %cmp.i, label %if.then.i, label %if.end12.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %inc.i)
  %cmp8.i = icmp ult i32 %inc.i, 64
  br i1 %cmp8.i, label %if.then10.i, label %if.then.i.if.end12.thread.i_crit_edge

if.then.i.if.end12.thread.i_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.thread.i

if.then10.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  %arrayidx11.i = getelementptr i8, ptr %buffer1.i, i32 %inc.i
  %sub.i = sub nuw nsw i32 63, %3
  %7 = call ptr @memset(ptr %arrayidx11.i, i32 0, i32 %sub.i)
  br label %if.end12.thread.i

if.end12.thread.i:                                ; preds = %if.then10.i, %if.then.i.if.end12.thread.i_crit_edge
  tail call fastcc void @wp512_process_buffer(ptr noundef %__ctx.i.i) #6
  br label %if.then15.i

if.end12.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %inc.i)
  %cmp13.not.i = icmp eq i32 %inc.i, 32
  br i1 %cmp13.not.i, label %if.end12.i.wp512_final.exit_crit_edge, label %if.end12.i.if.then15.i_crit_edge

if.end12.i.if.then15.i_crit_edge:                 ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then15.i

if.end12.i.wp512_final.exit_crit_edge:            ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %wp512_final.exit

if.then15.i:                                      ; preds = %if.end12.i.if.then15.i_crit_edge, %if.end12.thread.i
  %bufferPos.053.i = phi i32 [ 0, %if.end12.thread.i ], [ %inc.i, %if.end12.i.if.then15.i_crit_edge ]
  %arrayidx16.i = getelementptr i8, ptr %buffer1.i, i32 %bufferPos.053.i
  %sub17.i = sub i32 32, %bufferPos.053.i
  %8 = call ptr @memset(ptr %arrayidx16.i, i32 0, i32 %sub17.i)
  br label %wp512_final.exit

wp512_final.exit:                                 ; preds = %if.then15.i, %if.end12.i.wp512_final.exit_crit_edge
  %arrayidx19.i = getelementptr %struct.shash_desc, ptr %desc, i32 9
  %9 = call ptr @memcpy(ptr %arrayidx19.i, ptr %__ctx.i.i, i32 32)
  tail call fastcc void @wp512_process_buffer(ptr noundef %__ctx.i.i) #6
  %arrayidx22.i = getelementptr %struct.shash_desc, ptr %desc, i32 14
  %10 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %arrayidx22.i, align 8
  %12 = ptrtoint ptr %D to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %D, align 8
  %arrayidx22.1.i = getelementptr %struct.shash_desc, ptr %desc, i32 15
  %13 = ptrtoint ptr %arrayidx22.1.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %arrayidx22.1.i, align 8
  %arrayidx23.1.i = getelementptr inbounds i64, ptr %D, i32 1
  %15 = ptrtoint ptr %arrayidx23.1.i to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %arrayidx23.1.i, align 8
  %arrayidx22.2.i = getelementptr %struct.shash_desc, ptr %desc, i32 16
  %16 = ptrtoint ptr %arrayidx22.2.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %arrayidx22.2.i, align 8
  %arrayidx23.2.i = getelementptr inbounds i64, ptr %D, i32 2
  %18 = ptrtoint ptr %arrayidx23.2.i to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %arrayidx23.2.i, align 8
  %arrayidx22.3.i = getelementptr %struct.shash_desc, ptr %desc, i32 17
  %19 = ptrtoint ptr %arrayidx22.3.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %arrayidx22.3.i, align 8
  %arrayidx23.3.i = getelementptr inbounds i64, ptr %D, i32 3
  %21 = ptrtoint ptr %arrayidx23.3.i to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %arrayidx23.3.i, align 8
  %arrayidx22.4.i = getelementptr %struct.shash_desc, ptr %desc, i32 18
  %22 = ptrtoint ptr %arrayidx22.4.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %arrayidx22.4.i, align 8
  %arrayidx23.4.i = getelementptr inbounds i64, ptr %D, i32 4
  %24 = ptrtoint ptr %arrayidx23.4.i to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %23, ptr %arrayidx23.4.i, align 8
  %arrayidx22.5.i = getelementptr %struct.shash_desc, ptr %desc, i32 19
  %25 = ptrtoint ptr %arrayidx22.5.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %arrayidx22.5.i, align 8
  %arrayidx23.5.i = getelementptr inbounds i64, ptr %D, i32 5
  %27 = ptrtoint ptr %arrayidx23.5.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %arrayidx23.5.i, align 8
  %28 = ptrtoint ptr %bufferBits4.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %1, ptr %bufferBits4.i, align 8
  %29 = ptrtoint ptr %bufferPos5.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 32, ptr %bufferPos5.i, align 4
  %30 = call ptr @memcpy(ptr %out, ptr %D, i32 48)
  %31 = call ptr @memset(ptr %D, i32 0, i32 64)
  call void asm sideeffect "", "r,~{memory}"(ptr nonnull %D) #6, !srcloc !47
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %D) #6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wp256_final(ptr nocapture noundef %desc, ptr nocapture noundef writeonly %out) #4 align 64 {
entry:
  %D = alloca [64 x i8], align 8
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %D) #6
  %__ctx.i.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 0, i32 2
  %buffer1.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 5
  %bufferBits4.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 13
  %0 = ptrtoint ptr %bufferBits4.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bufferBits4.i, align 8
  %bufferPos5.i = getelementptr inbounds %struct.shash_desc, ptr %desc, i32 13, i32 1
  %2 = ptrtoint ptr %bufferPos5.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bufferPos5.i, align 4
  %and.i = and i32 %1, 7
  %shr.i = lshr i32 128, %and.i
  %arrayidx.i = getelementptr i8, ptr %buffer1.i, i32 %3
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx.i, align 1
  %6 = trunc i32 %shr.i to i8
  %conv6.i = or i8 %5, %6
  store i8 %conv6.i, ptr %arrayidx.i, align 1
  %inc.i = add i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %inc.i)
  %cmp.i = icmp sgt i32 %inc.i, 32
  br i1 %cmp.i, label %if.then.i, label %if.end12.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %inc.i)
  %cmp8.i = icmp ult i32 %inc.i, 64
  br i1 %cmp8.i, label %if.then10.i, label %if.then.i.if.end12.thread.i_crit_edge

if.then.i.if.end12.thread.i_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.thread.i

if.then10.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  %arrayidx11.i = getelementptr i8, ptr %buffer1.i, i32 %inc.i
  %sub.i = sub nuw nsw i32 63, %3
  %7 = call ptr @memset(ptr %arrayidx11.i, i32 0, i32 %sub.i)
  br label %if.end12.thread.i

if.end12.thread.i:                                ; preds = %if.then10.i, %if.then.i.if.end12.thread.i_crit_edge
  tail call fastcc void @wp512_process_buffer(ptr noundef %__ctx.i.i) #6
  br label %if.then15.i

if.end12.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %inc.i)
  %cmp13.not.i = icmp eq i32 %inc.i, 32
  br i1 %cmp13.not.i, label %if.end12.i.wp512_final.exit_crit_edge, label %if.end12.i.if.then15.i_crit_edge

if.end12.i.if.then15.i_crit_edge:                 ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then15.i

if.end12.i.wp512_final.exit_crit_edge:            ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %wp512_final.exit

if.then15.i:                                      ; preds = %if.end12.i.if.then15.i_crit_edge, %if.end12.thread.i
  %bufferPos.053.i = phi i32 [ 0, %if.end12.thread.i ], [ %inc.i, %if.end12.i.if.then15.i_crit_edge ]
  %arrayidx16.i = getelementptr i8, ptr %buffer1.i, i32 %bufferPos.053.i
  %sub17.i = sub i32 32, %bufferPos.053.i
  %8 = call ptr @memset(ptr %arrayidx16.i, i32 0, i32 %sub17.i)
  br label %wp512_final.exit

wp512_final.exit:                                 ; preds = %if.then15.i, %if.end12.i.wp512_final.exit_crit_edge
  %arrayidx19.i = getelementptr %struct.shash_desc, ptr %desc, i32 9
  %9 = call ptr @memcpy(ptr %arrayidx19.i, ptr %__ctx.i.i, i32 32)
  tail call fastcc void @wp512_process_buffer(ptr noundef %__ctx.i.i) #6
  %arrayidx22.i = getelementptr %struct.shash_desc, ptr %desc, i32 14
  %10 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %arrayidx22.i, align 8
  %12 = ptrtoint ptr %D to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %D, align 8
  %arrayidx22.1.i = getelementptr %struct.shash_desc, ptr %desc, i32 15
  %13 = ptrtoint ptr %arrayidx22.1.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %arrayidx22.1.i, align 8
  %arrayidx23.1.i = getelementptr inbounds i64, ptr %D, i32 1
  %15 = ptrtoint ptr %arrayidx23.1.i to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %arrayidx23.1.i, align 8
  %arrayidx22.2.i = getelementptr %struct.shash_desc, ptr %desc, i32 16
  %16 = ptrtoint ptr %arrayidx22.2.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %arrayidx22.2.i, align 8
  %arrayidx23.2.i = getelementptr inbounds i64, ptr %D, i32 2
  %18 = ptrtoint ptr %arrayidx23.2.i to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %arrayidx23.2.i, align 8
  %arrayidx22.3.i = getelementptr %struct.shash_desc, ptr %desc, i32 17
  %19 = ptrtoint ptr %arrayidx22.3.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %arrayidx22.3.i, align 8
  %arrayidx23.3.i = getelementptr inbounds i64, ptr %D, i32 3
  %21 = ptrtoint ptr %arrayidx23.3.i to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %arrayidx23.3.i, align 8
  %22 = ptrtoint ptr %bufferBits4.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %1, ptr %bufferBits4.i, align 8
  %23 = ptrtoint ptr %bufferPos5.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 32, ptr %bufferPos5.i, align 4
  %24 = call ptr @memcpy(ptr %out, ptr %D, i32 32)
  %25 = call ptr @memset(ptr %D, i32 0, i32 64)
  call void asm sideeffect "", "r,~{memory}"(ptr nonnull %D) #6, !srcloc !47
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %D) #6
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #5

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #5

; Function Attrs: argmemonly nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wp512_process_buffer(ptr nocapture noundef %wctx) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %buffer1 = getelementptr inbounds %struct.wp512_ctx, ptr %wctx, i32 0, i32 1
  %0 = ptrtoint ptr %buffer1 to i32
  call void @__asan_load8_noabort(i32 %0)
  %block.sroa.0.0.copyload = load i64, ptr %buffer1, align 8
  %block.sroa.5.0.buffer1.sroa_idx = getelementptr inbounds %struct.wp512_ctx, ptr %wctx, i32 0, i32 1, i32 8
  %1 = ptrtoint ptr %block.sroa.5.0.buffer1.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %1)
  %block.sroa.5.0.copyload = load i64, ptr %block.sroa.5.0.buffer1.sroa_idx, align 8
  %block.sroa.6.0.buffer1.sroa_idx = getelementptr inbounds %struct.wp512_ctx, ptr %wctx, i32 0, i32 1, i32 16
  %2 = ptrtoint ptr %block.sroa.6.0.buffer1.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %2)
  %block.sroa.6.0.copyload = load i64, ptr %block.sroa.6.0.buffer1.sroa_idx, align 8
  %block.sroa.7.0.buffer1.sroa_idx = getelementptr inbounds %struct.wp512_ctx, ptr %wctx, i32 0, i32 1, i32 24
  %3 = ptrtoint ptr %block.sroa.7.0.buffer1.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %3)
  %block.sroa.7.0.copyload = load i64, ptr %block.sroa.7.0.buffer1.sroa_idx, align 8
  %block.sroa.8.0.buffer1.sroa_idx = getelementptr inbounds %struct.wp512_ctx, ptr %wctx, i32 0, i32 1, i32 32
  %4 = ptrtoint ptr %block.sroa.8.0.buffer1.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %4)
  %block.sroa.8.0.copyload = load i64, ptr %block.sroa.8.0.buffer1.sroa_idx, align 8
  %block.sroa.9.0.buffer1.sroa_idx = getelementptr inbounds %struct.wp512_ctx, ptr %wctx, i32 0, i32 1, i32 40
  %5 = ptrtoint ptr %block.sroa.9.0.buffer1.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %5)
  %block.sroa.9.0.copyload = load i64, ptr %block.sroa.9.0.buffer1.sroa_idx, align 8
  %block.sroa.10.0.buffer1.sroa_idx = getelementptr inbounds %struct.wp512_ctx, ptr %wctx, i32 0, i32 1, i32 48
  %6 = ptrtoint ptr %block.sroa.10.0.buffer1.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %6)
  %block.sroa.10.0.copyload = load i64, ptr %block.sroa.10.0.buffer1.sroa_idx, align 8
  %block.sroa.11.0.buffer1.sroa_idx = getelementptr inbounds %struct.wp512_ctx, ptr %wctx, i32 0, i32 1, i32 56
  %7 = ptrtoint ptr %block.sroa.11.0.buffer1.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %7)
  %block.sroa.11.0.copyload = load i64, ptr %block.sroa.11.0.buffer1.sroa_idx, align 8
  %hash = getelementptr inbounds %struct.wp512_ctx, ptr %wctx, i32 0, i32 4
  %8 = ptrtoint ptr %hash to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %hash, align 8
  %xor = xor i64 %9, %block.sroa.0.0.copyload
  %arrayidx9 = getelementptr %struct.wp512_ctx, ptr %wctx, i32 0, i32 4, i32 1
  %10 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %arrayidx9, align 8
  %xor11 = xor i64 %11, %block.sroa.5.0.copyload
  %arrayidx15 = getelementptr %struct.wp512_ctx, ptr %wctx, i32 0, i32 4, i32 2
  %12 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %arrayidx15, align 8
  %xor17 = xor i64 %13, %block.sroa.6.0.copyload
  %arrayidx21 = getelementptr %struct.wp512_ctx, ptr %wctx, i32 0, i32 4, i32 3
  %14 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %arrayidx21, align 8
  %xor23 = xor i64 %15, %block.sroa.7.0.copyload
  %arrayidx27 = getelementptr %struct.wp512_ctx, ptr %wctx, i32 0, i32 4, i32 4
  %16 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %arrayidx27, align 8
  %xor29 = xor i64 %17, %block.sroa.8.0.copyload
  %arrayidx33 = getelementptr %struct.wp512_ctx, ptr %wctx, i32 0, i32 4, i32 5
  %18 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx33, align 8
  %xor35 = xor i64 %19, %block.sroa.9.0.copyload
  %arrayidx39 = getelementptr %struct.wp512_ctx, ptr %wctx, i32 0, i32 4, i32 6
  %20 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %arrayidx39, align 8
  %xor41 = xor i64 %21, %block.sroa.10.0.copyload
  %arrayidx45 = getelementptr %struct.wp512_ctx, ptr %wctx, i32 0, i32 4, i32 7
  %22 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %arrayidx45, align 8
  %xor47 = xor i64 %23, %block.sroa.11.0.copyload
  %extract.t = trunc i64 %9 to i32
  %extract = lshr i64 %9, 8
  %extract.t1163 = trunc i64 %extract to i32
  %extract1166 = lshr i64 %9, 16
  %extract.t1167 = trunc i64 %extract1166 to i32
  %extract1170 = lshr i64 %9, 24
  %extract.t1171 = trunc i64 %extract1170 to i32
  %extract1174 = lshr i64 %9, 32
  %extract.t1175 = trunc i64 %extract1174 to i32
  %extract1178 = lshr i64 %9, 40
  %extract.t1179 = trunc i64 %extract1178 to i32
  %extract1182 = lshr i64 %9, 48
  %extract.t1183 = trunc i64 %extract1182 to i32
  %extract1186 = lshr i64 %9, 56
  %extract.t1187 = trunc i64 %extract1186 to i32
  %extract.t1190 = trunc i64 %11 to i32
  %extract1192 = lshr i64 %11, 8
  %extract.t1193 = trunc i64 %extract1192 to i32
  %extract1196 = lshr i64 %11, 16
  %extract.t1197 = trunc i64 %extract1196 to i32
  %extract1200 = lshr i64 %11, 24
  %extract.t1201 = trunc i64 %extract1200 to i32
  %extract1204 = lshr i64 %11, 32
  %extract.t1205 = trunc i64 %extract1204 to i32
  %extract1208 = lshr i64 %11, 40
  %extract.t1209 = trunc i64 %extract1208 to i32
  %extract1212 = lshr i64 %11, 48
  %extract.t1213 = trunc i64 %extract1212 to i32
  %extract1216 = lshr i64 %11, 56
  %extract.t1217 = trunc i64 %extract1216 to i32
  %extract.t1220 = trunc i64 %13 to i32
  %extract1222 = lshr i64 %13, 8
  %extract.t1223 = trunc i64 %extract1222 to i32
  %extract1226 = lshr i64 %13, 16
  %extract.t1227 = trunc i64 %extract1226 to i32
  %extract1230 = lshr i64 %13, 24
  %extract.t1231 = trunc i64 %extract1230 to i32
  %extract1234 = lshr i64 %13, 32
  %extract.t1235 = trunc i64 %extract1234 to i32
  %extract1238 = lshr i64 %13, 40
  %extract.t1239 = trunc i64 %extract1238 to i32
  %extract1242 = lshr i64 %13, 48
  %extract.t1243 = trunc i64 %extract1242 to i32
  %extract1246 = lshr i64 %13, 56
  %extract.t1247 = trunc i64 %extract1246 to i32
  %extract.t1250 = trunc i64 %15 to i32
  %extract1252 = lshr i64 %15, 8
  %extract.t1253 = trunc i64 %extract1252 to i32
  %extract1256 = lshr i64 %15, 16
  %extract.t1257 = trunc i64 %extract1256 to i32
  %extract1260 = lshr i64 %15, 24
  %extract.t1261 = trunc i64 %extract1260 to i32
  %extract1264 = lshr i64 %15, 32
  %extract.t1265 = trunc i64 %extract1264 to i32
  %extract1268 = lshr i64 %15, 40
  %extract.t1269 = trunc i64 %extract1268 to i32
  %extract1272 = lshr i64 %15, 48
  %extract.t1273 = trunc i64 %extract1272 to i32
  %extract1276 = lshr i64 %15, 56
  %extract.t1277 = trunc i64 %extract1276 to i32
  %extract.t1280 = trunc i64 %17 to i32
  %extract1282 = lshr i64 %17, 8
  %extract.t1283 = trunc i64 %extract1282 to i32
  %extract1286 = lshr i64 %17, 16
  %extract.t1287 = trunc i64 %extract1286 to i32
  %extract1290 = lshr i64 %17, 24
  %extract.t1291 = trunc i64 %extract1290 to i32
  %extract1294 = lshr i64 %17, 32
  %extract.t1295 = trunc i64 %extract1294 to i32
  %extract1298 = lshr i64 %17, 40
  %extract.t1299 = trunc i64 %extract1298 to i32
  %extract1302 = lshr i64 %17, 48
  %extract.t1303 = trunc i64 %extract1302 to i32
  %extract1306 = lshr i64 %17, 56
  %extract.t1307 = trunc i64 %extract1306 to i32
  %extract.t1310 = trunc i64 %19 to i32
  %extract1312 = lshr i64 %19, 8
  %extract.t1313 = trunc i64 %extract1312 to i32
  %extract1316 = lshr i64 %19, 16
  %extract.t1317 = trunc i64 %extract1316 to i32
  %extract1320 = lshr i64 %19, 24
  %extract.t1321 = trunc i64 %extract1320 to i32
  %extract1324 = lshr i64 %19, 32
  %extract.t1325 = trunc i64 %extract1324 to i32
  %extract1328 = lshr i64 %19, 40
  %extract.t1329 = trunc i64 %extract1328 to i32
  %extract1332 = lshr i64 %19, 48
  %extract.t1333 = trunc i64 %extract1332 to i32
  %extract1336 = lshr i64 %19, 56
  %extract.t1337 = trunc i64 %extract1336 to i32
  %extract.t1340 = trunc i64 %21 to i32
  %extract1342 = lshr i64 %21, 8
  %extract.t1343 = trunc i64 %extract1342 to i32
  %extract1346 = lshr i64 %21, 16
  %extract.t1347 = trunc i64 %extract1346 to i32
  %extract1350 = lshr i64 %21, 24
  %extract.t1351 = trunc i64 %extract1350 to i32
  %extract1354 = lshr i64 %21, 32
  %extract.t1355 = trunc i64 %extract1354 to i32
  %extract1358 = lshr i64 %21, 40
  %extract.t1359 = trunc i64 %extract1358 to i32
  %extract1362 = lshr i64 %21, 48
  %extract.t1363 = trunc i64 %extract1362 to i32
  %extract1366 = lshr i64 %21, 56
  %extract.t1367 = trunc i64 %extract1366 to i32
  %extract.t1370 = trunc i64 %23 to i32
  %extract1372 = lshr i64 %23, 8
  %extract.t1373 = trunc i64 %extract1372 to i32
  %extract1376 = lshr i64 %23, 16
  %extract.t1377 = trunc i64 %extract1376 to i32
  %extract1380 = lshr i64 %23, 24
  %extract.t1381 = trunc i64 %extract1380 to i32
  %extract1384 = lshr i64 %23, 32
  %extract.t1385 = trunc i64 %extract1384 to i32
  %extract1388 = lshr i64 %23, 40
  %extract.t1389 = trunc i64 %extract1388 to i32
  %extract1392 = lshr i64 %23, 48
  %extract.t1393 = trunc i64 %extract1392 to i32
  %extract1396 = lshr i64 %23, 56
  %extract.t1397 = trunc i64 %extract1396 to i32
  %extract.t1474 = trunc i64 %xor47 to i32
  %extract1476 = lshr i64 %xor47, 32
  %extract.t1477 = trunc i64 %extract1476 to i32
  %extract1480 = lshr i64 %xor47, 40
  %extract.t1481 = trunc i64 %extract1480 to i32
  %extract1484 = lshr i64 %xor47, 48
  %extract.t1485 = trunc i64 %extract1484 to i32
  %extract1488 = lshr i64 %xor47, 56
  %extract.t1489 = trunc i64 %extract1488 to i32
  %extract.t1492 = trunc i64 %xor41 to i32
  %extract1494 = lshr i64 %xor41, 32
  %extract.t1495 = trunc i64 %extract1494 to i32
  %extract1498 = lshr i64 %xor41, 40
  %extract.t1499 = trunc i64 %extract1498 to i32
  %extract1502 = lshr i64 %xor41, 48
  %extract.t1503 = trunc i64 %extract1502 to i32
  %extract1506 = lshr i64 %xor41, 56
  %extract.t1507 = trunc i64 %extract1506 to i32
  %extract.t1510 = trunc i64 %xor35 to i32
  %extract1512 = lshr i64 %xor35, 32
  %extract.t1513 = trunc i64 %extract1512 to i32
  %extract1516 = lshr i64 %xor35, 40
  %extract.t1517 = trunc i64 %extract1516 to i32
  %extract1520 = lshr i64 %xor35, 48
  %extract.t1521 = trunc i64 %extract1520 to i32
  %extract1524 = lshr i64 %xor35, 56
  %extract.t1525 = trunc i64 %extract1524 to i32
  %extract.t1528 = trunc i64 %xor29 to i32
  %extract1530 = lshr i64 %xor29, 32
  %extract.t1531 = trunc i64 %extract1530 to i32
  %extract1534 = lshr i64 %xor29, 40
  %extract.t1535 = trunc i64 %extract1534 to i32
  %extract1538 = lshr i64 %xor29, 48
  %extract.t1539 = trunc i64 %extract1538 to i32
  %extract1542 = lshr i64 %xor29, 56
  %extract.t1543 = trunc i64 %extract1542 to i32
  %extract.t1546 = trunc i64 %xor23 to i32
  %extract1548 = lshr i64 %xor23, 32
  %extract.t1549 = trunc i64 %extract1548 to i32
  %extract1552 = lshr i64 %xor23, 40
  %extract.t1553 = trunc i64 %extract1552 to i32
  %extract1556 = lshr i64 %xor23, 48
  %extract.t1557 = trunc i64 %extract1556 to i32
  %extract1560 = lshr i64 %xor23, 56
  %extract.t1561 = trunc i64 %extract1560 to i32
  %extract.t1564 = trunc i64 %xor17 to i32
  %extract1566 = lshr i64 %xor17, 32
  %extract.t1567 = trunc i64 %extract1566 to i32
  %extract1570 = lshr i64 %xor17, 40
  %extract.t1571 = trunc i64 %extract1570 to i32
  %extract1574 = lshr i64 %xor17, 48
  %extract.t1575 = trunc i64 %extract1574 to i32
  %extract1578 = lshr i64 %xor17, 56
  %extract.t1579 = trunc i64 %extract1578 to i32
  %extract.t1582 = trunc i64 %xor11 to i32
  %extract1584 = lshr i64 %xor11, 32
  %extract.t1585 = trunc i64 %extract1584 to i32
  %extract1588 = lshr i64 %xor11, 40
  %extract.t1589 = trunc i64 %extract1588 to i32
  %extract1592 = lshr i64 %xor11, 48
  %extract.t1593 = trunc i64 %extract1592 to i32
  %extract1596 = lshr i64 %xor11, 56
  %extract.t1597 = trunc i64 %extract1596 to i32
  %extract.t1600 = trunc i64 %xor to i32
  %extract1602 = lshr i64 %xor, 32
  %extract.t1603 = trunc i64 %extract1602 to i32
  %extract1606 = lshr i64 %xor, 40
  %extract.t1607 = trunc i64 %extract1606 to i32
  %extract1610 = lshr i64 %xor, 48
  %extract.t1611 = trunc i64 %extract1610 to i32
  %extract1614 = lshr i64 %xor, 56
  %extract.t1615 = trunc i64 %extract1614 to i32
  br label %for.body51

for.body51:                                       ; preds = %for.body51.for.body51_crit_edge, %entry
  %state.sroa.80.01473.off0 = phi i32 [ %extract.t1474, %entry ], [ %extract.t1475, %for.body51.for.body51_crit_edge ]
  %state.sroa.80.01473.off32 = phi i32 [ %extract.t1477, %entry ], [ %extract.t1479, %for.body51.for.body51_crit_edge ]
  %state.sroa.80.01473.off40 = phi i32 [ %extract.t1481, %entry ], [ %extract.t1483, %for.body51.for.body51_crit_edge ]
  %state.sroa.80.01473.off48 = phi i32 [ %extract.t1485, %entry ], [ %extract.t1487, %for.body51.for.body51_crit_edge ]
  %state.sroa.80.01473.off56 = phi i32 [ %extract.t1489, %entry ], [ %extract.t1491, %for.body51.for.body51_crit_edge ]
  %state.sroa.69.01472.off0 = phi i32 [ %extract.t1492, %entry ], [ %extract.t1493, %for.body51.for.body51_crit_edge ]
  %state.sroa.69.01472.off32 = phi i32 [ %extract.t1495, %entry ], [ %extract.t1497, %for.body51.for.body51_crit_edge ]
  %state.sroa.69.01472.off40 = phi i32 [ %extract.t1499, %entry ], [ %extract.t1501, %for.body51.for.body51_crit_edge ]
  %state.sroa.69.01472.off48 = phi i32 [ %extract.t1503, %entry ], [ %extract.t1505, %for.body51.for.body51_crit_edge ]
  %state.sroa.69.01472.off56 = phi i32 [ %extract.t1507, %entry ], [ %extract.t1509, %for.body51.for.body51_crit_edge ]
  %state.sroa.58.01471.off0 = phi i32 [ %extract.t1510, %entry ], [ %extract.t1511, %for.body51.for.body51_crit_edge ]
  %state.sroa.58.01471.off32 = phi i32 [ %extract.t1513, %entry ], [ %extract.t1515, %for.body51.for.body51_crit_edge ]
  %state.sroa.58.01471.off40 = phi i32 [ %extract.t1517, %entry ], [ %extract.t1519, %for.body51.for.body51_crit_edge ]
  %state.sroa.58.01471.off48 = phi i32 [ %extract.t1521, %entry ], [ %extract.t1523, %for.body51.for.body51_crit_edge ]
  %state.sroa.58.01471.off56 = phi i32 [ %extract.t1525, %entry ], [ %extract.t1527, %for.body51.for.body51_crit_edge ]
  %state.sroa.47.01470.off0 = phi i32 [ %extract.t1528, %entry ], [ %extract.t1529, %for.body51.for.body51_crit_edge ]
  %state.sroa.47.01470.off32 = phi i32 [ %extract.t1531, %entry ], [ %extract.t1533, %for.body51.for.body51_crit_edge ]
  %state.sroa.47.01470.off40 = phi i32 [ %extract.t1535, %entry ], [ %extract.t1537, %for.body51.for.body51_crit_edge ]
  %state.sroa.47.01470.off48 = phi i32 [ %extract.t1539, %entry ], [ %extract.t1541, %for.body51.for.body51_crit_edge ]
  %state.sroa.47.01470.off56 = phi i32 [ %extract.t1543, %entry ], [ %extract.t1545, %for.body51.for.body51_crit_edge ]
  %state.sroa.36.01469.off0 = phi i32 [ %extract.t1546, %entry ], [ %extract.t1547, %for.body51.for.body51_crit_edge ]
  %state.sroa.36.01469.off32 = phi i32 [ %extract.t1549, %entry ], [ %extract.t1551, %for.body51.for.body51_crit_edge ]
  %state.sroa.36.01469.off40 = phi i32 [ %extract.t1553, %entry ], [ %extract.t1555, %for.body51.for.body51_crit_edge ]
  %state.sroa.36.01469.off48 = phi i32 [ %extract.t1557, %entry ], [ %extract.t1559, %for.body51.for.body51_crit_edge ]
  %state.sroa.36.01469.off56 = phi i32 [ %extract.t1561, %entry ], [ %extract.t1563, %for.body51.for.body51_crit_edge ]
  %state.sroa.25.01468.off0 = phi i32 [ %extract.t1564, %entry ], [ %extract.t1565, %for.body51.for.body51_crit_edge ]
  %state.sroa.25.01468.off32 = phi i32 [ %extract.t1567, %entry ], [ %extract.t1569, %for.body51.for.body51_crit_edge ]
  %state.sroa.25.01468.off40 = phi i32 [ %extract.t1571, %entry ], [ %extract.t1573, %for.body51.for.body51_crit_edge ]
  %state.sroa.25.01468.off48 = phi i32 [ %extract.t1575, %entry ], [ %extract.t1577, %for.body51.for.body51_crit_edge ]
  %state.sroa.25.01468.off56 = phi i32 [ %extract.t1579, %entry ], [ %extract.t1581, %for.body51.for.body51_crit_edge ]
  %state.sroa.14.01467.off0 = phi i32 [ %extract.t1582, %entry ], [ %extract.t1583, %for.body51.for.body51_crit_edge ]
  %state.sroa.14.01467.off32 = phi i32 [ %extract.t1585, %entry ], [ %extract.t1587, %for.body51.for.body51_crit_edge ]
  %state.sroa.14.01467.off40 = phi i32 [ %extract.t1589, %entry ], [ %extract.t1591, %for.body51.for.body51_crit_edge ]
  %state.sroa.14.01467.off48 = phi i32 [ %extract.t1593, %entry ], [ %extract.t1595, %for.body51.for.body51_crit_edge ]
  %state.sroa.14.01467.off56 = phi i32 [ %extract.t1597, %entry ], [ %extract.t1599, %for.body51.for.body51_crit_edge ]
  %state.sroa.0.01466.off0 = phi i32 [ %extract.t1600, %entry ], [ %extract.t1601, %for.body51.for.body51_crit_edge ]
  %state.sroa.0.01466.off32 = phi i32 [ %extract.t1603, %entry ], [ %extract.t1605, %for.body51.for.body51_crit_edge ]
  %state.sroa.0.01466.off40 = phi i32 [ %extract.t1607, %entry ], [ %extract.t1609, %for.body51.for.body51_crit_edge ]
  %state.sroa.0.01466.off48 = phi i32 [ %extract.t1611, %entry ], [ %extract.t1613, %for.body51.for.body51_crit_edge ]
  %state.sroa.0.01466.off56 = phi i32 [ %extract.t1615, %entry ], [ %extract.t1617, %for.body51.for.body51_crit_edge ]
  %K.sroa.80.0.off561465 = phi i32 [ %extract.t1397, %entry ], [ %extract.t1399, %for.body51.for.body51_crit_edge ]
  %K.sroa.80.0.off481464 = phi i32 [ %extract.t1393, %entry ], [ %extract.t1395, %for.body51.for.body51_crit_edge ]
  %K.sroa.80.0.off401463 = phi i32 [ %extract.t1389, %entry ], [ %extract.t1391, %for.body51.for.body51_crit_edge ]
  %K.sroa.80.0.off321462 = phi i32 [ %extract.t1385, %entry ], [ %extract.t1387, %for.body51.for.body51_crit_edge ]
  %K.sroa.80.0.off241461 = phi i32 [ %extract.t1381, %entry ], [ %extract.t1383, %for.body51.for.body51_crit_edge ]
  %K.sroa.80.0.off161460 = phi i32 [ %extract.t1377, %entry ], [ %extract.t1379, %for.body51.for.body51_crit_edge ]
  %K.sroa.80.0.off81459 = phi i32 [ %extract.t1373, %entry ], [ %extract.t1375, %for.body51.for.body51_crit_edge ]
  %K.sroa.80.0.off01458 = phi i32 [ %extract.t1370, %entry ], [ %extract.t1371, %for.body51.for.body51_crit_edge ]
  %K.sroa.69.0.off561457 = phi i32 [ %extract.t1367, %entry ], [ %extract.t1369, %for.body51.for.body51_crit_edge ]
  %K.sroa.69.0.off481456 = phi i32 [ %extract.t1363, %entry ], [ %extract.t1365, %for.body51.for.body51_crit_edge ]
  %K.sroa.69.0.off401455 = phi i32 [ %extract.t1359, %entry ], [ %extract.t1361, %for.body51.for.body51_crit_edge ]
  %K.sroa.69.0.off321454 = phi i32 [ %extract.t1355, %entry ], [ %extract.t1357, %for.body51.for.body51_crit_edge ]
  %K.sroa.69.0.off241453 = phi i32 [ %extract.t1351, %entry ], [ %extract.t1353, %for.body51.for.body51_crit_edge ]
  %K.sroa.69.0.off161452 = phi i32 [ %extract.t1347, %entry ], [ %extract.t1349, %for.body51.for.body51_crit_edge ]
  %K.sroa.69.0.off81451 = phi i32 [ %extract.t1343, %entry ], [ %extract.t1345, %for.body51.for.body51_crit_edge ]
  %K.sroa.69.0.off01450 = phi i32 [ %extract.t1340, %entry ], [ %extract.t1341, %for.body51.for.body51_crit_edge ]
  %K.sroa.58.0.off561449 = phi i32 [ %extract.t1337, %entry ], [ %extract.t1339, %for.body51.for.body51_crit_edge ]
  %K.sroa.58.0.off481448 = phi i32 [ %extract.t1333, %entry ], [ %extract.t1335, %for.body51.for.body51_crit_edge ]
  %K.sroa.58.0.off401447 = phi i32 [ %extract.t1329, %entry ], [ %extract.t1331, %for.body51.for.body51_crit_edge ]
  %K.sroa.58.0.off321446 = phi i32 [ %extract.t1325, %entry ], [ %extract.t1327, %for.body51.for.body51_crit_edge ]
  %K.sroa.58.0.off241445 = phi i32 [ %extract.t1321, %entry ], [ %extract.t1323, %for.body51.for.body51_crit_edge ]
  %K.sroa.58.0.off161444 = phi i32 [ %extract.t1317, %entry ], [ %extract.t1319, %for.body51.for.body51_crit_edge ]
  %K.sroa.58.0.off81443 = phi i32 [ %extract.t1313, %entry ], [ %extract.t1315, %for.body51.for.body51_crit_edge ]
  %K.sroa.58.0.off01442 = phi i32 [ %extract.t1310, %entry ], [ %extract.t1311, %for.body51.for.body51_crit_edge ]
  %K.sroa.47.0.off561441 = phi i32 [ %extract.t1307, %entry ], [ %extract.t1309, %for.body51.for.body51_crit_edge ]
  %K.sroa.47.0.off481440 = phi i32 [ %extract.t1303, %entry ], [ %extract.t1305, %for.body51.for.body51_crit_edge ]
  %K.sroa.47.0.off401439 = phi i32 [ %extract.t1299, %entry ], [ %extract.t1301, %for.body51.for.body51_crit_edge ]
  %K.sroa.47.0.off321438 = phi i32 [ %extract.t1295, %entry ], [ %extract.t1297, %for.body51.for.body51_crit_edge ]
  %K.sroa.47.0.off241437 = phi i32 [ %extract.t1291, %entry ], [ %extract.t1293, %for.body51.for.body51_crit_edge ]
  %K.sroa.47.0.off161436 = phi i32 [ %extract.t1287, %entry ], [ %extract.t1289, %for.body51.for.body51_crit_edge ]
  %K.sroa.47.0.off81435 = phi i32 [ %extract.t1283, %entry ], [ %extract.t1285, %for.body51.for.body51_crit_edge ]
  %K.sroa.47.0.off01434 = phi i32 [ %extract.t1280, %entry ], [ %extract.t1281, %for.body51.for.body51_crit_edge ]
  %K.sroa.36.0.off561433 = phi i32 [ %extract.t1277, %entry ], [ %extract.t1279, %for.body51.for.body51_crit_edge ]
  %K.sroa.36.0.off481432 = phi i32 [ %extract.t1273, %entry ], [ %extract.t1275, %for.body51.for.body51_crit_edge ]
  %K.sroa.36.0.off401431 = phi i32 [ %extract.t1269, %entry ], [ %extract.t1271, %for.body51.for.body51_crit_edge ]
  %K.sroa.36.0.off321430 = phi i32 [ %extract.t1265, %entry ], [ %extract.t1267, %for.body51.for.body51_crit_edge ]
  %K.sroa.36.0.off241429 = phi i32 [ %extract.t1261, %entry ], [ %extract.t1263, %for.body51.for.body51_crit_edge ]
  %K.sroa.36.0.off161428 = phi i32 [ %extract.t1257, %entry ], [ %extract.t1259, %for.body51.for.body51_crit_edge ]
  %K.sroa.36.0.off81427 = phi i32 [ %extract.t1253, %entry ], [ %extract.t1255, %for.body51.for.body51_crit_edge ]
  %K.sroa.36.0.off01426 = phi i32 [ %extract.t1250, %entry ], [ %extract.t1251, %for.body51.for.body51_crit_edge ]
  %K.sroa.25.0.off561425 = phi i32 [ %extract.t1247, %entry ], [ %extract.t1249, %for.body51.for.body51_crit_edge ]
  %K.sroa.25.0.off481424 = phi i32 [ %extract.t1243, %entry ], [ %extract.t1245, %for.body51.for.body51_crit_edge ]
  %K.sroa.25.0.off401423 = phi i32 [ %extract.t1239, %entry ], [ %extract.t1241, %for.body51.for.body51_crit_edge ]
  %K.sroa.25.0.off321422 = phi i32 [ %extract.t1235, %entry ], [ %extract.t1237, %for.body51.for.body51_crit_edge ]
  %K.sroa.25.0.off241421 = phi i32 [ %extract.t1231, %entry ], [ %extract.t1233, %for.body51.for.body51_crit_edge ]
  %K.sroa.25.0.off161420 = phi i32 [ %extract.t1227, %entry ], [ %extract.t1229, %for.body51.for.body51_crit_edge ]
  %K.sroa.25.0.off81419 = phi i32 [ %extract.t1223, %entry ], [ %extract.t1225, %for.body51.for.body51_crit_edge ]
  %K.sroa.25.0.off01418 = phi i32 [ %extract.t1220, %entry ], [ %extract.t1221, %for.body51.for.body51_crit_edge ]
  %K.sroa.14.0.off561417 = phi i32 [ %extract.t1217, %entry ], [ %extract.t1219, %for.body51.for.body51_crit_edge ]
  %K.sroa.14.0.off481416 = phi i32 [ %extract.t1213, %entry ], [ %extract.t1215, %for.body51.for.body51_crit_edge ]
  %K.sroa.14.0.off401415 = phi i32 [ %extract.t1209, %entry ], [ %extract.t1211, %for.body51.for.body51_crit_edge ]
  %K.sroa.14.0.off321414 = phi i32 [ %extract.t1205, %entry ], [ %extract.t1207, %for.body51.for.body51_crit_edge ]
  %K.sroa.14.0.off241413 = phi i32 [ %extract.t1201, %entry ], [ %extract.t1203, %for.body51.for.body51_crit_edge ]
  %K.sroa.14.0.off161412 = phi i32 [ %extract.t1197, %entry ], [ %extract.t1199, %for.body51.for.body51_crit_edge ]
  %K.sroa.14.0.off81411 = phi i32 [ %extract.t1193, %entry ], [ %extract.t1195, %for.body51.for.body51_crit_edge ]
  %K.sroa.14.0.off01410 = phi i32 [ %extract.t1190, %entry ], [ %extract.t1191, %for.body51.for.body51_crit_edge ]
  %K.sroa.0.0.off561409 = phi i32 [ %extract.t1187, %entry ], [ %extract.t1189, %for.body51.for.body51_crit_edge ]
  %K.sroa.0.0.off481408 = phi i32 [ %extract.t1183, %entry ], [ %extract.t1185, %for.body51.for.body51_crit_edge ]
  %K.sroa.0.0.off401407 = phi i32 [ %extract.t1179, %entry ], [ %extract.t1181, %for.body51.for.body51_crit_edge ]
  %K.sroa.0.0.off321406 = phi i32 [ %extract.t1175, %entry ], [ %extract.t1177, %for.body51.for.body51_crit_edge ]
  %K.sroa.0.0.off241405 = phi i32 [ %extract.t1171, %entry ], [ %extract.t1173, %for.body51.for.body51_crit_edge ]
  %K.sroa.0.0.off161404 = phi i32 [ %extract.t1167, %entry ], [ %extract.t1169, %for.body51.for.body51_crit_edge ]
  %K.sroa.0.0.off81403 = phi i32 [ %extract.t1163, %entry ], [ %extract.t1165, %for.body51.for.body51_crit_edge ]
  %K.sroa.0.0.off01402 = phi i32 [ %extract.t, %entry ], [ %extract.t1162, %for.body51.for.body51_crit_edge ]
  %r.01401 = phi i32 [ 0, %entry ], [ %inc836, %for.body51.for.body51_crit_edge ]
  %arrayidx53 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %K.sroa.0.0.off561409
  %24 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %arrayidx53, align 8
  %and = and i32 %K.sroa.80.0.off481464, 255
  %arrayidx57 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and
  %26 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %arrayidx57, align 8
  %xor58 = xor i64 %27, %25
  %and62 = and i32 %K.sroa.69.0.off401455, 255
  %arrayidx63 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and62
  %28 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %arrayidx63, align 8
  %xor64 = xor i64 %xor58, %29
  %and68 = and i32 %K.sroa.58.0.off321446, 255
  %arrayidx69 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and68
  %30 = ptrtoint ptr %arrayidx69 to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %arrayidx69, align 8
  %xor70 = xor i64 %xor64, %31
  %and74 = and i32 %K.sroa.47.0.off241437, 255
  %arrayidx75 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %and74
  %32 = ptrtoint ptr %arrayidx75 to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %arrayidx75, align 8
  %xor76 = xor i64 %xor70, %33
  %and80 = and i32 %K.sroa.36.0.off161428, 255
  %arrayidx81 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and80
  %34 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %arrayidx81, align 8
  %xor82 = xor i64 %xor76, %35
  %and86 = and i32 %K.sroa.25.0.off81419, 255
  %arrayidx87 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and86
  %36 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %arrayidx87, align 8
  %xor88 = xor i64 %xor82, %37
  %and91 = and i32 %K.sroa.14.0.off01410, 255
  %arrayidx92 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and91
  %38 = ptrtoint ptr %arrayidx92 to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %arrayidx92, align 8
  %xor93 = xor i64 %xor88, %39
  %arrayidx94 = getelementptr [10 x i64], ptr @rc, i32 0, i32 %r.01401
  %40 = ptrtoint ptr %arrayidx94 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %arrayidx94, align 8
  %xor95 = xor i64 %xor93, %41
  %arrayidx100 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %K.sroa.14.0.off561417
  %42 = ptrtoint ptr %arrayidx100 to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %arrayidx100, align 8
  %and104 = and i32 %K.sroa.0.0.off481408, 255
  %arrayidx105 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and104
  %44 = ptrtoint ptr %arrayidx105 to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %arrayidx105, align 8
  %xor106 = xor i64 %45, %43
  %and110 = and i32 %K.sroa.80.0.off401463, 255
  %arrayidx111 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and110
  %46 = ptrtoint ptr %arrayidx111 to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %arrayidx111, align 8
  %xor112 = xor i64 %xor106, %47
  %and116 = and i32 %K.sroa.69.0.off321454, 255
  %arrayidx117 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and116
  %48 = ptrtoint ptr %arrayidx117 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %arrayidx117, align 8
  %xor118 = xor i64 %xor112, %49
  %and122 = and i32 %K.sroa.58.0.off241445, 255
  %arrayidx123 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %and122
  %50 = ptrtoint ptr %arrayidx123 to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %arrayidx123, align 8
  %xor124 = xor i64 %xor118, %51
  %and128 = and i32 %K.sroa.47.0.off161436, 255
  %arrayidx129 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and128
  %52 = ptrtoint ptr %arrayidx129 to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %arrayidx129, align 8
  %xor130 = xor i64 %xor124, %53
  %and134 = and i32 %K.sroa.36.0.off81427, 255
  %arrayidx135 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and134
  %54 = ptrtoint ptr %arrayidx135 to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %arrayidx135, align 8
  %xor136 = xor i64 %xor130, %55
  %and139 = and i32 %K.sroa.25.0.off01418, 255
  %arrayidx140 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and139
  %56 = ptrtoint ptr %arrayidx140 to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %arrayidx140, align 8
  %xor141 = xor i64 %xor136, %57
  %arrayidx146 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %K.sroa.25.0.off561425
  %58 = ptrtoint ptr %arrayidx146 to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %arrayidx146, align 8
  %and150 = and i32 %K.sroa.14.0.off481416, 255
  %arrayidx151 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and150
  %60 = ptrtoint ptr %arrayidx151 to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %arrayidx151, align 8
  %xor152 = xor i64 %61, %59
  %and156 = and i32 %K.sroa.0.0.off401407, 255
  %arrayidx157 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and156
  %62 = ptrtoint ptr %arrayidx157 to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %arrayidx157, align 8
  %xor158 = xor i64 %xor152, %63
  %and162 = and i32 %K.sroa.80.0.off321462, 255
  %arrayidx163 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and162
  %64 = ptrtoint ptr %arrayidx163 to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %arrayidx163, align 8
  %xor164 = xor i64 %xor158, %65
  %and168 = and i32 %K.sroa.69.0.off241453, 255
  %arrayidx169 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %and168
  %66 = ptrtoint ptr %arrayidx169 to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %arrayidx169, align 8
  %xor170 = xor i64 %xor164, %67
  %and174 = and i32 %K.sroa.58.0.off161444, 255
  %arrayidx175 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and174
  %68 = ptrtoint ptr %arrayidx175 to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %arrayidx175, align 8
  %xor176 = xor i64 %xor170, %69
  %and180 = and i32 %K.sroa.47.0.off81435, 255
  %arrayidx181 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and180
  %70 = ptrtoint ptr %arrayidx181 to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %arrayidx181, align 8
  %xor182 = xor i64 %xor176, %71
  %and185 = and i32 %K.sroa.36.0.off01426, 255
  %arrayidx186 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and185
  %72 = ptrtoint ptr %arrayidx186 to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %arrayidx186, align 8
  %xor187 = xor i64 %xor182, %73
  %arrayidx192 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %K.sroa.36.0.off561433
  %74 = ptrtoint ptr %arrayidx192 to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %arrayidx192, align 8
  %and196 = and i32 %K.sroa.25.0.off481424, 255
  %arrayidx197 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and196
  %76 = ptrtoint ptr %arrayidx197 to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %arrayidx197, align 8
  %xor198 = xor i64 %77, %75
  %and202 = and i32 %K.sroa.14.0.off401415, 255
  %arrayidx203 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and202
  %78 = ptrtoint ptr %arrayidx203 to i32
  call void @__asan_load8_noabort(i32 %78)
  %79 = load i64, ptr %arrayidx203, align 8
  %xor204 = xor i64 %xor198, %79
  %and208 = and i32 %K.sroa.0.0.off321406, 255
  %arrayidx209 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and208
  %80 = ptrtoint ptr %arrayidx209 to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %arrayidx209, align 8
  %xor210 = xor i64 %xor204, %81
  %and214 = and i32 %K.sroa.80.0.off241461, 255
  %arrayidx215 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %and214
  %82 = ptrtoint ptr %arrayidx215 to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %arrayidx215, align 8
  %xor216 = xor i64 %xor210, %83
  %and220 = and i32 %K.sroa.69.0.off161452, 255
  %arrayidx221 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and220
  %84 = ptrtoint ptr %arrayidx221 to i32
  call void @__asan_load8_noabort(i32 %84)
  %85 = load i64, ptr %arrayidx221, align 8
  %xor222 = xor i64 %xor216, %85
  %and226 = and i32 %K.sroa.58.0.off81443, 255
  %arrayidx227 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and226
  %86 = ptrtoint ptr %arrayidx227 to i32
  call void @__asan_load8_noabort(i32 %86)
  %87 = load i64, ptr %arrayidx227, align 8
  %xor228 = xor i64 %xor222, %87
  %and231 = and i32 %K.sroa.47.0.off01434, 255
  %arrayidx232 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and231
  %88 = ptrtoint ptr %arrayidx232 to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %arrayidx232, align 8
  %xor233 = xor i64 %xor228, %89
  %arrayidx238 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %K.sroa.47.0.off561441
  %90 = ptrtoint ptr %arrayidx238 to i32
  call void @__asan_load8_noabort(i32 %90)
  %91 = load i64, ptr %arrayidx238, align 8
  %and242 = and i32 %K.sroa.36.0.off481432, 255
  %arrayidx243 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and242
  %92 = ptrtoint ptr %arrayidx243 to i32
  call void @__asan_load8_noabort(i32 %92)
  %93 = load i64, ptr %arrayidx243, align 8
  %xor244 = xor i64 %93, %91
  %and248 = and i32 %K.sroa.25.0.off401423, 255
  %arrayidx249 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and248
  %94 = ptrtoint ptr %arrayidx249 to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %arrayidx249, align 8
  %xor250 = xor i64 %xor244, %95
  %and254 = and i32 %K.sroa.14.0.off321414, 255
  %arrayidx255 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and254
  %96 = ptrtoint ptr %arrayidx255 to i32
  call void @__asan_load8_noabort(i32 %96)
  %97 = load i64, ptr %arrayidx255, align 8
  %xor256 = xor i64 %xor250, %97
  %and260 = and i32 %K.sroa.0.0.off241405, 255
  %arrayidx261 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %and260
  %98 = ptrtoint ptr %arrayidx261 to i32
  call void @__asan_load8_noabort(i32 %98)
  %99 = load i64, ptr %arrayidx261, align 8
  %xor262 = xor i64 %xor256, %99
  %and266 = and i32 %K.sroa.80.0.off161460, 255
  %arrayidx267 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and266
  %100 = ptrtoint ptr %arrayidx267 to i32
  call void @__asan_load8_noabort(i32 %100)
  %101 = load i64, ptr %arrayidx267, align 8
  %xor268 = xor i64 %xor262, %101
  %and272 = and i32 %K.sroa.69.0.off81451, 255
  %arrayidx273 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and272
  %102 = ptrtoint ptr %arrayidx273 to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %arrayidx273, align 8
  %xor274 = xor i64 %xor268, %103
  %and277 = and i32 %K.sroa.58.0.off01442, 255
  %arrayidx278 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and277
  %104 = ptrtoint ptr %arrayidx278 to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %arrayidx278, align 8
  %xor279 = xor i64 %xor274, %105
  %arrayidx284 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %K.sroa.58.0.off561449
  %106 = ptrtoint ptr %arrayidx284 to i32
  call void @__asan_load8_noabort(i32 %106)
  %107 = load i64, ptr %arrayidx284, align 8
  %and288 = and i32 %K.sroa.47.0.off481440, 255
  %arrayidx289 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and288
  %108 = ptrtoint ptr %arrayidx289 to i32
  call void @__asan_load8_noabort(i32 %108)
  %109 = load i64, ptr %arrayidx289, align 8
  %xor290 = xor i64 %109, %107
  %and294 = and i32 %K.sroa.36.0.off401431, 255
  %arrayidx295 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and294
  %110 = ptrtoint ptr %arrayidx295 to i32
  call void @__asan_load8_noabort(i32 %110)
  %111 = load i64, ptr %arrayidx295, align 8
  %xor296 = xor i64 %xor290, %111
  %and300 = and i32 %K.sroa.25.0.off321422, 255
  %arrayidx301 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and300
  %112 = ptrtoint ptr %arrayidx301 to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %arrayidx301, align 8
  %xor302 = xor i64 %xor296, %113
  %and306 = and i32 %K.sroa.14.0.off241413, 255
  %arrayidx307 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %and306
  %114 = ptrtoint ptr %arrayidx307 to i32
  call void @__asan_load8_noabort(i32 %114)
  %115 = load i64, ptr %arrayidx307, align 8
  %xor308 = xor i64 %xor302, %115
  %and312 = and i32 %K.sroa.0.0.off161404, 255
  %arrayidx313 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and312
  %116 = ptrtoint ptr %arrayidx313 to i32
  call void @__asan_load8_noabort(i32 %116)
  %117 = load i64, ptr %arrayidx313, align 8
  %xor314 = xor i64 %xor308, %117
  %and318 = and i32 %K.sroa.80.0.off81459, 255
  %arrayidx319 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and318
  %118 = ptrtoint ptr %arrayidx319 to i32
  call void @__asan_load8_noabort(i32 %118)
  %119 = load i64, ptr %arrayidx319, align 8
  %xor320 = xor i64 %xor314, %119
  %and323 = and i32 %K.sroa.69.0.off01450, 255
  %arrayidx324 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and323
  %120 = ptrtoint ptr %arrayidx324 to i32
  call void @__asan_load8_noabort(i32 %120)
  %121 = load i64, ptr %arrayidx324, align 8
  %xor325 = xor i64 %xor320, %121
  %arrayidx330 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %K.sroa.69.0.off561457
  %122 = ptrtoint ptr %arrayidx330 to i32
  call void @__asan_load8_noabort(i32 %122)
  %123 = load i64, ptr %arrayidx330, align 8
  %and334 = and i32 %K.sroa.58.0.off481448, 255
  %arrayidx335 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and334
  %124 = ptrtoint ptr %arrayidx335 to i32
  call void @__asan_load8_noabort(i32 %124)
  %125 = load i64, ptr %arrayidx335, align 8
  %xor336 = xor i64 %125, %123
  %and340 = and i32 %K.sroa.47.0.off401439, 255
  %arrayidx341 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and340
  %126 = ptrtoint ptr %arrayidx341 to i32
  call void @__asan_load8_noabort(i32 %126)
  %127 = load i64, ptr %arrayidx341, align 8
  %xor342 = xor i64 %xor336, %127
  %and346 = and i32 %K.sroa.36.0.off321430, 255
  %arrayidx347 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and346
  %128 = ptrtoint ptr %arrayidx347 to i32
  call void @__asan_load8_noabort(i32 %128)
  %129 = load i64, ptr %arrayidx347, align 8
  %xor348 = xor i64 %xor342, %129
  %and352 = and i32 %K.sroa.25.0.off241421, 255
  %arrayidx353 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %and352
  %130 = ptrtoint ptr %arrayidx353 to i32
  call void @__asan_load8_noabort(i32 %130)
  %131 = load i64, ptr %arrayidx353, align 8
  %xor354 = xor i64 %xor348, %131
  %and358 = and i32 %K.sroa.14.0.off161412, 255
  %arrayidx359 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and358
  %132 = ptrtoint ptr %arrayidx359 to i32
  call void @__asan_load8_noabort(i32 %132)
  %133 = load i64, ptr %arrayidx359, align 8
  %xor360 = xor i64 %xor354, %133
  %and364 = and i32 %K.sroa.0.0.off81403, 255
  %arrayidx365 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and364
  %134 = ptrtoint ptr %arrayidx365 to i32
  call void @__asan_load8_noabort(i32 %134)
  %135 = load i64, ptr %arrayidx365, align 8
  %xor366 = xor i64 %xor360, %135
  %and369 = and i32 %K.sroa.80.0.off01458, 255
  %arrayidx370 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and369
  %136 = ptrtoint ptr %arrayidx370 to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %arrayidx370, align 8
  %xor371 = xor i64 %xor366, %137
  %arrayidx376 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %K.sroa.80.0.off561465
  %138 = ptrtoint ptr %arrayidx376 to i32
  call void @__asan_load8_noabort(i32 %138)
  %139 = load i64, ptr %arrayidx376, align 8
  %and380 = and i32 %K.sroa.69.0.off481456, 255
  %arrayidx381 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and380
  %140 = ptrtoint ptr %arrayidx381 to i32
  call void @__asan_load8_noabort(i32 %140)
  %141 = load i64, ptr %arrayidx381, align 8
  %xor382 = xor i64 %141, %139
  %and386 = and i32 %K.sroa.58.0.off401447, 255
  %arrayidx387 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and386
  %142 = ptrtoint ptr %arrayidx387 to i32
  call void @__asan_load8_noabort(i32 %142)
  %143 = load i64, ptr %arrayidx387, align 8
  %xor388 = xor i64 %xor382, %143
  %and392 = and i32 %K.sroa.47.0.off321438, 255
  %arrayidx393 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and392
  %144 = ptrtoint ptr %arrayidx393 to i32
  call void @__asan_load8_noabort(i32 %144)
  %145 = load i64, ptr %arrayidx393, align 8
  %xor394 = xor i64 %xor388, %145
  %and398 = and i32 %K.sroa.36.0.off241429, 255
  %arrayidx399 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %and398
  %146 = ptrtoint ptr %arrayidx399 to i32
  call void @__asan_load8_noabort(i32 %146)
  %147 = load i64, ptr %arrayidx399, align 8
  %xor400 = xor i64 %xor394, %147
  %and404 = and i32 %K.sroa.25.0.off161420, 255
  %arrayidx405 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and404
  %148 = ptrtoint ptr %arrayidx405 to i32
  call void @__asan_load8_noabort(i32 %148)
  %149 = load i64, ptr %arrayidx405, align 8
  %xor406 = xor i64 %xor400, %149
  %and410 = and i32 %K.sroa.14.0.off81411, 255
  %arrayidx411 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and410
  %150 = ptrtoint ptr %arrayidx411 to i32
  call void @__asan_load8_noabort(i32 %150)
  %151 = load i64, ptr %arrayidx411, align 8
  %xor412 = xor i64 %xor406, %151
  %and415 = and i32 %K.sroa.0.0.off01402, 255
  %arrayidx416 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and415
  %152 = ptrtoint ptr %arrayidx416 to i32
  call void @__asan_load8_noabort(i32 %152)
  %153 = load i64, ptr %arrayidx416, align 8
  %xor417 = xor i64 %xor412, %153
  %arrayidx438 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %state.sroa.0.01466.off56
  %154 = ptrtoint ptr %arrayidx438 to i32
  call void @__asan_load8_noabort(i32 %154)
  %155 = load i64, ptr %arrayidx438, align 8
  %and442 = and i32 %state.sroa.80.01473.off48, 255
  %arrayidx443 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and442
  %156 = ptrtoint ptr %arrayidx443 to i32
  call void @__asan_load8_noabort(i32 %156)
  %157 = load i64, ptr %arrayidx443, align 8
  %and448 = and i32 %state.sroa.69.01472.off40, 255
  %arrayidx449 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and448
  %158 = ptrtoint ptr %arrayidx449 to i32
  call void @__asan_load8_noabort(i32 %158)
  %159 = load i64, ptr %arrayidx449, align 8
  %and454 = and i32 %state.sroa.58.01471.off32, 255
  %arrayidx455 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and454
  %160 = ptrtoint ptr %arrayidx455 to i32
  call void @__asan_load8_noabort(i32 %160)
  %161 = load i64, ptr %arrayidx455, align 8
  %162 = lshr i32 %state.sroa.47.01470.off0, 24
  %arrayidx461 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %162
  %163 = ptrtoint ptr %arrayidx461 to i32
  call void @__asan_load8_noabort(i32 %163)
  %164 = load i64, ptr %arrayidx461, align 8
  %165 = lshr i32 %state.sroa.36.01469.off0, 16
  %and466 = and i32 %165, 255
  %arrayidx467 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and466
  %166 = ptrtoint ptr %arrayidx467 to i32
  call void @__asan_load8_noabort(i32 %166)
  %167 = load i64, ptr %arrayidx467, align 8
  %168 = lshr i32 %state.sroa.25.01468.off0, 8
  %and472 = and i32 %168, 255
  %arrayidx473 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and472
  %169 = ptrtoint ptr %arrayidx473 to i32
  call void @__asan_load8_noabort(i32 %169)
  %170 = load i64, ptr %arrayidx473, align 8
  %and477 = and i32 %state.sroa.14.01467.off0, 255
  %arrayidx478 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and477
  %171 = ptrtoint ptr %arrayidx478 to i32
  call void @__asan_load8_noabort(i32 %171)
  %172 = load i64, ptr %arrayidx478, align 8
  %xor444 = xor i64 %155, %xor95
  %xor450 = xor i64 %xor444, %157
  %xor456 = xor i64 %xor450, %159
  %xor462 = xor i64 %xor456, %161
  %xor468 = xor i64 %xor462, %164
  %xor474 = xor i64 %xor468, %167
  %xor479 = xor i64 %xor474, %170
  %xor481 = xor i64 %xor479, %172
  %arrayidx486 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %state.sroa.14.01467.off56
  %173 = ptrtoint ptr %arrayidx486 to i32
  call void @__asan_load8_noabort(i32 %173)
  %174 = load i64, ptr %arrayidx486, align 8
  %and490 = and i32 %state.sroa.0.01466.off48, 255
  %arrayidx491 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and490
  %175 = ptrtoint ptr %arrayidx491 to i32
  call void @__asan_load8_noabort(i32 %175)
  %176 = load i64, ptr %arrayidx491, align 8
  %and496 = and i32 %state.sroa.80.01473.off40, 255
  %arrayidx497 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and496
  %177 = ptrtoint ptr %arrayidx497 to i32
  call void @__asan_load8_noabort(i32 %177)
  %178 = load i64, ptr %arrayidx497, align 8
  %and502 = and i32 %state.sroa.69.01472.off32, 255
  %arrayidx503 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and502
  %179 = ptrtoint ptr %arrayidx503 to i32
  call void @__asan_load8_noabort(i32 %179)
  %180 = load i64, ptr %arrayidx503, align 8
  %181 = lshr i32 %state.sroa.58.01471.off0, 24
  %arrayidx509 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %181
  %182 = ptrtoint ptr %arrayidx509 to i32
  call void @__asan_load8_noabort(i32 %182)
  %183 = load i64, ptr %arrayidx509, align 8
  %184 = lshr i32 %state.sroa.47.01470.off0, 16
  %and514 = and i32 %184, 255
  %arrayidx515 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and514
  %185 = ptrtoint ptr %arrayidx515 to i32
  call void @__asan_load8_noabort(i32 %185)
  %186 = load i64, ptr %arrayidx515, align 8
  %187 = lshr i32 %state.sroa.36.01469.off0, 8
  %and520 = and i32 %187, 255
  %arrayidx521 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and520
  %188 = ptrtoint ptr %arrayidx521 to i32
  call void @__asan_load8_noabort(i32 %188)
  %189 = load i64, ptr %arrayidx521, align 8
  %and525 = and i32 %state.sroa.25.01468.off0, 255
  %arrayidx526 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and525
  %190 = ptrtoint ptr %arrayidx526 to i32
  call void @__asan_load8_noabort(i32 %190)
  %191 = load i64, ptr %arrayidx526, align 8
  %xor492 = xor i64 %174, %xor141
  %xor498 = xor i64 %xor492, %176
  %xor504 = xor i64 %xor498, %178
  %xor510 = xor i64 %xor504, %180
  %xor516 = xor i64 %xor510, %183
  %xor522 = xor i64 %xor516, %186
  %xor527 = xor i64 %xor522, %189
  %xor529 = xor i64 %xor527, %191
  %arrayidx534 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %state.sroa.25.01468.off56
  %192 = ptrtoint ptr %arrayidx534 to i32
  call void @__asan_load8_noabort(i32 %192)
  %193 = load i64, ptr %arrayidx534, align 8
  %and538 = and i32 %state.sroa.14.01467.off48, 255
  %arrayidx539 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and538
  %194 = ptrtoint ptr %arrayidx539 to i32
  call void @__asan_load8_noabort(i32 %194)
  %195 = load i64, ptr %arrayidx539, align 8
  %and544 = and i32 %state.sroa.0.01466.off40, 255
  %arrayidx545 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and544
  %196 = ptrtoint ptr %arrayidx545 to i32
  call void @__asan_load8_noabort(i32 %196)
  %197 = load i64, ptr %arrayidx545, align 8
  %and550 = and i32 %state.sroa.80.01473.off32, 255
  %arrayidx551 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and550
  %198 = ptrtoint ptr %arrayidx551 to i32
  call void @__asan_load8_noabort(i32 %198)
  %199 = load i64, ptr %arrayidx551, align 8
  %200 = lshr i32 %state.sroa.69.01472.off0, 24
  %arrayidx557 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %200
  %201 = ptrtoint ptr %arrayidx557 to i32
  call void @__asan_load8_noabort(i32 %201)
  %202 = load i64, ptr %arrayidx557, align 8
  %203 = lshr i32 %state.sroa.58.01471.off0, 16
  %and562 = and i32 %203, 255
  %arrayidx563 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and562
  %204 = ptrtoint ptr %arrayidx563 to i32
  call void @__asan_load8_noabort(i32 %204)
  %205 = load i64, ptr %arrayidx563, align 8
  %206 = lshr i32 %state.sroa.47.01470.off0, 8
  %and568 = and i32 %206, 255
  %arrayidx569 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and568
  %207 = ptrtoint ptr %arrayidx569 to i32
  call void @__asan_load8_noabort(i32 %207)
  %208 = load i64, ptr %arrayidx569, align 8
  %and573 = and i32 %state.sroa.36.01469.off0, 255
  %arrayidx574 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and573
  %209 = ptrtoint ptr %arrayidx574 to i32
  call void @__asan_load8_noabort(i32 %209)
  %210 = load i64, ptr %arrayidx574, align 8
  %xor540 = xor i64 %193, %xor187
  %xor546 = xor i64 %xor540, %195
  %xor552 = xor i64 %xor546, %197
  %xor558 = xor i64 %xor552, %199
  %xor564 = xor i64 %xor558, %202
  %xor570 = xor i64 %xor564, %205
  %xor575 = xor i64 %xor570, %208
  %xor577 = xor i64 %xor575, %210
  %arrayidx582 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %state.sroa.36.01469.off56
  %211 = ptrtoint ptr %arrayidx582 to i32
  call void @__asan_load8_noabort(i32 %211)
  %212 = load i64, ptr %arrayidx582, align 8
  %and586 = and i32 %state.sroa.25.01468.off48, 255
  %arrayidx587 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and586
  %213 = ptrtoint ptr %arrayidx587 to i32
  call void @__asan_load8_noabort(i32 %213)
  %214 = load i64, ptr %arrayidx587, align 8
  %and592 = and i32 %state.sroa.14.01467.off40, 255
  %arrayidx593 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and592
  %215 = ptrtoint ptr %arrayidx593 to i32
  call void @__asan_load8_noabort(i32 %215)
  %216 = load i64, ptr %arrayidx593, align 8
  %and598 = and i32 %state.sroa.0.01466.off32, 255
  %arrayidx599 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and598
  %217 = ptrtoint ptr %arrayidx599 to i32
  call void @__asan_load8_noabort(i32 %217)
  %218 = load i64, ptr %arrayidx599, align 8
  %219 = lshr i32 %state.sroa.80.01473.off0, 24
  %arrayidx605 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %219
  %220 = ptrtoint ptr %arrayidx605 to i32
  call void @__asan_load8_noabort(i32 %220)
  %221 = load i64, ptr %arrayidx605, align 8
  %222 = lshr i32 %state.sroa.69.01472.off0, 16
  %and610 = and i32 %222, 255
  %arrayidx611 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and610
  %223 = ptrtoint ptr %arrayidx611 to i32
  call void @__asan_load8_noabort(i32 %223)
  %224 = load i64, ptr %arrayidx611, align 8
  %225 = lshr i32 %state.sroa.58.01471.off0, 8
  %and616 = and i32 %225, 255
  %arrayidx617 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and616
  %226 = ptrtoint ptr %arrayidx617 to i32
  call void @__asan_load8_noabort(i32 %226)
  %227 = load i64, ptr %arrayidx617, align 8
  %and621 = and i32 %state.sroa.47.01470.off0, 255
  %arrayidx622 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and621
  %228 = ptrtoint ptr %arrayidx622 to i32
  call void @__asan_load8_noabort(i32 %228)
  %229 = load i64, ptr %arrayidx622, align 8
  %xor588 = xor i64 %212, %xor233
  %xor594 = xor i64 %xor588, %214
  %xor600 = xor i64 %xor594, %216
  %xor606 = xor i64 %xor600, %218
  %xor612 = xor i64 %xor606, %221
  %xor618 = xor i64 %xor612, %224
  %xor623 = xor i64 %xor618, %227
  %xor625 = xor i64 %xor623, %229
  %arrayidx630 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %state.sroa.47.01470.off56
  %230 = ptrtoint ptr %arrayidx630 to i32
  call void @__asan_load8_noabort(i32 %230)
  %231 = load i64, ptr %arrayidx630, align 8
  %and634 = and i32 %state.sroa.36.01469.off48, 255
  %arrayidx635 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and634
  %232 = ptrtoint ptr %arrayidx635 to i32
  call void @__asan_load8_noabort(i32 %232)
  %233 = load i64, ptr %arrayidx635, align 8
  %and640 = and i32 %state.sroa.25.01468.off40, 255
  %arrayidx641 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and640
  %234 = ptrtoint ptr %arrayidx641 to i32
  call void @__asan_load8_noabort(i32 %234)
  %235 = load i64, ptr %arrayidx641, align 8
  %and646 = and i32 %state.sroa.14.01467.off32, 255
  %arrayidx647 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and646
  %236 = ptrtoint ptr %arrayidx647 to i32
  call void @__asan_load8_noabort(i32 %236)
  %237 = load i64, ptr %arrayidx647, align 8
  %238 = lshr i32 %state.sroa.0.01466.off0, 24
  %arrayidx653 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %238
  %239 = ptrtoint ptr %arrayidx653 to i32
  call void @__asan_load8_noabort(i32 %239)
  %240 = load i64, ptr %arrayidx653, align 8
  %241 = lshr i32 %state.sroa.80.01473.off0, 16
  %and658 = and i32 %241, 255
  %arrayidx659 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and658
  %242 = ptrtoint ptr %arrayidx659 to i32
  call void @__asan_load8_noabort(i32 %242)
  %243 = load i64, ptr %arrayidx659, align 8
  %244 = lshr i32 %state.sroa.69.01472.off0, 8
  %and664 = and i32 %244, 255
  %arrayidx665 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and664
  %245 = ptrtoint ptr %arrayidx665 to i32
  call void @__asan_load8_noabort(i32 %245)
  %246 = load i64, ptr %arrayidx665, align 8
  %and669 = and i32 %state.sroa.58.01471.off0, 255
  %arrayidx670 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and669
  %247 = ptrtoint ptr %arrayidx670 to i32
  call void @__asan_load8_noabort(i32 %247)
  %248 = load i64, ptr %arrayidx670, align 8
  %xor636 = xor i64 %231, %xor279
  %xor642 = xor i64 %xor636, %233
  %xor648 = xor i64 %xor642, %235
  %xor654 = xor i64 %xor648, %237
  %xor660 = xor i64 %xor654, %240
  %xor666 = xor i64 %xor660, %243
  %xor671 = xor i64 %xor666, %246
  %xor673 = xor i64 %xor671, %248
  %arrayidx678 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %state.sroa.58.01471.off56
  %249 = ptrtoint ptr %arrayidx678 to i32
  call void @__asan_load8_noabort(i32 %249)
  %250 = load i64, ptr %arrayidx678, align 8
  %and682 = and i32 %state.sroa.47.01470.off48, 255
  %arrayidx683 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and682
  %251 = ptrtoint ptr %arrayidx683 to i32
  call void @__asan_load8_noabort(i32 %251)
  %252 = load i64, ptr %arrayidx683, align 8
  %and688 = and i32 %state.sroa.36.01469.off40, 255
  %arrayidx689 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and688
  %253 = ptrtoint ptr %arrayidx689 to i32
  call void @__asan_load8_noabort(i32 %253)
  %254 = load i64, ptr %arrayidx689, align 8
  %and694 = and i32 %state.sroa.25.01468.off32, 255
  %arrayidx695 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and694
  %255 = ptrtoint ptr %arrayidx695 to i32
  call void @__asan_load8_noabort(i32 %255)
  %256 = load i64, ptr %arrayidx695, align 8
  %257 = lshr i32 %state.sroa.14.01467.off0, 24
  %arrayidx701 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %257
  %258 = ptrtoint ptr %arrayidx701 to i32
  call void @__asan_load8_noabort(i32 %258)
  %259 = load i64, ptr %arrayidx701, align 8
  %260 = lshr i32 %state.sroa.0.01466.off0, 16
  %and706 = and i32 %260, 255
  %arrayidx707 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and706
  %261 = ptrtoint ptr %arrayidx707 to i32
  call void @__asan_load8_noabort(i32 %261)
  %262 = load i64, ptr %arrayidx707, align 8
  %263 = lshr i32 %state.sroa.80.01473.off0, 8
  %and712 = and i32 %263, 255
  %arrayidx713 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and712
  %264 = ptrtoint ptr %arrayidx713 to i32
  call void @__asan_load8_noabort(i32 %264)
  %265 = load i64, ptr %arrayidx713, align 8
  %and717 = and i32 %state.sroa.69.01472.off0, 255
  %arrayidx718 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and717
  %266 = ptrtoint ptr %arrayidx718 to i32
  call void @__asan_load8_noabort(i32 %266)
  %267 = load i64, ptr %arrayidx718, align 8
  %xor684 = xor i64 %250, %xor325
  %xor690 = xor i64 %xor684, %252
  %xor696 = xor i64 %xor690, %254
  %xor702 = xor i64 %xor696, %256
  %xor708 = xor i64 %xor702, %259
  %xor714 = xor i64 %xor708, %262
  %xor719 = xor i64 %xor714, %265
  %xor721 = xor i64 %xor719, %267
  %arrayidx726 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %state.sroa.69.01472.off56
  %268 = ptrtoint ptr %arrayidx726 to i32
  call void @__asan_load8_noabort(i32 %268)
  %269 = load i64, ptr %arrayidx726, align 8
  %and730 = and i32 %state.sroa.58.01471.off48, 255
  %arrayidx731 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and730
  %270 = ptrtoint ptr %arrayidx731 to i32
  call void @__asan_load8_noabort(i32 %270)
  %271 = load i64, ptr %arrayidx731, align 8
  %and736 = and i32 %state.sroa.47.01470.off40, 255
  %arrayidx737 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and736
  %272 = ptrtoint ptr %arrayidx737 to i32
  call void @__asan_load8_noabort(i32 %272)
  %273 = load i64, ptr %arrayidx737, align 8
  %and742 = and i32 %state.sroa.36.01469.off32, 255
  %arrayidx743 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and742
  %274 = ptrtoint ptr %arrayidx743 to i32
  call void @__asan_load8_noabort(i32 %274)
  %275 = load i64, ptr %arrayidx743, align 8
  %276 = lshr i32 %state.sroa.25.01468.off0, 24
  %arrayidx749 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %276
  %277 = ptrtoint ptr %arrayidx749 to i32
  call void @__asan_load8_noabort(i32 %277)
  %278 = load i64, ptr %arrayidx749, align 8
  %279 = lshr i32 %state.sroa.14.01467.off0, 16
  %and754 = and i32 %279, 255
  %arrayidx755 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and754
  %280 = ptrtoint ptr %arrayidx755 to i32
  call void @__asan_load8_noabort(i32 %280)
  %281 = load i64, ptr %arrayidx755, align 8
  %282 = lshr i32 %state.sroa.0.01466.off0, 8
  %and760 = and i32 %282, 255
  %arrayidx761 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and760
  %283 = ptrtoint ptr %arrayidx761 to i32
  call void @__asan_load8_noabort(i32 %283)
  %284 = load i64, ptr %arrayidx761, align 8
  %and765 = and i32 %state.sroa.80.01473.off0, 255
  %arrayidx766 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and765
  %285 = ptrtoint ptr %arrayidx766 to i32
  call void @__asan_load8_noabort(i32 %285)
  %286 = load i64, ptr %arrayidx766, align 8
  %xor732 = xor i64 %269, %xor371
  %xor738 = xor i64 %xor732, %271
  %xor744 = xor i64 %xor738, %273
  %xor750 = xor i64 %xor744, %275
  %xor756 = xor i64 %xor750, %278
  %xor762 = xor i64 %xor756, %281
  %xor767 = xor i64 %xor762, %284
  %xor769 = xor i64 %xor767, %286
  %arrayidx774 = getelementptr [256 x i64], ptr @C0, i32 0, i32 %state.sroa.80.01473.off56
  %287 = ptrtoint ptr %arrayidx774 to i32
  call void @__asan_load8_noabort(i32 %287)
  %288 = load i64, ptr %arrayidx774, align 8
  %and778 = and i32 %state.sroa.69.01472.off48, 255
  %arrayidx779 = getelementptr [256 x i64], ptr @C1, i32 0, i32 %and778
  %289 = ptrtoint ptr %arrayidx779 to i32
  call void @__asan_load8_noabort(i32 %289)
  %290 = load i64, ptr %arrayidx779, align 8
  %and784 = and i32 %state.sroa.58.01471.off40, 255
  %arrayidx785 = getelementptr [256 x i64], ptr @C2, i32 0, i32 %and784
  %291 = ptrtoint ptr %arrayidx785 to i32
  call void @__asan_load8_noabort(i32 %291)
  %292 = load i64, ptr %arrayidx785, align 8
  %and790 = and i32 %state.sroa.47.01470.off32, 255
  %arrayidx791 = getelementptr [256 x i64], ptr @C3, i32 0, i32 %and790
  %293 = ptrtoint ptr %arrayidx791 to i32
  call void @__asan_load8_noabort(i32 %293)
  %294 = load i64, ptr %arrayidx791, align 8
  %295 = lshr i32 %state.sroa.36.01469.off0, 24
  %arrayidx797 = getelementptr [256 x i64], ptr @C4, i32 0, i32 %295
  %296 = ptrtoint ptr %arrayidx797 to i32
  call void @__asan_load8_noabort(i32 %296)
  %297 = load i64, ptr %arrayidx797, align 8
  %298 = lshr i32 %state.sroa.25.01468.off0, 16
  %and802 = and i32 %298, 255
  %arrayidx803 = getelementptr [256 x i64], ptr @C5, i32 0, i32 %and802
  %299 = ptrtoint ptr %arrayidx803 to i32
  call void @__asan_load8_noabort(i32 %299)
  %300 = load i64, ptr %arrayidx803, align 8
  %301 = lshr i32 %state.sroa.14.01467.off0, 8
  %and808 = and i32 %301, 255
  %arrayidx809 = getelementptr [256 x i64], ptr @C6, i32 0, i32 %and808
  %302 = ptrtoint ptr %arrayidx809 to i32
  call void @__asan_load8_noabort(i32 %302)
  %303 = load i64, ptr %arrayidx809, align 8
  %and813 = and i32 %state.sroa.0.01466.off0, 255
  %arrayidx814 = getelementptr [256 x i64], ptr @C7, i32 0, i32 %and813
  %304 = ptrtoint ptr %arrayidx814 to i32
  call void @__asan_load8_noabort(i32 %304)
  %305 = load i64, ptr %arrayidx814, align 8
  %xor780 = xor i64 %288, %xor417
  %xor786 = xor i64 %xor780, %290
  %xor792 = xor i64 %xor786, %292
  %xor798 = xor i64 %xor792, %294
  %xor804 = xor i64 %xor798, %297
  %xor810 = xor i64 %xor804, %300
  %xor815 = xor i64 %xor810, %303
  %xor817 = xor i64 %xor815, %305
  %inc836 = add nuw nsw i32 %r.01401, 1
  %extract.t1162 = trunc i64 %xor95 to i32
  %extract1164 = lshr i64 %xor95, 8
  %extract.t1165 = trunc i64 %extract1164 to i32
  %extract1168 = lshr i64 %xor95, 16
  %extract.t1169 = trunc i64 %extract1168 to i32
  %extract1172 = lshr i64 %xor95, 24
  %extract.t1173 = trunc i64 %extract1172 to i32
  %extract1176 = lshr i64 %xor95, 32
  %extract.t1177 = trunc i64 %extract1176 to i32
  %extract1180 = lshr i64 %xor95, 40
  %extract.t1181 = trunc i64 %extract1180 to i32
  %extract1184 = lshr i64 %xor95, 48
  %extract.t1185 = trunc i64 %extract1184 to i32
  %extract1188 = lshr i64 %xor95, 56
  %extract.t1189 = trunc i64 %extract1188 to i32
  %extract.t1191 = trunc i64 %xor141 to i32
  %extract1194 = lshr i64 %xor141, 8
  %extract.t1195 = trunc i64 %extract1194 to i32
  %extract1198 = lshr i64 %xor141, 16
  %extract.t1199 = trunc i64 %extract1198 to i32
  %extract1202 = lshr i64 %xor141, 24
  %extract.t1203 = trunc i64 %extract1202 to i32
  %extract1206 = lshr i64 %xor141, 32
  %extract.t1207 = trunc i64 %extract1206 to i32
  %extract1210 = lshr i64 %xor141, 40
  %extract.t1211 = trunc i64 %extract1210 to i32
  %extract1214 = lshr i64 %xor141, 48
  %extract.t1215 = trunc i64 %extract1214 to i32
  %extract1218 = lshr i64 %xor141, 56
  %extract.t1219 = trunc i64 %extract1218 to i32
  %extract.t1221 = trunc i64 %xor187 to i32
  %extract1224 = lshr i64 %xor187, 8
  %extract.t1225 = trunc i64 %extract1224 to i32
  %extract1228 = lshr i64 %xor187, 16
  %extract.t1229 = trunc i64 %extract1228 to i32
  %extract1232 = lshr i64 %xor187, 24
  %extract.t1233 = trunc i64 %extract1232 to i32
  %extract1236 = lshr i64 %xor187, 32
  %extract.t1237 = trunc i64 %extract1236 to i32
  %extract1240 = lshr i64 %xor187, 40
  %extract.t1241 = trunc i64 %extract1240 to i32
  %extract1244 = lshr i64 %xor187, 48
  %extract.t1245 = trunc i64 %extract1244 to i32
  %extract1248 = lshr i64 %xor187, 56
  %extract.t1249 = trunc i64 %extract1248 to i32
  %extract.t1251 = trunc i64 %xor233 to i32
  %extract1254 = lshr i64 %xor233, 8
  %extract.t1255 = trunc i64 %extract1254 to i32
  %extract1258 = lshr i64 %xor233, 16
  %extract.t1259 = trunc i64 %extract1258 to i32
  %extract1262 = lshr i64 %xor233, 24
  %extract.t1263 = trunc i64 %extract1262 to i32
  %extract1266 = lshr i64 %xor233, 32
  %extract.t1267 = trunc i64 %extract1266 to i32
  %extract1270 = lshr i64 %xor233, 40
  %extract.t1271 = trunc i64 %extract1270 to i32
  %extract1274 = lshr i64 %xor233, 48
  %extract.t1275 = trunc i64 %extract1274 to i32
  %extract1278 = lshr i64 %xor233, 56
  %extract.t1279 = trunc i64 %extract1278 to i32
  %extract.t1281 = trunc i64 %xor279 to i32
  %extract1284 = lshr i64 %xor279, 8
  %extract.t1285 = trunc i64 %extract1284 to i32
  %extract1288 = lshr i64 %xor279, 16
  %extract.t1289 = trunc i64 %extract1288 to i32
  %extract1292 = lshr i64 %xor279, 24
  %extract.t1293 = trunc i64 %extract1292 to i32
  %extract1296 = lshr i64 %xor279, 32
  %extract.t1297 = trunc i64 %extract1296 to i32
  %extract1300 = lshr i64 %xor279, 40
  %extract.t1301 = trunc i64 %extract1300 to i32
  %extract1304 = lshr i64 %xor279, 48
  %extract.t1305 = trunc i64 %extract1304 to i32
  %extract1308 = lshr i64 %xor279, 56
  %extract.t1309 = trunc i64 %extract1308 to i32
  %extract.t1311 = trunc i64 %xor325 to i32
  %extract1314 = lshr i64 %xor325, 8
  %extract.t1315 = trunc i64 %extract1314 to i32
  %extract1318 = lshr i64 %xor325, 16
  %extract.t1319 = trunc i64 %extract1318 to i32
  %extract1322 = lshr i64 %xor325, 24
  %extract.t1323 = trunc i64 %extract1322 to i32
  %extract1326 = lshr i64 %xor325, 32
  %extract.t1327 = trunc i64 %extract1326 to i32
  %extract1330 = lshr i64 %xor325, 40
  %extract.t1331 = trunc i64 %extract1330 to i32
  %extract1334 = lshr i64 %xor325, 48
  %extract.t1335 = trunc i64 %extract1334 to i32
  %extract1338 = lshr i64 %xor325, 56
  %extract.t1339 = trunc i64 %extract1338 to i32
  %extract.t1341 = trunc i64 %xor371 to i32
  %extract1344 = lshr i64 %xor371, 8
  %extract.t1345 = trunc i64 %extract1344 to i32
  %extract1348 = lshr i64 %xor371, 16
  %extract.t1349 = trunc i64 %extract1348 to i32
  %extract1352 = lshr i64 %xor371, 24
  %extract.t1353 = trunc i64 %extract1352 to i32
  %extract1356 = lshr i64 %xor371, 32
  %extract.t1357 = trunc i64 %extract1356 to i32
  %extract1360 = lshr i64 %xor371, 40
  %extract.t1361 = trunc i64 %extract1360 to i32
  %extract1364 = lshr i64 %xor371, 48
  %extract.t1365 = trunc i64 %extract1364 to i32
  %extract1368 = lshr i64 %xor371, 56
  %extract.t1369 = trunc i64 %extract1368 to i32
  %extract.t1371 = trunc i64 %xor417 to i32
  %extract1374 = lshr i64 %xor417, 8
  %extract.t1375 = trunc i64 %extract1374 to i32
  %extract1378 = lshr i64 %xor417, 16
  %extract.t1379 = trunc i64 %extract1378 to i32
  %extract1382 = lshr i64 %xor417, 24
  %extract.t1383 = trunc i64 %extract1382 to i32
  %extract1386 = lshr i64 %xor417, 32
  %extract.t1387 = trunc i64 %extract1386 to i32
  %extract1390 = lshr i64 %xor417, 40
  %extract.t1391 = trunc i64 %extract1390 to i32
  %extract1394 = lshr i64 %xor417, 48
  %extract.t1395 = trunc i64 %extract1394 to i32
  %extract1398 = lshr i64 %xor417, 56
  %extract.t1399 = trunc i64 %extract1398 to i32
  %extract.t1475 = trunc i64 %xor817 to i32
  %extract1478 = lshr i64 %xor817, 32
  %extract.t1479 = trunc i64 %extract1478 to i32
  %extract1482 = lshr i64 %xor817, 40
  %extract.t1483 = trunc i64 %extract1482 to i32
  %extract1486 = lshr i64 %xor817, 48
  %extract.t1487 = trunc i64 %extract1486 to i32
  %extract1490 = lshr i64 %xor817, 56
  %extract.t1491 = trunc i64 %extract1490 to i32
  %extract.t1493 = trunc i64 %xor769 to i32
  %extract1496 = lshr i64 %xor769, 32
  %extract.t1497 = trunc i64 %extract1496 to i32
  %extract1500 = lshr i64 %xor769, 40
  %extract.t1501 = trunc i64 %extract1500 to i32
  %extract1504 = lshr i64 %xor769, 48
  %extract.t1505 = trunc i64 %extract1504 to i32
  %extract1508 = lshr i64 %xor769, 56
  %extract.t1509 = trunc i64 %extract1508 to i32
  %extract.t1511 = trunc i64 %xor721 to i32
  %extract1514 = lshr i64 %xor721, 32
  %extract.t1515 = trunc i64 %extract1514 to i32
  %extract1518 = lshr i64 %xor721, 40
  %extract.t1519 = trunc i64 %extract1518 to i32
  %extract1522 = lshr i64 %xor721, 48
  %extract.t1523 = trunc i64 %extract1522 to i32
  %extract1526 = lshr i64 %xor721, 56
  %extract.t1527 = trunc i64 %extract1526 to i32
  %extract.t1529 = trunc i64 %xor673 to i32
  %extract1532 = lshr i64 %xor673, 32
  %extract.t1533 = trunc i64 %extract1532 to i32
  %extract1536 = lshr i64 %xor673, 40
  %extract.t1537 = trunc i64 %extract1536 to i32
  %extract1540 = lshr i64 %xor673, 48
  %extract.t1541 = trunc i64 %extract1540 to i32
  %extract1544 = lshr i64 %xor673, 56
  %extract.t1545 = trunc i64 %extract1544 to i32
  %extract.t1547 = trunc i64 %xor625 to i32
  %extract1550 = lshr i64 %xor625, 32
  %extract.t1551 = trunc i64 %extract1550 to i32
  %extract1554 = lshr i64 %xor625, 40
  %extract.t1555 = trunc i64 %extract1554 to i32
  %extract1558 = lshr i64 %xor625, 48
  %extract.t1559 = trunc i64 %extract1558 to i32
  %extract1562 = lshr i64 %xor625, 56
  %extract.t1563 = trunc i64 %extract1562 to i32
  %extract.t1565 = trunc i64 %xor577 to i32
  %extract1568 = lshr i64 %xor577, 32
  %extract.t1569 = trunc i64 %extract1568 to i32
  %extract1572 = lshr i64 %xor577, 40
  %extract.t1573 = trunc i64 %extract1572 to i32
  %extract1576 = lshr i64 %xor577, 48
  %extract.t1577 = trunc i64 %extract1576 to i32
  %extract1580 = lshr i64 %xor577, 56
  %extract.t1581 = trunc i64 %extract1580 to i32
  %extract.t1583 = trunc i64 %xor529 to i32
  %extract1586 = lshr i64 %xor529, 32
  %extract.t1587 = trunc i64 %extract1586 to i32
  %extract1590 = lshr i64 %xor529, 40
  %extract.t1591 = trunc i64 %extract1590 to i32
  %extract1594 = lshr i64 %xor529, 48
  %extract.t1595 = trunc i64 %extract1594 to i32
  %extract1598 = lshr i64 %xor529, 56
  %extract.t1599 = trunc i64 %extract1598 to i32
  %extract.t1601 = trunc i64 %xor481 to i32
  %extract1604 = lshr i64 %xor481, 32
  %extract.t1605 = trunc i64 %extract1604 to i32
  %extract1608 = lshr i64 %xor481, 40
  %extract.t1609 = trunc i64 %extract1608 to i32
  %extract1612 = lshr i64 %xor481, 48
  %extract.t1613 = trunc i64 %extract1612 to i32
  %extract1616 = lshr i64 %xor481, 56
  %extract.t1617 = trunc i64 %extract1616 to i32
  %exitcond.not = icmp eq i32 %inc836, 10
  br i1 %exitcond.not, label %for.end837, label %for.body51.for.body51_crit_edge

for.body51.for.body51_crit_edge:                  ; preds = %for.body51
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body51

for.end837:                                       ; preds = %for.body51
  call void @__sanitizer_cov_trace_pc() #8
  %xor843 = xor i64 %xor, %xor481
  %306 = ptrtoint ptr %hash to i32
  call void @__asan_store8_noabort(i32 %306)
  store i64 %xor843, ptr %hash, align 8
  %xor849 = xor i64 %xor11, %xor529
  %307 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_store8_noabort(i32 %307)
  store i64 %xor849, ptr %arrayidx9, align 8
  %xor855 = xor i64 %xor17, %xor577
  %308 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_store8_noabort(i32 %308)
  store i64 %xor855, ptr %arrayidx15, align 8
  %xor861 = xor i64 %xor23, %xor625
  %309 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_store8_noabort(i32 %309)
  store i64 %xor861, ptr %arrayidx21, align 8
  %xor867 = xor i64 %xor29, %xor673
  %310 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_store8_noabort(i32 %310)
  store i64 %xor867, ptr %arrayidx27, align 8
  %xor873 = xor i64 %xor35, %xor721
  %311 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_store8_noabort(i32 %311)
  store i64 %xor873, ptr %arrayidx33, align 8
  %xor879 = xor i64 %xor41, %xor769
  %312 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_store8_noabort(i32 %312)
  store i64 %xor879, ptr %arrayidx39, align 8
  %xor885 = xor i64 %xor47, %xor817
  %313 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_store8_noabort(i32 %313)
  store i64 %xor885, ptr %arrayidx45, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @crypto_register_shashes(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #6

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #7 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 9)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #7 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 9)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { argmemonly nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #6 = { nounwind }
attributes #7 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #8 = { nomerge }

!llvm.asan.globals = !{!0, !2, !3, !5, !6, !8, !9, !11, !13, !15, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36}
!llvm.module.flags = !{!38, !39, !40, !41, !42, !43, !44, !45}
!llvm.ident = !{!46}

!0 = !{ptr @__UNIQUE_ID_alias_userspace226, !1, !"__UNIQUE_ID_alias_userspace226", i1 false, i1 false}
!1 = !{!"../crypto/wp512.c", i32 1168, i32 1}
!2 = !{ptr @__UNIQUE_ID_alias_crypto227, !1, !"__UNIQUE_ID_alias_crypto227", i1 false, i1 false}
!3 = !{ptr @__UNIQUE_ID_alias_userspace228, !4, !"__UNIQUE_ID_alias_userspace228", i1 false, i1 false}
!4 = !{!"../crypto/wp512.c", i32 1169, i32 1}
!5 = !{ptr @__UNIQUE_ID_alias_crypto229, !4, !"__UNIQUE_ID_alias_crypto229", i1 false, i1 false}
!6 = !{ptr @__UNIQUE_ID_alias_userspace230, !7, !"__UNIQUE_ID_alias_userspace230", i1 false, i1 false}
!7 = !{!"../crypto/wp512.c", i32 1170, i32 1}
!8 = !{ptr @__UNIQUE_ID_alias_crypto231, !7, !"__UNIQUE_ID_alias_crypto231", i1 false, i1 false}
!9 = !{ptr @__initcall__kmod_wp512__232_1172_wp512_mod_init4, !10, !"__initcall__kmod_wp512__232_1172_wp512_mod_init4", i1 false, i1 false}
!10 = !{!"../crypto/wp512.c", i32 1172, i32 1}
!11 = !{ptr @__exitcall_wp512_mod_fini, !12, !"__exitcall_wp512_mod_fini", i1 false, i1 false}
!12 = !{!"../crypto/wp512.c", i32 1173, i32 1}
!13 = !{ptr @__UNIQUE_ID_file233, !14, !"__UNIQUE_ID_file233", i1 false, i1 false}
!14 = !{!"../crypto/wp512.c", i32 1175, i32 1}
!15 = !{ptr @__UNIQUE_ID_license234, !14, !"__UNIQUE_ID_license234", i1 false, i1 false}
!16 = !{ptr @__UNIQUE_ID_description235, !17, !"__UNIQUE_ID_description235", i1 false, i1 false}
!17 = !{!"../crypto/wp512.c", i32 1176, i32 1}
!18 = !{ptr @wp_algs, !19, !"wp_algs", i1 false, i1 false}
!19 = !{!"../crypto/wp512.c", i32 1120, i32 25}
!20 = !{ptr @C0, !21, !"C0", i1 false, i1 false}
!21 = !{!"../crypto/wp512.c", i32 53, i32 18}
!22 = !{ptr @C1, !23, !"C1", i1 false, i1 false}
!23 = !{!"../crypto/wp512.c", i32 142, i32 18}
!24 = !{ptr @C2, !25, !"C2", i1 false, i1 false}
!25 = !{!"../crypto/wp512.c", i32 231, i32 18}
!26 = !{ptr @C3, !27, !"C3", i1 false, i1 false}
!27 = !{!"../crypto/wp512.c", i32 320, i32 18}
!28 = !{ptr @C4, !29, !"C4", i1 false, i1 false}
!29 = !{!"../crypto/wp512.c", i32 409, i32 18}
!30 = !{ptr @C5, !31, !"C5", i1 false, i1 false}
!31 = !{!"../crypto/wp512.c", i32 498, i32 18}
!32 = !{ptr @C6, !33, !"C6", i1 false, i1 false}
!33 = !{!"../crypto/wp512.c", i32 587, i32 18}
!34 = !{ptr @C7, !35, !"C7", i1 false, i1 false}
!35 = !{!"../crypto/wp512.c", i32 676, i32 18}
!36 = !{ptr @rc, !37, !"rc", i1 false, i1 false}
!37 = !{!"../crypto/wp512.c", i32 765, i32 18}
!38 = !{i32 1, !"wchar_size", i32 2}
!39 = !{i32 1, !"min_enum_size", i32 4}
!40 = !{i32 8, !"branch-target-enforcement", i32 0}
!41 = !{i32 8, !"sign-return-address", i32 0}
!42 = !{i32 8, !"sign-return-address-all", i32 0}
!43 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!44 = !{i32 7, !"uwtable", i32 1}
!45 = !{i32 7, !"frame-pointer", i32 2}
!46 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!47 = !{i64 2149281059}
