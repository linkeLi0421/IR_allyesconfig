; ModuleID = '/llk/IR_all_yes/drivers/base/core.c_pt.bc'
source_filename = "../drivers/base/core.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+fw_devlink_purge_absent_suppliers\22, \22a\22\09"
module asm "\09.weak\09__crc_fw_devlink_purge_absent_suppliers\09\09\09\09"
module asm "\09.long\09__crc_fw_devlink_purge_absent_suppliers\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_fw_devlink_purge_absent_suppliers:\09\09\09\09\09"
module asm "\09.asciz \09\22fw_devlink_purge_absent_suppliers\22\09\09\09\09\09"
module asm "__kstrtabns_fw_devlink_purge_absent_suppliers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_link_add\22, \22a\22\09"
module asm "\09.weak\09__crc_device_link_add\09\09\09\09"
module asm "\09.long\09__crc_device_link_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_link_add:\09\09\09\09\09"
module asm "\09.asciz \09\22device_link_add\22\09\09\09\09\09"
module asm "__kstrtabns_device_link_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_link_del\22, \22a\22\09"
module asm "\09.weak\09__crc_device_link_del\09\09\09\09"
module asm "\09.long\09__crc_device_link_del\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_link_del:\09\09\09\09\09"
module asm "\09.asciz \09\22device_link_del\22\09\09\09\09\09"
module asm "__kstrtabns_device_link_del:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_link_remove\22, \22a\22\09"
module asm "\09.weak\09__crc_device_link_remove\09\09\09\09"
module asm "\09.long\09__crc_device_link_remove\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_link_remove:\09\09\09\09\09"
module asm "\09.asciz \09\22device_link_remove\22\09\09\09\09\09"
module asm "__kstrtabns_device_link_remove:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_driver_string\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_driver_string\09\09\09\09"
module asm "\09.long\09__crc_dev_driver_string\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_driver_string:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_driver_string\22\09\09\09\09\09"
module asm "__kstrtabns_dev_driver_string:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_store_ulong\22, \22a\22\09"
module asm "\09.weak\09__crc_device_store_ulong\09\09\09\09"
module asm "\09.long\09__crc_device_store_ulong\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_store_ulong:\09\09\09\09\09"
module asm "\09.asciz \09\22device_store_ulong\22\09\09\09\09\09"
module asm "__kstrtabns_device_store_ulong:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_show_ulong\22, \22a\22\09"
module asm "\09.weak\09__crc_device_show_ulong\09\09\09\09"
module asm "\09.long\09__crc_device_show_ulong\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_show_ulong:\09\09\09\09\09"
module asm "\09.asciz \09\22device_show_ulong\22\09\09\09\09\09"
module asm "__kstrtabns_device_show_ulong:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_store_int\22, \22a\22\09"
module asm "\09.weak\09__crc_device_store_int\09\09\09\09"
module asm "\09.long\09__crc_device_store_int\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_store_int:\09\09\09\09\09"
module asm "\09.asciz \09\22device_store_int\22\09\09\09\09\09"
module asm "__kstrtabns_device_store_int:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_show_int\22, \22a\22\09"
module asm "\09.weak\09__crc_device_show_int\09\09\09\09"
module asm "\09.long\09__crc_device_show_int\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_show_int:\09\09\09\09\09"
module asm "\09.asciz \09\22device_show_int\22\09\09\09\09\09"
module asm "__kstrtabns_device_show_int:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_store_bool\22, \22a\22\09"
module asm "\09.weak\09__crc_device_store_bool\09\09\09\09"
module asm "\09.long\09__crc_device_store_bool\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_store_bool:\09\09\09\09\09"
module asm "\09.asciz \09\22device_store_bool\22\09\09\09\09\09"
module asm "__kstrtabns_device_store_bool:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_show_bool\22, \22a\22\09"
module asm "\09.weak\09__crc_device_show_bool\09\09\09\09"
module asm "\09.long\09__crc_device_show_bool\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_show_bool:\09\09\09\09\09"
module asm "\09.asciz \09\22device_show_bool\22\09\09\09\09\09"
module asm "__kstrtabns_device_show_bool:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_add_groups\22, \22a\22\09"
module asm "\09.weak\09__crc_device_add_groups\09\09\09\09"
module asm "\09.long\09__crc_device_add_groups\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_add_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22device_add_groups\22\09\09\09\09\09"
module asm "__kstrtabns_device_add_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_remove_groups\22, \22a\22\09"
module asm "\09.weak\09__crc_device_remove_groups\09\09\09\09"
module asm "\09.long\09__crc_device_remove_groups\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_remove_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22device_remove_groups\22\09\09\09\09\09"
module asm "__kstrtabns_device_remove_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_device_add_group\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_device_add_group\09\09\09\09"
module asm "\09.long\09__crc_devm_device_add_group\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_device_add_group:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_device_add_group\22\09\09\09\09\09"
module asm "__kstrtabns_devm_device_add_group:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_device_remove_group\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_device_remove_group\09\09\09\09"
module asm "\09.long\09__crc_devm_device_remove_group\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_device_remove_group:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_device_remove_group\22\09\09\09\09\09"
module asm "__kstrtabns_devm_device_remove_group:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_device_add_groups\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_device_add_groups\09\09\09\09"
module asm "\09.long\09__crc_devm_device_add_groups\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_device_add_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_device_add_groups\22\09\09\09\09\09"
module asm "__kstrtabns_devm_device_add_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_device_remove_groups\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_device_remove_groups\09\09\09\09"
module asm "\09.long\09__crc_devm_device_remove_groups\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_device_remove_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_device_remove_groups\22\09\09\09\09\09"
module asm "__kstrtabns_devm_device_remove_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_create_file\22, \22a\22\09"
module asm "\09.weak\09__crc_device_create_file\09\09\09\09"
module asm "\09.long\09__crc_device_create_file\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_create_file:\09\09\09\09\09"
module asm "\09.asciz \09\22device_create_file\22\09\09\09\09\09"
module asm "__kstrtabns_device_create_file:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_remove_file\22, \22a\22\09"
module asm "\09.weak\09__crc_device_remove_file\09\09\09\09"
module asm "\09.long\09__crc_device_remove_file\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_remove_file:\09\09\09\09\09"
module asm "\09.asciz \09\22device_remove_file\22\09\09\09\09\09"
module asm "__kstrtabns_device_remove_file:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_remove_file_self\22, \22a\22\09"
module asm "\09.weak\09__crc_device_remove_file_self\09\09\09\09"
module asm "\09.long\09__crc_device_remove_file_self\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_remove_file_self:\09\09\09\09\09"
module asm "\09.asciz \09\22device_remove_file_self\22\09\09\09\09\09"
module asm "__kstrtabns_device_remove_file_self:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_create_bin_file\22, \22a\22\09"
module asm "\09.weak\09__crc_device_create_bin_file\09\09\09\09"
module asm "\09.long\09__crc_device_create_bin_file\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_create_bin_file:\09\09\09\09\09"
module asm "\09.asciz \09\22device_create_bin_file\22\09\09\09\09\09"
module asm "__kstrtabns_device_create_bin_file:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_remove_bin_file\22, \22a\22\09"
module asm "\09.weak\09__crc_device_remove_bin_file\09\09\09\09"
module asm "\09.long\09__crc_device_remove_bin_file\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_remove_bin_file:\09\09\09\09\09"
module asm "\09.asciz \09\22device_remove_bin_file\22\09\09\09\09\09"
module asm "__kstrtabns_device_remove_bin_file:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_initialize\22, \22a\22\09"
module asm "\09.weak\09__crc_device_initialize\09\09\09\09"
module asm "\09.long\09__crc_device_initialize\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_initialize:\09\09\09\09\09"
module asm "\09.asciz \09\22device_initialize\22\09\09\09\09\09"
module asm "__kstrtabns_device_initialize:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_set_name\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_set_name\09\09\09\09"
module asm "\09.long\09__crc_dev_set_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_name:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_name\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_add\22, \22a\22\09"
module asm "\09.weak\09__crc_device_add\09\09\09\09"
module asm "\09.long\09__crc_device_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_add:\09\09\09\09\09"
module asm "\09.asciz \09\22device_add\22\09\09\09\09\09"
module asm "__kstrtabns_device_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_register\22, \22a\22\09"
module asm "\09.weak\09__crc_device_register\09\09\09\09"
module asm "\09.long\09__crc_device_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_register:\09\09\09\09\09"
module asm "\09.asciz \09\22device_register\22\09\09\09\09\09"
module asm "__kstrtabns_device_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+get_device\22, \22a\22\09"
module asm "\09.weak\09__crc_get_device\09\09\09\09"
module asm "\09.long\09__crc_get_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_get_device:\09\09\09\09\09"
module asm "\09.asciz \09\22get_device\22\09\09\09\09\09"
module asm "__kstrtabns_get_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+put_device\22, \22a\22\09"
module asm "\09.weak\09__crc_put_device\09\09\09\09"
module asm "\09.long\09__crc_put_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_put_device:\09\09\09\09\09"
module asm "\09.asciz \09\22put_device\22\09\09\09\09\09"
module asm "__kstrtabns_put_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+kill_device\22, \22a\22\09"
module asm "\09.weak\09__crc_kill_device\09\09\09\09"
module asm "\09.long\09__crc_kill_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kill_device:\09\09\09\09\09"
module asm "\09.asciz \09\22kill_device\22\09\09\09\09\09"
module asm "__kstrtabns_kill_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_del\22, \22a\22\09"
module asm "\09.weak\09__crc_device_del\09\09\09\09"
module asm "\09.long\09__crc_device_del\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_del:\09\09\09\09\09"
module asm "\09.asciz \09\22device_del\22\09\09\09\09\09"
module asm "__kstrtabns_device_del:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_device_unregister\09\09\09\09"
module asm "\09.long\09__crc_device_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22device_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_device_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_for_each_child\22, \22a\22\09"
module asm "\09.weak\09__crc_device_for_each_child\09\09\09\09"
module asm "\09.long\09__crc_device_for_each_child\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_for_each_child:\09\09\09\09\09"
module asm "\09.asciz \09\22device_for_each_child\22\09\09\09\09\09"
module asm "__kstrtabns_device_for_each_child:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_for_each_child_reverse\22, \22a\22\09"
module asm "\09.weak\09__crc_device_for_each_child_reverse\09\09\09\09"
module asm "\09.long\09__crc_device_for_each_child_reverse\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_for_each_child_reverse:\09\09\09\09\09"
module asm "\09.asciz \09\22device_for_each_child_reverse\22\09\09\09\09\09"
module asm "__kstrtabns_device_for_each_child_reverse:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_find_child\22, \22a\22\09"
module asm "\09.weak\09__crc_device_find_child\09\09\09\09"
module asm "\09.long\09__crc_device_find_child\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_find_child:\09\09\09\09\09"
module asm "\09.asciz \09\22device_find_child\22\09\09\09\09\09"
module asm "__kstrtabns_device_find_child:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_find_child_by_name\22, \22a\22\09"
module asm "\09.weak\09__crc_device_find_child_by_name\09\09\09\09"
module asm "\09.long\09__crc_device_find_child_by_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_find_child_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22device_find_child_by_name\22\09\09\09\09\09"
module asm "__kstrtabns_device_find_child_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__root_device_register\22, \22a\22\09"
module asm "\09.weak\09__crc___root_device_register\09\09\09\09"
module asm "\09.long\09__crc___root_device_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___root_device_register:\09\09\09\09\09"
module asm "\09.asciz \09\22__root_device_register\22\09\09\09\09\09"
module asm "__kstrtabns___root_device_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+root_device_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_root_device_unregister\09\09\09\09"
module asm "\09.long\09__crc_root_device_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_root_device_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22root_device_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_root_device_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_create\22, \22a\22\09"
module asm "\09.weak\09__crc_device_create\09\09\09\09"
module asm "\09.long\09__crc_device_create\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_create:\09\09\09\09\09"
module asm "\09.asciz \09\22device_create\22\09\09\09\09\09"
module asm "__kstrtabns_device_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_create_with_groups\22, \22a\22\09"
module asm "\09.weak\09__crc_device_create_with_groups\09\09\09\09"
module asm "\09.long\09__crc_device_create_with_groups\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_create_with_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22device_create_with_groups\22\09\09\09\09\09"
module asm "__kstrtabns_device_create_with_groups:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_destroy\22, \22a\22\09"
module asm "\09.weak\09__crc_device_destroy\09\09\09\09"
module asm "\09.long\09__crc_device_destroy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22device_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_device_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_rename\22, \22a\22\09"
module asm "\09.weak\09__crc_device_rename\09\09\09\09"
module asm "\09.long\09__crc_device_rename\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_rename:\09\09\09\09\09"
module asm "\09.asciz \09\22device_rename\22\09\09\09\09\09"
module asm "__kstrtabns_device_rename:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_move\22, \22a\22\09"
module asm "\09.weak\09__crc_device_move\09\09\09\09"
module asm "\09.long\09__crc_device_move\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_move:\09\09\09\09\09"
module asm "\09.asciz \09\22device_move\22\09\09\09\09\09"
module asm "__kstrtabns_device_move:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_change_owner\22, \22a\22\09"
module asm "\09.weak\09__crc_device_change_owner\09\09\09\09"
module asm "\09.long\09__crc_device_change_owner\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_change_owner:\09\09\09\09\09"
module asm "\09.asciz \09\22device_change_owner\22\09\09\09\09\09"
module asm "__kstrtabns_device_change_owner:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_vprintk_emit\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_vprintk_emit\09\09\09\09"
module asm "\09.long\09__crc_dev_vprintk_emit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_vprintk_emit:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_vprintk_emit\22\09\09\09\09\09"
module asm "__kstrtabns_dev_vprintk_emit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_printk_emit\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_printk_emit\09\09\09\09"
module asm "\09.long\09__crc_dev_printk_emit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_printk_emit:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_printk_emit\22\09\09\09\09\09"
module asm "__kstrtabns_dev_printk_emit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+_dev_printk\22, \22a\22\09"
module asm "\09.weak\09__crc__dev_printk\09\09\09\09"
module asm "\09.long\09__crc__dev_printk\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__dev_printk:\09\09\09\09\09"
module asm "\09.asciz \09\22_dev_printk\22\09\09\09\09\09"
module asm "__kstrtabns__dev_printk:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+_dev_emerg\22, \22a\22\09"
module asm "\09.weak\09__crc__dev_emerg\09\09\09\09"
module asm "\09.long\09__crc__dev_emerg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__dev_emerg:\09\09\09\09\09"
module asm "\09.asciz \09\22_dev_emerg\22\09\09\09\09\09"
module asm "__kstrtabns__dev_emerg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+_dev_alert\22, \22a\22\09"
module asm "\09.weak\09__crc__dev_alert\09\09\09\09"
module asm "\09.long\09__crc__dev_alert\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__dev_alert:\09\09\09\09\09"
module asm "\09.asciz \09\22_dev_alert\22\09\09\09\09\09"
module asm "__kstrtabns__dev_alert:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+_dev_crit\22, \22a\22\09"
module asm "\09.weak\09__crc__dev_crit\09\09\09\09"
module asm "\09.long\09__crc__dev_crit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__dev_crit:\09\09\09\09\09"
module asm "\09.asciz \09\22_dev_crit\22\09\09\09\09\09"
module asm "__kstrtabns__dev_crit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+_dev_err\22, \22a\22\09"
module asm "\09.weak\09__crc__dev_err\09\09\09\09"
module asm "\09.long\09__crc__dev_err\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__dev_err:\09\09\09\09\09"
module asm "\09.asciz \09\22_dev_err\22\09\09\09\09\09"
module asm "__kstrtabns__dev_err:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+_dev_warn\22, \22a\22\09"
module asm "\09.weak\09__crc__dev_warn\09\09\09\09"
module asm "\09.long\09__crc__dev_warn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__dev_warn:\09\09\09\09\09"
module asm "\09.asciz \09\22_dev_warn\22\09\09\09\09\09"
module asm "__kstrtabns__dev_warn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+_dev_notice\22, \22a\22\09"
module asm "\09.weak\09__crc__dev_notice\09\09\09\09"
module asm "\09.long\09__crc__dev_notice\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__dev_notice:\09\09\09\09\09"
module asm "\09.asciz \09\22_dev_notice\22\09\09\09\09\09"
module asm "__kstrtabns__dev_notice:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+_dev_info\22, \22a\22\09"
module asm "\09.weak\09__crc__dev_info\09\09\09\09"
module asm "\09.long\09__crc__dev_info\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__dev_info:\09\09\09\09\09"
module asm "\09.asciz \09\22_dev_info\22\09\09\09\09\09"
module asm "__kstrtabns__dev_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_err_probe\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_err_probe\09\09\09\09"
module asm "\09.long\09__crc_dev_err_probe\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_err_probe:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_err_probe\22\09\09\09\09\09"
module asm "__kstrtabns_dev_err_probe:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+set_primary_fwnode\22, \22a\22\09"
module asm "\09.weak\09__crc_set_primary_fwnode\09\09\09\09"
module asm "\09.long\09__crc_set_primary_fwnode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_set_primary_fwnode:\09\09\09\09\09"
module asm "\09.asciz \09\22set_primary_fwnode\22\09\09\09\09\09"
module asm "__kstrtabns_set_primary_fwnode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+set_secondary_fwnode\22, \22a\22\09"
module asm "\09.weak\09__crc_set_secondary_fwnode\09\09\09\09"
module asm "\09.long\09__crc_set_secondary_fwnode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_set_secondary_fwnode:\09\09\09\09\09"
module asm "\09.asciz \09\22set_secondary_fwnode\22\09\09\09\09\09"
module asm "__kstrtabns_set_secondary_fwnode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_set_of_node_from_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_device_set_of_node_from_dev\09\09\09\09"
module asm "\09.long\09__crc_device_set_of_node_from_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_set_of_node_from_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22device_set_of_node_from_dev\22\09\09\09\09\09"
module asm "__kstrtabns_device_set_of_node_from_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_set_node\22, \22a\22\09"
module asm "\09.weak\09__crc_device_set_node\09\09\09\09"
module asm "\09.long\09__crc_device_set_node\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_set_node:\09\09\09\09\09"
module asm "\09.asciz \09\22device_set_node\22\09\09\09\09\09"
module asm "__kstrtabns_device_set_node:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_match_name\22, \22a\22\09"
module asm "\09.weak\09__crc_device_match_name\09\09\09\09"
module asm "\09.long\09__crc_device_match_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_match_name:\09\09\09\09\09"
module asm "\09.asciz \09\22device_match_name\22\09\09\09\09\09"
module asm "__kstrtabns_device_match_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_match_of_node\22, \22a\22\09"
module asm "\09.weak\09__crc_device_match_of_node\09\09\09\09"
module asm "\09.long\09__crc_device_match_of_node\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_match_of_node:\09\09\09\09\09"
module asm "\09.asciz \09\22device_match_of_node\22\09\09\09\09\09"
module asm "__kstrtabns_device_match_of_node:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_match_fwnode\22, \22a\22\09"
module asm "\09.weak\09__crc_device_match_fwnode\09\09\09\09"
module asm "\09.long\09__crc_device_match_fwnode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_match_fwnode:\09\09\09\09\09"
module asm "\09.asciz \09\22device_match_fwnode\22\09\09\09\09\09"
module asm "__kstrtabns_device_match_fwnode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_match_devt\22, \22a\22\09"
module asm "\09.weak\09__crc_device_match_devt\09\09\09\09"
module asm "\09.long\09__crc_device_match_devt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_match_devt:\09\09\09\09\09"
module asm "\09.asciz \09\22device_match_devt\22\09\09\09\09\09"
module asm "__kstrtabns_device_match_devt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+device_match_acpi_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_device_match_acpi_dev\09\09\09\09"
module asm "\09.long\09__crc_device_match_acpi_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_match_acpi_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22device_match_acpi_dev\22\09\09\09\09\09"
module asm "__kstrtabns_device_match_acpi_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+device_match_acpi_handle\22, \22a\22\09"
module asm "\09.weak\09__crc_device_match_acpi_handle\09\09\09\09"
module asm "\09.long\09__crc_device_match_acpi_handle\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_match_acpi_handle:\09\09\09\09\09"
module asm "\09.asciz \09\22device_match_acpi_handle\22\09\09\09\09\09"
module asm "__kstrtabns_device_match_acpi_handle:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+device_match_any\22, \22a\22\09"
module asm "\09.weak\09__crc_device_match_any\09\09\09\09"
module asm "\09.long\09__crc_device_match_any\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_device_match_any:\09\09\09\09\09"
module asm "\09.asciz \09\22device_match_any\22\09\09\09\09\09"
module asm "__kstrtabns_device_match_any:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.srcu_struct = type { [3 x %struct.srcu_node], [3 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.class = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.kobj_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.kset_uevent_ops = type { ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.srcu_data = type { [2 x i32], [2 x i32], [112 x i8], %struct.spinlock, %struct.rcu_segcblist, i32, i32, i8, %struct.timer_list, %struct.work_struct, %struct.callback_head, ptr, i32, i32, ptr, [24 x i8] }
%struct.rcu_segcblist = type { ptr, [4 x ptr], [4 x i32], %struct.atomic_t, [4 x i32], i8 }
%struct.callback_head = type { ptr, ptr }
%struct.class_interface = type { %struct.list_head, ptr, ptr, ptr }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.sysfs_ops = type { ptr, ptr }
%struct.device_type = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.36 }
%union.anon.36 = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.38, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.38 = type { %struct.anon.39 }
%struct.anon.39 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.fwnode_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.fwnode_handle = type { ptr, ptr, ptr, %struct.list_head, %struct.list_head, i8 }
%struct.fwnode_link = type { ptr, %struct.list_head, ptr, %struct.list_head }
%struct.klist_iter = type { ptr, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.device_link = type { ptr, %struct.list_head, ptr, %struct.list_head, %struct.device, i32, i32, %struct.refcount_struct, %struct.kref, %struct.work_struct, i8 }
%struct.__va_list = type { ptr }
%struct.va_format = type { ptr, ptr }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.bus_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lock_class_key, i8 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.83, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.29 }
%struct.llist_node = type { ptr }
%union.anon.29 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32 }
%struct.anon.32 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.83 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.dev_ext_attribute = type { %struct.device_attribute, ptr }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, ptr }
%struct.device_private = type { %struct.klist, %struct.klist_node, %struct.klist_node, %struct.klist_node, %struct.klist_node, %struct.list_head, ptr, ptr, ptr, i8 }
%struct.klist = type { %struct.spinlock, %struct.list_head, ptr, ptr }
%struct.klist_node = type { ptr, %struct.list_head, %struct.kref }
%struct.device_node = type { ptr, i32, ptr, %struct.fwnode_handle, ptr, ptr, ptr, ptr, ptr, %struct.kobject, i32, ptr }
%struct.subsys_private = type { %struct.kset, ptr, %struct.list_head, %struct.mutex, ptr, %struct.klist, %struct.klist, %struct.blocking_notifier_head, i8, ptr, %struct.kset, ptr }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.class_dir = type { %struct.kobject, ptr }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.lockdep_map, ptr, ptr, %struct.rb_node, ptr, i32, %union.anon.66, ptr, i64, i16, i16, ptr }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { ptr, ptr, i64, ptr }
%struct.module = type { i32, %struct.list_head, [60 x i8], [20 x i8], %struct.module_kobject, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, i32, ptr, ptr, i8, i8, i8, i32, ptr, ptr, [112 x i8], %struct.module_layout, %struct.module_layout, %struct.mod_arch_specific, i32, i32, %struct.list_head, ptr, ptr, %struct.mod_kallsyms, ptr, ptr, ptr, ptr, i32, ptr, i32, i32, ptr, i32, ptr, i32, ptr, ptr, i32, i32, ptr, ptr, i32, ptr, i32, i32, ptr, ptr, i32, ptr, i32, i32, ptr, %struct.list_head, %struct.list_head, ptr, %struct.atomic_t, ptr, i32, [48 x i8] }
%struct.module_kobject = type { %struct.kobject, ptr, ptr, ptr, ptr }
%struct.module_layout = type { ptr, i32, i32, i32, i32, %struct.mod_tree_node }
%struct.mod_tree_node = type { ptr, %struct.latch_tree_node }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.mod_arch_specific = type { [7 x ptr], %struct.mod_plt_sec, %struct.mod_plt_sec }
%struct.mod_plt_sec = type { ptr, ptr, i32 }
%struct.mod_kallsyms = type { ptr, i32, ptr, ptr }
%struct.root_device = type { %struct.device, ptr }
%struct.dev_printk_info = type { [16 x i8], [48 x i8] }
%struct.kobj_uevent_env = type { [3 x ptr], [64 x ptr], i32, [2048 x i8], i32 }

@sysfs_deprecated = dso_local global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@__setup_str_sysfs_deprecated_setup = internal constant [17 x i8] c"sysfs.deprecated\00", section ".init.rodata", align 1
@__setup_sysfs_deprecated_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_sysfs_deprecated_setup, ptr @sysfs_deprecated_setup, i32 1 }, section ".init.setup", align 4
@fwnode_link_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.57, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @fwnode_link_lock, i64 52), ptr getelementptr (i8, ptr @fwnode_link_lock, i64 52) }, ptr @fwnode_link_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.58, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@fwnode_link_add.__UNIQUE_ID_ddebug358 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, i8 0, i8 24, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"core\00", [27 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"fwnode_link_add\00", [16 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"drivers/base/core.c\00", [44 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%pfwP Linked as a fwnode consumer to %pfwP\0A\00", [52 x i8] zeroinitializer }, align 32
@__kstrtab_fw_devlink_purge_absent_suppliers = external dso_local constant [0 x i8], align 1
@__kstrtabns_fw_devlink_purge_absent_suppliers = external dso_local constant [0 x i8], align 1
@__ksymtab_fw_devlink_purge_absent_suppliers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @fw_devlink_purge_absent_suppliers to i32), ptr @__kstrtab_fw_devlink_purge_absent_suppliers, ptr @__kstrtabns_fw_devlink_purge_absent_suppliers }, section "___ksymtab_gpl+fw_devlink_purge_absent_suppliers", align 4
@device_links_srcu = internal global { %struct.srcu_struct, [200 x i8] } { %struct.srcu_struct { [3 x %struct.srcu_node] zeroinitializer, [3 x ptr] zeroinitializer, %struct.mutex zeroinitializer, %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.61, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.mutex zeroinitializer, i32 0, i32 0, i32 -1, i32 0, i32 0, ptr @device_links_srcu_srcu_data, i32 0, %struct.mutex zeroinitializer, %struct.completion zeroinitializer, %struct.atomic_t zeroinitializer, %struct.delayed_work { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @device_links_srcu, i64 700), ptr getelementptr (i8, ptr @device_links_srcu, i64 700) }, ptr null, %struct.lockdep_map { ptr getelementptr (i8, ptr @device_links_srcu, i64 696), [2 x ptr] zeroinitializer, ptr @.str.62, i8 0, i8 0, i8 0, i32 0, i32 0 } }, %struct.timer_list { %struct.hlist_node { ptr inttoptr (i32 768 to ptr), ptr null }, i32 0, ptr @delayed_work_timer_fn, i32 2097152, %struct.lockdep_map { ptr @.str.63, [2 x ptr] zeroinitializer, ptr @.str.63, i8 0, i8 0, i8 0, i32 0, i32 0 } }, ptr null, i32 0 }, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.64, i8 0, i8 0, i8 0, i32 0, i32 0 } }, [200 x i8] zeroinitializer }, align 32
@__initcall__kmod_core__364_617_devlink_class_init2 = internal global ptr @devlink_class_init, section ".initcall2.init", align 4
@devlink_class = internal global { %struct.class, [36 x i8] } { %struct.class { ptr @.str.73, ptr null, ptr null, ptr @devlink_groups, ptr null, ptr null, ptr null, ptr null, ptr @devlink_dev_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"%s:%s--%s:%s\00", [19 x i8] zeroinitializer }, align 32
@device_link_add.__UNIQUE_ID_ddebug365 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.5, ptr @.str.2, ptr @.str.6, i8 0, i8 -43, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.5 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"device_link_add\00", [16 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Linked as a sync state only consumer to %s\0A\00", [52 x i8] zeroinitializer }, align 32
@device_link_add.__UNIQUE_ID_ddebug366 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.5, ptr @.str.2, ptr @.str.7, i8 0, i8 -39, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.7 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Linked as a consumer to %s\0A\00", [36 x i8] zeroinitializer }, align 32
@__kstrtab_device_link_add = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_link_add = external dso_local constant [0 x i8], align 1
@__ksymtab_device_link_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_link_add to i32), ptr @__kstrtab_device_link_add, ptr @__kstrtabns_device_link_add }, section "___ksymtab_gpl+device_link_add", align 4
@__kstrtab_device_link_del = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_link_del = external dso_local constant [0 x i8], align 1
@__ksymtab_device_link_del = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_link_del to i32), ptr @__kstrtab_device_link_del, ptr @__kstrtabns_device_link_del }, section "___ksymtab_gpl+device_link_del", align 4
@__kstrtab_device_link_remove = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_link_remove = external dso_local constant [0 x i8], align 1
@__ksymtab_device_link_remove = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_link_remove to i32), ptr @__kstrtab_device_link_remove, ptr @__kstrtabns_device_link_remove }, section "___ksymtab_gpl+device_link_remove", align 4
@.str.8 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"wait for supplier %pfwP\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"supplier %s not ready\0A\00", [41 x i8] zeroinitializer }, align 32
@defer_sync_state_count = internal global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Unmatched sync_state pause/resume!\00", [61 x i8] zeroinitializer }, align 32
@deferred_sync = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @deferred_sync, ptr @deferred_sync }, [24 x i8] zeroinitializer }, align 32
@__initcall__kmod_core__371_1151_sync_state_resume_initcall7 = internal global ptr @sync_state_resume_initcall, section ".initcall7.init", align 4
@dev_attr_waiting_for_supplier = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.94, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @waiting_for_supplier_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@__setup_str_fw_devlink_setup = internal constant [11 x i8] c"fw_devlink\00", section ".init.rodata", align 1
@__setup_fw_devlink_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_fw_devlink_setup, ptr @fw_devlink_setup, i32 1 }, section ".init.setup", align 4
@__setup_str_fw_devlink_strict_setup = internal constant [18 x i8] c"fw_devlink.strict\00", section ".init.rodata", align 1
@__setup_fw_devlink_strict_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_fw_devlink_strict_setup, ptr @fw_devlink_strict_setup, i32 1 }, section ".init.setup", align 4
@fw_devlink_flags = internal global { i32, [28 x i8] } { i32 288, [28 x i8] zeroinitializer }, align 32
@fw_devlink_strict = internal global { i8, [31 x i8] } zeroinitializer, align 32
@fw_devlink_drv_reg_done = internal global { i1, [31 x i8] } zeroinitializer, align 32
@platform_notify = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@platform_notify_remove = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@device_hotplug_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.102, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @device_hotplug_lock, i64 52), ptr getelementptr (i8, ptr @device_hotplug_lock, i64 52) }, ptr @device_hotplug_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.103, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_dev_driver_string = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_driver_string = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_driver_string = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_driver_string to i32), ptr @__kstrtab_dev_driver_string, ptr @__kstrtabns_dev_driver_string }, section "___ksymtab+dev_driver_string", align 4
@__kstrtab_device_store_ulong = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_store_ulong = external dso_local constant [0 x i8], align 1
@__ksymtab_device_store_ulong = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_store_ulong to i32), ptr @__kstrtab_device_store_ulong, ptr @__kstrtabns_device_store_ulong }, section "___ksymtab_gpl+device_store_ulong", align 4
@.str.11 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%lx\0A\00", [27 x i8] zeroinitializer }, align 32
@__kstrtab_device_show_ulong = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_show_ulong = external dso_local constant [0 x i8], align 1
@__ksymtab_device_show_ulong = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_show_ulong to i32), ptr @__kstrtab_device_show_ulong, ptr @__kstrtabns_device_show_ulong }, section "___ksymtab_gpl+device_show_ulong", align 4
@__kstrtab_device_store_int = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_store_int = external dso_local constant [0 x i8], align 1
@__ksymtab_device_store_int = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_store_int to i32), ptr @__kstrtab_device_store_int, ptr @__kstrtabns_device_store_int }, section "___ksymtab_gpl+device_store_int", align 4
@.str.12 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%d\0A\00", [28 x i8] zeroinitializer }, align 32
@__kstrtab_device_show_int = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_show_int = external dso_local constant [0 x i8], align 1
@__ksymtab_device_show_int = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_show_int to i32), ptr @__kstrtab_device_show_int, ptr @__kstrtabns_device_show_int }, section "___ksymtab_gpl+device_show_int", align 4
@__kstrtab_device_store_bool = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_store_bool = external dso_local constant [0 x i8], align 1
@__ksymtab_device_store_bool = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_store_bool to i32), ptr @__kstrtab_device_store_bool, ptr @__kstrtabns_device_store_bool }, section "___ksymtab_gpl+device_store_bool", align 4
@__kstrtab_device_show_bool = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_show_bool = external dso_local constant [0 x i8], align 1
@__ksymtab_device_show_bool = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_show_bool to i32), ptr @__kstrtab_device_show_bool, ptr @__kstrtabns_device_show_bool }, section "___ksymtab_gpl+device_show_bool", align 4
@__kstrtab_device_add_groups = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_add_groups = external dso_local constant [0 x i8], align 1
@__ksymtab_device_add_groups = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_add_groups to i32), ptr @__kstrtab_device_add_groups, ptr @__kstrtabns_device_add_groups }, section "___ksymtab_gpl+device_add_groups", align 4
@__kstrtab_device_remove_groups = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_remove_groups = external dso_local constant [0 x i8], align 1
@__ksymtab_device_remove_groups = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_remove_groups to i32), ptr @__kstrtab_device_remove_groups, ptr @__kstrtabns_device_remove_groups }, section "___ksymtab_gpl+device_remove_groups", align 4
@.str.13 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"devm_attr_group_remove\00", [41 x i8] zeroinitializer }, align 32
@__kstrtab_devm_device_add_group = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_device_add_group = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_device_add_group = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_device_add_group to i32), ptr @__kstrtab_devm_device_add_group, ptr @__kstrtabns_devm_device_add_group }, section "___ksymtab_gpl+devm_device_add_group", align 4
@__kstrtab_devm_device_remove_group = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_device_remove_group = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_device_remove_group = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_device_remove_group to i32), ptr @__kstrtab_devm_device_remove_group, ptr @__kstrtabns_devm_device_remove_group }, section "___ksymtab_gpl+devm_device_remove_group", align 4
@.str.14 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"devm_attr_groups_remove\00", [40 x i8] zeroinitializer }, align 32
@__kstrtab_devm_device_add_groups = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_device_add_groups = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_device_add_groups = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_device_add_groups to i32), ptr @__kstrtab_devm_device_add_groups, ptr @__kstrtabns_devm_device_add_groups }, section "___ksymtab_gpl+devm_device_add_groups", align 4
@__kstrtab_devm_device_remove_groups = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_device_remove_groups = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_device_remove_groups = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_device_remove_groups to i32), ptr @__kstrtab_devm_device_remove_groups, ptr @__kstrtabns_devm_device_remove_groups }, section "___ksymtab_gpl+devm_device_remove_groups", align 4
@devices_kset = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@devices_kset_move_last.__UNIQUE_ID_ddebug391 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.15, ptr @.str.2, ptr @.str.16, i8 2, i8 -84, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.15 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"devices_kset_move_last\00", [41 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"devices_kset: Moving %s to end of list\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Attribute %s: write permission without 'store'\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Attribute %s: read permission without 'show'\0A\00", [50 x i8] zeroinitializer }, align 32
@__kstrtab_device_create_file = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_create_file = external dso_local constant [0 x i8], align 1
@__ksymtab_device_create_file = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_create_file to i32), ptr @__kstrtab_device_create_file, ptr @__kstrtabns_device_create_file }, section "___ksymtab_gpl+device_create_file", align 4
@__kstrtab_device_remove_file = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_remove_file = external dso_local constant [0 x i8], align 1
@__ksymtab_device_remove_file = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_remove_file to i32), ptr @__kstrtab_device_remove_file, ptr @__kstrtabns_device_remove_file }, section "___ksymtab_gpl+device_remove_file", align 4
@__kstrtab_device_remove_file_self = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_remove_file_self = external dso_local constant [0 x i8], align 1
@__ksymtab_device_remove_file_self = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_remove_file_self to i32), ptr @__kstrtab_device_remove_file_self, ptr @__kstrtabns_device_remove_file_self }, section "___ksymtab_gpl+device_remove_file_self", align 4
@__kstrtab_device_create_bin_file = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_create_bin_file = external dso_local constant [0 x i8], align 1
@__ksymtab_device_create_bin_file = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_create_bin_file to i32), ptr @__kstrtab_device_create_bin_file, ptr @__kstrtabns_device_create_bin_file }, section "___ksymtab_gpl+device_create_bin_file", align 4
@__kstrtab_device_remove_bin_file = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_remove_bin_file = external dso_local constant [0 x i8], align 1
@__ksymtab_device_remove_bin_file = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_remove_bin_file to i32), ptr @__kstrtab_device_remove_bin_file, ptr @__kstrtabns_device_remove_bin_file }, section "___ksymtab_gpl+device_remove_bin_file", align 4
@device_ktype = internal global { %struct.kobj_type, [36 x i8] } { %struct.kobj_type { ptr @device_release, ptr @dev_sysfs_ops, ptr null, ptr null, ptr null, ptr @device_namespace, ptr @device_get_ownership }, [36 x i8] zeroinitializer }, align 32
@device_initialize.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.19 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&dev->mutex\00", [20 x i8] zeroinitializer }, align 32
@device_initialize.__key.20 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.21 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&dev->lockdep_mutex\00", [44 x i8] zeroinitializer }, align 32
@__lockdep_no_validate__ = external dso_local global %struct.lock_class_key, align 4
@device_initialize.__key.22 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.23 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&dev->devres_lock\00", [46 x i8] zeroinitializer }, align 32
@__kstrtab_device_initialize = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_initialize = external dso_local constant [0 x i8], align 1
@__ksymtab_device_initialize = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_initialize to i32), ptr @__kstrtab_device_initialize, ptr @__kstrtabns_device_initialize }, section "___ksymtab_gpl+device_initialize", align 4
@virtual_device_parent.virtual_dir = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.24 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"virtual\00", [24 x i8] zeroinitializer }, align 32
@__kstrtab_dev_set_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_name = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_name to i32), ptr @__kstrtab_dev_set_name, ptr @__kstrtabns_dev_set_name }, section "___ksymtab_gpl+dev_set_name", align 4
@.str.25 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%s%u\00", [27 x i8] zeroinitializer }, align 32
@device_add.__UNIQUE_ID_ddebug392 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.27, ptr @.str.2, ptr @.str.28, i8 3, i8 62, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.27 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"device_add\00", [21 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"device: '%s': %s\0A\00", [46 x i8] zeroinitializer }, align 32
@dev_attr_uevent = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.112, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @uevent_show, ptr @uevent_store }, [36 x i8] zeroinitializer }, align 32
@dev_attr_dev = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.31, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @dev_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_device_add = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_add = external dso_local constant [0 x i8], align 1
@__ksymtab_device_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_add to i32), ptr @__kstrtab_device_add, ptr @__kstrtabns_device_add }, section "___ksymtab_gpl+device_add", align 4
@__kstrtab_device_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_register = external dso_local constant [0 x i8], align 1
@__ksymtab_device_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_register to i32), ptr @__kstrtab_device_register, ptr @__kstrtabns_device_register }, section "___ksymtab_gpl+device_register", align 4
@__kstrtab_get_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_get_device = external dso_local constant [0 x i8], align 1
@__ksymtab_get_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @get_device to i32), ptr @__kstrtab_get_device, ptr @__kstrtabns_get_device }, section "___ksymtab_gpl+get_device", align 4
@__kstrtab_put_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_put_device = external dso_local constant [0 x i8], align 1
@__ksymtab_put_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @put_device to i32), ptr @__kstrtab_put_device, ptr @__kstrtabns_put_device }, section "___ksymtab_gpl+put_device", align 4
@__kstrtab_kill_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_kill_device = external dso_local constant [0 x i8], align 1
@__ksymtab_kill_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kill_device to i32), ptr @__kstrtab_kill_device, ptr @__kstrtabns_kill_device }, section "___ksymtab_gpl+kill_device", align 4
@__kstrtab_device_del = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_del = external dso_local constant [0 x i8], align 1
@__ksymtab_device_del = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_del to i32), ptr @__kstrtab_device_del, ptr @__kstrtabns_device_del }, section "___ksymtab_gpl+device_del", align 4
@device_unregister.__UNIQUE_ID_ddebug393 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.29, ptr @.str.2, ptr @.str.28, i8 3, i8 -119, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.29 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"device_unregister\00", [46 x i8] zeroinitializer }, align 32
@__kstrtab_device_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_device_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_unregister to i32), ptr @__kstrtab_device_unregister, ptr @__kstrtabns_device_unregister }, section "___ksymtab_gpl+device_unregister", align 4
@__kstrtab_device_for_each_child = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_for_each_child = external dso_local constant [0 x i8], align 1
@__ksymtab_device_for_each_child = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_for_each_child to i32), ptr @__kstrtab_device_for_each_child, ptr @__kstrtabns_device_for_each_child }, section "___ksymtab_gpl+device_for_each_child", align 4
@__kstrtab_device_for_each_child_reverse = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_for_each_child_reverse = external dso_local constant [0 x i8], align 1
@__ksymtab_device_for_each_child_reverse = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_for_each_child_reverse to i32), ptr @__kstrtab_device_for_each_child_reverse, ptr @__kstrtabns_device_for_each_child_reverse }, section "___ksymtab_gpl+device_for_each_child_reverse", align 4
@__kstrtab_device_find_child = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_find_child = external dso_local constant [0 x i8], align 1
@__ksymtab_device_find_child = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_find_child to i32), ptr @__kstrtab_device_find_child, ptr @__kstrtabns_device_find_child }, section "___ksymtab_gpl+device_find_child", align 4
@__kstrtab_device_find_child_by_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_find_child_by_name = external dso_local constant [0 x i8], align 1
@__ksymtab_device_find_child_by_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_find_child_by_name to i32), ptr @__kstrtab_device_find_child_by_name, ptr @__kstrtabns_device_find_child_by_name }, section "___ksymtab_gpl+device_find_child_by_name", align 4
@.str.30 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"devices\00", [24 x i8] zeroinitializer }, align 32
@device_uevent_ops = internal constant { %struct.kset_uevent_ops, [20 x i8] } { %struct.kset_uevent_ops { ptr @dev_uevent_filter, ptr @dev_uevent_name, ptr @dev_uevent }, [20 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dev\00", [28 x i8] zeroinitializer }, align 32
@dev_kobj = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.32 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"block\00", [26 x i8] zeroinitializer }, align 32
@sysfs_dev_block_kobj = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.33 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"char\00", [27 x i8] zeroinitializer }, align 32
@sysfs_dev_char_kobj = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.34 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"module\00", [25 x i8] zeroinitializer }, align 32
@__kstrtab___root_device_register = external dso_local constant [0 x i8], align 1
@__kstrtabns___root_device_register = external dso_local constant [0 x i8], align 1
@__ksymtab___root_device_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__root_device_register to i32), ptr @__kstrtab___root_device_register, ptr @__kstrtabns___root_device_register }, section "___ksymtab_gpl+__root_device_register", align 4
@__kstrtab_root_device_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_root_device_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_root_device_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @root_device_unregister to i32), ptr @__kstrtab_root_device_unregister, ptr @__kstrtabns_root_device_unregister }, section "___ksymtab_gpl+root_device_unregister", align 4
@__kstrtab_device_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_create = external dso_local constant [0 x i8], align 1
@__ksymtab_device_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_create to i32), ptr @__kstrtab_device_create, ptr @__kstrtabns_device_create }, section "___ksymtab_gpl+device_create", align 4
@__kstrtab_device_create_with_groups = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_create_with_groups = external dso_local constant [0 x i8], align 1
@__ksymtab_device_create_with_groups = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_create_with_groups to i32), ptr @__kstrtab_device_create_with_groups, ptr @__kstrtabns_device_create_with_groups }, section "___ksymtab_gpl+device_create_with_groups", align 4
@__kstrtab_device_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_device_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_destroy to i32), ptr @__kstrtab_device_destroy, ptr @__kstrtabns_device_destroy }, section "___ksymtab_gpl+device_destroy", align 4
@device_rename.__UNIQUE_ID_ddebug395 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.35, ptr @.str.2, ptr @.str.36, i8 4, i8 32, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.35 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"device_rename\00", [18 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"renaming to %s\0A\00", [16 x i8] zeroinitializer }, align 32
@__kstrtab_device_rename = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_rename = external dso_local constant [0 x i8], align 1
@__ksymtab_device_rename = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_rename to i32), ptr @__kstrtab_device_rename, ptr @__kstrtabns_device_rename }, section "___ksymtab_gpl+device_rename", align 4
@device_move.__UNIQUE_ID_ddebug396 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.37, ptr @.str.2, ptr @.str.38, i8 4, i8 49, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.37 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"device_move\00", [20 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"device: '%s': %s: moving to '%s'\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"<NULL>\00", [25 x i8] zeroinitializer }, align 32
@__kstrtab_device_move = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_move = external dso_local constant [0 x i8], align 1
@__ksymtab_device_move = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_move to i32), ptr @__kstrtab_device_move, ptr @__kstrtabns_device_move }, section "___ksymtab_gpl+device_move", align 4
@block_class = external dso_local global %struct.class, align 4
@__kstrtab_device_change_owner = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_change_owner = external dso_local constant [0 x i8], align 1
@__ksymtab_device_change_owner = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_change_owner to i32), ptr @__kstrtab_device_change_owner, ptr @__kstrtabns_device_change_owner }, section "___ksymtab_gpl+device_change_owner", align 4
@initcall_debug = external dso_local local_unnamed_addr global i8, align 1
@device_shutdown._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.40, ptr @.str.41, ptr @.str.2, i32 4523, ptr @.str.42, ptr @.str.43 }, [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"shutdown_pre\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"device_shutdown\00", [16 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@device_shutdown._entry_ptr = internal global ptr @device_shutdown._entry, section ".printk_index", align 4
@device_shutdown._entry.44 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.41, ptr @.str.2, i32 4528, ptr @.str.42, ptr @.str.43 }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"shutdown\0A\00", [22 x i8] zeroinitializer }, align 32
@device_shutdown._entry_ptr.46 = internal global ptr @device_shutdown._entry.44, section ".printk_index", align 4
@device_shutdown._entry.47 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.41, ptr @.str.2, i32 4532, ptr @.str.42, ptr @.str.43 }, [40 x i8] zeroinitializer }, align 32
@device_shutdown._entry_ptr.48 = internal global ptr @device_shutdown._entry.47, section ".printk_index", align 4
@__kstrtab_dev_vprintk_emit = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_vprintk_emit = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_vprintk_emit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_vprintk_emit to i32), ptr @__kstrtab_dev_vprintk_emit, ptr @__kstrtabns_dev_vprintk_emit }, section "___ksymtab+dev_vprintk_emit", align 4
@__kstrtab_dev_printk_emit = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_printk_emit = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_printk_emit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_printk_emit to i32), ptr @__kstrtab_dev_printk_emit, ptr @__kstrtabns_dev_printk_emit }, section "___ksymtab+dev_printk_emit", align 4
@__kstrtab__dev_printk = external dso_local constant [0 x i8], align 1
@__kstrtabns__dev_printk = external dso_local constant [0 x i8], align 1
@__ksymtab__dev_printk = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_dev_printk to i32), ptr @__kstrtab__dev_printk, ptr @__kstrtabns__dev_printk }, section "___ksymtab+_dev_printk", align 4
@.str.49 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\010\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab__dev_emerg = external dso_local constant [0 x i8], align 1
@__kstrtabns__dev_emerg = external dso_local constant [0 x i8], align 1
@__ksymtab__dev_emerg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_dev_emerg to i32), ptr @__kstrtab__dev_emerg, ptr @__kstrtabns__dev_emerg }, section "___ksymtab+_dev_emerg", align 4
@.str.50 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\011\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab__dev_alert = external dso_local constant [0 x i8], align 1
@__kstrtabns__dev_alert = external dso_local constant [0 x i8], align 1
@__ksymtab__dev_alert = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_dev_alert to i32), ptr @__kstrtab__dev_alert, ptr @__kstrtabns__dev_alert }, section "___ksymtab+_dev_alert", align 4
@.str.51 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\012\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab__dev_crit = external dso_local constant [0 x i8], align 1
@__kstrtabns__dev_crit = external dso_local constant [0 x i8], align 1
@__ksymtab__dev_crit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_dev_crit to i32), ptr @__kstrtab__dev_crit, ptr @__kstrtabns__dev_crit }, section "___ksymtab+_dev_crit", align 4
@.str.52 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab__dev_err = external dso_local constant [0 x i8], align 1
@__kstrtabns__dev_err = external dso_local constant [0 x i8], align 1
@__ksymtab__dev_err = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_dev_err to i32), ptr @__kstrtab__dev_err, ptr @__kstrtabns__dev_err }, section "___ksymtab+_dev_err", align 4
@.str.53 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab__dev_warn = external dso_local constant [0 x i8], align 1
@__kstrtabns__dev_warn = external dso_local constant [0 x i8], align 1
@__ksymtab__dev_warn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_dev_warn to i32), ptr @__kstrtab__dev_warn, ptr @__kstrtabns__dev_warn }, section "___ksymtab+_dev_warn", align 4
@.str.54 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\015\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab__dev_notice = external dso_local constant [0 x i8], align 1
@__kstrtabns__dev_notice = external dso_local constant [0 x i8], align 1
@__ksymtab__dev_notice = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_dev_notice to i32), ptr @__kstrtab__dev_notice, ptr @__kstrtabns__dev_notice }, section "___ksymtab+_dev_notice", align 4
@__kstrtab__dev_info = external dso_local constant [0 x i8], align 1
@__kstrtabns__dev_info = external dso_local constant [0 x i8], align 1
@__ksymtab__dev_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_dev_info to i32), ptr @__kstrtab__dev_info, ptr @__kstrtabns__dev_info }, section "___ksymtab+_dev_info", align 4
@dev_err_probe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.56, ptr @.str.2, i32 4719, ptr @.str.52, ptr @.str.43 }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"error %pe: %pV\00", [17 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"dev_err_probe\00", [18 x i8] zeroinitializer }, align 32
@dev_err_probe._entry_ptr = internal global ptr @dev_err_probe._entry, section ".printk_index", align 4
@dev_err_probe.__UNIQUE_ID_ddebug397 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.56, ptr @.str.2, ptr @.str.55, i8 4, i8 -100, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@__kstrtab_dev_err_probe = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_err_probe = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_err_probe = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_err_probe to i32), ptr @__kstrtab_dev_err_probe, ptr @__kstrtabns_dev_err_probe }, section "___ksymtab_gpl+dev_err_probe", align 4
@__kstrtab_set_primary_fwnode = external dso_local constant [0 x i8], align 1
@__kstrtabns_set_primary_fwnode = external dso_local constant [0 x i8], align 1
@__ksymtab_set_primary_fwnode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @set_primary_fwnode to i32), ptr @__kstrtab_set_primary_fwnode, ptr @__kstrtabns_set_primary_fwnode }, section "___ksymtab_gpl+set_primary_fwnode", align 4
@__kstrtab_set_secondary_fwnode = external dso_local constant [0 x i8], align 1
@__kstrtabns_set_secondary_fwnode = external dso_local constant [0 x i8], align 1
@__ksymtab_set_secondary_fwnode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @set_secondary_fwnode to i32), ptr @__kstrtab_set_secondary_fwnode, ptr @__kstrtabns_set_secondary_fwnode }, section "___ksymtab_gpl+set_secondary_fwnode", align 4
@__kstrtab_device_set_of_node_from_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_set_of_node_from_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_device_set_of_node_from_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_set_of_node_from_dev to i32), ptr @__kstrtab_device_set_of_node_from_dev, ptr @__kstrtabns_device_set_of_node_from_dev }, section "___ksymtab_gpl+device_set_of_node_from_dev", align 4
@__kstrtab_device_set_node = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_set_node = external dso_local constant [0 x i8], align 1
@__ksymtab_device_set_node = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_set_node to i32), ptr @__kstrtab_device_set_node, ptr @__kstrtabns_device_set_node }, section "___ksymtab_gpl+device_set_node", align 4
@__kstrtab_device_match_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_match_name = external dso_local constant [0 x i8], align 1
@__ksymtab_device_match_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_match_name to i32), ptr @__kstrtab_device_match_name, ptr @__kstrtabns_device_match_name }, section "___ksymtab_gpl+device_match_name", align 4
@__kstrtab_device_match_of_node = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_match_of_node = external dso_local constant [0 x i8], align 1
@__ksymtab_device_match_of_node = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_match_of_node to i32), ptr @__kstrtab_device_match_of_node, ptr @__kstrtabns_device_match_of_node }, section "___ksymtab_gpl+device_match_of_node", align 4
@__kstrtab_device_match_fwnode = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_match_fwnode = external dso_local constant [0 x i8], align 1
@__ksymtab_device_match_fwnode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_match_fwnode to i32), ptr @__kstrtab_device_match_fwnode, ptr @__kstrtabns_device_match_fwnode }, section "___ksymtab_gpl+device_match_fwnode", align 4
@__kstrtab_device_match_devt = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_match_devt = external dso_local constant [0 x i8], align 1
@__ksymtab_device_match_devt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_match_devt to i32), ptr @__kstrtab_device_match_devt, ptr @__kstrtabns_device_match_devt }, section "___ksymtab_gpl+device_match_devt", align 4
@__kstrtab_device_match_acpi_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_match_acpi_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_device_match_acpi_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_match_acpi_dev to i32), ptr @__kstrtab_device_match_acpi_dev, ptr @__kstrtabns_device_match_acpi_dev }, section "___ksymtab+device_match_acpi_dev", align 4
@__kstrtab_device_match_acpi_handle = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_match_acpi_handle = external dso_local constant [0 x i8], align 1
@__ksymtab_device_match_acpi_handle = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_match_acpi_handle to i32), ptr @__kstrtab_device_match_acpi_handle, ptr @__kstrtabns_device_match_acpi_handle }, section "___ksymtab+device_match_acpi_handle", align 4
@__kstrtab_device_match_any = external dso_local constant [0 x i8], align 1
@__kstrtabns_device_match_any = external dso_local constant [0 x i8], align 1
@__ksymtab_device_match_any = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @device_match_any to i32), ptr @__kstrtab_device_match_any, ptr @__kstrtabns_device_match_any }, section "___ksymtab_gpl+device_match_any", align 4
@__pcpu_unique_device_links_srcu_srcu_data = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@device_links_srcu_srcu_data = weak dso_local global %struct.srcu_data zeroinitializer, section ".data..percpu", align 128
@.str.57 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"fwnode_link_lock.wait_lock\00", [37 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"fwnode_link_lock\00", [47 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@__fwnode_link_del.__UNIQUE_ID_ddebug359 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.59, ptr @.str.2, ptr @.str.60, i8 0, i8 28, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.59 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__fwnode_link_del\00", [46 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%pfwP Dropping the fwnode link to %pfwP\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"device_links_srcu.lock\00", [41 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"(device_links_srcu.work).work\00", [34 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"drivers/base/core.c:183\00", [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"device_links_srcu\00", [46 x i8] zeroinitializer }, align 32
@srcu_read_unlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.65 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"include/linux/srcu.h\00", [43 x i8] zeroinitializer }, align 32
@devlink_class_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@devlink_class_intf = internal global { %struct.class_interface, [44 x i8] } { %struct.class_interface { %struct.list_head zeroinitializer, ptr @devlink_class, ptr @devlink_add_symlinks, ptr @devlink_remove_symlinks }, [44 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"supplier\00", [23 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"consumer\00", [23 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"consumer:%s:%s\00", [17 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"supplier:%s:%s\00", [17 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Unable to properly free device link symlinks!\0A\00", [49 x i8] zeroinitializer }, align 32
@device_links_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.71, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @device_links_lock, i64 52), ptr getelementptr (i8, ptr @device_links_lock, i64 52) }, ptr @device_links_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.72, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"device_links_lock.wait_lock\00", [36 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"device_links_lock\00", [46 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"devlink\00", [24 x i8] zeroinitializer }, align 32
@devlink_groups = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @devlink_group, ptr null], [24 x i8] zeroinitializer }, align 32
@devlink_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr null, ptr null, ptr @devlink_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@devlink_attrs = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @dev_attr_status, ptr @dev_attr_auto_remove_on, ptr @dev_attr_runtime_pm, ptr @dev_attr_sync_state_only, ptr null], [44 x i8] zeroinitializer }, align 32
@dev_attr_status = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.74, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @status_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_auto_remove_on = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.83, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @auto_remove_on_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_runtime_pm = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.87, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @runtime_pm_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_sync_state_only = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.88, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @sync_state_only_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"status\00", [25 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"not tracked\00", [20 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dormant\00", [24 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"available\00", [22 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"consumer probing\00", [47 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"active\00", [25 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"supplier unbinding\00", [45 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unknown\00", [24 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"auto_remove_on\00", [17 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"supplier unbind\00", [16 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"consumer unbind\00", [16 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"never\00", [26 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"runtime_pm\00", [21 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sync_state_only\00", [16 x i8] zeroinitializer }, align 32
@devlink_dev_release.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.89 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"(work_completion)(&link->rm_work)\00", [62 x i8] zeroinitializer }, align 32
@system_long_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.90 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.91 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Unable to drop a managed device link reference\0A\00", [48 x i8] zeroinitializer }, align 32
@__device_link_del.__UNIQUE_ID_ddebug367 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.92, ptr @.str.2, ptr @.str.93, i8 0, i8 -35, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.92 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__device_link_del\00", [46 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Dropping the link to %s\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"waiting_for_supplier\00", [43 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%u\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"off\00", [28 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"permissive\00", [21 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"on\00", [29 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"rpm\00", [28 x i8] zeroinitializer }, align 32
@fw_devlink_relax_link.__UNIQUE_ID_ddebug382 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.100, ptr @.str.2, ptr @.str.101, i8 1, i8 -104, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.100 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"fw_devlink_relax_link\00", [42 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Relaxing link with %s\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"device_hotplug_lock.wait_lock\00", [34 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"device_hotplug_lock\00", [44 x i8] zeroinitializer }, align 32
@devm_attr_group_remove.__UNIQUE_ID_ddebug387 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.13, ptr @.str.2, ptr @.str.104, i8 2, i8 112, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.104 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: removing group %p\0A\00", [41 x i8] zeroinitializer }, align 32
@devm_attr_groups_remove.__UNIQUE_ID_ddebug388 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.105, i8 2, i8 114, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.105 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s: removing groups %p\0A\00", [40 x i8] zeroinitializer }, align 32
@dev_sysfs_ops = internal constant { %struct.sysfs_ops, [24 x i8] } { %struct.sysfs_ops { ptr @dev_attr_show, ptr @dev_attr_store }, [24 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [123 x i8], [37 x i8] } { [123 x i8] c"\013Device '%s' does not have a release() function, it is broken and must be fixed. See Documentation/core-api/kobject.rst.\0A\00", [37 x i8] zeroinitializer }, align 32
@dev_attr_show._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.107, ptr @.str.108, ptr @.str.2, i32 2097, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"dev_attr_show: %pS returned bad count\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"dev_attr_show\00", [18 x i8] zeroinitializer }, align 32
@dev_attr_show._entry_ptr = internal global ptr @dev_attr_show._entry, section ".printk_index", align 4
@device_pm_init_common.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.109 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&dev->power.lock\00", [47 x i8] zeroinitializer }, align 32
@gdp_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.110, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @gdp_mutex, i64 52), ptr getelementptr (i8, ptr @gdp_mutex, i64 52) }, ptr @gdp_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.111, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"gdp_mutex.wait_lock\00", [44 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"gdp_mutex\00", [22 x i8] zeroinitializer }, align 32
@class_dir_ktype = internal global { %struct.kobj_type, [36 x i8] } { %struct.kobj_type { ptr @class_dir_release, ptr @kobj_sysfs_ops, ptr null, ptr null, ptr @class_dir_child_ns_type, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@kobj_sysfs_ops = external dso_local constant %struct.sysfs_ops, align 4
@.str.112 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"uevent\00", [25 x i8] zeroinitializer }, align 32
@uevent_store._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.113, ptr @.str.114, ptr @.str.2, i32 2411, ptr @.str.52, ptr @.str.43 }, [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"uevent: failed to send synthetic uevent\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"uevent_store\00", [19 x i8] zeroinitializer }, align 32
@uevent_store._entry_ptr = internal global ptr @uevent_store._entry, section ".printk_index", align 4
@.str.115 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"of_node\00", [24 x i8] zeroinitializer }, align 32
@device_add_class_symlinks._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.116, ptr @.str.117, ptr @.str.2, i32 3120, ptr @.str.53, ptr @.str.43 }, [40 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Error %d creating of_node link\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"device_add_class_symlinks\00", [38 x i8] zeroinitializer }, align 32
@device_add_class_symlinks._entry_ptr = internal global ptr @device_add_class_symlinks._entry, section ".printk_index", align 4
@.str.118 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"subsystem\00", [22 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"device\00", [25 x i8] zeroinitializer }, align 32
@part_type = external dso_local global %struct.device_type, align 4
@dev_attr_online = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.120, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @online_show, ptr @online_store }, [36 x i8] zeroinitializer }, align 32
@dev_attr_removable = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.121, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @removable_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"online\00", [25 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"removable\00", [22 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"fixed\00", [26 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%u:%u\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%u:%u\00", [26 x i8] zeroinitializer }, align 32
@fw_devlink_create_devlink._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.125, ptr @.str.126, ptr @.str.2, i32 1776, ptr @.str.42, ptr @.str.43 }, [40 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Fixing up cyclic dependency with %s\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"fw_devlink_create_devlink\00", [38 x i8] zeroinitializer }, align 32
@fw_devlink_create_devlink._entry_ptr = internal global ptr @fw_devlink_create_devlink._entry, section ".printk_index", align 4
@fw_devlink_create_devlink._entry.127 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.128, ptr @.str.126, ptr @.str.2, i32 1817, ptr @.str.42, ptr @.str.43 }, [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Fixing up cyclic dependency with %pfwP (%s)\0A\00", [51 x i8] zeroinitializer }, align 32
@fw_devlink_create_devlink._entry_ptr.129 = internal global ptr @fw_devlink_create_devlink._entry.127, section ".printk_index", align 4
@kobject_has_children.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.130 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/device.h\00", [41 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MAJOR=%u\00", [23 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MINOR=%u\00", [23 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"DEVNAME=%s\00", [21 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"DEVMODE=%#o\00", [20 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"DEVUID=%u\00", [22 x i8] zeroinitializer }, align 32
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@.str.136 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"DEVGID=%u\00", [22 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"DEVTYPE=%s\00", [21 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"DRIVER=%s\00", [22 x i8] zeroinitializer }, align 32
@dev_uevent.__UNIQUE_ID_ddebug384 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.139, ptr @.str.2, ptr @.str.140, i8 2, i8 70, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.139 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"dev_uevent\00", [21 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"device: '%s': %s: bus uevent() returned %d\0A\00", [52 x i8] zeroinitializer }, align 32
@dev_uevent.__UNIQUE_ID_ddebug385 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.139, ptr @.str.2, ptr @.str.141, i8 2, i8 72, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.141 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"device: '%s': %s: class uevent() returned %d\0A\00", [50 x i8] zeroinitializer }, align 32
@dev_uevent.__UNIQUE_ID_ddebug386 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.139, ptr @.str.2, ptr @.str.142, i8 2, i8 75, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.142 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"device: '%s': %s: dev_type uevent() returned %d\0A\00", [47 x i8] zeroinitializer }, align 32
@device_create_release.__UNIQUE_ID_ddebug394 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.143, ptr @.str.2, ptr @.str.28, i8 3, i8 -17, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.143 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"device_create_release\00", [42 x i8] zeroinitializer }, align 32
@devices_kset_move_after.__UNIQUE_ID_ddebug390 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.144, ptr @.str.2, ptr @.str.145, i8 2, i8 -88, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.144 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"devices_kset_move_after\00", [40 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"devices_kset: Moving %s after %s\0A\00", [62 x i8] zeroinitializer }, align 32
@devices_kset_move_before.__UNIQUE_ID_ddebug389 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.146, ptr @.str.2, ptr @.str.147, i8 2, i8 -92, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.146 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"devices_kset_move_before\00", [39 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"devices_kset: Moving %s before %s\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%c%u:%u\00", [24 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"net\00", [28 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"n%u\00", [28 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"+%s:%s\00", [25 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s %s: %pV\00", [21 x i8] zeroinitializer }, align 32
@__dev_printk._entry = internal constant %struct.pi_entry { ptr @.str.153, ptr @.str.154, ptr @.str.2, i32 4630, ptr null, ptr null }, align 1
@.str.153 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s(NULL device *): %pV\00", [41 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__dev_printk\00", [19 x i8] zeroinitializer }, align 32
@__dev_printk._entry_ptr = internal global ptr @__dev_printk._entry, section ".printk_index", align 4
@of_fwnode_ops = external dso_local constant %struct.fwnode_operations, align 4
@switch.table.status_show = internal constant { [6 x ptr], [40 x i8] } { [6 x ptr] [ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80], [40 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.155 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.156 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 2, i64 3]
@__sancov_gen_cov_switch_values.157 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 384]
@__sancov_gen_cov_switch_values.158 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 384]
@__sancov_gen_cov_switch_values.159 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@___asan_gen_.160 = private unnamed_addr constant [17 x i8] c"sysfs_deprecated\00", align 1
@___asan_gen_.162 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 39, i32 6 }
@___asan_gen_.163 = private unnamed_addr constant [17 x i8] c"fwnode_link_lock\00", align 1
@___asan_gen_.177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 98, i32 2 }
@___asan_gen_.178 = private unnamed_addr constant [18 x i8] c"device_links_srcu\00", align 1
@___asan_gen_.181 = private unnamed_addr constant [14 x i8] c"devlink_class\00", align 1
@___asan_gen_.183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 509, i32 21 }
@___asan_gen_.186 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 819, i32 32 }
@___asan_gen_.192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 853, i32 3 }
@___asan_gen_.195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 869, i32 2 }
@___asan_gen_.198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 999, i32 37 }
@___asan_gen_.201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1016, i32 11 }
@___asan_gen_.202 = private unnamed_addr constant [23 x i8] c"defer_sync_state_count\00", align 1
@___asan_gen_.204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 52, i32 21 }
@___asan_gen_.207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1125, i32 3 }
@___asan_gen_.208 = private unnamed_addr constant [14 x i8] c"deferred_sync\00", align 1
@___asan_gen_.210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 51, i32 8 }
@___asan_gen_.211 = private unnamed_addr constant [30 x i8] c"dev_attr_waiting_for_supplier\00", align 1
@___asan_gen_.214 = private unnamed_addr constant [17 x i8] c"fw_devlink_flags\00", align 1
@___asan_gen_.216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1564, i32 12 }
@___asan_gen_.217 = private unnamed_addr constant [18 x i8] c"fw_devlink_strict\00", align 1
@___asan_gen_.219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1583, i32 13 }
@___asan_gen_.220 = private unnamed_addr constant [24 x i8] c"fw_devlink_drv_reg_done\00", align 1
@___asan_gen_.221 = private unnamed_addr constant [16 x i8] c"platform_notify\00", align 1
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2002, i32 7 }
@___asan_gen_.224 = private unnamed_addr constant [23 x i8] c"platform_notify_remove\00", align 1
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2003, i32 7 }
@___asan_gen_.227 = private unnamed_addr constant [20 x i8] c"device_hotplug_lock\00", align 1
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2143, i32 25 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2173, i32 25 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2525, i32 11 }
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2578, i32 11 }
@___asan_gen_.242 = private unnamed_addr constant [13 x i8] c"devices_kset\00", align 1
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2695, i32 14 }
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2737, i32 2 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2754, i32 3 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2757, i32 3 }
@___asan_gen_.257 = private unnamed_addr constant [13 x i8] c"device_ktype\00", align 1
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2255, i32 25 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2866, i32 2 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2868, i32 2 }
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2871, i32 2 }
@___asan_gen_.278 = private unnamed_addr constant [12 x i8] c"virtual_dir\00", align 1
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2892, i32 25 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2895, i32 40 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3310, i32 21 }
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3316, i32 21 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3323, i32 2 }
@___asan_gen_.296 = private unnamed_addr constant [16 x i8] c"dev_attr_uevent\00", align 1
@___asan_gen_.299 = private unnamed_addr constant [13 x i8] c"dev_attr_dev\00", align 1
@___asan_gen_.301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2692, i32 8 }
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3623, i32 2 }
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3825, i32 37 }
@___asan_gen_.308 = private unnamed_addr constant [18 x i8] c"device_uevent_ops\00", align 1
@___asan_gen_.310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2354, i32 37 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3828, i32 36 }
@___asan_gen_.314 = private unnamed_addr constant [9 x i8] c"dev_kobj\00", align 1
@___asan_gen_.316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2004, i32 24 }
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3831, i32 48 }
@___asan_gen_.320 = private unnamed_addr constant [21 x i8] c"sysfs_dev_block_kobj\00", align 1
@___asan_gen_.322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2006, i32 17 }
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3834, i32 47 }
@___asan_gen_.326 = private unnamed_addr constant [20 x i8] c"sysfs_dev_char_kobj\00", align 1
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2005, i32 17 }
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3994, i32 55 }
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4224, i32 2 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4293, i32 2 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4523, i32 5 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4528, i32 5 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4532, i32 5 }
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4667, i32 1 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4668, i32 1 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4669, i32 1 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4670, i32 1 }
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4671, i32 1 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4672, i32 1 }
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4719, i32 3 }
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 53, i32 8 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 114, i32 2 }
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 183, i32 1 }
@___asan_gen_.423 = private unnamed_addr constant [24 x i8] c"../include/linux/srcu.h\00", align 1
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.423, i32 189, i32 2 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 607, i32 8 }
@___asan_gen_.428 = private unnamed_addr constant [19 x i8] c"devlink_class_intf\00", align 1
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 597, i32 31 }
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 534, i32 60 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 538, i32 60 }
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 542, i32 21 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 547, i32 21 }
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 584, i32 3 }
@___asan_gen_.446 = private unnamed_addr constant [18 x i8] c"device_links_lock\00", align 1
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 182, i32 8 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 510, i32 10 }
@___asan_gen_.458 = private unnamed_addr constant [15 x i8] c"devlink_groups\00", align 1
@___asan_gen_.461 = private unnamed_addr constant [14 x i8] c"devlink_group\00", align 1
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 479, i32 1 }
@___asan_gen_.464 = private unnamed_addr constant [14 x i8] c"devlink_attrs\00", align 1
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 472, i32 26 }
@___asan_gen_.467 = private unnamed_addr constant [16 x i8] c"dev_attr_status\00", align 1
@___asan_gen_.470 = private unnamed_addr constant [24 x i8] c"dev_attr_auto_remove_on\00", align 1
@___asan_gen_.473 = private unnamed_addr constant [20 x i8] c"dev_attr_runtime_pm\00", align 1
@___asan_gen_.476 = private unnamed_addr constant [25 x i8] c"dev_attr_sync_state_only\00", align 1
@___asan_gen_.481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 434, i32 8 }
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 410, i32 12 }
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 413, i32 12 }
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 416, i32 12 }
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 419, i32 12 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 422, i32 12 }
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 425, i32 12 }
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 428, i32 12 }
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 432, i32 25 }
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 451, i32 8 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 443, i32 12 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 445, i32 12 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 447, i32 12 }
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 460, i32 8 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 470, i32 8 }
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 499, i32 2 }
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.678, i32 651, i32 70 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 902, i32 3 }
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 886, i32 2 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1177, i32 8 }
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1175, i32 25 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1570, i32 18 }
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1572, i32 25 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1574, i32 25 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1576, i32 25 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1634, i32 2 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2008, i32 8 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2497, i32 2 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2506, i32 2 }
@___asan_gen_.578 = private unnamed_addr constant [14 x i8] c"dev_sysfs_ops\00", align 1
@___asan_gen_.580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2114, i32 31 }
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2231, i32 3 }
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2096, i32 3 }
@___asan_gen_.593 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.597 = private unnamed_addr constant [30 x i8] c"../drivers/base/power/power.h\00", align 1
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.597, i32 7, i32 3 }
@___asan_gen_.599 = private unnamed_addr constant [10 x i8] c"gdp_mutex\00", align 1
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2950, i32 8 }
@___asan_gen_.608 = private unnamed_addr constant [16 x i8] c"class_dir_ktype\00", align 1
@___asan_gen_.610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2921, i32 25 }
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2417, i32 8 }
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2411, i32 3 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3118, i32 64 }
@___asan_gen_.634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3120, i32 4 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3129, i32 7 }
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3135, i32 8 }
@___asan_gen_.641 = private unnamed_addr constant [16 x i8] c"dev_attr_online\00", align 1
@___asan_gen_.644 = private unnamed_addr constant [19 x i8] c"dev_attr_removable\00", align 1
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2448, i32 8 }
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2467, i32 8 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2460, i32 9 }
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2690, i32 9 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3229, i32 3 }
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1775, i32 4 }
@___asan_gen_.671 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 1816, i32 3 }
@___asan_gen_.678 = private unnamed_addr constant [26 x i8] c"../include/linux/device.h\00", align 1
@___asan_gen_.679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.678, i32 787, i32 2 }
@___asan_gen_.682 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2301, i32 23 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2302, i32 23 }
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2305, i32 24 }
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2307, i32 25 }
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2309, i32 25 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2311, i32 25 }
@___asan_gen_.700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2317, i32 23 }
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2320, i32 23 }
@___asan_gen_.709 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2329, i32 4 }
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2337, i32 4 }
@___asan_gen_.715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2346, i32 4 }
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4028, i32 2 }
@___asan_gen_.724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2722, i32 2 }
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 2706, i32 2 }
@___asan_gen_.733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4585, i32 5 }
@___asan_gen_.736 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4586, i32 28 }
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4590, i32 5 }
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4593, i32 5 }
@___asan_gen_.745 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4627, i32 40 }
@___asan_gen_.749 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.750 = private constant [23 x i8] c"../drivers/base/core.c\00", align 1
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4630, i32 3 }
@___asan_gen_.752 = private unnamed_addr constant [25 x i8] c"switch.table.status_show\00", align 1
@llvm.compiler.used = appending global [280 x ptr] [ptr @__dev_printk._entry, ptr @__dev_printk._entry_ptr, ptr @__initcall__kmod_core__364_617_devlink_class_init2, ptr @__initcall__kmod_core__371_1151_sync_state_resume_initcall7, ptr @__ksymtab___root_device_register, ptr @__ksymtab__dev_alert, ptr @__ksymtab__dev_crit, ptr @__ksymtab__dev_emerg, ptr @__ksymtab__dev_err, ptr @__ksymtab__dev_info, ptr @__ksymtab__dev_notice, ptr @__ksymtab__dev_printk, ptr @__ksymtab__dev_warn, ptr @__ksymtab_dev_driver_string, ptr @__ksymtab_dev_err_probe, ptr @__ksymtab_dev_printk_emit, ptr @__ksymtab_dev_set_name, ptr @__ksymtab_dev_vprintk_emit, ptr @__ksymtab_device_add, ptr @__ksymtab_device_add_groups, ptr @__ksymtab_device_change_owner, ptr @__ksymtab_device_create, ptr @__ksymtab_device_create_bin_file, ptr @__ksymtab_device_create_file, ptr @__ksymtab_device_create_with_groups, ptr @__ksymtab_device_del, ptr @__ksymtab_device_destroy, ptr @__ksymtab_device_find_child, ptr @__ksymtab_device_find_child_by_name, ptr @__ksymtab_device_for_each_child, ptr @__ksymtab_device_for_each_child_reverse, ptr @__ksymtab_device_initialize, ptr @__ksymtab_device_link_add, ptr @__ksymtab_device_link_del, ptr @__ksymtab_device_link_remove, ptr @__ksymtab_device_match_acpi_dev, ptr @__ksymtab_device_match_acpi_handle, ptr @__ksymtab_device_match_any, ptr @__ksymtab_device_match_devt, ptr @__ksymtab_device_match_fwnode, ptr @__ksymtab_device_match_name, ptr @__ksymtab_device_match_of_node, ptr @__ksymtab_device_move, ptr @__ksymtab_device_register, ptr @__ksymtab_device_remove_bin_file, ptr @__ksymtab_device_remove_file, ptr @__ksymtab_device_remove_file_self, ptr @__ksymtab_device_remove_groups, ptr @__ksymtab_device_rename, ptr @__ksymtab_device_set_node, ptr @__ksymtab_device_set_of_node_from_dev, ptr @__ksymtab_device_show_bool, ptr @__ksymtab_device_show_int, ptr @__ksymtab_device_show_ulong, ptr @__ksymtab_device_store_bool, ptr @__ksymtab_device_store_int, ptr @__ksymtab_device_store_ulong, ptr @__ksymtab_device_unregister, ptr @__ksymtab_devm_device_add_group, ptr @__ksymtab_devm_device_add_groups, ptr @__ksymtab_devm_device_remove_group, ptr @__ksymtab_devm_device_remove_groups, ptr @__ksymtab_fw_devlink_purge_absent_suppliers, ptr @__ksymtab_get_device, ptr @__ksymtab_kill_device, ptr @__ksymtab_put_device, ptr @__ksymtab_root_device_unregister, ptr @__ksymtab_set_primary_fwnode, ptr @__ksymtab_set_secondary_fwnode, ptr @__setup_fw_devlink_setup, ptr @__setup_fw_devlink_strict_setup, ptr @__setup_sysfs_deprecated_setup, ptr @dev_attr_show._entry, ptr @dev_attr_show._entry_ptr, ptr @dev_err_probe._entry, ptr @dev_err_probe._entry_ptr, ptr @device_add_class_symlinks._entry, ptr @device_add_class_symlinks._entry_ptr, ptr @device_shutdown._entry, ptr @device_shutdown._entry.44, ptr @device_shutdown._entry.47, ptr @device_shutdown._entry_ptr, ptr @device_shutdown._entry_ptr.46, ptr @device_shutdown._entry_ptr.48, ptr @fw_devlink_create_devlink._entry, ptr @fw_devlink_create_devlink._entry.127, ptr @fw_devlink_create_devlink._entry_ptr, ptr @fw_devlink_create_devlink._entry_ptr.129, ptr @uevent_store._entry, ptr @uevent_store._entry_ptr, ptr @sysfs_deprecated, ptr @fwnode_link_lock, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @device_links_srcu, ptr @devlink_class, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @defer_sync_state_count, ptr @.str.10, ptr @deferred_sync, ptr @dev_attr_waiting_for_supplier, ptr @fw_devlink_flags, ptr @fw_devlink_strict, ptr @fw_devlink_drv_reg_done, ptr @platform_notify, ptr @platform_notify_remove, ptr @device_hotplug_lock, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @devices_kset, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @device_ktype, ptr @device_initialize.__key, ptr @.str.19, ptr @device_initialize.__key.20, ptr @.str.21, ptr @device_initialize.__key.22, ptr @.str.23, ptr @virtual_device_parent.virtual_dir, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @dev_attr_uevent, ptr @dev_attr_dev, ptr @.str.29, ptr @.str.30, ptr @device_uevent_ops, ptr @.str.31, ptr @dev_kobj, ptr @.str.32, ptr @sysfs_dev_block_kobj, ptr @.str.33, ptr @sysfs_dev_char_kobj, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.45, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @devlink_class_init.__key, ptr @devlink_class_intf, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @device_links_lock, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @devlink_groups, ptr @devlink_group, ptr @devlink_attrs, ptr @dev_attr_status, ptr @dev_attr_auto_remove_on, ptr @dev_attr_runtime_pm, ptr @dev_attr_sync_state_only, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @devlink_dev_release.__key, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @dev_sysfs_ops, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @device_pm_init_common.__key, ptr @.str.109, ptr @gdp_mutex, ptr @.str.110, ptr @.str.111, ptr @class_dir_ktype, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @dev_attr_online, ptr @dev_attr_removable, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.128, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @switch.table.status_show], section "llvm.metadata"
@0 = internal global [199 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sysfs_deprecated to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fwnode_link_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_links_srcu to i32), i32 824, i32 1024, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devlink_class to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @defer_sync_state_count to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @deferred_sync to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_waiting_for_supplier to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fw_devlink_flags to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fw_devlink_strict to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fw_devlink_drv_reg_done to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @platform_notify to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @platform_notify_remove to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_hotplug_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devices_kset to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_ktype to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_initialize.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_initialize.__key.20 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_initialize.__key.22 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @virtual_device_parent.virtual_dir to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_uevent to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_dev to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_uevent_ops to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_kobj to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sysfs_dev_block_kobj to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sysfs_dev_char_kobj to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_shutdown._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_shutdown._entry.44 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_shutdown._entry.47 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_err_probe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devlink_class_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devlink_class_intf to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_links_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devlink_groups to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devlink_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devlink_attrs to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_status to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_auto_remove_on to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_runtime_pm to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_sync_state_only to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devlink_dev_release.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_sysfs_ops to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 123, i32 160, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_show._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_pm_init_common.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gdp_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @class_dir_ktype to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uevent_store._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_add_class_symlinks._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_online to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_removable to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fw_devlink_create_devlink._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fw_devlink_create_devlink._entry.127 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.status_show to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @sysfs_deprecated_setup(ptr noundef %arg) #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @_kstrtol(ptr noundef %arg, i32 noundef 10, ptr noundef nonnull @sysfs_deprecated) #22
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @fwnode_link_add(ptr noundef %con, ptr noundef %sup) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @fwnode_link_lock, i32 noundef 0) #22
  %consumers = getelementptr inbounds %struct.fwnode_handle, ptr %sup, i32 0, i32 4
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry
  %.pn.in = phi ptr [ %consumers, %entry ], [ %.pn, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %consumer = getelementptr i8, ptr %.pn, i32 8
  %1 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %consumer, align 4
  %cmp2 = icmp eq ptr %2, %con
  br i1 %cmp2, label %for.body.out_crit_edge, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond

for.body.out_crit_edge:                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

for.end:                                          ; preds = %for.cond
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3520, i32 noundef 24) #25
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %for.end.out_crit_edge, label %if.end9

for.end.out_crit_edge:                            ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end9:                                          ; preds = %for.end
  %4 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %sup, ptr %call7.i.i, align 8
  %s_hook10 = getelementptr inbounds %struct.fwnode_link, ptr %call7.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %s_hook10 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %s_hook10, ptr %s_hook10, align 4
  %prev.i = getelementptr inbounds %struct.fwnode_link, ptr %call7.i.i, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %s_hook10, ptr %prev.i, align 8
  %consumer11 = getelementptr inbounds %struct.fwnode_link, ptr %call7.i.i, i32 0, i32 2
  %7 = ptrtoint ptr %consumer11 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %con, ptr %consumer11, align 4
  %c_hook = getelementptr inbounds %struct.fwnode_link, ptr %call7.i.i, i32 0, i32 3
  %8 = ptrtoint ptr %c_hook to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %c_hook, ptr %c_hook, align 8
  %prev.i40 = getelementptr inbounds %struct.fwnode_link, ptr %call7.i.i, i32 0, i32 3, i32 1
  %9 = ptrtoint ptr %prev.i40 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %c_hook, ptr %prev.i40, align 4
  %10 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %consumers, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %s_hook10, ptr noundef %consumers, ptr noundef %11) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end9.list_add.exit_crit_edge

if.end9.list_add.exit_crit_edge:                  ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %s_hook10, ptr %prev1.i.i, align 4
  %13 = ptrtoint ptr %s_hook10 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %11, ptr %s_hook10, align 4
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %consumers, ptr %prev.i, align 8
  %15 = ptrtoint ptr %consumers to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %s_hook10, ptr %consumers, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end9.list_add.exit_crit_edge
  %suppliers = getelementptr inbounds %struct.fwnode_handle, ptr %con, i32 0, i32 3
  %16 = ptrtoint ptr %suppliers to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %suppliers, align 4
  %call.i.i41 = tail call zeroext i1 @__list_add_valid(ptr noundef %c_hook, ptr noundef %suppliers, ptr noundef %17) #22
  br i1 %call.i.i41, label %if.end.i.i44, label %list_add.exit.list_add.exit45_crit_edge

list_add.exit.list_add.exit45_crit_edge:          ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add.exit45

if.end.i.i44:                                     ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i42 = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i42 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %c_hook, ptr %prev1.i.i42, align 4
  %19 = ptrtoint ptr %c_hook to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %17, ptr %c_hook, align 8
  %20 = ptrtoint ptr %prev.i40 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %suppliers, ptr %prev.i40, align 4
  %21 = ptrtoint ptr %suppliers to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %c_hook, ptr %suppliers, align 4
  br label %list_add.exit45

list_add.exit45:                                  ; preds = %if.end.i.i44, %list_add.exit.list_add.exit45_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @fwnode_link_add.__UNIQUE_ID_ddebug358, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@fwnode_link_add, %out)) #22
          to label %if.then22 [label %out], !srcloc !522

if.then22:                                        ; preds = %list_add.exit45
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @fwnode_link_add.__UNIQUE_ID_ddebug358, ptr noundef nonnull @.str.3, ptr noundef %con, ptr noundef %sup) #22
  br label %out

out:                                              ; preds = %if.then22, %list_add.exit45, %for.end.out_crit_edge, %for.body.out_crit_edge
  %ret.0 = phi i32 [ 0, %if.then22 ], [ -12, %for.end.out_crit_edge ], [ 0, %list_add.exit45 ], [ 0, %for.body.out_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @fwnode_link_lock) #22
  ret i32 %ret.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @fwnode_links_purge(ptr noundef %fwnode) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @fwnode_links_purge_suppliers(ptr noundef %fwnode)
  tail call fastcc void @fwnode_links_purge_consumers(ptr noundef %fwnode)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @fwnode_links_purge_suppliers(ptr noundef readonly %fwnode) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @fwnode_link_lock, i32 noundef 0) #22
  %suppliers = getelementptr inbounds %struct.fwnode_handle, ptr %fwnode, i32 0, i32 3
  %0 = ptrtoint ptr %suppliers to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %suppliers, align 4
  %cmp.not18 = icmp eq ptr %1, %suppliers
  br i1 %cmp.not18, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %__fwnode_link_del.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in19 = phi ptr [ %.pn, %__fwnode_link_del.exit.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %link.0 = getelementptr i8, ptr %.pn.in19, i32 -16
  %2 = ptrtoint ptr %.pn.in19 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn = load ptr, ptr %.pn.in19, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__fwnode_link_del.__UNIQUE_ID_ddebug359, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@fwnode_links_purge_suppliers, %do.end.i)) #22
          to label %if.then.i [label %do.end.i], !srcloc !522

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %consumer.i = getelementptr i8, ptr %.pn.in19, i32 -4
  %3 = ptrtoint ptr %consumer.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %consumer.i, align 4
  %5 = ptrtoint ptr %link.0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %link.0, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__fwnode_link_del.__UNIQUE_ID_ddebug359, ptr noundef nonnull @.str.60, ptr noundef %4, ptr noundef %6) #22
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %for.body
  %s_hook.i = getelementptr i8, ptr %.pn.in19, i32 -12
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %s_hook.i) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %do.end.i.list_del.exit.i_crit_edge

do.end.i.list_del.exit.i_crit_edge:               ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr i8, ptr %.pn.in19, i32 -8
  %7 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i.i, align 4
  %9 = ptrtoint ptr %s_hook.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %s_hook.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %do.end.i.list_del.exit.i_crit_edge
  %13 = ptrtoint ptr %s_hook.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %s_hook.i, align 4
  %prev.i.i = getelementptr i8, ptr %.pn.in19, i32 -8
  %14 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %call.i.i8.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in19) #22
  br i1 %call.i.i8.i, label %if.end.i.i11.i, label %list_del.exit.i.__fwnode_link_del.exit_crit_edge

list_del.exit.i.__fwnode_link_del.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__fwnode_link_del.exit

if.end.i.i11.i:                                   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i9.i = getelementptr i8, ptr %.pn.in19, i32 4
  %15 = ptrtoint ptr %prev.i.i9.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i9.i, align 4
  %17 = ptrtoint ptr %.pn.in19 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %.pn.in19, align 4
  %prev1.i.i.i10.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i10.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i10.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %__fwnode_link_del.exit

__fwnode_link_del.exit:                           ; preds = %if.end.i.i11.i, %list_del.exit.i.__fwnode_link_del.exit_crit_edge
  %21 = ptrtoint ptr %.pn.in19 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in19, align 4
  %prev.i12.i = getelementptr i8, ptr %.pn.in19, i32 4
  %22 = ptrtoint ptr %prev.i12.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i12.i, align 4
  tail call void @kfree(ptr noundef %link.0) #22
  %cmp.not = icmp eq ptr %.pn, %suppliers
  br i1 %cmp.not, label %__fwnode_link_del.exit.for.end_crit_edge, label %__fwnode_link_del.exit.for.body_crit_edge

__fwnode_link_del.exit.for.body_crit_edge:        ; preds = %__fwnode_link_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

__fwnode_link_del.exit.for.end_crit_edge:         ; preds = %__fwnode_link_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %__fwnode_link_del.exit.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @fwnode_link_lock) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @fwnode_links_purge_consumers(ptr noundef readonly %fwnode) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @fwnode_link_lock, i32 noundef 0) #22
  %consumers = getelementptr inbounds %struct.fwnode_handle, ptr %fwnode, i32 0, i32 4
  %0 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %consumers, align 4
  %cmp.not18 = icmp eq ptr %1, %consumers
  br i1 %cmp.not18, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %__fwnode_link_del.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in19 = phi ptr [ %.pn, %__fwnode_link_del.exit.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %link.0 = getelementptr i8, ptr %.pn.in19, i32 -4
  %2 = ptrtoint ptr %.pn.in19 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn = load ptr, ptr %.pn.in19, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__fwnode_link_del.__UNIQUE_ID_ddebug359, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@fwnode_links_purge_consumers, %do.end.i)) #22
          to label %if.then.i [label %do.end.i], !srcloc !522

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %consumer.i = getelementptr i8, ptr %.pn.in19, i32 8
  %3 = ptrtoint ptr %consumer.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %consumer.i, align 4
  %5 = ptrtoint ptr %link.0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %link.0, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__fwnode_link_del.__UNIQUE_ID_ddebug359, ptr noundef nonnull @.str.60, ptr noundef %4, ptr noundef %6) #22
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %for.body
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in19) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %do.end.i.list_del.exit.i_crit_edge

do.end.i.list_del.exit.i_crit_edge:               ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr i8, ptr %.pn.in19, i32 4
  %7 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i.i, align 4
  %9 = ptrtoint ptr %.pn.in19 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %.pn.in19, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %do.end.i.list_del.exit.i_crit_edge
  %13 = ptrtoint ptr %.pn.in19 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in19, align 4
  %prev.i.i = getelementptr i8, ptr %.pn.in19, i32 4
  %14 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %c_hook.i = getelementptr i8, ptr %.pn.in19, i32 12
  %call.i.i8.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %c_hook.i) #22
  br i1 %call.i.i8.i, label %if.end.i.i11.i, label %list_del.exit.i.__fwnode_link_del.exit_crit_edge

list_del.exit.i.__fwnode_link_del.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__fwnode_link_del.exit

if.end.i.i11.i:                                   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i9.i = getelementptr i8, ptr %.pn.in19, i32 16
  %15 = ptrtoint ptr %prev.i.i9.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i9.i, align 4
  %17 = ptrtoint ptr %c_hook.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %c_hook.i, align 4
  %prev1.i.i.i10.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i10.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i10.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %__fwnode_link_del.exit

__fwnode_link_del.exit:                           ; preds = %if.end.i.i11.i, %list_del.exit.i.__fwnode_link_del.exit_crit_edge
  %21 = ptrtoint ptr %c_hook.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 256 to ptr), ptr %c_hook.i, align 4
  %prev.i12.i = getelementptr i8, ptr %.pn.in19, i32 16
  %22 = ptrtoint ptr %prev.i12.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i12.i, align 4
  tail call void @kfree(ptr noundef %link.0) #22
  %cmp.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp.not, label %__fwnode_link_del.exit.for.end_crit_edge, label %__fwnode_link_del.exit.for.body_crit_edge

__fwnode_link_del.exit.for.body_crit_edge:        ; preds = %__fwnode_link_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

__fwnode_link_del.exit.for.end_crit_edge:         ; preds = %__fwnode_link_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %__fwnode_link_del.exit.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @fwnode_link_lock) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @fw_devlink_purge_absent_suppliers(ptr noundef %fwnode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.fwnode_handle, ptr %fwnode, i32 0, i32 2
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.fwnode_handle, ptr %fwnode, i32 0, i32 5
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %flags, align 4
  %4 = or i8 %3, 2
  store i8 %4, ptr %flags, align 4
  tail call fastcc void @fwnode_links_purge_consumers(ptr noundef %fwnode)
  %call = tail call ptr @fwnode_get_next_available_child_node(ptr noundef %fwnode, ptr noundef null) #22
  %tobool2.not10 = icmp eq ptr %call, null
  br i1 %tobool2.not10, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %child.011 = phi ptr [ %call3, %for.body.for.body_crit_edge ], [ %call, %if.end.for.body_crit_edge ]
  tail call void @fw_devlink_purge_absent_suppliers(ptr noundef nonnull %child.011)
  %call3 = tail call ptr @fwnode_get_next_available_child_node(ptr noundef %fwnode, ptr noundef nonnull %child.011) #22
  %tobool2.not = icmp eq ptr %call3, null
  br i1 %tobool2.not, label %for.body.cleanup_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fwnode_get_next_available_child_node(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_links_read_lock() local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @device_links_srcu) #22
  tail call fastcc void @rcu_lock_acquire(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @device_links_srcu, i32 0, i32 16)) #22
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_links_read_unlock(i32 noundef %idx) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %idx)
  %tobool.not.i = icmp ult i32 %idx, 2
  br i1 %tobool.not.i, label %entry.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

entry.srcu_read_unlock.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %entry
  %.b1.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b1.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i, !prof !523

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.65, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %entry.srcu_read_unlock.exit_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @device_links_srcu, i32 0, i32 16)) #22
  tail call void @__srcu_read_unlock(ptr noundef nonnull @device_links_srcu, i32 noundef %idx) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_links_read_lock_held() local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %entry.srcu_read_lock_held.exit_crit_edge, label %if.end.i

entry.srcu_read_lock_held.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_lock_held.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @device_links_srcu, i32 0, i32 16), i32 noundef -1) #22
  br label %srcu_read_lock_held.exit

srcu_read_lock_held.exit:                         ; preds = %if.end.i, %entry.srcu_read_lock_held.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i.i, %if.end.i ], [ 1, %entry.srcu_read_lock_held.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_is_dependent(ptr noundef readonly %dev, ptr noundef %target) local_unnamed_addr #1 align 64 {
entry:
  %i.i = alloca %struct.klist_iter, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %dev, %target
  br i1 %cmp, label %entry.cleanup_crit_edge, label %entry.while.cond.i_crit_edge

entry.while.cond.i_crit_edge:                     ; preds = %entry
  br label %while.cond.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

while.cond.i:                                     ; preds = %while.cond.i.while.cond.i_crit_edge, %entry.while.cond.i_crit_edge
  %target.addr.0.i = phi ptr [ %1, %while.cond.i.while.cond.i_crit_edge ], [ %target, %entry.while.cond.i_crit_edge ]
  %parent.i = getelementptr inbounds %struct.device, ptr %target.addr.0.i, i32 0, i32 1
  %0 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  %cmp.i = icmp eq ptr %1, %dev
  %or.cond.i = or i1 %tobool.not.i, %cmp.i
  br i1 %or.cond.i, label %device_is_ancestor.exit, label %while.cond.i.while.cond.i_crit_edge

while.cond.i.while.cond.i_crit_edge:              ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

device_is_ancestor.exit:                          ; preds = %while.cond.i
  br i1 %tobool.not.i, label %if.end, label %device_is_ancestor.exit.cleanup_crit_edge

device_is_ancestor.exit.cleanup_crit_edge:        ; preds = %device_is_ancestor.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %device_is_ancestor.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i.i) #22
  %2 = ptrtoint ptr %i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %i.i, align 4, !annotation !524
  %3 = getelementptr inbounds %struct.klist_iter, ptr %i.i, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %3, align 4, !annotation !524
  %p.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 2
  %5 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %p.i, align 4
  %tobool.not.i39 = icmp eq ptr %6, null
  br i1 %tobool.not.i39, label %device_for_each_child.exit.thread, label %if.end.i

device_for_each_child.exit.thread:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %if.end3

if.end.i:                                         ; preds = %if.end
  call void @klist_iter_init(ptr noundef nonnull %6, ptr noundef nonnull %i.i) #22
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i.land.rhs.i_crit_edge, %if.end.i
  %call.i.i = call ptr @klist_next(ptr noundef nonnull %i.i) #22
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %land.rhs.i.device_for_each_child.exit.thread42_crit_edge, label %next_device.exit.i

land.rhs.i.device_for_each_child.exit.thread42_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_for_each_child.exit.thread42

next_device.exit.i:                               ; preds = %land.rhs.i
  %device.i.i = getelementptr i8, ptr %call.i.i, i32 80
  %7 = ptrtoint ptr %device.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %device.i.i, align 4
  %tobool3.not.i = icmp eq ptr %8, null
  br i1 %tobool3.not.i, label %next_device.exit.i.device_for_each_child.exit.thread42_crit_edge, label %while.body.i

next_device.exit.i.device_for_each_child.exit.thread42_crit_edge: ; preds = %next_device.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_for_each_child.exit.thread42

while.body.i:                                     ; preds = %next_device.exit.i
  %call4.i = call i32 @device_is_dependent(ptr noundef nonnull %8, ptr noundef %target) #22
  %tobool2.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool2.not.i, label %while.body.i.land.rhs.i_crit_edge, label %device_for_each_child.exit

while.body.i.land.rhs.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i

device_for_each_child.exit.thread42:              ; preds = %next_device.exit.i.device_for_each_child.exit.thread42_crit_edge, %land.rhs.i.device_for_each_child.exit.thread42_crit_edge
  call void @klist_iter_exit(ptr noundef nonnull %i.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %if.end3

device_for_each_child.exit:                       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @klist_iter_exit(ptr noundef nonnull %i.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %cleanup

if.end3:                                          ; preds = %device_for_each_child.exit.thread42, %device_for_each_child.exit.thread
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %9 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn45 = load ptr, ptr %consumers, align 4
  %cmp6.not46 = icmp eq ptr %.pn45, %consumers
  br i1 %cmp6.not46, label %if.end3.cleanup_crit_edge, label %if.end3.for.body_crit_edge

if.end3.for.body_crit_edge:                       ; preds = %if.end3
  br label %for.body

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end3.for.body_crit_edge
  %.pn47 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn45, %if.end3.for.body_crit_edge ]
  %flags = getelementptr i8, ptr %.pn47, i32 952
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 4
  %and = and i32 %11, -257
  call void @__sanitizer_cov_trace_const_cmp4(i32 192, i32 %and)
  %cmp7 = icmp eq i32 %and, 192
  br i1 %cmp7, label %for.body.for.inc_crit_edge, label %if.end9

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end9:                                          ; preds = %for.body
  %consumer = getelementptr i8, ptr %.pn47, i32 8
  %12 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %consumer, align 4
  %cmp10 = icmp eq ptr %13, %target
  br i1 %cmp10, label %if.end9.cleanup_crit_edge, label %if.end12

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end12:                                         ; preds = %if.end9
  %call14 = call i32 @device_is_dependent(ptr noundef %13, ptr noundef %target)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end12.for.inc_crit_edge, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end12.for.inc_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

for.inc:                                          ; preds = %if.end12.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %14 = ptrtoint ptr %.pn47 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn = load ptr, ptr %.pn47, align 4
  %cmp6.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp6.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %device_for_each_child.exit, %device_is_ancestor.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %device_is_ancestor.exit.cleanup_crit_edge ], [ 1, %entry.cleanup_crit_edge ], [ %call4.i, %device_for_each_child.exit ], [ 0, %if.end3.cleanup_crit_edge ], [ 1, %if.end9.cleanup_crit_edge ], [ %call14, %if.end12.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_for_each_child(ptr nocapture noundef readonly %parent, ptr noundef %data, ptr nocapture noundef readonly %fn) #1 align 64 {
entry:
  %i = alloca %struct.klist_iter, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i) #22
  %0 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %i, align 4, !annotation !524
  %1 = getelementptr inbounds %struct.klist_iter, ptr %i, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !524
  %p = getelementptr inbounds %struct.device, ptr %parent, i32 0, i32 2
  %3 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %p, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @klist_iter_init(ptr noundef nonnull %4, ptr noundef nonnull %i) #22
  br label %land.rhs

land.rhs:                                         ; preds = %while.body.land.rhs_crit_edge, %if.end
  %call.i = call ptr @klist_next(ptr noundef nonnull %i) #22
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %land.rhs.while.end_crit_edge, label %next_device.exit

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

next_device.exit:                                 ; preds = %land.rhs
  %device.i = getelementptr i8, ptr %call.i, i32 80
  %5 = ptrtoint ptr %device.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %device.i, align 4
  %tobool3.not = icmp eq ptr %6, null
  br i1 %tobool3.not, label %next_device.exit.while.end_crit_edge, label %while.body

next_device.exit.while.end_crit_edge:             ; preds = %next_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %next_device.exit
  %call4 = call i32 %fn(ptr noundef nonnull %6, ptr noundef %data) #22
  %tobool2.not = icmp eq i32 %call4, 0
  br i1 %tobool2.not, label %while.body.land.rhs_crit_edge, label %while.body.while.end_crit_edge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body.land.rhs_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs

while.end:                                        ; preds = %while.body.while.end_crit_edge, %next_device.exit.while.end_crit_edge, %land.rhs.while.end_crit_edge
  %error.0.lcssa = phi i32 [ 0, %land.rhs.while.end_crit_edge ], [ %call4, %while.body.while.end_crit_edge ], [ 0, %next_device.exit.while.end_crit_edge ]
  call void @klist_iter_exit(ptr noundef nonnull %i) #22
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %error.0.lcssa, %while.end ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_pm_move_to_tail(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @device_links_srcu) #22
  tail call fastcc void @rcu_lock_acquire(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @device_links_srcu, i32 0, i32 16)) #22
  tail call void @device_pm_lock() #22
  %call1 = tail call fastcc i32 @device_reorder_to_tail(ptr noundef %dev, ptr noundef null)
  tail call void @device_pm_unlock() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i.i)
  %tobool.not.i.i = icmp ult i32 %call.i.i, 2
  br i1 %tobool.not.i.i, label %entry.device_links_read_unlock.exit_crit_edge, label %land.rhs.i.i

entry.device_links_read_unlock.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_links_read_unlock.exit

land.rhs.i.i:                                     ; preds = %entry
  %.b1.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b1.i.i, label %land.rhs.i.i.device_links_read_unlock.exit_crit_edge, label %if.then.i.i, !prof !523

land.rhs.i.i.device_links_read_unlock.exit_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_links_read_unlock.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.65, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %device_links_read_unlock.exit

device_links_read_unlock.exit:                    ; preds = %if.then.i.i, %land.rhs.i.i.device_links_read_unlock.exit_crit_edge, %entry.device_links_read_unlock.exit_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @device_links_srcu, i32 0, i32 16)) #22
  tail call void @__srcu_read_unlock(ptr noundef nonnull @device_links_srcu, i32 noundef %call.i.i) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_pm_lock() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @device_reorder_to_tail(ptr noundef %dev, ptr nocapture noundef readnone %not_used) unnamed_addr #1 align 64 {
entry:
  %i.i = alloca %struct.klist_iter, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %state_in_sysfs.i = getelementptr inbounds %struct.kobject, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %state_in_sysfs.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load.i = load i8, ptr %state_in_sysfs.i, align 4
  %1 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @devices_kset_move_last(ptr noundef %dev)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %in_dpm_list.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 1
  %2 = ptrtoint ptr %in_dpm_list.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i25 = load i16, ptr %in_dpm_list.i, align 4
  %3 = and i16 %bf.load.i25, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %bf.cast.i26.not = icmp eq i16 %3, 0
  br i1 %bf.cast.i26.not, label %if.end.if.end3_crit_edge, label %if.then2

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @device_pm_move_last(ptr noundef %dev) #22
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end.if.end3_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i.i) #22
  %4 = ptrtoint ptr %i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %i.i, align 4, !annotation !524
  %5 = getelementptr inbounds %struct.klist_iter, ptr %i.i, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr inttoptr (i32 -1 to ptr), ptr %5, align 4, !annotation !524
  %p.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 2
  %7 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %p.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end3.device_for_each_child.exit_crit_edge, label %if.end.i

if.end3.device_for_each_child.exit_crit_edge:     ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_for_each_child.exit

if.end.i:                                         ; preds = %if.end3
  call void @klist_iter_init(ptr noundef nonnull %8, ptr noundef nonnull %i.i) #22
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i.land.rhs.i_crit_edge, %if.end.i
  %call.i.i = call ptr @klist_next(ptr noundef nonnull %i.i) #22
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %land.rhs.i.while.end.i_crit_edge, label %next_device.exit.i

land.rhs.i.while.end.i_crit_edge:                 ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end.i

next_device.exit.i:                               ; preds = %land.rhs.i
  %device.i.i = getelementptr i8, ptr %call.i.i, i32 80
  %9 = ptrtoint ptr %device.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %device.i.i, align 4
  %tobool3.not.i = icmp eq ptr %10, null
  br i1 %tobool3.not.i, label %next_device.exit.i.while.end.i_crit_edge, label %while.body.i

next_device.exit.i.while.end.i_crit_edge:         ; preds = %next_device.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end.i

while.body.i:                                     ; preds = %next_device.exit.i
  %call4.i = call fastcc i32 @device_reorder_to_tail(ptr noundef nonnull %10, ptr noundef null) #22
  %tobool2.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool2.not.i, label %while.body.i.land.rhs.i_crit_edge, label %while.body.i.while.end.i_crit_edge

while.body.i.while.end.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end.i

while.body.i.land.rhs.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i

while.end.i:                                      ; preds = %while.body.i.while.end.i_crit_edge, %next_device.exit.i.while.end.i_crit_edge, %land.rhs.i.while.end.i_crit_edge
  call void @klist_iter_exit(ptr noundef nonnull %i.i) #22
  br label %device_for_each_child.exit

device_for_each_child.exit:                       ; preds = %while.end.i, %if.end3.device_for_each_child.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %11 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn27 = load ptr, ptr %consumers, align 4
  %cmp.not28 = icmp eq ptr %.pn27, %consumers
  br i1 %cmp.not28, label %device_for_each_child.exit.for.end_crit_edge, label %device_for_each_child.exit.for.body_crit_edge

device_for_each_child.exit.for.body_crit_edge:    ; preds = %device_for_each_child.exit
  br label %for.body

device_for_each_child.exit.for.end_crit_edge:     ; preds = %device_for_each_child.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %device_for_each_child.exit.for.body_crit_edge
  %.pn29 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn27, %device_for_each_child.exit.for.body_crit_edge ]
  %flags = getelementptr i8, ptr %.pn29, i32 952
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags, align 4
  %and = and i32 %13, -257
  call void @__sanitizer_cov_trace_const_cmp4(i32 192, i32 %and)
  %cmp7 = icmp eq i32 %and, 192
  br i1 %cmp7, label %for.body.for.inc_crit_edge, label %if.end9

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end9:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %consumer = getelementptr i8, ptr %.pn29, i32 8
  %14 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %consumer, align 4
  %call10 = call fastcc i32 @device_reorder_to_tail(ptr noundef %15, ptr noundef null)
  br label %for.inc

for.inc:                                          ; preds = %if.end9, %for.body.for.inc_crit_edge
  %16 = ptrtoint ptr %.pn29 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn = load ptr, ptr %.pn29, align 4
  %cmp.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %device_for_each_child.exit.for.end_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_pm_unlock() local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @devlink_class_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__class_register(ptr noundef nonnull @devlink_class, ptr noundef nonnull @devlink_class_init.__key) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @class_interface_register(ptr noundef nonnull @devlink_class_intf) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.then3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @class_unregister(ptr noundef nonnull @devlink_class) #22
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call1, %if.then3 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @device_link_add(ptr noundef %consumer, ptr noundef %supplier, i32 noundef %flags) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %consumer, null
  %tobool1.not = icmp eq ptr %supplier, null
  %or.cond = or i1 %tobool.not, %tobool1.not
  %cmp = icmp eq ptr %consumer, %supplier
  %or.cond356 = or i1 %cmp, %or.cond
  %and = and i32 %flags, -448
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp ne i32 %and, 0
  %0 = or i1 %or.cond356, %tobool4.not
  br i1 %0, label %entry.cleanup_crit_edge, label %lor.lhs.false5

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false5:                                   ; preds = %entry
  %and6 = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  %and8 = and i32 %flags, 434
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  %or.cond358 = or i1 %tobool7.not, %tobool9.not
  br i1 %or.cond358, label %lor.lhs.false10, label %lor.lhs.false5.cleanup_crit_edge

lor.lhs.false5.cleanup_crit_edge:                 ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false10:                                  ; preds = %lor.lhs.false5
  %and11 = and i32 %flags, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  %and14 = and i32 %flags, -257
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %and14)
  %cmp15.not = icmp eq i32 %and14, 128
  %or.cond359 = or i1 %tobool12.not, %cmp15.not
  br i1 %or.cond359, label %lor.lhs.false16, label %lor.lhs.false10.cleanup_crit_edge

lor.lhs.false10.cleanup_crit_edge:                ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false16:                                  ; preds = %lor.lhs.false10
  %and17 = and i32 %flags, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17)
  %tobool18.not = icmp eq i32 %and17, 0
  %and20 = and i32 %flags, 18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  %or.cond360 = or i1 %tobool18.not, %tobool21.not
  br i1 %or.cond360, label %if.end, label %lor.lhs.false16.cleanup_crit_edge

lor.lhs.false16.cleanup_crit_edge:                ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false16
  %1 = and i32 %flags, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %1)
  %.not = icmp eq i32 %1, 12
  br i1 %.not, label %if.then27, label %if.end.if.end31_crit_edge

if.end.if.end31_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end31

if.then27:                                        ; preds = %if.end
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef nonnull %supplier, i32 noundef 4) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp28 = icmp slt i32 %call.i, 0
  br i1 %cmp28, label %if.then29, label %if.then27.if.end31_crit_edge

if.then27.if.end31_crit_edge:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end31

if.then29:                                        ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @pm_runtime_put_noidle(ptr noundef nonnull %supplier)
  br label %cleanup

if.end31:                                         ; preds = %if.then27.if.end31_crit_edge, %if.end.if.end31_crit_edge
  %or = or i32 %flags, 64
  %spec.select = select i1 %tobool7.not, i32 %or, i32 %flags
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  tail call void @device_pm_lock() #22
  %in_dpm_list.i = getelementptr inbounds %struct.device, ptr %supplier, i32 0, i32 12, i32 1
  %2 = ptrtoint ptr %in_dpm_list.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %in_dpm_list.i, align 4
  %3 = and i16 %bf.load.i, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %bf.cast.i.not = icmp eq i16 %3, 0
  br i1 %bf.cast.i.not, label %if.end31.out_crit_edge, label %lor.lhs.false37

if.end31.out_crit_edge:                           ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

lor.lhs.false37:                                  ; preds = %if.end31
  %and38 = and i32 %spec.select, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38)
  %tobool39.not = icmp eq i32 %and38, 0
  br i1 %tobool39.not, label %land.lhs.true40, label %land.lhs.true47.critedge

land.lhs.true40:                                  ; preds = %lor.lhs.false37
  %call41 = tail call i32 @device_is_dependent(ptr noundef nonnull %consumer, ptr noundef nonnull %supplier)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %land.lhs.true40.if.end54_crit_edge, label %land.lhs.true40.out_crit_edge

land.lhs.true40.out_crit_edge:                    ; preds = %land.lhs.true40
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

land.lhs.true40.if.end54_crit_edge:               ; preds = %land.lhs.true40
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end54

land.lhs.true47.critedge:                         ; preds = %lor.lhs.false37
  %status = getelementptr inbounds %struct.device, ptr %consumer, i32 0, i32 11, i32 3
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %switch = icmp ult i32 %5, 2
  br i1 %switch, label %land.lhs.true47.critedge.if.end54_crit_edge, label %land.lhs.true47.critedge.out_crit_edge

land.lhs.true47.critedge.out_crit_edge:           ; preds = %land.lhs.true47.critedge
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

land.lhs.true47.critedge.if.end54_crit_edge:      ; preds = %land.lhs.true47.critedge
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end54

if.end54:                                         ; preds = %land.lhs.true47.critedge.if.end54_crit_edge, %land.lhs.true40.if.end54_crit_edge
  %and55 = and i32 %spec.select, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and55)
  %tobool56.not = icmp eq i32 %and55, 0
  %and58 = and i32 %spec.select, -3
  %spec.select362 = select i1 %tobool56.not, i32 %spec.select, i32 %and58
  %consumers = getelementptr inbounds %struct.device, ptr %supplier, i32 0, i32 11, i32 1
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end54
  %.pn.in = phi ptr [ %consumers, %if.end54 ], [ %.pn, %for.body.for.cond_crit_edge ]
  %6 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp63.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp63.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %consumer64 = getelementptr i8, ptr %.pn, i32 8
  %7 = ptrtoint ptr %consumer64 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %consumer64, align 4
  %cmp65.not = icmp eq ptr %8, %consumer
  br i1 %cmp65.not, label %if.end67, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond

if.end67:                                         ; preds = %for.body
  %link.0.le = getelementptr i8, ptr %.pn, i32 -4
  %flags68 = getelementptr i8, ptr %.pn, i32 952
  %9 = ptrtoint ptr %flags68 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags68, align 4
  %and69 = and i32 %10, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp ne i32 %and69, 0
  %and72 = and i32 %spec.select362, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and72)
  %tobool73.not = icmp eq i32 %and72, 0
  %or.cond363 = select i1 %tobool70.not, i1 %tobool73.not, i1 false
  br i1 %or.cond363, label %if.then74, label %if.end67.if.end77_crit_edge

if.end67.if.end77_crit_edge:                      ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end77

if.then74:                                        ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #24
  %and76 = and i32 %10, -257
  %11 = ptrtoint ptr %flags68 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %and76, ptr %flags68, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then74, %if.end67.if.end77_crit_edge
  %and78 = and i32 %spec.select362, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and78)
  %tobool79.not = icmp eq i32 %and78, 0
  br i1 %tobool79.not, label %if.end77.if.end92_crit_edge, label %if.then80

if.end77.if.end92_crit_edge:                      ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end92

if.then80:                                        ; preds = %if.end77
  %12 = ptrtoint ptr %flags68 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags68, align 4
  %and82 = and i32 %13, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and82)
  %tobool83.not = icmp eq i32 %and82, 0
  br i1 %tobool83.not, label %if.then84, label %if.then80.if.end87_crit_edge

if.then80.if.end87_crit_edge:                     ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end87

if.then84:                                        ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @pm_runtime_new_link(ptr noundef nonnull %consumer) #22
  %14 = ptrtoint ptr %flags68 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags68, align 4
  %or86 = or i32 %15, 4
  store i32 %or86, ptr %flags68, align 4
  br label %if.end87

if.end87:                                         ; preds = %if.then84, %if.then80.if.end87_crit_edge
  %and88 = and i32 %spec.select362, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and88)
  %tobool89.not = icmp eq i32 %and88, 0
  br i1 %tobool89.not, label %if.end87.if.end92_crit_edge, label %if.then90

if.end87.if.end92_crit_edge:                      ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end92

if.then90:                                        ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #24
  %rpm_active = getelementptr i8, ptr %.pn, i32 956
  tail call fastcc void @refcount_inc(ptr noundef %rpm_active)
  br label %if.end92

if.end92:                                         ; preds = %if.then90, %if.end87.if.end92_crit_edge, %if.end77.if.end92_crit_edge
  %and93 = and i32 %spec.select362, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93)
  %tobool94.not = icmp eq i32 %and93, 0
  br i1 %tobool94.not, label %if.end108, label %if.then95

if.then95:                                        ; preds = %if.end92
  %kref = getelementptr i8, ptr %.pn, i32 960
  tail call fastcc void @kref_get(ptr noundef %kref)
  %16 = ptrtoint ptr %flags68 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags68, align 4
  %18 = and i32 %17, 129
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %18)
  %19 = icmp eq i32 %18, 128
  %or105 = or i32 %17, 1
  %20 = ptrtoint ptr %flags68 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %or105, ptr %flags68, align 4
  br i1 %19, label %if.then95.reorder_crit_edge, label %if.then95.out_crit_edge

if.then95.out_crit_edge:                          ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.then95.reorder_crit_edge:                      ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #24
  br label %reorder

if.end108:                                        ; preds = %if.end92
  %and109 = and i32 %spec.select362, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and109)
  %tobool110.not = icmp eq i32 %and109, 0
  br i1 %tobool110.not, label %if.else121, label %if.then111

if.then111:                                       ; preds = %if.end108
  %21 = ptrtoint ptr %flags68 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags68, align 4
  %and113 = and i32 %22, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and113)
  %tobool114.not = icmp eq i32 %and113, 0
  br i1 %tobool114.not, label %if.then111.if.end128_crit_edge, label %if.then115

if.then111.if.end128_crit_edge:                   ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end128

if.then115:                                       ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #24
  %and117 = and i32 %22, -19
  %or119 = or i32 %and117, 16
  br label %if.end128.sink.split

if.else121:                                       ; preds = %if.end108
  %and122 = and i32 %spec.select362, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and122)
  %tobool123.not = icmp eq i32 %and122, 0
  br i1 %tobool123.not, label %if.then124, label %if.else121.if.end128_crit_edge

if.else121.if.end128_crit_edge:                   ; preds = %if.else121
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end128

if.then124:                                       ; preds = %if.else121
  call void @__sanitizer_cov_trace_pc() #24
  %23 = ptrtoint ptr %flags68 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags68, align 4
  %and126 = and i32 %24, -19
  br label %if.end128.sink.split

if.end128.sink.split:                             ; preds = %if.then124, %if.then115
  %and126.sink = phi i32 [ %and126, %if.then124 ], [ %or119, %if.then115 ]
  %25 = ptrtoint ptr %flags68 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %and126.sink, ptr %flags68, align 4
  br label %if.end128

if.end128:                                        ; preds = %if.end128.sink.split, %if.else121.if.end128_crit_edge, %if.then111.if.end128_crit_edge
  %26 = ptrtoint ptr %flags68 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags68, align 4
  %and130 = and i32 %27, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and130)
  %tobool131.not = icmp eq i32 %and130, 0
  br i1 %tobool131.not, label %if.then132, label %if.end128.if.end136_crit_edge

if.end128.if.end136_crit_edge:                    ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end136

if.then132:                                       ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #24
  %kref133 = getelementptr i8, ptr %.pn, i32 960
  tail call fastcc void @kref_get(ptr noundef %kref133)
  %28 = ptrtoint ptr %flags68 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %flags68, align 4
  %or135 = or i32 %29, 64
  store i32 %or135, ptr %flags68, align 4
  tail call fastcc void @device_link_init_status(ptr noundef %link.0.le, ptr noundef nonnull %consumer, ptr noundef nonnull %supplier)
  br label %if.end136

if.end136:                                        ; preds = %if.then132, %if.end128.if.end136_crit_edge
  %30 = ptrtoint ptr %flags68 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags68, align 4
  %and138 = and i32 %31, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and138)
  %tobool139.not = icmp ne i32 %and138, 0
  %and141 = and i32 %spec.select362, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and141)
  %tobool142.not = icmp eq i32 %and141, 0
  %or.cond365 = select i1 %tobool139.not, i1 %tobool142.not, i1 false
  br i1 %or.cond365, label %if.then143, label %if.end136.out_crit_edge

if.end136.out_crit_edge:                          ; preds = %if.end136
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.then143:                                       ; preds = %if.end136
  call void @__sanitizer_cov_trace_pc() #24
  %and145 = and i32 %31, -129
  %32 = ptrtoint ptr %flags68 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %and145, ptr %flags68, align 4
  br label %reorder

for.end:                                          ; preds = %for.cond
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %33 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %33, i32 noundef 3520, i32 noundef 1016) #25
  %tobool153.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool153.not, label %for.end.out_crit_edge, label %get_device.exit376

for.end.out_crit_edge:                            ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

get_device.exit376:                               ; preds = %for.end
  %rpm_active156 = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 7
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %rpm_active156, i32 noundef 4) #22
  %34 = ptrtoint ptr %rpm_active156 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile i32 1, ptr %rpm_active156, align 8
  %call.i371 = tail call ptr @kobject_get(ptr noundef nonnull %supplier) #22
  %35 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %supplier, ptr %call7.i.i, align 8
  %s_node159 = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 1
  %36 = ptrtoint ptr %s_node159 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %s_node159, ptr %s_node159, align 4
  %prev.i = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 1, i32 1
  %37 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %s_node159, ptr %prev.i, align 8
  %call.i373 = tail call ptr @kobject_get(ptr noundef nonnull %consumer) #22
  %consumer161 = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 2
  %38 = ptrtoint ptr %consumer161 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %consumer, ptr %consumer161, align 4
  %c_node = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 3
  %39 = ptrtoint ptr %c_node to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %c_node, ptr %c_node, align 8
  %prev.i377 = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 3, i32 1
  %40 = ptrtoint ptr %prev.i377 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %c_node, ptr %prev.i377, align 4
  %flags162 = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 6
  %41 = ptrtoint ptr %flags162 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %spec.select362, ptr %flags162, align 4
  %kref163 = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %kref163, i32 noundef 4) #22
  %42 = ptrtoint ptr %kref163 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile i32 1, ptr %kref163, align 4
  %link_dev = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 4
  %class = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 4, i32 33
  %43 = ptrtoint ptr %class to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @devlink_class, ptr %class, align 4
  %no_pm.i = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 4, i32 12, i32 1
  %44 = ptrtoint ptr %no_pm.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %bf.load.i378 = load i16, ptr %no_pm.i, align 4
  %bf.set.i = or i16 %bf.load.i378, 256
  store i16 %bf.set.i, ptr %no_pm.i, align 4
  %bus.i = getelementptr inbounds %struct.device, ptr %supplier, i32 0, i32 5
  %45 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %bus.i, align 8
  %tobool.not.i379 = icmp eq ptr %46, null
  br i1 %tobool.not.i379, label %cond.false.i, label %get_device.exit376.cond.end7.sink.split.i_crit_edge

get_device.exit376.cond.end7.sink.split.i_crit_edge: ; preds = %get_device.exit376
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i

cond.false.i:                                     ; preds = %get_device.exit376
  %class.i = getelementptr inbounds %struct.device, ptr %supplier, i32 0, i32 33
  %47 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %class.i, align 4
  %tobool2.not.i = icmp eq ptr %48, null
  br i1 %tobool2.not.i, label %cond.false.i.dev_bus_name.exit_crit_edge, label %cond.false.i.cond.end7.sink.split.i_crit_edge

cond.false.i.cond.end7.sink.split.i_crit_edge:    ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i

cond.false.i.dev_bus_name.exit_crit_edge:         ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit

cond.end7.sink.split.i:                           ; preds = %cond.false.i.cond.end7.sink.split.i_crit_edge, %get_device.exit376.cond.end7.sink.split.i_crit_edge
  %.sink.i = phi ptr [ %46, %get_device.exit376.cond.end7.sink.split.i_crit_edge ], [ %48, %cond.false.i.cond.end7.sink.split.i_crit_edge ]
  %49 = ptrtoint ptr %.sink.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %.sink.i, align 4
  br label %dev_bus_name.exit

dev_bus_name.exit:                                ; preds = %cond.end7.sink.split.i, %cond.false.i.dev_bus_name.exit_crit_edge
  %cond8.i = phi ptr [ @.str.90, %cond.false.i.dev_bus_name.exit_crit_edge ], [ %50, %cond.end7.sink.split.i ]
  %init_name.i = getelementptr inbounds %struct.device, ptr %supplier, i32 0, i32 3
  %51 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i380 = icmp eq ptr %52, null
  br i1 %tobool.not.i380, label %if.end.i, label %dev_bus_name.exit.dev_name.exit_crit_edge

dev_bus_name.exit.dev_name.exit_crit_edge:        ; preds = %dev_bus_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %dev_bus_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  %53 = ptrtoint ptr %supplier to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %supplier, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %dev_bus_name.exit.dev_name.exit_crit_edge
  %retval.0.i381 = phi ptr [ %54, %if.end.i ], [ %52, %dev_bus_name.exit.dev_name.exit_crit_edge ]
  %bus.i382 = getelementptr inbounds %struct.device, ptr %consumer, i32 0, i32 5
  %55 = ptrtoint ptr %bus.i382 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %bus.i382, align 8
  %tobool.not.i383 = icmp eq ptr %56, null
  br i1 %tobool.not.i383, label %cond.false.i386, label %dev_name.exit.cond.end7.sink.split.i388_crit_edge

dev_name.exit.cond.end7.sink.split.i388_crit_edge: ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i388

cond.false.i386:                                  ; preds = %dev_name.exit
  %class.i384 = getelementptr inbounds %struct.device, ptr %consumer, i32 0, i32 33
  %57 = ptrtoint ptr %class.i384 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %class.i384, align 4
  %tobool2.not.i385 = icmp eq ptr %58, null
  br i1 %tobool2.not.i385, label %cond.false.i386.dev_bus_name.exit390_crit_edge, label %cond.false.i386.cond.end7.sink.split.i388_crit_edge

cond.false.i386.cond.end7.sink.split.i388_crit_edge: ; preds = %cond.false.i386
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i388

cond.false.i386.dev_bus_name.exit390_crit_edge:   ; preds = %cond.false.i386
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit390

cond.end7.sink.split.i388:                        ; preds = %cond.false.i386.cond.end7.sink.split.i388_crit_edge, %dev_name.exit.cond.end7.sink.split.i388_crit_edge
  %.sink.i387 = phi ptr [ %56, %dev_name.exit.cond.end7.sink.split.i388_crit_edge ], [ %58, %cond.false.i386.cond.end7.sink.split.i388_crit_edge ]
  %59 = ptrtoint ptr %.sink.i387 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %.sink.i387, align 4
  br label %dev_bus_name.exit390

dev_bus_name.exit390:                             ; preds = %cond.end7.sink.split.i388, %cond.false.i386.dev_bus_name.exit390_crit_edge
  %cond8.i389 = phi ptr [ @.str.90, %cond.false.i386.dev_bus_name.exit390_crit_edge ], [ %60, %cond.end7.sink.split.i388 ]
  %init_name.i391 = getelementptr inbounds %struct.device, ptr %consumer, i32 0, i32 3
  %61 = ptrtoint ptr %init_name.i391 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %init_name.i391, align 8
  %tobool.not.i392 = icmp eq ptr %62, null
  br i1 %tobool.not.i392, label %if.end.i393, label %dev_bus_name.exit390.dev_name.exit395_crit_edge

dev_bus_name.exit390.dev_name.exit395_crit_edge:  ; preds = %dev_bus_name.exit390
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit395

if.end.i393:                                      ; preds = %dev_bus_name.exit390
  call void @__sanitizer_cov_trace_pc() #24
  %63 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %consumer, align 4
  br label %dev_name.exit395

dev_name.exit395:                                 ; preds = %if.end.i393, %dev_bus_name.exit390.dev_name.exit395_crit_edge
  %retval.0.i394 = phi ptr [ %64, %if.end.i393 ], [ %62, %dev_bus_name.exit390.dev_name.exit395_crit_edge ]
  %call170 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef %link_dev, ptr noundef nonnull @.str.4, ptr noundef %cond8.i, ptr noundef %retval.0.i381, ptr noundef %cond8.i389, ptr noundef %retval.0.i394)
  tail call void @device_initialize(ptr noundef %link_dev) #22
  %call.i396 = tail call i32 @device_add(ptr noundef %link_dev) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i396)
  %tobool173.not = icmp eq i32 %call.i396, 0
  br i1 %tobool173.not, label %if.end176, label %if.then174

if.then174:                                       ; preds = %dev_name.exit395
  %tobool.not.i397 = icmp eq ptr %link_dev, null
  br i1 %tobool.not.i397, label %if.then174.out_crit_edge, label %if.then.i

if.then174.out_crit_edge:                         ; preds = %if.then174
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.then.i:                                        ; preds = %if.then174
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %link_dev) #22
  br label %out

if.end176:                                        ; preds = %dev_name.exit395
  %and177 = and i32 %spec.select362, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and177)
  %tobool178.not = icmp eq i32 %and177, 0
  br i1 %tobool178.not, label %if.end176.if.end185_crit_edge, label %if.then179

if.end176.if.end185_crit_edge:                    ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end185

if.then179:                                       ; preds = %if.end176
  %and180 = and i32 %spec.select362, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and180)
  %tobool181.not = icmp eq i32 %and180, 0
  br i1 %tobool181.not, label %if.then179.if.end184_crit_edge, label %if.then182

if.then179.if.end184_crit_edge:                   ; preds = %if.then179
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end184

if.then182:                                       ; preds = %if.then179
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @refcount_inc(ptr noundef %rpm_active156)
  br label %if.end184

if.end184:                                        ; preds = %if.then182, %if.then179.if.end184_crit_edge
  tail call void @pm_runtime_new_link(ptr noundef nonnull %consumer) #22
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.end176.if.end185_crit_edge
  %and186 = and i32 %spec.select362, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and186)
  %tobool187.not = icmp eq i32 %and186, 0
  br i1 %tobool187.not, label %if.else190, label %if.then188

if.then188:                                       ; preds = %if.end185
  call void @__sanitizer_cov_trace_pc() #24
  %status189 = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 5
  %65 = ptrtoint ptr %status189 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 -1, ptr %status189, align 8
  br label %if.end191

if.else190:                                       ; preds = %if.end185
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @device_link_init_status(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %consumer, ptr noundef nonnull %supplier)
  br label %if.end191

if.end191:                                        ; preds = %if.else190, %if.then188
  %status192 = getelementptr inbounds %struct.device_link, ptr %call7.i.i, i32 0, i32 5
  %66 = ptrtoint ptr %status192 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %status192, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %67)
  %cmp193 = icmp ne i32 %67, 2
  %brmerge = select i1 %cmp193, i1 true, i1 %tobool178.not
  br i1 %brmerge, label %if.end191.if.end199_crit_edge, label %if.then197

if.end191.if.end199_crit_edge:                    ; preds = %if.end191
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end199

if.then197:                                       ; preds = %if.end191
  call void @__sanitizer_cov_trace_pc() #24
  %call.i399 = tail call i32 @__pm_runtime_resume(ptr noundef %supplier, i32 noundef 0) #22
  br label %if.end199

if.end199:                                        ; preds = %if.then197, %if.end191.if.end199_crit_edge
  tail call fastcc void @list_add_tail_rcu(ptr noundef %s_node159, ptr noundef %consumers)
  %links204 = getelementptr inbounds %struct.device, ptr %consumer, i32 0, i32 11
  tail call fastcc void @list_add_tail_rcu(ptr noundef %c_node, ptr noundef %links204)
  %and205 = and i32 %spec.select362, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and205)
  %tobool206.not = icmp eq i32 %and205, 0
  br i1 %tobool206.not, label %if.end199.reorder_crit_edge, label %do.body

if.end199.reorder_crit_edge:                      ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #24
  br label %reorder

do.body:                                          ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #24
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_link_add.__UNIQUE_ID_ddebug365, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@device_link_add, %out)) #22
          to label %if.then215 [label %out], !srcloc !522

if.then215:                                       ; preds = %do.body
  %68 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i401 = icmp eq ptr %69, null
  br i1 %tobool.not.i401, label %if.end.i402, label %if.then215.dev_name.exit404_crit_edge

if.then215.dev_name.exit404_crit_edge:            ; preds = %if.then215
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit404

if.end.i402:                                      ; preds = %if.then215
  call void @__sanitizer_cov_trace_pc() #24
  %70 = ptrtoint ptr %supplier to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %supplier, align 4
  br label %dev_name.exit404

dev_name.exit404:                                 ; preds = %if.end.i402, %if.then215.dev_name.exit404_crit_edge
  %retval.0.i403 = phi ptr [ %71, %if.end.i402 ], [ %69, %if.then215.dev_name.exit404_crit_edge ]
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @device_link_add.__UNIQUE_ID_ddebug365, ptr noundef nonnull %consumer, ptr noundef nonnull @.str.6, ptr noundef %retval.0.i403) #22
  br label %out

reorder:                                          ; preds = %if.end199.reorder_crit_edge, %if.then143, %if.then95.reorder_crit_edge
  %link.1 = phi ptr [ %link.0.le, %if.then143 ], [ %call7.i.i, %if.end199.reorder_crit_edge ], [ %link.0.le, %if.then95.reorder_crit_edge ]
  %call219 = tail call fastcc i32 @device_reorder_to_tail(ptr noundef nonnull %consumer, ptr noundef null)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_link_add.__UNIQUE_ID_ddebug366, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@device_link_add, %out)) #22
          to label %if.then234 [label %out], !srcloc !522

if.then234:                                       ; preds = %reorder
  %init_name.i405 = getelementptr inbounds %struct.device, ptr %supplier, i32 0, i32 3
  %72 = ptrtoint ptr %init_name.i405 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %init_name.i405, align 8
  %tobool.not.i406 = icmp eq ptr %73, null
  br i1 %tobool.not.i406, label %if.end.i407, label %if.then234.dev_name.exit409_crit_edge

if.then234.dev_name.exit409_crit_edge:            ; preds = %if.then234
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit409

if.end.i407:                                      ; preds = %if.then234
  call void @__sanitizer_cov_trace_pc() #24
  %74 = ptrtoint ptr %supplier to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %supplier, align 4
  br label %dev_name.exit409

dev_name.exit409:                                 ; preds = %if.end.i407, %if.then234.dev_name.exit409_crit_edge
  %retval.0.i408 = phi ptr [ %75, %if.end.i407 ], [ %73, %if.then234.dev_name.exit409_crit_edge ]
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @device_link_add.__UNIQUE_ID_ddebug366, ptr noundef nonnull %consumer, ptr noundef nonnull @.str.7, ptr noundef %retval.0.i408) #22
  br label %out

out:                                              ; preds = %dev_name.exit409, %reorder, %dev_name.exit404, %do.body, %if.then.i, %if.then174.out_crit_edge, %for.end.out_crit_edge, %if.end136.out_crit_edge, %if.then95.out_crit_edge, %land.lhs.true47.critedge.out_crit_edge, %land.lhs.true40.out_crit_edge, %if.end31.out_crit_edge
  %link.2 = phi ptr [ %link.1, %dev_name.exit409 ], [ %link.0.le, %if.end136.out_crit_edge ], [ %call7.i.i, %dev_name.exit404 ], [ null, %for.end.out_crit_edge ], [ null, %land.lhs.true40.out_crit_edge ], [ null, %if.end31.out_crit_edge ], [ null, %land.lhs.true47.critedge.out_crit_edge ], [ null, %if.then174.out_crit_edge ], [ null, %if.then.i ], [ %call7.i.i, %do.body ], [ %link.1, %reorder ], [ %link.0.le, %if.then95.out_crit_edge ]
  %flags.addr.2 = phi i32 [ %spec.select362, %dev_name.exit409 ], [ %spec.select362, %if.end136.out_crit_edge ], [ %spec.select362, %dev_name.exit404 ], [ %spec.select362, %for.end.out_crit_edge ], [ %spec.select, %land.lhs.true40.out_crit_edge ], [ %spec.select, %if.end31.out_crit_edge ], [ %spec.select, %land.lhs.true47.critedge.out_crit_edge ], [ %spec.select362, %if.then174.out_crit_edge ], [ %spec.select362, %if.then.i ], [ %spec.select362, %do.body ], [ %spec.select362, %reorder ], [ %spec.select362, %if.then95.out_crit_edge ]
  tail call void @device_pm_unlock() #22
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  %76 = and i32 %flags.addr.2, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %76)
  %.not413 = icmp eq i32 %76, 12
  %tobool245.not = icmp eq ptr %link.2, null
  %or.cond367 = select i1 %.not413, i1 %tobool245.not, i1 false
  br i1 %or.cond367, label %if.then246, label %out.cleanup_crit_edge

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then246:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #24
  %call.i410 = tail call i32 @__pm_runtime_idle(ptr noundef %supplier, i32 noundef 5) #22
  br label %cleanup

cleanup:                                          ; preds = %if.then246, %out.cleanup_crit_edge, %if.then29, %lor.lhs.false16.cleanup_crit_edge, %lor.lhs.false10.cleanup_crit_edge, %lor.lhs.false5.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.then29 ], [ null, %lor.lhs.false16.cleanup_crit_edge ], [ null, %lor.lhs.false10.cleanup_crit_edge ], [ null, %lor.lhs.false5.cleanup_crit_edge ], [ null, %entry.cleanup_crit_edge ], [ null, %if.then246 ], [ %link.2, %out.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pm_runtime_put_noidle(ptr noundef %dev) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %usage_count = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 13
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !525
  tail call void @llvm.prefetch.p0(ptr %usage_count, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count, ptr %usage_count, i32 0, i32 -1, ptr elementtype(i32) %usage_count) #22, !srcloc !526
  %asmresult.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.not.i.i.i, label %entry.atomic_add_unless.exit_crit_edge, label %do.end11.i.i.i

entry.atomic_add_unless.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %atomic_add_unless.exit

do.end11.i.i.i:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !527
  br label %atomic_add_unless.exit

atomic_add_unless.exit:                           ; preds = %do.end11.i.i.i, %entry.atomic_add_unless.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_new_link(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @refcount_inc(ptr noundef %r) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %r, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %r, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %r, ptr %r, i32 1, ptr elementtype(i32) %r) #22, !srcloc !528
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %tobool1.not.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool1.not.i.i, label %entry.if.end15.sink.split.i.i_crit_edge, label %if.else.i.i, !prof !529

entry.if.end15.sink.split.i.i_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i

if.else.i.i:                                      ; preds = %entry
  %add.i.i = add i32 %asmresult.i.i.i.i, 1
  %1 = or i32 %add.i.i, %asmresult.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i, label %if.else.i.i.__refcount_inc.exit_crit_edge, label %if.else.i.i.if.end15.sink.split.i.i_crit_edge, !prof !523

if.else.i.i.if.end15.sink.split.i.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i

if.else.i.i.__refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__refcount_inc.exit

if.end15.sink.split.i.i:                          ; preds = %if.else.i.i.if.end15.sink.split.i.i_crit_edge, %entry.if.end15.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ 2, %entry.if.end15.sink.split.i.i_crit_edge ], [ 1, %if.else.i.i.if.end15.sink.split.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %r, i32 noundef %.sink.i.i) #22
  br label %__refcount_inc.exit

__refcount_inc.exit:                              ; preds = %if.end15.sink.split.i.i, %if.else.i.i.__refcount_inc.exit_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @kref_get(ptr noundef %kref) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %kref, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %kref, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %kref, ptr %kref, i32 1, ptr elementtype(i32) %kref) #22, !srcloc !528
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %entry.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !529

entry.if.end15.sink.split.i.i.i_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %entry
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.refcount_inc.exit_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !523

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %refcount_inc.exit

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %entry.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %entry.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %kref, i32 noundef %.sink.i.i.i) #22
  br label %refcount_inc.exit

refcount_inc.exit:                                ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.refcount_inc.exit_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @device_link_init_status(ptr nocapture noundef writeonly %link, ptr nocapture noundef readonly %consumer, ptr nocapture noundef readonly %supplier) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %status = getelementptr inbounds %struct.device, ptr %supplier, i32 0, i32 11, i32 3
  %0 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %status, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values)
  switch i32 %1, label %sw.default18 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
    i32 3, label %sw.bb16
  ]

sw.bb:                                            ; preds = %entry
  %status2 = getelementptr inbounds %struct.device, ptr %consumer, i32 0, i32 11, i32 3
  %3 = ptrtoint ptr %status2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %status2, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cond = icmp eq i32 %4, 1
  %status4 = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 5
  br i1 %cond, label %sw.bb3, label %sw.default

sw.bb3:                                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #24
  %5 = ptrtoint ptr %status4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 2, ptr %status4, align 8
  br label %sw.epilog20

sw.default:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #24
  %6 = ptrtoint ptr %status4 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %status4, align 8
  br label %sw.epilog20

sw.bb6:                                           ; preds = %entry
  %status8 = getelementptr inbounds %struct.device, ptr %consumer, i32 0, i32 11, i32 3
  %7 = ptrtoint ptr %status8 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %status8, align 8
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.155)
  switch i32 %8, label %sw.default13 [
    i32 1, label %sw.bb9
    i32 2, label %sw.bb11
  ]

sw.bb9:                                           ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #24
  %status10 = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 5
  %10 = ptrtoint ptr %status10 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 2, ptr %status10, align 8
  br label %sw.epilog20

sw.bb11:                                          ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #24
  %status12 = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 5
  %11 = ptrtoint ptr %status12 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 3, ptr %status12, align 8
  br label %sw.epilog20

sw.default13:                                     ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #24
  %status14 = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 5
  %12 = ptrtoint ptr %status14 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1, ptr %status14, align 8
  br label %sw.epilog20

sw.bb16:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %status17 = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 5
  %13 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 4, ptr %status17, align 8
  br label %sw.epilog20

sw.default18:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %status19 = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 5
  %14 = ptrtoint ptr %status19 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %status19, align 8
  br label %sw.epilog20

sw.epilog20:                                      ; preds = %sw.default18, %sw.bb16, %sw.default13, %sw.bb11, %sw.bb9, %sw.default, %sw.bb3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @get_device(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call = tail call ptr @kobject_get(ptr noundef nonnull %dev) #22
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi ptr [ %call, %cond.true ], [ null, %entry.cond.end_crit_edge ]
  ret ptr %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_set_name(ptr noundef %dev, ptr noundef %fmt, ...) #1 align 64 {
entry:
  %vargs = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vargs) #22
  %0 = ptrtoint ptr %vargs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %vargs, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %vargs)
  %1 = ptrtoint ptr %vargs to i32
  call void @__asan_load4_noabort(i32 %1)
  %.fca.0.load = load i32, ptr %vargs, align 4
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %.fca.0.load, 0
  %call = call i32 @kobject_set_name_vargs(ptr noundef %dev, ptr noundef %fmt, [1 x i32] %.fca.0.insert) #22
  call void @llvm.va_end(ptr nonnull %vargs)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vargs) #22
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_register(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @device_initialize(ptr noundef %dev)
  %call = tail call i32 @device_add(ptr noundef %dev)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @put_device(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %dev) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @list_add_tail_rcu(ptr noundef %new, ptr noundef %head) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %prev = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %0 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev, align 4
  %call.i = tail call zeroext i1 @__list_add_valid(ptr noundef %new, ptr noundef %1, ptr noundef %head) #22
  br i1 %call.i, label %if.end.i, label %entry.__list_add_rcu.exit_crit_edge

entry.__list_add_rcu.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_add_rcu.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %head, ptr %new, align 4
  %prev2.i = getelementptr inbounds %struct.list_head, ptr %new, i32 0, i32 1
  %3 = ptrtoint ptr %prev2.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %1, ptr %prev2.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !530
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %new, ptr %1, align 4
  %5 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %new, ptr %prev, align 4
  br label %__list_add_rcu.exit

__list_add_rcu.exit:                              ; preds = %if.end.i, %entry.__list_add_rcu.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_link_del(ptr noundef %link) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  tail call fastcc void @device_link_put_kref(ptr noundef %link)
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @device_link_put_kref(ptr noundef %link) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 6
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %kref = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 8
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %kref, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !531
  tail call void @llvm.prefetch.p0(ptr %kref, i32 1, i32 3, i32 1) #22
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %kref, ptr %kref, i32 1, ptr elementtype(i32) %kref) #22, !srcloc !532
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.if.end23_crit_edge, label %if.then10.i.i.i.i, !prof !523

if.end5.i.i.i.i.if.end23_crit_edge:               ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end23

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %kref, i32 noundef 3) #22
  br label %if.end23

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !533
  tail call fastcc void @__device_link_del(ptr noundef %kref) #22
  br label %if.end23

if.else:                                          ; preds = %entry
  %consumer = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 2
  %3 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %consumer, align 4
  %state_in_sysfs.i = getelementptr inbounds %struct.kobject, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %state_in_sysfs.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load.i = load i8, ptr %state_in_sysfs.i, align 4
  %6 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool2.not = icmp eq i8 %6, 0
  br i1 %tobool2.not, label %if.then3, label %do.end

if.then3:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %kref4 = getelementptr inbounds %struct.device_link, ptr %link, i32 0, i32 8
  tail call fastcc void @__device_link_del(ptr noundef %kref4)
  br label %if.end23

do.end:                                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 902, i32 noundef 9, ptr noundef nonnull @.str.91) #22
  br label %if.end23

if.end23:                                         ; preds = %do.end, %if.then3, %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.if.end23_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_link_remove(ptr noundef readnone %consumer, ptr noundef readonly %supplier) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %consumer, %supplier
  br i1 %cmp, label %do.end, label %if.end21, !prof !529

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 934, i32 noundef 9, ptr noundef null) #22
  br label %cleanup

if.end21:                                         ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %consumers = getelementptr inbounds %struct.device, ptr %supplier, i32 0, i32 11, i32 1
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end21
  %.pn.in = phi ptr [ %consumers, %if.end21 ], [ %.pn, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp25.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp25.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.cond
  %consumer28 = getelementptr i8, ptr %.pn, i32 8
  %1 = ptrtoint ptr %consumer28 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %consumer28, align 4
  %cmp29 = icmp eq ptr %2, %consumer
  br i1 %cmp29, label %if.then30, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond

if.then30:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %link.0.le = getelementptr i8, ptr %.pn, i32 -4
  tail call fastcc void @device_link_put_kref(ptr noundef %link.0.le)
  br label %for.end

for.end:                                          ; preds = %if.then30, %for.cond.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  br label %cleanup

cleanup:                                          ; preds = %for.end, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_links_check_suppliers(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @fwnode_link_lock, i32 noundef 0) #22
  %fwnode = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %0 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fwnode, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %suppliers = getelementptr inbounds %struct.fwnode_handle, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %suppliers to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %suppliers, align 4
  %cmp.i.not = icmp eq ptr %3, %suppliers
  br i1 %cmp.i.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true3

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i32, ptr @fw_devlink_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 384, i32 %4)
  %cmp.i58 = icmp eq i32 %4, 384
  br i1 %cmp.i58, label %land.lhs.true3.if.end_crit_edge, label %if.then

land.lhs.true3.if.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr = getelementptr i8, ptr %3, i32 -16
  %5 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add.ptr, align 4
  %call7 = tail call i32 (ptr, i32, ptr, ...) @dev_err_probe(ptr noundef %dev, i32 noundef -517, ptr noundef nonnull @.str.8, ptr noundef %6)
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true3.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @fwnode_link_lock) #22
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %links = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11
  %7 = ptrtoint ptr %links to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn62 = load ptr, ptr %links, align 8
  %cmp.not63 = icmp eq ptr %.pn62, %links
  br i1 %cmp.not63, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn64 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn62, %if.end.for.body_crit_edge ]
  %flags = getelementptr i8, ptr %.pn64, i32 940
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %and = and i32 %9, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %for.body.for.inc_crit_edge, label %if.end17

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end17:                                         ; preds = %for.body
  %status = getelementptr i8, ptr %.pn64, i32 936
  %10 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp18.not = icmp ne i32 %11, 1
  %and21 = and i32 %9, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  %or.cond = select i1 %cmp18.not, i1 %tobool22.not, i1 false
  br i1 %or.cond, label %if.then23, label %do.body29

if.then23:                                        ; preds = %if.end17
  %link.0.le = getelementptr i8, ptr %.pn64, i32 -16
  %12 = ptrtoint ptr %links to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn66.i = load ptr, ptr %links, align 8
  %cmp.not68.i = icmp eq ptr %.pn66.i, %links
  br i1 %cmp.not68.i, label %if.then23.device_links_missing_supplier.exit_crit_edge, label %if.then23.for.body.i_crit_edge

if.then23.for.body.i_crit_edge:                   ; preds = %if.then23
  br label %for.body.i

if.then23.device_links_missing_supplier.exit_crit_edge: ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_links_missing_supplier.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then23.for.body.i_crit_edge
  %.pn69.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn66.i, %if.then23.for.body.i_crit_edge ]
  %status.i = getelementptr i8, ptr %.pn69.i, i32 936
  %13 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %14)
  %cmp3.not.i = icmp eq i32 %14, 2
  br i1 %cmp3.not.i, label %if.end.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %link.070.i = getelementptr i8, ptr %.pn69.i, i32 -16
  %15 = ptrtoint ptr %link.070.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %link.070.i, align 8
  %status5.i = getelementptr inbounds %struct.device, ptr %16, i32 0, i32 11, i32 3
  %17 = ptrtoint ptr %status5.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %status5.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %18)
  %cmp6.i = icmp eq i32 %18, 2
  br i1 %cmp6.i, label %if.end.i.for.inc.sink.split.i_crit_edge, label %if.else.i

if.end.i.for.inc.sink.split.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.sink.split.i

if.else.i:                                        ; preds = %if.end.i
  %flags.i = getelementptr i8, ptr %.pn69.i, i32 940
  %19 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %20, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end28.i, label %if.else.i.for.inc.sink.split.i_crit_edge, !prof !529

if.else.i.for.inc.sink.split.i_crit_edge:         ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.sink.split.i

do.end28.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 961, i32 noundef 9, ptr noundef null) #22
  br label %for.inc.sink.split.i

for.inc.sink.split.i:                             ; preds = %do.end28.i, %if.else.i.for.inc.sink.split.i_crit_edge, %if.end.i.for.inc.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 1, %if.end.i.for.inc.sink.split.i_crit_edge ], [ 0, %do.end28.i ], [ 0, %if.else.i.for.inc.sink.split.i_crit_edge ]
  %21 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile i32 %.sink.i, ptr %status.i, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %for.inc.sink.split.i, %for.body.i.for.inc.i_crit_edge
  %22 = ptrtoint ptr %.pn69.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pn.i = load ptr, ptr %.pn69.i, align 8
  %cmp.not.i = icmp eq ptr %.pn.i, %links
  br i1 %cmp.not.i, label %for.inc.i.device_links_missing_supplier.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.inc.i.device_links_missing_supplier.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_links_missing_supplier.exit

device_links_missing_supplier.exit:               ; preds = %for.inc.i.device_links_missing_supplier.exit_crit_edge, %if.then23.device_links_missing_supplier.exit_crit_edge
  %23 = ptrtoint ptr %link.0.le to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %link.0.le, align 8
  %init_name.i = getelementptr inbounds %struct.device, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i59 = icmp eq ptr %26, null
  br i1 %tobool.not.i59, label %if.end.i60, label %device_links_missing_supplier.exit.dev_name.exit_crit_edge

device_links_missing_supplier.exit.dev_name.exit_crit_edge: ; preds = %device_links_missing_supplier.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i60:                                       ; preds = %device_links_missing_supplier.exit
  call void @__sanitizer_cov_trace_pc() #24
  %27 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %24, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i60, %device_links_missing_supplier.exit.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %28, %if.end.i60 ], [ %26, %device_links_missing_supplier.exit.dev_name.exit_crit_edge ]
  %call26 = tail call i32 (ptr, i32, ptr, ...) @dev_err_probe(ptr noundef %dev, i32 noundef -517, ptr noundef nonnull @.str.9, ptr noundef %retval.0.i)
  br label %for.end

do.body29:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  %29 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile i32 2, ptr %status, align 8
  br label %for.inc

for.inc:                                          ; preds = %do.body29, %for.body.for.inc_crit_edge
  %30 = ptrtoint ptr %.pn64 to i32
  call void @__asan_load4_noabort(i32 %30)
  %.pn = load ptr, ptr %.pn64, align 8
  %cmp.not = icmp eq ptr %.pn, %links
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %dev_name.exit, %if.end.for.end_crit_edge
  %ret.0 = phi i32 [ -517, %dev_name.exit ], [ 0, %if.end.for.end_crit_edge ], [ 0, %for.inc.for.end_crit_edge ]
  %status41 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 3
  %31 = ptrtoint ptr %status41 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 1, ptr %status41, align 8
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  %device_links_lock.sink = phi ptr [ @device_links_lock, %for.end ], [ @fwnode_link_lock, %if.then ]
  %retval.0 = phi i32 [ %ret.0, %for.end ], [ -517, %if.then ]
  tail call void @mutex_unlock(ptr noundef nonnull %device_links_lock.sink) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_err_probe(ptr noundef %dev, i32 noundef returned %err, ptr noundef %fmt, ...) #1 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #22
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -517, i32 %err)
  %cmp.not = icmp eq i32 %err, -517
  br i1 %cmp.not, label %if.else, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %4 = inttoptr i32 %err to ptr
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.55, ptr noundef %4, ptr noundef nonnull %vaf) #26
  br label %if.end11

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  call void @device_set_deferred_probe_reason(ptr noundef %dev, ptr noundef nonnull %vaf) #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @dev_err_probe.__UNIQUE_ID_ddebug397, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@dev_err_probe, %if.end11)) #22
          to label %if.then7 [label %if.end11], !srcloc !522

if.then7:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @dev_err_probe.__UNIQUE_ID_ddebug397, ptr noundef %dev, ptr noundef nonnull @.str.55, ptr noundef nonnull inttoptr (i32 -517 to ptr), ptr noundef nonnull %vaf) #22
  br label %if.end11

if.end11:                                         ; preds = %if.then7, %if.else, %do.end
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #22
  ret i32 %err
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_links_supplier_sync_state_pause() local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %0 = load i32, ptr @defer_sync_state_count, align 4
  %inc = add i32 %0, 1
  store i32 %inc, ptr @defer_sync_state_count, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_links_supplier_sync_state_resume() local_unnamed_addr #1 align 64 {
entry:
  %sync_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sync_list) #22
  %0 = getelementptr inbounds %struct.list_head, ptr %sync_list, i32 0, i32 1
  %1 = ptrtoint ptr %sync_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %sync_list, ptr %sync_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %sync_list, ptr %0, align 4
  call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %3 = load i32, ptr @defer_sync_state_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %do.end, label %if.end18

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1125, i32 noundef 9, ptr noundef nonnull @.str.10) #22
  br label %out

if.end18:                                         ; preds = %entry
  %dec = add i32 %3, -1
  store i32 %dec, ptr @defer_sync_state_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool19.not = icmp eq i32 %dec, 0
  br i1 %tobool19.not, label %if.end21, label %if.end18.out_crit_edge

if.end18.out_crit_edge:                           ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end21:                                         ; preds = %if.end18
  %4 = load ptr, ptr @deferred_sync, align 4
  %cmp.not45 = icmp eq ptr %4, @deferred_sync
  br i1 %cmp.not45, label %if.end21.out_crit_edge, label %if.end21.for.body_crit_edge

if.end21.for.body_crit_edge:                      ; preds = %if.end21
  br label %for.body

if.end21.out_crit_edge:                           ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

for.body:                                         ; preds = %list_del_init.exit.for.body_crit_edge, %if.end21.for.body_crit_edge
  %.pn.in46 = phi ptr [ %.pn, %list_del_init.exit.for.body_crit_edge ], [ %4, %if.end21.for.body_crit_edge ]
  %dev.0 = getelementptr i8, ptr %.pn.in46, i32 -368
  %5 = ptrtoint ptr %.pn.in46 to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn = load ptr, ptr %.pn.in46, align 8
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in46) #22
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del_init.exit_crit_edge

for.body.list_del_init.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in46, i32 0, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %8 = ptrtoint ptr %.pn.in46 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %.pn.in46, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %for.body.list_del_init.exit_crit_edge
  %12 = ptrtoint ptr %.pn.in46 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %.pn.in46, ptr %.pn.in46, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %.pn.in46, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %.pn.in46, ptr %prev.i3.i, align 4
  call fastcc void @__device_links_queue_sync_state(ptr noundef %dev.0, ptr noundef nonnull %sync_list)
  %cmp.not = icmp eq ptr %.pn, @deferred_sync
  br i1 %cmp.not, label %list_del_init.exit.out_crit_edge, label %list_del_init.exit.for.body_crit_edge

list_del_init.exit.for.body_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

list_del_init.exit.out_crit_edge:                 ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

out:                                              ; preds = %list_del_init.exit.out_crit_edge, %if.end21.out_crit_edge, %if.end18.out_crit_edge, %do.end
  call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  call fastcc void @device_links_flush_sync_list(ptr noundef nonnull %sync_list, ptr noundef null)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sync_list) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__device_links_queue_sync_state(ptr noundef %dev, ptr noundef %list) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %driver.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %driver.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver.i, align 4
  %tobool1.not.i = icmp eq ptr %1, null
  br i1 %tobool1.not.i, label %if.end.i.if.end5.i_crit_edge, label %land.lhs.true.i

if.end.i.if.end5.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %sync_state.i = getelementptr inbounds %struct.device_driver, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %sync_state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sync_state.i, align 4
  %tobool3.not.i = icmp eq ptr %3, null
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.end5.i_crit_edge, label %land.lhs.true.i.if.end_crit_edge

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true.i.if.end5.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5.i

if.end5.i:                                        ; preds = %land.lhs.true.i.if.end5.i_crit_edge, %if.end.i.if.end5.i_crit_edge
  %bus.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %4 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus.i, align 8
  %tobool6.not.i = icmp eq ptr %5, null
  br i1 %tobool6.not.i, label %if.end5.i.cleanup_crit_edge, label %land.lhs.true7.i

if.end5.i.cleanup_crit_edge:                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true7.i:                                 ; preds = %if.end5.i
  %sync_state9.i = getelementptr inbounds %struct.bus_type, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %sync_state9.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sync_state9.i, align 4
  %tobool10.not.i = icmp eq ptr %7, null
  br i1 %tobool10.not.i, label %land.lhs.true7.i.cleanup_crit_edge, label %land.lhs.true7.i.if.end_crit_edge

land.lhs.true7.i.if.end_crit_edge:                ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true7.i.cleanup_crit_edge:               ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.i.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge
  %state_synced = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 39
  %8 = ptrtoint ptr %state_synced to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load = load i8, ptr %state_synced, align 4
  %9 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %bf.cast.not = icmp eq i8 %9, 0
  br i1 %bf.cast.not, label %if.end2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %10 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn64 = load ptr, ptr %consumers, align 4
  %cmp.not65 = icmp eq ptr %.pn64, %consumers
  br i1 %cmp.not65, label %if.end2.for.end_crit_edge, label %if.end2.for.body_crit_edge

if.end2.for.body_crit_edge:                       ; preds = %if.end2
  br label %for.body

if.end2.for.end_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end2.for.body_crit_edge
  %.pn66 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn64, %if.end2.for.body_crit_edge ]
  %flags = getelementptr i8, ptr %.pn66, i32 952
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags, align 4
  %and = and i32 %12, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end6

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end6:                                          ; preds = %for.body
  %status = getelementptr i8, ptr %.pn66, i32 948
  %13 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %14)
  %cmp7.not = icmp eq i32 %14, 3
  br i1 %cmp7.not, label %if.end6.for.inc_crit_edge, label %if.end6.cleanup_crit_edge

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end6.for.inc_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

for.inc:                                          ; preds = %if.end6.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %15 = ptrtoint ptr %.pn66 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn = load ptr, ptr %.pn66, align 4
  %cmp.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end2.for.end_crit_edge
  %bf.set = or i8 %bf.load, 16
  %16 = ptrtoint ptr %state_synced to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %bf.set, ptr %state_synced, align 4
  %defer_sync = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 2
  %17 = ptrtoint ptr %defer_sync to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %defer_sync, align 4
  %cmp.i.not = icmp eq ptr %18, %defer_sync
  br i1 %cmp.i.not, label %get_device.exit, label %do.end, !prof !523

do.end:                                           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1071, i32 noundef 9, ptr noundef null) #22
  br label %cleanup

get_device.exit:                                  ; preds = %for.end
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %dev) #22
  %prev.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %defer_sync, ptr noundef %20, ptr noundef %list) #22
  br i1 %call.i.i, label %if.end.i.i, label %get_device.exit.cleanup_crit_edge

get_device.exit.cleanup_crit_edge:                ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i.i:                                       ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %defer_sync, ptr %prev.i, align 4
  %22 = ptrtoint ptr %defer_sync to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %list, ptr %defer_sync, align 4
  %prev3.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 2, i32 1
  %23 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %20, ptr %prev3.i.i, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %defer_sync, ptr %20, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i, %get_device.exit.cleanup_crit_edge, %do.end, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %land.lhs.true7.i.cleanup_crit_edge, %if.end5.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @device_links_flush_sync_list(ptr noundef readonly %list, ptr noundef readnone %dont_lock_dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list, align 4
  %cmp.not55 = icmp eq ptr %1, %list
  br i1 %cmp.not55, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %put_device.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in56 = phi ptr [ %.pn58, %put_device.exit.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %dev.057 = getelementptr i8, ptr %.pn.in56, i32 -368
  %2 = ptrtoint ptr %.pn.in56 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn58 = load ptr, ptr %.pn.in56, align 8
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in56) #22
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del_init.exit_crit_edge

for.body.list_del_init.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in56, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %.pn.in56 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %.pn.in56, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %for.body.list_del_init.exit_crit_edge
  %9 = ptrtoint ptr %.pn.in56 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %.pn.in56, ptr %.pn.in56, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %.pn.in56, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %.pn.in56, ptr %prev.i3.i, align 4
  %cmp10.not = icmp eq ptr %dev.057, %dont_lock_dev
  br i1 %cmp10.not, label %list_del_init.exit.if.end_crit_edge, label %if.then

list_del_init.exit.if.end_crit_edge:              ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  %mutex.i = getelementptr i8, ptr %.pn.in56, i32 -108
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %list_del_init.exit.if.end_crit_edge
  %bus = getelementptr i8, ptr %.pn.in56, i32 -216
  %11 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bus, align 8
  %sync_state = getelementptr inbounds %struct.bus_type, ptr %12, i32 0, i32 9
  %13 = ptrtoint ptr %sync_state to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %sync_state, align 4
  %tobool.not = icmp eq ptr %14, null
  br i1 %tobool.not, label %if.else, label %if.end.if.end22.sink.split_crit_edge

if.end.if.end22.sink.split_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22.sink.split

if.else:                                          ; preds = %if.end
  %driver = getelementptr i8, ptr %.pn.in56, i32 -212
  %15 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %driver, align 4
  %tobool14.not = icmp eq ptr %16, null
  br i1 %tobool14.not, label %if.else.if.end22_crit_edge, label %land.lhs.true

if.else.if.end22_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

land.lhs.true:                                    ; preds = %if.else
  %sync_state16 = getelementptr inbounds %struct.device_driver, ptr %16, i32 0, i32 9
  %17 = ptrtoint ptr %sync_state16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sync_state16, align 4
  %tobool17.not = icmp eq ptr %18, null
  br i1 %tobool17.not, label %land.lhs.true.if.end22_crit_edge, label %land.lhs.true.if.end22.sink.split_crit_edge

land.lhs.true.if.end22.sink.split_crit_edge:      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22.sink.split

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

if.end22.sink.split:                              ; preds = %land.lhs.true.if.end22.sink.split_crit_edge, %if.end.if.end22.sink.split_crit_edge
  %.sink = phi ptr [ %14, %if.end.if.end22.sink.split_crit_edge ], [ %18, %land.lhs.true.if.end22.sink.split_crit_edge ]
  tail call void %.sink(ptr noundef %dev.057) #22
  br label %if.end22

if.end22:                                         ; preds = %if.end22.sink.split, %land.lhs.true.if.end22_crit_edge, %if.else.if.end22_crit_edge
  br i1 %cmp10.not, label %if.end22.if.end25_crit_edge, label %if.then24

if.end22.if.end25_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25

if.then24:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  %mutex.i52 = getelementptr i8, ptr %.pn.in56, i32 -108
  tail call void @mutex_unlock(ptr noundef %mutex.i52) #22
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end22.if.end25_crit_edge
  %tobool.not.i = icmp eq ptr %dev.057, null
  br i1 %tobool.not.i, label %if.end25.put_device.exit_crit_edge, label %if.then.i

if.end25.put_device.exit_crit_edge:               ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then.i:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %dev.057) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %if.then.i, %if.end25.put_device.exit_crit_edge
  %cmp.not = icmp eq ptr %.pn58, %list
  br i1 %cmp.not, label %put_device.exit.for.end_crit_edge, label %put_device.exit.for.body_crit_edge

put_device.exit.for.body_crit_edge:               ; preds = %put_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

put_device.exit.for.end_crit_edge:                ; preds = %put_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %put_device.exit.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @sync_state_resume_initcall() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @device_links_supplier_sync_state_resume()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_links_force_bind(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %links = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11
  %0 = ptrtoint ptr %links to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %links, align 8
  %cmp.not35 = icmp eq ptr %1, %links
  br i1 %cmp.not35, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in36 = phi ptr [ %.pn37, %for.inc.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %2 = ptrtoint ptr %.pn.in36 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn37 = load ptr, ptr %.pn.in36, align 8
  %flags = getelementptr i8, ptr %.pn.in36, i32 940
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %and = and i32 %4, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end:                                           ; preds = %for.body
  %status = getelementptr i8, ptr %.pn.in36, i32 936
  %5 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp8.not = icmp eq i32 %6, 1
  br i1 %cmp8.not, label %do.body12, label %if.then9

if.then9:                                         ; preds = %if.end
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags, align 4
  %and.i = and i32 %8, -65
  store i32 %and.i, ptr %flags, align 4
  %9 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1, ptr %status, align 8
  %kref.i = getelementptr i8, ptr %.pn.in36, i32 948
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %kref.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !531
  tail call void @llvm.prefetch.p0(ptr %kref.i, i32 1, i32 3, i32 1) #22
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %kref.i, ptr %kref.i, i32 1, ptr elementtype(i32) %kref.i) #22, !srcloc !532
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.for.inc_crit_edge, label %if.then10.i.i.i.i.i, !prof !523

if.end5.i.i.i.i.i.for.inc_crit_edge:              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %kref.i, i32 noundef 3) #22
  br label %for.inc

if.then.i.i:                                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !533
  tail call fastcc void @__device_link_del(ptr noundef %kref.i) #22
  br label %for.inc

do.body12:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %11 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 2, ptr %status, align 8
  br label %for.inc

for.inc:                                          ; preds = %do.body12, %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %.pn37, %links
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %status24 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 3
  %12 = ptrtoint ptr %status24 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1, ptr %status24, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_links_driver_bound(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  %sync_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sync_list) #22
  %0 = getelementptr inbounds %struct.list_head, ptr %sync_list, i32 0, i32 1
  %1 = ptrtoint ptr %sync_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %sync_list, ptr %sync_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %sync_list, ptr %0, align 4
  %fwnode = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %3 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fwnode, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %dev2 = getelementptr inbounds %struct.fwnode_handle, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %dev2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev2, align 4
  %cmp = icmp eq ptr %6, %dev
  br i1 %cmp, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call fastcc void @fwnode_links_purge_suppliers(ptr noundef nonnull %4)
  %7 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fwnode, align 4
  %call = call ptr @fwnode_get_next_available_child_node(ptr noundef %8, ptr noundef null) #22
  %tobool5.not217 = icmp eq ptr %call, null
  br i1 %tobool5.not217, label %if.then.if.end_crit_edge, label %if.then.for.body_crit_edge

if.then.for.body_crit_edge:                       ; preds = %if.then
  br label %for.body

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then.for.body_crit_edge
  %child.0218 = phi ptr [ %call7, %for.body.for.body_crit_edge ], [ %call, %if.then.for.body_crit_edge ]
  call void @fw_devlink_purge_absent_suppliers(ptr noundef nonnull %child.0218)
  %9 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %fwnode, align 4
  %call7 = call ptr @fwnode_get_next_available_child_node(ptr noundef %10, ptr noundef nonnull %child.0218) #22
  %tobool5.not = icmp eq ptr %call7, null
  br i1 %tobool5.not, label %for.body.if.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end:                                           ; preds = %for.body.if.end_crit_edge, %if.then.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %if.end.device_remove_file.exit_crit_edge, label %if.then.i

if.end.device_remove_file.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_remove_file.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  call void @sysfs_remove_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_waiting_for_supplier, ptr noundef null) #22
  br label %device_remove_file.exit

device_remove_file.exit:                          ; preds = %if.then.i, %if.end.device_remove_file.exit_crit_edge
  call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %links = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %11 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn219 = load ptr, ptr %consumers, align 4
  %cmp12.not220 = icmp eq ptr %.pn219, %consumers
  br i1 %cmp12.not220, label %device_remove_file.exit.for.end68_crit_edge, label %device_remove_file.exit.for.body13_crit_edge

device_remove_file.exit.for.body13_crit_edge:     ; preds = %device_remove_file.exit
  br label %for.body13

device_remove_file.exit.for.end68_crit_edge:      ; preds = %device_remove_file.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end68

for.body13:                                       ; preds = %for.inc62.for.body13_crit_edge, %device_remove_file.exit.for.body13_crit_edge
  %.pn221 = phi ptr [ %.pn, %for.inc62.for.body13_crit_edge ], [ %.pn219, %device_remove_file.exit.for.body13_crit_edge ]
  %flags = getelementptr i8, ptr %.pn221, i32 952
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags, align 4
  %and = and i32 %13, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool14.not = icmp eq i32 %and, 0
  br i1 %tobool14.not, label %for.body13.for.inc62_crit_edge, label %if.end16

for.body13.for.inc62_crit_edge:                   ; preds = %for.body13
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62

if.end16:                                         ; preds = %for.body13
  %status = getelementptr i8, ptr %.pn221, i32 948
  %14 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %status, align 8
  %16 = zext i32 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.156)
  switch i32 %15, label %do.end [
    i32 2, label %if.end16.for.inc62_crit_edge
    i32 3, label %if.end16.for.inc62_crit_edge228
    i32 0, label %if.end16.if.end39_crit_edge
  ], !prof !534

if.end16.if.end39_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39

if.end16.for.inc62_crit_edge228:                  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62

if.end16.for.inc62_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62

do.end:                                           ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #24
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1265, i32 noundef 9, ptr noundef null) #22
  br label %if.end39

if.end39:                                         ; preds = %do.end, %if.end16.if.end39_crit_edge
  %17 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 1, ptr %status, align 8
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags, align 4
  %and58 = and i32 %19, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %if.end39.for.inc62_crit_edge, label %if.then60

if.end39.for.inc62_crit_edge:                     ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62

if.then60:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #24
  %consumer = getelementptr i8, ptr %.pn221, i32 8
  %20 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %consumer, align 4
  call void @driver_deferred_probe_add(ptr noundef %21) #22
  br label %for.inc62

for.inc62:                                        ; preds = %if.then60, %if.end39.for.inc62_crit_edge, %if.end16.for.inc62_crit_edge, %if.end16.for.inc62_crit_edge228, %for.body13.for.inc62_crit_edge
  %22 = ptrtoint ptr %.pn221 to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pn = load ptr, ptr %.pn221, align 4
  %cmp12.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp12.not, label %for.inc62.for.end68_crit_edge, label %for.inc62.for.body13_crit_edge

for.inc62.for.body13_crit_edge:                   ; preds = %for.inc62
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body13

for.inc62.for.end68_crit_edge:                    ; preds = %for.inc62
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end68

for.end68:                                        ; preds = %for.inc62.for.end68_crit_edge, %device_remove_file.exit.for.end68_crit_edge
  %23 = load i32, ptr @defer_sync_state_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool69.not = icmp eq i32 %23, 0
  br i1 %tobool69.not, label %if.else, label %if.then70

if.then70:                                        ; preds = %for.end68
  %defer_sync.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 2
  %24 = ptrtoint ptr %defer_sync.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %defer_sync.i, align 4
  %cmp.i.i = icmp ne ptr %25, %defer_sync.i
  %or.cond.i = or i1 %tobool.not.i, %cmp.i.i
  br i1 %or.cond.i, label %if.then70.if.end71_crit_edge, label %if.end.i.i

if.then70.if.end71_crit_edge:                     ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end71

if.end.i.i:                                       ; preds = %if.then70
  %driver.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 6
  %26 = ptrtoint ptr %driver.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %driver.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %27, null
  br i1 %tobool1.not.i.i, label %if.end.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i

if.end.i.i.if.end5.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %sync_state.i.i = getelementptr inbounds %struct.device_driver, ptr %27, i32 0, i32 9
  %28 = ptrtoint ptr %sync_state.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sync_state.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %29, null
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i.if.then.i195_crit_edge

land.lhs.true.i.i.if.then.i195_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i195

land.lhs.true.i.i.if.end5.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %land.lhs.true.i.i.if.end5.i.i_crit_edge, %if.end.i.i.if.end5.i.i_crit_edge
  %bus.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %30 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bus.i.i, align 8
  %tobool6.not.i.i = icmp eq ptr %31, null
  br i1 %tobool6.not.i.i, label %if.end5.i.i.if.end71_crit_edge, label %land.lhs.true7.i.i

if.end5.i.i.if.end71_crit_edge:                   ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end71

land.lhs.true7.i.i:                               ; preds = %if.end5.i.i
  %sync_state9.i.i = getelementptr inbounds %struct.bus_type, ptr %31, i32 0, i32 9
  %32 = ptrtoint ptr %sync_state9.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %sync_state9.i.i, align 4
  %tobool10.not.i.i = icmp eq ptr %33, null
  br i1 %tobool10.not.i.i, label %land.lhs.true7.i.i.if.end71_crit_edge, label %land.lhs.true7.i.i.if.then.i195_crit_edge

land.lhs.true7.i.i.if.then.i195_crit_edge:        ; preds = %land.lhs.true7.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i195

land.lhs.true7.i.i.if.end71_crit_edge:            ; preds = %land.lhs.true7.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end71

if.then.i195:                                     ; preds = %land.lhs.true7.i.i.if.then.i195_crit_edge, %land.lhs.true.i.i.if.then.i195_crit_edge
  %34 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @deferred_sync, i32 0, i32 1), align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %defer_sync.i, ptr noundef %34, ptr noundef nonnull @deferred_sync) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i195.if.end71_crit_edge

if.then.i195.if.end71_crit_edge:                  ; preds = %if.then.i195
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end71

if.end.i.i.i:                                     ; preds = %if.then.i195
  call void @__sanitizer_cov_trace_pc() #24
  store ptr %defer_sync.i, ptr getelementptr inbounds (%struct.list_head, ptr @deferred_sync, i32 0, i32 1), align 4
  %35 = ptrtoint ptr %defer_sync.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @deferred_sync, ptr %defer_sync.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 2, i32 1
  %36 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %34, ptr %prev3.i.i.i, align 4
  %37 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %defer_sync.i, ptr %34, align 4
  br label %if.end71

if.else:                                          ; preds = %for.end68
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @__device_links_queue_sync_state(ptr noundef %dev, ptr noundef nonnull %sync_list)
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.end.i.i.i, %if.then.i195.if.end71_crit_edge, %land.lhs.true7.i.i.if.end71_crit_edge, %if.end5.i.i.if.end71_crit_edge, %if.then70.if.end71_crit_edge
  %38 = ptrtoint ptr %links to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %links, align 8
  %cmp85.not224 = icmp eq ptr %39, %links
  br i1 %cmp85.not224, label %if.end71.for.end153_crit_edge, label %if.end71.for.body88_crit_edge

if.end71.for.body88_crit_edge:                    ; preds = %if.end71
  br label %for.body88

if.end71.for.end153_crit_edge:                    ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end153

for.body88:                                       ; preds = %cleanup.for.body88_crit_edge, %if.end71.for.body88_crit_edge
  %.pn193.in225 = phi ptr [ %.pn193227, %cleanup.for.body88_crit_edge ], [ %39, %if.end71.for.body88_crit_edge ]
  %40 = ptrtoint ptr %.pn193.in225 to i32
  call void @__asan_load4_noabort(i32 %40)
  %.pn193227 = load ptr, ptr %.pn193.in225, align 8
  %flags89 = getelementptr i8, ptr %.pn193.in225, i32 940
  %41 = ptrtoint ptr %flags89 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %flags89, align 4
  %and90 = and i32 %42, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and90)
  %tobool91.not = icmp eq i32 %and90, 0
  br i1 %tobool91.not, label %for.body88.cleanup_crit_edge, label %if.end93

for.body88.cleanup_crit_edge:                     ; preds = %for.body88
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end93:                                         ; preds = %for.body88
  %link.1226 = getelementptr i8, ptr %.pn193.in225, i32 -16
  %43 = ptrtoint ptr %link.1226 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %link.1226, align 8
  %and96 = and i32 %42, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96)
  %tobool97.not = icmp eq i32 %and96, 0
  br i1 %tobool97.not, label %if.else99, label %if.then98

if.then98:                                        ; preds = %if.end93
  %45 = ptrtoint ptr %flags89 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %flags89, align 4
  %and.i = and i32 %46, -65
  store i32 %and.i, ptr %flags89, align 4
  %status.i = getelementptr i8, ptr %.pn193.in225, i32 936
  %47 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile i32 -1, ptr %status.i, align 8
  %kref.i = getelementptr i8, ptr %.pn193.in225, i32 948
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %kref.i, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !531
  call void @llvm.prefetch.p0(ptr %kref.i, i32 1, i32 3, i32 1) #22
  %48 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %kref.i, ptr %kref.i, i32 1, ptr elementtype(i32) %kref.i) #22, !srcloc !532
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %48, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then98
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.if.end142_crit_edge, label %if.then10.i.i.i.i.i, !prof !523

if.end5.i.i.i.i.i.if.end142_crit_edge:            ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end142

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %kref.i, i32 noundef 3) #22
  br label %if.end142

if.then.i.i:                                      ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !533
  call fastcc void @__device_link_del(ptr noundef %kref.i) #22
  br label %if.end142

if.else99:                                        ; preds = %if.end93
  %status101 = getelementptr i8, ptr %.pn193.in225, i32 936
  %49 = ptrtoint ptr %status101 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %status101, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %50)
  %cmp102.not = icmp eq i32 %50, 2
  br i1 %cmp102.not, label %if.else99.if.end124_crit_edge, label %do.end118, !prof !523

if.else99.if.end124_crit_edge:                    ; preds = %if.else99
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end124

do.end118:                                        ; preds = %if.else99
  call void @__sanitizer_cov_trace_pc() #24
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1292, i32 noundef 9, ptr noundef null) #22
  br label %if.end124

if.end124:                                        ; preds = %do.end118, %if.else99.if.end124_crit_edge
  %51 = ptrtoint ptr %status101 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile i32 3, ptr %status101, align 8
  br label %if.end142

if.end142:                                        ; preds = %if.end124, %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.if.end142_crit_edge
  %52 = load i32, ptr @defer_sync_state_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool143.not = icmp eq i32 %52, 0
  br i1 %tobool143.not, label %if.else145, label %if.then144

if.then144:                                       ; preds = %if.end142
  %defer_sync.i196 = getelementptr inbounds %struct.device, ptr %44, i32 0, i32 11, i32 2
  %53 = ptrtoint ptr %defer_sync.i196 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile ptr, ptr %defer_sync.i196, align 4
  %cmp.i.i197 = icmp ne ptr %54, %defer_sync.i196
  %tobool.not.i.i198 = icmp eq ptr %44, null
  %or.cond.i199 = or i1 %tobool.not.i.i198, %cmp.i.i197
  br i1 %or.cond.i199, label %if.then144.cleanup_crit_edge, label %if.end.i.i202

if.then144.cleanup_crit_edge:                     ; preds = %if.then144
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i.i202:                                    ; preds = %if.then144
  %driver.i.i200 = getelementptr inbounds %struct.device, ptr %44, i32 0, i32 6
  %55 = ptrtoint ptr %driver.i.i200 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %driver.i.i200, align 4
  %tobool1.not.i.i201 = icmp eq ptr %56, null
  br i1 %tobool1.not.i.i201, label %if.end.i.i202.if.end5.i.i208_crit_edge, label %land.lhs.true.i.i205

if.end.i.i202.if.end5.i.i208_crit_edge:           ; preds = %if.end.i.i202
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5.i.i208

land.lhs.true.i.i205:                             ; preds = %if.end.i.i202
  %sync_state.i.i203 = getelementptr inbounds %struct.device_driver, ptr %56, i32 0, i32 9
  %57 = ptrtoint ptr %sync_state.i.i203 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %sync_state.i.i203, align 4
  %tobool3.not.i.i204 = icmp eq ptr %58, null
  br i1 %tobool3.not.i.i204, label %land.lhs.true.i.i205.if.end5.i.i208_crit_edge, label %land.lhs.true.i.i205.if.then.i213_crit_edge

land.lhs.true.i.i205.if.then.i213_crit_edge:      ; preds = %land.lhs.true.i.i205
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i213

land.lhs.true.i.i205.if.end5.i.i208_crit_edge:    ; preds = %land.lhs.true.i.i205
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5.i.i208

if.end5.i.i208:                                   ; preds = %land.lhs.true.i.i205.if.end5.i.i208_crit_edge, %if.end.i.i202.if.end5.i.i208_crit_edge
  %bus.i.i206 = getelementptr inbounds %struct.device, ptr %44, i32 0, i32 5
  %59 = ptrtoint ptr %bus.i.i206 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %bus.i.i206, align 8
  %tobool6.not.i.i207 = icmp eq ptr %60, null
  br i1 %tobool6.not.i.i207, label %if.end5.i.i208.cleanup_crit_edge, label %land.lhs.true7.i.i211

if.end5.i.i208.cleanup_crit_edge:                 ; preds = %if.end5.i.i208
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true7.i.i211:                            ; preds = %if.end5.i.i208
  %sync_state9.i.i209 = getelementptr inbounds %struct.bus_type, ptr %60, i32 0, i32 9
  %61 = ptrtoint ptr %sync_state9.i.i209 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %sync_state9.i.i209, align 4
  %tobool10.not.i.i210 = icmp eq ptr %62, null
  br i1 %tobool10.not.i.i210, label %land.lhs.true7.i.i211.cleanup_crit_edge, label %land.lhs.true7.i.i211.if.then.i213_crit_edge

land.lhs.true7.i.i211.if.then.i213_crit_edge:     ; preds = %land.lhs.true7.i.i211
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i213

land.lhs.true7.i.i211.cleanup_crit_edge:          ; preds = %land.lhs.true7.i.i211
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then.i213:                                     ; preds = %land.lhs.true7.i.i211.if.then.i213_crit_edge, %land.lhs.true.i.i205.if.then.i213_crit_edge
  %63 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @deferred_sync, i32 0, i32 1), align 4
  %call.i.i.i212 = call zeroext i1 @__list_add_valid(ptr noundef %defer_sync.i196, ptr noundef %63, ptr noundef nonnull @deferred_sync) #22
  br i1 %call.i.i.i212, label %if.end.i.i.i215, label %if.then.i213.cleanup_crit_edge

if.then.i213.cleanup_crit_edge:                   ; preds = %if.then.i213
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i.i.i215:                                  ; preds = %if.then.i213
  call void @__sanitizer_cov_trace_pc() #24
  store ptr %defer_sync.i196, ptr getelementptr inbounds (%struct.list_head, ptr @deferred_sync, i32 0, i32 1), align 4
  %64 = ptrtoint ptr %defer_sync.i196 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr @deferred_sync, ptr %defer_sync.i196, align 4
  %prev3.i.i.i214 = getelementptr inbounds %struct.device, ptr %44, i32 0, i32 11, i32 2, i32 1
  %65 = ptrtoint ptr %prev3.i.i.i214 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %63, ptr %prev3.i.i.i214, align 4
  %66 = ptrtoint ptr %63 to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile ptr %defer_sync.i196, ptr %63, align 4
  br label %cleanup

if.else145:                                       ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @__device_links_queue_sync_state(ptr noundef %44, ptr noundef nonnull %sync_list)
  br label %cleanup

cleanup:                                          ; preds = %if.else145, %if.end.i.i.i215, %if.then.i213.cleanup_crit_edge, %land.lhs.true7.i.i211.cleanup_crit_edge, %if.end5.i.i208.cleanup_crit_edge, %if.then144.cleanup_crit_edge, %for.body88.cleanup_crit_edge
  %cmp85.not = icmp eq ptr %.pn193227, %links
  br i1 %cmp85.not, label %cleanup.for.end153_crit_edge, label %cleanup.for.body88_crit_edge

cleanup.for.body88_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body88

cleanup.for.end153_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end153

for.end153:                                       ; preds = %cleanup.for.end153_crit_edge, %if.end71.for.end153_crit_edge
  %status155 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 3
  %67 = ptrtoint ptr %status155 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 2, ptr %status155, align 8
  call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  call fastcc void @device_links_flush_sync_list(ptr noundef nonnull %sync_list, ptr noundef %dev)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sync_list) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_remove_file(ptr noundef %dev, ptr noundef %attr) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_file_ns(ptr noundef nonnull %dev, ptr noundef %attr, ptr noundef null) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @driver_deferred_probe_add(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_links_no_driver(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %0 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn27 = load ptr, ptr %consumers, align 4
  %cmp.not28 = icmp eq ptr %.pn27, %consumers
  br i1 %cmp.not28, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn29 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn27, %entry.for.body_crit_edge ]
  %flags = getelementptr i8, ptr %.pn29, i32 952
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags, align 4
  %and = and i32 %2, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end:                                           ; preds = %for.body
  %status = getelementptr i8, ptr %.pn29, i32 948
  %3 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %status, align 8
  %5 = and i32 %4, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %switch = icmp eq i32 %5, 2
  br i1 %switch, label %do.body8, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

do.body8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %6 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 0, ptr %status, align 8
  br label %for.inc

for.inc:                                          ; preds = %do.body8, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %7 = ptrtoint ptr %.pn29 to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn = load ptr, ptr %.pn29, align 4
  %cmp.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  tail call fastcc void @__device_links_no_driver(ptr noundef %dev)
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__device_links_no_driver(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %links = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11
  %prev = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 0, i32 1
  %0 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev, align 4
  %cmp.not96 = icmp eq ptr %1, %links
  br i1 %cmp.not96, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn9197 = phi ptr [ %.pn99, %for.inc.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %link.098 = getelementptr i8, ptr %.pn9197, i32 -16
  %.pn99.in = getelementptr inbounds %struct.list_head, ptr %.pn9197, i32 0, i32 1
  %2 = ptrtoint ptr %.pn99.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn99 = load ptr, ptr %.pn99.in, align 4
  %flags = getelementptr i8, ptr %.pn9197, i32 940
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %and = and i32 %4, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end:                                           ; preds = %for.body
  %and9 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  br i1 %tobool10.not, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 4
  %and.i = and i32 %6, -65
  store i32 %and.i, ptr %flags, align 4
  %status.i = getelementptr i8, ptr %.pn9197, i32 936
  %7 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 -1, ptr %status.i, align 8
  %kref.i = getelementptr i8, ptr %.pn9197, i32 948
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %kref.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !531
  tail call void @llvm.prefetch.p0(ptr %kref.i, i32 1, i32 3, i32 1) #22
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %kref.i, ptr %kref.i, i32 1, ptr elementtype(i32) %kref.i) #22, !srcloc !532
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.for.inc_crit_edge, label %if.then10.i.i.i.i.i, !prof !523

if.end5.i.i.i.i.i.for.inc_crit_edge:              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %kref.i, i32 noundef 3) #22
  br label %for.inc

if.then.i.i:                                      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !533
  tail call fastcc void @__device_link_del(ptr noundef %kref.i) #22
  br label %for.inc

if.end12:                                         ; preds = %if.end
  %status = getelementptr i8, ptr %.pn9197, i32 936
  %9 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %status, align 8
  %11 = and i32 %10, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %switch = icmp eq i32 %11, 2
  br i1 %switch, label %if.end17, label %if.end12.for.inc_crit_edge

if.end12.for.inc_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end17:                                         ; preds = %if.end12
  %12 = ptrtoint ptr %link.098 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %link.098, align 8
  %status19 = getelementptr inbounds %struct.device, ptr %13, i32 0, i32 11, i32 3
  %14 = ptrtoint ptr %status19 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %status19, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %15)
  %cmp20 = icmp eq i32 %15, 2
  br i1 %cmp20, label %do.body23, label %if.else

do.body23:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  %16 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile i32 1, ptr %status, align 8
  br label %for.inc

if.else:                                          ; preds = %if.end17
  %and30 = and i32 %4, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %do.end45, label %if.else.if.end51_crit_edge, !prof !529

if.else.if.end51_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end51

do.end45:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1347, i32 noundef 9, ptr noundef null) #22
  br label %if.end51

if.end51:                                         ; preds = %do.end45, %if.else.if.end51_crit_edge
  %17 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 0, ptr %status, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end51, %do.body23, %if.end12.for.inc_crit_edge, %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %.pn99, %links
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %status76 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 3
  %18 = ptrtoint ptr %status76 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %status76, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_links_driver_cleanup(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %0 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %consumers, align 8
  %cmp.not105 = icmp eq ptr %1, %consumers
  br i1 %cmp.not105, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in106 = phi ptr [ %.pn107, %for.inc.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %2 = ptrtoint ptr %.pn.in106 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn107 = load ptr, ptr %.pn.in106, align 4
  %flags = getelementptr i8, ptr %.pn.in106, i32 952
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %and = and i32 %4, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end:                                           ; preds = %for.body
  %and9 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  br i1 %tobool10.not, label %if.end.if.end26_crit_edge, label %do.end, !prof !523

if.end.if.end26_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end26

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1412, i32 noundef 9, ptr noundef null) #22
  br label %if.end26

if.end26:                                         ; preds = %do.end, %if.end.if.end26_crit_edge
  %status = getelementptr i8, ptr %.pn.in106, i32 948
  %5 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %6)
  %cmp35.not = icmp eq i32 %6, 4
  br i1 %cmp35.not, label %if.end26.land.lhs.true_crit_edge, label %if.end57, !prof !523

if.end26.land.lhs.true_crit_edge:                 ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.lhs.true

if.end57:                                         ; preds = %if.end26
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1413, i32 noundef 9, ptr noundef null) #22
  %7 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pr = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %.pr)
  %cmp66 = icmp eq i32 %.pr, 4
  br i1 %cmp66, label %if.end57.land.lhs.true_crit_edge, label %if.end57.do.body76_crit_edge

if.end57.do.body76_crit_edge:                     ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body76

if.end57.land.lhs.true_crit_edge:                 ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end57.land.lhs.true_crit_edge, %if.end26.land.lhs.true_crit_edge
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %and68 = and i32 %9, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and68)
  %tobool69.not = icmp eq i32 %and68, 0
  br i1 %tobool69.not, label %land.lhs.true.do.body76_crit_edge, label %if.then70

land.lhs.true.do.body76_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body76

if.then70:                                        ; preds = %land.lhs.true
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 4
  %and.i = and i32 %11, -65
  store i32 %and.i, ptr %flags, align 4
  %12 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 -1, ptr %status, align 8
  %kref.i = getelementptr i8, ptr %.pn.in106, i32 960
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %kref.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !531
  tail call void @llvm.prefetch.p0(ptr %kref.i, i32 1, i32 3, i32 1) #22
  %13 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %kref.i, ptr %kref.i, i32 1, ptr elementtype(i32) %kref.i) #22, !srcloc !532
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %13, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then70
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.do.body76_crit_edge, label %if.then10.i.i.i.i.i, !prof !523

if.end5.i.i.i.i.i.do.body76_crit_edge:            ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body76

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %kref.i, i32 noundef 3) #22
  br label %do.body76

if.then.i.i:                                      ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !533
  tail call fastcc void @__device_link_del(ptr noundef %kref.i) #22
  br label %do.body76

do.body76:                                        ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.do.body76_crit_edge, %land.lhs.true.do.body76_crit_edge, %if.end57.do.body76_crit_edge
  %14 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile i32 0, ptr %status, align 8
  br label %for.inc

for.inc:                                          ; preds = %do.body76, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %.pn107, %consumers
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %defer_sync = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 2
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %defer_sync) #22
  br i1 %call.i.i, label %if.end.i.i, label %for.end.list_del_init.exit_crit_edge

for.end.list_del_init.exit_crit_edge:             ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 2, i32 1
  %15 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i, align 4
  %17 = ptrtoint ptr %defer_sync to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %defer_sync, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %for.end.list_del_init.exit_crit_edge
  %21 = ptrtoint ptr %defer_sync to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %defer_sync, ptr %defer_sync, align 4
  %prev.i3.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 2, i32 1
  %22 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %defer_sync, ptr %prev.i3.i, align 4
  tail call fastcc void @__device_links_no_driver(ptr noundef %dev)
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @device_links_busy(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %0 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn30 = load ptr, ptr %consumers, align 4
  %cmp.not31 = icmp eq ptr %.pn30, %consumers
  br i1 %cmp.not31, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn32 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn30, %entry.for.body_crit_edge ]
  %flags = getelementptr i8, ptr %.pn32, i32 952
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags, align 4
  %and = and i32 %2, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end:                                           ; preds = %for.body
  %status = getelementptr i8, ptr %.pn32, i32 948
  %3 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %status, align 8
  %5 = and i32 %4, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %switch = icmp eq i32 %5, 2
  br i1 %switch, label %if.end.for.end_crit_edge, label %do.body9

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

do.body9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %6 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 4, ptr %status, align 8
  br label %for.inc

for.inc:                                          ; preds = %do.body9, %for.body.for.inc_crit_edge
  %7 = ptrtoint ptr %.pn32 to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn = load ptr, ptr %.pn32, align 4
  %cmp.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  %cmp.not.lcssa = phi i1 [ false, %entry.for.end_crit_edge ], [ true, %if.end.for.end_crit_edge ], [ false, %for.inc.for.end_crit_edge ]
  %status21 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 3
  %8 = ptrtoint ptr %status21 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 3, ptr %status21, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  ret i1 %cmp.not.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_links_unbind_consumers(ptr noundef readonly %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %0 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn4346 = load ptr, ptr %consumers, align 4
  %cmp.not4447 = icmp eq ptr %.pn4346, %consumers
  br i1 %cmp.not4447, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.body.backedge, %entry.for.body_crit_edge
  %.pn45 = phi ptr [ %.pn45.be, %for.body.backedge ], [ %.pn4346, %entry.for.body_crit_edge ]
  %flags = getelementptr i8, ptr %.pn45, i32 952
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags, align 4
  %3 = and i32 %2, 192
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %3)
  %4 = icmp eq i32 %3, 64
  br i1 %4, label %if.end, label %for.body.for.cond.backedge_crit_edge

for.body.for.cond.backedge_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.backedge

if.end:                                           ; preds = %for.body
  %status6 = getelementptr i8, ptr %.pn45, i32 948
  %5 = ptrtoint ptr %status6 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %status6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %cmp7 = icmp eq i32 %6, 2
  br i1 %cmp7, label %if.then8, label %do.body11

if.then8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  tail call void @wait_for_device_probe() #22
  br label %start.backedge

do.body11:                                        ; preds = %if.end
  %7 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 4, ptr %status6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %6)
  %cmp17 = icmp eq i32 %6, 3
  br i1 %cmp17, label %if.then18, label %do.body11.for.cond.backedge_crit_edge

do.body11.for.cond.backedge_crit_edge:            ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %do.body11.for.cond.backedge_crit_edge, %for.body.for.cond.backedge_crit_edge
  %8 = ptrtoint ptr %.pn45 to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn = load ptr, ptr %.pn45, align 4
  %cmp.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp.not, label %for.cond.backedge.for.end_crit_edge, label %for.cond.backedge.for.body.backedge_crit_edge

for.cond.backedge.for.body.backedge_crit_edge:    ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.backedge

for.cond.backedge.for.end_crit_edge:              ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body.backedge:                                ; preds = %start.backedge.for.body.backedge_crit_edge, %for.cond.backedge.for.body.backedge_crit_edge
  %.pn45.be = phi ptr [ %.pn, %for.cond.backedge.for.body.backedge_crit_edge ], [ %.pn43, %start.backedge.for.body.backedge_crit_edge ]
  br label %for.body

if.then18:                                        ; preds = %do.body11
  %consumer19 = getelementptr i8, ptr %.pn45, i32 8
  %9 = ptrtoint ptr %consumer19 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %consumer19, align 4
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %cleanup.critedge, label %cond.true.i

cond.true.i:                                      ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #24
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %10) #22
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  %parent.c38 = getelementptr inbounds %struct.device, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %parent.c38 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %parent.c38, align 8
  tail call void @device_release_driver_internal(ptr noundef nonnull %10, ptr noundef null, ptr noundef %12) #22
  tail call void @kobject_put(ptr noundef nonnull %10) #22
  br label %start.backedge

cleanup.critedge:                                 ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  call void @__asan_load4_noabort(i32 136)
  %13 = load ptr, ptr inttoptr (i32 136 to ptr), align 8
  tail call void @device_release_driver_internal(ptr noundef null, ptr noundef null, ptr noundef %13) #22
  br label %start.backedge

start.backedge:                                   ; preds = %cleanup.critedge, %cond.true.i, %if.then8
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %14 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn43 = load ptr, ptr %consumers, align 4
  %cmp.not44 = icmp eq ptr %.pn43, %consumers
  br i1 %cmp.not44, label %start.backedge.for.end_crit_edge, label %start.backedge.for.body.backedge_crit_edge

start.backedge.for.body.backedge_crit_edge:       ; preds = %start.backedge
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.backedge

start.backedge.for.end_crit_edge:                 ; preds = %start.backedge
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %start.backedge.for.end_crit_edge, %for.cond.backedge.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_device_probe() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_release_driver_internal(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: cold mustprogress nofree nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @fw_devlink_setup(ptr noundef readonly %arg) #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %arg, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %entry
  %call = tail call i32 @strcmp(ptr noundef nonnull %arg, ptr noundef nonnull dereferenceable(4) @.str.96) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.end.return.sink.split_crit_edge, label %if.else

if.end.return.sink.split_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %return.sink.split

if.else:                                          ; preds = %if.end
  %call2 = tail call i32 @strcmp(ptr noundef nonnull %arg, ptr noundef nonnull dereferenceable(11) @.str.97) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %if.else.return.sink.split_crit_edge, label %if.else5

if.else.return.sink.split_crit_edge:              ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %return.sink.split

if.else5:                                         ; preds = %if.else
  %call6 = tail call i32 @strcmp(ptr noundef nonnull %arg, ptr noundef nonnull dereferenceable(3) @.str.98) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.else5.return.sink.split_crit_edge, label %if.else9

if.else5.return.sink.split_crit_edge:             ; preds = %if.else5
  call void @__sanitizer_cov_trace_pc() #24
  br label %return.sink.split

if.else9:                                         ; preds = %if.else5
  %call10 = tail call i32 @strcmp(ptr noundef nonnull %arg, ptr noundef nonnull dereferenceable(4) @.str.99) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %cmp11 = icmp eq i32 %call10, 0
  br i1 %cmp11, label %if.else9.return.sink.split_crit_edge, label %if.else9.return_crit_edge

if.else9.return_crit_edge:                        ; preds = %if.else9
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.else9.return.sink.split_crit_edge:             ; preds = %if.else9
  call void @__sanitizer_cov_trace_pc() #24
  br label %return.sink.split

return.sink.split:                                ; preds = %if.else9.return.sink.split_crit_edge, %if.else5.return.sink.split_crit_edge, %if.else.return.sink.split_crit_edge, %if.end.return.sink.split_crit_edge
  %.sink = phi i32 [ 0, %if.end.return.sink.split_crit_edge ], [ 384, %if.else.return.sink.split_crit_edge ], [ 288, %if.else5.return.sink.split_crit_edge ], [ 292, %if.else9.return.sink.split_crit_edge ]
  store i32 %.sink, ptr @fw_devlink_flags, align 4
  br label %return

return:                                           ; preds = %return.sink.split, %if.else9.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -22, %entry.return_crit_edge ], [ 0, %if.else9.return_crit_edge ], [ 0, %return.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @fw_devlink_strict_setup(ptr noundef %arg) #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @kstrtobool(ptr noundef %arg, ptr noundef nonnull @fw_devlink_strict) #22
  ret i32 %call.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @fw_devlink_get_flags() local_unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fw_devlink_flags, align 4
  ret i32 %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @fw_devlink_is_strict() local_unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i8, ptr @fw_devlink_strict, align 1, !range !535
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %0)
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %entry.land.end_crit_edge, label %land.rhs

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.end

land.rhs:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %1 = load i32, ptr @fw_devlink_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 384, i32 %1)
  %cmp.i = icmp ne i32 %1, 384
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry.land.end_crit_edge
  %2 = phi i1 [ false, %entry.land.end_crit_edge ], [ %cmp.i, %land.rhs ]
  ret i1 %2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @fw_devlink_drivers_done() local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  store i1 true, ptr @fw_devlink_drv_reg_done, align 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %call = tail call i32 @class_for_each_device(ptr noundef nonnull @devlink_class, ptr noundef null, ptr noundef null, ptr noundef nonnull @fw_devlink_no_driver) #22
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @class_for_each_device(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @fw_devlink_no_driver(ptr noundef %dev, ptr nocapture noundef readnone %data) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -24
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  %can_match = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 39
  %2 = ptrtoint ptr %can_match to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %can_match, align 4
  %3 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %bf.cast.not = icmp eq i8 %3, 0
  br i1 %bf.cast.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  %flags.i = getelementptr i8, ptr %dev, i32 932
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %5, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 448, i32 %5)
  %cmp.i = icmp eq i32 %5, 448
  %or.cond.i = or i1 %cmp.i, %tobool.not.i
  br i1 %or.cond.i, label %if.then.if.end_crit_edge, label %if.end3.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end3.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @pm_runtime_drop_link(ptr noundef %add.ptr) #22
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 448, ptr %flags.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @fw_devlink_relax_link.__UNIQUE_ID_ddebug382, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@fw_devlink_no_driver, %if.end)) #22
          to label %if.then9.i [label %if.end], !srcloc !522

if.then9.i:                                       ; preds = %if.end3.i
  %consumer.i = getelementptr i8, ptr %dev, i32 -12
  %7 = ptrtoint ptr %consumer.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %consumer.i, align 4
  %9 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %add.ptr, align 8
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then9.i.dev_name.exit.i_crit_edge

if.then9.i.dev_name.exit.i_crit_edge:             ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #24
  %13 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %10, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then9.i.dev_name.exit.i_crit_edge
  %retval.0.i17.i = phi ptr [ %14, %if.end.i.i ], [ %12, %if.then9.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @fw_devlink_relax_link.__UNIQUE_ID_ddebug382, ptr noundef %8, ptr noundef nonnull @.str.101, ptr noundef %retval.0.i17.i) #22
  br label %if.end

if.end:                                           ; preds = %dev_name.exit.i, %if.end3.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_device_hotplug() local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_hotplug_lock, i32 noundef 0) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unlock_device_hotplug() local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_unlock(ptr noundef nonnull @device_hotplug_lock) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lock_device_hotplug_sysfs() local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @mutex_trylock(ptr noundef nonnull @device_hotplug_lock) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @msleep(i32 noundef 5) #22
  %0 = tail call i32 @llvm.read_register.i32(metadata !512) #22
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %5) #22
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ -513, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @dev_driver_string(ptr noundef %dev) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %driver = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %driver, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %cond.false, label %entry.cond.end.sink.split_crit_edge

entry.cond.end.sink.split_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end.sink.split

cond.false:                                       ; preds = %entry
  %bus.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %2 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %cond.false.i, label %cond.false.cond.end.sink.split_crit_edge

cond.false.cond.end.sink.split_crit_edge:         ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end.sink.split

cond.false.i:                                     ; preds = %cond.false
  %class.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %4 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %class.i, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %cond.false.i.cond.end_crit_edge, label %cond.false.i.cond.end.sink.split_crit_edge

cond.false.i.cond.end.sink.split_crit_edge:       ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end.sink.split

cond.false.i.cond.end_crit_edge:                  ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

cond.end.sink.split:                              ; preds = %cond.false.i.cond.end.sink.split_crit_edge, %cond.false.cond.end.sink.split_crit_edge, %entry.cond.end.sink.split_crit_edge
  %.sink.i.sink = phi ptr [ %1, %entry.cond.end.sink.split_crit_edge ], [ %3, %cond.false.cond.end.sink.split_crit_edge ], [ %5, %cond.false.i.cond.end.sink.split_crit_edge ]
  %6 = ptrtoint ptr %.sink.i.sink to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %.sink.i.sink, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.end.sink.split, %cond.false.i.cond.end_crit_edge
  %cond = phi ptr [ @.str.90, %cond.false.i.cond.end_crit_edge ], [ %7, %cond.end.sink.split ]
  ret ptr %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_store_ulong(ptr nocapture readnone %dev, ptr nocapture noundef readonly %attr, ptr noundef %buf, i32 noundef %size) #1 align 64 {
entry:
  %new = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new) #22
  %0 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %new, align 4, !annotation !524
  %call.i = call i32 @_kstrtoul(ptr noundef %buf, i32 noundef 0, ptr noundef nonnull %new) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %1 = ptrtoint ptr %new to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %new, align 4
  %var = getelementptr inbounds %struct.dev_ext_attribute, ptr %attr, i32 0, i32 1
  %3 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %var, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %2, ptr %4, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %size, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_show_ulong(ptr nocapture readnone %dev, ptr nocapture noundef readonly %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %var = getelementptr inbounds %struct.dev_ext_attribute, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %var, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.11, i32 noundef %3) #22
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_emit(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_store_int(ptr nocapture readnone %dev, ptr nocapture noundef readonly %attr, ptr noundef %buf, i32 noundef %size) #1 align 64 {
entry:
  %new = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new) #22
  %0 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %new, align 4, !annotation !524
  %call.i = call i32 @_kstrtol(ptr noundef %buf, i32 noundef 0, ptr noundef nonnull %new) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %1 = ptrtoint ptr %new to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %new, align 4
  %var = getelementptr inbounds %struct.dev_ext_attribute, ptr %attr, i32 0, i32 1
  %3 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %var, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %2, ptr %4, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %size, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_show_int(ptr nocapture readnone %dev, ptr nocapture noundef readonly %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %var = getelementptr inbounds %struct.dev_ext_attribute, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %var, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.12, i32 noundef %3) #22
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_store_bool(ptr nocapture readnone %dev, ptr nocapture noundef readonly %attr, ptr noundef %buf, i32 noundef %size) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %var = getelementptr inbounds %struct.dev_ext_attribute, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %var, align 4
  %call.i = tail call i32 @kstrtobool(ptr noundef %buf, ptr noundef %1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  %.size = select i1 %cmp, i32 -22, i32 %size
  ret i32 %.size
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_show_bool(ptr nocapture readnone %dev, ptr nocapture noundef readonly %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %var = getelementptr inbounds %struct.dev_ext_attribute, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %var, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %1, align 1, !range !535
  %4 = zext i8 %3 to i32
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.12, i32 noundef %4) #22
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_add_groups(ptr noundef %dev, ptr noundef %groups) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @sysfs_create_groups(ptr noundef %dev, ptr noundef %groups) #22
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_groups(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_remove_groups(ptr noundef %dev, ptr noundef %groups) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @sysfs_remove_groups(ptr noundef %dev, ptr noundef %groups) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_groups(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @devm_device_add_group(ptr noundef %dev, ptr noundef %grp) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_attr_group_remove, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.13) #22
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @sysfs_create_group(ptr noundef %dev, ptr noundef %grp) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @devres_free(ptr noundef nonnull %call) #22
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %0 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %grp, ptr %call, align 4
  tail call void @devres_add(ptr noundef %dev, ptr noundef nonnull %call) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.then3 ], [ 0, %if.end4 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @__devres_alloc_node(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_attr_group_remove(ptr noundef %dev, ptr nocapture noundef readonly %res) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @devm_attr_group_remove.__UNIQUE_ID_ddebug387, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@devm_attr_group_remove, %do.end)) #22
          to label %if.then [label %do.end], !srcloc !522

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @devm_attr_group_remove.__UNIQUE_ID_ddebug387, ptr noundef %dev, ptr noundef nonnull @.str.104, ptr noundef nonnull @.str.13, ptr noundef %1) #22
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  tail call void @sysfs_remove_group(ptr noundef %dev, ptr noundef %1) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_group(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @devres_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @devres_add(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @devm_device_remove_group(ptr noundef %dev, ptr noundef %grp) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @devres_release(ptr noundef %dev, ptr noundef nonnull @devm_attr_group_remove, ptr noundef nonnull @devm_attr_group_match, ptr noundef %grp) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !523

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2555, i32 noundef 9, ptr noundef null) #22
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devres_release(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @devm_attr_group_match(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %res, ptr noundef readnone %data) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  %cmp = icmp eq ptr %1, %data
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @devm_device_add_groups(ptr noundef %dev, ptr noundef %groups) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_attr_groups_remove, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.14) #22
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @sysfs_create_groups(ptr noundef %dev, ptr noundef %groups) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @devres_free(ptr noundef nonnull %call) #22
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %0 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %groups, ptr %call, align 4
  tail call void @devres_add(ptr noundef %dev, ptr noundef nonnull %call) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.then3 ], [ 0, %if.end4 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_attr_groups_remove(ptr noundef %dev, ptr nocapture noundef readonly %res) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @devm_attr_groups_remove.__UNIQUE_ID_ddebug388, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@devm_attr_groups_remove, %do.end)) #22
          to label %if.then [label %do.end], !srcloc !522

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @devm_attr_groups_remove.__UNIQUE_ID_ddebug388, ptr noundef %dev, ptr noundef nonnull @.str.105, ptr noundef nonnull @.str.14, ptr noundef %1) #22
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  tail call void @sysfs_remove_groups(ptr noundef %dev, ptr noundef %1) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @devm_device_remove_groups(ptr noundef %dev, ptr noundef %groups) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @devres_release(ptr noundef %dev, ptr noundef nonnull @devm_attr_groups_remove, ptr noundef nonnull @devm_attr_group_match, ptr noundef %groups) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !523

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2608, i32 noundef 9, ptr noundef null) #22
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @devices_kset_move_last(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @devices_kset, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %do.body

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @devices_kset_move_last.__UNIQUE_ID_ddebug391, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@devices_kset_move_last, %do.end)) #22
          to label %if.then5 [label %do.end], !srcloc !522

if.then5:                                         ; preds = %do.body
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %1 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then5.dev_name.exit_crit_edge

if.then5.dev_name.exit_crit_edge:                 ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  %3 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then5.dev_name.exit_crit_edge
  %retval.0.i11 = phi ptr [ %4, %if.end.i ], [ %2, %if.then5.dev_name.exit_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @devices_kset_move_last.__UNIQUE_ID_ddebug391, ptr noundef nonnull @.str.16, ptr noundef %retval.0.i11) #22
  br label %do.end

do.end:                                           ; preds = %dev_name.exit, %do.body
  %5 = load ptr, ptr @devices_kset, align 4
  %list_lock = getelementptr inbounds %struct.kset, ptr %5, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %list_lock) #22
  %entry8 = getelementptr inbounds %struct.kobject, ptr %dev, i32 0, i32 1
  %6 = load ptr, ptr @devices_kset, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry8) #22
  br i1 %call.i.i, label %if.end.i.i, label %do.end.__list_del_entry.exit.i_crit_edge

do.end.__list_del_entry.exit.i_crit_edge:         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.kobject, ptr %dev, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %entry8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %entry8, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %do.end.__list_del_entry.exit.i_crit_edge
  %prev.i2.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %entry8, ptr noundef %14, ptr noundef %6) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move_tail.exit_crit_edge

__list_del_entry.exit.i.list_move_tail.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_move_tail.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %15 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %entry8, ptr %prev.i2.i, align 4
  %16 = ptrtoint ptr %entry8 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %6, ptr %entry8, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.kobject, ptr %dev, i32 0, i32 1, i32 1
  %17 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev3.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %entry8, ptr %14, align 4
  br label %list_move_tail.exit

list_move_tail.exit:                              ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move_tail.exit_crit_edge
  %19 = load ptr, ptr @devices_kset, align 4
  %list_lock9 = getelementptr inbounds %struct.kset, ptr %19, i32 0, i32 1
  tail call void @_raw_spin_unlock(ptr noundef %list_lock9) #22
  br label %return

return:                                           ; preds = %list_move_tail.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_create_file(ptr noundef %dev, ptr noundef %attr) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %entry.if.end69_crit_edge, label %if.then

entry.if.end69_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end69

if.then:                                          ; preds = %entry
  %mode = getelementptr inbounds %struct.attribute, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %mode to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %mode, align 4
  %2 = and i16 %1, 146
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %tobool2.not = icmp eq i16 %2, 0
  br i1 %tobool2.not, label %if.then.if.end_crit_edge, label %land.rhs

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.rhs:                                         ; preds = %if.then
  %store = getelementptr inbounds %struct.device_attribute, ptr %attr, i32 0, i32 2
  %3 = ptrtoint ptr %store to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %store, align 4
  %tobool3.not = icmp eq ptr %4, null
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !529

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  %5 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %attr, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2756, i32 noundef 9, ptr noundef nonnull @.str.17, ptr noundef %6) #22
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %if.then.if.end_crit_edge
  %7 = ptrtoint ptr %mode to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %mode, align 4
  %9 = and i16 %8, 292
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool31.not = icmp eq i16 %9, 0
  br i1 %tobool31.not, label %if.end.if.end60_crit_edge, label %land.rhs32

if.end.if.end60_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end60

land.rhs32:                                       ; preds = %if.end
  %show = getelementptr inbounds %struct.device_attribute, ptr %attr, i32 0, i32 1
  %10 = ptrtoint ptr %show to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %show, align 4
  %tobool33.not = icmp eq ptr %11, null
  br i1 %tobool33.not, label %do.end52, label %land.rhs32.if.end60_crit_edge, !prof !529

land.rhs32.if.end60_crit_edge:                    ; preds = %land.rhs32
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end60

do.end52:                                         ; preds = %land.rhs32
  call void @__sanitizer_cov_trace_pc() #24
  %12 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %attr, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2759, i32 noundef 9, ptr noundef nonnull @.str.18, ptr noundef %13) #22
  br label %if.end60

if.end60:                                         ; preds = %do.end52, %land.rhs32.if.end60_crit_edge, %if.end.if.end60_crit_edge
  %call.i = tail call i32 @sysfs_create_file_ns(ptr noundef nonnull %dev, ptr noundef %attr, ptr noundef null) #22
  br label %if.end69

if.end69:                                         ; preds = %if.end60, %entry.if.end69_crit_edge
  %error.0 = phi i32 [ %call.i, %if.end60 ], [ 0, %entry.if.end69_crit_edge ]
  ret i32 %error.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @device_remove_file_self(ptr noundef %dev, ptr noundef %attr) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.then

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call = tail call zeroext i1 @sysfs_remove_file_self(ptr noundef nonnull %dev, ptr noundef %attr) #22
  br label %return

return:                                           ; preds = %if.then, %entry.return_crit_edge
  %retval.0 = phi i1 [ %call, %if.then ], [ false, %entry.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @sysfs_remove_file_self(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_create_bin_file(ptr noundef %dev, ptr noundef %attr) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call = tail call i32 @sysfs_create_bin_file(ptr noundef nonnull %dev, ptr noundef %attr) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %error.0 = phi i32 [ %call, %if.then ], [ -22, %entry.if.end_crit_edge ]
  ret i32 %error.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_bin_file(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_remove_bin_file(ptr noundef %dev, ptr noundef %attr) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_bin_file(ptr noundef nonnull %dev, ptr noundef %attr) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_bin_file(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_initialize(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @devices_kset, align 4
  %kset = getelementptr inbounds %struct.kobject, ptr %dev, i32 0, i32 3
  %1 = ptrtoint ptr %kset to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %0, ptr %kset, align 8
  tail call void @kobject_init(ptr noundef %dev, ptr noundef nonnull @device_ktype) #22
  %dma_pools = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 23
  %2 = ptrtoint ptr %dma_pools to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %dma_pools, ptr %dma_pools, align 4
  %prev.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 23, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %dma_pools, ptr %prev.i, align 4
  %mutex = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10
  tail call void @__mutex_init(ptr noundef %mutex, ptr noundef nonnull @.str.19, ptr noundef nonnull @device_initialize.__key) #22
  %lockdep_mutex = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 9
  tail call void @__mutex_init(ptr noundef %lockdep_mutex, ptr noundef nonnull @.str.21, ptr noundef nonnull @device_initialize.__key.20) #22
  %dep_map = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10, i32 5
  %wait_type_inner = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10, i32 5, i32 4
  %4 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %wait_type_inner, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map, ptr noundef nonnull @.str.19, ptr noundef nonnull @__lockdep_no_validate__, i32 noundef 0, i8 noundef zeroext %5, i8 noundef zeroext 0, i8 noundef zeroext 0) #22
  %devres_lock = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 31
  tail call void @__raw_spin_lock_init(ptr noundef %devres_lock, ptr noundef nonnull @.str.23, ptr noundef nonnull @device_initialize.__key.22, i16 noundef signext 3) #22
  %devres_head = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 32
  %6 = ptrtoint ptr %devres_head to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %devres_head, ptr %devres_head, align 4
  %prev.i29 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 32, i32 1
  %7 = ptrtoint ptr %prev.i29 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %devres_head, ptr %prev.i29, align 4
  %early_init.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 1
  %8 = ptrtoint ptr %early_init.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load.i.i = load i16, ptr %early_init.i.i, align 4
  %9 = and i16 %bf.load.i.i, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %bf.cast.not.i.i = icmp eq i16 %9, 0
  br i1 %bf.cast.not.i.i, label %do.body.i.i, label %entry.device_pm_init.exit_crit_edge

entry.device_pm_init.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_pm_init.exit

do.body.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %lock.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 3
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i.i, ptr noundef nonnull @.str.109, ptr noundef nonnull @device_pm_init_common.__key, i16 noundef signext 3) #22
  %qos.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 28
  %10 = ptrtoint ptr %qos.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %qos.i.i, align 8
  %11 = ptrtoint ptr %early_init.i.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %bf.load5.i.i = load i16, ptr %early_init.i.i, align 4
  %bf.set.i.i = or i16 %bf.load5.i.i, 128
  store i16 %bf.set.i.i, ptr %early_init.i.i, align 4
  br label %device_pm_init.exit

device_pm_init.exit:                              ; preds = %do.body.i.i, %entry.device_pm_init.exit_crit_edge
  tail call void @device_pm_sleep_init(ptr noundef %dev) #22
  tail call void @pm_runtime_init(ptr noundef %dev) #22
  %links = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %12 = ptrtoint ptr %consumers to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %consumers, ptr %consumers, align 4
  %prev.i30 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1, i32 1
  %13 = ptrtoint ptr %prev.i30 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %consumers, ptr %prev.i30, align 4
  %14 = ptrtoint ptr %links to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %links, ptr %links, align 4
  %prev.i31 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i31 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %links, ptr %prev.i31, align 4
  %defer_sync = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 2
  %16 = ptrtoint ptr %defer_sync to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %defer_sync, ptr %defer_sync, align 4
  %prev.i32 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 2, i32 1
  %17 = ptrtoint ptr %prev.i32 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %defer_sync, ptr %prev.i32, align 4
  %status = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 3
  %18 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %status, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_init(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @virtual_device_parent(ptr nocapture readnone %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @virtual_device_parent.virtual_dir, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %1 = load ptr, ptr @devices_kset, align 4
  %kobj = getelementptr inbounds %struct.kset, ptr %1, i32 0, i32 2
  %call = tail call ptr @kobject_create_and_add(ptr noundef nonnull @.str.24, ptr noundef %kobj) #22
  store ptr %call, ptr @virtual_device_parent.virtual_dir, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %2 = load ptr, ptr @virtual_device_parent.virtual_dir, align 4
  ret ptr %2
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kobject_create_and_add(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #10

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_set_name_vargs(ptr noundef, ptr noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_add(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.put_device.exit_crit_edge, label %get_device.exit

entry.put_device.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

get_device.exit:                                  ; preds = %entry
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %dev) #22
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %get_device.exit.put_device.exit_crit_edge, label %if.end

get_device.exit.put_device.exit_crit_edge:        ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.end:                                           ; preds = %get_device.exit
  %p = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 2
  %0 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %p, align 4
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %if.then2, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.then2:                                         ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 148) #25
  %3 = ptrtoint ptr %p to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call7.i.i.i, ptr %p, align 4
  %tobool.not.i266 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i266, label %if.then2.if.then.i302_crit_edge, label %device_private_init.exit.thread

if.then2.if.then.i302_crit_edge:                  ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i302

device_private_init.exit.thread:                  ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #24
  %device.i = getelementptr inbounds %struct.device_private, ptr %call7.i.i.i, i32 0, i32 8
  %4 = ptrtoint ptr %device.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call.i, ptr %device.i, align 4
  tail call void @klist_init(ptr noundef nonnull %call7.i.i.i, ptr noundef nonnull @klist_children_get, ptr noundef nonnull @klist_children_put) #22
  %5 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %p, align 4
  %deferred_probe.i = getelementptr inbounds %struct.device_private, ptr %6, i32 0, i32 5
  %7 = ptrtoint ptr %deferred_probe.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %deferred_probe.i, ptr %deferred_probe.i, align 4
  %prev.i.i = getelementptr inbounds %struct.device_private, ptr %6, i32 0, i32 5, i32 1
  %8 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %deferred_probe.i, ptr %prev.i.i, align 4
  br label %if.end7

if.end7:                                          ; preds = %device_private_init.exit.thread, %if.end.if.end7_crit_edge
  %init_name = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 3
  %9 = ptrtoint ptr %init_name to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %init_name, align 8
  %tobool8.not = icmp eq ptr %10, null
  br i1 %tobool8.not, label %if.end7.dev_name.exit_crit_edge, label %if.then9

if.end7.dev_name.exit_crit_edge:                  ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  %call11 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.25, ptr noundef nonnull %10)
  %11 = ptrtoint ptr %init_name to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %init_name, align 8
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.then9, %if.end7.dev_name.exit_crit_edge
  %12 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %call.i, align 4
  %tobool15.not = icmp eq ptr %13, null
  br i1 %tobool15.not, label %land.lhs.true, label %dev_name.exit.if.end24_crit_edge

dev_name.exit.if.end24_crit_edge:                 ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

land.lhs.true:                                    ; preds = %dev_name.exit
  %bus = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 5
  %14 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bus, align 8
  %tobool16.not = icmp eq ptr %15, null
  br i1 %tobool16.not, label %land.lhs.true.if.end24_crit_edge, label %land.lhs.true17

land.lhs.true.if.end24_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

land.lhs.true17:                                  ; preds = %land.lhs.true
  %dev_name = getelementptr inbounds %struct.bus_type, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %dev_name to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev_name, align 4
  %tobool19.not = icmp eq ptr %17, null
  br i1 %tobool19.not, label %land.lhs.true17.if.end24_crit_edge, label %if.then20

land.lhs.true17.if.end24_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

if.then20:                                        ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #24
  %id = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 30
  %18 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %id, align 4
  %call23 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.26, ptr noundef nonnull %17, i32 noundef %19)
  br label %if.end24

if.end24:                                         ; preds = %if.then20, %land.lhs.true17.if.end24_crit_edge, %land.lhs.true.if.end24_crit_edge, %dev_name.exit.if.end24_crit_edge
  %20 = ptrtoint ptr %init_name to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %init_name, align 8
  %tobool.not.i272 = icmp eq ptr %21, null
  br i1 %tobool.not.i272, label %dev_name.exit275, label %if.end24.do.body_crit_edge

if.end24.do.body_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body

dev_name.exit275:                                 ; preds = %if.end24
  %22 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %call.i, align 4
  %tobool26.not = icmp eq ptr %23, null
  br i1 %tobool26.not, label %dev_name.exit275.name_error_crit_edge, label %dev_name.exit275.do.body_crit_edge

dev_name.exit275.do.body_crit_edge:               ; preds = %dev_name.exit275
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body

dev_name.exit275.name_error_crit_edge:            ; preds = %dev_name.exit275
  call void @__sanitizer_cov_trace_pc() #24
  br label %name_error

do.body:                                          ; preds = %dev_name.exit275.do.body_crit_edge, %if.end24.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_add.__UNIQUE_ID_ddebug392, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@device_add, %do.end)) #22
          to label %if.then34 [label %do.end], !srcloc !522

if.then34:                                        ; preds = %do.body
  %24 = ptrtoint ptr %init_name to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %init_name, align 8
  %tobool.not.i277 = icmp eq ptr %25, null
  br i1 %tobool.not.i277, label %if.end.i278, label %if.then34.dev_name.exit280_crit_edge

if.then34.dev_name.exit280_crit_edge:             ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit280

if.end.i278:                                      ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #24
  %26 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %call.i, align 4
  br label %dev_name.exit280

dev_name.exit280:                                 ; preds = %if.end.i278, %if.then34.dev_name.exit280_crit_edge
  %retval.0.i279 = phi ptr [ %27, %if.end.i278 ], [ %25, %if.then34.dev_name.exit280_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @device_add.__UNIQUE_ID_ddebug392, ptr noundef nonnull @.str.28, ptr noundef %retval.0.i279, ptr noundef nonnull @.str.27) #22
  br label %do.end

do.end:                                           ; preds = %dev_name.exit280, %do.body
  %parent37 = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 1
  %28 = ptrtoint ptr %parent37 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %parent37, align 8
  %tobool.not.i281 = icmp eq ptr %29, null
  br i1 %tobool.not.i281, label %do.end.get_device.exit285_crit_edge, label %cond.true.i283

do.end.get_device.exit285_crit_edge:              ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_device.exit285

cond.true.i283:                                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %call.i282 = tail call ptr @kobject_get(ptr noundef nonnull %29) #22
  br label %get_device.exit285

get_device.exit285:                               ; preds = %cond.true.i283, %do.end.get_device.exit285_crit_edge
  %cond.i284 = phi ptr [ %call.i282, %cond.true.i283 ], [ null, %do.end.get_device.exit285_crit_edge ]
  %call39 = tail call fastcc ptr @get_device_parent(ptr noundef nonnull %call.i, ptr noundef %cond.i284)
  %cmp.i = icmp ugt ptr %call39, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then41, label %if.end43

if.then41:                                        ; preds = %get_device.exit285
  call void @__sanitizer_cov_trace_pc() #24
  %30 = ptrtoint ptr %call39 to i32
  br label %parent_error

if.end43:                                         ; preds = %get_device.exit285
  %tobool44.not = icmp eq ptr %call39, null
  br i1 %tobool44.not, label %if.end43.if.end48_crit_edge, label %if.then45

if.end43.if.end48_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end48

if.then45:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #24
  %parent47 = getelementptr inbounds %struct.kobject, ptr %call.i, i32 0, i32 2
  %31 = ptrtoint ptr %parent47 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call39, ptr %parent47, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.then45, %if.end43.if.end48_crit_edge
  %tobool49.not = icmp eq ptr %cond.i284, null
  %parent57 = getelementptr inbounds %struct.kobject, ptr %call.i, i32 0, i32 2
  %32 = ptrtoint ptr %parent57 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %parent57, align 4
  %call58 = tail call i32 (ptr, ptr, ptr, ...) @kobject_add(ptr noundef nonnull %call.i, ptr noundef %33, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %if.end62, label %if.then60

if.then60:                                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #24
  %34 = ptrtoint ptr %parent57 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %parent57, align 4
  br label %Error

if.end62:                                         ; preds = %if.end48
  tail call void @software_node_notify(ptr noundef nonnull %call.i) #22
  %36 = load ptr, ptr @platform_notify, align 4
  %tobool.not.i286 = icmp eq ptr %36, null
  br i1 %tobool.not.i286, label %if.end62.if.then.i290_crit_edge, label %if.then.i

if.end62.if.then.i290_crit_edge:                  ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i290

if.then.i:                                        ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #24
  %call.i287 = tail call i32 %36(ptr noundef nonnull %call.i) #22
  br label %if.then.i290

if.then.i290:                                     ; preds = %if.then.i, %if.end62.if.then.i290_crit_edge
  %37 = load i16, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_uevent, i32 0, i32 0, i32 1), align 4
  %38 = and i16 %37, 146
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %38)
  %tobool2.not.i = icmp eq i16 %38, 0
  br i1 %tobool2.not.i, label %if.then.i290.if.end.i291_crit_edge, label %land.rhs.i

if.then.i290.if.end.i291_crit_edge:               ; preds = %if.then.i290
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i291

land.rhs.i:                                       ; preds = %if.then.i290
  %39 = load ptr, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_uevent, i32 0, i32 2), align 4
  %tobool3.not.i = icmp eq ptr %39, null
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.if.end.i291_crit_edge, !prof !529

land.rhs.i.if.end.i291_crit_edge:                 ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i291

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  %40 = load ptr, ptr @dev_attr_uevent, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2756, i32 noundef 9, ptr noundef nonnull @.str.17, ptr noundef %40) #22
  br label %if.end.i291

if.end.i291:                                      ; preds = %do.end.i, %land.rhs.i.if.end.i291_crit_edge, %if.then.i290.if.end.i291_crit_edge
  %41 = load i16, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_uevent, i32 0, i32 0, i32 1), align 4
  %42 = and i16 %41, 292
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %42)
  %tobool31.not.i = icmp eq i16 %42, 0
  br i1 %tobool31.not.i, label %if.end.i291.device_create_file.exit_crit_edge, label %land.rhs32.i

if.end.i291.device_create_file.exit_crit_edge:    ; preds = %if.end.i291
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_file.exit

land.rhs32.i:                                     ; preds = %if.end.i291
  %43 = load ptr, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_uevent, i32 0, i32 1), align 4
  %tobool33.not.i = icmp eq ptr %43, null
  br i1 %tobool33.not.i, label %do.end52.i, label %land.rhs32.i.device_create_file.exit_crit_edge, !prof !529

land.rhs32.i.device_create_file.exit_crit_edge:   ; preds = %land.rhs32.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_file.exit

do.end52.i:                                       ; preds = %land.rhs32.i
  call void @__sanitizer_cov_trace_pc() #24
  %44 = load ptr, ptr @dev_attr_uevent, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2759, i32 noundef 9, ptr noundef nonnull @.str.18, ptr noundef %44) #22
  br label %device_create_file.exit

device_create_file.exit:                          ; preds = %do.end52.i, %land.rhs32.i.device_create_file.exit_crit_edge, %if.end.i291.device_create_file.exit_crit_edge
  %call.i.i = tail call i32 @sysfs_create_file_ns(ptr noundef nonnull %call.i, ptr noundef nonnull @dev_attr_uevent, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool64.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool64.not, label %dev_of_node.exit.i, label %device_create_file.exit.attrError_crit_edge

device_create_file.exit.attrError_crit_edge:      ; preds = %device_create_file.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %attrError

dev_of_node.exit.i:                               ; preds = %device_create_file.exit
  %of_node.i.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 27
  %45 = ptrtoint ptr %of_node.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %of_node.i.i, align 8
  %tobool.not.i292 = icmp eq ptr %46, null
  br i1 %tobool.not.i292, label %dev_of_node.exit.i.if.end5.i_crit_edge, label %if.then.i294

dev_of_node.exit.i.if.end5.i_crit_edge:           ; preds = %dev_of_node.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5.i

if.then.i294:                                     ; preds = %dev_of_node.exit.i
  %kobj1.i = getelementptr inbounds %struct.device_node, ptr %46, i32 0, i32 9
  %call2.i = tail call i32 @sysfs_create_link(ptr noundef nonnull %call.i, ptr noundef %kobj1.i, ptr noundef nonnull @.str.115) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i293 = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i293, label %if.then.i294.if.end5.i_crit_edge, label %do.end.i295

if.then.i294.if.end5.i_crit_edge:                 ; preds = %if.then.i294
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5.i

do.end.i295:                                      ; preds = %if.then.i294
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.116, i32 noundef %call2.i) #28
  br label %if.end5.i

if.end5.i:                                        ; preds = %do.end.i295, %if.then.i294.if.end5.i_crit_edge, %dev_of_node.exit.i.if.end5.i_crit_edge
  %class.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 33
  %47 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %class.i, align 4
  %tobool6.not.i = icmp eq ptr %48, null
  br i1 %tobool6.not.i, label %if.end5.i.if.end70_crit_edge, label %if.end8.i

if.end5.i.if.end70_crit_edge:                     ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end70

if.end8.i:                                        ; preds = %if.end5.i
  %p.i296 = getelementptr inbounds %struct.class, ptr %48, i32 0, i32 14
  %49 = ptrtoint ptr %p.i296 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %p.i296, align 4
  %kobj11.i = getelementptr inbounds %struct.kset, ptr %50, i32 0, i32 2
  %call12.i = tail call i32 @sysfs_create_link(ptr noundef nonnull %call.i, ptr noundef %kobj11.i, ptr noundef nonnull @.str.118) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %if.end15.i, label %if.end8.i.device_add_class_symlinks.exit_crit_edge

if.end8.i.device_add_class_symlinks.exit_crit_edge: ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_add_class_symlinks.exit

if.end15.i:                                       ; preds = %if.end8.i
  %51 = ptrtoint ptr %parent37 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %parent37, align 8
  %tobool16.not.i = icmp eq ptr %52, null
  br i1 %tobool16.not.i, label %if.end15.i.if.end27.i_crit_edge, label %land.lhs.true.i

if.end15.i.if.end27.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end27.i

land.lhs.true.i:                                  ; preds = %if.end15.i
  %type.i.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 4
  %53 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %type.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %54, @part_type
  br i1 %cmp.i.not.i, label %land.lhs.true.i.if.end27.i_crit_edge, label %if.then19.i

land.lhs.true.i.if.end27.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end27.i

if.then19.i:                                      ; preds = %land.lhs.true.i
  %call23.i = tail call i32 @sysfs_create_link(ptr noundef nonnull %call.i, ptr noundef nonnull %52, ptr noundef nonnull @.str.119) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i)
  %tobool24.not.i = icmp eq i32 %call23.i, 0
  br i1 %tobool24.not.i, label %if.then19.i.if.end27.i_crit_edge, label %if.then19.i.out_subsys.i_crit_edge

if.then19.i.out_subsys.i_crit_edge:               ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_subsys.i

if.then19.i.if.end27.i_crit_edge:                 ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then19.i.if.end27.i_crit_edge, %land.lhs.true.i.if.end27.i_crit_edge, %if.end15.i.if.end27.i_crit_edge
  %55 = load i32, ptr @sysfs_deprecated, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool28.not.i = icmp eq i32 %55, 0
  br i1 %tobool28.not.i, label %if.end27.i.if.end32.i_crit_edge, label %land.lhs.true29.i

if.end27.i.if.end32.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end32.i

land.lhs.true29.i:                                ; preds = %if.end27.i
  %56 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %class.i, align 4
  %cmp.i298 = icmp eq ptr %57, @block_class
  br i1 %cmp.i298, label %land.lhs.true29.i.if.end70_crit_edge, label %land.lhs.true29.i.if.end32.i_crit_edge

land.lhs.true29.i.if.end32.i_crit_edge:           ; preds = %land.lhs.true29.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end32.i

land.lhs.true29.i.if.end70_crit_edge:             ; preds = %land.lhs.true29.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end70

if.end32.i:                                       ; preds = %land.lhs.true29.i.if.end32.i_crit_edge, %if.end27.i.if.end32.i_crit_edge
  %58 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %class.i, align 4
  %p34.i = getelementptr inbounds %struct.class, ptr %59, i32 0, i32 14
  %60 = ptrtoint ptr %p34.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %p34.i, align 4
  %kobj36.i = getelementptr inbounds %struct.kset, ptr %61, i32 0, i32 2
  %62 = ptrtoint ptr %init_name to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %init_name, align 8
  %tobool.not.i69.i = icmp eq ptr %63, null
  br i1 %tobool.not.i69.i, label %if.end.i70.i, label %if.end32.i.dev_name.exit.i_crit_edge

if.end32.i.dev_name.exit.i_crit_edge:             ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit.i

if.end.i70.i:                                     ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #24
  %64 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %call.i, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i70.i, %if.end32.i.dev_name.exit.i_crit_edge
  %retval.0.i71.i = phi ptr [ %65, %if.end.i70.i ], [ %63, %if.end32.i.dev_name.exit.i_crit_edge ]
  %call39.i = tail call i32 @sysfs_create_link(ptr noundef %kobj36.i, ptr noundef nonnull %call.i, ptr noundef %retval.0.i71.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39.i)
  %tobool40.not.i = icmp eq i32 %call39.i, 0
  br i1 %tobool40.not.i, label %dev_name.exit.i.if.end70_crit_edge, label %out_device.i

dev_name.exit.i.if.end70_crit_edge:               ; preds = %dev_name.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end70

out_device.i:                                     ; preds = %dev_name.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_link(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.119) #22
  br label %out_subsys.i

out_subsys.i:                                     ; preds = %out_device.i, %if.then19.i.out_subsys.i_crit_edge
  %error.0.i299 = phi i32 [ %call23.i, %if.then19.i.out_subsys.i_crit_edge ], [ %call39.i, %out_device.i ]
  tail call void @sysfs_remove_link(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.118) #22
  br label %device_add_class_symlinks.exit

device_add_class_symlinks.exit:                   ; preds = %out_subsys.i, %if.end8.i.device_add_class_symlinks.exit_crit_edge
  %error.1.i = phi i32 [ %call12.i, %if.end8.i.device_add_class_symlinks.exit_crit_edge ], [ %error.0.i299, %out_subsys.i ]
  tail call void @sysfs_remove_link(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.115) #22
  br label %device_remove_file.exit310

if.end70:                                         ; preds = %dev_name.exit.i.if.end70_crit_edge, %land.lhs.true29.i.if.end70_crit_edge, %if.end5.i.if.end70_crit_edge
  %call71 = tail call fastcc i32 @device_add_attrs(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %if.end74, label %if.end70.AttrsError_crit_edge

if.end70.AttrsError_crit_edge:                    ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #24
  br label %AttrsError

if.end74:                                         ; preds = %if.end70
  %call75 = tail call i32 @bus_add_device(ptr noundef nonnull %call.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call75)
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %if.end78, label %if.end74.BusError_crit_edge

if.end74.BusError_crit_edge:                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #24
  br label %BusError

if.end78:                                         ; preds = %if.end74
  %call79 = tail call i32 @dpm_sysfs_add(ptr noundef nonnull %call.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %if.end82, label %if.end78.DPMError_crit_edge

if.end78.DPMError_crit_edge:                      ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #24
  br label %DPMError

if.end82:                                         ; preds = %if.end78
  tail call void @device_pm_add(ptr noundef nonnull %call.i) #22
  %devt = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 29
  %66 = ptrtoint ptr %devt to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %devt, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %67)
  %tobool83.not = icmp ult i32 %67, 1048576
  br i1 %tobool83.not, label %if.end82.if.end94_crit_edge, label %if.then84

if.end82.if.end94_crit_edge:                      ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end94

if.then84:                                        ; preds = %if.end82
  %call85 = tail call i32 @device_create_file(ptr noundef nonnull %call.i, ptr noundef nonnull @dev_attr_dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call85)
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %if.end88, label %if.then84.DevAttrError_crit_edge

if.then84.DevAttrError_crit_edge:                 ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #24
  br label %DevAttrError

if.end88:                                         ; preds = %if.then84
  %call89 = tail call fastcc i32 @device_create_sys_dev_entry(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89)
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %if.end92, label %SysEntryError

if.end92:                                         ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #24
  %call93 = tail call i32 @devtmpfs_create_node(ptr noundef nonnull %call.i) #22
  br label %if.end94

if.end94:                                         ; preds = %if.end92, %if.end82.if.end94_crit_edge
  %bus95 = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 5
  %68 = ptrtoint ptr %bus95 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %bus95, align 8
  %tobool96.not = icmp eq ptr %69, null
  br i1 %tobool96.not, label %if.end94.if.end101_crit_edge, label %if.then97

if.end94.if.end101_crit_edge:                     ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end101

if.then97:                                        ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #24
  %p99 = getelementptr inbounds %struct.bus_type, ptr %69, i32 0, i32 20
  %70 = ptrtoint ptr %p99 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %p99, align 4
  %bus_notifier = getelementptr inbounds %struct.subsys_private, ptr %71, i32 0, i32 7
  %call100 = tail call i32 @blocking_notifier_call_chain(ptr noundef %bus_notifier, i32 noundef 1, ptr noundef nonnull %call.i) #22
  br label %if.end101

if.end101:                                        ; preds = %if.then97, %if.end94.if.end101_crit_edge
  %call103 = tail call i32 @kobject_uevent(ptr noundef nonnull %call.i, i32 noundef 0) #22
  %fwnode = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 28
  %72 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %fwnode, align 4
  %tobool104.not = icmp eq ptr %73, null
  br i1 %tobool104.not, label %if.end101.if.end112_crit_edge, label %land.lhs.true105

if.end101.if.end112_crit_edge:                    ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end112

land.lhs.true105:                                 ; preds = %if.end101
  %dev107 = getelementptr inbounds %struct.fwnode_handle, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %dev107 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %dev107, align 4
  %tobool108.not = icmp eq ptr %75, null
  br i1 %tobool108.not, label %if.then109, label %land.lhs.true105.if.end112_crit_edge

land.lhs.true105.if.end112_crit_edge:             ; preds = %land.lhs.true105
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end112

if.then109:                                       ; preds = %land.lhs.true105
  call void @__sanitizer_cov_trace_pc() #24
  %76 = ptrtoint ptr %dev107 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %call.i, ptr %dev107, align 4
  tail call fastcc void @fw_devlink_link_device(ptr noundef nonnull %call.i)
  br label %if.end112

if.end112:                                        ; preds = %if.then109, %land.lhs.true105.if.end112_crit_edge, %if.end101.if.end112_crit_edge
  tail call void @bus_probe_device(ptr noundef nonnull %call.i) #22
  %77 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %fwnode, align 4
  %tobool114.not = icmp eq ptr %78, null
  br i1 %tobool114.not, label %if.end112.if.end119_crit_edge, label %land.lhs.true115

if.end112.if.end119_crit_edge:                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end119

land.lhs.true115:                                 ; preds = %if.end112
  %.b265 = load i1, ptr @fw_devlink_drv_reg_done, align 1
  br i1 %.b265, label %land.lhs.true117, label %land.lhs.true115.if.end119_crit_edge

land.lhs.true115.if.end119_crit_edge:             ; preds = %land.lhs.true115
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end119

land.lhs.true117:                                 ; preds = %land.lhs.true115
  %can_match = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 39
  %79 = ptrtoint ptr %can_match to i32
  call void @__asan_load1_noabort(i32 %79)
  %bf.load = load i8, ptr %can_match, align 4
  %80 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %80)
  %bf.cast.not = icmp eq i8 %80, 0
  br i1 %bf.cast.not, label %if.then118, label %land.lhs.true117.if.end119_crit_edge

land.lhs.true117.if.end119_crit_edge:             ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end119

if.then118:                                       ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @fw_devlink_unblock_consumers(ptr noundef nonnull %call.i)
  br label %if.end119

if.end119:                                        ; preds = %if.then118, %land.lhs.true117.if.end119_crit_edge, %land.lhs.true115.if.end119_crit_edge, %if.end112.if.end119_crit_edge
  br i1 %tobool49.not, label %if.end119.if.end124_crit_edge, label %if.then121

if.end119.if.end124_crit_edge:                    ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end124

if.then121:                                       ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #24
  %81 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %p, align 4
  %knode_parent = getelementptr inbounds %struct.device_private, ptr %82, i32 0, i32 1
  %p123 = getelementptr inbounds %struct.device, ptr %cond.i284, i32 0, i32 2
  %83 = ptrtoint ptr %p123 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %p123, align 4
  tail call void @klist_add_tail(ptr noundef %knode_parent, ptr noundef %84) #22
  br label %if.end124

if.end124:                                        ; preds = %if.then121, %if.end119.if.end124_crit_edge
  %85 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %class.i, align 4
  %tobool125.not = icmp eq ptr %86, null
  br i1 %tobool125.not, label %if.end124.if.then.i302_crit_edge, label %if.then126

if.end124.if.then.i302_crit_edge:                 ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i302

if.then126:                                       ; preds = %if.end124
  %p128 = getelementptr inbounds %struct.class, ptr %86, i32 0, i32 14
  %87 = ptrtoint ptr %p128 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %p128, align 4
  %mutex = getelementptr inbounds %struct.subsys_private, ptr %88, i32 0, i32 3
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #22
  %89 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %p, align 4
  %knode_class = getelementptr inbounds %struct.device_private, ptr %90, i32 0, i32 4
  %91 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %class.i, align 4
  %p131 = getelementptr inbounds %struct.class, ptr %92, i32 0, i32 14
  %93 = ptrtoint ptr %p131 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %p131, align 4
  %klist_devices = getelementptr inbounds %struct.subsys_private, ptr %94, i32 0, i32 5
  tail call void @klist_add_tail(ptr noundef %knode_class, ptr noundef %klist_devices) #22
  %95 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %class.i, align 4
  %p133 = getelementptr inbounds %struct.class, ptr %96, i32 0, i32 14
  %97 = ptrtoint ptr %p133 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %p133, align 4
  %interfaces = getelementptr inbounds %struct.subsys_private, ptr %98, i32 0, i32 2
  %99 = ptrtoint ptr %interfaces to i32
  call void @__asan_load4_noabort(i32 %99)
  %class_intf.0351 = load ptr, ptr %interfaces, align 4
  %cmp138.not354 = icmp eq ptr %class_intf.0351, %interfaces
  br i1 %cmp138.not354, label %if.then126.done_crit_edge, label %if.then126.for.body_crit_edge

if.then126.for.body_crit_edge:                    ; preds = %if.then126
  br label %for.body

if.then126.done_crit_edge:                        ; preds = %if.then126
  call void @__sanitizer_cov_trace_pc() #24
  br label %done

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.then126.for.body_crit_edge
  %class_intf.0355 = phi ptr [ %class_intf.0, %for.inc.for.body_crit_edge ], [ %class_intf.0351, %if.then126.for.body_crit_edge ]
  %add_dev = getelementptr inbounds %struct.class_interface, ptr %class_intf.0355, i32 0, i32 2
  %100 = ptrtoint ptr %add_dev to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %add_dev, align 4
  %tobool141.not = icmp eq ptr %101, null
  br i1 %tobool141.not, label %for.body.for.inc_crit_edge, label %if.then142

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then142:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %call144 = tail call i32 %101(ptr noundef %call.i, ptr noundef %class_intf.0355) #22
  br label %for.inc

for.inc:                                          ; preds = %if.then142, %for.body.for.inc_crit_edge
  %102 = ptrtoint ptr %class_intf.0355 to i32
  call void @__asan_load4_noabort(i32 %102)
  %class_intf.0 = load ptr, ptr %class_intf.0355, align 4
  %103 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %class.i, align 4
  %p136 = getelementptr inbounds %struct.class, ptr %104, i32 0, i32 14
  %105 = ptrtoint ptr %p136 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %p136, align 4
  %interfaces137 = getelementptr inbounds %struct.subsys_private, ptr %106, i32 0, i32 2
  %cmp138.not = icmp eq ptr %class_intf.0, %interfaces137
  br i1 %cmp138.not, label %for.inc.done_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.done_crit_edge:                           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %done

done:                                             ; preds = %for.inc.done_crit_edge, %if.then126.done_crit_edge
  %.lcssa = phi ptr [ %98, %if.then126.done_crit_edge ], [ %106, %for.inc.done_crit_edge ]
  %mutex153 = getelementptr inbounds %struct.subsys_private, ptr %.lcssa, i32 0, i32 3
  tail call void @mutex_unlock(ptr noundef %mutex153) #22
  br label %if.then.i302

if.then.i302:                                     ; preds = %name_error, %done, %if.end124.if.then.i302_crit_edge, %if.then2.if.then.i302_crit_edge
  %error.1343 = phi i32 [ 0, %done ], [ -12, %if.then2.if.then.i302_crit_edge ], [ 0, %if.end124.if.then.i302_crit_edge ], [ %error.10, %name_error ]
  tail call void @kobject_put(ptr noundef nonnull %call.i) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %if.then.i302, %get_device.exit.put_device.exit_crit_edge, %entry.put_device.exit_crit_edge
  %error.1344 = phi i32 [ %error.1343, %if.then.i302 ], [ -22, %get_device.exit.put_device.exit_crit_edge ], [ -22, %entry.put_device.exit_crit_edge ]
  ret i32 %error.1344

SysEntryError:                                    ; preds = %if.end88
  %107 = ptrtoint ptr %devt to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %devt, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %108)
  %tobool157.not = icmp ult i32 %108, 1048576
  br i1 %tobool157.not, label %SysEntryError.DevAttrError_crit_edge, label %device_remove_file.exit

SysEntryError.DevAttrError_crit_edge:             ; preds = %SysEntryError
  call void @__sanitizer_cov_trace_pc() #24
  br label %DevAttrError

device_remove_file.exit:                          ; preds = %SysEntryError
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_file_ns(ptr noundef nonnull %call.i, ptr noundef nonnull @dev_attr_dev, ptr noundef null) #22
  br label %DevAttrError

DevAttrError:                                     ; preds = %device_remove_file.exit, %SysEntryError.DevAttrError_crit_edge, %if.then84.DevAttrError_crit_edge
  %error.2 = phi i32 [ %call85, %if.then84.DevAttrError_crit_edge ], [ %call89, %device_remove_file.exit ], [ %call89, %SysEntryError.DevAttrError_crit_edge ]
  tail call void @device_pm_remove(ptr noundef nonnull %call.i) #22
  tail call void @dpm_sysfs_remove(ptr noundef nonnull %call.i) #22
  br label %DPMError

DPMError:                                         ; preds = %DevAttrError, %if.end78.DPMError_crit_edge
  %error.3 = phi i32 [ %call79, %if.end78.DPMError_crit_edge ], [ %error.2, %DevAttrError ]
  tail call void @bus_remove_device(ptr noundef nonnull %call.i) #22
  br label %BusError

BusError:                                         ; preds = %DPMError, %if.end74.BusError_crit_edge
  %error.4 = phi i32 [ %call75, %if.end74.BusError_crit_edge ], [ %error.3, %DPMError ]
  tail call fastcc void @device_remove_attrs(ptr noundef nonnull %call.i)
  br label %AttrsError

AttrsError:                                       ; preds = %BusError, %if.end70.AttrsError_crit_edge
  %error.5 = phi i32 [ %call71, %if.end70.AttrsError_crit_edge ], [ %error.4, %BusError ]
  tail call fastcc void @device_remove_class_symlinks(ptr noundef nonnull %call.i)
  br label %device_remove_file.exit310

device_remove_file.exit310:                       ; preds = %AttrsError, %device_add_class_symlinks.exit
  %error.6 = phi i32 [ %error.1.i, %device_add_class_symlinks.exit ], [ %error.5, %AttrsError ]
  tail call void @sysfs_remove_file_ns(ptr noundef nonnull %call.i, ptr noundef nonnull @dev_attr_uevent, ptr noundef null) #22
  br label %attrError

attrError:                                        ; preds = %device_remove_file.exit310, %device_create_file.exit.attrError_crit_edge
  %error.7 = phi i32 [ %call.i.i, %device_create_file.exit.attrError_crit_edge ], [ %error.6, %device_remove_file.exit310 ]
  tail call void @software_node_notify_remove(ptr noundef nonnull %call.i) #22
  %109 = load ptr, ptr @platform_notify_remove, align 4
  %tobool.not.i311 = icmp eq ptr %109, null
  br i1 %tobool.not.i311, label %attrError.device_platform_notify_remove.exit_crit_edge, label %if.then.i313

attrError.device_platform_notify_remove.exit_crit_edge: ; preds = %attrError
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_platform_notify_remove.exit

if.then.i313:                                     ; preds = %attrError
  call void @__sanitizer_cov_trace_pc() #24
  %call.i312 = tail call i32 %109(ptr noundef nonnull %call.i) #22
  br label %device_platform_notify_remove.exit

device_platform_notify_remove.exit:               ; preds = %if.then.i313, %attrError.device_platform_notify_remove.exit_crit_edge
  %call161 = tail call i32 @kobject_uevent(ptr noundef nonnull %call.i, i32 noundef 1) #22
  %110 = ptrtoint ptr %parent57 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %parent57, align 4
  tail call void @kobject_del(ptr noundef nonnull %call.i) #22
  br label %Error

Error:                                            ; preds = %device_platform_notify_remove.exit, %if.then60
  %glue_dir.0 = phi ptr [ %35, %if.then60 ], [ %111, %device_platform_notify_remove.exit ]
  %error.8 = phi i32 [ %call58, %if.then60 ], [ %error.7, %device_platform_notify_remove.exit ]
  tail call fastcc void @cleanup_glue_dir(ptr noundef nonnull %call.i, ptr noundef %glue_dir.0)
  br label %parent_error

parent_error:                                     ; preds = %Error, %if.then41
  %error.9 = phi i32 [ %30, %if.then41 ], [ %error.8, %Error ]
  %tobool.not.i316 = icmp eq ptr %cond.i284, null
  br i1 %tobool.not.i316, label %parent_error.name_error_crit_edge, label %if.then.i317

parent_error.name_error_crit_edge:                ; preds = %parent_error
  call void @__sanitizer_cov_trace_pc() #24
  br label %name_error

if.then.i317:                                     ; preds = %parent_error
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %cond.i284) #22
  br label %name_error

name_error:                                       ; preds = %if.then.i317, %parent_error.name_error_crit_edge, %dev_name.exit275.name_error_crit_edge
  %error.10 = phi i32 [ -22, %dev_name.exit275.name_error_crit_edge ], [ %error.9, %parent_error.name_error_crit_edge ], [ %error.9, %if.then.i317 ]
  %112 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %p, align 4
  tail call void @kfree(ptr noundef %113) #22
  %114 = ptrtoint ptr %p to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr null, ptr %p, align 4
  br label %if.then.i302
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @get_device_parent(ptr nocapture noundef readonly %dev, ptr noundef %parent) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %class = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %class, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end56, label %if.then

if.then:                                          ; preds = %entry
  %2 = load i32, ptr @sysfs_deprecated, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not = icmp ne i32 %2, 0
  %cmp = icmp eq ptr %1, @block_class
  %or.cond = select i1 %tobool1.not, i1 %cmp, i1 false
  %tobool4.not = icmp eq ptr %parent, null
  br i1 %or.cond, label %if.then3, label %if.end11

if.then3:                                         ; preds = %if.then
  br i1 %tobool4.not, label %if.then3.if.end_crit_edge, label %land.lhs.true5

if.then3.if.end_crit_edge:                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true5:                                   ; preds = %if.then3
  %class6 = getelementptr inbounds %struct.device, ptr %parent, i32 0, i32 33
  %3 = ptrtoint ptr %class6 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %class6, align 4
  %cmp7 = icmp eq ptr %4, @block_class
  br i1 %cmp7, label %land.lhs.true5.return_crit_edge, label %land.lhs.true5.if.end_crit_edge

land.lhs.true5.if.end_crit_edge:                  ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true5.return_crit_edge:                  ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %land.lhs.true5.if.end_crit_edge, %if.then3.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.class, ptr @block_class, i32 0, i32 14) to i32))
  %5 = load ptr, ptr getelementptr inbounds (%struct.class, ptr @block_class, i32 0, i32 14), align 4
  %kobj10 = getelementptr inbounds %struct.kset, ptr %5, i32 0, i32 2
  br label %return

if.end11:                                         ; preds = %if.then
  br i1 %tobool4.not, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end11
  %6 = load ptr, ptr @virtual_device_parent.virtual_dir, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.then.i, label %if.then13.virtual_device_parent.exit_crit_edge

if.then13.virtual_device_parent.exit_crit_edge:   ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #24
  br label %virtual_device_parent.exit

if.then.i:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #24
  %7 = load ptr, ptr @devices_kset, align 4
  %kobj.i = getelementptr inbounds %struct.kset, ptr %7, i32 0, i32 2
  %call.i = tail call ptr @kobject_create_and_add(ptr noundef nonnull @.str.24, ptr noundef %kobj.i) #22
  store ptr %call.i, ptr @virtual_device_parent.virtual_dir, align 4
  br label %virtual_device_parent.exit

virtual_device_parent.exit:                       ; preds = %if.then.i, %if.then13.virtual_device_parent.exit_crit_edge
  %8 = load ptr, ptr @virtual_device_parent.virtual_dir, align 4
  br label %if.end24

if.else:                                          ; preds = %if.end11
  %class14 = getelementptr inbounds %struct.device, ptr %parent, i32 0, i32 33
  %9 = ptrtoint ptr %class14 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %class14, align 4
  %tobool15.not = icmp eq ptr %10, null
  br i1 %tobool15.not, label %if.else.if.end24_crit_edge, label %land.lhs.true16

if.else.if.end24_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

land.lhs.true16:                                  ; preds = %if.else
  %ns_type = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 10
  %11 = ptrtoint ptr %ns_type to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ns_type, align 4
  %tobool18.not = icmp eq ptr %12, null
  br i1 %tobool18.not, label %land.lhs.true16.return_crit_edge, label %land.lhs.true16.if.end24_crit_edge

land.lhs.true16.if.end24_crit_edge:               ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

land.lhs.true16.return_crit_edge:                 ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end24:                                         ; preds = %land.lhs.true16.if.end24_crit_edge, %if.else.if.end24_crit_edge, %virtual_device_parent.exit
  %parent_kobj.0 = phi ptr [ %8, %virtual_device_parent.exit ], [ %parent, %land.lhs.true16.if.end24_crit_edge ], [ %parent, %if.else.if.end24_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @gdp_mutex, i32 noundef 0) #22
  %13 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %class, align 4
  %p = getelementptr inbounds %struct.class, ptr %14, i32 0, i32 14
  %15 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %p, align 4
  %list_lock = getelementptr inbounds %struct.subsys_private, ptr %16, i32 0, i32 10, i32 1
  tail call void @_raw_spin_lock(ptr noundef %list_lock) #22
  %17 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %class, align 4
  %p27 = getelementptr inbounds %struct.class, ptr %18, i32 0, i32 14
  %19 = ptrtoint ptr %p27 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %p27, align 4
  %glue_dirs28 = getelementptr inbounds %struct.subsys_private, ptr %20, i32 0, i32 10
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end24
  %.pn.in = phi ptr [ %glue_dirs28, %if.end24 ], [ %.pn, %for.body.for.cond_crit_edge ]
  %21 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp34.not = icmp eq ptr %.pn, %glue_dirs28
  br i1 %cmp34.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.cond
  %parent35 = getelementptr i8, ptr %.pn, i32 8
  %22 = ptrtoint ptr %parent35 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %parent35, align 4
  %cmp36 = icmp eq ptr %23, %parent_kobj.0
  br i1 %cmp36, label %if.then37, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond

if.then37:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %k.0.le = getelementptr i8, ptr %.pn, i32 -4
  %call38 = tail call ptr @kobject_get(ptr noundef %k.0.le) #22
  br label %for.end

for.end:                                          ; preds = %if.then37, %for.cond.for.end_crit_edge
  %kobj.0 = phi ptr [ %call38, %if.then37 ], [ null, %for.cond.for.end_crit_edge ]
  %24 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %class, align 4
  %p46 = getelementptr inbounds %struct.class, ptr %25, i32 0, i32 14
  %26 = ptrtoint ptr %p46 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %p46, align 4
  %list_lock48 = getelementptr inbounds %struct.subsys_private, ptr %27, i32 0, i32 10, i32 1
  tail call void @_raw_spin_unlock(ptr noundef %list_lock48) #22
  %tobool49.not = icmp eq ptr %kobj.0, null
  br i1 %tobool49.not, label %if.end51, label %if.then50

if.then50:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @mutex_unlock(ptr noundef nonnull @gdp_mutex) #22
  br label %return

if.end51:                                         ; preds = %for.end
  %28 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %class, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %30 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %30, i32 noundef 3520, i32 noundef 140) #25
  %tobool.not.i100 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i100, label %if.end51.class_dir_create_and_add.exit_crit_edge, label %if.end.i

if.end51.class_dir_create_and_add.exit_crit_edge: ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #24
  br label %class_dir_create_and_add.exit

if.end.i:                                         ; preds = %if.end51
  %class3.i = getelementptr inbounds %struct.class_dir, ptr %call7.i.i.i, i32 0, i32 1
  %31 = ptrtoint ptr %class3.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %29, ptr %class3.i, align 8
  tail call void @kobject_init(ptr noundef nonnull %call7.i.i.i, ptr noundef nonnull @class_dir_ktype) #22
  %p.i = getelementptr inbounds %struct.class, ptr %29, i32 0, i32 14
  %32 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %p.i, align 4
  %glue_dirs.i = getelementptr inbounds %struct.subsys_private, ptr %33, i32 0, i32 10
  %kset.i = getelementptr inbounds %struct.kobject, ptr %call7.i.i.i, i32 0, i32 3
  %34 = ptrtoint ptr %kset.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %glue_dirs.i, ptr %kset.i, align 8
  %35 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %29, align 4
  %call6.i = tail call i32 (ptr, ptr, ptr, ...) @kobject_add(ptr noundef nonnull %call7.i.i.i, ptr noundef %parent_kobj.0, ptr noundef nonnull @.str.25, ptr noundef %36) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %cmp.i = icmp slt i32 %call6.i, 0
  br i1 %cmp.i, label %if.then7.i, label %if.end.i.class_dir_create_and_add.exit_crit_edge

if.end.i.class_dir_create_and_add.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %class_dir_create_and_add.exit

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %call7.i.i.i) #22
  %37 = inttoptr i32 %call6.i to ptr
  br label %class_dir_create_and_add.exit

class_dir_create_and_add.exit:                    ; preds = %if.then7.i, %if.end.i.class_dir_create_and_add.exit_crit_edge, %if.end51.class_dir_create_and_add.exit_crit_edge
  %retval.0.i = phi ptr [ %37, %if.then7.i ], [ %call7.i.i.i, %if.end.i.class_dir_create_and_add.exit_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end51.class_dir_create_and_add.exit_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @gdp_mutex) #22
  br label %return

if.end56:                                         ; preds = %entry
  %tobool57.not = icmp eq ptr %parent, null
  br i1 %tobool57.not, label %land.lhs.true58, label %if.end56.if.end67_crit_edge

if.end56.if.end67_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end67

land.lhs.true58:                                  ; preds = %if.end56
  %bus = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %38 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %bus, align 8
  %tobool59.not = icmp eq ptr %39, null
  br i1 %tobool59.not, label %land.lhs.true58.if.end67_crit_edge, label %land.lhs.true60

land.lhs.true58.if.end67_crit_edge:               ; preds = %land.lhs.true58
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end67

land.lhs.true60:                                  ; preds = %land.lhs.true58
  %dev_root = getelementptr inbounds %struct.bus_type, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %dev_root to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %dev_root, align 4
  %tobool62.not = icmp eq ptr %41, null
  br i1 %tobool62.not, label %land.lhs.true60.if.end67_crit_edge, label %land.lhs.true60.return_crit_edge

land.lhs.true60.return_crit_edge:                 ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

land.lhs.true60.if.end67_crit_edge:               ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end67

if.end67:                                         ; preds = %land.lhs.true60.if.end67_crit_edge, %land.lhs.true58.if.end67_crit_edge, %if.end56.if.end67_crit_edge
  br label %return

return:                                           ; preds = %if.end67, %land.lhs.true60.return_crit_edge, %class_dir_create_and_add.exit, %if.then50, %land.lhs.true16.return_crit_edge, %if.end, %land.lhs.true5.return_crit_edge
  %retval.1 = phi ptr [ %kobj10, %if.end ], [ %kobj.0, %if.then50 ], [ %retval.0.i, %class_dir_create_and_add.exit ], [ %parent, %land.lhs.true5.return_crit_edge ], [ %parent, %land.lhs.true16.return_crit_edge ], [ %41, %land.lhs.true60.return_crit_edge ], [ %parent, %if.end67 ]
  ret ptr %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_add(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @device_add_attrs(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %class1 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %class1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %class1, align 4
  %type2 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %2 = ptrtoint ptr %type2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type2, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end5_crit_edge, label %if.then

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5

if.then:                                          ; preds = %entry
  %dev_groups = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %dev_groups to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev_groups, align 4
  %call.i = tail call i32 @sysfs_create_groups(ptr noundef %dev, ptr noundef %5) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not = icmp eq i32 %call.i, 0
  br i1 %tobool3.not, label %if.then.if.end5_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end5

if.end5:                                          ; preds = %if.then.if.end5_crit_edge, %entry.if.end5_crit_edge
  %tobool6.not = icmp eq ptr %3, null
  br i1 %tobool6.not, label %if.end5.if.end12_crit_edge, label %if.then7

if.end5.if.end12_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end12

if.then7:                                         ; preds = %if.end5
  %groups = getelementptr inbounds %struct.device_type, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %groups to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %groups, align 4
  %call.i87 = tail call i32 @sysfs_create_groups(ptr noundef %dev, ptr noundef %7) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i87)
  %tobool9.not = icmp eq i32 %call.i87, 0
  br i1 %tobool9.not, label %if.then7.if.end12_crit_edge, label %if.then7.err_remove_class_groups_crit_edge

if.then7.err_remove_class_groups_crit_edge:       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_remove_class_groups

if.then7.if.end12_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end12

if.end12:                                         ; preds = %if.then7.if.end12_crit_edge, %if.end5.if.end12_crit_edge
  %groups13 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 34
  %8 = ptrtoint ptr %groups13 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %groups13, align 8
  %call.i88 = tail call i32 @sysfs_create_groups(ptr noundef %dev, ptr noundef %9) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i88)
  %tobool15.not = icmp eq i32 %call.i88, 0
  br i1 %tobool15.not, label %if.end17, label %if.end12.err_remove_type_groups_crit_edge

if.end12.err_remove_type_groups_crit_edge:        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_remove_type_groups

if.end17:                                         ; preds = %if.end12
  %bus.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %10 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bus.i, align 8
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %if.end17.if.end24_crit_edge, label %land.lhs.true.i

if.end17.if.end24_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

land.lhs.true.i:                                  ; preds = %if.end17
  %offline.i = getelementptr inbounds %struct.bus_type, ptr %11, i32 0, i32 13
  %12 = ptrtoint ptr %offline.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %offline.i, align 4
  %tobool2.not.i = icmp eq ptr %13, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end24_crit_edge, label %device_supports_offline.exit

land.lhs.true.i.if.end24_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

device_supports_offline.exit:                     ; preds = %land.lhs.true.i
  %online.i = getelementptr inbounds %struct.bus_type, ptr %11, i32 0, i32 12
  %14 = ptrtoint ptr %online.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %online.i, align 4
  %tobool4.i.not = icmp eq ptr %15, null
  br i1 %tobool4.i.not, label %device_supports_offline.exit.if.end24_crit_edge, label %land.lhs.true

device_supports_offline.exit.if.end24_crit_edge:  ; preds = %device_supports_offline.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

land.lhs.true:                                    ; preds = %device_supports_offline.exit
  %offline_disabled = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 39
  %16 = ptrtoint ptr %offline_disabled to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load = load i8, ptr %offline_disabled, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.load)
  %bf.cast.not = icmp slt i8 %bf.load, 0
  %tobool.not.i89 = icmp eq ptr %dev, null
  %or.cond = or i1 %tobool.not.i89, %bf.cast.not
  br i1 %or.cond, label %land.lhs.true.if.end24_crit_edge, label %if.then.i

land.lhs.true.if.end24_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

if.then.i:                                        ; preds = %land.lhs.true
  %17 = load i16, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_online, i32 0, i32 0, i32 1), align 4
  %18 = and i16 %17, 146
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %tobool2.not.i90 = icmp eq i16 %18, 0
  br i1 %tobool2.not.i90, label %if.then.i.if.end.i_crit_edge, label %land.rhs.i91

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

land.rhs.i91:                                     ; preds = %if.then.i
  %19 = load ptr, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_online, i32 0, i32 2), align 4
  %tobool3.not.i = icmp eq ptr %19, null
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i91.if.end.i_crit_edge, !prof !529

land.rhs.i91.if.end.i_crit_edge:                  ; preds = %land.rhs.i91
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i91
  call void @__sanitizer_cov_trace_pc() #24
  %20 = load ptr, ptr @dev_attr_online, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2756, i32 noundef 9, ptr noundef nonnull @.str.17, ptr noundef %20) #22
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i91.if.end.i_crit_edge, %if.then.i.if.end.i_crit_edge
  %21 = load i16, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_online, i32 0, i32 0, i32 1), align 4
  %22 = and i16 %21, 292
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool31.not.i = icmp eq i16 %22, 0
  br i1 %tobool31.not.i, label %if.end.i.device_create_file.exit_crit_edge, label %land.rhs32.i

if.end.i.device_create_file.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_file.exit

land.rhs32.i:                                     ; preds = %if.end.i
  %23 = load ptr, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_online, i32 0, i32 1), align 4
  %tobool33.not.i = icmp eq ptr %23, null
  br i1 %tobool33.not.i, label %do.end52.i, label %land.rhs32.i.device_create_file.exit_crit_edge, !prof !529

land.rhs32.i.device_create_file.exit_crit_edge:   ; preds = %land.rhs32.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_file.exit

do.end52.i:                                       ; preds = %land.rhs32.i
  call void @__sanitizer_cov_trace_pc() #24
  %24 = load ptr, ptr @dev_attr_online, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2759, i32 noundef 9, ptr noundef nonnull @.str.18, ptr noundef %24) #22
  br label %device_create_file.exit

device_create_file.exit:                          ; preds = %do.end52.i, %land.rhs32.i.device_create_file.exit_crit_edge, %if.end.i.device_create_file.exit_crit_edge
  %call.i.i = tail call i32 @sysfs_create_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_online, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool21.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool21.not, label %device_create_file.exit.if.end24_crit_edge, label %device_create_file.exit.err_remove_dev_groups_crit_edge

device_create_file.exit.err_remove_dev_groups_crit_edge: ; preds = %device_create_file.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_remove_dev_groups

device_create_file.exit.if.end24_crit_edge:       ; preds = %device_create_file.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

if.end24:                                         ; preds = %device_create_file.exit.if.end24_crit_edge, %land.lhs.true.if.end24_crit_edge, %device_supports_offline.exit.if.end24_crit_edge, %land.lhs.true.i.if.end24_crit_edge, %if.end17.if.end24_crit_edge
  %25 = load i32, ptr @fw_devlink_flags, align 4
  %26 = zext i32 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.157)
  switch i32 %25, label %land.lhs.true28 [
    i32 0, label %if.end24.if.end35_crit_edge
    i32 384, label %if.end24.if.end35_crit_edge142
  ]

if.end24.if.end35_crit_edge142:                   ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end35

if.end24.if.end35_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end35

land.lhs.true28:                                  ; preds = %if.end24
  %fwnode = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %27 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fwnode, align 4
  %tobool29.not = icmp eq ptr %28, null
  br i1 %tobool29.not, label %land.lhs.true28.if.end35_crit_edge, label %if.then30

land.lhs.true28.if.end35_crit_edge:               ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end35

if.then30:                                        ; preds = %land.lhs.true28
  %tobool.not.i92 = icmp eq ptr %dev, null
  br i1 %tobool.not.i92, label %if.then30.cleanup_crit_edge, label %if.then.i94

if.then30.cleanup_crit_edge:                      ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then.i94:                                      ; preds = %if.then30
  %29 = load i16, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_waiting_for_supplier, i32 0, i32 0, i32 1), align 4
  %30 = and i16 %29, 146
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %30)
  %tobool2.not.i93 = icmp eq i16 %30, 0
  br i1 %tobool2.not.i93, label %if.then.i94.if.end.i99_crit_edge, label %land.rhs.i96

if.then.i94.if.end.i99_crit_edge:                 ; preds = %if.then.i94
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i99

land.rhs.i96:                                     ; preds = %if.then.i94
  %31 = load ptr, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_waiting_for_supplier, i32 0, i32 2), align 4
  %tobool3.not.i95 = icmp eq ptr %31, null
  br i1 %tobool3.not.i95, label %do.end.i97, label %land.rhs.i96.if.end.i99_crit_edge, !prof !529

land.rhs.i96.if.end.i99_crit_edge:                ; preds = %land.rhs.i96
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i99

do.end.i97:                                       ; preds = %land.rhs.i96
  call void @__sanitizer_cov_trace_pc() #24
  %32 = load ptr, ptr @dev_attr_waiting_for_supplier, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2756, i32 noundef 9, ptr noundef nonnull @.str.17, ptr noundef %32) #22
  br label %if.end.i99

if.end.i99:                                       ; preds = %do.end.i97, %land.rhs.i96.if.end.i99_crit_edge, %if.then.i94.if.end.i99_crit_edge
  %33 = load i16, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_waiting_for_supplier, i32 0, i32 0, i32 1), align 4
  %34 = and i16 %33, 292
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %34)
  %tobool31.not.i98 = icmp eq i16 %34, 0
  br i1 %tobool31.not.i98, label %if.end.i99.device_create_file.exit106_crit_edge, label %land.rhs32.i101

if.end.i99.device_create_file.exit106_crit_edge:  ; preds = %if.end.i99
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_file.exit106

land.rhs32.i101:                                  ; preds = %if.end.i99
  %35 = load ptr, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_waiting_for_supplier, i32 0, i32 1), align 4
  %tobool33.not.i100 = icmp eq ptr %35, null
  br i1 %tobool33.not.i100, label %do.end52.i102, label %land.rhs32.i101.device_create_file.exit106_crit_edge, !prof !529

land.rhs32.i101.device_create_file.exit106_crit_edge: ; preds = %land.rhs32.i101
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_file.exit106

do.end52.i102:                                    ; preds = %land.rhs32.i101
  call void @__sanitizer_cov_trace_pc() #24
  %36 = load ptr, ptr @dev_attr_waiting_for_supplier, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2759, i32 noundef 9, ptr noundef nonnull @.str.18, ptr noundef %36) #22
  br label %device_create_file.exit106

device_create_file.exit106:                       ; preds = %do.end52.i102, %land.rhs32.i101.device_create_file.exit106_crit_edge, %if.end.i99.device_create_file.exit106_crit_edge
  %call.i.i103 = tail call i32 @sysfs_create_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_waiting_for_supplier, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i103)
  %tobool32.not = icmp eq i32 %call.i.i103, 0
  br i1 %tobool32.not, label %device_create_file.exit106.if.end35_crit_edge, label %device_create_file.exit106.device_remove_file.exit129_crit_edge

device_create_file.exit106.device_remove_file.exit129_crit_edge: ; preds = %device_create_file.exit106
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_remove_file.exit129

device_create_file.exit106.if.end35_crit_edge:    ; preds = %device_create_file.exit106
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end35

if.end35:                                         ; preds = %device_create_file.exit106.if.end35_crit_edge, %land.lhs.true28.if.end35_crit_edge, %if.end24.if.end35_crit_edge, %if.end24.if.end35_crit_edge142
  %removable.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 38
  %37 = ptrtoint ptr %removable.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %removable.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %cmp.i107 = icmp eq i32 %38, 0
  %tobool.not.i108 = icmp eq ptr %dev, null
  %or.cond141 = or i1 %tobool.not.i108, %cmp.i107
  br i1 %or.cond141, label %if.end35.cleanup_crit_edge, label %if.then.i110

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then.i110:                                     ; preds = %if.end35
  %39 = load i16, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_removable, i32 0, i32 0, i32 1), align 4
  %40 = and i16 %39, 146
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %40)
  %tobool2.not.i109 = icmp eq i16 %40, 0
  br i1 %tobool2.not.i109, label %if.then.i110.if.end.i115_crit_edge, label %land.rhs.i112

if.then.i110.if.end.i115_crit_edge:               ; preds = %if.then.i110
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i115

land.rhs.i112:                                    ; preds = %if.then.i110
  %41 = load ptr, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_removable, i32 0, i32 2), align 4
  %tobool3.not.i111 = icmp eq ptr %41, null
  br i1 %tobool3.not.i111, label %do.end.i113, label %land.rhs.i112.if.end.i115_crit_edge, !prof !529

land.rhs.i112.if.end.i115_crit_edge:              ; preds = %land.rhs.i112
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i115

do.end.i113:                                      ; preds = %land.rhs.i112
  call void @__sanitizer_cov_trace_pc() #24
  %42 = load ptr, ptr @dev_attr_removable, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2756, i32 noundef 9, ptr noundef nonnull @.str.17, ptr noundef %42) #22
  br label %if.end.i115

if.end.i115:                                      ; preds = %do.end.i113, %land.rhs.i112.if.end.i115_crit_edge, %if.then.i110.if.end.i115_crit_edge
  %43 = load i16, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_removable, i32 0, i32 0, i32 1), align 4
  %44 = and i16 %43, 292
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %44)
  %tobool31.not.i114 = icmp eq i16 %44, 0
  br i1 %tobool31.not.i114, label %if.end.i115.device_create_file.exit122_crit_edge, label %land.rhs32.i117

if.end.i115.device_create_file.exit122_crit_edge: ; preds = %if.end.i115
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_file.exit122

land.rhs32.i117:                                  ; preds = %if.end.i115
  %45 = load ptr, ptr getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_removable, i32 0, i32 1), align 4
  %tobool33.not.i116 = icmp eq ptr %45, null
  br i1 %tobool33.not.i116, label %do.end52.i118, label %land.rhs32.i117.device_create_file.exit122_crit_edge, !prof !529

land.rhs32.i117.device_create_file.exit122_crit_edge: ; preds = %land.rhs32.i117
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_file.exit122

do.end52.i118:                                    ; preds = %land.rhs32.i117
  call void @__sanitizer_cov_trace_pc() #24
  %46 = load ptr, ptr @dev_attr_removable, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2759, i32 noundef 9, ptr noundef nonnull @.str.18, ptr noundef %46) #22
  br label %device_create_file.exit122

device_create_file.exit122:                       ; preds = %do.end52.i118, %land.rhs32.i117.device_create_file.exit122_crit_edge, %if.end.i115.device_create_file.exit122_crit_edge
  %call.i.i119 = tail call i32 @sysfs_create_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_removable, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i119)
  %tobool39.not = icmp eq i32 %call.i.i119, 0
  br i1 %tobool39.not, label %device_create_file.exit122.cleanup_crit_edge, label %device_remove_file.exit

device_create_file.exit122.cleanup_crit_edge:     ; preds = %device_create_file.exit122
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

device_remove_file.exit:                          ; preds = %device_create_file.exit122
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_waiting_for_supplier, ptr noundef null) #22
  br label %device_remove_file.exit129

device_remove_file.exit129:                       ; preds = %device_remove_file.exit, %device_create_file.exit106.device_remove_file.exit129_crit_edge
  %error.0 = phi i32 [ %call.i.i119, %device_remove_file.exit ], [ %call.i.i103, %device_create_file.exit106.device_remove_file.exit129_crit_edge ]
  tail call void @sysfs_remove_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_online, ptr noundef null) #22
  br label %err_remove_dev_groups

err_remove_dev_groups:                            ; preds = %device_remove_file.exit129, %device_create_file.exit.err_remove_dev_groups_crit_edge
  %error.1 = phi i32 [ %error.0, %device_remove_file.exit129 ], [ %call.i.i, %device_create_file.exit.err_remove_dev_groups_crit_edge ]
  %47 = ptrtoint ptr %groups13 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %groups13, align 8
  tail call void @sysfs_remove_groups(ptr noundef nonnull %dev, ptr noundef %48) #22
  br label %err_remove_type_groups

err_remove_type_groups:                           ; preds = %err_remove_dev_groups, %if.end12.err_remove_type_groups_crit_edge
  %error.2 = phi i32 [ %call.i88, %if.end12.err_remove_type_groups_crit_edge ], [ %error.1, %err_remove_dev_groups ]
  br i1 %tobool6.not, label %err_remove_type_groups.err_remove_class_groups_crit_edge, label %if.then45

err_remove_type_groups.err_remove_class_groups_crit_edge: ; preds = %err_remove_type_groups
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_remove_class_groups

if.then45:                                        ; preds = %err_remove_type_groups
  call void @__sanitizer_cov_trace_pc() #24
  %groups46 = getelementptr inbounds %struct.device_type, ptr %3, i32 0, i32 1
  %49 = ptrtoint ptr %groups46 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %groups46, align 4
  tail call void @sysfs_remove_groups(ptr noundef %dev, ptr noundef %50) #22
  br label %err_remove_class_groups

err_remove_class_groups:                          ; preds = %if.then45, %err_remove_type_groups.err_remove_class_groups_crit_edge, %if.then7.err_remove_class_groups_crit_edge
  %error.3 = phi i32 [ %call.i87, %if.then7.err_remove_class_groups_crit_edge ], [ %error.2, %if.then45 ], [ %error.2, %err_remove_type_groups.err_remove_class_groups_crit_edge ]
  br i1 %tobool.not, label %err_remove_class_groups.cleanup_crit_edge, label %if.then49

err_remove_class_groups.cleanup_crit_edge:        ; preds = %err_remove_class_groups
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then49:                                        ; preds = %err_remove_class_groups
  call void @__sanitizer_cov_trace_pc() #24
  %dev_groups50 = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 3
  %51 = ptrtoint ptr %dev_groups50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %dev_groups50, align 4
  tail call void @sysfs_remove_groups(ptr noundef %dev, ptr noundef %52) #22
  br label %cleanup

cleanup:                                          ; preds = %if.then49, %err_remove_class_groups.cleanup_crit_edge, %device_create_file.exit122.cleanup_crit_edge, %if.end35.cleanup_crit_edge, %if.then30.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %if.then.cleanup_crit_edge ], [ 0, %device_create_file.exit122.cleanup_crit_edge ], [ 0, %if.end35.cleanup_crit_edge ], [ %error.3, %if.then49 ], [ %error.3, %err_remove_class_groups.cleanup_crit_edge ], [ 0, %if.then30.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bus_add_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dpm_sysfs_add(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_pm_add(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @device_create_sys_dev_entry(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  %devt_str = alloca [15 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %class.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %class.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  %dev_kobj.i = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 4
  %kobj.0.in.i = select i1 %tobool.not.i, ptr @sysfs_dev_char_kobj, ptr %dev_kobj.i
  %2 = ptrtoint ptr %kobj.0.in.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %kobj.0.i = load ptr, ptr %kobj.0.in.i, align 4
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %devt_str) #22
  %tobool.not = icmp eq ptr %kobj.0.i, null
  %3 = call ptr @memset(ptr %devt_str, i32 255, i32 15)
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %devt = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 29
  %4 = ptrtoint ptr %devt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %devt, align 8
  %shr = lshr i32 %5, 20
  %and = and i32 %5, 1048575
  %call2 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %devt_str, ptr noundef nonnull @.str.124, i32 noundef %shr, i32 noundef %and)
  %call6 = call i32 @sysfs_create_link(ptr noundef nonnull %kobj.0.i, ptr noundef %dev, ptr noundef nonnull %devt_str) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %error.0 = phi i32 [ %call6, %if.then ], [ 0, %entry.if.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %devt_str) #22
  ret i32 %error.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devtmpfs_create_node(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blocking_notifier_call_chain(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_uevent(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @fw_devlink_link_device(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fw_devlink_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %fwnode1 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %1 = ptrtoint ptr %fwnode1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fwnode1, align 4
  tail call fastcc void @fw_devlink_parse_fwtree(ptr noundef %2)
  tail call void @mutex_lock_nested(ptr noundef nonnull @fwnode_link_lock, i32 noundef 0) #22
  %3 = ptrtoint ptr %fwnode1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fwnode1, align 4
  %consumers.i = getelementptr inbounds %struct.fwnode_handle, ptr %4, i32 0, i32 4
  %5 = ptrtoint ptr %consumers.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %consumers.i, align 4
  %cmp.not.i22 = icmp eq ptr %6, %consumers.i
  br i1 %cmp.not.i22, label %if.end.__fw_devlink_link_to_consumers.exit_crit_edge, label %if.end.for.body.i_crit_edge

if.end.for.body.i_crit_edge:                      ; preds = %if.end
  br label %for.body.i

if.end.__fw_devlink_link_to_consumers.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %__fw_devlink_link_to_consumers.exit

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %if.end.for.body.i_crit_edge
  %.pn.in.i23 = phi ptr [ %.pn.i29, %cleanup.i.for.body.i_crit_edge ], [ %6, %if.end.for.body.i_crit_edge ]
  %link.0.i27 = getelementptr i8, ptr %.pn.in.i23, i32 -4
  %7 = ptrtoint ptr %.pn.in.i23 to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn.i29 = load ptr, ptr %.pn.in.i23, align 4
  %consumer.i = getelementptr i8, ptr %.pn.in.i23, i32 8
  %8 = ptrtoint ptr %consumer.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %consumer.i, align 4
  %dev9.i = getelementptr inbounds %struct.fwnode_handle, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %dev9.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev9.i, align 4
  %tobool.not.i12 = icmp eq ptr %11, null
  br i1 %tobool.not.i12, label %for.body.i.if.then.i_crit_edge, label %get_device.exit

for.body.i.if.then.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i

get_device.exit:                                  ; preds = %for.body.i
  %12 = load i32, ptr @fw_devlink_flags, align 4
  %call.i13 = tail call ptr @kobject_get(ptr noundef nonnull %11) #22
  %tobool.not.i = icmp eq ptr %call.i13, null
  br i1 %tobool.not.i, label %get_device.exit.if.then.i_crit_edge, label %get_device.exit.put_device.exit_crit_edge

get_device.exit.put_device.exit_crit_edge:        ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

get_device.exit.if.then.i_crit_edge:              ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i

if.then.i:                                        ; preds = %get_device.exit.if.then.i_crit_edge, %for.body.i.if.then.i_crit_edge
  %13 = ptrtoint ptr %consumer.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %consumer.i, align 4
  %call12.i = tail call ptr @fwnode_get_next_parent_dev(ptr noundef %14) #22
  %tobool13.not.i = icmp eq ptr %call12.i, null
  br i1 %tobool13.not.i, label %if.then.i.cleanup.i_crit_edge, label %land.lhs.true.i

if.then.i.cleanup.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.i

land.lhs.true.i:                                  ; preds = %if.then.i
  %fwnode14.i = getelementptr inbounds %struct.device, ptr %call12.i, i32 0, i32 28
  %15 = ptrtoint ptr %fwnode14.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %fwnode14.i, align 4
  %call15.i = tail call zeroext i1 @fwnode_is_ancestor_of(ptr noundef %16, ptr noundef %4) #22
  br i1 %call15.i, label %put_device.exit11, label %land.lhs.true.i.put_device.exit_crit_edge

land.lhs.true.i.put_device.exit_crit_edge:        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

put_device.exit11:                                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %call12.i) #22
  br label %cleanup.i

put_device.exit:                                  ; preds = %land.lhs.true.i.put_device.exit_crit_edge, %get_device.exit.put_device.exit_crit_edge
  %dl_flags.0.i = phi i32 [ %12, %get_device.exit.put_device.exit_crit_edge ], [ 384, %land.lhs.true.i.put_device.exit_crit_edge ]
  %con_dev.0.i = phi ptr [ %call.i13, %get_device.exit.put_device.exit_crit_edge ], [ %call12.i, %land.lhs.true.i.put_device.exit_crit_edge ]
  %own_link.0.off0.i = phi i1 [ false, %get_device.exit.put_device.exit_crit_edge ], [ true, %land.lhs.true.i.put_device.exit_crit_edge ]
  %call21.i = tail call fastcc i32 @fw_devlink_create_devlink(ptr noundef nonnull %con_dev.0.i, ptr noundef %4, i32 noundef %dl_flags.0.i) #22
  tail call void @kobject_put(ptr noundef nonnull %con_dev.0.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call21.i)
  %cmp23.i = icmp eq i32 %call21.i, -11
  %or.cond.i = select i1 %own_link.0.off0.i, i1 true, i1 %cmp23.i
  br i1 %or.cond.i, label %put_device.exit.cleanup.i_crit_edge, label %if.end25.i

put_device.exit.cleanup.i_crit_edge:              ; preds = %put_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.i

if.end25.i:                                       ; preds = %put_device.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__fwnode_link_del.__UNIQUE_ID_ddebug359, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@fw_devlink_link_device, %do.end.i)) #22
          to label %if.then.i6 [label %do.end.i], !srcloc !522

if.then.i6:                                       ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #24
  %17 = ptrtoint ptr %consumer.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %consumer.i, align 4
  %19 = ptrtoint ptr %link.0.i27 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %link.0.i27, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__fwnode_link_del.__UNIQUE_ID_ddebug359, ptr noundef nonnull @.str.60, ptr noundef %18, ptr noundef %20) #22
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i6, %if.end25.i
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in.i23) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %do.end.i.list_del.exit.i_crit_edge

do.end.i.list_del.exit.i_crit_edge:               ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr i8, ptr %.pn.in.i23, i32 4
  %21 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i.i.i, align 4
  %23 = ptrtoint ptr %.pn.in.i23 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %.pn.in.i23, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev1.i.i.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %24, ptr %22, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %do.end.i.list_del.exit.i_crit_edge
  %27 = ptrtoint ptr %.pn.in.i23 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in.i23, align 4
  %prev.i.i = getelementptr i8, ptr %.pn.in.i23, i32 4
  %28 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %c_hook.i = getelementptr i8, ptr %.pn.in.i23, i32 12
  %call.i.i8.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %c_hook.i) #22
  br i1 %call.i.i8.i, label %if.end.i.i11.i, label %list_del.exit.i.__fwnode_link_del.exit_crit_edge

list_del.exit.i.__fwnode_link_del.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__fwnode_link_del.exit

if.end.i.i11.i:                                   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i9.i = getelementptr i8, ptr %.pn.in.i23, i32 16
  %29 = ptrtoint ptr %prev.i.i9.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev.i.i9.i, align 4
  %31 = ptrtoint ptr %c_hook.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %c_hook.i, align 4
  %prev1.i.i.i10.i = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %prev1.i.i.i10.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev1.i.i.i10.i, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %32, ptr %30, align 4
  br label %__fwnode_link_del.exit

__fwnode_link_del.exit:                           ; preds = %if.end.i.i11.i, %list_del.exit.i.__fwnode_link_del.exit_crit_edge
  %35 = ptrtoint ptr %c_hook.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr inttoptr (i32 256 to ptr), ptr %c_hook.i, align 4
  %prev.i12.i = getelementptr i8, ptr %.pn.in.i23, i32 16
  %36 = ptrtoint ptr %prev.i12.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i12.i, align 4
  tail call void @kfree(ptr noundef %link.0.i27) #22
  br label %cleanup.i

cleanup.i:                                        ; preds = %__fwnode_link_del.exit, %put_device.exit.cleanup.i_crit_edge, %put_device.exit11, %if.then.i.cleanup.i_crit_edge
  %cmp.not.i = icmp eq ptr %.pn.i29, %consumers.i
  br i1 %cmp.not.i, label %cleanup.i.__fw_devlink_link_to_consumers.exit_crit_edge, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

cleanup.i.__fw_devlink_link_to_consumers.exit_crit_edge: ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__fw_devlink_link_to_consumers.exit

__fw_devlink_link_to_consumers.exit:              ; preds = %cleanup.i.__fw_devlink_link_to_consumers.exit_crit_edge, %if.end.__fw_devlink_link_to_consumers.exit_crit_edge
  tail call fastcc void @__fw_devlink_link_to_suppliers(ptr noundef %dev, ptr noundef %2)
  tail call void @mutex_unlock(ptr noundef nonnull @fwnode_link_lock) #22
  br label %cleanup

cleanup:                                          ; preds = %__fw_devlink_link_to_consumers.exit, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bus_probe_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @fw_devlink_unblock_consumers(ptr noundef readonly %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fw_devlink_flags, align 4
  %1 = zext i32 %0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.158)
  switch i32 %0, label %if.end [
    i32 0, label %entry.cleanup_crit_edge
    i32 384, label %entry.cleanup_crit_edge15
  ]

entry.cleanup_crit_edge15:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %consumers = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %2 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn12 = load ptr, ptr %consumers, align 4
  %cmp.not13 = icmp eq ptr %.pn12, %consumers
  br i1 %cmp.not13, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %fw_devlink_relax_link.exit.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn14 = phi ptr [ %.pn, %fw_devlink_relax_link.exit.for.body_crit_edge ], [ %.pn12, %if.end.for.body_crit_edge ]
  %link.0 = getelementptr i8, ptr %.pn14, i32 -4
  %flags.i = getelementptr i8, ptr %.pn14, i32 952
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %4, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 448, i32 %4)
  %cmp.i11 = icmp eq i32 %4, 448
  %or.cond.i = or i1 %cmp.i11, %tobool.not.i
  br i1 %or.cond.i, label %for.body.fw_devlink_relax_link.exit_crit_edge, label %if.end3.i

for.body.fw_devlink_relax_link.exit_crit_edge:    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %fw_devlink_relax_link.exit

if.end3.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @pm_runtime_drop_link(ptr noundef %link.0) #22
  %5 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 448, ptr %flags.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @fw_devlink_relax_link.__UNIQUE_ID_ddebug382, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@fw_devlink_unblock_consumers, %fw_devlink_relax_link.exit)) #22
          to label %if.then9.i [label %fw_devlink_relax_link.exit], !srcloc !522

if.then9.i:                                       ; preds = %if.end3.i
  %consumer.i = getelementptr i8, ptr %.pn14, i32 8
  %6 = ptrtoint ptr %consumer.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %consumer.i, align 4
  %8 = ptrtoint ptr %link.0 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %link.0, align 8
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then9.i.dev_name.exit.i_crit_edge

if.then9.i.dev_name.exit.i_crit_edge:             ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #24
  %12 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %9, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then9.i.dev_name.exit.i_crit_edge
  %retval.0.i17.i = phi ptr [ %13, %if.end.i.i ], [ %11, %if.then9.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @fw_devlink_relax_link.__UNIQUE_ID_ddebug382, ptr noundef %7, ptr noundef nonnull @.str.101, ptr noundef %retval.0.i17.i) #22
  br label %fw_devlink_relax_link.exit

fw_devlink_relax_link.exit:                       ; preds = %dev_name.exit.i, %if.end3.i, %for.body.fw_devlink_relax_link.exit_crit_edge
  %14 = ptrtoint ptr %.pn14 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn = load ptr, ptr %.pn14, align 4
  %cmp.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp.not, label %fw_devlink_relax_link.exit.for.end_crit_edge, label %fw_devlink_relax_link.exit.for.body_crit_edge

fw_devlink_relax_link.exit.for.body_crit_edge:    ; preds = %fw_devlink_relax_link.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

fw_devlink_relax_link.exit.for.end_crit_edge:     ; preds = %fw_devlink_relax_link.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %fw_devlink_relax_link.exit.for.end_crit_edge, %if.end.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge, %entry.cleanup_crit_edge15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @klist_add_tail(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_pm_remove(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dpm_sysfs_remove(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bus_remove_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @device_remove_attrs(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %class1 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %class1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %class1, align 4
  %type2 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %2 = ptrtoint ptr %type2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type2, align 4
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.device_remove_file.exit23_crit_edge, label %if.then.i22

entry.device_remove_file.exit23_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_remove_file.exit23

if.then.i22:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_removable, ptr noundef null) #22
  tail call void @sysfs_remove_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_waiting_for_supplier, ptr noundef null) #22
  tail call void @sysfs_remove_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_online, ptr noundef null) #22
  br label %device_remove_file.exit23

device_remove_file.exit23:                        ; preds = %if.then.i22, %entry.device_remove_file.exit23_crit_edge
  %groups = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 34
  %4 = ptrtoint ptr %groups to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %groups, align 8
  tail call void @sysfs_remove_groups(ptr noundef %dev, ptr noundef %5) #22
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %device_remove_file.exit23.if.end_crit_edge, label %if.then

device_remove_file.exit23.if.end_crit_edge:       ; preds = %device_remove_file.exit23
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %device_remove_file.exit23
  call void @__sanitizer_cov_trace_pc() #24
  %groups3 = getelementptr inbounds %struct.device_type, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %groups3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %groups3, align 4
  tail call void @sysfs_remove_groups(ptr noundef %dev, ptr noundef %7) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %device_remove_file.exit23.if.end_crit_edge
  %tobool4.not = icmp eq ptr %1, null
  br i1 %tobool4.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %dev_groups = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %dev_groups to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev_groups, align 4
  tail call void @sysfs_remove_groups(ptr noundef %dev, ptr noundef %9) #22
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @device_remove_class_symlinks(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %dev_of_node.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

dev_of_node.exit:                                 ; preds = %entry
  %of_node.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %dev_of_node.exit.if.end_crit_edge, label %if.then

dev_of_node.exit.if.end_crit_edge:                ; preds = %dev_of_node.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %dev_of_node.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_link(ptr noundef nonnull %dev, ptr noundef nonnull @.str.115) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %dev_of_node.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %class = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %2 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %class, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %if.end.return_crit_edge, label %if.end3

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end3:                                          ; preds = %if.end
  %parent = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 1
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 8
  %tobool4.not = icmp eq ptr %5, null
  br i1 %tobool4.not, label %if.end3.if.end9_crit_edge, label %land.lhs.true

if.end3.if.end9_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9

land.lhs.true:                                    ; preds = %if.end3
  %type.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %6 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %type.i, align 4
  %cmp.i.not = icmp eq ptr %7, @part_type
  br i1 %cmp.i.not, label %land.lhs.true.if.end9_crit_edge, label %if.then7

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9

if.then7:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_link(ptr noundef %dev, ptr noundef nonnull @.str.119) #22
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %land.lhs.true.if.end9_crit_edge, %if.end3.if.end9_crit_edge
  tail call void @sysfs_remove_link(ptr noundef %dev, ptr noundef nonnull @.str.118) #22
  %8 = load i32, ptr @sysfs_deprecated, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool11.not = icmp eq i32 %8, 0
  br i1 %tobool11.not, label %if.end9.if.end15_crit_edge, label %land.lhs.true12

if.end9.if.end15_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15

land.lhs.true12:                                  ; preds = %if.end9
  %9 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %class, align 4
  %cmp = icmp eq ptr %10, @block_class
  br i1 %cmp, label %land.lhs.true12.return_crit_edge, label %land.lhs.true12.if.end15_crit_edge

land.lhs.true12.if.end15_crit_edge:               ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15

land.lhs.true12.return_crit_edge:                 ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end15:                                         ; preds = %land.lhs.true12.if.end15_crit_edge, %if.end9.if.end15_crit_edge
  %11 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %class, align 4
  %p = getelementptr inbounds %struct.class, ptr %12, i32 0, i32 14
  %13 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %p, align 4
  %kobj17 = getelementptr inbounds %struct.kset, ptr %14, i32 0, i32 2
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %15 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i30 = icmp eq ptr %16, null
  br i1 %tobool.not.i30, label %if.end.i31, label %if.end15.dev_name.exit_crit_edge

if.end15.dev_name.exit_crit_edge:                 ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i31:                                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #24
  %17 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i31, %if.end15.dev_name.exit_crit_edge
  %retval.0.i32 = phi ptr [ %18, %if.end.i31 ], [ %16, %if.end15.dev_name.exit_crit_edge ]
  tail call void @sysfs_delete_link(ptr noundef %kobj17, ptr noundef %dev, ptr noundef %retval.0.i32) #22
  br label %return

return:                                           ; preds = %dev_name.exit, %land.lhs.true12.return_crit_edge, %if.end.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_del(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cleanup_glue_dir(ptr nocapture noundef readonly %dev, ptr noundef %glue_dir) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %glue_dir, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %lor.lhs.false.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %entry
  %class.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %class.i, align 4
  %tobool1.not.i = icmp eq ptr %1, null
  br i1 %tobool1.not.i, label %lor.lhs.false.i.cleanup_crit_edge, label %live_in_glue_dir.exit

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

live_in_glue_dir.exit:                            ; preds = %lor.lhs.false.i
  %kset.i = getelementptr inbounds %struct.kobject, ptr %glue_dir, i32 0, i32 3
  %2 = ptrtoint ptr %kset.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %kset.i, align 4
  %p.i = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 14
  %4 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %p.i, align 4
  %glue_dirs.i = getelementptr inbounds %struct.subsys_private, ptr %5, i32 0, i32 10
  %cmp.not.i = icmp eq ptr %3, %glue_dirs.i
  br i1 %cmp.not.i, label %if.end, label %live_in_glue_dir.exit.cleanup_crit_edge

live_in_glue_dir.exit.cleanup_crit_edge:          ; preds = %live_in_glue_dir.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %live_in_glue_dir.exit
  tail call void @mutex_lock_nested(ptr noundef nonnull @gdp_mutex, i32 noundef 0) #22
  %kref = getelementptr inbounds %struct.kobject, ptr %glue_dir, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %kref, i32 noundef 4) #22
  %6 = ptrtoint ptr %kref to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %kref, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %kref, i32 noundef 4) #22
  %8 = ptrtoint ptr %kref to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %kref, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp.i = icmp eq i32 %9, 0
  br i1 %cmp.i, label %land.rhs.i, label %if.end.if.end27.i_crit_edge

if.end.if.end27.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end27.i

land.rhs.i:                                       ; preds = %if.end
  %.b44.i = load i1, ptr @kobject_has_children.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !523

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @kobject_has_children.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 3038, i32 noundef 9, ptr noundef null) #22
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %if.end.if.end27.i_crit_edge
  %sd.i = getelementptr inbounds %struct.kobject, ptr %glue_dir, i32 0, i32 5
  %10 = ptrtoint ptr %sd.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sd.i, align 4
  %tobool35.not.i = icmp eq ptr %11, null
  br i1 %tobool35.not.i, label %if.end27.i.kobject_has_children.exit_crit_edge, label %land.rhs36.i

if.end27.i.kobject_has_children.exit_crit_edge:   ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kobject_has_children.exit

land.rhs36.i:                                     ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #24
  %12 = getelementptr inbounds %struct.kernfs_node, ptr %11, i32 0, i32 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool38.i = icmp eq i32 %14, 0
  br label %kobject_has_children.exit

kobject_has_children.exit:                        ; preds = %land.rhs36.i, %if.end27.i.kobject_has_children.exit_crit_edge
  %15 = phi i1 [ true, %if.end27.i.kobject_has_children.exit_crit_edge ], [ %tobool38.i, %land.rhs36.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %tobool.not = icmp eq i32 %7, 1
  %or.cond = select i1 %15, i1 %tobool.not, i1 false
  br i1 %or.cond, label %if.then3, label %kobject_has_children.exit.if.end4_crit_edge

kobject_has_children.exit.if.end4_crit_edge:      ; preds = %kobject_has_children.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end4

if.then3:                                         ; preds = %kobject_has_children.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_del(ptr noundef nonnull %glue_dir) #22
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %kobject_has_children.exit.if.end4_crit_edge
  tail call void @kobject_put(ptr noundef nonnull %glue_dir) #22
  tail call void @mutex_unlock(ptr noundef nonnull @gdp_mutex) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %live_in_glue_dir.exit.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kobject_get(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_put(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @kill_device(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %entry.device_lock_assert.exit_crit_edge, label %land.rhs.i

entry.device_lock_assert.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_lock_assert.exit

land.rhs.i:                                       ; preds = %entry
  %dep_map.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10, i32 5
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.device_lock_assert.exit_crit_edge, !prof !529

land.rhs.i.device_lock_assert.exit_crit_edge:     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_lock_assert.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.130, i32 noundef 787, i32 noundef 9, ptr noundef null) #22
  br label %device_lock_assert.exit

device_lock_assert.exit:                          ; preds = %do.end.i, %land.rhs.i.device_lock_assert.exit_crit_edge, %entry.device_lock_assert.exit_crit_edge
  %p = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 2
  %1 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %p, align 4
  %dead = getelementptr inbounds %struct.device_private, ptr %2, i32 0, i32 9
  %3 = ptrtoint ptr %dead to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load = load i8, ptr %dead, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %if.end, label %device_lock_assert.exit.return_crit_edge

device_lock_assert.exit.return_crit_edge:         ; preds = %device_lock_assert.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %device_lock_assert.exit
  call void @__sanitizer_cov_trace_pc() #24
  %bf.set = or i8 %bf.load, -128
  %4 = ptrtoint ptr %dead to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %bf.set, ptr %dead, align 4
  br label %return

return:                                           ; preds = %if.end, %device_lock_assert.exit.return_crit_edge
  ret i1 %tobool.not
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_del(ptr noundef %dev) #1 align 64 {
entry:
  %devt_str.i = alloca [15 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %parent1 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %parent1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent1, align 8
  %mutex.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i.i, label %entry.device_lock_assert.exit.i_crit_edge, label %land.rhs.i.i

entry.device_lock_assert.exit.i_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_lock_assert.exit.i

land.rhs.i.i:                                     ; preds = %entry
  %dep_map.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10, i32 5
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.device_lock_assert.exit.i_crit_edge, !prof !529

land.rhs.i.i.device_lock_assert.exit.i_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_lock_assert.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.130, i32 noundef 787, i32 noundef 9, ptr noundef null) #22
  br label %device_lock_assert.exit.i

device_lock_assert.exit.i:                        ; preds = %do.end.i.i, %land.rhs.i.i.device_lock_assert.exit.i_crit_edge, %entry.device_lock_assert.exit.i_crit_edge
  %p.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 2
  %3 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %p.i, align 4
  %dead.i = getelementptr inbounds %struct.device_private, ptr %4, i32 0, i32 9
  %5 = ptrtoint ptr %dead.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load.i = load i8, ptr %dead.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %if.end.i, label %device_lock_assert.exit.i.kill_device.exit_crit_edge

device_lock_assert.exit.i.kill_device.exit_crit_edge: ; preds = %device_lock_assert.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kill_device.exit

if.end.i:                                         ; preds = %device_lock_assert.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %bf.set.i = or i8 %bf.load.i, -128
  %6 = ptrtoint ptr %dead.i to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %bf.set.i, ptr %dead.i, align 4
  br label %kill_device.exit

kill_device.exit:                                 ; preds = %if.end.i, %device_lock_assert.exit.i.kill_device.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %mutex.i) #22
  %fwnode = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %7 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fwnode, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %kill_device.exit.if.end_crit_edge, label %land.lhs.true

kill_device.exit.if.end_crit_edge:                ; preds = %kill_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %kill_device.exit
  %dev3 = getelementptr inbounds %struct.fwnode_handle, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev3, align 4
  %cmp = icmp eq ptr %10, %dev
  br i1 %cmp, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  %11 = ptrtoint ptr %dev3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %dev3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %kill_device.exit.if.end_crit_edge
  %12 = tail call i32 @llvm.read_register.i32(metadata !512) #22
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags1.i, align 4
  %and.i = and i32 %17, 524288
  %or.i = or i32 %17, 524288
  store i32 %or.i, ptr %flags1.i, align 4
  %bus = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %18 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %bus, align 8
  %tobool7.not = icmp eq ptr %19, null
  br i1 %tobool7.not, label %if.end.if.end11_crit_edge, label %if.then8

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11

if.then8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %p = getelementptr inbounds %struct.bus_type, ptr %19, i32 0, i32 20
  %20 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %p, align 4
  %bus_notifier = getelementptr inbounds %struct.subsys_private, ptr %21, i32 0, i32 7
  %call10 = tail call i32 @blocking_notifier_call_chain(ptr noundef %bus_notifier, i32 noundef 2, ptr noundef %dev) #22
  br label %if.end11

if.end11:                                         ; preds = %if.then8, %if.end.if.end11_crit_edge
  tail call void @dpm_sysfs_remove(ptr noundef %dev) #22
  %tobool12.not = icmp eq ptr %1, null
  br i1 %tobool12.not, label %if.end11.if.end15_crit_edge, label %if.then13

if.end11.if.end15_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #24
  %22 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %p.i, align 4
  %knode_parent = getelementptr inbounds %struct.device_private, ptr %23, i32 0, i32 1
  tail call void @klist_del(ptr noundef %knode_parent) #22
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end11.if.end15_crit_edge
  %devt = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 29
  %24 = ptrtoint ptr %devt to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %devt, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %25)
  %tobool16.not = icmp ult i32 %25, 1048576
  br i1 %tobool16.not, label %if.end15.if.end19_crit_edge, label %if.then17

if.end15.if.end19_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end19

if.then17:                                        ; preds = %if.end15
  %call18 = tail call i32 @devtmpfs_delete_node(ptr noundef %dev) #22
  %class.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %26 = ptrtoint ptr %class.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %class.i.i, align 4
  %tobool.not.i.i102 = icmp eq ptr %27, null
  %dev_kobj.i.i = getelementptr inbounds %struct.class, ptr %27, i32 0, i32 4
  %kobj.0.in.i.i = select i1 %tobool.not.i.i102, ptr @sysfs_dev_char_kobj, ptr %dev_kobj.i.i
  %28 = ptrtoint ptr %kobj.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %kobj.0.i.i = load ptr, ptr %kobj.0.in.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %devt_str.i) #22
  %tobool.not.i103 = icmp eq ptr %kobj.0.i.i, null
  %29 = call ptr @memset(ptr %devt_str.i, i32 255, i32 15)
  br i1 %tobool.not.i103, label %if.then17.device_remove_sys_dev_entry.exit_crit_edge, label %if.then.i

if.then17.device_remove_sys_dev_entry.exit_crit_edge: ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_remove_sys_dev_entry.exit

if.then.i:                                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #24
  %30 = ptrtoint ptr %devt to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %devt, align 8
  %shr.i = lshr i32 %31, 20
  %and.i104 = and i32 %31, 1048575
  %call2.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %devt_str.i, ptr noundef nonnull @.str.124, i32 noundef %shr.i, i32 noundef %and.i104) #22
  call void @sysfs_remove_link(ptr noundef nonnull %kobj.0.i.i, ptr noundef nonnull %devt_str.i) #22
  br label %device_remove_sys_dev_entry.exit

device_remove_sys_dev_entry.exit:                 ; preds = %if.then.i, %if.then17.device_remove_sys_dev_entry.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %devt_str.i) #22
  %tobool.not.i106 = icmp eq ptr %dev, null
  br i1 %tobool.not.i106, label %device_remove_sys_dev_entry.exit.if.end19_crit_edge, label %if.then.i107

device_remove_sys_dev_entry.exit.if.end19_crit_edge: ; preds = %device_remove_sys_dev_entry.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end19

if.then.i107:                                     ; preds = %device_remove_sys_dev_entry.exit
  call void @__sanitizer_cov_trace_pc() #24
  call void @sysfs_remove_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_dev, ptr noundef null) #22
  br label %if.end19

if.end19:                                         ; preds = %if.then.i107, %device_remove_sys_dev_entry.exit.if.end19_crit_edge, %if.end15.if.end19_crit_edge
  %class = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %32 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %class, align 4
  %tobool20.not = icmp eq ptr %33, null
  br i1 %tobool20.not, label %if.end19.if.end43_crit_edge, label %if.then21

if.end19.if.end43_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end43

if.then21:                                        ; preds = %if.end19
  call fastcc void @device_remove_class_symlinks(ptr noundef %dev)
  %34 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %class, align 4
  %p23 = getelementptr inbounds %struct.class, ptr %35, i32 0, i32 14
  %36 = ptrtoint ptr %p23 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %p23, align 4
  %mutex = getelementptr inbounds %struct.subsys_private, ptr %37, i32 0, i32 3
  call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #22
  %38 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %class, align 4
  %p25 = getelementptr inbounds %struct.class, ptr %39, i32 0, i32 14
  %40 = ptrtoint ptr %p25 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %p25, align 4
  %interfaces = getelementptr inbounds %struct.subsys_private, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %interfaces to i32
  call void @__asan_load4_noabort(i32 %42)
  %class_intf.0125 = load ptr, ptr %interfaces, align 4
  %cmp29.not128 = icmp eq ptr %class_intf.0125, %interfaces
  br i1 %cmp29.not128, label %if.then21.for.end_crit_edge, label %if.then21.for.body_crit_edge

if.then21.for.body_crit_edge:                     ; preds = %if.then21
  br label %for.body

if.then21.for.end_crit_edge:                      ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.then21.for.body_crit_edge
  %class_intf.0129 = phi ptr [ %class_intf.0, %for.inc.for.body_crit_edge ], [ %class_intf.0125, %if.then21.for.body_crit_edge ]
  %remove_dev = getelementptr inbounds %struct.class_interface, ptr %class_intf.0129, i32 0, i32 3
  %43 = ptrtoint ptr %remove_dev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %remove_dev, align 4
  %tobool30.not = icmp eq ptr %44, null
  br i1 %tobool30.not, label %for.body.for.inc_crit_edge, label %if.then31

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then31:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  call void %44(ptr noundef %dev, ptr noundef %class_intf.0129) #22
  br label %for.inc

for.inc:                                          ; preds = %if.then31, %for.body.for.inc_crit_edge
  %45 = ptrtoint ptr %class_intf.0129 to i32
  call void @__asan_load4_noabort(i32 %45)
  %class_intf.0 = load ptr, ptr %class_intf.0129, align 4
  %46 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %class, align 4
  %p27 = getelementptr inbounds %struct.class, ptr %47, i32 0, i32 14
  %48 = ptrtoint ptr %p27 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %p27, align 4
  %interfaces28 = getelementptr inbounds %struct.subsys_private, ptr %49, i32 0, i32 2
  %cmp29.not = icmp eq ptr %class_intf.0, %interfaces28
  br i1 %cmp29.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.then21.for.end_crit_edge
  %50 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %p.i, align 4
  %knode_class = getelementptr inbounds %struct.device_private, ptr %51, i32 0, i32 4
  call void @klist_del(ptr noundef %knode_class) #22
  %52 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %class, align 4
  %p41 = getelementptr inbounds %struct.class, ptr %53, i32 0, i32 14
  %54 = ptrtoint ptr %p41 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %p41, align 4
  %mutex42 = getelementptr inbounds %struct.subsys_private, ptr %55, i32 0, i32 3
  call void @mutex_unlock(ptr noundef %mutex42) #22
  br label %if.end43

if.end43:                                         ; preds = %for.end, %if.end19.if.end43_crit_edge
  %tobool.not.i109 = icmp eq ptr %dev, null
  br i1 %tobool.not.i109, label %if.end43.device_remove_file.exit112_crit_edge, label %if.then.i110

if.end43.device_remove_file.exit112_crit_edge:    ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_remove_file.exit112

if.then.i110:                                     ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #24
  call void @sysfs_remove_file_ns(ptr noundef nonnull %dev, ptr noundef nonnull @dev_attr_uevent, ptr noundef null) #22
  br label %device_remove_file.exit112

device_remove_file.exit112:                       ; preds = %if.then.i110, %if.end43.device_remove_file.exit112_crit_edge
  call fastcc void @device_remove_attrs(ptr noundef %dev)
  call void @bus_remove_device(ptr noundef %dev) #22
  call void @device_pm_remove(ptr noundef %dev) #22
  call void @driver_deferred_probe_del(ptr noundef %dev) #22
  call void @software_node_notify_remove(ptr noundef %dev) #22
  %56 = load ptr, ptr @platform_notify_remove, align 4
  %tobool.not.i113 = icmp eq ptr %56, null
  br i1 %tobool.not.i113, label %device_remove_file.exit112.device_platform_notify_remove.exit_crit_edge, label %if.then.i114

device_remove_file.exit112.device_platform_notify_remove.exit_crit_edge: ; preds = %device_remove_file.exit112
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_platform_notify_remove.exit

if.then.i114:                                     ; preds = %device_remove_file.exit112
  call void @__sanitizer_cov_trace_pc() #24
  %call.i = call i32 %56(ptr noundef %dev) #22
  br label %device_platform_notify_remove.exit

device_platform_notify_remove.exit:               ; preds = %if.then.i114, %device_remove_file.exit112.device_platform_notify_remove.exit_crit_edge
  %57 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %class, align 4
  %cmp.i = icmp eq ptr %58, @devlink_class
  br i1 %cmp.i, label %device_platform_notify_remove.exit.device_links_purge.exit_crit_edge, label %if.end.i116

device_platform_notify_remove.exit.device_links_purge.exit_crit_edge: ; preds = %device_platform_notify_remove.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_links_purge.exit

if.end.i116:                                      ; preds = %device_platform_notify_remove.exit
  call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %links.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11
  %prev.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 0, i32 1
  %59 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %prev.i, align 4
  %cmp8.not.i132 = icmp eq ptr %60, %links.i
  br i1 %cmp8.not.i132, label %if.end.i116.for.end.i_crit_edge, label %if.end.i116.for.body.i_crit_edge

if.end.i116.for.body.i_crit_edge:                 ; preds = %if.end.i116
  br label %for.body.i

if.end.i116.for.end.i_crit_edge:                  ; preds = %if.end.i116
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i

for.body.i:                                       ; preds = %if.end24.i.for.body.i_crit_edge, %if.end.i116.for.body.i_crit_edge
  %.pn114.i133 = phi ptr [ %.pn.i134, %if.end24.i.for.body.i_crit_edge ], [ %60, %if.end.i116.for.body.i_crit_edge ]
  %.pn.i134.in = getelementptr inbounds %struct.list_head, ptr %.pn114.i133, i32 0, i32 1
  %61 = ptrtoint ptr %.pn.i134.in to i32
  call void @__asan_load4_noabort(i32 %61)
  %.pn.i134 = load ptr, ptr %.pn.i134.in, align 4
  %status.i = getelementptr i8, ptr %.pn114.i133, i32 936
  %62 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %63)
  %cmp9.i = icmp eq i32 %63, 3
  br i1 %cmp9.i, label %do.end.i, label %for.body.i.if.end24.i_crit_edge, !prof !529

for.body.i.if.end24.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24.i

do.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1544, i32 noundef 9, ptr noundef null) #22
  br label %if.end24.i

if.end24.i:                                       ; preds = %do.end.i, %for.body.i.if.end24.i_crit_edge
  %kref.i = getelementptr i8, ptr %.pn114.i133, i32 948
  call fastcc void @__device_link_del(ptr noundef %kref.i) #22
  %cmp8.not.i = icmp eq ptr %.pn.i134, %links.i
  br i1 %cmp8.not.i, label %if.end24.i.for.end.i_crit_edge, label %if.end24.i.for.body.i_crit_edge

if.end24.i.for.body.i_crit_edge:                  ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

if.end24.i.for.end.i_crit_edge:                   ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i

for.end.i:                                        ; preds = %if.end24.i.for.end.i_crit_edge, %if.end.i116.for.end.i_crit_edge
  %consumers.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1
  %prev39.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 11, i32 1, i32 1
  %64 = ptrtoint ptr %prev39.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %prev39.i, align 4
  %cmp50.not.i137 = icmp eq ptr %65, %consumers.i
  br i1 %cmp50.not.i137, label %for.end.i.for.end95.i_crit_edge, label %for.end.i.for.body53.i_crit_edge

for.end.i.for.body53.i_crit_edge:                 ; preds = %for.end.i
  br label %for.body53.i

for.end.i.for.end95.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end95.i

for.body53.i:                                     ; preds = %if.end80.i.for.body53.i_crit_edge, %for.end.i.for.body53.i_crit_edge
  %.pn116.i138 = phi ptr [ %.pn115.i139, %if.end80.i.for.body53.i_crit_edge ], [ %65, %for.end.i.for.body53.i_crit_edge ]
  %.pn115.i139.in = getelementptr inbounds %struct.list_head, ptr %.pn116.i138, i32 0, i32 1
  %66 = ptrtoint ptr %.pn115.i139.in to i32
  call void @__asan_load4_noabort(i32 %66)
  %.pn115.i139 = load ptr, ptr %.pn115.i139.in, align 4
  %status55.i = getelementptr i8, ptr %.pn116.i138, i32 948
  %67 = ptrtoint ptr %status55.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %status55.i, align 8
  %69 = add i32 %68, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %69)
  %70 = icmp ult i32 %69, -2
  br i1 %70, label %do.end74.i, label %for.body53.i.if.end80.i_crit_edge, !prof !529

for.body53.i.if.end80.i_crit_edge:                ; preds = %for.body53.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end80.i

do.end74.i:                                       ; preds = %for.body53.i
  call void @__sanitizer_cov_trace_pc() #24
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1550, i32 noundef 9, ptr noundef null) #22
  br label %if.end80.i

if.end80.i:                                       ; preds = %do.end74.i, %for.body53.i.if.end80.i_crit_edge
  %kref88.i = getelementptr i8, ptr %.pn116.i138, i32 960
  call fastcc void @__device_link_del(ptr noundef %kref88.i) #22
  %cmp50.not.i = icmp eq ptr %.pn115.i139, %consumers.i
  br i1 %cmp50.not.i, label %if.end80.i.for.end95.i_crit_edge, label %if.end80.i.for.body53.i_crit_edge

if.end80.i.for.body53.i_crit_edge:                ; preds = %if.end80.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body53.i

if.end80.i.for.end95.i_crit_edge:                 ; preds = %if.end80.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end95.i

for.end95.i:                                      ; preds = %if.end80.i.for.end95.i_crit_edge, %for.end.i.for.end95.i_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  br label %device_links_purge.exit

device_links_purge.exit:                          ; preds = %for.end95.i, %device_platform_notify_remove.exit.device_links_purge.exit_crit_edge
  %71 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %bus, align 8
  %tobool45.not = icmp eq ptr %72, null
  br i1 %tobool45.not, label %device_links_purge.exit.if.end51_crit_edge, label %if.then46

device_links_purge.exit.if.end51_crit_edge:       ; preds = %device_links_purge.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end51

if.then46:                                        ; preds = %device_links_purge.exit
  call void @__sanitizer_cov_trace_pc() #24
  %p48 = getelementptr inbounds %struct.bus_type, ptr %72, i32 0, i32 20
  %73 = ptrtoint ptr %p48 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %p48, align 4
  %bus_notifier49 = getelementptr inbounds %struct.subsys_private, ptr %74, i32 0, i32 7
  %call50 = call i32 @blocking_notifier_call_chain(ptr noundef %bus_notifier49, i32 noundef 3, ptr noundef %dev) #22
  br label %if.end51

if.end51:                                         ; preds = %if.then46, %device_links_purge.exit.if.end51_crit_edge
  %call52 = call i32 @kobject_uevent(ptr noundef %dev, i32 noundef 1) #22
  %parent.i = getelementptr inbounds %struct.kobject, ptr %dev, i32 0, i32 2
  %75 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %parent.i, align 4
  call void @kobject_del(ptr noundef %dev) #22
  call fastcc void @cleanup_glue_dir(ptr noundef %dev, ptr noundef %76)
  %77 = call i32 @llvm.read_register.i32(metadata !512) #22
  %and.i.i117 = and i32 %77, -16384
  %78 = inttoptr i32 %and.i.i117 to ptr
  %task.i118 = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 2
  %79 = ptrtoint ptr %task.i118 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %task.i118, align 8
  %flags1.i119 = getelementptr inbounds %struct.task_struct, ptr %80, i32 0, i32 3
  %81 = ptrtoint ptr %flags1.i119 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %flags1.i119, align 4
  %and.i120 = and i32 %82, -524289
  %or.i121 = or i32 %and.i120, %and.i
  store i32 %or.i121, ptr %flags1.i119, align 4
  br i1 %tobool12.not, label %if.end51.put_device.exit_crit_edge, label %if.then.i123

if.end51.put_device.exit_crit_edge:               ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then.i123:                                     ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #24
  call void @kobject_put(ptr noundef nonnull %1) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %if.then.i123, %if.end51.put_device.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @klist_del(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devtmpfs_delete_node(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @driver_deferred_probe_del(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_unregister(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_unregister.__UNIQUE_ID_ddebug393, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@device_unregister, %do.end)) #22
          to label %if.then [label %do.end], !srcloc !522

if.then:                                          ; preds = %entry
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %0 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.dev_name.exit_crit_edge

if.then.dev_name.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then.dev_name.exit_crit_edge
  %retval.0.i7 = phi ptr [ %3, %if.end.i ], [ %1, %if.then.dev_name.exit_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @device_unregister.__UNIQUE_ID_ddebug393, ptr noundef nonnull @.str.28, ptr noundef %retval.0.i7, ptr noundef nonnull @.str.29) #22
  br label %do.end

do.end:                                           ; preds = %dev_name.exit, %entry
  tail call void @device_del(ptr noundef %dev)
  %tobool.not.i8 = icmp eq ptr %dev, null
  br i1 %tobool.not.i8, label %do.end.put_device.exit_crit_edge, label %if.then.i

do.end.put_device.exit_crit_edge:                 ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then.i:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %dev) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %if.then.i, %do.end.put_device.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @device_get_devnode(ptr noundef %dev, ptr noundef %mode, ptr noundef %uid, ptr noundef %gid, ptr nocapture noundef %tmp) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %tmp, align 4
  %type = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %1 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %type, align 4
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %land.lhs.true

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

land.lhs.true:                                    ; preds = %entry
  %devnode = getelementptr inbounds %struct.device_type, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %devnode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %devnode, align 4
  %tobool2.not = icmp eq ptr %4, null
  br i1 %tobool2.not, label %if.endthread-pre-split, label %if.then

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  %call = tail call ptr %4(ptr noundef %dev, ptr noundef %mode, ptr noundef %uid, ptr noundef %gid) #22
  %5 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call, ptr %tmp, align 4
  br label %if.end

if.endthread-pre-split:                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  %6 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pr = load ptr, ptr %tmp, align 4
  br label %if.end

if.end:                                           ; preds = %if.endthread-pre-split, %if.then
  %7 = phi ptr [ %.pr, %if.endthread-pre-split ], [ %call, %if.then ]
  %tobool5.not = icmp eq ptr %7, null
  br i1 %tobool5.not, label %if.end.if.end7_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.end7:                                          ; preds = %if.end.if.end7_crit_edge, %entry.if.end7_crit_edge
  %class = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %8 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %class, align 4
  %tobool8.not = icmp eq ptr %9, null
  br i1 %tobool8.not, label %if.end7.if.end17thread-pre-split_crit_edge, label %land.lhs.true9

if.end7.if.end17thread-pre-split_crit_edge:       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17thread-pre-split

land.lhs.true9:                                   ; preds = %if.end7
  %devnode11 = getelementptr inbounds %struct.class, ptr %9, i32 0, i32 6
  %10 = ptrtoint ptr %devnode11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %devnode11, align 4
  %tobool12.not = icmp eq ptr %11, null
  br i1 %tobool12.not, label %land.lhs.true9.if.end17thread-pre-split_crit_edge, label %if.then13

land.lhs.true9.if.end17thread-pre-split_crit_edge: ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17thread-pre-split

if.then13:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #24
  %call16 = tail call ptr %11(ptr noundef %dev, ptr noundef %mode) #22
  %12 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call16, ptr %tmp, align 4
  br label %if.end17

if.end17thread-pre-split:                         ; preds = %land.lhs.true9.if.end17thread-pre-split_crit_edge, %if.end7.if.end17thread-pre-split_crit_edge
  %13 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pr68 = load ptr, ptr %tmp, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.end17thread-pre-split, %if.then13
  %14 = phi ptr [ %.pr68, %if.end17thread-pre-split ], [ %call16, %if.then13 ]
  %tobool18.not = icmp eq ptr %14, null
  br i1 %tobool18.not, label %if.end20, label %if.end17.cleanup_crit_edge

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end20:                                         ; preds = %if.end17
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %15 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %dev_name.exit, label %dev_name.exit.thread

dev_name.exit:                                    ; preds = %if.end20
  %17 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dev, align 4
  %call22 = tail call ptr @strchr(ptr noundef %18, i32 noundef 33)
  %cmp = icmp eq ptr %call22, null
  br i1 %cmp, label %dev_name.exit.cleanup_crit_edge, label %dev_name.exit.dev_name.exit66_crit_edge

dev_name.exit.dev_name.exit66_crit_edge:          ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit66

dev_name.exit.cleanup_crit_edge:                  ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

dev_name.exit.thread:                             ; preds = %if.end20
  %call2270 = tail call ptr @strchr(ptr noundef nonnull %16, i32 noundef 33)
  %cmp71 = icmp eq ptr %call2270, null
  br i1 %cmp71, label %dev_name.exit.thread.cleanup_crit_edge, label %dev_name.exit.thread.dev_name.exit66_crit_edge

dev_name.exit.thread.dev_name.exit66_crit_edge:   ; preds = %dev_name.exit.thread
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit66

dev_name.exit.thread.cleanup_crit_edge:           ; preds = %dev_name.exit.thread
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

dev_name.exit66:                                  ; preds = %dev_name.exit.thread.dev_name.exit66_crit_edge, %dev_name.exit.dev_name.exit66_crit_edge
  %retval.0.i65 = phi ptr [ %16, %dev_name.exit.thread.dev_name.exit66_crit_edge ], [ %18, %dev_name.exit.dev_name.exit66_crit_edge ]
  %call27 = tail call noalias ptr @kstrdup(ptr noundef %retval.0.i65, i32 noundef 3264) #22
  %tobool28.not = icmp eq ptr %call27, null
  br i1 %tobool28.not, label %dev_name.exit66.cleanup_crit_edge, label %if.end30

dev_name.exit66.cleanup_crit_edge:                ; preds = %dev_name.exit66
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end30:                                         ; preds = %dev_name.exit66
  call void @__sanitizer_cov_trace_pc() #24
  %call31 = tail call ptr @strreplace(ptr noundef nonnull %call27, i8 noundef zeroext 33, i8 noundef zeroext 47) #22
  %19 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call27, ptr %tmp, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end30, %dev_name.exit66.cleanup_crit_edge, %dev_name.exit.thread.cleanup_crit_edge, %dev_name.exit.cleanup_crit_edge, %if.end17.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi ptr [ %call27, %if.end30 ], [ %7, %if.end.cleanup_crit_edge ], [ %14, %if.end17.cleanup_crit_edge ], [ null, %dev_name.exit66.cleanup_crit_edge ], [ %16, %dev_name.exit.thread.cleanup_crit_edge ], [ %18, %dev_name.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strreplace(ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @klist_iter_init(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @klist_iter_exit(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_for_each_child_reverse(ptr nocapture noundef readonly %parent, ptr noundef %data, ptr nocapture noundef readonly %fn) #1 align 64 {
entry:
  %i = alloca %struct.klist_iter, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i) #22
  %0 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %i, align 4, !annotation !524
  %1 = getelementptr inbounds %struct.klist_iter, ptr %i, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !524
  %p = getelementptr inbounds %struct.device, ptr %parent, i32 0, i32 2
  %3 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %p, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @klist_iter_init(ptr noundef nonnull %4, ptr noundef nonnull %i) #22
  %call.i13 = call ptr @klist_prev(ptr noundef nonnull %i) #22
  %tobool.not.i14 = icmp eq ptr %call.i13, null
  br i1 %tobool.not.i14, label %if.end.while.end_crit_edge, label %if.end.prev_device.exit_crit_edge

if.end.prev_device.exit_crit_edge:                ; preds = %if.end
  br label %prev_device.exit

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

prev_device.exit:                                 ; preds = %while.body.prev_device.exit_crit_edge, %if.end.prev_device.exit_crit_edge
  %call.i16 = phi ptr [ %call.i, %while.body.prev_device.exit_crit_edge ], [ %call.i13, %if.end.prev_device.exit_crit_edge ]
  %error.015 = phi i32 [ %call4, %while.body.prev_device.exit_crit_edge ], [ 0, %if.end.prev_device.exit_crit_edge ]
  %device.i = getelementptr i8, ptr %call.i16, i32 80
  %5 = ptrtoint ptr %device.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %device.i, align 4
  %tobool2.not = icmp ne ptr %6, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.015)
  %tobool3.not = icmp eq i32 %error.015, 0
  %or.cond = select i1 %tobool2.not, i1 %tobool3.not, i1 false
  br i1 %or.cond, label %while.body, label %prev_device.exit.while.end_crit_edge

prev_device.exit.while.end_crit_edge:             ; preds = %prev_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %prev_device.exit
  %call4 = call i32 %fn(ptr noundef nonnull %6, ptr noundef %data) #22
  %call.i = call ptr @klist_prev(ptr noundef nonnull %i) #22
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %while.body.while.end_crit_edge, label %while.body.prev_device.exit_crit_edge

while.body.prev_device.exit_crit_edge:            ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %prev_device.exit

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %prev_device.exit.while.end_crit_edge, %if.end.while.end_crit_edge
  %error.0.lcssa = phi i32 [ 0, %if.end.while.end_crit_edge ], [ %call4, %while.body.while.end_crit_edge ], [ %error.015, %prev_device.exit.while.end_crit_edge ]
  call void @klist_iter_exit(ptr noundef nonnull %i) #22
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %error.0.lcssa, %while.end ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @device_find_child(ptr noundef readonly %parent, ptr noundef %data, ptr nocapture noundef readonly %match) #1 align 64 {
entry:
  %i = alloca %struct.klist_iter, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i) #22
  %0 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %i, align 4, !annotation !524
  %1 = getelementptr inbounds %struct.klist_iter, ptr %i, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !524
  %tobool.not = icmp eq ptr %parent, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %p = getelementptr inbounds %struct.device, ptr %parent, i32 0, i32 2
  %3 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %p, align 4
  call void @klist_iter_init(ptr noundef %4, ptr noundef nonnull %i) #22
  %call.i17 = call ptr @klist_next(ptr noundef nonnull %i) #22
  %tobool.not.i18 = icmp eq ptr %call.i17, null
  br i1 %tobool.not.i18, label %if.end.while.end_crit_edge, label %if.end.next_device.exit_crit_edge

if.end.next_device.exit_crit_edge:                ; preds = %if.end
  br label %next_device.exit

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

next_device.exit:                                 ; preds = %if.end7.next_device.exit_crit_edge, %if.end.next_device.exit_crit_edge
  %call.i19 = phi ptr [ %call.i, %if.end7.next_device.exit_crit_edge ], [ %call.i17, %if.end.next_device.exit_crit_edge ]
  %device.i = getelementptr i8, ptr %call.i19, i32 80
  %5 = ptrtoint ptr %device.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %device.i, align 4
  %tobool1.not = icmp eq ptr %6, null
  br i1 %tobool1.not, label %next_device.exit.while.end_crit_edge, label %while.body

next_device.exit.while.end_crit_edge:             ; preds = %next_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %next_device.exit
  %call2 = call i32 %match(ptr noundef nonnull %6, ptr noundef %data) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %while.body.if.end7_crit_edge, label %get_device.exit

while.body.if.end7_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

get_device.exit:                                  ; preds = %while.body
  %call.i13 = call ptr @kobject_get(ptr noundef nonnull %6) #22
  %tobool5.not = icmp eq ptr %call.i13, null
  br i1 %tobool5.not, label %get_device.exit.if.end7_crit_edge, label %get_device.exit.while.end_crit_edge

get_device.exit.while.end_crit_edge:              ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

get_device.exit.if.end7_crit_edge:                ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.end7:                                          ; preds = %get_device.exit.if.end7_crit_edge, %while.body.if.end7_crit_edge
  %call.i = call ptr @klist_next(ptr noundef nonnull %i) #22
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end7.while.end_crit_edge, label %if.end7.next_device.exit_crit_edge

if.end7.next_device.exit_crit_edge:               ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_device.exit

if.end7.while.end_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %if.end7.while.end_crit_edge, %get_device.exit.while.end_crit_edge, %next_device.exit.while.end_crit_edge, %if.end.while.end_crit_edge
  %dev.0.i16 = phi ptr [ null, %if.end.while.end_crit_edge ], [ null, %if.end7.while.end_crit_edge ], [ %6, %get_device.exit.while.end_crit_edge ], [ null, %next_device.exit.while.end_crit_edge ]
  call void @klist_iter_exit(ptr noundef nonnull %i) #22
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %dev.0.i16, %while.end ], [ null, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i) #22
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @device_find_child_by_name(ptr noundef readonly %parent, ptr noundef %name) #1 align 64 {
entry:
  %i = alloca %struct.klist_iter, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i) #22
  %0 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %i, align 4, !annotation !524
  %1 = getelementptr inbounds %struct.klist_iter, ptr %i, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !524
  %tobool.not = icmp eq ptr %parent, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %p = getelementptr inbounds %struct.device, ptr %parent, i32 0, i32 2
  %3 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %p, align 4
  call void @klist_iter_init(ptr noundef %4, ptr noundef nonnull %i) #22
  %call.i18 = call ptr @klist_next(ptr noundef nonnull %i) #22
  %tobool.not.i19 = icmp eq ptr %call.i18, null
  br i1 %tobool.not.i19, label %if.end.while.end_crit_edge, label %if.end.next_device.exit_crit_edge

if.end.next_device.exit_crit_edge:                ; preds = %if.end
  br label %next_device.exit

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

next_device.exit:                                 ; preds = %if.end7.next_device.exit_crit_edge, %if.end.next_device.exit_crit_edge
  %call.i20 = phi ptr [ %call.i, %if.end7.next_device.exit_crit_edge ], [ %call.i18, %if.end.next_device.exit_crit_edge ]
  %device.i = getelementptr i8, ptr %call.i20, i32 80
  %5 = ptrtoint ptr %device.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %device.i, align 4
  %tobool1.not = icmp eq ptr %6, null
  br i1 %tobool1.not, label %next_device.exit.while.end_crit_edge, label %while.body

next_device.exit.while.end_crit_edge:             ; preds = %next_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %next_device.exit
  %init_name.i = getelementptr inbounds %struct.device, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i12 = icmp eq ptr %8, null
  br i1 %tobool.not.i12, label %if.end.i, label %while.body.dev_name.exit_crit_edge

while.body.dev_name.exit_crit_edge:               ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %6, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %while.body.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %10, %if.end.i ], [ %8, %while.body.dev_name.exit_crit_edge ]
  %call3 = call zeroext i1 @sysfs_streq(ptr noundef %retval.0.i, ptr noundef %name) #22
  br i1 %call3, label %get_device.exit, label %dev_name.exit.if.end7_crit_edge

dev_name.exit.if.end7_crit_edge:                  ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

get_device.exit:                                  ; preds = %dev_name.exit
  %call.i14 = call ptr @kobject_get(ptr noundef nonnull %6) #22
  %tobool5.not = icmp eq ptr %call.i14, null
  br i1 %tobool5.not, label %get_device.exit.if.end7_crit_edge, label %get_device.exit.while.end_crit_edge

get_device.exit.while.end_crit_edge:              ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

get_device.exit.if.end7_crit_edge:                ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.end7:                                          ; preds = %get_device.exit.if.end7_crit_edge, %dev_name.exit.if.end7_crit_edge
  %call.i = call ptr @klist_next(ptr noundef nonnull %i) #22
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end7.while.end_crit_edge, label %if.end7.next_device.exit_crit_edge

if.end7.next_device.exit_crit_edge:               ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_device.exit

if.end7.while.end_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %if.end7.while.end_crit_edge, %get_device.exit.while.end_crit_edge, %next_device.exit.while.end_crit_edge, %if.end.while.end_crit_edge
  %dev.0.i17 = phi ptr [ null, %if.end.while.end_crit_edge ], [ null, %if.end7.while.end_crit_edge ], [ %6, %get_device.exit.while.end_crit_edge ], [ null, %next_device.exit.while.end_crit_edge ]
  call void @klist_iter_exit(ptr noundef nonnull %i) #22
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %dev.0.i17, %while.end ], [ null, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i) #22
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @sysfs_streq(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @devices_init() local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kset_create_and_add(ptr noundef nonnull @.str.30, ptr noundef nonnull @device_uevent_ops, ptr noundef null) #22
  store ptr %call, ptr @devices_kset, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @kobject_create_and_add(ptr noundef nonnull @.str.31, ptr noundef null) #22
  store ptr %call1, ptr @dev_kobj, align 4
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.dev_kobj_err_crit_edge, label %if.end4

if.end.dev_kobj_err_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_kobj_err

if.end4:                                          ; preds = %if.end
  %call5 = tail call ptr @kobject_create_and_add(ptr noundef nonnull @.str.32, ptr noundef nonnull %call1) #22
  store ptr %call5, ptr @sysfs_dev_block_kobj, align 4
  %tobool6.not = icmp eq ptr %call5, null
  br i1 %tobool6.not, label %if.end4.block_kobj_err_crit_edge, label %if.end8

if.end4.block_kobj_err_crit_edge:                 ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #24
  br label %block_kobj_err

if.end8:                                          ; preds = %if.end4
  %0 = load ptr, ptr @dev_kobj, align 4
  %call9 = tail call ptr @kobject_create_and_add(ptr noundef nonnull @.str.33, ptr noundef %0) #22
  store ptr %call9, ptr @sysfs_dev_char_kobj, align 4
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %char_kobj_err, label %if.end8.return_crit_edge

if.end8.return_crit_edge:                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

char_kobj_err:                                    ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  %1 = load ptr, ptr @sysfs_dev_block_kobj, align 4
  tail call void @kobject_put(ptr noundef %1) #22
  br label %block_kobj_err

block_kobj_err:                                   ; preds = %char_kobj_err, %if.end4.block_kobj_err_crit_edge
  %2 = load ptr, ptr @dev_kobj, align 4
  tail call void @kobject_put(ptr noundef %2) #22
  br label %dev_kobj_err

dev_kobj_err:                                     ; preds = %block_kobj_err, %if.end.dev_kobj_err_crit_edge
  %3 = load ptr, ptr @devices_kset, align 4
  tail call void @kset_unregister(ptr noundef %3) #22
  br label %return

return:                                           ; preds = %dev_kobj_err, %if.end8.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -12, %dev_kobj_err ], [ -12, %entry.return_crit_edge ], [ 0, %if.end8.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kset_create_and_add(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kset_unregister(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_offline(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  %i.i = alloca %struct.klist_iter, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %offline_disabled = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 39
  %0 = ptrtoint ptr %offline_disabled to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %offline_disabled, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %bf.cast.not = icmp sgt i8 %bf.load, -1
  br i1 %bf.cast.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i.i) #22
  %1 = ptrtoint ptr %i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %i.i, align 4, !annotation !524
  %2 = getelementptr inbounds %struct.klist_iter, ptr %i.i, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %2, align 4, !annotation !524
  %p.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 2
  %4 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %p.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %device_for_each_child.exit.thread, label %if.end.i

device_for_each_child.exit.thread:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %if.end2

if.end.i:                                         ; preds = %if.end
  call void @klist_iter_init(ptr noundef nonnull %5, ptr noundef nonnull %i.i) #22
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i.land.rhs.i_crit_edge, %if.end.i
  %call.i.i = call ptr @klist_next(ptr noundef nonnull %i.i) #22
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %land.rhs.i.device_for_each_child.exit.thread38_crit_edge, label %next_device.exit.i

land.rhs.i.device_for_each_child.exit.thread38_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_for_each_child.exit.thread38

next_device.exit.i:                               ; preds = %land.rhs.i
  %device.i.i = getelementptr i8, ptr %call.i.i, i32 80
  %6 = ptrtoint ptr %device.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %device.i.i, align 4
  %tobool3.not.i = icmp eq ptr %7, null
  br i1 %tobool3.not.i, label %next_device.exit.i.device_for_each_child.exit.thread38_crit_edge, label %while.body.i

next_device.exit.i.device_for_each_child.exit.thread38_crit_edge: ; preds = %next_device.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_for_each_child.exit.thread38

while.body.i:                                     ; preds = %next_device.exit.i
  %call4.i = call fastcc i32 @device_check_offline(ptr noundef nonnull %7, ptr noundef null) #22
  %tobool2.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool2.not.i, label %while.body.i.land.rhs.i_crit_edge, label %device_for_each_child.exit

while.body.i.land.rhs.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i

device_for_each_child.exit.thread38:              ; preds = %next_device.exit.i.device_for_each_child.exit.thread38_crit_edge, %land.rhs.i.device_for_each_child.exit.thread38_crit_edge
  call void @klist_iter_exit(ptr noundef nonnull %i.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %if.end2

device_for_each_child.exit:                       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @klist_iter_exit(ptr noundef nonnull %i.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %cleanup

if.end2:                                          ; preds = %device_for_each_child.exit.thread38, %device_for_each_child.exit.thread
  %mutex.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10
  call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #22
  %bus.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %8 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bus.i, align 8
  %tobool.not.i32 = icmp eq ptr %9, null
  br i1 %tobool.not.i32, label %if.end2.if.end19_crit_edge, label %land.lhs.true.i

if.end2.if.end19_crit_edge:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end19

land.lhs.true.i:                                  ; preds = %if.end2
  %offline.i = getelementptr inbounds %struct.bus_type, ptr %9, i32 0, i32 13
  %10 = ptrtoint ptr %offline.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %offline.i, align 4
  %tobool2.not.i33 = icmp eq ptr %11, null
  br i1 %tobool2.not.i33, label %land.lhs.true.i.if.end19_crit_edge, label %device_supports_offline.exit

land.lhs.true.i.if.end19_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end19

device_supports_offline.exit:                     ; preds = %land.lhs.true.i
  %online.i = getelementptr inbounds %struct.bus_type, ptr %9, i32 0, i32 12
  %12 = ptrtoint ptr %online.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %online.i, align 4
  %tobool4.i.not = icmp eq ptr %13, null
  br i1 %tobool4.i.not, label %device_supports_offline.exit.if.end19_crit_edge, label %if.then4

device_supports_offline.exit.if.end19_crit_edge:  ; preds = %device_supports_offline.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end19

if.then4:                                         ; preds = %device_supports_offline.exit
  %14 = ptrtoint ptr %offline_disabled to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load5 = load i8, ptr %offline_disabled, align 4
  %15 = and i8 %bf.load5, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %bf.cast7.not = icmp eq i8 %15, 0
  br i1 %bf.cast7.not, label %if.else, label %if.then4.if.end19_crit_edge

if.then4.if.end19_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end19

if.else:                                          ; preds = %if.then4
  %16 = ptrtoint ptr %offline.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %offline.i, align 4
  %call10 = call i32 %17(ptr noundef %dev) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.then12, label %if.else.if.end19_crit_edge

if.else.if.end19_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end19

if.then12:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %call13 = call i32 @kobject_uevent(ptr noundef %dev, i32 noundef 5) #22
  %18 = ptrtoint ptr %offline_disabled to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load15 = load i8, ptr %offline_disabled, align 4
  %bf.set = or i8 %bf.load15, 64
  store i8 %bf.set, ptr %offline_disabled, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then12, %if.else.if.end19_crit_edge, %if.then4.if.end19_crit_edge, %device_supports_offline.exit.if.end19_crit_edge, %land.lhs.true.i.if.end19_crit_edge, %if.end2.if.end19_crit_edge
  %ret.0 = phi i32 [ %call10, %if.else.if.end19_crit_edge ], [ 0, %if.then12 ], [ 0, %device_supports_offline.exit.if.end19_crit_edge ], [ 1, %if.then4.if.end19_crit_edge ], [ 0, %land.lhs.true.i.if.end19_crit_edge ], [ 0, %if.end2.if.end19_crit_edge ]
  call void @mutex_unlock(ptr noundef %mutex.i) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %device_for_each_child.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %if.end19 ], [ -1, %entry.cleanup_crit_edge ], [ %call4.i, %device_for_each_child.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @device_check_offline(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %not_used) unnamed_addr #1 align 64 {
entry:
  %i.i = alloca %struct.klist_iter, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i.i) #22
  %0 = ptrtoint ptr %i.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %i.i, align 4, !annotation !524
  %1 = getelementptr inbounds %struct.klist_iter, ptr %i.i, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !524
  %p.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 2
  %3 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %p.i, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %device_for_each_child.exit.thread, label %if.end.i

device_for_each_child.exit.thread:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %if.end

if.end.i:                                         ; preds = %entry
  call void @klist_iter_init(ptr noundef nonnull %4, ptr noundef nonnull %i.i) #22
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i.land.rhs.i_crit_edge, %if.end.i
  %call.i.i = call ptr @klist_next(ptr noundef nonnull %i.i) #22
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %land.rhs.i.device_for_each_child.exit.thread10_crit_edge, label %next_device.exit.i

land.rhs.i.device_for_each_child.exit.thread10_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_for_each_child.exit.thread10

next_device.exit.i:                               ; preds = %land.rhs.i
  %device.i.i = getelementptr i8, ptr %call.i.i, i32 80
  %5 = ptrtoint ptr %device.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %device.i.i, align 4
  %tobool3.not.i = icmp eq ptr %6, null
  br i1 %tobool3.not.i, label %next_device.exit.i.device_for_each_child.exit.thread10_crit_edge, label %while.body.i

next_device.exit.i.device_for_each_child.exit.thread10_crit_edge: ; preds = %next_device.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_for_each_child.exit.thread10

while.body.i:                                     ; preds = %next_device.exit.i
  %call4.i = call fastcc i32 @device_check_offline(ptr noundef nonnull %6, ptr noundef null) #22
  %tobool2.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool2.not.i, label %while.body.i.land.rhs.i_crit_edge, label %device_for_each_child.exit

while.body.i.land.rhs.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i

device_for_each_child.exit.thread10:              ; preds = %next_device.exit.i.device_for_each_child.exit.thread10_crit_edge, %land.rhs.i.device_for_each_child.exit.thread10_crit_edge
  call void @klist_iter_exit(ptr noundef nonnull %i.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %if.end

device_for_each_child.exit:                       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @klist_iter_exit(ptr noundef nonnull %i.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %cleanup

if.end:                                           ; preds = %device_for_each_child.exit.thread10, %device_for_each_child.exit.thread
  %bus.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %7 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bus.i, align 8
  %tobool.not.i5 = icmp eq ptr %8, null
  br i1 %tobool.not.i5, label %if.end.cleanup_crit_edge, label %land.lhs.true.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.end
  %offline.i = getelementptr inbounds %struct.bus_type, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %offline.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %offline.i, align 4
  %tobool2.not.i6 = icmp eq ptr %10, null
  br i1 %tobool2.not.i6, label %land.lhs.true.i.cleanup_crit_edge, label %device_supports_offline.exit

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

device_supports_offline.exit:                     ; preds = %land.lhs.true.i
  %online.i = getelementptr inbounds %struct.bus_type, ptr %8, i32 0, i32 12
  %11 = ptrtoint ptr %online.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %online.i, align 4
  %tobool4.i.not = icmp eq ptr %12, null
  br i1 %tobool4.i.not, label %device_supports_offline.exit.cleanup_crit_edge, label %land.rhs

device_supports_offline.exit.cleanup_crit_edge:   ; preds = %device_supports_offline.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.rhs:                                         ; preds = %device_supports_offline.exit
  call void @__sanitizer_cov_trace_pc() #24
  %offline = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 39
  %13 = ptrtoint ptr %offline to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load = load i8, ptr %offline, align 4
  %14 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %bf.cast.not = icmp eq i8 %14, 0
  %phi.sel = select i1 %bf.cast.not, i32 -16, i32 0
  br label %cleanup

cleanup:                                          ; preds = %land.rhs, %device_supports_offline.exit.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %device_for_each_child.exit
  %retval.0 = phi i32 [ %call4.i, %device_for_each_child.exit ], [ 0, %device_supports_offline.exit.cleanup_crit_edge ], [ %phi.sel, %land.rhs ], [ 0, %land.lhs.true.i.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_online(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mutex.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #22
  %bus.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %0 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end9_crit_edge, label %land.lhs.true.i

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9

land.lhs.true.i:                                  ; preds = %entry
  %offline.i = getelementptr inbounds %struct.bus_type, ptr %1, i32 0, i32 13
  %2 = ptrtoint ptr %offline.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %offline.i, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end9_crit_edge, label %device_supports_offline.exit

land.lhs.true.i.if.end9_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9

device_supports_offline.exit:                     ; preds = %land.lhs.true.i
  %online.i = getelementptr inbounds %struct.bus_type, ptr %1, i32 0, i32 12
  %4 = ptrtoint ptr %online.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %online.i, align 4
  %tobool4.i.not = icmp eq ptr %5, null
  br i1 %tobool4.i.not, label %device_supports_offline.exit.if.end9_crit_edge, label %if.then

device_supports_offline.exit.if.end9_crit_edge:   ; preds = %device_supports_offline.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9

if.then:                                          ; preds = %device_supports_offline.exit
  %offline = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 39
  %6 = ptrtoint ptr %offline to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load = load i8, ptr %offline, align 4
  %7 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %bf.cast.not = icmp eq i8 %7, 0
  br i1 %bf.cast.not, label %if.then.if.end9_crit_edge, label %if.then1

if.then.if.end9_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9

if.then1:                                         ; preds = %if.then
  %8 = ptrtoint ptr %online.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %online.i, align 4
  %call2 = tail call i32 %9(ptr noundef %dev) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.then3, label %if.then1.if.end9_crit_edge

if.then1.if.end9_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9

if.then3:                                         ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #24
  %call4 = tail call i32 @kobject_uevent(ptr noundef %dev, i32 noundef 4) #22
  %10 = ptrtoint ptr %offline to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load6 = load i8, ptr %offline, align 4
  %bf.clear7 = and i8 %bf.load6, -65
  store i8 %bf.clear7, ptr %offline, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then3, %if.then1.if.end9_crit_edge, %if.then.if.end9_crit_edge, %device_supports_offline.exit.if.end9_crit_edge, %land.lhs.true.i.if.end9_crit_edge, %entry.if.end9_crit_edge
  %ret.0 = phi i32 [ %call2, %if.then1.if.end9_crit_edge ], [ 0, %if.then3 ], [ 0, %device_supports_offline.exit.if.end9_crit_edge ], [ 1, %if.then.if.end9_crit_edge ], [ 0, %land.lhs.true.i.if.end9_crit_edge ], [ 0, %entry.if.end9_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %mutex.i) #22
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__root_device_register(ptr noundef %name, ptr noundef %owner) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 936) #25
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup28_crit_edge, label %if.end

entry.cleanup28_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup28

if.end:                                           ; preds = %entry
  %call2 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @.str.25, ptr noundef %name)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #22
  %1 = inttoptr i32 %call2 to ptr
  br label %cleanup28

if.end6:                                          ; preds = %if.end
  %release = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 35
  %2 = ptrtoint ptr %release to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @root_device_release, ptr %release, align 4
  tail call void @device_initialize(ptr noundef nonnull %call7.i.i) #22
  %call.i = tail call i32 @device_add(ptr noundef nonnull %call7.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool10.not = icmp eq i32 %call.i, 0
  br i1 %tobool10.not, label %if.end14, label %put_device.exit

put_device.exit:                                  ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %call7.i.i) #22
  %3 = inttoptr i32 %call.i to ptr
  br label %cleanup28

if.end14:                                         ; preds = %if.end6
  %tobool15.not = icmp eq ptr %owner, null
  br i1 %tobool15.not, label %if.end14.cleanup28_crit_edge, label %if.then16

if.end14.cleanup28_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup28

if.then16:                                        ; preds = %if.end14
  %mkobj = getelementptr inbounds %struct.module, ptr %owner, i32 0, i32 4
  %call19 = tail call i32 @sysfs_create_link(ptr noundef nonnull %call7.i.i, ptr noundef %mkobj, ptr noundef nonnull @.str.34) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %cleanup.thread, label %if.then21

if.then21:                                        ; preds = %if.then16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_unregister.__UNIQUE_ID_ddebug393, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@__root_device_register, %cleanup)) #22
          to label %if.then.i47 [label %cleanup], !srcloc !522

if.then.i47:                                      ; preds = %if.then21
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 3
  %4 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i47.dev_name.exit.i_crit_edge

if.then.i47.dev_name.exit.i_crit_edge:            ; preds = %if.then.i47
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then.i47
  call void @__sanitizer_cov_trace_pc() #24
  %6 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %call7.i.i, align 8
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then.i47.dev_name.exit.i_crit_edge
  %retval.0.i7.i = phi ptr [ %7, %if.end.i.i ], [ %5, %if.then.i47.dev_name.exit.i_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @device_unregister.__UNIQUE_ID_ddebug393, ptr noundef nonnull @.str.28, ptr noundef %retval.0.i7.i, ptr noundef nonnull @.str.29) #22
  br label %cleanup

cleanup.thread:                                   ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  %owner25 = getelementptr inbounds %struct.root_device, ptr %call7.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %owner25 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %owner, ptr %owner25, align 8
  br label %cleanup28

cleanup:                                          ; preds = %dev_name.exit.i, %if.then21
  tail call void @device_del(ptr noundef nonnull %call7.i.i) #22
  tail call void @kobject_put(ptr noundef nonnull %call7.i.i) #22
  %9 = inttoptr i32 %call19 to ptr
  br label %cleanup28

cleanup28:                                        ; preds = %cleanup, %cleanup.thread, %if.end14.cleanup28_crit_edge, %put_device.exit, %if.then4, %entry.cleanup28_crit_edge
  %retval.1 = phi ptr [ %1, %if.then4 ], [ %3, %put_device.exit ], [ %9, %cleanup ], [ inttoptr (i32 -12 to ptr), %entry.cleanup28_crit_edge ], [ %call7.i.i, %cleanup.thread ], [ %call7.i.i, %if.end14.cleanup28_crit_edge ]
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @root_device_release(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %dev) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_link(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @root_device_unregister(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %owner = getelementptr inbounds %struct.root_device, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %owner, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_link(ptr noundef %dev, ptr noundef nonnull @.str.34) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_unregister.__UNIQUE_ID_ddebug393, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@root_device_unregister, %do.end.i)) #22
          to label %if.then.i [label %do.end.i], !srcloc !522

if.then.i:                                        ; preds = %if.end
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %2 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.dev_name.exit.i_crit_edge

if.then.i.dev_name.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  %4 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then.i.dev_name.exit.i_crit_edge
  %retval.0.i7.i = phi ptr [ %5, %if.end.i.i ], [ %3, %if.then.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @device_unregister.__UNIQUE_ID_ddebug393, ptr noundef nonnull @.str.28, ptr noundef %retval.0.i7.i, ptr noundef nonnull @.str.29) #22
  br label %do.end.i

do.end.i:                                         ; preds = %dev_name.exit.i, %if.end
  tail call void @device_del(ptr noundef %dev) #22
  %tobool.not.i8.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i8.i, label %do.end.i.device_unregister.exit_crit_edge, label %if.then.i.i

do.end.i.device_unregister.exit_crit_edge:        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_unregister.exit

if.then.i.i:                                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %dev) #22
  br label %device_unregister.exit

device_unregister.exit:                           ; preds = %if.then.i.i, %do.end.i.device_unregister.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_link(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @device_create(ptr noundef %class, ptr noundef %parent, i32 noundef %devt, ptr noundef %drvdata, ptr noundef %fmt, ...) #1 align 64 {
entry:
  %vargs = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vargs) #22
  %0 = ptrtoint ptr %vargs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %vargs, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %vargs)
  %1 = ptrtoint ptr %vargs to i32
  call void @__asan_load4_noabort(i32 %1)
  %.fca.0.load = load i32, ptr %vargs, align 4
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %.fca.0.load, 0
  %cmp.i = icmp eq ptr %class, null
  %cmp.i.i = icmp ugt ptr %class, inttoptr (i32 -4096 to ptr)
  %or.cond.i = or i1 %cmp.i, %cmp.i.i
  br i1 %or.cond.i, label %entry.put_device.exit.i_crit_edge, label %if.end.i

entry.put_device.exit.i_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit.i

if.end.i:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 928) #25
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.end.i.put_device.exit.i_crit_edge, label %if.end4.i

if.end.i.put_device.exit.i_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit.i

if.end4.i:                                        ; preds = %if.end.i
  call void @device_initialize(ptr noundef nonnull %call7.i.i.i) #22
  %devt5.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 29
  %3 = ptrtoint ptr %devt5.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %devt, ptr %devt5.i, align 8
  %class6.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 33
  %4 = ptrtoint ptr %class6.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %class, ptr %class6.i, align 4
  %parent7.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %parent7.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %parent, ptr %parent7.i, align 8
  %groups8.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 34
  %6 = ptrtoint ptr %groups8.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %groups8.i, align 8
  %release.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 35
  %7 = ptrtoint ptr %release.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @device_create_release, ptr %release.i, align 4
  %driver_data.i.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 8
  %8 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %drvdata, ptr %driver_data.i.i, align 4
  %call10.i = call i32 @kobject_set_name_vargs(ptr noundef nonnull %call7.i.i.i, ptr noundef %fmt, [1 x i32] %.fca.0.insert) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %if.end13.i, label %if.end4.i.if.then.i.i_crit_edge

if.end4.i.if.then.i.i_crit_edge:                  ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i.i

if.end13.i:                                       ; preds = %if.end4.i
  %call14.i = call i32 @device_add(ptr noundef nonnull %call7.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %if.end13.i.device_create_groups_vargs.exit_crit_edge, label %if.end13.i.if.then.i.i_crit_edge

if.end13.i.if.then.i.i_crit_edge:                 ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i.i

if.end13.i.device_create_groups_vargs.exit_crit_edge: ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_groups_vargs.exit

if.then.i.i:                                      ; preds = %if.end13.i.if.then.i.i_crit_edge, %if.end4.i.if.then.i.i_crit_edge
  %retval1.0.i = phi i32 [ %call10.i, %if.end4.i.if.then.i.i_crit_edge ], [ %call14.i, %if.end13.i.if.then.i.i_crit_edge ]
  call void @kobject_put(ptr noundef nonnull %call7.i.i.i) #22
  br label %put_device.exit.i

put_device.exit.i:                                ; preds = %if.then.i.i, %if.end.i.put_device.exit.i_crit_edge, %entry.put_device.exit.i_crit_edge
  %retval1.038.i = phi i32 [ %retval1.0.i, %if.then.i.i ], [ -12, %if.end.i.put_device.exit.i_crit_edge ], [ -19, %entry.put_device.exit.i_crit_edge ]
  %9 = inttoptr i32 %retval1.038.i to ptr
  br label %device_create_groups_vargs.exit

device_create_groups_vargs.exit:                  ; preds = %put_device.exit.i, %if.end13.i.device_create_groups_vargs.exit_crit_edge
  %retval.0.i = phi ptr [ %9, %put_device.exit.i ], [ %call7.i.i.i, %if.end13.i.device_create_groups_vargs.exit_crit_edge ]
  call void @llvm.va_end(ptr nonnull %vargs)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vargs) #22
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @device_create_with_groups(ptr noundef %class, ptr noundef %parent, i32 noundef %devt, ptr noundef %drvdata, ptr noundef %groups, ptr noundef %fmt, ...) #1 align 64 {
entry:
  %vargs = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vargs) #22
  %0 = ptrtoint ptr %vargs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %vargs, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %vargs)
  %1 = ptrtoint ptr %vargs to i32
  call void @__asan_load4_noabort(i32 %1)
  %.fca.0.load = load i32, ptr %vargs, align 4
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %.fca.0.load, 0
  %cmp.i = icmp eq ptr %class, null
  %cmp.i.i = icmp ugt ptr %class, inttoptr (i32 -4096 to ptr)
  %or.cond.i = or i1 %cmp.i, %cmp.i.i
  br i1 %or.cond.i, label %entry.put_device.exit.i_crit_edge, label %if.end.i

entry.put_device.exit.i_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit.i

if.end.i:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 928) #25
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.end.i.put_device.exit.i_crit_edge, label %if.end4.i

if.end.i.put_device.exit.i_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit.i

if.end4.i:                                        ; preds = %if.end.i
  call void @device_initialize(ptr noundef nonnull %call7.i.i.i) #22
  %devt5.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 29
  %3 = ptrtoint ptr %devt5.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %devt, ptr %devt5.i, align 8
  %class6.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 33
  %4 = ptrtoint ptr %class6.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %class, ptr %class6.i, align 4
  %parent7.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %parent7.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %parent, ptr %parent7.i, align 8
  %groups8.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 34
  %6 = ptrtoint ptr %groups8.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %groups, ptr %groups8.i, align 8
  %release.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 35
  %7 = ptrtoint ptr %release.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @device_create_release, ptr %release.i, align 4
  %driver_data.i.i = getelementptr inbounds %struct.device, ptr %call7.i.i.i, i32 0, i32 8
  %8 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %drvdata, ptr %driver_data.i.i, align 4
  %call10.i = call i32 @kobject_set_name_vargs(ptr noundef nonnull %call7.i.i.i, ptr noundef %fmt, [1 x i32] %.fca.0.insert) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %if.end13.i, label %if.end4.i.if.then.i.i_crit_edge

if.end4.i.if.then.i.i_crit_edge:                  ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i.i

if.end13.i:                                       ; preds = %if.end4.i
  %call14.i = call i32 @device_add(ptr noundef nonnull %call7.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %if.end13.i.device_create_groups_vargs.exit_crit_edge, label %if.end13.i.if.then.i.i_crit_edge

if.end13.i.if.then.i.i_crit_edge:                 ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i.i

if.end13.i.device_create_groups_vargs.exit_crit_edge: ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_create_groups_vargs.exit

if.then.i.i:                                      ; preds = %if.end13.i.if.then.i.i_crit_edge, %if.end4.i.if.then.i.i_crit_edge
  %retval1.0.i = phi i32 [ %call10.i, %if.end4.i.if.then.i.i_crit_edge ], [ %call14.i, %if.end13.i.if.then.i.i_crit_edge ]
  call void @kobject_put(ptr noundef nonnull %call7.i.i.i) #22
  br label %put_device.exit.i

put_device.exit.i:                                ; preds = %if.then.i.i, %if.end.i.put_device.exit.i_crit_edge, %entry.put_device.exit.i_crit_edge
  %retval1.038.i = phi i32 [ %retval1.0.i, %if.then.i.i ], [ -12, %if.end.i.put_device.exit.i_crit_edge ], [ -19, %entry.put_device.exit.i_crit_edge ]
  %9 = inttoptr i32 %retval1.038.i to ptr
  br label %device_create_groups_vargs.exit

device_create_groups_vargs.exit:                  ; preds = %put_device.exit.i, %if.end13.i.device_create_groups_vargs.exit_crit_edge
  %retval.0.i = phi ptr [ %9, %put_device.exit.i ], [ %call7.i.i.i, %if.end13.i.device_create_groups_vargs.exit_crit_edge ]
  call void @llvm.va_end(ptr nonnull %vargs)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vargs) #22
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_destroy(ptr noundef %class, i32 noundef %devt) #1 align 64 {
entry:
  %devt.addr.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %devt.addr.i)
  %0 = ptrtoint ptr %devt.addr.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %devt, ptr %devt.addr.i, align 4
  %call.i = call ptr @class_find_device(ptr noundef %class, ptr noundef null, ptr noundef nonnull %devt.addr.i, ptr noundef nonnull @device_match_devt) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %devt.addr.i)
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %put_device.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

put_device.exit:                                  ; preds = %entry
  call void @kobject_put(ptr noundef nonnull %call.i) #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_unregister.__UNIQUE_ID_ddebug393, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@device_destroy, %device_unregister.exit)) #22
          to label %if.then.i3 [label %device_unregister.exit], !srcloc !522

if.then.i3:                                       ; preds = %put_device.exit
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 3
  %1 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %2, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i3.dev_name.exit.i_crit_edge

if.then.i3.dev_name.exit.i_crit_edge:             ; preds = %if.then.i3
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then.i3
  call void @__sanitizer_cov_trace_pc() #24
  %3 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %call.i, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then.i3.dev_name.exit.i_crit_edge
  %retval.0.i7.i = phi ptr [ %4, %if.end.i.i ], [ %2, %if.then.i3.dev_name.exit.i_crit_edge ]
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @device_unregister.__UNIQUE_ID_ddebug393, ptr noundef nonnull @.str.28, ptr noundef %retval.0.i7.i, ptr noundef nonnull @.str.29) #22
  br label %device_unregister.exit

device_unregister.exit:                           ; preds = %dev_name.exit.i, %put_device.exit
  call void @device_del(ptr noundef nonnull %call.i) #22
  call void @kobject_put(ptr noundef nonnull %call.i) #22
  br label %if.end

if.end:                                           ; preds = %device_unregister.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_rename(ptr noundef %dev, ptr noundef %new_name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %get_device.exit

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

get_device.exit:                                  ; preds = %entry
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %dev) #22
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %get_device.exit.cleanup_crit_edge, label %do.body

get_device.exit.cleanup_crit_edge:                ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

do.body:                                          ; preds = %get_device.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_rename.__UNIQUE_ID_ddebug395, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@device_rename, %do.end)) #22
          to label %if.then7 [label %do.end], !srcloc !522

if.then7:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @device_rename.__UNIQUE_ID_ddebug395, ptr noundef nonnull %call.i, ptr noundef nonnull @.str.36, ptr noundef %new_name) #22
  br label %do.end

do.end:                                           ; preds = %if.then7, %do.body
  %init_name.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 3
  %0 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i44 = icmp eq ptr %1, null
  br i1 %tobool.not.i44, label %if.end.i, label %do.end.dev_name.exit_crit_edge

do.end.dev_name.exit_crit_edge:                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %call.i, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %do.end.dev_name.exit_crit_edge
  %retval.0.i45 = phi ptr [ %3, %if.end.i ], [ %1, %do.end.dev_name.exit_crit_edge ]
  %call10 = tail call noalias ptr @kstrdup(ptr noundef %retval.0.i45, i32 noundef 3264) #22
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %dev_name.exit.put_device.exit_crit_edge, label %if.end13

dev_name.exit.put_device.exit_crit_edge:          ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.end13:                                         ; preds = %dev_name.exit
  %class = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 33
  %4 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %class, align 4
  %tobool14.not = icmp eq ptr %5, null
  br i1 %tobool14.not, label %if.end13.if.end23_crit_edge, label %if.then15

if.end13.if.end23_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end23

if.then15:                                        ; preds = %if.end13
  %p = getelementptr inbounds %struct.class, ptr %5, i32 0, i32 14
  %6 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %p, align 4
  %kobj17 = getelementptr inbounds %struct.kset, ptr %7, i32 0, i32 2
  %call18 = tail call ptr @kobject_namespace(ptr noundef nonnull %dev) #22
  %call19 = tail call i32 @sysfs_rename_link_ns(ptr noundef %kobj17, ptr noundef nonnull %dev, ptr noundef nonnull %call10, ptr noundef %new_name, ptr noundef %call18) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.then15.if.end23_crit_edge, label %if.then15.put_device.exit_crit_edge

if.then15.put_device.exit_crit_edge:              ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then15.if.end23_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end23

if.end23:                                         ; preds = %if.then15.if.end23_crit_edge, %if.end13.if.end23_crit_edge
  %call24 = tail call i32 @kobject_rename(ptr noundef nonnull %dev, ptr noundef %new_name) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %if.end23, %if.then15.put_device.exit_crit_edge, %dev_name.exit.put_device.exit_crit_edge
  %error.0 = phi i32 [ %call19, %if.then15.put_device.exit_crit_edge ], [ %call24, %if.end23 ], [ -12, %dev_name.exit.put_device.exit_crit_edge ]
  tail call void @kobject_put(ptr noundef nonnull %call.i) #22
  tail call void @kfree(ptr noundef %call10) #22
  br label %cleanup

cleanup:                                          ; preds = %put_device.exit, %get_device.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %error.0, %put_device.exit ], [ -22, %get_device.exit.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_rename_link_ns(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kobject_namespace(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_rename(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_move(ptr noundef %dev, ptr noundef %new_parent, i32 noundef %dpm_order) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %get_device.exit

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

get_device.exit:                                  ; preds = %entry
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %dev) #22
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %get_device.exit.cleanup_crit_edge, label %if.end

get_device.exit.cleanup_crit_edge:                ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %get_device.exit
  tail call void @device_pm_lock() #22
  %tobool.not.i121 = icmp eq ptr %new_parent, null
  br i1 %tobool.not.i121, label %get_device.exit125.thread, label %get_device.exit125

get_device.exit125:                               ; preds = %if.end
  %call.i122 = tail call ptr @kobject_get(ptr noundef nonnull %new_parent) #22
  %call2 = tail call fastcc ptr @get_device_parent(ptr noundef nonnull %call.i, ptr noundef %call.i122)
  %cmp.i = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then4, label %get_device.exit125.do.body_crit_edge

get_device.exit125.do.body_crit_edge:             ; preds = %get_device.exit125
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body

get_device.exit125.thread:                        ; preds = %if.end
  %call2170 = tail call fastcc ptr @get_device_parent(ptr noundef nonnull %call.i, ptr noundef null)
  %cmp.i171 = icmp ugt ptr %call2170, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i171, label %if.then4.thread, label %get_device.exit125.thread.do.body_crit_edge

get_device.exit125.thread.do.body_crit_edge:      ; preds = %get_device.exit125.thread
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body

if.then4.thread:                                  ; preds = %get_device.exit125.thread
  call void @__sanitizer_cov_trace_pc() #24
  %0 = ptrtoint ptr %call2170 to i32
  br label %put_device.exit161

if.then4:                                         ; preds = %get_device.exit125
  %1 = ptrtoint ptr %call2 to i32
  %tobool.not.i126 = icmp eq ptr %call.i122, null
  br i1 %tobool.not.i126, label %if.then4.put_device.exit161_crit_edge, label %if.then.i

if.then4.put_device.exit161_crit_edge:            ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit161

if.then.i:                                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %call.i122) #22
  br label %put_device.exit161

do.body:                                          ; preds = %get_device.exit125.thread.do.body_crit_edge, %get_device.exit125.do.body_crit_edge
  %call2175 = phi ptr [ %call2170, %get_device.exit125.thread.do.body_crit_edge ], [ %call2, %get_device.exit125.do.body_crit_edge ]
  %cond.i124172 = phi ptr [ null, %get_device.exit125.thread.do.body_crit_edge ], [ %call.i122, %get_device.exit125.do.body_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_move.__UNIQUE_ID_ddebug396, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@device_move, %do.end)) #22
          to label %if.then12 [label %do.end], !srcloc !522

if.then12:                                        ; preds = %do.body
  %init_name.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 3
  %2 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i127 = icmp eq ptr %3, null
  br i1 %tobool.not.i127, label %if.end.i, label %if.then12.dev_name.exit_crit_edge

if.then12.dev_name.exit_crit_edge:                ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #24
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %call.i, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then12.dev_name.exit_crit_edge
  %retval.0.i128 = phi ptr [ %5, %if.end.i ], [ %3, %if.then12.dev_name.exit_crit_edge ]
  %tobool14.not = icmp eq ptr %cond.i124172, null
  br i1 %tobool14.not, label %dev_name.exit.cond.end_crit_edge, label %cond.true

dev_name.exit.cond.end_crit_edge:                 ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

cond.true:                                        ; preds = %dev_name.exit
  %init_name.i129 = getelementptr inbounds %struct.device, ptr %cond.i124172, i32 0, i32 3
  %6 = ptrtoint ptr %init_name.i129 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %init_name.i129, align 8
  %tobool.not.i130 = icmp eq ptr %7, null
  br i1 %tobool.not.i130, label %if.end.i131, label %cond.true.cond.end_crit_edge

cond.true.cond.end_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

if.end.i131:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #24
  %8 = ptrtoint ptr %cond.i124172 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cond.i124172, align 4
  br label %cond.end

cond.end:                                         ; preds = %if.end.i131, %cond.true.cond.end_crit_edge, %dev_name.exit.cond.end_crit_edge
  %cond = phi ptr [ @.str.39, %dev_name.exit.cond.end_crit_edge ], [ %9, %if.end.i131 ], [ %7, %cond.true.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @device_move.__UNIQUE_ID_ddebug396, ptr noundef nonnull @.str.38, ptr noundef %retval.0.i128, ptr noundef nonnull @.str.37, ptr noundef %cond) #22
  br label %do.end

do.end:                                           ; preds = %cond.end, %do.body
  %call17 = tail call i32 @kobject_move(ptr noundef nonnull %call.i, ptr noundef %call2175) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end20, label %if.then19

if.then19:                                        ; preds = %do.end
  tail call fastcc void @cleanup_glue_dir(ptr noundef nonnull %call.i, ptr noundef %call2175)
  %tobool.not.i134 = icmp eq ptr %cond.i124172, null
  br i1 %tobool.not.i134, label %if.then19.put_device.exit161_crit_edge, label %if.then.i135

if.then19.put_device.exit161_crit_edge:           ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit161

if.then.i135:                                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %cond.i124172) #22
  br label %put_device.exit161

if.end20:                                         ; preds = %do.end
  %parent = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 1
  %10 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %parent, align 8
  store ptr %cond.i124172, ptr %parent, align 8
  %tobool22.not = icmp eq ptr %11, null
  br i1 %tobool22.not, label %if.end20.if.end24_crit_edge, label %if.then23

if.end20.if.end24_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

if.then23:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #24
  %p = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 2
  %12 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %p, align 4
  %knode_parent = getelementptr inbounds %struct.device_private, ptr %13, i32 0, i32 1
  tail call void @klist_remove(ptr noundef %knode_parent) #22
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end20.if.end24_crit_edge
  %tobool25.not = icmp eq ptr %cond.i124172, null
  br i1 %tobool25.not, label %if.end24.if.end31_crit_edge, label %if.then26

if.end24.if.end31_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end31

if.then26:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  %p27 = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 2
  %14 = ptrtoint ptr %p27 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %p27, align 4
  %knode_parent28 = getelementptr inbounds %struct.device_private, ptr %15, i32 0, i32 1
  %p29 = getelementptr inbounds %struct.device, ptr %cond.i124172, i32 0, i32 2
  %16 = ptrtoint ptr %p29 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %p29, align 4
  tail call void @klist_add_tail(ptr noundef %knode_parent28, ptr noundef %17) #22
  br label %if.end31

if.end31:                                         ; preds = %if.then26, %if.end24.if.end31_crit_edge
  %class = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 33
  %18 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %class, align 4
  %tobool32.not = icmp eq ptr %19, null
  br i1 %tobool32.not, label %if.end31.if.end59_crit_edge, label %if.then33

if.end31.if.end59_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end59

if.then33:                                        ; preds = %if.end31
  br i1 %tobool22.not, label %if.then33.if.end.i140_crit_edge, label %if.then.i139

if.then33.if.end.i140_crit_edge:                  ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i140

if.then.i139:                                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @sysfs_remove_link(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.119) #22
  br label %if.end.i140

if.end.i140:                                      ; preds = %if.then.i139, %if.then33.if.end.i140_crit_edge
  br i1 %tobool25.not, label %if.end.i140.if.end59_crit_edge, label %device_move_class_links.exit

if.end.i140.if.end59_crit_edge:                   ; preds = %if.end.i140
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end59

device_move_class_links.exit:                     ; preds = %if.end.i140
  %call.i141 = tail call i32 @sysfs_create_link(ptr noundef nonnull %call.i, ptr noundef nonnull %cond.i124172, ptr noundef nonnull @.str.119) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i141)
  %tobool35.not = icmp eq i32 %call.i141, 0
  br i1 %tobool35.not, label %device_move_class_links.exit.if.end59_crit_edge, label %if.end.i145

device_move_class_links.exit.if.end59_crit_edge:  ; preds = %device_move_class_links.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end59

if.end.i145:                                      ; preds = %device_move_class_links.exit
  tail call void @sysfs_remove_link(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.119) #22
  br i1 %tobool22.not, label %if.end.i145.device_move_class_links.exit149_crit_edge, label %if.then2.i147

if.end.i145.device_move_class_links.exit149_crit_edge: ; preds = %if.end.i145
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_move_class_links.exit149

if.then2.i147:                                    ; preds = %if.end.i145
  call void @__sanitizer_cov_trace_pc() #24
  %call.i146 = tail call i32 @sysfs_create_link(ptr noundef nonnull %call.i, ptr noundef nonnull %11, ptr noundef nonnull @.str.119) #22
  br label %device_move_class_links.exit149

device_move_class_links.exit149:                  ; preds = %if.then2.i147, %if.end.i145.device_move_class_links.exit149_crit_edge
  %call40 = tail call i32 @kobject_move(ptr noundef nonnull %call.i, ptr noundef %11) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %if.end47, label %device_move_class_links.exit149.put_device.exit153_crit_edge

device_move_class_links.exit149.put_device.exit153_crit_edge: ; preds = %device_move_class_links.exit149
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit153

if.end47:                                         ; preds = %device_move_class_links.exit149
  %p45 = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 2
  %20 = ptrtoint ptr %p45 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %p45, align 4
  %knode_parent46 = getelementptr inbounds %struct.device_private, ptr %21, i32 0, i32 1
  tail call void @klist_remove(ptr noundef %knode_parent46) #22
  %22 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %11, ptr %parent, align 8
  br i1 %tobool22.not, label %if.end47.put_device.exit153_crit_edge, label %if.then50

if.end47.put_device.exit153_crit_edge:            ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit153

if.then50:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #24
  %23 = ptrtoint ptr %p45 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %p45, align 4
  %knode_parent52 = getelementptr inbounds %struct.device_private, ptr %24, i32 0, i32 1
  %p53 = getelementptr inbounds %struct.device, ptr %11, i32 0, i32 2
  %25 = ptrtoint ptr %p53 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %p53, align 4
  tail call void @klist_add_tail(ptr noundef %knode_parent52, ptr noundef %26) #22
  br label %put_device.exit153

put_device.exit153:                               ; preds = %if.then50, %if.end47.put_device.exit153_crit_edge, %device_move_class_links.exit149.put_device.exit153_crit_edge
  tail call fastcc void @cleanup_glue_dir(ptr noundef nonnull %call.i, ptr noundef %call2175)
  tail call void @kobject_put(ptr noundef nonnull %cond.i124172) #22
  br label %put_device.exit161

if.end59:                                         ; preds = %device_move_class_links.exit.if.end59_crit_edge, %if.end.i140.if.end59_crit_edge, %if.end31.if.end59_crit_edge
  %27 = zext i32 %dpm_order to i64
  call void @__sanitizer_cov_trace_switch(i64 %27, ptr @__sancov_gen_cov_switch_values.159)
  switch i32 %dpm_order, label %if.end59.sw.epilog_crit_edge [
    i32 3, label %sw.bb61
    i32 1, label %sw.bb
    i32 2, label %sw.bb60
  ]

if.end59.sw.epilog_crit_edge:                     ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #24
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @device_pm_move_after(ptr noundef nonnull %call.i, ptr noundef %cond.i124172) #22
  tail call fastcc void @devices_kset_move_after(ptr noundef nonnull %call.i, ptr noundef %cond.i124172)
  br label %sw.epilog

sw.bb60:                                          ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @device_pm_move_before(ptr noundef %cond.i124172, ptr noundef nonnull %call.i) #22
  tail call fastcc void @devices_kset_move_before(ptr noundef %cond.i124172, ptr noundef nonnull %call.i)
  br label %sw.epilog

sw.bb61:                                          ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @device_pm_move_last(ptr noundef nonnull %call.i) #22
  tail call void @devices_kset_move_last(ptr noundef nonnull %call.i)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb61, %sw.bb60, %sw.bb, %if.end59.sw.epilog_crit_edge
  br i1 %tobool22.not, label %sw.epilog.put_device.exit161_crit_edge, label %if.then.i155

sw.epilog.put_device.exit161_crit_edge:           ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit161

if.then.i155:                                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %11) #22
  br label %put_device.exit161

put_device.exit161:                               ; preds = %if.then.i155, %sw.epilog.put_device.exit161_crit_edge, %put_device.exit153, %if.then.i135, %if.then19.put_device.exit161_crit_edge, %if.then.i, %if.then4.put_device.exit161_crit_edge, %if.then4.thread
  %error.1 = phi i32 [ %call.i141, %put_device.exit153 ], [ %0, %if.then4.thread ], [ %1, %if.then4.put_device.exit161_crit_edge ], [ %1, %if.then.i ], [ %call17, %if.then19.put_device.exit161_crit_edge ], [ %call17, %if.then.i135 ], [ 0, %sw.epilog.put_device.exit161_crit_edge ], [ 0, %if.then.i155 ]
  tail call void @device_pm_unlock() #22
  tail call void @kobject_put(ptr noundef nonnull %call.i) #22
  br label %cleanup

cleanup:                                          ; preds = %put_device.exit161, %get_device.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %error.1, %put_device.exit161 ], [ -22, %get_device.exit.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_move(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @klist_remove(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_pm_move_after(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @devices_kset_move_after(ptr noundef %deva, ptr noundef %devb) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @devices_kset, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %do.body

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @devices_kset_move_after.__UNIQUE_ID_ddebug390, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@devices_kset_move_after, %do.end)) #22
          to label %if.then5 [label %do.end], !srcloc !522

if.then5:                                         ; preds = %do.body
  %init_name.i = getelementptr inbounds %struct.device, ptr %deva, i32 0, i32 3
  %1 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then5.dev_name.exit_crit_edge

if.then5.dev_name.exit_crit_edge:                 ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  %3 = ptrtoint ptr %deva to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %deva, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then5.dev_name.exit_crit_edge
  %retval.0.i15 = phi ptr [ %4, %if.end.i ], [ %2, %if.then5.dev_name.exit_crit_edge ]
  %init_name.i16 = getelementptr inbounds %struct.device, ptr %devb, i32 0, i32 3
  %5 = ptrtoint ptr %init_name.i16 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %init_name.i16, align 8
  %tobool.not.i17 = icmp eq ptr %6, null
  br i1 %tobool.not.i17, label %if.end.i18, label %dev_name.exit.dev_name.exit20_crit_edge

dev_name.exit.dev_name.exit20_crit_edge:          ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit20

if.end.i18:                                       ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  %7 = ptrtoint ptr %devb to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %devb, align 4
  br label %dev_name.exit20

dev_name.exit20:                                  ; preds = %if.end.i18, %dev_name.exit.dev_name.exit20_crit_edge
  %retval.0.i19 = phi ptr [ %8, %if.end.i18 ], [ %6, %dev_name.exit.dev_name.exit20_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @devices_kset_move_after.__UNIQUE_ID_ddebug390, ptr noundef nonnull @.str.145, ptr noundef %retval.0.i15, ptr noundef %retval.0.i19) #22
  br label %do.end

do.end:                                           ; preds = %dev_name.exit20, %do.body
  %9 = load ptr, ptr @devices_kset, align 4
  %list_lock = getelementptr inbounds %struct.kset, ptr %9, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %list_lock) #22
  %entry9 = getelementptr inbounds %struct.kobject, ptr %deva, i32 0, i32 1
  %entry11 = getelementptr inbounds %struct.kobject, ptr %devb, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry9) #22
  br i1 %call.i.i, label %if.end.i.i, label %do.end.__list_del_entry.exit.i_crit_edge

do.end.__list_del_entry.exit.i_crit_edge:         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.kobject, ptr %deva, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i, align 4
  %12 = ptrtoint ptr %entry9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %entry9, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev1.i.i.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %11, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %do.end.__list_del_entry.exit.i_crit_edge
  %16 = ptrtoint ptr %entry11 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %entry11, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %entry9, ptr noundef %entry11, ptr noundef %17) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move.exit_crit_edge

__list_del_entry.exit.i.list_move.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_move.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %entry9, ptr %prev1.i.i2.i, align 4
  %19 = ptrtoint ptr %entry9 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %17, ptr %entry9, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.kobject, ptr %deva, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %entry11, ptr %prev3.i.i.i, align 4
  %21 = ptrtoint ptr %entry11 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %entry9, ptr %entry11, align 4
  br label %list_move.exit

list_move.exit:                                   ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move.exit_crit_edge
  %22 = load ptr, ptr @devices_kset, align 4
  %list_lock12 = getelementptr inbounds %struct.kset, ptr %22, i32 0, i32 1
  tail call void @_raw_spin_unlock(ptr noundef %list_lock12) #22
  br label %return

return:                                           ; preds = %list_move.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_pm_move_before(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @devices_kset_move_before(ptr noundef %deva, ptr noundef %devb) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @devices_kset, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %do.body

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @devices_kset_move_before.__UNIQUE_ID_ddebug389, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@devices_kset_move_before, %do.end)) #22
          to label %if.then5 [label %do.end], !srcloc !522

if.then5:                                         ; preds = %do.body
  %init_name.i = getelementptr inbounds %struct.device, ptr %deva, i32 0, i32 3
  %1 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then5.dev_name.exit_crit_edge

if.then5.dev_name.exit_crit_edge:                 ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  %3 = ptrtoint ptr %deva to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %deva, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then5.dev_name.exit_crit_edge
  %retval.0.i15 = phi ptr [ %4, %if.end.i ], [ %2, %if.then5.dev_name.exit_crit_edge ]
  %init_name.i16 = getelementptr inbounds %struct.device, ptr %devb, i32 0, i32 3
  %5 = ptrtoint ptr %init_name.i16 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %init_name.i16, align 8
  %tobool.not.i17 = icmp eq ptr %6, null
  br i1 %tobool.not.i17, label %if.end.i18, label %dev_name.exit.dev_name.exit20_crit_edge

dev_name.exit.dev_name.exit20_crit_edge:          ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit20

if.end.i18:                                       ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  %7 = ptrtoint ptr %devb to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %devb, align 4
  br label %dev_name.exit20

dev_name.exit20:                                  ; preds = %if.end.i18, %dev_name.exit.dev_name.exit20_crit_edge
  %retval.0.i19 = phi ptr [ %8, %if.end.i18 ], [ %6, %dev_name.exit.dev_name.exit20_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @devices_kset_move_before.__UNIQUE_ID_ddebug389, ptr noundef nonnull @.str.147, ptr noundef %retval.0.i15, ptr noundef %retval.0.i19) #22
  br label %do.end

do.end:                                           ; preds = %dev_name.exit20, %do.body
  %9 = load ptr, ptr @devices_kset, align 4
  %list_lock = getelementptr inbounds %struct.kset, ptr %9, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %list_lock) #22
  %entry9 = getelementptr inbounds %struct.kobject, ptr %deva, i32 0, i32 1
  %entry11 = getelementptr inbounds %struct.kobject, ptr %devb, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry9) #22
  br i1 %call.i.i, label %if.end.i.i, label %do.end.__list_del_entry.exit.i_crit_edge

do.end.__list_del_entry.exit.i_crit_edge:         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.kobject, ptr %deva, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i, align 4
  %12 = ptrtoint ptr %entry9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %entry9, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev1.i.i.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %11, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %do.end.__list_del_entry.exit.i_crit_edge
  %prev.i2.i = getelementptr inbounds %struct.kobject, ptr %devb, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %entry9, ptr noundef %17, ptr noundef %entry11) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move_tail.exit_crit_edge

__list_del_entry.exit.i.list_move_tail.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_move_tail.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %18 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %entry9, ptr %prev.i2.i, align 4
  %19 = ptrtoint ptr %entry9 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %entry11, ptr %entry9, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.kobject, ptr %deva, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev3.i.i.i, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %entry9, ptr %17, align 4
  br label %list_move_tail.exit

list_move_tail.exit:                              ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move_tail.exit_crit_edge
  %22 = load ptr, ptr @devices_kset, align 4
  %list_lock12 = getelementptr inbounds %struct.kset, ptr %22, i32 0, i32 1
  tail call void @_raw_spin_unlock(ptr noundef %list_lock12) #22
  br label %return

return:                                           ; preds = %list_move_tail.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_pm_move_last(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_change_owner(ptr noundef %dev, [1 x i32] %kuid.coerce, [1 x i32] %kgid.coerce) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %get_device.exit

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

get_device.exit:                                  ; preds = %entry
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %dev) #22
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %get_device.exit.cleanup_crit_edge, label %if.end

get_device.exit.cleanup_crit_edge:                ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %get_device.exit
  %call5 = tail call i32 @sysfs_change_owner(ptr noundef nonnull %dev, [1 x i32] %kuid.coerce, [1 x i32] %kgid.coerce) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.put_device.exit_crit_edge

if.end.put_device.exit_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.end8:                                          ; preds = %if.end
  %0 = load ptr, ptr @dev_attr_uevent, align 4
  %call11 = tail call i32 @sysfs_file_change_owner(ptr noundef nonnull %dev, ptr noundef %0, [1 x i32] %kuid.coerce, [1 x i32] %kgid.coerce) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %if.end8.put_device.exit_crit_edge

if.end8.put_device.exit_crit_edge:                ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.end14:                                         ; preds = %if.end8
  %class3.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 33
  %1 = ptrtoint ptr %class3.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %class3.i, align 4
  %type4.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 4
  %3 = ptrtoint ptr %type4.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %type4.i, align 4
  %tobool.not.i88 = icmp eq ptr %2, null
  br i1 %tobool.not.i88, label %if.end14.if.end9.i_crit_edge, label %if.then.i

if.end14.if.end9.i_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9.i

if.then.i:                                        ; preds = %if.end14
  %dev_groups.i = getelementptr inbounds %struct.class, ptr %2, i32 0, i32 3
  %5 = ptrtoint ptr %dev_groups.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev_groups.i, align 4
  %call.i89 = tail call i32 @sysfs_groups_change_owner(ptr noundef nonnull %call.i, ptr noundef %6, [1 x i32] %kuid.coerce, [1 x i32] %kgid.coerce) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i89)
  %tobool7.not.i = icmp eq i32 %call.i89, 0
  br i1 %tobool7.not.i, label %if.then.i.if.end9.i_crit_edge, label %if.then.i.put_device.exit_crit_edge

if.then.i.put_device.exit_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then.i.if.end9.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then.i.if.end9.i_crit_edge, %if.end14.if.end9.i_crit_edge
  %tobool10.not.i = icmp eq ptr %4, null
  br i1 %tobool10.not.i, label %if.end9.i.if.end18.i_crit_edge, label %if.then11.i

if.end9.i.if.end18.i_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18.i

if.then11.i:                                      ; preds = %if.end9.i
  %groups.i = getelementptr inbounds %struct.device_type, ptr %4, i32 0, i32 1
  %7 = ptrtoint ptr %groups.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %groups.i, align 4
  %call14.i = tail call i32 @sysfs_groups_change_owner(ptr noundef nonnull %call.i, ptr noundef %8, [1 x i32] %kuid.coerce, [1 x i32] %kgid.coerce) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %if.then11.i.if.end18.i_crit_edge, label %if.then11.i.put_device.exit_crit_edge

if.then11.i.put_device.exit_crit_edge:            ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then11.i.if.end18.i_crit_edge:                 ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then11.i.if.end18.i_crit_edge, %if.end9.i.if.end18.i_crit_edge
  %groups19.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 34
  %9 = ptrtoint ptr %groups19.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %groups19.i, align 8
  %call22.i = tail call i32 @sysfs_groups_change_owner(ptr noundef nonnull %call.i, ptr noundef %10, [1 x i32] %kuid.coerce, [1 x i32] %kgid.coerce) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22.i)
  %tobool23.not.i = icmp eq i32 %call22.i, 0
  br i1 %tobool23.not.i, label %if.end25.i, label %if.end18.i.put_device.exit_crit_edge

if.end18.i.put_device.exit_crit_edge:             ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.end25.i:                                       ; preds = %if.end18.i
  %bus.i.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 5
  %11 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bus.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i, label %if.end25.i.if.end20_crit_edge, label %land.lhs.true.i.i

if.end25.i.if.end20_crit_edge:                    ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end20

land.lhs.true.i.i:                                ; preds = %if.end25.i
  %offline.i.i = getelementptr inbounds %struct.bus_type, ptr %12, i32 0, i32 13
  %13 = ptrtoint ptr %offline.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %offline.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %14, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.end20_crit_edge, label %device_supports_offline.exit.i

land.lhs.true.i.i.if.end20_crit_edge:             ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end20

device_supports_offline.exit.i:                   ; preds = %land.lhs.true.i.i
  %online.i.i = getelementptr inbounds %struct.bus_type, ptr %12, i32 0, i32 12
  %15 = ptrtoint ptr %online.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %online.i.i, align 4
  %tobool4.i.not.i = icmp eq ptr %16, null
  br i1 %tobool4.i.not.i, label %device_supports_offline.exit.i.if.end20_crit_edge, label %land.lhs.true.i

device_supports_offline.exit.i.if.end20_crit_edge: ; preds = %device_supports_offline.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end20

land.lhs.true.i:                                  ; preds = %device_supports_offline.exit.i
  %offline_disabled.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 39
  %17 = ptrtoint ptr %offline_disabled.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %bf.load.i = load i8, ptr %offline_disabled.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %bf.cast.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %bf.cast.not.i, label %if.then27.i, label %land.lhs.true.i.if.end20_crit_edge

land.lhs.true.i.if.end20_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end20

if.then27.i:                                      ; preds = %land.lhs.true.i
  %18 = load ptr, ptr @dev_attr_online, align 4
  %call30.i = tail call i32 @sysfs_file_change_owner(ptr noundef nonnull %call.i, ptr noundef %18, [1 x i32] %kuid.coerce, [1 x i32] %kgid.coerce) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30.i)
  %tobool31.not.i = icmp eq i32 %call30.i, 0
  br i1 %tobool31.not.i, label %if.then27.i.if.end20_crit_edge, label %if.then27.i.put_device.exit_crit_edge

if.then27.i.put_device.exit_crit_edge:            ; preds = %if.then27.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then27.i.if.end20_crit_edge:                   ; preds = %if.then27.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end20

if.end20:                                         ; preds = %if.then27.i.if.end20_crit_edge, %land.lhs.true.i.if.end20_crit_edge, %device_supports_offline.exit.i.if.end20_crit_edge, %land.lhs.true.i.i.if.end20_crit_edge, %if.end25.i.if.end20_crit_edge
  %call23 = tail call i32 @dpm_sysfs_change_owner(ptr noundef nonnull %call.i, [1 x i32] %kuid.coerce, [1 x i32] %kgid.coerce) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end26, label %if.end20.put_device.exit_crit_edge

if.end20.put_device.exit_crit_edge:               ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.end26:                                         ; preds = %if.end20
  %19 = load i32, ptr @sysfs_deprecated, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool27.not = icmp eq i32 %19, 0
  br i1 %tobool27.not, label %if.end26.if.end29_crit_edge, label %land.lhs.true

if.end26.if.end29_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end29

land.lhs.true:                                    ; preds = %if.end26
  %20 = ptrtoint ptr %class3.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %class3.i, align 4
  %cmp = icmp eq ptr %21, @block_class
  br i1 %cmp, label %land.lhs.true.put_device.exit_crit_edge, label %land.lhs.true.if.end29_crit_edge

land.lhs.true.if.end29_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end29

land.lhs.true.put_device.exit_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.end29:                                         ; preds = %land.lhs.true.if.end29_crit_edge, %if.end26.if.end29_crit_edge
  %22 = ptrtoint ptr %class3.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %class3.i, align 4
  %p = getelementptr inbounds %struct.class, ptr %23, i32 0, i32 14
  %24 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %p, align 4
  %kobj31 = getelementptr inbounds %struct.kset, ptr %25, i32 0, i32 2
  %init_name.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 3
  %26 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i90 = icmp eq ptr %27, null
  br i1 %tobool.not.i90, label %if.end.i, label %if.end29.dev_name.exit_crit_edge

if.end29.dev_name.exit_crit_edge:                 ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #24
  %28 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %call.i, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.end29.dev_name.exit_crit_edge
  %retval.0.i91 = phi ptr [ %29, %if.end.i ], [ %27, %if.end29.dev_name.exit_crit_edge ]
  %call36 = tail call i32 @sysfs_link_change_owner(ptr noundef %kobj31, ptr noundef nonnull %call.i, ptr noundef %retval.0.i91, [1 x i32] %kuid.coerce, [1 x i32] %kgid.coerce) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %dev_name.exit, %land.lhs.true.put_device.exit_crit_edge, %if.end20.put_device.exit_crit_edge, %if.then27.i.put_device.exit_crit_edge, %if.end18.i.put_device.exit_crit_edge, %if.then11.i.put_device.exit_crit_edge, %if.then.i.put_device.exit_crit_edge, %if.end8.put_device.exit_crit_edge, %if.end.put_device.exit_crit_edge
  %error.0 = phi i32 [ %call5, %if.end.put_device.exit_crit_edge ], [ %call11, %if.end8.put_device.exit_crit_edge ], [ %call23, %if.end20.put_device.exit_crit_edge ], [ 0, %land.lhs.true.put_device.exit_crit_edge ], [ %call36, %dev_name.exit ], [ %call30.i, %if.then27.i.put_device.exit_crit_edge ], [ %call22.i, %if.end18.i.put_device.exit_crit_edge ], [ %call14.i, %if.then11.i.put_device.exit_crit_edge ], [ %call.i89, %if.then.i.put_device.exit_crit_edge ]
  tail call void @kobject_put(ptr noundef nonnull %call.i) #22
  br label %cleanup

cleanup:                                          ; preds = %put_device.exit, %get_device.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %error.0, %put_device.exit ], [ -22, %get_device.exit.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_change_owner(ptr noundef, [1 x i32], [1 x i32]) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_file_change_owner(ptr noundef, ptr noundef, [1 x i32], [1 x i32]) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dpm_sysfs_change_owner(ptr noundef, [1 x i32], [1 x i32]) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_link_change_owner(ptr noundef, ptr noundef, ptr noundef, [1 x i32], [1 x i32]) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_shutdown() local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @wait_for_device_probe() #22
  tail call void @device_block_probing() #22
  tail call void @cpufreq_suspend() #22
  %0 = load ptr, ptr @devices_kset, align 4
  %list_lock = getelementptr inbounds %struct.kset, ptr %0, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %list_lock) #22
  %1 = load ptr, ptr @devices_kset, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %1, align 4
  %cmp.i.not94 = icmp eq ptr %3, %1
  br i1 %cmp.i.not94, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %put_device.exit93.while.body_crit_edge, %entry.while.body_crit_edge
  %4 = phi ptr [ %45, %put_device.exit93.while.body_crit_edge ], [ %1, %entry.while.body_crit_edge ]
  %prev = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev, align 4
  %add.ptr = getelementptr i8, ptr %6, i32 -4
  %parent2 = getelementptr i8, ptr %6, i32 132
  %7 = ptrtoint ptr %parent2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %parent2, align 8
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %while.body.get_device.exit_crit_edge, label %cond.true.i

while.body.get_device.exit_crit_edge:             ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_device.exit

cond.true.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %8) #22
  br label %get_device.exit

get_device.exit:                                  ; preds = %cond.true.i, %while.body.get_device.exit_crit_edge
  %cond.i = phi ptr [ %call.i, %cond.true.i ], [ null, %while.body.get_device.exit_crit_edge ]
  %tobool.not.i82 = icmp eq ptr %add.ptr, null
  br i1 %tobool.not.i82, label %get_device.exit.get_device.exit86_crit_edge, label %cond.true.i84

get_device.exit.get_device.exit86_crit_edge:      ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_device.exit86

cond.true.i84:                                    ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  %call.i83 = tail call ptr @kobject_get(ptr noundef nonnull %add.ptr) #22
  br label %get_device.exit86

get_device.exit86:                                ; preds = %cond.true.i84, %get_device.exit.get_device.exit86_crit_edge
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %6) #22
  br i1 %call.i.i, label %if.end.i.i, label %get_device.exit86.list_del_init.exit_crit_edge

get_device.exit86.list_del_init.exit_crit_edge:   ; preds = %get_device.exit86
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %get_device.exit86
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i, align 4
  %11 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %6, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %get_device.exit86.list_del_init.exit_crit_edge
  %15 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %6, ptr %6, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %6, ptr %prev.i3.i, align 4
  %17 = load ptr, ptr @devices_kset, align 4
  %list_lock6 = getelementptr inbounds %struct.kset, ptr %17, i32 0, i32 1
  tail call void @_raw_spin_unlock(ptr noundef %list_lock6) #22
  %tobool7.not = icmp eq ptr %cond.i, null
  br i1 %tobool7.not, label %list_del_init.exit.if.end_crit_edge, label %if.then

list_del_init.exit.if.end_crit_edge:              ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  %mutex.i = getelementptr inbounds %struct.device, ptr %cond.i, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %list_del_init.exit.if.end_crit_edge
  %mutex.i87 = getelementptr i8, ptr %6, i32 256
  tail call void @mutex_lock_nested(ptr noundef %mutex.i87, i32 noundef 0) #22
  %usage_count.i = getelementptr i8, ptr %6, i32 664
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %usage_count.i, i32 1, i32 3, i32 1) #22
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i, ptr %usage_count.i, i32 1, ptr elementtype(i32) %usage_count.i) #22, !srcloc !536
  %call8 = tail call i32 @pm_runtime_barrier(ptr noundef %add.ptr) #22
  %class = getelementptr i8, ptr %6, i32 896
  %19 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %class, align 4
  %tobool9.not = icmp eq ptr %20, null
  br i1 %tobool9.not, label %if.end.if.end19_crit_edge, label %land.lhs.true

if.end.if.end19_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end19

land.lhs.true:                                    ; preds = %if.end
  %shutdown_pre = getelementptr inbounds %struct.class, ptr %20, i32 0, i32 9
  %21 = ptrtoint ptr %shutdown_pre to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %shutdown_pre, align 4
  %tobool11.not = icmp eq ptr %22, null
  br i1 %tobool11.not, label %land.lhs.true.if.end19_crit_edge, label %if.then12

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end19

if.then12:                                        ; preds = %land.lhs.true
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @initcall_debug to i32))
  %23 = load i8, ptr @initcall_debug, align 1, !range !535
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool13.not = icmp eq i8 %23, 0
  br i1 %tobool13.not, label %if.then12.if.end15_crit_edge, label %do.end

if.then12.if.end15_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15

do.end:                                           ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %add.ptr, ptr noundef nonnull @.str.40) #26
  br label %if.end15

if.end15:                                         ; preds = %do.end, %if.then12.if.end15_crit_edge
  %24 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %class, align 4
  %shutdown_pre17 = getelementptr inbounds %struct.class, ptr %25, i32 0, i32 9
  %26 = ptrtoint ptr %shutdown_pre17 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %shutdown_pre17, align 4
  %call18 = tail call i32 %27(ptr noundef %add.ptr) #22
  br label %if.end19

if.end19:                                         ; preds = %if.end15, %land.lhs.true.if.end19_crit_edge, %if.end.if.end19_crit_edge
  %bus = getelementptr i8, ptr %6, i32 148
  %28 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %bus, align 8
  %tobool20.not = icmp eq ptr %29, null
  br i1 %tobool20.not, label %if.end19.if.else_crit_edge, label %land.lhs.true21

if.end19.if.else_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else

land.lhs.true21:                                  ; preds = %if.end19
  %shutdown = getelementptr inbounds %struct.bus_type, ptr %29, i32 0, i32 11
  %30 = ptrtoint ptr %shutdown to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %shutdown, align 4
  %tobool23.not = icmp eq ptr %31, null
  br i1 %tobool23.not, label %land.lhs.true21.if.else_crit_edge, label %if.then24

land.lhs.true21.if.else_crit_edge:                ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else

if.then24:                                        ; preds = %land.lhs.true21
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @initcall_debug to i32))
  %32 = load i8, ptr @initcall_debug, align 1, !range !535
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool25.not = icmp eq i8 %32, 0
  br i1 %tobool25.not, label %if.then24.if.end30_crit_edge, label %do.end29

if.then24.if.end30_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end30

do.end29:                                         ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %add.ptr, ptr noundef nonnull @.str.45) #26
  br label %if.end30

if.end30:                                         ; preds = %do.end29, %if.then24.if.end30_crit_edge
  %33 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %bus, align 8
  %shutdown32 = getelementptr inbounds %struct.bus_type, ptr %34, i32 0, i32 11
  br label %if.end48.sink.split

if.else:                                          ; preds = %land.lhs.true21.if.else_crit_edge, %if.end19.if.else_crit_edge
  %driver = getelementptr i8, ptr %6, i32 152
  %35 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %driver, align 4
  %tobool33.not = icmp eq ptr %36, null
  br i1 %tobool33.not, label %if.else.if.end48_crit_edge, label %land.lhs.true34

if.else.if.end48_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end48

land.lhs.true34:                                  ; preds = %if.else
  %shutdown36 = getelementptr inbounds %struct.device_driver, ptr %36, i32 0, i32 11
  %37 = ptrtoint ptr %shutdown36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %shutdown36, align 4
  %tobool37.not = icmp eq ptr %38, null
  br i1 %tobool37.not, label %land.lhs.true34.if.end48_crit_edge, label %if.then38

land.lhs.true34.if.end48_crit_edge:               ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end48

if.then38:                                        ; preds = %land.lhs.true34
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @initcall_debug to i32))
  %39 = load i8, ptr @initcall_debug, align 1, !range !535
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool39.not = icmp eq i8 %39, 0
  br i1 %tobool39.not, label %if.then38.if.end44_crit_edge, label %do.end43

if.then38.if.end44_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44

do.end43:                                         ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %add.ptr, ptr noundef nonnull @.str.45) #26
  br label %if.end44

if.end44:                                         ; preds = %do.end43, %if.then38.if.end44_crit_edge
  %40 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %driver, align 4
  %shutdown46 = getelementptr inbounds %struct.device_driver, ptr %41, i32 0, i32 11
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end44, %if.end30
  %shutdown46.sink = phi ptr [ %shutdown46, %if.end44 ], [ %shutdown32, %if.end30 ]
  %42 = ptrtoint ptr %shutdown46.sink to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %shutdown46.sink, align 4
  tail call void %43(ptr noundef %add.ptr) #22
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %land.lhs.true34.if.end48_crit_edge, %if.else.if.end48_crit_edge
  tail call void @mutex_unlock(ptr noundef %mutex.i87) #22
  br i1 %tobool7.not, label %if.end48.if.end51_crit_edge, label %if.then50

if.end48.if.end51_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end51

if.then50:                                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #24
  %mutex.i89 = getelementptr inbounds %struct.device, ptr %cond.i, i32 0, i32 10
  tail call void @mutex_unlock(ptr noundef %mutex.i89) #22
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end48.if.end51_crit_edge
  br i1 %tobool.not.i82, label %if.end51.put_device.exit_crit_edge, label %if.then.i

if.end51.put_device.exit_crit_edge:               ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then.i:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %add.ptr) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %if.then.i, %if.end51.put_device.exit_crit_edge
  br i1 %tobool7.not, label %put_device.exit.put_device.exit93_crit_edge, label %if.then.i92

put_device.exit.put_device.exit93_crit_edge:      ; preds = %put_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit93

if.then.i92:                                      ; preds = %put_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %cond.i) #22
  br label %put_device.exit93

put_device.exit93:                                ; preds = %if.then.i92, %put_device.exit.put_device.exit93_crit_edge
  %44 = load ptr, ptr @devices_kset, align 4
  %list_lock52 = getelementptr inbounds %struct.kset, ptr %44, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %list_lock52) #22
  %45 = load ptr, ptr @devices_kset, align 4
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile ptr, ptr %45, align 4
  %cmp.i.not = icmp eq ptr %47, %45
  br i1 %cmp.i.not, label %put_device.exit93.while.end_crit_edge, label %put_device.exit93.while.body_crit_edge

put_device.exit93.while.body_crit_edge:           ; preds = %put_device.exit93
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

put_device.exit93.while.end_crit_edge:            ; preds = %put_device.exit93
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %put_device.exit93.while.end_crit_edge, %entry.while.end_crit_edge
  %.lcssa = phi ptr [ %1, %entry.while.end_crit_edge ], [ %45, %put_device.exit93.while.end_crit_edge ]
  %list_lock53 = getelementptr inbounds %struct.kset, ptr %.lcssa, i32 0, i32 1
  tail call void @_raw_spin_unlock(ptr noundef %list_lock53) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_block_probing() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpufreq_suspend() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pm_runtime_barrier(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @_dev_info(ptr noundef %dev, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #22
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__dev_printk(ptr noundef nonnull @.str.42, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #22
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_vprintk_emit(i32 noundef %level, ptr nocapture noundef readonly %dev, ptr noundef %fmt, [1 x i32] %args.coerce) #0 align 64 {
entry:
  %dev_info = alloca %struct.dev_printk_info, align 1
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %dev_info) #22
  %0 = call ptr @memset(ptr %dev_info, i32 0, i32 64)
  %class.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %1 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %class.i, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %if.else.i, label %entry.if.end7.i_crit_edge

entry.if.end7.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7.i

if.else.i:                                        ; preds = %entry
  %bus.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %3 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bus.i, align 8
  %tobool2.not.i = icmp eq ptr %4, null
  br i1 %tobool2.not.i, label %if.else.i.set_dev_info.exit_crit_edge, label %if.else.i.if.end7.i_crit_edge

if.else.i.if.end7.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7.i

if.else.i.set_dev_info.exit_crit_edge:            ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %set_dev_info.exit

if.end7.i:                                        ; preds = %if.else.i.if.end7.i_crit_edge, %entry.if.end7.i_crit_edge
  %subsys.0.in.i = phi ptr [ %2, %entry.if.end7.i_crit_edge ], [ %4, %if.else.i.if.end7.i_crit_edge ]
  %5 = ptrtoint ptr %subsys.0.in.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %subsys.0.i = load ptr, ptr %subsys.0.in.i, align 4
  %call.i = call i32 @strscpy(ptr noundef nonnull %dev_info, ptr noundef %subsys.0.i, i32 noundef 16) #22
  %devt.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 29
  %6 = ptrtoint ptr %devt.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %devt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %7)
  %tobool8.not.i = icmp ult i32 %7, 1048576
  br i1 %tobool8.not.i, label %if.else19.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #24
  %call10.i = call i32 @strcmp(ptr noundef %subsys.0.i, ptr noundef nonnull dereferenceable(6) @.str.32) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %cmp.i = icmp eq i32 %call10.i, 0
  %..i = select i1 %cmp.i, i32 98, i32 99
  %device.i = getelementptr inbounds %struct.dev_printk_info, ptr %dev_info, i32 0, i32 1
  %shr16.i = lshr i32 %7, 20
  %and.i = and i32 %7, 1048575
  %call18.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %device.i, i32 noundef 48, ptr noundef nonnull @.str.148, i32 noundef %..i, i32 noundef %shr16.i, i32 noundef %and.i) #22
  br label %set_dev_info.exit

if.else19.i:                                      ; preds = %if.end7.i
  %call20.i = call i32 @strcmp(ptr noundef %subsys.0.i, ptr noundef nonnull dereferenceable(4) @.str.149) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %cmp21.i = icmp eq i32 %call20.i, 0
  %device24.i = getelementptr inbounds %struct.dev_printk_info, ptr %dev_info, i32 0, i32 1
  br i1 %cmp21.i, label %if.then23.i, label %if.else27.i

if.then23.i:                                      ; preds = %if.else19.i
  call void @__sanitizer_cov_trace_pc() #24
  %ifindex.i = getelementptr i8, ptr %dev, i32 -980
  %8 = ptrtoint ptr %ifindex.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ifindex.i, align 4
  %call26.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %device24.i, i32 noundef 48, ptr noundef nonnull @.str.150, i32 noundef %9) #22
  br label %set_dev_info.exit

if.else27.i:                                      ; preds = %if.else19.i
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %10 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.else27.i.dev_name.exit.i_crit_edge

if.else27.i.dev_name.exit.i_crit_edge:            ; preds = %if.else27.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.else27.i
  call void @__sanitizer_cov_trace_pc() #24
  %12 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.else27.i.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %13, %if.end.i.i ], [ %11, %if.else27.i.dev_name.exit.i_crit_edge ]
  %call31.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %device24.i, i32 noundef 48, ptr noundef nonnull @.str.151, ptr noundef %subsys.0.i, ptr noundef %retval.0.i.i) #22
  br label %set_dev_info.exit

set_dev_info.exit:                                ; preds = %dev_name.exit.i, %if.then23.i, %if.then9.i, %if.else.i.set_dev_info.exit_crit_edge
  %call = call i32 @vprintk_emit(i32 noundef 0, i32 noundef %level, ptr noundef nonnull %dev_info, ptr noundef %fmt, [1 x i32] %args.coerce) #22
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %dev_info) #22
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vprintk_emit(i32 noundef, i32 noundef, ptr noundef, ptr noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_printk_emit(i32 noundef %level, ptr nocapture noundef readonly %dev, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %0 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %1 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %1)
  %.fca.0.load = load i32, ptr %args, align 4
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %.fca.0.load, 0
  %call = call i32 @dev_vprintk_emit(i32 noundef %level, ptr noundef %dev, ptr noundef %fmt, [1 x i32] %.fca.0.insert) #26
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  ret i32 %call
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @_dev_printk(ptr noundef %level, ptr noundef %dev, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #22
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__dev_printk(ptr noundef %level, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__dev_printk(ptr noundef %level, ptr noundef %dev, ptr noundef %vaf) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %do.end, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr i8, ptr %level, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %1 to i32
  %sub = add nsw i32 %conv, -48
  %driver.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 6
  %2 = ptrtoint ptr %driver.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %driver.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %cond.false.i, label %if.then.cond.end.sink.split.i_crit_edge

if.then.cond.end.sink.split.i_crit_edge:          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end.sink.split.i

cond.false.i:                                     ; preds = %if.then
  %bus.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %4 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %cond.false.i.i, label %cond.false.i.cond.end.sink.split.i_crit_edge

cond.false.i.cond.end.sink.split.i_crit_edge:     ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end.sink.split.i

cond.false.i.i:                                   ; preds = %cond.false.i
  %class.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 33
  %6 = ptrtoint ptr %class.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %class.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %7, null
  br i1 %tobool2.not.i.i, label %cond.false.i.i.dev_driver_string.exit_crit_edge, label %cond.false.i.i.cond.end.sink.split.i_crit_edge

cond.false.i.i.cond.end.sink.split.i_crit_edge:   ; preds = %cond.false.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end.sink.split.i

cond.false.i.i.dev_driver_string.exit_crit_edge:  ; preds = %cond.false.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_driver_string.exit

cond.end.sink.split.i:                            ; preds = %cond.false.i.i.cond.end.sink.split.i_crit_edge, %cond.false.i.cond.end.sink.split.i_crit_edge, %if.then.cond.end.sink.split.i_crit_edge
  %.sink.i.sink.i = phi ptr [ %3, %if.then.cond.end.sink.split.i_crit_edge ], [ %5, %cond.false.i.cond.end.sink.split.i_crit_edge ], [ %7, %cond.false.i.i.cond.end.sink.split.i_crit_edge ]
  %8 = ptrtoint ptr %.sink.i.sink.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %.sink.i.sink.i, align 4
  br label %dev_driver_string.exit

dev_driver_string.exit:                           ; preds = %cond.end.sink.split.i, %cond.false.i.i.dev_driver_string.exit_crit_edge
  %cond.i = phi ptr [ @.str.90, %cond.false.i.i.dev_driver_string.exit_crit_edge ], [ %9, %cond.end.sink.split.i ]
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %10 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i9 = icmp eq ptr %11, null
  br i1 %tobool.not.i9, label %if.end.i, label %dev_driver_string.exit.dev_name.exit_crit_edge

dev_driver_string.exit.dev_name.exit_crit_edge:   ; preds = %dev_driver_string.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %dev_driver_string.exit
  call void @__sanitizer_cov_trace_pc() #24
  %12 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %dev_driver_string.exit.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %13, %if.end.i ], [ %11, %dev_driver_string.exit.dev_name.exit_crit_edge ]
  %call2 = tail call i32 (i32, ptr, ptr, ...) @dev_printk_emit(i32 noundef %sub, ptr noundef nonnull %dev, ptr noundef nonnull @.str.152, ptr noundef %cond.i, ptr noundef %retval.0.i, ptr noundef %vaf) #26
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef %level, ptr noundef %vaf) #28
  br label %if.end

if.end:                                           ; preds = %do.end, %dev_name.exit
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @_dev_emerg(ptr noundef %dev, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #22
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__dev_printk(ptr noundef nonnull @.str.49, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #22
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @_dev_alert(ptr noundef %dev, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #22
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__dev_printk(ptr noundef nonnull @.str.50, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #22
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @_dev_crit(ptr noundef %dev, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #22
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__dev_printk(ptr noundef nonnull @.str.51, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #22
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @_dev_err(ptr noundef %dev, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #22
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__dev_printk(ptr noundef nonnull @.str.52, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #22
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @_dev_warn(ptr noundef %dev, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #22
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__dev_printk(ptr noundef nonnull @.str.53, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #22
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @_dev_notice(ptr noundef %dev, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #22
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !524
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__dev_printk(ptr noundef nonnull @.str.54, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_set_deferred_probe_reason(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @set_primary_fwnode(ptr nocapture noundef %dev, ptr noundef %fwnode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %parent1 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %parent1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent1, align 8
  %fwnode2 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %2 = ptrtoint ptr %fwnode2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fwnode2, align 4
  %tobool.not = icmp eq ptr %fwnode, null
  %tobool.not.i61 = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  br i1 %tobool.not.i61, label %if.then.if.end30_crit_edge, label %fwnode_is_primary.exit

if.then.if.end30_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end30

fwnode_is_primary.exit:                           ; preds = %if.then
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %cmp.i.i.not = icmp ugt ptr %5, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.not, label %fwnode_is_primary.exit.if.then5_crit_edge, label %if.end

fwnode_is_primary.exit.if.then5_crit_edge:        ; preds = %fwnode_is_primary.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then5

if.end:                                           ; preds = %fwnode_is_primary.exit
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %3, align 4
  %tobool4.not = icmp eq ptr %7, null
  br i1 %tobool4.not, label %if.end.if.end30_crit_edge, label %if.end.if.then5_crit_edge

if.end.if.then5_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then5

if.end.if.end30_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end30

if.then5:                                         ; preds = %if.end.if.then5_crit_edge, %fwnode_is_primary.exit.if.then5_crit_edge
  %fn.070 = phi ptr [ %7, %if.end.if.then5_crit_edge ], [ %3, %fwnode_is_primary.exit.if.then5_crit_edge ]
  %8 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fwnode, align 4
  %tobool7.not = icmp eq ptr %9, null
  br i1 %tobool7.not, label %if.then5.if.end22_crit_edge, label %do.end, !prof !523

if.then5.if.end22_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

do.end:                                           ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 4760, i32 noundef 9, ptr noundef null) #22
  br label %if.end22

if.end22:                                         ; preds = %do.end, %if.then5.if.end22_crit_edge
  %10 = ptrtoint ptr %fwnode to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %fn.070, ptr %fwnode, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.end22, %if.end.if.end30_crit_edge, %if.then.if.end30_crit_edge
  %11 = ptrtoint ptr %fwnode2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %fwnode, ptr %fwnode2, align 4
  br label %if.end44

if.else:                                          ; preds = %entry
  br i1 %tobool.not.i61, label %if.else.if.else41_crit_edge, label %fwnode_is_primary.exit64

if.else.if.else41_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else41

fwnode_is_primary.exit64:                         ; preds = %if.else
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %3, align 4
  %cmp.i.i62.not = icmp ugt ptr %13, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i62.not, label %fwnode_is_primary.exit64.if.else41_crit_edge, label %if.then33

fwnode_is_primary.exit64.if.else41_crit_edge:     ; preds = %fwnode_is_primary.exit64
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else41

if.then33:                                        ; preds = %fwnode_is_primary.exit64
  %14 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %3, align 4
  %16 = ptrtoint ptr %fwnode2 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %fwnode2, align 4
  %tobool36.not = icmp eq ptr %1, null
  br i1 %tobool36.not, label %if.then33.if.then38_crit_edge, label %land.lhs.true

if.then33.if.then38_crit_edge:                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then38

land.lhs.true:                                    ; preds = %if.then33
  %fwnode37 = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 28
  %17 = ptrtoint ptr %fwnode37 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %fwnode37, align 4
  %cmp = icmp eq ptr %3, %18
  br i1 %cmp, label %land.lhs.true.if.end44_crit_edge, label %land.lhs.true.if.then38_crit_edge

land.lhs.true.if.then38_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then38

land.lhs.true.if.end44_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44

if.then38:                                        ; preds = %land.lhs.true.if.then38_crit_edge, %if.then33.if.then38_crit_edge
  %19 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %3, align 4
  br label %if.end44

if.else41:                                        ; preds = %fwnode_is_primary.exit64.if.else41_crit_edge, %if.else.if.else41_crit_edge
  %20 = ptrtoint ptr %fwnode2 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %fwnode2, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.then38, %land.lhs.true.if.end44_crit_edge, %if.end30
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @set_secondary_fwnode(ptr nocapture noundef %dev, ptr noundef %fwnode) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %fwnode, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %0 = ptrtoint ptr %fwnode to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -19 to ptr), ptr %fwnode, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %fwnode1 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %1 = ptrtoint ptr %fwnode1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fwnode1, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %if.end.if.else_crit_edge, label %fwnode_is_primary.exit

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else

fwnode_is_primary.exit:                           ; preds = %if.end
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 4
  %cmp.i.i.not = icmp ugt ptr %4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.not, label %fwnode_is_primary.exit.if.else_crit_edge, label %fwnode_is_primary.exit.if.end7_crit_edge

fwnode_is_primary.exit.if.end7_crit_edge:         ; preds = %fwnode_is_primary.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

fwnode_is_primary.exit.if.else_crit_edge:         ; preds = %fwnode_is_primary.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else

if.else:                                          ; preds = %fwnode_is_primary.exit.if.else_crit_edge, %if.end.if.else_crit_edge
  br label %if.end7

if.end7:                                          ; preds = %if.else, %fwnode_is_primary.exit.if.end7_crit_edge
  %fwnode1.sink = phi ptr [ %fwnode1, %if.else ], [ %2, %fwnode_is_primary.exit.if.end7_crit_edge ]
  %5 = ptrtoint ptr %fwnode1.sink to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %fwnode, ptr %fwnode1.sink, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @device_set_of_node_from_dev(ptr nocapture noundef %dev, ptr nocapture noundef readonly %dev2) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %of_node = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node, align 8
  tail call void @of_node_put(ptr noundef %1) #22
  %of_node1 = getelementptr inbounds %struct.device, ptr %dev2, i32 0, i32 27
  %2 = ptrtoint ptr %of_node1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of_node1, align 8
  %call = tail call ptr @of_node_get(ptr noundef %3) #22
  %4 = ptrtoint ptr %of_node to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call, ptr %of_node, align 8
  %of_node_reused = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 39
  %5 = ptrtoint ptr %of_node_reused to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %of_node_reused, align 4
  %bf.set = or i8 %bf.load, 32
  store i8 %bf.set, ptr %of_node_reused, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @of_node_put(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_node_get(ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @device_set_node(ptr nocapture noundef writeonly %dev, ptr noundef %fwnode) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %fwnode1 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %0 = ptrtoint ptr %fwnode1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %fwnode, ptr %fwnode1, align 4
  %tobool.not.i.i = icmp eq ptr %fwnode, null
  %cmp.i.i = icmp ugt ptr %fwnode, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i = or i1 %tobool.not.i.i, %cmp.i.i
  br i1 %spec.select.i.i, label %entry.is_of_node.exit.thread_crit_edge, label %is_of_node.exit

entry.is_of_node.exit.thread_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %is_of_node.exit.thread

is_of_node.exit:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %ops.i = getelementptr inbounds %struct.fwnode_handle, ptr %fwnode, i32 0, i32 1
  %1 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ops.i, align 4
  %cmp.i = icmp eq ptr %2, @of_fwnode_ops
  %add.ptr = getelementptr i8, ptr %fwnode, i32 -12
  %spec.select = select i1 %cmp.i, ptr %add.ptr, ptr null
  br label %is_of_node.exit.thread

is_of_node.exit.thread:                           ; preds = %is_of_node.exit, %entry.is_of_node.exit.thread_crit_edge
  %3 = phi ptr [ null, %entry.is_of_node.exit.thread_crit_edge ], [ %spec.select, %is_of_node.exit ]
  %of_node = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %4 = ptrtoint ptr %of_node to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %of_node, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_match_name(ptr nocapture noundef readonly %dev, ptr noundef %name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %0 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.dev_name.exit_crit_edge

entry.dev_name.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %entry.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %3, %if.end.i ], [ %1, %entry.dev_name.exit_crit_edge ]
  %call1 = tail call zeroext i1 @sysfs_streq(ptr noundef %retval.0.i, ptr noundef %name) #22
  %conv = zext i1 %call1 to i32
  ret i32 %conv
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @device_match_of_node(ptr nocapture noundef readonly %dev, ptr noundef readnone %np) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %of_node = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node, align 8
  %cmp = icmp eq ptr %1, %np
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @device_match_fwnode(ptr noundef %dev, ptr noundef readnone %fwnode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @dev_fwnode(ptr noundef %dev) #22
  %cmp = icmp eq ptr %call, %fwnode
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_fwnode(ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @device_match_devt(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %pdevt) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %devt = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 29
  %0 = ptrtoint ptr %devt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %devt, align 8
  %2 = ptrtoint ptr %pdevt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pdevt, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp = icmp eq i32 %1, %3
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @device_match_acpi_dev(ptr nocapture readnone %dev, ptr noundef readnone %adev) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %adev, null
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @device_match_acpi_handle(ptr nocapture readnone %dev, ptr noundef readnone %handle) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %handle, null
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @device_match_any(ptr nocapture readnone %dev, ptr nocapture readnone %unused) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 1
}

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__srcu_read_lock(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @device_links_srcu, i32 0, i32 16), i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @device_links_srcu, i32 0, i32 16), i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__srcu_read_unlock(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__class_register(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @class_interface_register(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @class_unregister(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @devlink_add_symlinks(ptr noundef %dev, ptr nocapture noundef readnone %class_intf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -24
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  %consumer = getelementptr i8, ptr %dev, i32 -12
  %2 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %consumer, align 4
  %bus.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %cond.false.i, label %entry.cond.end7.sink.split.i_crit_edge

entry.cond.end7.sink.split.i_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i

cond.false.i:                                     ; preds = %entry
  %class.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 33
  %6 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %class.i, align 4
  %tobool2.not.i = icmp eq ptr %7, null
  br i1 %tobool2.not.i, label %cond.false.i.dev_bus_name.exit_crit_edge, label %cond.false.i.cond.end7.sink.split.i_crit_edge

cond.false.i.cond.end7.sink.split.i_crit_edge:    ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i

cond.false.i.dev_bus_name.exit_crit_edge:         ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit

cond.end7.sink.split.i:                           ; preds = %cond.false.i.cond.end7.sink.split.i_crit_edge, %entry.cond.end7.sink.split.i_crit_edge
  %.sink.i = phi ptr [ %5, %entry.cond.end7.sink.split.i_crit_edge ], [ %7, %cond.false.i.cond.end7.sink.split.i_crit_edge ]
  %8 = ptrtoint ptr %.sink.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %.sink.i, align 4
  br label %dev_bus_name.exit

dev_bus_name.exit:                                ; preds = %cond.end7.sink.split.i, %cond.false.i.dev_bus_name.exit_crit_edge
  %cond8.i = phi ptr [ @.str.90, %cond.false.i.dev_bus_name.exit_crit_edge ], [ %9, %cond.end7.sink.split.i ]
  %call1 = tail call i32 @strlen(ptr noundef %cond8.i) #27
  %init_name.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i96 = icmp eq ptr %11, null
  br i1 %tobool.not.i96, label %if.end.i, label %dev_bus_name.exit.dev_name.exit_crit_edge

dev_bus_name.exit.dev_name.exit_crit_edge:        ; preds = %dev_bus_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %dev_bus_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %dev_bus_name.exit.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %13, %if.end.i ], [ %11, %dev_bus_name.exit.dev_name.exit_crit_edge ]
  %call3 = tail call i32 @strlen(ptr noundef %retval.0.i) #27
  %add = add i32 %call3, %call1
  %bus.i97 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 5
  %14 = ptrtoint ptr %bus.i97 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bus.i97, align 8
  %tobool.not.i98 = icmp eq ptr %15, null
  br i1 %tobool.not.i98, label %cond.false.i101, label %dev_name.exit.cond.end7.sink.split.i103_crit_edge

dev_name.exit.cond.end7.sink.split.i103_crit_edge: ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i103

cond.false.i101:                                  ; preds = %dev_name.exit
  %class.i99 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 33
  %16 = ptrtoint ptr %class.i99 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %class.i99, align 4
  %tobool2.not.i100 = icmp eq ptr %17, null
  br i1 %tobool2.not.i100, label %cond.false.i101.dev_bus_name.exit105_crit_edge, label %cond.false.i101.cond.end7.sink.split.i103_crit_edge

cond.false.i101.cond.end7.sink.split.i103_crit_edge: ; preds = %cond.false.i101
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i103

cond.false.i101.dev_bus_name.exit105_crit_edge:   ; preds = %cond.false.i101
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit105

cond.end7.sink.split.i103:                        ; preds = %cond.false.i101.cond.end7.sink.split.i103_crit_edge, %dev_name.exit.cond.end7.sink.split.i103_crit_edge
  %.sink.i102 = phi ptr [ %15, %dev_name.exit.cond.end7.sink.split.i103_crit_edge ], [ %17, %cond.false.i101.cond.end7.sink.split.i103_crit_edge ]
  %18 = ptrtoint ptr %.sink.i102 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %.sink.i102, align 4
  br label %dev_bus_name.exit105

dev_bus_name.exit105:                             ; preds = %cond.end7.sink.split.i103, %cond.false.i101.dev_bus_name.exit105_crit_edge
  %cond8.i104 = phi ptr [ @.str.90, %cond.false.i101.dev_bus_name.exit105_crit_edge ], [ %19, %cond.end7.sink.split.i103 ]
  %call5 = tail call i32 @strlen(ptr noundef %cond8.i104) #27
  %init_name.i106 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 3
  %20 = ptrtoint ptr %init_name.i106 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %init_name.i106, align 8
  %tobool.not.i107 = icmp eq ptr %21, null
  br i1 %tobool.not.i107, label %if.end.i108, label %dev_bus_name.exit105.dev_name.exit110_crit_edge

dev_bus_name.exit105.dev_name.exit110_crit_edge:  ; preds = %dev_bus_name.exit105
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit110

if.end.i108:                                      ; preds = %dev_bus_name.exit105
  call void @__sanitizer_cov_trace_pc() #24
  %22 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %3, align 4
  br label %dev_name.exit110

dev_name.exit110:                                 ; preds = %if.end.i108, %dev_bus_name.exit105.dev_name.exit110_crit_edge
  %retval.0.i109 = phi ptr [ %23, %if.end.i108 ], [ %21, %dev_bus_name.exit105.dev_name.exit110_crit_edge ]
  %call7 = tail call i32 @strlen(ptr noundef %retval.0.i109) #27
  %add8 = add i32 %call7, %call5
  %24 = tail call i32 @llvm.umax.i32(i32 %add, i32 %add8)
  %add11 = add i32 %24, 11
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add11, i32 noundef 3520) #30
  %tobool.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not, label %dev_name.exit110.cleanup_crit_edge, label %if.end

dev_name.exit110.cleanup_crit_edge:               ; preds = %dev_name.exit110
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %dev_name.exit110
  %call14 = tail call i32 @sysfs_create_link(ptr noundef %dev, ptr noundef %1, ptr noundef nonnull @.str.66) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end17:                                         ; preds = %if.end
  %call21 = tail call i32 @sysfs_create_link(ptr noundef %dev, ptr noundef %3, ptr noundef nonnull @.str.67) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end17.err_con_crit_edge

if.end17.err_con_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_con

if.end24:                                         ; preds = %if.end17
  %25 = ptrtoint ptr %bus.i97 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %bus.i97, align 8
  %tobool.not.i112 = icmp eq ptr %26, null
  br i1 %tobool.not.i112, label %cond.false.i115, label %if.end24.cond.end7.sink.split.i117_crit_edge

if.end24.cond.end7.sink.split.i117_crit_edge:     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i117

cond.false.i115:                                  ; preds = %if.end24
  %class.i113 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 33
  %27 = ptrtoint ptr %class.i113 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %class.i113, align 4
  %tobool2.not.i114 = icmp eq ptr %28, null
  br i1 %tobool2.not.i114, label %cond.false.i115.dev_bus_name.exit119_crit_edge, label %cond.false.i115.cond.end7.sink.split.i117_crit_edge

cond.false.i115.cond.end7.sink.split.i117_crit_edge: ; preds = %cond.false.i115
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i117

cond.false.i115.dev_bus_name.exit119_crit_edge:   ; preds = %cond.false.i115
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit119

cond.end7.sink.split.i117:                        ; preds = %cond.false.i115.cond.end7.sink.split.i117_crit_edge, %if.end24.cond.end7.sink.split.i117_crit_edge
  %.sink.i116 = phi ptr [ %26, %if.end24.cond.end7.sink.split.i117_crit_edge ], [ %28, %cond.false.i115.cond.end7.sink.split.i117_crit_edge ]
  %29 = ptrtoint ptr %.sink.i116 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %.sink.i116, align 4
  br label %dev_bus_name.exit119

dev_bus_name.exit119:                             ; preds = %cond.end7.sink.split.i117, %cond.false.i115.dev_bus_name.exit119_crit_edge
  %cond8.i118 = phi ptr [ @.str.90, %cond.false.i115.dev_bus_name.exit119_crit_edge ], [ %30, %cond.end7.sink.split.i117 ]
  %31 = ptrtoint ptr %init_name.i106 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %init_name.i106, align 8
  %tobool.not.i121 = icmp eq ptr %32, null
  br i1 %tobool.not.i121, label %if.end.i122, label %dev_bus_name.exit119.dev_name.exit124_crit_edge

dev_bus_name.exit119.dev_name.exit124_crit_edge:  ; preds = %dev_bus_name.exit119
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit124

if.end.i122:                                      ; preds = %dev_bus_name.exit119
  call void @__sanitizer_cov_trace_pc() #24
  %33 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %3, align 4
  br label %dev_name.exit124

dev_name.exit124:                                 ; preds = %if.end.i122, %dev_bus_name.exit119.dev_name.exit124_crit_edge
  %retval.0.i123 = phi ptr [ %34, %if.end.i122 ], [ %32, %dev_bus_name.exit119.dev_name.exit124_crit_edge ]
  %call27 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %call9.i.i, i32 noundef %add11, ptr noundef nonnull @.str.68, ptr noundef %cond8.i118, ptr noundef %retval.0.i123)
  %call31 = tail call i32 @sysfs_create_link(ptr noundef %1, ptr noundef %dev, ptr noundef nonnull %call9.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %dev_name.exit124.err_con_dev_crit_edge

dev_name.exit124.err_con_dev_crit_edge:           ; preds = %dev_name.exit124
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_con_dev

if.end34:                                         ; preds = %dev_name.exit124
  %35 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bus.i, align 8
  %tobool.not.i126 = icmp eq ptr %36, null
  br i1 %tobool.not.i126, label %cond.false.i129, label %if.end34.cond.end7.sink.split.i131_crit_edge

if.end34.cond.end7.sink.split.i131_crit_edge:     ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i131

cond.false.i129:                                  ; preds = %if.end34
  %class.i127 = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 33
  %37 = ptrtoint ptr %class.i127 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %class.i127, align 4
  %tobool2.not.i128 = icmp eq ptr %38, null
  br i1 %tobool2.not.i128, label %cond.false.i129.dev_bus_name.exit133_crit_edge, label %cond.false.i129.cond.end7.sink.split.i131_crit_edge

cond.false.i129.cond.end7.sink.split.i131_crit_edge: ; preds = %cond.false.i129
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i131

cond.false.i129.dev_bus_name.exit133_crit_edge:   ; preds = %cond.false.i129
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit133

cond.end7.sink.split.i131:                        ; preds = %cond.false.i129.cond.end7.sink.split.i131_crit_edge, %if.end34.cond.end7.sink.split.i131_crit_edge
  %.sink.i130 = phi ptr [ %36, %if.end34.cond.end7.sink.split.i131_crit_edge ], [ %38, %cond.false.i129.cond.end7.sink.split.i131_crit_edge ]
  %39 = ptrtoint ptr %.sink.i130 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %.sink.i130, align 4
  br label %dev_bus_name.exit133

dev_bus_name.exit133:                             ; preds = %cond.end7.sink.split.i131, %cond.false.i129.dev_bus_name.exit133_crit_edge
  %cond8.i132 = phi ptr [ @.str.90, %cond.false.i129.dev_bus_name.exit133_crit_edge ], [ %40, %cond.end7.sink.split.i131 ]
  %41 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i135 = icmp eq ptr %42, null
  br i1 %tobool.not.i135, label %if.end.i136, label %dev_bus_name.exit133.dev_name.exit138_crit_edge

dev_bus_name.exit133.dev_name.exit138_crit_edge:  ; preds = %dev_bus_name.exit133
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit138

if.end.i136:                                      ; preds = %dev_bus_name.exit133
  call void @__sanitizer_cov_trace_pc() #24
  %43 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %1, align 4
  br label %dev_name.exit138

dev_name.exit138:                                 ; preds = %if.end.i136, %dev_bus_name.exit133.dev_name.exit138_crit_edge
  %retval.0.i137 = phi ptr [ %44, %if.end.i136 ], [ %42, %dev_bus_name.exit133.dev_name.exit138_crit_edge ]
  %call37 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %call9.i.i, i32 noundef %add11, ptr noundef nonnull @.str.69, ptr noundef %cond8.i132, ptr noundef %retval.0.i137)
  %call41 = tail call i32 @sysfs_create_link(ptr noundef %3, ptr noundef %dev, ptr noundef nonnull %call9.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %dev_name.exit138.out_crit_edge, label %err_sup_dev

dev_name.exit138.out_crit_edge:                   ; preds = %dev_name.exit138
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

err_sup_dev:                                      ; preds = %dev_name.exit138
  %45 = ptrtoint ptr %bus.i97 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %bus.i97, align 8
  %tobool.not.i140 = icmp eq ptr %46, null
  br i1 %tobool.not.i140, label %cond.false.i143, label %err_sup_dev.cond.end7.sink.split.i145_crit_edge

err_sup_dev.cond.end7.sink.split.i145_crit_edge:  ; preds = %err_sup_dev
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i145

cond.false.i143:                                  ; preds = %err_sup_dev
  %class.i141 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 33
  %47 = ptrtoint ptr %class.i141 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %class.i141, align 4
  %tobool2.not.i142 = icmp eq ptr %48, null
  br i1 %tobool2.not.i142, label %cond.false.i143.dev_bus_name.exit147_crit_edge, label %cond.false.i143.cond.end7.sink.split.i145_crit_edge

cond.false.i143.cond.end7.sink.split.i145_crit_edge: ; preds = %cond.false.i143
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i145

cond.false.i143.dev_bus_name.exit147_crit_edge:   ; preds = %cond.false.i143
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit147

cond.end7.sink.split.i145:                        ; preds = %cond.false.i143.cond.end7.sink.split.i145_crit_edge, %err_sup_dev.cond.end7.sink.split.i145_crit_edge
  %.sink.i144 = phi ptr [ %46, %err_sup_dev.cond.end7.sink.split.i145_crit_edge ], [ %48, %cond.false.i143.cond.end7.sink.split.i145_crit_edge ]
  %49 = ptrtoint ptr %.sink.i144 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %.sink.i144, align 4
  br label %dev_bus_name.exit147

dev_bus_name.exit147:                             ; preds = %cond.end7.sink.split.i145, %cond.false.i143.dev_bus_name.exit147_crit_edge
  %cond8.i146 = phi ptr [ @.str.90, %cond.false.i143.dev_bus_name.exit147_crit_edge ], [ %50, %cond.end7.sink.split.i145 ]
  %51 = ptrtoint ptr %init_name.i106 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %init_name.i106, align 8
  %tobool.not.i149 = icmp eq ptr %52, null
  br i1 %tobool.not.i149, label %if.end.i150, label %dev_bus_name.exit147.dev_name.exit152_crit_edge

dev_bus_name.exit147.dev_name.exit152_crit_edge:  ; preds = %dev_bus_name.exit147
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit152

if.end.i150:                                      ; preds = %dev_bus_name.exit147
  call void @__sanitizer_cov_trace_pc() #24
  %53 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %3, align 4
  br label %dev_name.exit152

dev_name.exit152:                                 ; preds = %if.end.i150, %dev_bus_name.exit147.dev_name.exit152_crit_edge
  %retval.0.i151 = phi ptr [ %54, %if.end.i150 ], [ %52, %dev_bus_name.exit147.dev_name.exit152_crit_edge ]
  %call47 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %call9.i.i, i32 noundef %add11, ptr noundef nonnull @.str.68, ptr noundef %cond8.i146, ptr noundef %retval.0.i151)
  tail call void @sysfs_remove_link(ptr noundef %1, ptr noundef nonnull %call9.i.i) #22
  br label %err_con_dev

err_con_dev:                                      ; preds = %dev_name.exit152, %dev_name.exit124.err_con_dev_crit_edge
  %ret.0 = phi i32 [ %call31, %dev_name.exit124.err_con_dev_crit_edge ], [ %call41, %dev_name.exit152 ]
  tail call void @sysfs_remove_link(ptr noundef %dev, ptr noundef nonnull @.str.67) #22
  br label %err_con

err_con:                                          ; preds = %err_con_dev, %if.end17.err_con_crit_edge
  %ret.1 = phi i32 [ %call21, %if.end17.err_con_crit_edge ], [ %ret.0, %err_con_dev ]
  tail call void @sysfs_remove_link(ptr noundef %dev, ptr noundef nonnull @.str.66) #22
  br label %out

out:                                              ; preds = %err_con, %dev_name.exit138.out_crit_edge, %if.end.out_crit_edge
  %ret.2 = phi i32 [ %call14, %if.end.out_crit_edge ], [ %ret.1, %err_con ], [ 0, %dev_name.exit138.out_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call9.i.i) #22
  br label %cleanup

cleanup:                                          ; preds = %out, %dev_name.exit110.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.2, %out ], [ -12, %dev_name.exit110.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devlink_remove_symlinks(ptr noundef %dev, ptr nocapture noundef readnone %class_intf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -24
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  %consumer = getelementptr i8, ptr %dev, i32 -12
  %2 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %consumer, align 4
  tail call void @sysfs_remove_link(ptr noundef %dev, ptr noundef nonnull @.str.67) #22
  tail call void @sysfs_remove_link(ptr noundef %dev, ptr noundef nonnull @.str.66) #22
  %bus.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %cond.false.i, label %entry.cond.end7.sink.split.i_crit_edge

entry.cond.end7.sink.split.i_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i

cond.false.i:                                     ; preds = %entry
  %class.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 33
  %6 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %class.i, align 4
  %tobool2.not.i = icmp eq ptr %7, null
  br i1 %tobool2.not.i, label %cond.false.i.dev_bus_name.exit_crit_edge, label %cond.false.i.cond.end7.sink.split.i_crit_edge

cond.false.i.cond.end7.sink.split.i_crit_edge:    ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i

cond.false.i.dev_bus_name.exit_crit_edge:         ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit

cond.end7.sink.split.i:                           ; preds = %cond.false.i.cond.end7.sink.split.i_crit_edge, %entry.cond.end7.sink.split.i_crit_edge
  %.sink.i = phi ptr [ %5, %entry.cond.end7.sink.split.i_crit_edge ], [ %7, %cond.false.i.cond.end7.sink.split.i_crit_edge ]
  %8 = ptrtoint ptr %.sink.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %.sink.i, align 4
  br label %dev_bus_name.exit

dev_bus_name.exit:                                ; preds = %cond.end7.sink.split.i, %cond.false.i.dev_bus_name.exit_crit_edge
  %cond8.i = phi ptr [ @.str.90, %cond.false.i.dev_bus_name.exit_crit_edge ], [ %9, %cond.end7.sink.split.i ]
  %call3 = tail call i32 @strlen(ptr noundef %cond8.i) #27
  %init_name.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i73 = icmp eq ptr %11, null
  br i1 %tobool.not.i73, label %if.end.i, label %dev_bus_name.exit.dev_name.exit_crit_edge

dev_bus_name.exit.dev_name.exit_crit_edge:        ; preds = %dev_bus_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %dev_bus_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %dev_bus_name.exit.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %13, %if.end.i ], [ %11, %dev_bus_name.exit.dev_name.exit_crit_edge ]
  %call5 = tail call i32 @strlen(ptr noundef %retval.0.i) #27
  %add = add i32 %call5, %call3
  %bus.i74 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 5
  %14 = ptrtoint ptr %bus.i74 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bus.i74, align 8
  %tobool.not.i75 = icmp eq ptr %15, null
  br i1 %tobool.not.i75, label %cond.false.i78, label %dev_name.exit.cond.end7.sink.split.i80_crit_edge

dev_name.exit.cond.end7.sink.split.i80_crit_edge: ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i80

cond.false.i78:                                   ; preds = %dev_name.exit
  %class.i76 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 33
  %16 = ptrtoint ptr %class.i76 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %class.i76, align 4
  %tobool2.not.i77 = icmp eq ptr %17, null
  br i1 %tobool2.not.i77, label %cond.false.i78.dev_bus_name.exit82_crit_edge, label %cond.false.i78.cond.end7.sink.split.i80_crit_edge

cond.false.i78.cond.end7.sink.split.i80_crit_edge: ; preds = %cond.false.i78
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i80

cond.false.i78.dev_bus_name.exit82_crit_edge:     ; preds = %cond.false.i78
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit82

cond.end7.sink.split.i80:                         ; preds = %cond.false.i78.cond.end7.sink.split.i80_crit_edge, %dev_name.exit.cond.end7.sink.split.i80_crit_edge
  %.sink.i79 = phi ptr [ %15, %dev_name.exit.cond.end7.sink.split.i80_crit_edge ], [ %17, %cond.false.i78.cond.end7.sink.split.i80_crit_edge ]
  %18 = ptrtoint ptr %.sink.i79 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %.sink.i79, align 4
  br label %dev_bus_name.exit82

dev_bus_name.exit82:                              ; preds = %cond.end7.sink.split.i80, %cond.false.i78.dev_bus_name.exit82_crit_edge
  %cond8.i81 = phi ptr [ @.str.90, %cond.false.i78.dev_bus_name.exit82_crit_edge ], [ %19, %cond.end7.sink.split.i80 ]
  %call7 = tail call i32 @strlen(ptr noundef %cond8.i81) #27
  %init_name.i83 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 3
  %20 = ptrtoint ptr %init_name.i83 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %init_name.i83, align 8
  %tobool.not.i84 = icmp eq ptr %21, null
  br i1 %tobool.not.i84, label %if.end.i85, label %dev_bus_name.exit82.dev_name.exit87_crit_edge

dev_bus_name.exit82.dev_name.exit87_crit_edge:    ; preds = %dev_bus_name.exit82
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit87

if.end.i85:                                       ; preds = %dev_bus_name.exit82
  call void @__sanitizer_cov_trace_pc() #24
  %22 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %3, align 4
  br label %dev_name.exit87

dev_name.exit87:                                  ; preds = %if.end.i85, %dev_bus_name.exit82.dev_name.exit87_crit_edge
  %retval.0.i86 = phi ptr [ %23, %if.end.i85 ], [ %21, %dev_bus_name.exit82.dev_name.exit87_crit_edge ]
  %call9 = tail call i32 @strlen(ptr noundef %retval.0.i86) #27
  %add10 = add i32 %call9, %call7
  %24 = tail call i32 @llvm.umax.i32(i32 %add, i32 %add10)
  %add13 = add i32 %24, 11
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add13, i32 noundef 3520) #30
  %tobool.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not, label %do.end, label %if.end32

do.end:                                           ; preds = %dev_name.exit87
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 584, i32 noundef 9, ptr noundef nonnull @.str.70) #22
  br label %cleanup

if.end32:                                         ; preds = %dev_name.exit87
  %state_in_sysfs.i = getelementptr inbounds %struct.kobject, ptr %3, i32 0, i32 8
  %25 = ptrtoint ptr %state_in_sysfs.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %bf.load.i = load i8, ptr %state_in_sysfs.i, align 4
  %26 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool34.not = icmp eq i8 %26, 0
  br i1 %tobool34.not, label %if.end32.if.end40_crit_edge, label %if.then35

if.end32.if.end40_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end40

if.then35:                                        ; preds = %if.end32
  %27 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %bus.i, align 8
  %tobool.not.i89 = icmp eq ptr %28, null
  br i1 %tobool.not.i89, label %cond.false.i92, label %if.then35.cond.end7.sink.split.i94_crit_edge

if.then35.cond.end7.sink.split.i94_crit_edge:     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i94

cond.false.i92:                                   ; preds = %if.then35
  %class.i90 = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 33
  %29 = ptrtoint ptr %class.i90 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %class.i90, align 4
  %tobool2.not.i91 = icmp eq ptr %30, null
  br i1 %tobool2.not.i91, label %cond.false.i92.dev_bus_name.exit96_crit_edge, label %cond.false.i92.cond.end7.sink.split.i94_crit_edge

cond.false.i92.cond.end7.sink.split.i94_crit_edge: ; preds = %cond.false.i92
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i94

cond.false.i92.dev_bus_name.exit96_crit_edge:     ; preds = %cond.false.i92
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit96

cond.end7.sink.split.i94:                         ; preds = %cond.false.i92.cond.end7.sink.split.i94_crit_edge, %if.then35.cond.end7.sink.split.i94_crit_edge
  %.sink.i93 = phi ptr [ %28, %if.then35.cond.end7.sink.split.i94_crit_edge ], [ %30, %cond.false.i92.cond.end7.sink.split.i94_crit_edge ]
  %31 = ptrtoint ptr %.sink.i93 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %.sink.i93, align 4
  br label %dev_bus_name.exit96

dev_bus_name.exit96:                              ; preds = %cond.end7.sink.split.i94, %cond.false.i92.dev_bus_name.exit96_crit_edge
  %cond8.i95 = phi ptr [ @.str.90, %cond.false.i92.dev_bus_name.exit96_crit_edge ], [ %32, %cond.end7.sink.split.i94 ]
  %33 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i98 = icmp eq ptr %34, null
  br i1 %tobool.not.i98, label %if.end.i99, label %dev_bus_name.exit96.dev_name.exit101_crit_edge

dev_bus_name.exit96.dev_name.exit101_crit_edge:   ; preds = %dev_bus_name.exit96
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit101

if.end.i99:                                       ; preds = %dev_bus_name.exit96
  call void @__sanitizer_cov_trace_pc() #24
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %1, align 4
  br label %dev_name.exit101

dev_name.exit101:                                 ; preds = %if.end.i99, %dev_bus_name.exit96.dev_name.exit101_crit_edge
  %retval.0.i100 = phi ptr [ %36, %if.end.i99 ], [ %34, %dev_bus_name.exit96.dev_name.exit101_crit_edge ]
  %call38 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %call9.i.i, i32 noundef %add13, ptr noundef nonnull @.str.69, ptr noundef %cond8.i95, ptr noundef %retval.0.i100)
  tail call void @sysfs_remove_link(ptr noundef %3, ptr noundef nonnull %call9.i.i) #22
  br label %if.end40

if.end40:                                         ; preds = %dev_name.exit101, %if.end32.if.end40_crit_edge
  %37 = ptrtoint ptr %bus.i74 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %bus.i74, align 8
  %tobool.not.i103 = icmp eq ptr %38, null
  br i1 %tobool.not.i103, label %cond.false.i106, label %if.end40.cond.end7.sink.split.i108_crit_edge

if.end40.cond.end7.sink.split.i108_crit_edge:     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i108

cond.false.i106:                                  ; preds = %if.end40
  %class.i104 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 33
  %39 = ptrtoint ptr %class.i104 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %class.i104, align 4
  %tobool2.not.i105 = icmp eq ptr %40, null
  br i1 %tobool2.not.i105, label %cond.false.i106.dev_bus_name.exit110_crit_edge, label %cond.false.i106.cond.end7.sink.split.i108_crit_edge

cond.false.i106.cond.end7.sink.split.i108_crit_edge: ; preds = %cond.false.i106
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end7.sink.split.i108

cond.false.i106.dev_bus_name.exit110_crit_edge:   ; preds = %cond.false.i106
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_bus_name.exit110

cond.end7.sink.split.i108:                        ; preds = %cond.false.i106.cond.end7.sink.split.i108_crit_edge, %if.end40.cond.end7.sink.split.i108_crit_edge
  %.sink.i107 = phi ptr [ %38, %if.end40.cond.end7.sink.split.i108_crit_edge ], [ %40, %cond.false.i106.cond.end7.sink.split.i108_crit_edge ]
  %41 = ptrtoint ptr %.sink.i107 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %.sink.i107, align 4
  br label %dev_bus_name.exit110

dev_bus_name.exit110:                             ; preds = %cond.end7.sink.split.i108, %cond.false.i106.dev_bus_name.exit110_crit_edge
  %cond8.i109 = phi ptr [ @.str.90, %cond.false.i106.dev_bus_name.exit110_crit_edge ], [ %42, %cond.end7.sink.split.i108 ]
  %43 = ptrtoint ptr %init_name.i83 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %init_name.i83, align 8
  %tobool.not.i112 = icmp eq ptr %44, null
  br i1 %tobool.not.i112, label %if.end.i113, label %dev_bus_name.exit110.dev_name.exit115_crit_edge

dev_bus_name.exit110.dev_name.exit115_crit_edge:  ; preds = %dev_bus_name.exit110
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit115

if.end.i113:                                      ; preds = %dev_bus_name.exit110
  call void @__sanitizer_cov_trace_pc() #24
  %45 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %3, align 4
  br label %dev_name.exit115

dev_name.exit115:                                 ; preds = %if.end.i113, %dev_bus_name.exit110.dev_name.exit115_crit_edge
  %retval.0.i114 = phi ptr [ %46, %if.end.i113 ], [ %44, %dev_bus_name.exit110.dev_name.exit115_crit_edge ]
  %call43 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %call9.i.i, i32 noundef %add13, ptr noundef nonnull @.str.68, ptr noundef %cond8.i109, ptr noundef %retval.0.i114)
  tail call void @sysfs_remove_link(ptr noundef %1, ptr noundef nonnull %call9.i.i) #22
  tail call void @kfree(ptr noundef nonnull %call9.i.i) #22
  br label %cleanup

cleanup:                                          ; preds = %dev_name.exit115, %do.end
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #17

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devlink_dev_release(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %rm_work = getelementptr i8, ptr %dev, i32 944
  tail call void @__init_work(ptr noundef %rm_work, i32 noundef 0) #22
  %0 = ptrtoint ptr %rm_work to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -64, ptr %rm_work, align 8
  %lockdep_map = getelementptr i8, ptr %dev, i32 960
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.89, ptr noundef nonnull @devlink_dev_release.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22
  %entry4 = getelementptr i8, ptr %dev, i32 948
  %1 = ptrtoint ptr %entry4 to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %entry4, ptr %entry4, align 4
  %prev.i = getelementptr i8, ptr %dev, i32 952
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %entry4, ptr %prev.i, align 4
  %func = getelementptr i8, ptr %dev, i32 956
  %3 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @device_link_release_fn, ptr %func, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_long_wq to i32))
  %4 = load ptr, ptr @system_long_wq, align 4
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %4, ptr noundef %rm_work) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @status_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %status = getelementptr i8, ptr %dev, i32 928
  %0 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %status, align 8
  %switch.tableidx = add i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %switch.tableidx)
  %2 = icmp ult i32 %switch.tableidx, 6
  br i1 %2, label %switch.lookup, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %sw.epilog

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %switch.gep = getelementptr inbounds [6 x ptr], ptr @switch.table.status_show, i32 0, i32 %switch.tableidx
  %3 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %3)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %switch.lookup, %entry.sw.epilog_crit_edge
  %output.0 = phi ptr [ %switch.load, %switch.lookup ], [ @.str.81, %entry.sw.epilog_crit_edge ]
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.82, ptr noundef nonnull %output.0) #22
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @auto_remove_on_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr i8, ptr %dev, i32 932
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %and2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  %.str.86..str.85 = select i1 %tobool3.not, ptr @.str.86, ptr @.str.85
  %output.0 = select i1 %tobool.not, ptr %.str.86..str.85, ptr @.str.84
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.82, ptr noundef nonnull %output.0) #22
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @runtime_pm_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr i8, ptr %dev, i32 932
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = lshr i32 %1, 2
  %and.lobit = and i32 %and, 1
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.12, i32 noundef %and.lobit) #22
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @sync_state_only_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr i8, ptr %dev, i32 932
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = lshr i32 %1, 7
  %and.lobit = and i32 %and, 1
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.12, i32 noundef %and.lobit) #22
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @device_link_release_fn(ptr noundef %work) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -968
  tail call void @synchronize_srcu(ptr noundef nonnull @device_links_srcu) #22
  tail call void @pm_runtime_release_supplier(ptr noundef %add.ptr, i1 noundef zeroext true) #22
  %consumer = getelementptr i8, ptr %work, i32 -956
  %0 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %consumer, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.put_device.exit_crit_edge, label %if.then.i

entry.put_device.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %1) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %if.then.i, %entry.put_device.exit_crit_edge
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr, align 8
  %tobool.not.i4 = icmp eq ptr %3, null
  br i1 %tobool.not.i4, label %put_device.exit.put_device.exit6_crit_edge, label %if.then.i5

put_device.exit.put_device.exit6_crit_edge:       ; preds = %put_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit6

if.then.i5:                                       ; preds = %put_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %3) #22
  br label %put_device.exit6

put_device.exit6:                                 ; preds = %if.then.i5, %put_device.exit.put_device.exit6_crit_edge
  tail call void @kfree(ptr noundef %add.ptr) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_release_supplier(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_srcu(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_idle(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__device_link_del(ptr noundef %kref) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %kref, i32 -964
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__device_link_del.__UNIQUE_ID_ddebug367, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@__device_link_del, %do.end)) #22
          to label %if.then [label %do.end], !srcloc !522

if.then:                                          ; preds = %entry
  %consumer = getelementptr i8, ptr %kref, i32 -952
  %0 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %consumer, align 4
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr, align 8
  %init_name.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.dev_name.exit_crit_edge

if.then.dev_name.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %3, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then.dev_name.exit_crit_edge
  %retval.0.i10 = phi ptr [ %7, %if.end.i ], [ %5, %if.then.dev_name.exit_crit_edge ]
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__device_link_del.__UNIQUE_ID_ddebug367, ptr noundef %1, ptr noundef nonnull @.str.93, ptr noundef %retval.0.i10) #22
  br label %do.end

do.end:                                           ; preds = %dev_name.exit, %entry
  tail call void @pm_runtime_drop_link(ptr noundef %add.ptr) #22
  %s_node.i = getelementptr i8, ptr %kref, i32 -960
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %s_node.i) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %do.end.list_del_rcu.exit.i_crit_edge

do.end.list_del_rcu.exit.i_crit_edge:             ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_rcu.exit.i

if.end.i.i.i:                                     ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr i8, ptr %kref, i32 -956
  %8 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev.i.i.i, align 4
  %10 = ptrtoint ptr %s_node.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %s_node.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %prev1.i.i.i.i, align 4
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %11, ptr %9, align 4
  br label %list_del_rcu.exit.i

list_del_rcu.exit.i:                              ; preds = %if.end.i.i.i, %do.end.list_del_rcu.exit.i_crit_edge
  %prev.i.i = getelementptr i8, ptr %kref, i32 -956
  %14 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %c_node.i = getelementptr i8, ptr %kref, i32 -948
  %call.i.i2.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %c_node.i) #22
  br i1 %call.i.i2.i, label %if.end.i.i5.i, label %list_del_rcu.exit.i.device_link_remove_from_lists.exit_crit_edge

list_del_rcu.exit.i.device_link_remove_from_lists.exit_crit_edge: ; preds = %list_del_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_link_remove_from_lists.exit

if.end.i.i5.i:                                    ; preds = %list_del_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i3.i = getelementptr i8, ptr %kref, i32 -944
  %15 = ptrtoint ptr %prev.i.i3.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i3.i, align 4
  %17 = ptrtoint ptr %c_node.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %c_node.i, align 4
  %prev1.i.i.i4.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i4.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i4.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %device_link_remove_from_lists.exit

device_link_remove_from_lists.exit:               ; preds = %if.end.i.i5.i, %list_del_rcu.exit.i.device_link_remove_from_lists.exit_crit_edge
  %prev.i6.i = getelementptr i8, ptr %kref, i32 -944
  %21 = ptrtoint ptr %prev.i6.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i6.i, align 4
  %link_dev = getelementptr i8, ptr %kref, i32 -940
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_unregister.__UNIQUE_ID_ddebug393, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@__device_link_del, %device_unregister.exit)) #22
          to label %if.then.i [label %device_unregister.exit], !srcloc !522

if.then.i:                                        ; preds = %device_link_remove_from_lists.exit
  %init_name.i14 = getelementptr i8, ptr %kref, i32 -796
  %22 = ptrtoint ptr %init_name.i14 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %init_name.i14, align 8
  %tobool.not.i15 = icmp eq ptr %23, null
  br i1 %tobool.not.i15, label %if.end.i16, label %if.then.i.dev_name.exit18_crit_edge

if.then.i.dev_name.exit18_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit18

if.end.i16:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  %24 = ptrtoint ptr %link_dev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %link_dev, align 4
  br label %dev_name.exit18

dev_name.exit18:                                  ; preds = %if.end.i16, %if.then.i.dev_name.exit18_crit_edge
  %retval.0.i17 = phi ptr [ %25, %if.end.i16 ], [ %23, %if.then.i.dev_name.exit18_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @device_unregister.__UNIQUE_ID_ddebug393, ptr noundef nonnull @.str.28, ptr noundef %retval.0.i17, ptr noundef nonnull @.str.29) #22
  br label %device_unregister.exit

device_unregister.exit:                           ; preds = %dev_name.exit18, %device_link_remove_from_lists.exit
  tail call void @device_del(ptr noundef %link_dev) #22
  %tobool.not.i11 = icmp eq ptr %link_dev, null
  br i1 %tobool.not.i11, label %device_unregister.exit.put_device.exit_crit_edge, label %if.then.i12

device_unregister.exit.put_device.exit_crit_edge: ; preds = %device_unregister.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then.i12:                                      ; preds = %device_unregister.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %link_dev) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %if.then.i12, %device_unregister.exit.put_device.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_drop_link(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @waiting_for_supplier_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mutex.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #22
  %fwnode = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %0 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fwnode, align 4
  %suppliers = getelementptr inbounds %struct.fwnode_handle, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %suppliers to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %suppliers, align 4
  %cmp.i = icmp ne ptr %3, %suppliers
  tail call void @mutex_unlock(ptr noundef %mutex.i) #22
  %conv = zext i1 %cmp.i to i32
  %call2 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.95, i32 noundef %conv) #22
  ret i32 %call2
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #18

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_kstrtoul(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_kstrtol(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtobool(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_group(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_file_ns(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_file_ns(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @device_release(ptr noundef %kobj) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %p1 = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 2
  %0 = ptrtoint ptr %p1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %p1, align 4
  %call2 = tail call i32 @devres_release_all(ptr noundef %kobj) #22
  %dma_range_map = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 21
  %2 = ptrtoint ptr %dma_range_map to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dma_range_map, align 8
  tail call void @kfree(ptr noundef %3) #22
  %release = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 35
  %4 = ptrtoint ptr %release to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %release, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void %5(ptr noundef %kobj) #22
  br label %if.end39

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 4
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %type, align 4
  %tobool4.not = icmp eq ptr %7, null
  br i1 %tobool4.not, label %if.else.if.else11_crit_edge, label %land.lhs.true

if.else.if.else11_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else11

land.lhs.true:                                    ; preds = %if.else
  %release6 = getelementptr inbounds %struct.device_type, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %release6 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %release6, align 4
  %tobool7.not = icmp eq ptr %9, null
  br i1 %tobool7.not, label %land.lhs.true.if.else11_crit_edge, label %if.then8

land.lhs.true.if.else11_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else11

if.then8:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  tail call void %9(ptr noundef %kobj) #22
  br label %if.end39

if.else11:                                        ; preds = %land.lhs.true.if.else11_crit_edge, %if.else.if.else11_crit_edge
  %class = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 33
  %10 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %class, align 4
  %tobool12.not = icmp eq ptr %11, null
  br i1 %tobool12.not, label %if.else11.do.end_crit_edge, label %land.lhs.true13

if.else11.do.end_crit_edge:                       ; preds = %if.else11
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true13:                                  ; preds = %if.else11
  %dev_release = getelementptr inbounds %struct.class, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %dev_release to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev_release, align 4
  %tobool15.not = icmp eq ptr %13, null
  br i1 %tobool15.not, label %land.lhs.true13.do.end_crit_edge, label %if.then16

land.lhs.true13.do.end_crit_edge:                 ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

if.then16:                                        ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #24
  tail call void %13(ptr noundef %kobj) #22
  br label %if.end39

do.end:                                           ; preds = %land.lhs.true13.do.end_crit_edge, %if.else11.do.end_crit_edge
  %init_name.i = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 3
  %14 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %if.end.i, label %do.end.dev_name.exit_crit_edge

do.end.dev_name.exit_crit_edge:                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %16 = ptrtoint ptr %kobj to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %kobj, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %do.end.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %17, %if.end.i ], [ %15, %do.end.dev_name.exit_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2232, i32 noundef 9, ptr noundef nonnull @.str.106, ptr noundef %retval.0.i) #22
  br label %if.end39

if.end39:                                         ; preds = %dev_name.exit, %if.then16, %if.then8, %if.then
  tail call void @kfree(ptr noundef %1) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @device_namespace(ptr noundef %kobj) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %class = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 33
  %0 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %class, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %ns_type = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ns_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ns_type, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  %namespace = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 11
  %4 = ptrtoint ptr %namespace to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %namespace, align 4
  %call4 = tail call ptr %5(ptr noundef %kobj) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %ns.0 = phi ptr [ %call4, %if.then ], [ null, %land.lhs.true.if.end_crit_edge ], [ null, %entry.if.end_crit_edge ]
  ret ptr %ns.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @device_get_ownership(ptr noundef %kobj, ptr noundef %uid, ptr noundef %gid) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %class = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 33
  %0 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %class, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %get_ownership = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %get_ownership to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %get_ownership, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  tail call void %3(ptr noundef %kobj, ptr noundef %uid, ptr noundef %gid) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devres_release_all(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @dev_attr_show(ptr noundef %kobj, ptr noundef %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %show = getelementptr inbounds %struct.device_attribute, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %show to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %show, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %if.end

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.end:                                           ; preds = %entry
  %call2 = tail call i32 %1(ptr noundef %kobj, ptr noundef %attr, ptr noundef %buf) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %call2)
  %cmp = icmp sgt i32 %call2, 4095
  br i1 %cmp, label %do.end, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %show to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %show, align 4
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.107, ptr noundef %3) #28
  br label %if.end7

if.end7:                                          ; preds = %do.end, %if.end.if.end7_crit_edge, %entry.if.end7_crit_edge
  %ret.014 = phi i32 [ %call2, %do.end ], [ %call2, %if.end.if.end7_crit_edge ], [ -5, %entry.if.end7_crit_edge ]
  ret i32 %ret.014
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @dev_attr_store(ptr noundef %kobj, ptr noundef %attr, ptr noundef %buf, i32 noundef %count) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %store = getelementptr inbounds %struct.device_attribute, ptr %attr, i32 0, i32 2
  %0 = ptrtoint ptr %store to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %store, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call2 = tail call i32 %1(ptr noundef %kobj, ptr noundef %attr, ptr noundef %buf, i32 noundef %count) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ %call2, %if.then ], [ -5, %entry.if.end_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #19

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_pm_sleep_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @klist_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @klist_children_get(ptr nocapture noundef readonly %n) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr i8, ptr %n, i32 80
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.get_device.exit_crit_edge, label %cond.true.i

entry.get_device.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_device.exit

cond.true.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %1) #22
  br label %get_device.exit

get_device.exit:                                  ; preds = %cond.true.i, %entry.get_device.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @klist_children_put(ptr nocapture noundef readonly %n) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr i8, ptr %n, i32 80
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.put_device.exit_crit_edge, label %if.then.i

entry.put_device.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_device.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %1) #22
  br label %put_device.exit

put_device.exit:                                  ; preds = %if.then.i, %entry.put_device.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @class_dir_release(ptr noundef %kobj) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %kobj) #22
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @class_dir_child_ns_type(ptr nocapture noundef readonly %kobj) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %class = getelementptr inbounds %struct.class_dir, ptr %kobj, i32 0, i32 1
  %0 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %class, align 4
  %ns_type = getelementptr inbounds %struct.class, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ns_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ns_type, align 4
  ret ptr %3
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @software_node_notify(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @uevent_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  br label %while.cond

while.cond:                                       ; preds = %land.rhs.while.cond_crit_edge, %entry
  %top_kobj.0 = phi ptr [ %dev, %entry ], [ %3, %land.rhs.while.cond_crit_edge ]
  %kset2 = getelementptr inbounds %struct.kobject, ptr %top_kobj.0, i32 0, i32 3
  %0 = ptrtoint ptr %kset2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %kset2, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %land.rhs, label %if.end

land.rhs:                                         ; preds = %while.cond
  %parent = getelementptr inbounds %struct.kobject, ptr %top_kobj.0, i32 0, i32 2
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 4
  %tobool3.not = icmp eq ptr %3, null
  br i1 %tobool3.not, label %land.rhs.out_crit_edge, label %land.rhs.while.cond_crit_edge

land.rhs.while.cond_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond

land.rhs.out_crit_edge:                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end:                                           ; preds = %while.cond
  %uevent_ops = getelementptr inbounds %struct.kset, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %uevent_ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %uevent_ops, align 4
  %tobool8.not = icmp eq ptr %5, null
  br i1 %tobool8.not, label %if.end.out_crit_edge, label %lor.lhs.false

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

lor.lhs.false:                                    ; preds = %if.end
  %uevent = getelementptr inbounds %struct.kset_uevent_ops, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %uevent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %uevent, align 4
  %tobool10.not = icmp eq ptr %7, null
  br i1 %tobool10.not, label %lor.lhs.false.out_crit_edge, label %land.lhs.true

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 4
  %tobool16.not = icmp eq ptr %9, null
  br i1 %tobool16.not, label %land.lhs.true.if.end24_crit_edge, label %if.then17

land.lhs.true.if.end24_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

if.then17:                                        ; preds = %land.lhs.true
  %call = tail call i32 %9(ptr noundef %dev) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool21.not = icmp eq i32 %call, 0
  br i1 %tobool21.not, label %if.then17.out_crit_edge, label %if.then17.if.end24_crit_edge

if.then17.if.end24_crit_edge:                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

if.then17.out_crit_edge:                          ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end24:                                         ; preds = %if.then17.if.end24_crit_edge, %land.lhs.true.if.end24_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %10 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 3520, i32 noundef 2324) #25
  %tobool26.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool26.not, label %if.end24.cleanup_crit_edge, label %if.end28

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end28:                                         ; preds = %if.end24
  %11 = ptrtoint ptr %uevent_ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %uevent_ops, align 4
  %uevent30 = getelementptr inbounds %struct.kset_uevent_ops, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %uevent30 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %uevent30, align 4
  %call32 = tail call i32 %14(ptr noundef %dev, ptr noundef nonnull %call7.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %for.cond.preheader, label %if.end28.out_crit_edge

if.end28.out_crit_edge:                           ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

for.cond.preheader:                               ; preds = %if.end28
  %envp_idx = getelementptr inbounds %struct.kobj_uevent_env, ptr %call7.i.i, i32 0, i32 2
  %15 = ptrtoint ptr %envp_idx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %envp_idx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp66 = icmp sgt i32 %16, 0
  br i1 %cmp66, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.out_crit_edge

for.cond.preheader.out_crit_edge:                 ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %len.068 = phi i32 [ %add, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %i.067 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.kobj_uevent_env, ptr %call7.i.i, i32 0, i32 1, i32 %i.067
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx, align 4
  %call36 = tail call i32 (ptr, i32, ptr, ...) @sysfs_emit_at(ptr noundef %buf, i32 noundef %len.068, ptr noundef nonnull @.str.82, ptr noundef %18) #22
  %add = add i32 %call36, %len.068
  %inc = add nuw nsw i32 %i.067, 1
  %19 = ptrtoint ptr %envp_idx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %envp_idx, align 4
  %cmp = icmp slt i32 %inc, %20
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.out_crit_edge

for.body.out_crit_edge:                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

out:                                              ; preds = %for.body.out_crit_edge, %for.cond.preheader.out_crit_edge, %if.end28.out_crit_edge, %if.then17.out_crit_edge, %lor.lhs.false.out_crit_edge, %if.end.out_crit_edge, %land.rhs.out_crit_edge
  %env.0 = phi ptr [ %call7.i.i, %if.end28.out_crit_edge ], [ null, %if.then17.out_crit_edge ], [ null, %lor.lhs.false.out_crit_edge ], [ null, %if.end.out_crit_edge ], [ %call7.i.i, %for.cond.preheader.out_crit_edge ], [ %call7.i.i, %for.body.out_crit_edge ], [ null, %land.rhs.out_crit_edge ]
  %len.1 = phi i32 [ 0, %if.end28.out_crit_edge ], [ 0, %if.then17.out_crit_edge ], [ 0, %lor.lhs.false.out_crit_edge ], [ 0, %if.end.out_crit_edge ], [ 0, %for.cond.preheader.out_crit_edge ], [ %add, %for.body.out_crit_edge ], [ 0, %land.rhs.out_crit_edge ]
  tail call void @kfree(ptr noundef %env.0) #22
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end24.cleanup_crit_edge
  %retval.0 = phi i32 [ %len.1, %out ], [ -12, %if.end24.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @uevent_store(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef %count) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @kobject_synth_uevent(ptr noundef %dev, ptr noundef %buf, i32 noundef %count) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.113) #26
  br label %cleanup

cleanup:                                          ; preds = %do.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %do.end ], [ %count, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_emit_at(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_synth_uevent(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @online_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mutex.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #22
  %offline = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 39
  %0 = ptrtoint ptr %offline to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %offline, align 4
  tail call void @mutex_unlock(ptr noundef %mutex.i) #22
  %1 = lshr i8 %bf.load, 6
  %.lobit = and i8 %1, 1
  %2 = xor i8 %.lobit, 1
  %3 = zext i8 %2 to i32
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.95, i32 noundef %3) #22
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @online_store(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef %count) #1 align 64 {
entry:
  %val = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %val) #22
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %val, align 1, !annotation !524
  %call.i = call i32 @kstrtobool(ptr noundef %buf, ptr noundef nonnull %val) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i19 = call i32 @mutex_trylock(ptr noundef nonnull @device_hotplug_lock) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i19)
  %tobool.not.i = icmp eq i32 %call.i19, 0
  br i1 %tobool.not.i, label %lock_device_hotplug_sysfs.exit, label %if.end3

lock_device_hotplug_sysfs.exit:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  call void @msleep(i32 noundef 5) #22
  %1 = call i32 @llvm.read_register.i32(metadata !512) #22
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i.i, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %stack.i.i.i, align 4
  call void @_set_bit(i32 noundef 0, ptr noundef %6) #22
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %7 = ptrtoint ptr %val to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %val, align 1, !range !535
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool4.not = icmp eq i8 %8, 0
  br i1 %tobool4.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end3
  %mutex.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10
  call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #22
  %bus.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 5
  %9 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bus.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %cond.true.device_online.exit_crit_edge, label %land.lhs.true.i.i

cond.true.device_online.exit_crit_edge:           ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_online.exit

land.lhs.true.i.i:                                ; preds = %cond.true
  %offline.i.i = getelementptr inbounds %struct.bus_type, ptr %10, i32 0, i32 13
  %11 = ptrtoint ptr %offline.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %offline.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %12, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.device_online.exit_crit_edge, label %device_supports_offline.exit.i

land.lhs.true.i.i.device_online.exit_crit_edge:   ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_online.exit

device_supports_offline.exit.i:                   ; preds = %land.lhs.true.i.i
  %online.i.i = getelementptr inbounds %struct.bus_type, ptr %10, i32 0, i32 12
  %13 = ptrtoint ptr %online.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %online.i.i, align 4
  %tobool4.i.not.i = icmp eq ptr %14, null
  br i1 %tobool4.i.not.i, label %device_supports_offline.exit.i.device_online.exit_crit_edge, label %if.then.i

device_supports_offline.exit.i.device_online.exit_crit_edge: ; preds = %device_supports_offline.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_online.exit

if.then.i:                                        ; preds = %device_supports_offline.exit.i
  %offline.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 39
  %15 = ptrtoint ptr %offline.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %bf.load.i = load i8, ptr %offline.i, align 4
  %16 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %bf.cast.not.i = icmp eq i8 %16, 0
  br i1 %bf.cast.not.i, label %if.then.i.device_online.exit_crit_edge, label %if.then1.i

if.then.i.device_online.exit_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_online.exit

if.then1.i:                                       ; preds = %if.then.i
  %call2.i = call i32 %14(ptr noundef %dev) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i20 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i20, label %if.then3.i, label %if.then1.i.device_online.exit_crit_edge

if.then1.i.device_online.exit_crit_edge:          ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_online.exit

if.then3.i:                                       ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #24
  %call4.i = call i32 @kobject_uevent(ptr noundef %dev, i32 noundef 4) #22
  %17 = ptrtoint ptr %offline.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %bf.load6.i = load i8, ptr %offline.i, align 4
  %bf.clear7.i = and i8 %bf.load6.i, -65
  store i8 %bf.clear7.i, ptr %offline.i, align 4
  br label %device_online.exit

device_online.exit:                               ; preds = %if.then3.i, %if.then1.i.device_online.exit_crit_edge, %if.then.i.device_online.exit_crit_edge, %device_supports_offline.exit.i.device_online.exit_crit_edge, %land.lhs.true.i.i.device_online.exit_crit_edge, %cond.true.device_online.exit_crit_edge
  %ret.0.i = phi i32 [ %call2.i, %if.then1.i.device_online.exit_crit_edge ], [ 0, %if.then3.i ], [ 0, %device_supports_offline.exit.i.device_online.exit_crit_edge ], [ 1, %if.then.i.device_online.exit_crit_edge ], [ 0, %land.lhs.true.i.i.device_online.exit_crit_edge ], [ 0, %cond.true.device_online.exit_crit_edge ]
  call void @mutex_unlock(ptr noundef %mutex.i.i) #22
  br label %cond.end

cond.false:                                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  %call6 = call i32 @device_offline(ptr noundef %dev)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %device_online.exit
  %cond = phi i32 [ %ret.0.i, %device_online.exit ], [ %call6, %cond.false ]
  call void @mutex_unlock(ptr noundef nonnull @device_hotplug_lock) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond)
  %cmp7 = icmp slt i32 %cond, 0
  %cond.count = select i1 %cmp7, i32 %cond, i32 %count
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %lock_device_hotplug_sysfs.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond.count, %cond.end ], [ %call.i, %entry.cleanup_crit_edge ], [ -513, %lock_device_hotplug_sysfs.exit ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %val) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @removable_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %removable = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 38
  %0 = ptrtoint ptr %removable to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %removable, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %switch.selectcmp = icmp eq i32 %1, 2
  %switch.select = select i1 %switch.selectcmp, ptr @.str.122, ptr @.str.81
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %switch.selectcmp2 = icmp eq i32 %1, 3
  %switch.select3 = select i1 %switch.selectcmp2, ptr @.str.121, ptr %switch.select
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.82, ptr noundef nonnull %switch.select3) #22
  ret i32 %call
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @dev_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #20 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %devt = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 29
  %0 = ptrtoint ptr %devt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %devt, align 8
  %shr = lshr i32 %1, 20
  %and = and i32 %1, 1048575
  %call = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.123, i32 noundef %shr, i32 noundef %and)
  ret i32 %call
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #16

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @fw_devlink_parse_fwtree(ptr noundef %fwnode) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.fwnode_handle, ptr %fwnode, i32 0, i32 5
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %flags.i, align 4
  %2 = and i8 %1, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not.i = icmp eq i8 %2, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.fw_devlink_parse_fwnode.exit_crit_edge

entry.fw_devlink_parse_fwnode.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %fw_devlink_parse_fwnode.exit

if.end.i:                                         ; preds = %entry
  %tobool1.not.i = icmp eq ptr %fwnode, null
  br i1 %tobool1.not.i, label %if.end.i.cond.end11.i_crit_edge, label %land.lhs.true.i

if.end.i.cond.end11.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end11.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %ops.i = getelementptr inbounds %struct.fwnode_handle, ptr %fwnode, i32 0, i32 1
  %3 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops.i, align 4
  %tobool3.not.i = icmp eq ptr %4, null
  br i1 %tobool3.not.i, label %land.lhs.true.i.cond.end11.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.cond.end11.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end11.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %add_links.i = getelementptr inbounds %struct.fwnode_operations, ptr %4, i32 0, i32 17
  %5 = ptrtoint ptr %add_links.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add_links.i, align 4
  %tobool6.not.i = icmp eq ptr %6, null
  br i1 %tobool6.not.i, label %land.lhs.true4.i.cond.end11.i_crit_edge, label %cond.true7.i

land.lhs.true4.i.cond.end11.i_crit_edge:          ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end11.i

cond.true7.i:                                     ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #24
  %call.i = tail call i32 %6(ptr noundef nonnull %fwnode) #22
  br label %cond.end11.i

cond.end11.i:                                     ; preds = %cond.true7.i, %land.lhs.true4.i.cond.end11.i_crit_edge, %land.lhs.true.i.cond.end11.i_crit_edge, %if.end.i.cond.end11.i_crit_edge
  %7 = ptrtoint ptr %flags.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %flags.i, align 4
  %9 = or i8 %8, 1
  store i8 %9, ptr %flags.i, align 4
  br label %fw_devlink_parse_fwnode.exit

fw_devlink_parse_fwnode.exit:                     ; preds = %cond.end11.i, %entry.fw_devlink_parse_fwnode.exit_crit_edge
  %call3 = tail call ptr @fwnode_get_next_available_child_node(ptr noundef %fwnode, ptr noundef null) #22
  %tobool.not4 = icmp eq ptr %call3, null
  br i1 %tobool.not4, label %fw_devlink_parse_fwnode.exit.while.end_crit_edge, label %fw_devlink_parse_fwnode.exit.while.body_crit_edge

fw_devlink_parse_fwnode.exit.while.body_crit_edge: ; preds = %fw_devlink_parse_fwnode.exit
  br label %while.body

fw_devlink_parse_fwnode.exit.while.end_crit_edge: ; preds = %fw_devlink_parse_fwnode.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %fw_devlink_parse_fwnode.exit.while.body_crit_edge
  %call5 = phi ptr [ %call, %while.body.while.body_crit_edge ], [ %call3, %fw_devlink_parse_fwnode.exit.while.body_crit_edge ]
  tail call fastcc void @fw_devlink_parse_fwtree(ptr noundef nonnull %call5)
  %call = tail call ptr @fwnode_get_next_available_child_node(ptr noundef %fwnode, ptr noundef nonnull %call5) #22
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %fw_devlink_parse_fwnode.exit.while.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__fw_devlink_link_to_suppliers(ptr noundef %dev, ptr noundef %fwnode) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %fwnode1 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 28
  %0 = ptrtoint ptr %fwnode1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fwnode1, align 4
  %cmp = icmp eq ptr %1, %fwnode
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %2 = load i32, ptr @fw_devlink_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %dl_flags.0 = phi i32 [ %2, %if.then ], [ 384, %entry.if.end_crit_edge ]
  %suppliers = getelementptr inbounds %struct.fwnode_handle, ptr %fwnode, i32 0, i32 3
  %3 = ptrtoint ptr %suppliers to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %suppliers, align 4
  %cmp9.not53 = icmp eq ptr %4, %suppliers
  br i1 %cmp9.not53, label %if.end.while.cond.preheader_crit_edge, label %for.body.lr.ph

if.end.while.cond.preheader_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.preheader

for.body.lr.ph:                                   ; preds = %if.end
  %cmp.not = xor i1 %cmp, true
  br label %for.body

while.cond.preheader:                             ; preds = %cleanup.while.cond.preheader_crit_edge, %if.end.while.cond.preheader_crit_edge
  %call2861 = tail call ptr @fwnode_get_next_available_child_node(ptr noundef %fwnode, ptr noundef null) #22
  %tobool29.not62 = icmp eq ptr %call2861, null
  br i1 %tobool29.not62, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %.pn.in54 = phi ptr [ %4, %for.body.lr.ph ], [ %.pn60, %cleanup.for.body_crit_edge ]
  %link.058 = getelementptr i8, ptr %.pn.in54, i32 -16
  %5 = ptrtoint ptr %.pn.in54 to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn60 = load ptr, ptr %.pn.in54, align 4
  %6 = ptrtoint ptr %link.058 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %link.058, align 4
  %call10 = tail call fastcc i32 @fw_devlink_create_devlink(ptr noundef %dev, ptr noundef %7, i32 noundef %dl_flags.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call10)
  %cmp12 = icmp eq i32 %call10, -11
  %or.cond = select i1 %cmp.not, i1 true, i1 %cmp12
  br i1 %or.cond, label %for.body.cleanup_crit_edge, label %if.end14

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end14:                                         ; preds = %for.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__fwnode_link_del.__UNIQUE_ID_ddebug359, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@__fw_devlink_link_to_suppliers, %do.end.i)) #22
          to label %if.then.i [label %do.end.i], !srcloc !522

if.then.i:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #24
  %consumer.i = getelementptr i8, ptr %.pn.in54, i32 -4
  %8 = ptrtoint ptr %consumer.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %consumer.i, align 4
  %10 = ptrtoint ptr %link.058 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %link.058, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__fwnode_link_del.__UNIQUE_ID_ddebug359, ptr noundef nonnull @.str.60, ptr noundef %9, ptr noundef %11) #22
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %if.end14
  %s_hook.i = getelementptr i8, ptr %.pn.in54, i32 -12
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %s_hook.i) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %do.end.i.list_del.exit.i_crit_edge

do.end.i.list_del.exit.i_crit_edge:               ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr i8, ptr %.pn.in54, i32 -8
  %12 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i.i, align 4
  %14 = ptrtoint ptr %s_hook.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %s_hook.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %do.end.i.list_del.exit.i_crit_edge
  %18 = ptrtoint ptr %s_hook.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 256 to ptr), ptr %s_hook.i, align 4
  %prev.i.i = getelementptr i8, ptr %.pn.in54, i32 -8
  %19 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %call.i.i8.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in54) #22
  br i1 %call.i.i8.i, label %if.end.i.i11.i, label %list_del.exit.i.__fwnode_link_del.exit_crit_edge

list_del.exit.i.__fwnode_link_del.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__fwnode_link_del.exit

if.end.i.i11.i:                                   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i9.i = getelementptr i8, ptr %.pn.in54, i32 4
  %20 = ptrtoint ptr %prev.i.i9.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i9.i, align 4
  %22 = ptrtoint ptr %.pn.in54 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %.pn.in54, align 4
  %prev1.i.i.i10.i = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i.i10.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i.i10.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %23, ptr %21, align 4
  br label %__fwnode_link_del.exit

__fwnode_link_del.exit:                           ; preds = %if.end.i.i11.i, %list_del.exit.i.__fwnode_link_del.exit_crit_edge
  %26 = ptrtoint ptr %.pn.in54 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in54, align 4
  %prev.i12.i = getelementptr i8, ptr %.pn.in54, i32 4
  %27 = ptrtoint ptr %prev.i12.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i12.i, align 4
  tail call void @kfree(ptr noundef %link.058) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool15.not = icmp eq i32 %call10, 0
  br i1 %tobool15.not, label %if.end17, label %__fwnode_link_del.exit.cleanup_crit_edge

__fwnode_link_del.exit.cleanup_crit_edge:         ; preds = %__fwnode_link_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end17:                                         ; preds = %__fwnode_link_del.exit
  %dev18 = getelementptr inbounds %struct.fwnode_handle, ptr %7, i32 0, i32 2
  %28 = ptrtoint ptr %dev18 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev18, align 4
  %tobool.not.i = icmp eq ptr %29, null
  br i1 %tobool.not.i, label %get_device.exit.thread, label %get_device.exit

get_device.exit.thread:                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  call void @__asan_load4_noabort(i32 836)
  %30 = load ptr, ptr inttoptr (i32 836 to ptr), align 4
  tail call fastcc void @__fw_devlink_link_to_suppliers(ptr noundef null, ptr noundef %30)
  br label %cleanup

get_device.exit:                                  ; preds = %if.end17
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %29) #22
  %fwnode20 = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 28
  %31 = ptrtoint ptr %fwnode20 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %fwnode20, align 4
  tail call fastcc void @__fw_devlink_link_to_suppliers(ptr noundef %call.i, ptr noundef %32)
  %tobool.not.i46 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i46, label %get_device.exit.cleanup_crit_edge, label %if.then.i47

get_device.exit.cleanup_crit_edge:                ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then.i47:                                      ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kobject_put(ptr noundef nonnull %call.i) #22
  br label %cleanup

cleanup:                                          ; preds = %if.then.i47, %get_device.exit.cleanup_crit_edge, %get_device.exit.thread, %__fwnode_link_del.exit.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %cmp9.not = icmp eq ptr %.pn60, %suppliers
  br i1 %cmp9.not, label %cleanup.while.cond.preheader_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

cleanup.while.cond.preheader_crit_edge:           ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.preheader

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %call2863 = phi ptr [ %call28, %while.body.while.body_crit_edge ], [ %call2861, %while.cond.preheader.while.body_crit_edge ]
  tail call fastcc void @__fw_devlink_link_to_suppliers(ptr noundef %dev, ptr noundef nonnull %call2863)
  %call28 = tail call ptr @fwnode_get_next_available_child_node(ptr noundef %fwnode, ptr noundef nonnull %call2863) #22
  %tobool29.not = icmp eq ptr %call28, null
  br i1 %tobool29.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fwnode_get_next_parent_dev(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @fwnode_is_ancestor_of(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @fw_devlink_create_devlink(ptr noundef %con, ptr noundef %sup_handle, i32 noundef %flags) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %flags1 = getelementptr inbounds %struct.fwnode_handle, ptr %sup_handle, i32 0, i32 5
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %flags1, align 4
  %2 = and i8 %1, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %fwnode = getelementptr inbounds %struct.device, ptr %con, i32 0, i32 28
  %3 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fwnode, align 4
  %call = tail call zeroext i1 @fwnode_is_ancestor_of(ptr noundef %sup_handle, ptr noundef %4) #22
  br i1 %call, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %dev = getelementptr inbounds %struct.fwnode_handle, ptr %sup_handle, i32 0, i32 2
  %5 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end.if.end24_crit_edge, label %get_device.exit

if.end.if.end24_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

get_device.exit:                                  ; preds = %if.end
  %call.i = tail call ptr @kobject_get(ptr noundef nonnull %6) #22
  %tobool4.not = icmp eq ptr %call.i, null
  br i1 %tobool4.not, label %get_device.exit.if.end24_crit_edge, label %if.then5

get_device.exit.if.end24_crit_edge:               ; preds = %get_device.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end24

if.then5:                                         ; preds = %get_device.exit
  %status = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 11, i32 3
  %7 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp = icmp eq i32 %8, 0
  br i1 %cmp, label %land.lhs.true7, label %if.then5.if.end13_crit_edge

if.then5.if.end13_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

land.lhs.true7:                                   ; preds = %if.then5
  %9 = ptrtoint ptr %flags1 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %flags1, align 4
  %11 = and i8 %10, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool11.not = icmp eq i8 %11, 0
  br i1 %tobool11.not, label %land.lhs.true7.if.end13_crit_edge, label %land.lhs.true7.if.then.i_crit_edge

land.lhs.true7.if.then.i_crit_edge:               ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i

land.lhs.true7.if.end13_crit_edge:                ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

if.end13:                                         ; preds = %land.lhs.true7.if.end13_crit_edge, %if.then5.if.end13_crit_edge
  %call14 = tail call ptr @device_link_add(ptr noundef %con, ptr noundef nonnull %call.i, i32 noundef %flags)
  %tobool15.not = icmp eq ptr %call14, null
  %and17 = and i32 %flags, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17)
  %tobool18.not = icmp eq i32 %and17, 0
  %or.cond = and i1 %tobool18.not, %tobool15.not
  br i1 %or.cond, label %do.end, label %if.end13.if.then.i_crit_edge

if.end13.if.then.i_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i

do.end:                                           ; preds = %if.end13
  %init_name.i = getelementptr inbounds %struct.device, ptr %call.i, i32 0, i32 3
  %12 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i73 = icmp eq ptr %13, null
  br i1 %tobool.not.i73, label %if.end.i, label %do.end.dev_name.exit_crit_edge

do.end.dev_name.exit_crit_edge:                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %14 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %call.i, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %do.end.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %15, %if.end.i ], [ %13, %do.end.dev_name.exit_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %con, ptr noundef nonnull @.str.125, ptr noundef %retval.0.i) #26
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %call21 = tail call fastcc i32 @fw_devlink_relax_cycle(ptr noundef %con, ptr noundef nonnull %call.i)
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  %call22 = tail call ptr @device_link_add(ptr noundef %con, ptr noundef nonnull %call.i, i32 noundef 384)
  br label %if.then.i

if.end24:                                         ; preds = %get_device.exit.if.end24_crit_edge, %if.end.if.end24_crit_edge
  %16 = ptrtoint ptr %flags1 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %flags1, align 4
  %18 = and i8 %17, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool28.not = icmp eq i8 %18, 0
  br i1 %tobool28.not, label %if.end30, label %if.end24.cleanup_crit_edge

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end30:                                         ; preds = %if.end24
  %and31 = and i32 %flags, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  br i1 %tobool32.not, label %if.end34, label %if.end30.cleanup_crit_edge

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end34:                                         ; preds = %if.end30
  %call35 = tail call ptr @fwnode_get_next_parent_dev(ptr noundef %sup_handle) #22
  %tobool36.not = icmp eq ptr %call35, null
  br i1 %tobool36.not, label %if.end34.cleanup_crit_edge, label %land.lhs.true37

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true37:                                  ; preds = %if.end34
  %call38 = tail call i32 @device_is_dependent(ptr noundef %con, ptr noundef nonnull %call35)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %land.lhs.true37.if.then.i_crit_edge, label %do.end43

land.lhs.true37.if.then.i_crit_edge:              ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i

do.end43:                                         ; preds = %land.lhs.true37
  %init_name.i74 = getelementptr inbounds %struct.device, ptr %call35, i32 0, i32 3
  %19 = ptrtoint ptr %init_name.i74 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %init_name.i74, align 8
  %tobool.not.i75 = icmp eq ptr %20, null
  br i1 %tobool.not.i75, label %if.end.i76, label %do.end43.dev_name.exit78_crit_edge

do.end43.dev_name.exit78_crit_edge:               ; preds = %do.end43
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit78

if.end.i76:                                       ; preds = %do.end43
  call void @__sanitizer_cov_trace_pc() #24
  %21 = ptrtoint ptr %call35 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %call35, align 4
  br label %dev_name.exit78

dev_name.exit78:                                  ; preds = %if.end.i76, %do.end43.dev_name.exit78_crit_edge
  %retval.0.i77 = phi ptr [ %22, %if.end.i76 ], [ %20, %do.end43.dev_name.exit78_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %con, ptr noundef nonnull @.str.128, ptr noundef %sup_handle, ptr noundef %retval.0.i77) #26
  tail call void @mutex_lock_nested(ptr noundef nonnull @device_links_lock, i32 noundef 0) #22
  %call45 = tail call fastcc i32 @fw_devlink_relax_cycle(ptr noundef %con, ptr noundef nonnull %call35)
  tail call void @mutex_unlock(ptr noundef nonnull @device_links_lock) #22
  br label %if.then.i

if.then.i:                                        ; preds = %dev_name.exit78, %land.lhs.true37.if.then.i_crit_edge, %dev_name.exit, %if.end13.if.then.i_crit_edge, %land.lhs.true7.if.then.i_crit_edge
  %sup_dev.0.ph = phi ptr [ %call35, %land.lhs.true37.if.then.i_crit_edge ], [ %call.i, %land.lhs.true7.if.then.i_crit_edge ], [ %call35, %dev_name.exit78 ], [ %call.i, %dev_name.exit ], [ %call.i, %if.end13.if.then.i_crit_edge ]
  %ret.0.ph = phi i32 [ -11, %land.lhs.true37.if.then.i_crit_edge ], [ -22, %land.lhs.true7.if.then.i_crit_edge ], [ -22, %dev_name.exit78 ], [ -22, %dev_name.exit ], [ 0, %if.end13.if.then.i_crit_edge ]
  tail call void @kobject_put(ptr noundef nonnull %sup_dev.0.ph) #22
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end34.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %if.end24.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %land.lhs.true.cleanup_crit_edge ], [ -22, %if.end24.cleanup_crit_edge ], [ -11, %if.end30.cleanup_crit_edge ], [ %ret.0.ph, %if.then.i ], [ -11, %if.end34.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @fw_devlink_relax_cycle(ptr noundef readonly %con, ptr noundef %sup) #1 align 64 {
entry:
  %i.i = alloca %struct.klist_iter, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %con, %sup
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i.i) #22
  %0 = ptrtoint ptr %i.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %i.i, align 4, !annotation !524
  %1 = getelementptr inbounds %struct.klist_iter, ptr %i.i, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !524
  %p.i = getelementptr inbounds %struct.device, ptr %con, i32 0, i32 2
  %3 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %p.i, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %device_for_each_child.exit.thread, label %if.end.i

device_for_each_child.exit.thread:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %if.end2

if.end.i:                                         ; preds = %if.end
  call void @klist_iter_init(ptr noundef nonnull %4, ptr noundef nonnull %i.i) #22
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i.land.rhs.i_crit_edge, %if.end.i
  %call.i.i = call ptr @klist_next(ptr noundef nonnull %i.i) #22
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %land.rhs.i.device_for_each_child.exit.thread34_crit_edge, label %next_device.exit.i

land.rhs.i.device_for_each_child.exit.thread34_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_for_each_child.exit.thread34

next_device.exit.i:                               ; preds = %land.rhs.i
  %device.i.i = getelementptr i8, ptr %call.i.i, i32 80
  %5 = ptrtoint ptr %device.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %device.i.i, align 4
  %tobool3.not.i = icmp eq ptr %6, null
  br i1 %tobool3.not.i, label %next_device.exit.i.device_for_each_child.exit.thread34_crit_edge, label %while.body.i

next_device.exit.i.device_for_each_child.exit.thread34_crit_edge: ; preds = %next_device.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %device_for_each_child.exit.thread34

while.body.i:                                     ; preds = %next_device.exit.i
  %call4.i = call fastcc i32 @fw_devlink_relax_cycle(ptr noundef nonnull %6, ptr noundef %sup) #22
  %tobool2.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool2.not.i, label %while.body.i.land.rhs.i_crit_edge, label %device_for_each_child.exit

while.body.i.land.rhs.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i

device_for_each_child.exit.thread34:              ; preds = %next_device.exit.i.device_for_each_child.exit.thread34_crit_edge, %land.rhs.i.device_for_each_child.exit.thread34_crit_edge
  call void @klist_iter_exit(ptr noundef nonnull %i.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %if.end2

device_for_each_child.exit:                       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @klist_iter_exit(ptr noundef nonnull %i.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i.i) #22
  br label %cleanup

if.end2:                                          ; preds = %device_for_each_child.exit.thread34, %device_for_each_child.exit.thread
  %consumers = getelementptr inbounds %struct.device, ptr %con, i32 0, i32 11, i32 1
  %7 = ptrtoint ptr %consumers to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn37 = load ptr, ptr %consumers, align 4
  %cmp5.not39 = icmp eq ptr %.pn37, %consumers
  br i1 %cmp5.not39, label %if.end2.cleanup_crit_edge, label %if.end2.for.body_crit_edge

if.end2.for.body_crit_edge:                       ; preds = %if.end2
  br label %for.body

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end2.for.body_crit_edge
  %.pn41 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn37, %if.end2.for.body_crit_edge ]
  %ret.040 = phi i32 [ %ret.1, %for.inc.for.body_crit_edge ], [ 0, %if.end2.for.body_crit_edge ]
  %link.042 = getelementptr i8, ptr %.pn41, i32 -4
  %flags = getelementptr i8, ptr %.pn41, i32 952
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %and = and i32 %9, -257
  call void @__sanitizer_cov_trace_const_cmp4(i32 192, i32 %and)
  %cmp6 = icmp eq i32 %and, 192
  br i1 %cmp6, label %for.body.for.inc_crit_edge, label %if.end8

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end8:                                          ; preds = %for.body
  %consumer = getelementptr i8, ptr %.pn41, i32 8
  %10 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %consumer, align 4
  %call9 = call fastcc i32 @fw_devlink_relax_cycle(ptr noundef %11, ptr noundef %sup)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end8.for.inc_crit_edge, label %if.end12

if.end8.for.inc_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end12:                                         ; preds = %if.end8
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags, align 4
  %and.i = and i32 %13, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i30 = icmp eq i32 %and.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 448, i32 %13)
  %cmp.i = icmp eq i32 %13, 448
  %or.cond.i = or i1 %cmp.i, %tobool.not.i30
  br i1 %or.cond.i, label %if.end12.for.inc_crit_edge, label %if.end3.i

if.end12.for.inc_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end3.i:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  call void @pm_runtime_drop_link(ptr noundef %link.042) #22
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 448, ptr %flags, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @fw_devlink_relax_link.__UNIQUE_ID_ddebug382, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@fw_devlink_relax_cycle, %for.inc)) #22
          to label %if.then9.i [label %for.inc], !srcloc !522

if.then9.i:                                       ; preds = %if.end3.i
  %15 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %consumer, align 4
  %17 = ptrtoint ptr %link.042 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %link.042, align 8
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i31 = icmp eq ptr %20, null
  br i1 %tobool.not.i.i31, label %if.end.i.i, label %if.then9.i.dev_name.exit.i_crit_edge

if.then9.i.dev_name.exit.i_crit_edge:             ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #24
  %21 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %18, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then9.i.dev_name.exit.i_crit_edge
  %retval.0.i17.i = phi ptr [ %22, %if.end.i.i ], [ %20, %if.then9.i.dev_name.exit.i_crit_edge ]
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @fw_devlink_relax_link.__UNIQUE_ID_ddebug382, ptr noundef %16, ptr noundef nonnull @.str.101, ptr noundef %retval.0.i17.i) #22
  br label %for.inc

for.inc:                                          ; preds = %dev_name.exit.i, %if.end3.i, %if.end12.for.inc_crit_edge, %if.end8.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %ret.1 = phi i32 [ %ret.040, %for.body.for.inc_crit_edge ], [ %ret.040, %if.end8.for.inc_crit_edge ], [ 1, %if.end12.for.inc_crit_edge ], [ 1, %if.end3.i ], [ 1, %dev_name.exit.i ]
  %23 = ptrtoint ptr %.pn41 to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn = load ptr, ptr %.pn41, align 4
  %cmp5.not = icmp eq ptr %.pn, %consumers
  br i1 %cmp5.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end2.cleanup_crit_edge, %device_for_each_child.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %entry.cleanup_crit_edge ], [ %call4.i, %device_for_each_child.exit ], [ 0, %if.end2.cleanup_crit_edge ], [ %ret.1, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_delete_link(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @software_node_notify_remove(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @klist_next(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @klist_prev(ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @dev_uevent_filter(ptr nocapture noundef readonly %kobj) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %ktype.i = getelementptr inbounds %struct.kobject, ptr %kobj, i32 0, i32 4
  %0 = ptrtoint ptr %ktype.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ktype.i, align 4
  %cmp = icmp eq ptr %1, @device_ktype
  br i1 %cmp, label %if.then, label %entry.if.end6_crit_edge

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end6

if.then:                                          ; preds = %entry
  %bus = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 5
  %2 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.end, label %if.then.cleanup7_crit_edge

if.then.cleanup7_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup7

if.end:                                           ; preds = %if.then
  %class = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 33
  %4 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %class, align 4
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %if.end.if.end6_crit_edge, label %if.end.cleanup7_crit_edge

if.end.cleanup7_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup7

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end6

if.end6:                                          ; preds = %if.end.if.end6_crit_edge, %entry.if.end6_crit_edge
  br label %cleanup7

cleanup7:                                         ; preds = %if.end6, %if.end.cleanup7_crit_edge, %if.then.cleanup7_crit_edge
  %retval.1 = phi i32 [ 0, %if.end6 ], [ 1, %if.end.cleanup7_crit_edge ], [ 1, %if.then.cleanup7_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @dev_uevent_name(ptr nocapture noundef readonly %kobj) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 5
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %entry.cleanup.sink.split_crit_edge

entry.cleanup.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.sink.split

if.end:                                           ; preds = %entry
  %class = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 33
  %2 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %class, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end.cleanup.sink.split_crit_edge

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.sink.split

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.end.cleanup.sink.split_crit_edge, %entry.cleanup.sink.split_crit_edge
  %.sink = phi ptr [ %1, %entry.cleanup.sink.split_crit_edge ], [ %3, %if.end.cleanup.sink.split_crit_edge ]
  %4 = ptrtoint ptr %.sink to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %.sink, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.end.cleanup_crit_edge ], [ %5, %cleanup.sink.split ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @dev_uevent(ptr noundef %kobj, ptr noundef %env) #1 align 64 {
entry:
  %tmp = alloca ptr, align 4
  %mode = alloca i16, align 2
  %uid = alloca %struct.kuid_t, align 4
  %gid = alloca %struct.kgid_t, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %devt = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 29
  %0 = ptrtoint ptr %devt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %devt, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %1)
  %tobool.not = icmp ult i32 %1, 1048576
  br i1 %tobool.not, label %entry.if.end33_crit_edge, label %if.then

entry.if.end33_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end33

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp) #22
  %2 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %tmp, align 4, !annotation !524
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mode) #22
  %3 = ptrtoint ptr %mode to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 0, ptr %mode, align 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %uid) #22
  %4 = ptrtoint ptr %uid to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %uid, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %gid) #22
  %5 = ptrtoint ptr %gid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %gid, align 4
  %shr3 = lshr i32 %1, 20
  %call4 = tail call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.131, i32 noundef %shr3) #22
  %6 = ptrtoint ptr %devt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %devt, align 8
  %and = and i32 %7, 1048575
  %call6 = tail call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.132, i32 noundef %and) #22
  %call7 = call ptr @device_get_devnode(ptr noundef %kobj, ptr noundef nonnull %mode, ptr noundef nonnull %uid, ptr noundef nonnull %gid, ptr noundef nonnull %tmp)
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %if.then.if.end32_crit_edge, label %if.then9

if.then.if.end32_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end32

if.then9:                                         ; preds = %if.then
  %call10 = call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.133, ptr noundef nonnull %call7) #22
  %8 = ptrtoint ptr %mode to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %mode, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool11.not = icmp eq i16 %9, 0
  br i1 %tobool11.not, label %if.then9.if.end_crit_edge, label %if.then12

if.then9.if.end_crit_edge:                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then12:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  %10 = and i16 %9, 511
  %and13 = zext i16 %10 to i32
  %call14 = call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.134, i32 noundef %and13) #22
  br label %if.end

if.end:                                           ; preds = %if.then12, %if.then9.if.end_crit_edge
  %11 = ptrtoint ptr %uid to i32
  call void @__asan_load4_noabort(i32 %11)
  %.fca.0.load140 = load i32, ptr %uid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.fca.0.load140)
  %cmp.i = icmp eq i32 %.fca.0.load140, 0
  br i1 %cmp.i, label %if.end.if.end21_crit_edge, label %if.then17

if.end.if.end21_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end21

if.then17:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %.fca.0.insert144 = insertvalue [1 x i32] poison, i32 %.fca.0.load140, 0
  %call19 = call i32 @from_kuid(ptr noundef nonnull @init_user_ns, [1 x i32] %.fca.0.insert144) #22
  %call20 = call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.135, i32 noundef %call19) #22
  br label %if.end21

if.end21:                                         ; preds = %if.then17, %if.end.if.end21_crit_edge
  %12 = ptrtoint ptr %gid to i32
  call void @__asan_load4_noabort(i32 %12)
  %.fca.0.load = load i32, ptr %gid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.fca.0.load)
  %cmp.i202 = icmp eq i32 %.fca.0.load, 0
  br i1 %cmp.i202, label %if.end21.if.end31_crit_edge, label %if.then27

if.end21.if.end31_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end31

if.then27:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #24
  %.fca.0.insert138 = insertvalue [1 x i32] poison, i32 %.fca.0.load, 0
  %call29 = call i32 @from_kgid(ptr noundef nonnull @init_user_ns, [1 x i32] %.fca.0.insert138) #22
  %call30 = call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.136, i32 noundef %call29) #22
  br label %if.end31

if.end31:                                         ; preds = %if.then27, %if.end21.if.end31_crit_edge
  %13 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tmp, align 4
  call void @kfree(ptr noundef %14) #22
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then.if.end32_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %gid) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %uid) #22
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mode) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp) #22
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %entry.if.end33_crit_edge
  %type = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 4
  %15 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %type, align 4
  %tobool34.not = icmp eq ptr %16, null
  br i1 %tobool34.not, label %if.end33.if.end42_crit_edge, label %land.lhs.true

if.end33.if.end42_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.lhs.true:                                    ; preds = %if.end33
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %tobool37.not = icmp eq ptr %18, null
  br i1 %tobool37.not, label %land.lhs.true.if.end42_crit_edge, label %if.then38

land.lhs.true.if.end42_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

if.then38:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  %call41 = call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.137, ptr noundef nonnull %18) #22
  br label %if.end42

if.end42:                                         ; preds = %if.then38, %land.lhs.true.if.end42_crit_edge, %if.end33.if.end42_crit_edge
  %driver = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 6
  %19 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %driver, align 4
  %tobool43.not = icmp eq ptr %20, null
  br i1 %tobool43.not, label %if.end42.if.end48_crit_edge, label %if.then44

if.end42.if.end48_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end48

if.then44:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #24
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %call47 = call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.138, ptr noundef %22) #22
  br label %if.end48

if.end48:                                         ; preds = %if.then44, %if.end42.if.end48_crit_edge
  call void @of_device_uevent(ptr noundef %kobj, ptr noundef %env) #22
  %bus = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 5
  %23 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %bus, align 8
  %tobool49.not = icmp eq ptr %24, null
  br i1 %tobool49.not, label %if.end48.if.end69_crit_edge, label %land.lhs.true50

if.end48.if.end69_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end69

land.lhs.true50:                                  ; preds = %if.end48
  %uevent = getelementptr inbounds %struct.bus_type, ptr %24, i32 0, i32 7
  %25 = ptrtoint ptr %uevent to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %uevent, align 4
  %tobool52.not = icmp eq ptr %26, null
  br i1 %tobool52.not, label %land.lhs.true50.if.end69_crit_edge, label %if.then53

land.lhs.true50.if.end69_crit_edge:               ; preds = %land.lhs.true50
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end69

if.then53:                                        ; preds = %land.lhs.true50
  %call56 = call i32 %26(ptr noundef %kobj, ptr noundef %env) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call56)
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %if.then53.if.end69_crit_edge, label %do.body

if.then53.if.end69_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end69

do.body:                                          ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #24
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @dev_uevent.__UNIQUE_ID_ddebug384, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@dev_uevent, %if.end69)) #22
          to label %if.then65 [label %if.end69], !srcloc !522

if.then65:                                        ; preds = %do.body
  %init_name.i = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 3
  %27 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then65.dev_name.exit_crit_edge

if.then65.dev_name.exit_crit_edge:                ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #24
  %29 = ptrtoint ptr %kobj to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %kobj, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then65.dev_name.exit_crit_edge
  %retval.0.i203 = phi ptr [ %30, %if.end.i ], [ %28, %if.then65.dev_name.exit_crit_edge ]
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @dev_uevent.__UNIQUE_ID_ddebug384, ptr noundef nonnull @.str.140, ptr noundef %retval.0.i203, ptr noundef nonnull @.str.139, i32 noundef %call56) #22
  br label %if.end69

if.end69:                                         ; preds = %dev_name.exit, %do.body, %if.then53.if.end69_crit_edge, %land.lhs.true50.if.end69_crit_edge, %if.end48.if.end69_crit_edge
  %retval1.0 = phi i32 [ %call56, %dev_name.exit ], [ 0, %if.then53.if.end69_crit_edge ], [ 0, %land.lhs.true50.if.end69_crit_edge ], [ 0, %if.end48.if.end69_crit_edge ], [ %call56, %do.body ]
  %class = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 33
  %31 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %class, align 4
  %tobool70.not = icmp eq ptr %32, null
  br i1 %tobool70.not, label %if.end69.if.end100_crit_edge, label %land.lhs.true71

if.end69.if.end100_crit_edge:                     ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end100

land.lhs.true71:                                  ; preds = %if.end69
  %dev_uevent = getelementptr inbounds %struct.class, ptr %32, i32 0, i32 5
  %33 = ptrtoint ptr %dev_uevent to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev_uevent, align 4
  %tobool73.not = icmp eq ptr %34, null
  br i1 %tobool73.not, label %land.lhs.true71.if.end100_crit_edge, label %if.then74

land.lhs.true71.if.end100_crit_edge:              ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end100

if.then74:                                        ; preds = %land.lhs.true71
  %call77 = call i32 %34(ptr noundef %kobj, ptr noundef %env) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77)
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %if.then74.if.end100_crit_edge, label %do.body80

if.then74.if.end100_crit_edge:                    ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end100

do.body80:                                        ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #24
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @dev_uevent.__UNIQUE_ID_ddebug385, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@dev_uevent, %if.end100)) #22
          to label %if.then94 [label %if.end100], !srcloc !522

if.then94:                                        ; preds = %do.body80
  %init_name.i204 = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 3
  %35 = ptrtoint ptr %init_name.i204 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %init_name.i204, align 8
  %tobool.not.i205 = icmp eq ptr %36, null
  br i1 %tobool.not.i205, label %if.end.i206, label %if.then94.dev_name.exit208_crit_edge

if.then94.dev_name.exit208_crit_edge:             ; preds = %if.then94
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit208

if.end.i206:                                      ; preds = %if.then94
  call void @__sanitizer_cov_trace_pc() #24
  %37 = ptrtoint ptr %kobj to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %kobj, align 4
  br label %dev_name.exit208

dev_name.exit208:                                 ; preds = %if.end.i206, %if.then94.dev_name.exit208_crit_edge
  %retval.0.i207 = phi ptr [ %38, %if.end.i206 ], [ %36, %if.then94.dev_name.exit208_crit_edge ]
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @dev_uevent.__UNIQUE_ID_ddebug385, ptr noundef nonnull @.str.141, ptr noundef %retval.0.i207, ptr noundef nonnull @.str.139, i32 noundef %call77) #22
  br label %if.end100

if.end100:                                        ; preds = %dev_name.exit208, %do.body80, %if.then74.if.end100_crit_edge, %land.lhs.true71.if.end100_crit_edge, %if.end69.if.end100_crit_edge
  %retval1.1 = phi i32 [ %call77, %dev_name.exit208 ], [ 0, %if.then74.if.end100_crit_edge ], [ %retval1.0, %land.lhs.true71.if.end100_crit_edge ], [ %retval1.0, %if.end69.if.end100_crit_edge ], [ %call77, %do.body80 ]
  %39 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %type, align 4
  %tobool102.not = icmp eq ptr %40, null
  br i1 %tobool102.not, label %if.end100.if.end133_crit_edge, label %land.lhs.true103

if.end100.if.end133_crit_edge:                    ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end133

land.lhs.true103:                                 ; preds = %if.end100
  %uevent105 = getelementptr inbounds %struct.device_type, ptr %40, i32 0, i32 2
  %41 = ptrtoint ptr %uevent105 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %uevent105, align 4
  %tobool106.not = icmp eq ptr %42, null
  br i1 %tobool106.not, label %land.lhs.true103.if.end133_crit_edge, label %if.then107

land.lhs.true103.if.end133_crit_edge:             ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end133

if.then107:                                       ; preds = %land.lhs.true103
  %call110 = call i32 %42(ptr noundef %kobj, ptr noundef %env) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call110)
  %tobool111.not = icmp eq i32 %call110, 0
  br i1 %tobool111.not, label %if.then107.if.end133_crit_edge, label %do.body113

if.then107.if.end133_crit_edge:                   ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end133

do.body113:                                       ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #24
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @dev_uevent.__UNIQUE_ID_ddebug386, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@dev_uevent, %if.end133)) #22
          to label %if.then127 [label %if.end133], !srcloc !522

if.then127:                                       ; preds = %do.body113
  %init_name.i209 = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 3
  %43 = ptrtoint ptr %init_name.i209 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %init_name.i209, align 8
  %tobool.not.i210 = icmp eq ptr %44, null
  br i1 %tobool.not.i210, label %if.end.i211, label %if.then127.dev_name.exit213_crit_edge

if.then127.dev_name.exit213_crit_edge:            ; preds = %if.then127
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit213

if.end.i211:                                      ; preds = %if.then127
  call void @__sanitizer_cov_trace_pc() #24
  %45 = ptrtoint ptr %kobj to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %kobj, align 4
  br label %dev_name.exit213

dev_name.exit213:                                 ; preds = %if.end.i211, %if.then127.dev_name.exit213_crit_edge
  %retval.0.i212 = phi ptr [ %46, %if.end.i211 ], [ %44, %if.then127.dev_name.exit213_crit_edge ]
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @dev_uevent.__UNIQUE_ID_ddebug386, ptr noundef nonnull @.str.142, ptr noundef %retval.0.i212, ptr noundef nonnull @.str.139, i32 noundef %call110) #22
  br label %if.end133

if.end133:                                        ; preds = %dev_name.exit213, %do.body113, %if.then107.if.end133_crit_edge, %land.lhs.true103.if.end133_crit_edge, %if.end100.if.end133_crit_edge
  %retval1.2 = phi i32 [ %call110, %dev_name.exit213 ], [ 0, %if.then107.if.end133_crit_edge ], [ %retval1.1, %land.lhs.true103.if.end133_crit_edge ], [ %retval1.1, %if.end100.if.end133_crit_edge ], [ %call110, %do.body113 ]
  ret i32 %retval1.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @add_uevent_var(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kuid(ptr noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kgid(ptr noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @of_device_uevent(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @device_create_release(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @device_create_release.__UNIQUE_ID_ddebug394, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@device_create_release, %do.end)) #22
          to label %if.then [label %do.end], !srcloc !522

if.then:                                          ; preds = %entry
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %0 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.dev_name.exit_crit_edge

if.then.dev_name.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then.dev_name.exit_crit_edge
  %retval.0.i6 = phi ptr [ %3, %if.end.i ], [ %1, %if.then.dev_name.exit_crit_edge ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @device_create_release.__UNIQUE_ID_ddebug394, ptr noundef nonnull @.str.28, ptr noundef %retval.0.i6, ptr noundef nonnull @.str.143) #22
  br label %do.end

do.end:                                           ; preds = %dev_name.exit, %entry
  tail call void @kfree(ptr noundef %dev) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @class_find_device(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_groups_change_owner(ptr noundef, ptr noundef, [1 x i32], [1 x i32]) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strscpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #21

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #22

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #23 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 199)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #23 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 199)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { cold mustprogress nofree nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nocallback nofree nosync nounwind willreturn }
attributes #11 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #18 = { nounwind readonly }
attributes #19 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #22 = { nounwind }
attributes #23 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #24 = { nomerge }
attributes #25 = { nounwind allocsize(2) }
attributes #26 = { cold }
attributes #27 = { nobuiltin }
attributes #28 = { cold nounwind }
attributes #29 = { nobuiltin nounwind }
attributes #30 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !8, !9, !10, !12, !14, !16, !18, !19, !20, !22, !23, !25, !27, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !49, !51, !53, !55, !57, !59, !61, !63, !65, !67, !69, !71, !73, !75, !77, !79, !81, !82, !83, !85, !87, !89, !91, !93, !95, !97, !99, !100, !102, !103, !105, !106, !108, !110, !112, !114, !116, !118, !120, !121, !122, !124, !126, !128, !130, !132, !134, !136, !137, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !169, !170, !171, !173, !175, !176, !177, !178, !180, !182, !184, !185, !186, !187, !188, !189, !191, !192, !193, !195, !196, !198, !200, !202, !204, !205, !207, !208, !210, !211, !213, !214, !216, !217, !219, !220, !222, !224, !225, !226, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !258, !260, !262, !264, !266, !268, !269, !271, !272, !273, !275, !276, !277, !278, !279, !280, !281, !282, !284, !285, !287, !289, !291, !293, !295, !297, !299, !301, !302, !303, !305, !307, !309, !310, !312, !314, !315, !317, !319, !321, !323, !325, !327, !329, !331, !333, !334, !336, !338, !340, !342, !343, !345, !346, !348, !349, !351, !353, !355, !356, !357, !359, !361, !363, !364, !366, !367, !369, !371, !373, !375, !376, !378, !380, !381, !382, !384, !385, !386, !388, !389, !391, !392, !394, !396, !398, !400, !401, !402, !403, !405, !406, !408, !409, !410, !412, !414, !415, !417, !418, !419, !420, !422, !424, !425, !426, !427, !429, !431, !433, !434, !436, !437, !439, !441, !443, !445, !447, !448, !449, !450, !452, !453, !454, !456, !458, !460, !462, !464, !466, !468, !470, !472, !474, !476, !478, !479, !480, !482, !483, !485, !486, !488, !489, !491, !492, !493, !495, !496, !497, !499, !501, !503, !505, !507, !509, !510, !511}
!llvm.named.register.sp = !{!512}
!llvm.module.flags = !{!513, !514, !515, !516, !517, !518, !519, !520}
!llvm.ident = !{!521}

!0 = !{ptr @sysfs_deprecated, !1, !"sysfs_deprecated", i1 false, i1 false}
!1 = !{!"../drivers/base/core.c", i32 39, i32 6}
!2 = !{ptr @__setup_sysfs_deprecated_setup, !3, !"__setup_sysfs_deprecated_setup", i1 false, i1 false}
!3 = !{!"../drivers/base/core.c", i32 47, i32 1}
!4 = !{ptr @.str, !5, !"<string literal>", i1 false, i1 false}
!5 = !{!"../drivers/base/core.c", i32 98, i32 2}
!6 = !{ptr @.str.1, !5, !"<string literal>", i1 false, i1 false}
!7 = !{ptr @.str.2, !5, !"<string literal>", i1 false, i1 false}
!8 = !{ptr @.str.3, !5, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @fwnode_link_add.__UNIQUE_ID_ddebug358, !5, !"__UNIQUE_ID_ddebug358", i1 false, i1 false}
!10 = !{ptr @__ksymtab_fw_devlink_purge_absent_suppliers, !11, !"__ksymtab_fw_devlink_purge_absent_suppliers", i1 false, i1 false}
!11 = !{!"../drivers/base/core.c", i32 179, i32 1}
!12 = !{ptr @__initcall__kmod_core__364_617_devlink_class_init2, !13, !"__initcall__kmod_core__364_617_devlink_class_init2", i1 false, i1 false}
!13 = !{!"../drivers/base/core.c", i32 617, i32 1}
!14 = !{ptr @.str.4, !15, !"<string literal>", i1 false, i1 false}
!15 = !{!"../drivers/base/core.c", i32 819, i32 32}
!16 = !{ptr @.str.5, !17, !"<string literal>", i1 false, i1 false}
!17 = !{!"../drivers/base/core.c", i32 853, i32 3}
!18 = !{ptr @.str.6, !17, !"<string literal>", i1 false, i1 false}
!19 = !{ptr @device_link_add.__UNIQUE_ID_ddebug365, !17, !"__UNIQUE_ID_ddebug365", i1 false, i1 false}
!20 = !{ptr @.str.7, !21, !"<string literal>", i1 false, i1 false}
!21 = !{!"../drivers/base/core.c", i32 869, i32 2}
!22 = !{ptr @device_link_add.__UNIQUE_ID_ddebug366, !21, !"__UNIQUE_ID_ddebug366", i1 false, i1 false}
!23 = !{ptr @__ksymtab_device_link_add, !24, !"__ksymtab_device_link_add", i1 false, i1 false}
!24 = !{!"../drivers/base/core.c", i32 880, i32 1}
!25 = !{ptr @__ksymtab_device_link_del, !26, !"__ksymtab_device_link_del", i1 false, i1 false}
!26 = !{!"../drivers/base/core.c", i32 920, i32 1}
!27 = !{ptr @__ksymtab_device_link_remove, !28, !"__ksymtab_device_link_remove", i1 false, i1 false}
!28 = !{!"../drivers/base/core.c", i32 948, i32 1}
!29 = !{ptr @.str.8, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../drivers/base/core.c", i32 999, i32 37}
!31 = !{ptr @.str.9, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../drivers/base/core.c", i32 1016, i32 11}
!33 = !{ptr @.str.10, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../drivers/base/core.c", i32 1125, i32 3}
!35 = !{ptr @__initcall__kmod_core__371_1151_sync_state_resume_initcall7, !36, !"__initcall__kmod_core__371_1151_sync_state_resume_initcall7", i1 false, i1 false}
!36 = !{!"../drivers/base/core.c", i32 1151, i32 1}
!37 = !{ptr @__setup_fw_devlink_setup, !38, !"__setup_fw_devlink_setup", i1 false, i1 false}
!38 = !{!"../drivers/base/core.c", i32 1581, i32 1}
!39 = !{ptr @__setup_fw_devlink_strict_setup, !40, !"__setup_fw_devlink_strict_setup", i1 false, i1 false}
!40 = !{!"../drivers/base/core.c", i32 1588, i32 1}
!41 = !{ptr @platform_notify, !42, !"platform_notify", i1 false, i1 false}
!42 = !{!"../drivers/base/core.c", i32 2002, i32 7}
!43 = !{ptr @platform_notify_remove, !44, !"platform_notify_remove", i1 false, i1 false}
!44 = !{!"../drivers/base/core.c", i32 2003, i32 7}
!45 = !{ptr @__ksymtab_dev_driver_string, !46, !"__ksymtab_dev_driver_string", i1 false, i1 false}
!46 = !{!"../drivers/base/core.c", i32 2082, i32 1}
!47 = !{ptr @__ksymtab_device_store_ulong, !48, !"__ksymtab_device_store_ulong", i1 false, i1 false}
!48 = !{!"../drivers/base/core.c", i32 2136, i32 1}
!49 = !{ptr @.str.11, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../drivers/base/core.c", i32 2143, i32 25}
!51 = !{ptr @__ksymtab_device_show_ulong, !52, !"__ksymtab_device_show_ulong", i1 false, i1 false}
!52 = !{!"../drivers/base/core.c", i32 2145, i32 1}
!53 = !{ptr @__ksymtab_device_store_int, !54, !"__ksymtab_device_store_int", i1 false, i1 false}
!54 = !{!"../drivers/base/core.c", i32 2165, i32 1}
!55 = !{ptr @.str.12, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../drivers/base/core.c", i32 2173, i32 25}
!57 = !{ptr @__ksymtab_device_show_int, !58, !"__ksymtab_device_show_int", i1 false, i1 false}
!58 = !{!"../drivers/base/core.c", i32 2175, i32 1}
!59 = !{ptr @__ksymtab_device_store_bool, !60, !"__ksymtab_device_store_bool", i1 false, i1 false}
!60 = !{!"../drivers/base/core.c", i32 2187, i32 1}
!61 = !{ptr @__ksymtab_device_show_bool, !62, !"__ksymtab_device_show_bool", i1 false, i1 false}
!62 = !{!"../drivers/base/core.c", i32 2196, i32 1}
!63 = !{ptr @__ksymtab_device_add_groups, !64, !"__ksymtab_device_add_groups", i1 false, i1 false}
!64 = !{!"../drivers/base/core.c", i32 2473, i32 1}
!65 = !{ptr @__ksymtab_device_remove_groups, !66, !"__ksymtab_device_remove_groups", i1 false, i1 false}
!66 = !{!"../drivers/base/core.c", i32 2480, i32 1}
!67 = !{ptr @.str.13, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../drivers/base/core.c", i32 2525, i32 11}
!69 = !{ptr @__ksymtab_devm_device_add_group, !70, !"__ksymtab_devm_device_add_group", i1 false, i1 false}
!70 = !{!"../drivers/base/core.c", i32 2540, i32 1}
!71 = !{ptr @__ksymtab_devm_device_remove_group, !72, !"__ksymtab_devm_device_remove_group", i1 false, i1 false}
!72 = !{!"../drivers/base/core.c", i32 2557, i32 1}
!73 = !{ptr @.str.14, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../drivers/base/core.c", i32 2578, i32 11}
!75 = !{ptr @__ksymtab_devm_device_add_groups, !76, !"__ksymtab_devm_device_add_groups", i1 false, i1 false}
!76 = !{!"../drivers/base/core.c", i32 2593, i32 1}
!77 = !{ptr @__ksymtab_devm_device_remove_groups, !78, !"__ksymtab_devm_device_remove_groups", i1 false, i1 false}
!78 = !{!"../drivers/base/core.c", i32 2610, i32 1}
!79 = !{ptr @.str.15, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/base/core.c", i32 2737, i32 2}
!81 = !{ptr @.str.16, !80, !"<string literal>", i1 false, i1 false}
!82 = !{ptr @devices_kset_move_last.__UNIQUE_ID_ddebug391, !80, !"__UNIQUE_ID_ddebug391", i1 false, i1 false}
!83 = !{ptr @.str.17, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/base/core.c", i32 2754, i32 3}
!85 = !{ptr @.str.18, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../drivers/base/core.c", i32 2757, i32 3}
!87 = !{ptr @__ksymtab_device_create_file, !88, !"__ksymtab_device_create_file", i1 false, i1 false}
!88 = !{!"../drivers/base/core.c", i32 2765, i32 1}
!89 = !{ptr @__ksymtab_device_remove_file, !90, !"__ksymtab_device_remove_file", i1 false, i1 false}
!90 = !{!"../drivers/base/core.c", i32 2778, i32 1}
!91 = !{ptr @__ksymtab_device_remove_file_self, !92, !"__ksymtab_device_remove_file_self", i1 false, i1 false}
!92 = !{!"../drivers/base/core.c", i32 2795, i32 1}
!93 = !{ptr @__ksymtab_device_create_bin_file, !94, !"__ksymtab_device_create_bin_file", i1 false, i1 false}
!94 = !{!"../drivers/base/core.c", i32 2810, i32 1}
!95 = !{ptr @__ksymtab_device_remove_bin_file, !96, !"__ksymtab_device_remove_bin_file", i1 false, i1 false}
!96 = !{!"../drivers/base/core.c", i32 2823, i32 1}
!97 = !{ptr @device_initialize.__key, !98, !"__key", i1 false, i1 false}
!98 = !{!"../drivers/base/core.c", i32 2866, i32 2}
!99 = !{ptr @.str.19, !98, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @device_initialize.__key.20, !101, !"__key", i1 false, i1 false}
!101 = !{!"../drivers/base/core.c", i32 2868, i32 2}
!102 = !{ptr @.str.21, !101, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @device_initialize.__key.22, !104, !"__key", i1 false, i1 false}
!104 = !{!"../drivers/base/core.c", i32 2871, i32 2}
!105 = !{ptr @.str.23, !104, !"<string literal>", i1 false, i1 false}
!106 = !{ptr @__ksymtab_device_initialize, !107, !"__ksymtab_device_initialize", i1 false, i1 false}
!107 = !{!"../drivers/base/core.c", i32 2888, i32 1}
!108 = !{ptr @virtual_device_parent.virtual_dir, !109, !"virtual_dir", i1 false, i1 false}
!109 = !{!"../drivers/base/core.c", i32 2892, i32 25}
!110 = !{ptr @.str.24, !111, !"<string literal>", i1 false, i1 false}
!111 = !{!"../drivers/base/core.c", i32 2895, i32 40}
!112 = !{ptr @__ksymtab_dev_set_name, !113, !"__ksymtab_dev_set_name", i1 false, i1 false}
!113 = !{!"../drivers/base/core.c", i32 3197, i32 1}
!114 = !{ptr @.str.25, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../drivers/base/core.c", i32 3310, i32 21}
!116 = !{ptr @.str.26, !117, !"<string literal>", i1 false, i1 false}
!117 = !{!"../drivers/base/core.c", i32 3316, i32 21}
!118 = !{ptr @.str.27, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../drivers/base/core.c", i32 3323, i32 2}
!120 = !{ptr @.str.28, !119, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @device_add.__UNIQUE_ID_ddebug392, !119, !"__UNIQUE_ID_ddebug392", i1 false, i1 false}
!122 = !{ptr @__ksymtab_device_add, !123, !"__ksymtab_device_add", i1 false, i1 false}
!123 = !{!"../drivers/base/core.c", i32 3463, i32 1}
!124 = !{ptr @__ksymtab_device_register, !125, !"__ksymtab_device_register", i1 false, i1 false}
!125 = !{!"../drivers/base/core.c", i32 3488, i32 1}
!126 = !{ptr @__ksymtab_get_device, !127, !"__ksymtab_get_device", i1 false, i1 false}
!127 = !{!"../drivers/base/core.c", i32 3502, i32 1}
!128 = !{ptr @__ksymtab_put_device, !129, !"__ksymtab_put_device", i1 false, i1 false}
!129 = !{!"../drivers/base/core.c", i32 3514, i32 1}
!130 = !{ptr @__ksymtab_kill_device, !131, !"__ksymtab_kill_device", i1 false, i1 false}
!131 = !{!"../drivers/base/core.c", i32 3532, i32 1}
!132 = !{ptr @__ksymtab_device_del, !133, !"__ksymtab_device_del", i1 false, i1 false}
!133 = !{!"../drivers/base/core.c", i32 3608, i32 1}
!134 = !{ptr @.str.29, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/base/core.c", i32 3623, i32 2}
!136 = !{ptr @device_unregister.__UNIQUE_ID_ddebug393, !135, !"__UNIQUE_ID_ddebug393", i1 false, i1 false}
!137 = !{ptr @__ksymtab_device_unregister, !138, !"__ksymtab_device_unregister", i1 false, i1 false}
!138 = !{!"../drivers/base/core.c", i32 3627, i32 1}
!139 = !{ptr @__ksymtab_device_for_each_child, !140, !"__ksymtab_device_for_each_child", i1 false, i1 false}
!140 = !{!"../drivers/base/core.c", i32 3728, i32 1}
!141 = !{ptr @__ksymtab_device_for_each_child_reverse, !142, !"__ksymtab_device_for_each_child_reverse", i1 false, i1 false}
!142 = !{!"../drivers/base/core.c", i32 3758, i32 1}
!143 = !{ptr @__ksymtab_device_find_child, !144, !"__ksymtab_device_find_child", i1 false, i1 false}
!144 = !{!"../drivers/base/core.c", i32 3793, i32 1}
!145 = !{ptr @__ksymtab_device_find_child_by_name, !146, !"__ksymtab_device_find_child_by_name", i1 false, i1 false}
!146 = !{!"../drivers/base/core.c", i32 3821, i32 1}
!147 = !{ptr @.str.30, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../drivers/base/core.c", i32 3825, i32 37}
!149 = !{ptr @.str.31, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../drivers/base/core.c", i32 3828, i32 36}
!151 = !{ptr @.str.32, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../drivers/base/core.c", i32 3831, i32 48}
!153 = !{ptr @.str.33, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../drivers/base/core.c", i32 3834, i32 47}
!155 = !{ptr @.str.34, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../drivers/base/core.c", i32 3994, i32 55}
!157 = !{ptr @__ksymtab___root_device_register, !158, !"__ksymtab___root_device_register", i1 false, i1 false}
!158 = !{!"../drivers/base/core.c", i32 4005, i32 1}
!159 = !{ptr @__ksymtab_root_device_unregister, !160, !"__ksymtab_root_device_unregister", i1 false, i1 false}
!160 = !{!"../drivers/base/core.c", i32 4023, i32 1}
!161 = !{ptr @__ksymtab_device_create, !162, !"__ksymtab_device_create", i1 false, i1 false}
!162 = !{!"../drivers/base/core.c", i32 4109, i32 1}
!163 = !{ptr @__ksymtab_device_create_with_groups, !164, !"__ksymtab_device_create_with_groups", i1 false, i1 false}
!164 = !{!"../drivers/base/core.c", i32 4153, i32 1}
!165 = !{ptr @__ksymtab_device_destroy, !166, !"__ksymtab_device_destroy", i1 false, i1 false}
!166 = !{!"../drivers/base/core.c", i32 4173, i32 1}
!167 = !{ptr @.str.35, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../drivers/base/core.c", i32 4224, i32 2}
!169 = !{ptr @.str.36, !168, !"<string literal>", i1 false, i1 false}
!170 = !{ptr @device_rename.__UNIQUE_ID_ddebug395, !168, !"__UNIQUE_ID_ddebug395", i1 false, i1 false}
!171 = !{ptr @__ksymtab_device_rename, !172, !"__ksymtab_device_rename", i1 false, i1 false}
!172 = !{!"../drivers/base/core.c", i32 4251, i32 1}
!173 = !{ptr @.str.37, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../drivers/base/core.c", i32 4293, i32 2}
!175 = !{ptr @.str.38, !174, !"<string literal>", i1 false, i1 false}
!176 = !{ptr @device_move.__UNIQUE_ID_ddebug396, !174, !"__UNIQUE_ID_ddebug396", i1 false, i1 false}
!177 = !{ptr @.str.39, !174, !"<string literal>", i1 false, i1 false}
!178 = !{ptr @__ksymtab_device_move, !179, !"__ksymtab_device_move", i1 false, i1 false}
!179 = !{!"../drivers/base/core.c", i32 4354, i32 1}
!180 = !{ptr @__ksymtab_device_change_owner, !181, !"__ksymtab_device_change_owner", i1 false, i1 false}
!181 = !{!"../drivers/base/core.c", i32 4474, i32 1}
!182 = !{ptr @.str.40, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/base/core.c", i32 4523, i32 5}
!184 = !{ptr @.str.41, !183, !"<string literal>", i1 false, i1 false}
!185 = !{ptr @.str.42, !183, !"<string literal>", i1 false, i1 false}
!186 = !{ptr @.str.43, !183, !"<string literal>", i1 false, i1 false}
!187 = !{ptr @device_shutdown._entry, !183, !"_entry", i1 false, i1 false}
!188 = !{ptr @device_shutdown._entry_ptr, !183, !"_entry_ptr", i1 false, i1 false}
!189 = !{ptr @.str.45, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/base/core.c", i32 4528, i32 5}
!191 = !{ptr @device_shutdown._entry.44, !190, !"_entry", i1 false, i1 false}
!192 = !{ptr @device_shutdown._entry_ptr.46, !190, !"_entry_ptr", i1 false, i1 false}
!193 = !{ptr @device_shutdown._entry.47, !194, !"_entry", i1 false, i1 false}
!194 = !{!"../drivers/base/core.c", i32 4532, i32 5}
!195 = !{ptr @device_shutdown._entry_ptr.48, !194, !"_entry_ptr", i1 false, i1 false}
!196 = !{ptr @__ksymtab_dev_vprintk_emit, !197, !"__ksymtab_dev_vprintk_emit", i1 false, i1 false}
!197 = !{!"../drivers/base/core.c", i32 4606, i32 1}
!198 = !{ptr @__ksymtab_dev_printk_emit, !199, !"__ksymtab_dev_printk_emit", i1 false, i1 false}
!199 = !{!"../drivers/base/core.c", i32 4621, i32 1}
!200 = !{ptr @__ksymtab__dev_printk, !201, !"__ksymtab__dev_printk", i1 false, i1 false}
!201 = !{!"../drivers/base/core.c", i32 4648, i32 1}
!202 = !{ptr @.str.49, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/base/core.c", i32 4667, i32 1}
!204 = !{ptr @__ksymtab__dev_emerg, !203, !"__ksymtab__dev_emerg", i1 false, i1 false}
!205 = !{ptr @.str.50, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"../drivers/base/core.c", i32 4668, i32 1}
!207 = !{ptr @__ksymtab__dev_alert, !206, !"__ksymtab__dev_alert", i1 false, i1 false}
!208 = !{ptr @.str.51, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../drivers/base/core.c", i32 4669, i32 1}
!210 = !{ptr @__ksymtab__dev_crit, !209, !"__ksymtab__dev_crit", i1 false, i1 false}
!211 = !{ptr @.str.52, !212, !"<string literal>", i1 false, i1 false}
!212 = !{!"../drivers/base/core.c", i32 4670, i32 1}
!213 = !{ptr @__ksymtab__dev_err, !212, !"__ksymtab__dev_err", i1 false, i1 false}
!214 = !{ptr @.str.53, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/base/core.c", i32 4671, i32 1}
!216 = !{ptr @__ksymtab__dev_warn, !215, !"__ksymtab__dev_warn", i1 false, i1 false}
!217 = !{ptr @.str.54, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../drivers/base/core.c", i32 4672, i32 1}
!219 = !{ptr @__ksymtab__dev_notice, !218, !"__ksymtab__dev_notice", i1 false, i1 false}
!220 = !{ptr @__ksymtab__dev_info, !221, !"__ksymtab__dev_info", i1 false, i1 false}
!221 = !{!"../drivers/base/core.c", i32 4673, i32 1}
!222 = !{ptr @.str.55, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../drivers/base/core.c", i32 4719, i32 3}
!224 = !{ptr @.str.56, !223, !"<string literal>", i1 false, i1 false}
!225 = !{ptr @dev_err_probe._entry, !223, !"_entry", i1 false, i1 false}
!226 = !{ptr @dev_err_probe._entry_ptr, !223, !"_entry_ptr", i1 false, i1 false}
!227 = !{ptr @dev_err_probe.__UNIQUE_ID_ddebug397, !228, !"__UNIQUE_ID_ddebug397", i1 false, i1 false}
!228 = !{!"../drivers/base/core.c", i32 4722, i32 3}
!229 = !{ptr @__ksymtab_dev_err_probe, !230, !"__ksymtab_dev_err_probe", i1 false, i1 false}
!230 = !{!"../drivers/base/core.c", i32 4729, i32 1}
!231 = !{ptr @__ksymtab_set_primary_fwnode, !232, !"__ksymtab_set_primary_fwnode", i1 false, i1 false}
!232 = !{!"../drivers/base/core.c", i32 4775, i32 1}
!233 = !{ptr @__ksymtab_set_secondary_fwnode, !234, !"__ksymtab_set_secondary_fwnode", i1 false, i1 false}
!234 = !{!"../drivers/base/core.c", i32 4796, i32 1}
!235 = !{ptr @__ksymtab_device_set_of_node_from_dev, !236, !"__ksymtab_device_set_of_node_from_dev", i1 false, i1 false}
!236 = !{!"../drivers/base/core.c", i32 4812, i32 1}
!237 = !{ptr @__ksymtab_device_set_node, !238, !"__ksymtab_device_set_node", i1 false, i1 false}
!238 = !{!"../drivers/base/core.c", i32 4819, i32 1}
!239 = !{ptr @__ksymtab_device_match_name, !240, !"__ksymtab_device_match_name", i1 false, i1 false}
!240 = !{!"../drivers/base/core.c", i32 4825, i32 1}
!241 = !{ptr @__ksymtab_device_match_of_node, !242, !"__ksymtab_device_match_of_node", i1 false, i1 false}
!242 = !{!"../drivers/base/core.c", i32 4831, i32 1}
!243 = !{ptr @__ksymtab_device_match_fwnode, !244, !"__ksymtab_device_match_fwnode", i1 false, i1 false}
!244 = !{!"../drivers/base/core.c", i32 4837, i32 1}
!245 = !{ptr @__ksymtab_device_match_devt, !246, !"__ksymtab_device_match_devt", i1 false, i1 false}
!246 = !{!"../drivers/base/core.c", i32 4843, i32 1}
!247 = !{ptr @__ksymtab_device_match_acpi_dev, !248, !"__ksymtab_device_match_acpi_dev", i1 false, i1 false}
!248 = !{!"../drivers/base/core.c", i32 4849, i32 1}
!249 = !{ptr @__ksymtab_device_match_acpi_handle, !250, !"__ksymtab_device_match_acpi_handle", i1 false, i1 false}
!250 = !{!"../drivers/base/core.c", i32 4855, i32 1}
!251 = !{ptr @__ksymtab_device_match_any, !252, !"__ksymtab_device_match_any", i1 false, i1 false}
!252 = !{!"../drivers/base/core.c", i32 4861, i32 1}
!253 = distinct !{null, !254, !"fw_devlink_drv_reg_done", i1 false, i1 false}
!254 = !{!"../drivers/base/core.c", i32 55, i32 13}
!255 = !{ptr @__pcpu_unique_device_links_srcu_srcu_data, !256, !"__pcpu_unique_device_links_srcu_srcu_data", i1 false, i1 false}
!256 = !{!"../drivers/base/core.c", i32 183, i32 1}
!257 = !{ptr @device_links_srcu_srcu_data, !256, !"device_links_srcu_srcu_data", i1 false, i1 false}
!258 = !{ptr @fw_devlink_strict, !259, !"fw_devlink_strict", i1 false, i1 false}
!259 = !{!"../drivers/base/core.c", i32 1583, i32 13}
!260 = !{ptr @dev_kobj, !261, !"dev_kobj", i1 false, i1 false}
!261 = !{!"../drivers/base/core.c", i32 2004, i32 24}
!262 = !{ptr @sysfs_dev_char_kobj, !263, !"sysfs_dev_char_kobj", i1 false, i1 false}
!263 = !{!"../drivers/base/core.c", i32 2005, i32 17}
!264 = !{ptr @sysfs_dev_block_kobj, !265, !"sysfs_dev_block_kobj", i1 false, i1 false}
!265 = !{!"../drivers/base/core.c", i32 2006, i32 17}
!266 = !{ptr @devices_kset, !267, !"devices_kset", i1 false, i1 false}
!267 = !{!"../drivers/base/core.c", i32 2695, i32 14}
!268 = !{ptr @__setup_str_sysfs_deprecated_setup, !3, !"__setup_str_sysfs_deprecated_setup", i1 false, i1 false}
!269 = !{ptr @.str.57, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../drivers/base/core.c", i32 53, i32 8}
!271 = !{ptr @.str.58, !270, !"<string literal>", i1 false, i1 false}
!272 = !{ptr @fwnode_link_lock, !270, !"fwnode_link_lock", i1 false, i1 false}
!273 = !{ptr @.str.59, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../drivers/base/core.c", i32 114, i32 2}
!275 = !{ptr @.str.60, !274, !"<string literal>", i1 false, i1 false}
!276 = !{ptr @__fwnode_link_del.__UNIQUE_ID_ddebug359, !274, !"__UNIQUE_ID_ddebug359", i1 false, i1 false}
!277 = !{ptr @.str.61, !256, !"<string literal>", i1 false, i1 false}
!278 = !{ptr @.str.62, !256, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @.str.63, !256, !"<string literal>", i1 false, i1 false}
!280 = !{ptr @.str.64, !256, !"<string literal>", i1 false, i1 false}
!281 = !{ptr @device_links_srcu, !256, !"device_links_srcu", i1 false, i1 false}
!282 = distinct !{null, !283, !"__already_done", i1 false, i1 false}
!283 = !{!"../include/linux/srcu.h", i32 189, i32 2}
!284 = !{ptr @.str.65, !283, !"<string literal>", i1 false, i1 false}
!285 = !{ptr @devlink_class_init.__key, !286, !"__key", i1 false, i1 false}
!286 = !{!"../drivers/base/core.c", i32 607, i32 8}
!287 = !{ptr @devlink_class_intf, !288, !"devlink_class_intf", i1 false, i1 false}
!288 = !{!"../drivers/base/core.c", i32 597, i32 31}
!289 = !{ptr @.str.66, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../drivers/base/core.c", i32 534, i32 60}
!291 = !{ptr @.str.67, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/base/core.c", i32 538, i32 60}
!293 = !{ptr @.str.68, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../drivers/base/core.c", i32 542, i32 21}
!295 = !{ptr @.str.69, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../drivers/base/core.c", i32 547, i32 21}
!297 = !{ptr @.str.70, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../drivers/base/core.c", i32 584, i32 3}
!299 = !{ptr @.str.71, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../drivers/base/core.c", i32 182, i32 8}
!301 = !{ptr @.str.72, !300, !"<string literal>", i1 false, i1 false}
!302 = !{ptr @device_links_lock, !300, !"device_links_lock", i1 false, i1 false}
!303 = !{ptr @.str.73, !304, !"<string literal>", i1 false, i1 false}
!304 = !{!"../drivers/base/core.c", i32 510, i32 10}
!305 = !{ptr @devlink_class, !306, !"devlink_class", i1 false, i1 false}
!306 = !{!"../drivers/base/core.c", i32 509, i32 21}
!307 = !{ptr @devlink_groups, !308, !"devlink_groups", i1 false, i1 false}
!308 = !{!"../drivers/base/core.c", i32 479, i32 1}
!309 = !{ptr @devlink_group, !308, !"devlink_group", i1 false, i1 false}
!310 = !{ptr @devlink_attrs, !311, !"devlink_attrs", i1 false, i1 false}
!311 = !{!"../drivers/base/core.c", i32 472, i32 26}
!312 = !{ptr @.str.74, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../drivers/base/core.c", i32 434, i32 8}
!314 = !{ptr @dev_attr_status, !313, !"dev_attr_status", i1 false, i1 false}
!315 = !{ptr @.str.75, !316, !"<string literal>", i1 false, i1 false}
!316 = !{!"../drivers/base/core.c", i32 410, i32 12}
!317 = !{ptr @.str.76, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../drivers/base/core.c", i32 413, i32 12}
!319 = !{ptr @.str.77, !320, !"<string literal>", i1 false, i1 false}
!320 = !{!"../drivers/base/core.c", i32 416, i32 12}
!321 = !{ptr @.str.78, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../drivers/base/core.c", i32 419, i32 12}
!323 = !{ptr @.str.79, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../drivers/base/core.c", i32 422, i32 12}
!325 = !{ptr @.str.80, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../drivers/base/core.c", i32 425, i32 12}
!327 = !{ptr @.str.81, !328, !"<string literal>", i1 false, i1 false}
!328 = !{!"../drivers/base/core.c", i32 428, i32 12}
!329 = !{ptr @.str.82, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/base/core.c", i32 432, i32 25}
!331 = !{ptr @.str.83, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../drivers/base/core.c", i32 451, i32 8}
!333 = !{ptr @dev_attr_auto_remove_on, !332, !"dev_attr_auto_remove_on", i1 false, i1 false}
!334 = !{ptr @.str.84, !335, !"<string literal>", i1 false, i1 false}
!335 = !{!"../drivers/base/core.c", i32 443, i32 12}
!336 = !{ptr @.str.85, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../drivers/base/core.c", i32 445, i32 12}
!338 = !{ptr @.str.86, !339, !"<string literal>", i1 false, i1 false}
!339 = !{!"../drivers/base/core.c", i32 447, i32 12}
!340 = !{ptr @.str.87, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../drivers/base/core.c", i32 460, i32 8}
!342 = !{ptr @dev_attr_runtime_pm, !341, !"dev_attr_runtime_pm", i1 false, i1 false}
!343 = !{ptr @.str.88, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../drivers/base/core.c", i32 470, i32 8}
!345 = !{ptr @dev_attr_sync_state_only, !344, !"dev_attr_sync_state_only", i1 false, i1 false}
!346 = !{ptr @devlink_dev_release.__key, !347, !"__key", i1 false, i1 false}
!347 = !{!"../drivers/base/core.c", i32 499, i32 2}
!348 = !{ptr @.str.89, !347, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @.str.90, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../include/linux/device.h", i32 651, i32 70}
!351 = !{ptr @.str.91, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../drivers/base/core.c", i32 902, i32 3}
!353 = !{ptr @.str.92, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../drivers/base/core.c", i32 886, i32 2}
!355 = !{ptr @.str.93, !354, !"<string literal>", i1 false, i1 false}
!356 = !{ptr @__device_link_del.__UNIQUE_ID_ddebug367, !354, !"__UNIQUE_ID_ddebug367", i1 false, i1 false}
!357 = !{ptr @defer_sync_state_count, !358, !"defer_sync_state_count", i1 false, i1 false}
!358 = !{!"../drivers/base/core.c", i32 52, i32 21}
!359 = !{ptr @deferred_sync, !360, !"deferred_sync", i1 false, i1 false}
!360 = !{!"../drivers/base/core.c", i32 51, i32 8}
!361 = !{ptr @.str.94, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../drivers/base/core.c", i32 1177, i32 8}
!363 = !{ptr @dev_attr_waiting_for_supplier, !362, !"dev_attr_waiting_for_supplier", i1 false, i1 false}
!364 = !{ptr @.str.95, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../drivers/base/core.c", i32 1175, i32 25}
!366 = !{ptr @__setup_str_fw_devlink_setup, !38, !"__setup_str_fw_devlink_setup", i1 false, i1 false}
!367 = !{ptr @.str.96, !368, !"<string literal>", i1 false, i1 false}
!368 = !{!"../drivers/base/core.c", i32 1570, i32 18}
!369 = !{ptr @.str.97, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../drivers/base/core.c", i32 1572, i32 25}
!371 = !{ptr @.str.98, !372, !"<string literal>", i1 false, i1 false}
!372 = !{!"../drivers/base/core.c", i32 1574, i32 25}
!373 = !{ptr @.str.99, !374, !"<string literal>", i1 false, i1 false}
!374 = !{!"../drivers/base/core.c", i32 1576, i32 25}
!375 = !{ptr @__setup_str_fw_devlink_strict_setup, !40, !"__setup_str_fw_devlink_strict_setup", i1 false, i1 false}
!376 = !{ptr @fw_devlink_flags, !377, !"fw_devlink_flags", i1 false, i1 false}
!377 = !{!"../drivers/base/core.c", i32 1564, i32 12}
!378 = !{ptr @.str.100, !379, !"<string literal>", i1 false, i1 false}
!379 = !{!"../drivers/base/core.c", i32 1634, i32 2}
!380 = !{ptr @.str.101, !379, !"<string literal>", i1 false, i1 false}
!381 = !{ptr @fw_devlink_relax_link.__UNIQUE_ID_ddebug382, !379, !"__UNIQUE_ID_ddebug382", i1 false, i1 false}
!382 = !{ptr @.str.102, !383, !"<string literal>", i1 false, i1 false}
!383 = !{!"../drivers/base/core.c", i32 2008, i32 8}
!384 = !{ptr @.str.103, !383, !"<string literal>", i1 false, i1 false}
!385 = !{ptr @device_hotplug_lock, !383, !"device_hotplug_lock", i1 false, i1 false}
!386 = !{ptr @.str.104, !387, !"<string literal>", i1 false, i1 false}
!387 = !{!"../drivers/base/core.c", i32 2497, i32 2}
!388 = !{ptr @devm_attr_group_remove.__UNIQUE_ID_ddebug387, !387, !"__UNIQUE_ID_ddebug387", i1 false, i1 false}
!389 = !{ptr @.str.105, !390, !"<string literal>", i1 false, i1 false}
!390 = !{!"../drivers/base/core.c", i32 2506, i32 2}
!391 = !{ptr @devm_attr_groups_remove.__UNIQUE_ID_ddebug388, !390, !"__UNIQUE_ID_ddebug388", i1 false, i1 false}
!392 = !{ptr @device_ktype, !393, !"device_ktype", i1 false, i1 false}
!393 = !{!"../drivers/base/core.c", i32 2255, i32 25}
!394 = !{ptr @.str.106, !395, !"<string literal>", i1 false, i1 false}
!395 = !{!"../drivers/base/core.c", i32 2231, i32 3}
!396 = !{ptr @dev_sysfs_ops, !397, !"dev_sysfs_ops", i1 false, i1 false}
!397 = !{!"../drivers/base/core.c", i32 2114, i32 31}
!398 = !{ptr @.str.107, !399, !"<string literal>", i1 false, i1 false}
!399 = !{!"../drivers/base/core.c", i32 2096, i32 3}
!400 = !{ptr @.str.108, !399, !"<string literal>", i1 false, i1 false}
!401 = !{ptr @dev_attr_show._entry, !399, !"_entry", i1 false, i1 false}
!402 = !{ptr @dev_attr_show._entry_ptr, !399, !"_entry_ptr", i1 false, i1 false}
!403 = !{ptr @device_pm_init_common.__key, !404, !"__key", i1 false, i1 false}
!404 = !{!"../drivers/base/power/power.h", i32 7, i32 3}
!405 = !{ptr @.str.109, !404, !"<string literal>", i1 false, i1 false}
!406 = !{ptr @.str.110, !407, !"<string literal>", i1 false, i1 false}
!407 = !{!"../drivers/base/core.c", i32 2950, i32 8}
!408 = !{ptr @.str.111, !407, !"<string literal>", i1 false, i1 false}
!409 = !{ptr @gdp_mutex, !407, !"gdp_mutex", i1 false, i1 false}
!410 = !{ptr @class_dir_ktype, !411, !"class_dir_ktype", i1 false, i1 false}
!411 = !{!"../drivers/base/core.c", i32 2921, i32 25}
!412 = !{ptr @.str.112, !413, !"<string literal>", i1 false, i1 false}
!413 = !{!"../drivers/base/core.c", i32 2417, i32 8}
!414 = !{ptr @dev_attr_uevent, !413, !"dev_attr_uevent", i1 false, i1 false}
!415 = !{ptr @.str.113, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../drivers/base/core.c", i32 2411, i32 3}
!417 = !{ptr @.str.114, !416, !"<string literal>", i1 false, i1 false}
!418 = !{ptr @uevent_store._entry, !416, !"_entry", i1 false, i1 false}
!419 = !{ptr @uevent_store._entry_ptr, !416, !"_entry_ptr", i1 false, i1 false}
!420 = !{ptr @.str.115, !421, !"<string literal>", i1 false, i1 false}
!421 = !{!"../drivers/base/core.c", i32 3118, i32 64}
!422 = !{ptr @.str.116, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../drivers/base/core.c", i32 3120, i32 4}
!424 = !{ptr @.str.117, !423, !"<string literal>", i1 false, i1 false}
!425 = !{ptr @device_add_class_symlinks._entry, !423, !"_entry", i1 false, i1 false}
!426 = !{ptr @device_add_class_symlinks._entry_ptr, !423, !"_entry_ptr", i1 false, i1 false}
!427 = !{ptr @.str.118, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../drivers/base/core.c", i32 3129, i32 7}
!429 = !{ptr @.str.119, !430, !"<string literal>", i1 false, i1 false}
!430 = !{!"../drivers/base/core.c", i32 3135, i32 8}
!431 = !{ptr @.str.120, !432, !"<string literal>", i1 false, i1 false}
!432 = !{!"../drivers/base/core.c", i32 2448, i32 8}
!433 = !{ptr @dev_attr_online, !432, !"dev_attr_online", i1 false, i1 false}
!434 = !{ptr @.str.121, !435, !"<string literal>", i1 false, i1 false}
!435 = !{!"../drivers/base/core.c", i32 2467, i32 8}
!436 = !{ptr @dev_attr_removable, !435, !"dev_attr_removable", i1 false, i1 false}
!437 = !{ptr @.str.122, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../drivers/base/core.c", i32 2460, i32 9}
!439 = !{ptr @dev_attr_dev, !440, !"dev_attr_dev", i1 false, i1 false}
!440 = !{!"../drivers/base/core.c", i32 2692, i32 8}
!441 = !{ptr @.str.123, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../drivers/base/core.c", i32 2690, i32 9}
!443 = !{ptr @.str.124, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../drivers/base/core.c", i32 3229, i32 3}
!445 = !{ptr @.str.125, !446, !"<string literal>", i1 false, i1 false}
!446 = !{!"../drivers/base/core.c", i32 1775, i32 4}
!447 = !{ptr @.str.126, !446, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @fw_devlink_create_devlink._entry, !446, !"_entry", i1 false, i1 false}
!449 = !{ptr @fw_devlink_create_devlink._entry_ptr, !446, !"_entry_ptr", i1 false, i1 false}
!450 = !{ptr @.str.128, !451, !"<string literal>", i1 false, i1 false}
!451 = !{!"../drivers/base/core.c", i32 1816, i32 3}
!452 = !{ptr @fw_devlink_create_devlink._entry.127, !451, !"_entry", i1 false, i1 false}
!453 = !{ptr @fw_devlink_create_devlink._entry_ptr.129, !451, !"_entry_ptr", i1 false, i1 false}
!454 = distinct !{null, !455, !"__already_done", i1 false, i1 false}
!455 = !{!"../drivers/base/core.c", i32 3038, i32 2}
!456 = !{ptr @.str.130, !457, !"<string literal>", i1 false, i1 false}
!457 = !{!"../include/linux/device.h", i32 787, i32 2}
!458 = !{ptr @device_uevent_ops, !459, !"device_uevent_ops", i1 false, i1 false}
!459 = !{!"../drivers/base/core.c", i32 2354, i32 37}
!460 = !{ptr @.str.131, !461, !"<string literal>", i1 false, i1 false}
!461 = !{!"../drivers/base/core.c", i32 2301, i32 23}
!462 = !{ptr @.str.132, !463, !"<string literal>", i1 false, i1 false}
!463 = !{!"../drivers/base/core.c", i32 2302, i32 23}
!464 = !{ptr @.str.133, !465, !"<string literal>", i1 false, i1 false}
!465 = !{!"../drivers/base/core.c", i32 2305, i32 24}
!466 = !{ptr @.str.134, !467, !"<string literal>", i1 false, i1 false}
!467 = !{!"../drivers/base/core.c", i32 2307, i32 25}
!468 = !{ptr @.str.135, !469, !"<string literal>", i1 false, i1 false}
!469 = !{!"../drivers/base/core.c", i32 2309, i32 25}
!470 = !{ptr @.str.136, !471, !"<string literal>", i1 false, i1 false}
!471 = !{!"../drivers/base/core.c", i32 2311, i32 25}
!472 = !{ptr @.str.137, !473, !"<string literal>", i1 false, i1 false}
!473 = !{!"../drivers/base/core.c", i32 2317, i32 23}
!474 = !{ptr @.str.138, !475, !"<string literal>", i1 false, i1 false}
!475 = !{!"../drivers/base/core.c", i32 2320, i32 23}
!476 = !{ptr @.str.139, !477, !"<string literal>", i1 false, i1 false}
!477 = !{!"../drivers/base/core.c", i32 2329, i32 4}
!478 = !{ptr @.str.140, !477, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @dev_uevent.__UNIQUE_ID_ddebug384, !477, !"__UNIQUE_ID_ddebug384", i1 false, i1 false}
!480 = !{ptr @.str.141, !481, !"<string literal>", i1 false, i1 false}
!481 = !{!"../drivers/base/core.c", i32 2337, i32 4}
!482 = !{ptr @dev_uevent.__UNIQUE_ID_ddebug385, !481, !"__UNIQUE_ID_ddebug385", i1 false, i1 false}
!483 = !{ptr @.str.142, !484, !"<string literal>", i1 false, i1 false}
!484 = !{!"../drivers/base/core.c", i32 2346, i32 4}
!485 = !{ptr @dev_uevent.__UNIQUE_ID_ddebug386, !484, !"__UNIQUE_ID_ddebug386", i1 false, i1 false}
!486 = !{ptr @.str.143, !487, !"<string literal>", i1 false, i1 false}
!487 = !{!"../drivers/base/core.c", i32 4028, i32 2}
!488 = !{ptr @device_create_release.__UNIQUE_ID_ddebug394, !487, !"__UNIQUE_ID_ddebug394", i1 false, i1 false}
!489 = !{ptr @.str.144, !490, !"<string literal>", i1 false, i1 false}
!490 = !{!"../drivers/base/core.c", i32 2722, i32 2}
!491 = !{ptr @.str.145, !490, !"<string literal>", i1 false, i1 false}
!492 = !{ptr @devices_kset_move_after.__UNIQUE_ID_ddebug390, !490, !"__UNIQUE_ID_ddebug390", i1 false, i1 false}
!493 = !{ptr @.str.146, !494, !"<string literal>", i1 false, i1 false}
!494 = !{!"../drivers/base/core.c", i32 2706, i32 2}
!495 = !{ptr @.str.147, !494, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @devices_kset_move_before.__UNIQUE_ID_ddebug389, !494, !"__UNIQUE_ID_ddebug389", i1 false, i1 false}
!497 = !{ptr @.str.148, !498, !"<string literal>", i1 false, i1 false}
!498 = !{!"../drivers/base/core.c", i32 4585, i32 5}
!499 = !{ptr @.str.149, !500, !"<string literal>", i1 false, i1 false}
!500 = !{!"../drivers/base/core.c", i32 4586, i32 28}
!501 = !{ptr @.str.150, !502, !"<string literal>", i1 false, i1 false}
!502 = !{!"../drivers/base/core.c", i32 4590, i32 5}
!503 = !{ptr @.str.151, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../drivers/base/core.c", i32 4593, i32 5}
!505 = !{ptr @.str.152, !506, !"<string literal>", i1 false, i1 false}
!506 = !{!"../drivers/base/core.c", i32 4627, i32 40}
!507 = !{ptr @.str.153, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../drivers/base/core.c", i32 4630, i32 3}
!509 = !{ptr @.str.154, !508, !"<string literal>", i1 false, i1 false}
!510 = !{ptr @__dev_printk._entry, !508, !"_entry", i1 false, i1 false}
!511 = !{ptr @__dev_printk._entry_ptr, !508, !"_entry_ptr", i1 false, i1 false}
!512 = !{!"sp"}
!513 = !{i32 1, !"wchar_size", i32 2}
!514 = !{i32 1, !"min_enum_size", i32 4}
!515 = !{i32 8, !"branch-target-enforcement", i32 0}
!516 = !{i32 8, !"sign-return-address", i32 0}
!517 = !{i32 8, !"sign-return-address-all", i32 0}
!518 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!519 = !{i32 7, !"uwtable", i32 1}
!520 = !{i32 7, !"frame-pointer", i32 2}
!521 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!522 = !{i64 2149079995, i64 2149080000, i64 2149080013, i64 2149080057, i64 2149080091, i64 2149080112}
!523 = !{!"branch_weights", i32 2000, i32 1}
!524 = !{!"auto-init"}
!525 = !{i64 2148435122}
!526 = !{i64 919945, i64 919970, i64 919992, i64 920008, i64 920020, i64 920040, i64 920064, i64 920080, i64 920092}
!527 = !{i64 2148435310}
!528 = !{i64 2148437233, i64 2148437265, i64 2148437294, i64 2148437328, i64 2148437359, i64 2148437382}
!529 = !{!"branch_weights", i32 1, i32 2000}
!530 = !{i64 2151979873}
!531 = !{i64 2148525246}
!532 = !{i64 2148439698, i64 2148439730, i64 2148439759, i64 2148439793, i64 2148439824, i64 2148439847}
!533 = !{i64 2150173397}
!534 = !{!"branch_weights", i32 1, i32 2001, i32 2001, i32 2000}
!535 = !{i8 0, i8 2}
!536 = !{i64 2148435703, i64 2148435729, i64 2148435758, i64 2148435792, i64 2148435823, i64 2148435846}
