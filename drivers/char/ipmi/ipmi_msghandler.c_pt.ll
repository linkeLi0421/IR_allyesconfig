; ModuleID = '/llk/IR_all_yes/drivers/char/ipmi/ipmi_msghandler.c_pt.bc'
source_filename = "../drivers/char/ipmi/ipmi_msghandler.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+ipmi_addr_src_to_str\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_addr_src_to_str\09\09\09\09"
module asm "\09.long\09__crc_ipmi_addr_src_to_str\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_addr_src_to_str:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_addr_src_to_str\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_addr_src_to_str:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_smi_watcher_register\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_smi_watcher_register\09\09\09\09"
module asm "\09.long\09__crc_ipmi_smi_watcher_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_smi_watcher_register:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_smi_watcher_register\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_smi_watcher_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_smi_watcher_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_smi_watcher_unregister\09\09\09\09"
module asm "\09.long\09__crc_ipmi_smi_watcher_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_smi_watcher_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_smi_watcher_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_smi_watcher_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_validate_addr\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_validate_addr\09\09\09\09"
module asm "\09.long\09__crc_ipmi_validate_addr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_validate_addr:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_validate_addr\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_validate_addr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_addr_length\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_addr_length\09\09\09\09"
module asm "\09.long\09__crc_ipmi_addr_length\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_addr_length:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_addr_length\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_addr_length:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_create_user\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_create_user\09\09\09\09"
module asm "\09.long\09__crc_ipmi_create_user\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_create_user:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_create_user\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_create_user:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_get_smi_info\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_get_smi_info\09\09\09\09"
module asm "\09.long\09__crc_ipmi_get_smi_info\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_get_smi_info:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_get_smi_info\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_get_smi_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_destroy_user\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_destroy_user\09\09\09\09"
module asm "\09.long\09__crc_ipmi_destroy_user\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_destroy_user:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_destroy_user\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_destroy_user:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_get_version\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_get_version\09\09\09\09"
module asm "\09.long\09__crc_ipmi_get_version\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_get_version:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_get_version\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_get_version:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_set_my_address\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_set_my_address\09\09\09\09"
module asm "\09.long\09__crc_ipmi_set_my_address\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_set_my_address:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_set_my_address\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_set_my_address:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_get_my_address\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_get_my_address\09\09\09\09"
module asm "\09.long\09__crc_ipmi_get_my_address\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_get_my_address:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_get_my_address\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_get_my_address:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_set_my_LUN\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_set_my_LUN\09\09\09\09"
module asm "\09.long\09__crc_ipmi_set_my_LUN\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_set_my_LUN:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_set_my_LUN\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_set_my_LUN:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_get_my_LUN\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_get_my_LUN\09\09\09\09"
module asm "\09.long\09__crc_ipmi_get_my_LUN\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_get_my_LUN:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_get_my_LUN\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_get_my_LUN:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_get_maintenance_mode\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_get_maintenance_mode\09\09\09\09"
module asm "\09.long\09__crc_ipmi_get_maintenance_mode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_get_maintenance_mode:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_get_maintenance_mode\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_get_maintenance_mode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_set_maintenance_mode\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_set_maintenance_mode\09\09\09\09"
module asm "\09.long\09__crc_ipmi_set_maintenance_mode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_set_maintenance_mode:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_set_maintenance_mode\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_set_maintenance_mode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_set_gets_events\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_set_gets_events\09\09\09\09"
module asm "\09.long\09__crc_ipmi_set_gets_events\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_set_gets_events:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_set_gets_events\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_set_gets_events:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_register_for_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_register_for_cmd\09\09\09\09"
module asm "\09.long\09__crc_ipmi_register_for_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_register_for_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_register_for_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_register_for_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_unregister_for_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_unregister_for_cmd\09\09\09\09"
module asm "\09.long\09__crc_ipmi_unregister_for_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_unregister_for_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_unregister_for_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_unregister_for_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmb_checksum\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmb_checksum\09\09\09\09"
module asm "\09.long\09__crc_ipmb_checksum\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmb_checksum:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmb_checksum\22\09\09\09\09\09"
module asm "__kstrtabns_ipmb_checksum:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_request_settime\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_request_settime\09\09\09\09"
module asm "\09.long\09__crc_ipmi_request_settime\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_request_settime:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_request_settime\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_request_settime:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_request_supply_msgs\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_request_supply_msgs\09\09\09\09"
module asm "\09.long\09__crc_ipmi_request_supply_msgs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_request_supply_msgs:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_request_supply_msgs\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_request_supply_msgs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_poll_interface\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_poll_interface\09\09\09\09"
module asm "\09.long\09__crc_ipmi_poll_interface\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_poll_interface:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_poll_interface\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_poll_interface:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_add_smi\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_add_smi\09\09\09\09"
module asm "\09.long\09__crc_ipmi_add_smi\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_add_smi:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_add_smi\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_add_smi:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_unregister_smi\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_unregister_smi\09\09\09\09"
module asm "\09.long\09__crc_ipmi_unregister_smi\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_unregister_smi:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_unregister_smi\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_unregister_smi:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_smi_msg_received\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_smi_msg_received\09\09\09\09"
module asm "\09.long\09__crc_ipmi_smi_msg_received\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_smi_msg_received:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_smi_msg_received\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_smi_msg_received:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_smi_watchdog_pretimeout\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_smi_watchdog_pretimeout\09\09\09\09"
module asm "\09.long\09__crc_ipmi_smi_watchdog_pretimeout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_smi_watchdog_pretimeout:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_smi_watchdog_pretimeout\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_smi_watchdog_pretimeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_alloc_smi_msg\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_alloc_smi_msg\09\09\09\09"
module asm "\09.long\09__crc_ipmi_alloc_smi_msg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_alloc_smi_msg:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_alloc_smi_msg\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_alloc_smi_msg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ipmi_free_recv_msg\22, \22a\22\09"
module asm "\09.weak\09__crc_ipmi_free_recv_msg\09\09\09\09"
module asm "\09.long\09__crc_ipmi_free_recv_msg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipmi_free_recv_msg:\09\09\09\09\09"
module asm "\09.asciz \09\22ipmi_free_recv_msg\22\09\09\09\09\09"
module asm "__kstrtabns_ipmi_free_recv_msg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.62 }
%union.anon.62 = type { ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.srcu_struct = type { [3 x %struct.srcu_node], [3 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.atomic_notifier_head = type { %struct.spinlock, ptr }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.platform_driver = type { ptr, ptr, ptr, ptr, ptr, %struct.device_driver, ptr, i8 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.module_version_attribute = type { %struct.module_attribute, ptr, ptr }
%struct.module_attribute = type { %struct.attribute, ptr, ptr, ptr, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.device_type = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.bus_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lock_class_key, i8 }
%struct.ipmi_smi_watcher = type { %struct.list_head, ptr, ptr, ptr }
%struct.ipmi_addr = type { i32, i16, [32 x i8] }
%struct.ipmi_ipmb_direct_addr = type { i32, i16, i8, i8, i8 }
%struct.ipmi_user = type { %struct.list_head, ptr, %struct.srcu_struct, %struct.kref, ptr, ptr, ptr, i8, %struct.work_struct }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.ipmi_user_hndl = type { ptr, ptr, ptr, ptr }
%struct.ipmi_smi = type { ptr, i32, %struct.kref, i8, %struct.list_head, %struct.list_head, %struct.srcu_struct, %struct.wait_queue_head, %struct.mutex, %struct.bmc_device, ptr, i8, %struct.list_head, ptr, i8, %struct.work_struct, ptr, ptr, ptr, %struct.spinlock, [64 x %struct.seq_table], i32, %struct.spinlock, %struct.list_head, %struct.atomic_t, %struct.tasklet_struct, %struct.spinlock, %struct.list_head, ptr, %struct.list_head, %struct.mutex, %struct.list_head, %struct.spinlock, %struct.list_head, i32, i8, i8, %struct.atomic_t, i32, %struct.spinlock, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i32, %struct.spinlock, i32, ptr, i32, ptr, i32, [2 x %struct.ipmi_channel_set], [16 x %struct.ipmi_my_addrinfo], i8, [28 x %struct.atomic_t], i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bmc_device = type { %struct.platform_device, %struct.list_head, %struct.ipmi_device_id, %struct.ipmi_device_id, i32, i32, %struct.mutex, %struct.guid_t, %struct.guid_t, i32, %struct.kref, %struct.work_struct, i8 }
%struct.platform_device = type { ptr, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, ptr, ptr, ptr, ptr, %struct.pdev_archdata }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.pdev_archdata = type { ptr }
%struct.ipmi_device_id = type { i8, i8, i8, i8, i8, i8, i32, i32, [4 x i8], i8 }
%struct.guid_t = type { [16 x i8] }
%struct.seq_table = type { i8, i32, i32, i32, i32, ptr }
%struct.tasklet_struct = type { ptr, i32, %struct.atomic_t, i8, %union.anon.68, i32 }
%union.anon.68 = type { ptr }
%struct.ipmi_channel_set = type { [16 x %struct.ipmi_channel] }
%struct.ipmi_channel = type { i8, i8 }
%struct.ipmi_my_addrinfo = type { i8, i8 }
%struct.ipmi_smi_handlers = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ipmi_recv_msg = type { %struct.list_head, i32, ptr, %struct.ipmi_addr, i32, %struct.kernel_ipmi_msg, ptr, ptr, [272 x i8] }
%struct.kernel_ipmi_msg = type { i8, i8, i16, ptr }
%struct.cmd_rcvr = type { %struct.list_head, ptr, i8, i8, i32, ptr }
%struct.ipmi_smi_msg = type { %struct.list_head, i32, i32, ptr, i32, [272 x i8], i32, [272 x i8], ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.ipmi_system_interface_addr = type { i32, i16, i8 }
%struct.ipmi_ipmb_addr = type { i32, i16, i8, i8 }
%struct.prod_dev_id = type { i32, i8 }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.ipmi_lan_addr = type { i32, i16, i8, i8, i8, i8, i8 }

@__param_str_panic_op = internal constant [25 x i8] c"ipmi_msghandler.panic_op\00", align 1
@panic_op_ops = internal constant { %struct.kernel_param_ops, [16 x i8] } { %struct.kernel_param_ops { i32 0, ptr @panic_op_write_handler, ptr @panic_op_read_handler, ptr null }, [16 x i8] zeroinitializer }, align 32
@__param_panic_op = internal constant %struct.kernel_param { ptr @__param_str_panic_op, ptr null, ptr @panic_op_ops, i16 384, i8 -1, i8 0, %union.anon.62 zeroinitializer }, section "__param", align 4
@__UNIQUE_ID_panic_op227 = internal constant [260 x i8] c"ipmi_msghandler.parm=panic_op:Sets if the IPMI driver will attempt to store panic information in the event log in the event of a panic.  Set to 'none' for no, 'event' for a single event, or 'string' for a generic event and the panic string in IPMI OEM events.\00", section ".modinfo", align 1
@__param_str_maintenance_mode_timeout_ms = internal constant [44 x i8] c"ipmi_msghandler.maintenance_mode_timeout_ms\00", align 1
@param_ops_ulong = external dso_local constant %struct.kernel_param_ops, align 4
@maintenance_mode_timeout_ms = internal global { i32, [28 x i8] } { i32 30000, [28 x i8] zeroinitializer }, align 32
@__param_maintenance_mode_timeout_ms = internal constant %struct.kernel_param { ptr @__param_str_maintenance_mode_timeout_ms, ptr null, ptr @param_ops_ulong, i16 420, i8 -1, i8 0, %union.anon.62 { ptr @maintenance_mode_timeout_ms } }, section "__param", align 4
@__UNIQUE_ID_maintenance_mode_timeout_mstype228 = internal constant [59 x i8] c"ipmi_msghandler.parmtype=maintenance_mode_timeout_ms:ulong\00", section ".modinfo", align 1
@__UNIQUE_ID_maintenance_mode_timeout_ms229 = internal constant [155 x i8] c"ipmi_msghandler.parm=maintenance_mode_timeout_ms:The time (milliseconds) after the last maintenance message that the connection stays in maintenance mode.\00", section ".modinfo", align 1
@__param_str_default_retry_ms = internal constant [33 x i8] c"ipmi_msghandler.default_retry_ms\00", align 1
@default_retry_ms = internal global { i32, [28 x i8] } { i32 2000, [28 x i8] zeroinitializer }, align 32
@__param_default_retry_ms = internal constant %struct.kernel_param { ptr @__param_str_default_retry_ms, ptr null, ptr @param_ops_ulong, i16 420, i8 -1, i8 0, %union.anon.62 { ptr @default_retry_ms } }, section "__param", align 4
@__UNIQUE_ID_default_retry_mstype230 = internal constant [48 x i8] c"ipmi_msghandler.parmtype=default_retry_ms:ulong\00", section ".modinfo", align 1
@__UNIQUE_ID_default_retry_ms231 = internal constant [82 x i8] c"ipmi_msghandler.parm=default_retry_ms:The time (milliseconds) between retry sends\00", section ".modinfo", align 1
@__param_str_default_maintenance_retry_ms = internal constant [45 x i8] c"ipmi_msghandler.default_maintenance_retry_ms\00", align 1
@default_maintenance_retry_ms = internal global { i32, [28 x i8] } { i32 3000, [28 x i8] zeroinitializer }, align 32
@__param_default_maintenance_retry_ms = internal constant %struct.kernel_param { ptr @__param_str_default_maintenance_retry_ms, ptr null, ptr @param_ops_ulong, i16 420, i8 -1, i8 0, %union.anon.62 { ptr @default_maintenance_retry_ms } }, section "__param", align 4
@__UNIQUE_ID_default_maintenance_retry_mstype232 = internal constant [60 x i8] c"ipmi_msghandler.parmtype=default_maintenance_retry_ms:ulong\00", section ".modinfo", align 1
@__UNIQUE_ID_default_maintenance_retry_ms233 = internal constant [114 x i8] c"ipmi_msghandler.parm=default_maintenance_retry_ms:The time (milliseconds) between retry sends in maintenance mode\00", section ".modinfo", align 1
@__param_str_default_max_retries = internal constant [36 x i8] c"ipmi_msghandler.default_max_retries\00", align 1
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 4
@default_max_retries = internal global { i32, [28 x i8] } { i32 4, [28 x i8] zeroinitializer }, align 32
@__param_default_max_retries = internal constant %struct.kernel_param { ptr @__param_str_default_max_retries, ptr null, ptr @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.62 { ptr @default_max_retries } }, section "__param", align 4
@__UNIQUE_ID_default_max_retriestype234 = internal constant [50 x i8] c"ipmi_msghandler.parmtype=default_max_retries:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_default_max_retries235 = internal constant [105 x i8] c"ipmi_msghandler.parm=default_max_retries:The time (milliseconds) between retry sends in maintenance mode\00", section ".modinfo", align 1
@addr_src_to_str = internal constant { [9 x ptr], [60 x i8] } { [9 x ptr] [ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55], [60 x i8] zeroinitializer }, align 32
@__kstrtab_ipmi_addr_src_to_str = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_addr_src_to_str = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_addr_src_to_str = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_addr_src_to_str to i32), ptr @__kstrtab_ipmi_addr_src_to_str, ptr @__kstrtabns_ipmi_addr_src_to_str }, section "___ksymtab+ipmi_addr_src_to_str", align 4
@smi_watchers_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.56, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @smi_watchers_mutex, i64 52), ptr getelementptr (i8, ptr @smi_watchers_mutex, i64 52) }, ptr @smi_watchers_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.57, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@smi_watchers = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @smi_watchers, ptr @smi_watchers }, [24 x i8] zeroinitializer }, align 32
@ipmi_interfaces_srcu = internal global { %struct.srcu_struct, [200 x i8] } zeroinitializer, align 32
@ipmi_smi_watcher_register.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"drivers/char/ipmi/ipmi_msghandler.c\00", [60 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@ipmi_interfaces = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @ipmi_interfaces, ptr @ipmi_interfaces }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_ipmi_smi_watcher_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_smi_watcher_register = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_smi_watcher_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_smi_watcher_register to i32), ptr @__kstrtab_ipmi_smi_watcher_register, ptr @__kstrtabns_ipmi_smi_watcher_register }, section "___ksymtab+ipmi_smi_watcher_register", align 4
@__kstrtab_ipmi_smi_watcher_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_smi_watcher_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_smi_watcher_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_smi_watcher_unregister to i32), ptr @__kstrtab_ipmi_smi_watcher_unregister, ptr @__kstrtabns_ipmi_smi_watcher_unregister }, section "___ksymtab+ipmi_smi_watcher_unregister", align 4
@__kstrtab_ipmi_validate_addr = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_validate_addr = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_validate_addr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_validate_addr to i32), ptr @__kstrtab_ipmi_validate_addr, ptr @__kstrtabns_ipmi_validate_addr }, section "___ksymtab+ipmi_validate_addr", align 4
@__kstrtab_ipmi_addr_length = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_addr_length = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_addr_length = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_addr_length to i32), ptr @__kstrtab_ipmi_addr_length, ptr @__kstrtabns_ipmi_addr_length }, section "___ksymtab+ipmi_addr_length", align 4
@ipmi_create_user.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@ipmi_create_user.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.2 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"(work_completion)(&new_user->remove_work)\00", [54 x i8] zeroinitializer }, align 32
@ipmi_create_user.__srcu_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.3 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"&new_user->release_barrier\00", [37 x i8] zeroinitializer }, align 32
@__kstrtab_ipmi_create_user = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_create_user = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_create_user = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_create_user to i32), ptr @__kstrtab_ipmi_create_user, ptr @__kstrtabns_ipmi_create_user }, section "___ksymtab+ipmi_create_user", align 4
@ipmi_get_smi_info.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_ipmi_get_smi_info = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_get_smi_info = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_get_smi_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_get_smi_info to i32), ptr @__kstrtab_ipmi_get_smi_info, ptr @__kstrtabns_ipmi_get_smi_info }, section "___ksymtab+ipmi_get_smi_info", align 4
@__kstrtab_ipmi_destroy_user = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_destroy_user = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_destroy_user = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_destroy_user to i32), ptr @__kstrtab_ipmi_destroy_user, ptr @__kstrtabns_ipmi_destroy_user }, section "___ksymtab+ipmi_destroy_user", align 4
@__kstrtab_ipmi_get_version = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_get_version = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_get_version = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_get_version to i32), ptr @__kstrtab_ipmi_get_version, ptr @__kstrtabns_ipmi_get_version }, section "___ksymtab+ipmi_get_version", align 4
@__kstrtab_ipmi_set_my_address = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_set_my_address = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_set_my_address = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_set_my_address to i32), ptr @__kstrtab_ipmi_set_my_address, ptr @__kstrtabns_ipmi_set_my_address }, section "___ksymtab+ipmi_set_my_address", align 4
@__kstrtab_ipmi_get_my_address = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_get_my_address = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_get_my_address = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_get_my_address to i32), ptr @__kstrtab_ipmi_get_my_address, ptr @__kstrtabns_ipmi_get_my_address }, section "___ksymtab+ipmi_get_my_address", align 4
@__kstrtab_ipmi_set_my_LUN = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_set_my_LUN = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_set_my_LUN = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_set_my_LUN to i32), ptr @__kstrtab_ipmi_set_my_LUN, ptr @__kstrtabns_ipmi_set_my_LUN }, section "___ksymtab+ipmi_set_my_LUN", align 4
@__kstrtab_ipmi_get_my_LUN = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_get_my_LUN = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_get_my_LUN = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_get_my_LUN to i32), ptr @__kstrtab_ipmi_get_my_LUN, ptr @__kstrtabns_ipmi_get_my_LUN }, section "___ksymtab+ipmi_get_my_LUN", align 4
@__kstrtab_ipmi_get_maintenance_mode = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_get_maintenance_mode = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_get_maintenance_mode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_get_maintenance_mode to i32), ptr @__kstrtab_ipmi_get_maintenance_mode, ptr @__kstrtabns_ipmi_get_maintenance_mode }, section "___ksymtab+ipmi_get_maintenance_mode", align 4
@__kstrtab_ipmi_set_maintenance_mode = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_set_maintenance_mode = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_set_maintenance_mode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_set_maintenance_mode to i32), ptr @__kstrtab_ipmi_set_maintenance_mode, ptr @__kstrtabns_ipmi_set_maintenance_mode }, section "___ksymtab+ipmi_set_maintenance_mode", align 4
@ipmi_set_gets_events._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.4, ptr @.str.5, ptr @.str, i32 1604, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%sEvent queue no longer full\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ipmi_set_gets_events\00", [43 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@ipmi_set_gets_events._entry_ptr = internal global ptr @ipmi_set_gets_events._entry, section ".printk_index", align 4
@.str.8 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IPMI message handler: \00", [41 x i8] zeroinitializer }, align 32
@__kstrtab_ipmi_set_gets_events = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_set_gets_events = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_set_gets_events = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_set_gets_events to i32), ptr @__kstrtab_ipmi_set_gets_events, ptr @__kstrtabns_ipmi_set_gets_events }, section "___ksymtab+ipmi_set_gets_events", align 4
@__kstrtab_ipmi_register_for_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_register_for_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_register_for_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_register_for_cmd to i32), ptr @__kstrtab_ipmi_register_for_cmd, ptr @__kstrtabns_ipmi_register_for_cmd }, section "___ksymtab+ipmi_register_for_cmd", align 4
@__kstrtab_ipmi_unregister_for_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_unregister_for_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_unregister_for_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_unregister_for_cmd to i32), ptr @__kstrtab_ipmi_unregister_for_cmd, ptr @__kstrtabns_ipmi_unregister_for_cmd }, section "___ksymtab+ipmi_unregister_for_cmd", align 4
@__kstrtab_ipmb_checksum = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmb_checksum = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmb_checksum = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmb_checksum to i32), ptr @__kstrtab_ipmb_checksum, ptr @__kstrtabns_ipmb_checksum }, section "___ksymtab+ipmb_checksum", align 4
@__kstrtab_ipmi_request_settime = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_request_settime = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_request_settime = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_request_settime to i32), ptr @__kstrtab_ipmi_request_settime, ptr @__kstrtabns_ipmi_request_settime }, section "___ksymtab+ipmi_request_settime", align 4
@__kstrtab_ipmi_request_supply_msgs = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_request_supply_msgs = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_request_supply_msgs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_request_supply_msgs to i32), ptr @__kstrtab_ipmi_request_supply_msgs, ptr @__kstrtabns_ipmi_request_supply_msgs }, section "___ksymtab+ipmi_request_supply_msgs", align 4
@__kstrtab_ipmi_poll_interface = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_poll_interface = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_poll_interface = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_poll_interface to i32), ptr @__kstrtab_ipmi_poll_interface, ptr @__kstrtabns_ipmi_poll_interface }, section "___ksymtab+ipmi_poll_interface", align 4
@ipmi_add_smi.__srcu_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.9 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&intf->users_srcu\00", [46 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.10 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&intf->bmc->dyn_mutex\00", [42 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.11 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.12 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&intf->bmc_reg_mutex\00", [43 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.13 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.14 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"(work_completion)(&intf->bmc_reg_work)\00", [57 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.15 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.16 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&intf->seq_lock\00", [16 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.17 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.18 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"&intf->waiting_rcv_msgs_lock\00", [35 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.19 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.20 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&intf->xmit_msgs_lock\00", [42 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.21 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.22 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&intf->events_lock\00", [45 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.23 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.24 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&intf->watch_lock\00", [46 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.25 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.26 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&intf->cmd_rcvrs_mutex\00", [41 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.27 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.28 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"&intf->maintenance_mode_lock\00", [35 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__key.29 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.30 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&intf->waitq\00", [19 x i8] zeroinitializer }, align 32
@ipmi_interfaces_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @ipmi_interfaces_mutex, i64 52), ptr getelementptr (i8, ptr @ipmi_interfaces_mutex, i64 52) }, ptr @ipmi_interfaces_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.82, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@ipmi_add_smi.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@ipmi_add_smi._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.31, ptr @.str.32, ptr @.str, i32 3585, ptr @.str.33, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%sUnable to get the device id: %d\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ipmi_add_smi\00", [19 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@ipmi_add_smi._entry_ptr = internal global ptr @ipmi_add_smi._entry, section ".printk_index", align 4
@__kstrtab_ipmi_add_smi = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_add_smi = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_add_smi = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_add_smi to i32), ptr @__kstrtab_ipmi_add_smi, ptr @__kstrtabns_ipmi_add_smi }, section "___ksymtab+ipmi_add_smi", align 4
@__kstrtab_ipmi_unregister_smi = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_unregister_smi = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_unregister_smi = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_unregister_smi to i32), ptr @__kstrtab_ipmi_unregister_smi, ptr @__kstrtabns_ipmi_unregister_smi }, section "___ksymtab+ipmi_unregister_smi", align 4
@__kstrtab_ipmi_smi_msg_received = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_smi_msg_received = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_smi_msg_received = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_smi_msg_received to i32), ptr @__kstrtab_ipmi_smi_msg_received, ptr @__kstrtabns_ipmi_smi_msg_received }, section "___ksymtab+ipmi_smi_msg_received", align 4
@__kstrtab_ipmi_smi_watchdog_pretimeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_smi_watchdog_pretimeout = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_smi_watchdog_pretimeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_smi_watchdog_pretimeout to i32), ptr @__kstrtab_ipmi_smi_watchdog_pretimeout, ptr @__kstrtabns_ipmi_smi_watchdog_pretimeout }, section "___ksymtab+ipmi_smi_watchdog_pretimeout", align 4
@smi_msg_inuse_count = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@__kstrtab_ipmi_alloc_smi_msg = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_alloc_smi_msg = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_alloc_smi_msg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_alloc_smi_msg to i32), ptr @__kstrtab_ipmi_alloc_smi_msg, ptr @__kstrtabns_ipmi_alloc_smi_msg }, section "___ksymtab+ipmi_alloc_smi_msg", align 4
@oops_in_progress = external dso_local local_unnamed_addr global i32, align 4
@__kstrtab_ipmi_free_recv_msg = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipmi_free_recv_msg = external dso_local constant [0 x i8], align 1
@__ksymtab_ipmi_free_recv_msg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipmi_free_recv_msg to i32), ptr @__kstrtab_ipmi_free_recv_msg, ptr @__kstrtabns_ipmi_free_recv_msg }, section "___ksymtab+ipmi_free_recv_msg", align 4
@initialized = internal global { i1, [31 x i8] } zeroinitializer, align 32
@remove_work_wq = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@panic_notifier_list = external dso_local global %struct.atomic_notifier_head, align 4
@panic_block = internal global { %struct.notifier_block, [20 x i8] } { %struct.notifier_block { ptr @panic_event, ptr null, i32 200 }, [20 x i8] zeroinitializer }, align 32
@stop_operation = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@ipmi_timer = internal global { %struct.timer_list, [48 x i8] } zeroinitializer, align 32
@cleanup_ipmi._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.35, ptr @.str, i32 5462, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\014%sSMI message count %d at exit\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"cleanup_ipmi\00", [19 x i8] zeroinitializer }, align 32
@cleanup_ipmi._entry_ptr = internal global ptr @cleanup_ipmi._entry, section ".printk_index", align 4
@recv_msg_inuse_count = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@cleanup_ipmi._entry.36 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.37, ptr @.str.35, ptr @.str, i32 5465, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\014%srecv message count %d at exit\0A\00", [61 x i8] zeroinitializer }, align 32
@cleanup_ipmi._entry_ptr.38 = internal global ptr @cleanup_ipmi._entry.36, section ".printk_index", align 4
@drvregistered = internal global { i1, [31 x i8] } zeroinitializer, align 32
@ipmidriver = internal global { %struct.platform_driver, [56 x i8] } { %struct.platform_driver { ptr null, ptr null, ptr null, ptr null, ptr null, %struct.device_driver { ptr @.str.156, ptr @platform_bus_type, ptr null, ptr null, i8 0, i32 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, ptr null, i8 0 }, [56 x i8] zeroinitializer }, align 32
@__exitcall_cleanup_ipmi = internal global ptr @cleanup_ipmi, section ".exitcall.exit", align 4
@__initcall__kmod_ipmi_msghandler__287_5474_ipmi_init_msghandler_mod6 = internal global ptr @ipmi_init_msghandler_mod, section ".initcall6.init", align 4
@__UNIQUE_ID_file288 = internal constant [55 x i8] c"ipmi_msghandler.file=drivers/char/ipmi/ipmi_msghandler\00", section ".modinfo", align 1
@__UNIQUE_ID_license289 = internal constant [28 x i8] c"ipmi_msghandler.license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_author290 = internal constant [58 x i8] c"ipmi_msghandler.author=Corey Minyard <minyard@mvista.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_description291 = internal constant [89 x i8] c"ipmi_msghandler.description=Incoming and outgoing message routing for an IPMI interface.\00", section ".modinfo", align 1
@__UNIQUE_ID_version292 = internal constant [29 x i8] c"ipmi_msghandler.version=39.2\00", section ".modinfo", align 1
@.str.39 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"version\00", [24 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"ipmi_msghandler\00", [16 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"39.2\00", [27 x i8] zeroinitializer }, align 32
@__modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { ptr @.str.39, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @__modver_version_show, ptr null, ptr null, ptr null, ptr null }, ptr @.str.40, ptr @.str.41 }, section "__modver", align 4
@__UNIQUE_ID_softdep293 = internal constant [43 x i8] c"ipmi_msghandler.softdep=post: ipmi_devintf\00", section ".modinfo", align 1
@ipmi_panic_event_str = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr null], [16 x i8] zeroinitializer }, align 32
@ipmi_send_panic_event = internal global { i32, [28 x i8] } { i32 2, [28 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"event\00", [26 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"string\00", [25 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"???\00", [28 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"invalid\00", [24 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"hotmod\00", [25 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"hardcoded\00", [22 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"SPMI\00", [27 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"ACPI\00", [27 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SMBIOS\00", [25 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PCI\00", [28 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"device-tree\00", [20 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"platform\00", [23 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"smi_watchers_mutex.wait_lock\00", [35 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"smi_watchers_mutex\00", [45 x i8] zeroinitializer }, align 32
@srcu_read_unlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.58 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"include/linux/srcu.h\00", [43 x i8] zeroinitializer }, align 32
@_ipmi_destroy_user.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@acquire_ipmi_user.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.59 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@is_cmd_rcvr_exclusive.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@find_cmd_rcvr.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@i_ipmi_request.__UNIQUE_ID_ddebug267 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.40, ptr @.str.60, ptr @.str, ptr @.str.61, i8 2, i8 75, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.60 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"i_ipmi_request\00", [17 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Send: %*ph\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"%sSend: %*ph\0A\00", [18 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.63 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.65 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@handle_new_recv_msgs.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@handle_one_recv_msg.__UNIQUE_ID_ddebug275 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.40, ptr @.str.66, ptr @.str, ptr @.str.67, i8 4, i8 87, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.66 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"handle_one_recv_msg\00", [44 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Recv: %*ph\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"%sRecv: %*ph\0A\00", [18 x i8] zeroinitializer }, align 32
@handle_one_recv_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.69, ptr @.str.66, ptr @.str, i32 4453, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"%sBMC returned too small a message for netfn %x cmd %x, got %d bytes\0A\00", [58 x i8] zeroinitializer }, align 32
@handle_one_recv_msg._entry_ptr = internal global ptr @handle_one_recv_msg._entry, section ".printk_index", align 4
@handle_one_recv_msg._entry.70 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.71, ptr @.str.66, ptr @.str, i32 4530, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"%sBMC returned incorrect response, expected netfn %x cmd %x, got netfn %x cmd %x\0A\00", [46 x i8] zeroinitializer }, align 32
@handle_one_recv_msg._entry_ptr.72 = internal global ptr @handle_one_recv_msg._entry.70, section ".printk_index", align 4
@handle_ipmb_direct_rcv_rsp._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.74, ptr @.str, i32 3995, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [164 x i8], [60 x i8] } { [164 x i8] c"%sIPMI message received with no owner. This could be because of a malformed message, or because of a hardware error.  Contact your hardware vendor for assistance.\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"handle_ipmb_direct_rcv_rsp\00", [37 x i8] zeroinitializer }, align 32
@handle_ipmb_direct_rcv_rsp._entry_ptr = internal global ptr @handle_ipmb_direct_rcv_rsp._entry, section ".printk_index", align 4
@handle_ipmb_get_msg_cmd.__UNIQUE_ID_ddebug272 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.40, ptr @.str.75, ptr @.str, ptr @.str.76, i8 3, i8 -65, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.75 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"handle_ipmb_get_msg_cmd\00", [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Invalid command: %*ph\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%sInvalid command: %*ph\0A\00", [39 x i8] zeroinitializer }, align 32
@handle_read_event_rsp.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@handle_read_event_rsp._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.79, ptr @.str, i32 4394, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"%sEvent queue full, discarding incoming events\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"handle_read_event_rsp\00", [42 x i8] zeroinitializer }, align 32
@handle_read_event_rsp._entry_ptr = internal global ptr @handle_read_event_rsp._entry, section ".printk_index", align 4
@handle_bmc_rsp._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.80, ptr @.str, i32 4413, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"handle_bmc_rsp\00", [17 x i8] zeroinitializer }, align 32
@handle_bmc_rsp._entry_ptr = internal global ptr @handle_bmc_rsp._entry, section ".printk_index", align 4
@.str.81 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"ipmi_interfaces_mutex.wait_lock\00", [32 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"ipmi_interfaces_mutex\00", [42 x i8] zeroinitializer }, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@guid_handler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.83, ptr @.str.84, ptr @.str, i32 3278, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [117 x i8], [43 x i8] } { [117 x i8] c"%sThe GUID response from the BMC was too short, it was %d but should have been %d.  Assuming GUID is not available.\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"guid_handler\00", [19 x i8] zeroinitializer }, align 32
@guid_handler._entry_ptr = internal global ptr @guid_handler._entry, section ".printk_index", align 4
@__get_device_id._entry = internal constant %struct.pi_entry { ptr @.str.85, ptr @.str.86, ptr @.str, i32 2544, ptr @.str.6, ptr @.str.7 }, align 1
@.str.85 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"%sBMC returned 0x%2.2x, retry get bmc device id\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"__get_device_id\00", [16 x i8] zeroinitializer }, align 32
@__get_device_id._entry_ptr = internal global ptr @__get_device_id._entry, section ".printk_index", align 4
@bmc_device_id_handler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.88, ptr @.str, i32 2462, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"%sinvalid device_id msg: addr_type=%d netfn=%x cmd=%x\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"bmc_device_id_handler\00", [42 x i8] zeroinitializer }, align 32
@bmc_device_id_handler._entry_ptr = internal global ptr @bmc_device_id_handler._entry, section ".printk_index", align 4
@bmc_device_id_handler._entry.89 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.88, ptr @.str, i32 2468, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%sdevice id fetch failed: 0x%2.2x\0A\00", [61 x i8] zeroinitializer }, align 32
@bmc_device_id_handler._entry_ptr.91 = internal global ptr @bmc_device_id_handler._entry.89, section ".printk_index", align 4
@bmc_device_id_handler._entry.92 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.93, ptr @.str.88, ptr @.str, i32 2476, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%sdevice id demangle failed: %d\0A\00", [63 x i8] zeroinitializer }, align 32
@bmc_device_id_handler._entry_ptr.94 = internal global ptr @bmc_device_id_handler._entry.92, section ".printk_index", align 4
@.str.95 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"bmc\00", [28 x i8] zeroinitializer }, align 32
@ipmidriver_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.119, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @ipmidriver_mutex, i64 52), ptr getelementptr (i8, ptr @ipmidriver_mutex, i64 52) }, ptr @ipmidriver_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.120, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register._entry = internal constant %struct.pi_entry { ptr @.str.96, ptr @.str.97, ptr @.str, i32 3118, ptr @.str.98, ptr @.str.7 }, align 1
@.str.96 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"%sinterfacing existing BMC (man_id: 0x%6.6x, prod_id: 0x%4.4x, dev_id: 0x%2.2x)\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__ipmi_bmc_register\00", [44 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register._entry_ptr = internal global ptr @__ipmi_bmc_register._entry, section ".printk_index", align 4
@__ipmi_bmc_register.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.99 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&bmc->dyn_mutex\00", [16 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register.__key.100 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.101 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"(work_completion)(&bmc->remove_work)\00", [59 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ipmi_bmc\00", [23 x i8] zeroinitializer }, align 32
@ipmi_bmc_ida = internal global { %struct.ida, [44 x i8] } { %struct.ida { %struct.xarray { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.121, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108869, ptr null } }, [44 x i8] zeroinitializer }, align 32
@bmc_device_type = internal constant { %struct.device_type, [40 x i8] } { %struct.device_type { ptr null, ptr @bmc_dev_attr_groups, ptr null, ptr null, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register._entry.103 = internal constant %struct.pi_entry { ptr @.str.104, ptr @.str.97, ptr @.str, i32 3158, ptr @.str.33, ptr @.str.7 }, align 1
@.str.104 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"%sUnable to register bmc device: %d\0A\00", [59 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register._entry_ptr.105 = internal global ptr @__ipmi_bmc_register._entry.103, section ".printk_index", align 4
@__ipmi_bmc_register._entry.106 = internal constant %struct.pi_entry { ptr @.str.107, ptr @.str.97, ptr @.str, i32 3166, ptr @.str.98, ptr @.str.7 }, align 1
@.str.107 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"%sFound new BMC (man_id: 0x%6.6x, prod_id: 0x%4.4x, dev_id: 0x%2.2x)\0A\00", [58 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register._entry_ptr.108 = internal global ptr @__ipmi_bmc_register._entry.106, section ".printk_index", align 4
@__ipmi_bmc_register._entry.109 = internal constant %struct.pi_entry { ptr @.str.110, ptr @.str.97, ptr @.str, i32 3175, ptr @.str.33, ptr @.str.7 }, align 1
@.str.110 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%sUnable to create bmc symlink: %d\0A\00", [60 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register._entry_ptr.111 = internal global ptr @__ipmi_bmc_register._entry.109, section ".printk_index", align 4
@.str.112 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ipmi%d\00", [25 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register._entry.113 = internal constant %struct.pi_entry { ptr @.str.114, ptr @.str.97, ptr @.str, i32 3185, ptr @.str.33, ptr @.str.7 }, align 1
@.str.114 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%sUnable to allocate link from BMC: %d\0A\00", [56 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register._entry_ptr.115 = internal global ptr @__ipmi_bmc_register._entry.113, section ".printk_index", align 4
@__ipmi_bmc_register._entry.116 = internal constant %struct.pi_entry { ptr @.str.117, ptr @.str.97, ptr @.str, i32 3193, ptr @.str.33, ptr @.str.7 }, align 1
@.str.117 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%sUnable to create symlink to bmc: %d\0A\00", [57 x i8] zeroinitializer }, align 32
@__ipmi_bmc_register._entry_ptr.118 = internal global ptr @__ipmi_bmc_register._entry.116, section ".printk_index", align 4
@.str.119 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"ipmidriver_mutex.wait_lock\00", [37 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"ipmidriver_mutex\00", [47 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ipmi_bmc_ida.xa_lock\00", [43 x i8] zeroinitializer }, align 32
@bmc_dev_attr_groups = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @bmc_dev_attr_group, ptr null], [24 x i8] zeroinitializer }, align 32
@bmc_dev_attr_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr @bmc_dev_attr_is_visible, ptr null, ptr @bmc_dev_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@bmc_dev_attrs = internal global { [11 x ptr], [52 x i8] } { [11 x ptr] [ptr @dev_attr_device_id, ptr @dev_attr_provides_device_sdrs, ptr @dev_attr_revision, ptr @dev_attr_firmware_revision, ptr @dev_attr_ipmi_version, ptr @dev_attr_additional_device_support, ptr @dev_attr_manufacturer_id, ptr @dev_attr_product_id, ptr @dev_attr_aux_firmware_revision, ptr @dev_attr_guid, ptr null], [52 x i8] zeroinitializer }, align 32
@dev_attr_aux_firmware_revision = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.122, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @aux_firmware_rev_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_guid = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.124, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @guid_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"aux_firmware_revision\00", [42 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"0x%02x 0x%02x 0x%02x 0x%02x\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"guid\00", [27 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%pUl\0A\00", [26 x i8] zeroinitializer }, align 32
@dev_attr_device_id = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.126, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @device_id_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_provides_device_sdrs = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.128, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @provides_device_sdrs_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_revision = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.129, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @revision_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_firmware_revision = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.130, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @firmware_revision_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_ipmi_version = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.132, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @ipmi_version_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_additional_device_support = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.134, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @add_dev_support_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_manufacturer_id = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.136, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @manufacturer_id_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_product_id = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.138, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @product_id_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"device_id\00", [22 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%u\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"provides_device_sdrs\00", [43 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"revision\00", [23 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"firmware_revision\00", [46 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%u.%x\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ipmi_version\00", [19 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%u.%u\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"additional_device_support\00", [38 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"0x%02x\0A\00", [24 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"manufacturer_id\00", [16 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"0x%6.6x\0A\00", [23 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"product_id\00", [21 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"0x%4.4x\0A\00", [23 x i8] zeroinitializer }, align 32
@__scan_channels._entry = internal constant %struct.pi_entry { ptr @.str.140, ptr @.str.141, ptr @.str, i32 3439, ptr @.str.6, ptr @.str.7 }, align 1
@.str.140 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"%sError sending channel information for channel 0, %d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"__scan_channels\00", [16 x i8] zeroinitializer }, align 32
@__scan_channels._entry_ptr = internal global ptr @__scan_channels._entry, section ".printk_index", align 4
@channel_handler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.142, ptr @.str.143, ptr @.str, i32 3401, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"%sError sending channel information for channel %d: %d\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"channel_handler\00", [16 x i8] zeroinitializer }, align 32
@channel_handler._entry_ptr = internal global ptr @channel_handler._entry, section ".printk_index", align 4
@ipmi_init_msghandler.__srcu_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.144 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&ipmi_interfaces_srcu\00", [42 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"ipmi-msghandler-remove-wq\00", [38 x i8] zeroinitializer }, align 32
@ipmi_init_msghandler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.148, ptr @.str, i32 5401, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013%sunable to create ipmi-msghandler-remove-wq workqueue\00", [39 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ipmi_init_msghandler\00", [43 x i8] zeroinitializer }, align 32
@ipmi_init_msghandler._entry_ptr = internal global ptr @ipmi_init_msghandler._entry, section ".printk_index", align 4
@ipmi_init_msghandler.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.149 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"(&ipmi_timer)\00", [18 x i8] zeroinitializer }, align 32
@ipmi_register_driver._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.151, ptr @.str, i32 5372, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013%sCould not register IPMI driver\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ipmi_register_driver\00", [43 x i8] zeroinitializer }, align 32
@ipmi_register_driver._entry_ptr = internal global ptr @ipmi_register_driver._entry, section ".printk_index", align 4
@ipmi_timeout.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@smi_from_recv_msg.__UNIQUE_ID_ddebug280 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.40, ptr @.str.152, ptr @.str, ptr @.str.153, i8 4, i8 -73, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.152 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"smi_from_recv_msg\00", [46 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Resend: %*ph\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"%sResend: %*ph\0A\00", [16 x i8] zeroinitializer }, align 32
@has_panicked = internal global { i1, [31 x i8] } zeroinitializer, align 32
@panic_event.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@panic_event.__warned.155 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@panic_done_count = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@.str.156 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"ipmi\00", [27 x i8] zeroinitializer }, align 32
@platform_bus_type = external dso_local global %struct.bus_type, align 4
@ipmi_init_msghandler_mod._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.157, ptr @.str.158, ptr @.str, i32 5425, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\016%sversion 39.2\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"ipmi_init_msghandler_mod\00", [39 x i8] zeroinitializer }, align 32
@ipmi_init_msghandler_mod._entry_ptr = internal global ptr @ipmi_init_msghandler_mod._entry, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [6 x i64] [i64 4, i64 32, i64 1, i64 4, i64 65, i64 129]
@__sancov_gen_cov_switch_values.159 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 4, i64 12, i64 65, i64 129]
@__sancov_gen_cov_switch_values.160 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.161 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 4, i64 12, i64 65, i64 129]
@__sancov_gen_cov_switch_values.162 = internal global [4 x i64] [i64 2, i64 8, i64 6, i64 8]
@__sancov_gen_cov_switch_values.163 = internal global [4 x i64] [i64 2, i64 8, i64 6, i64 8]
@__sancov_gen_cov_switch_values.164 = internal global [7 x i64] [i64 5, i64 8, i64 0, i64 129, i64 130, i64 131, i64 192]
@__sancov_gen_cov_switch_values.165 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 4, i64 5]
@__sancov_gen_cov_switch_values.166 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 4, i64 12, i64 65, i64 129]
@__sancov_gen_cov_switch_values.167 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 193]
@___asan_gen_.168 = private unnamed_addr constant [13 x i8] c"panic_op_ops\00", align 1
@___asan_gen_.170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 101, i32 38 }
@___asan_gen_.171 = private unnamed_addr constant [28 x i8] c"maintenance_mode_timeout_ms\00", align 1
@___asan_gen_.173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 112, i32 22 }
@___asan_gen_.174 = private unnamed_addr constant [17 x i8] c"default_retry_ms\00", align 1
@___asan_gen_.176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 131, i32 22 }
@___asan_gen_.177 = private unnamed_addr constant [29 x i8] c"default_maintenance_retry_ms\00", align 1
@___asan_gen_.179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 137, i32 22 }
@___asan_gen_.180 = private unnamed_addr constant [20 x i8] c"default_max_retries\00", align 1
@___asan_gen_.182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 143, i32 21 }
@___asan_gen_.183 = private unnamed_addr constant [16 x i8] c"addr_src_to_str\00", align 1
@___asan_gen_.185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 630, i32 27 }
@___asan_gen_.186 = private unnamed_addr constant [19 x i8] c"smi_watchers_mutex\00", align 1
@___asan_gen_.189 = private unnamed_addr constant [13 x i8] c"smi_watchers\00", align 1
@___asan_gen_.191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 622, i32 8 }
@___asan_gen_.192 = private unnamed_addr constant [21 x i8] c"ipmi_interfaces_srcu\00", align 1
@___asan_gen_.194 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 617, i32 27 }
@___asan_gen_.200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 745, i32 2 }
@___asan_gen_.201 = private unnamed_addr constant [16 x i8] c"ipmi_interfaces\00", align 1
@___asan_gen_.203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 613, i32 8 }
@___asan_gen_.209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 1233, i32 2 }
@___asan_gen_.215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 1235, i32 7 }
@___asan_gen_.233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 1604, i32 4 }
@___asan_gen_.239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3509, i32 7 }
@___asan_gen_.245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3518, i32 2 }
@___asan_gen_.251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3520, i32 2 }
@___asan_gen_.257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3523, i32 2 }
@___asan_gen_.263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3534, i32 2 }
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3540, i32 2 }
@___asan_gen_.275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3545, i32 2 }
@___asan_gen_.281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3548, i32 2 }
@___asan_gen_.287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3549, i32 2 }
@___asan_gen_.293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3554, i32 2 }
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3555, i32 2 }
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3557, i32 2 }
@___asan_gen_.306 = private unnamed_addr constant [22 x i8] c"ipmi_interfaces_mutex\00", align 1
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3585, i32 3 }
@___asan_gen_.321 = private unnamed_addr constant [20 x i8] c"smi_msg_inuse_count\00", align 1
@___asan_gen_.323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5031, i32 17 }
@___asan_gen_.324 = private unnamed_addr constant [12 x i8] c"initialized\00", align 1
@___asan_gen_.325 = private unnamed_addr constant [15 x i8] c"remove_work_wq\00", align 1
@___asan_gen_.327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 194, i32 33 }
@___asan_gen_.328 = private unnamed_addr constant [12 x i8] c"panic_block\00", align 1
@___asan_gen_.330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5378, i32 30 }
@___asan_gen_.331 = private unnamed_addr constant [15 x i8] c"stop_operation\00", align 1
@___asan_gen_.333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 4994, i32 17 }
@___asan_gen_.334 = private unnamed_addr constant [11 x i8] c"ipmi_timer\00", align 1
@___asan_gen_.336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 4992, i32 26 }
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5462, i32 4 }
@___asan_gen_.346 = private unnamed_addr constant [21 x i8] c"recv_msg_inuse_count\00", align 1
@___asan_gen_.348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5032, i32 17 }
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5465, i32 4 }
@___asan_gen_.355 = private unnamed_addr constant [14 x i8] c"drvregistered\00", align 1
@___asan_gen_.356 = private unnamed_addr constant [11 x i8] c"ipmidriver\00", align 1
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 602, i32 31 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5478, i32 1 }
@___asan_gen_.368 = private unnamed_addr constant [21 x i8] c"ipmi_panic_event_str\00", align 1
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 62, i32 26 }
@___asan_gen_.371 = private unnamed_addr constant [22 x i8] c"ipmi_send_panic_event\00", align 1
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 72, i32 33 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 62, i32 53 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 62, i32 61 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 62, i32 70 }
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 94, i32 15 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 98, i32 25 }
@___asan_gen_.391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 631, i32 2 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 631, i32 13 }
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 631, i32 23 }
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 631, i32 36 }
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 631, i32 44 }
@___asan_gen_.406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 631, i32 52 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 631, i32 62 }
@___asan_gen_.412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 632, i32 2 }
@___asan_gen_.415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 632, i32 17 }
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 623, i32 8 }
@___asan_gen_.423 = private unnamed_addr constant [24 x i8] c"../include/linux/srcu.h\00", align 1
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.423, i32 189, i32 2 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 202, i32 10 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2351, i32 3 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.444, i32 695, i32 2 }
@___asan_gen_.444 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.444, i32 723, i32 2 }
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 4447, i32 2 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 4451, i32 3 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 4527, i32 3 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3994, i32 3 }
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3839, i32 3 }
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 4393, i32 3 }
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 4412, i32 3 }
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 614, i32 8 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3276, i32 3 }
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2542, i32 4 }
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2460, i32 3 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2467, i32 3 }
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2476, i32 3 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3047, i32 41 }
@___asan_gen_.545 = private unnamed_addr constant [17 x i8] c"ipmidriver_mutex\00", align 1
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3114, i32 3 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3126, i32 3 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3127, i32 3 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3135, i32 20 }
@___asan_gen_.566 = private unnamed_addr constant [13 x i8] c"ipmi_bmc_ida\00", align 1
@___asan_gen_.569 = private unnamed_addr constant [16 x i8] c"bmc_device_type\00", align 1
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2925, i32 33 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3156, i32 4 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3162, i32 3 }
@___asan_gen_.580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3175, i32 3 }
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3181, i32 44 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3184, i32 3 }
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3192, i32 3 }
@___asan_gen_.595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 611, i32 8 }
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3006, i32 8 }
@___asan_gen_.599 = private unnamed_addr constant [20 x i8] c"bmc_dev_attr_groups\00", align 1
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2920, i32 38 }
@___asan_gen_.602 = private unnamed_addr constant [19 x i8] c"bmc_dev_attr_group\00", align 1
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2915, i32 37 }
@___asan_gen_.605 = private unnamed_addr constant [14 x i8] c"bmc_dev_attrs\00", align 1
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2878, i32 26 }
@___asan_gen_.608 = private unnamed_addr constant [31 x i8] c"dev_attr_aux_firmware_revision\00", align 1
@___asan_gen_.611 = private unnamed_addr constant [14 x i8] c"dev_attr_guid\00", align 1
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2858, i32 8 }
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2852, i32 25 }
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2876, i32 8 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2874, i32 25 }
@___asan_gen_.626 = private unnamed_addr constant [19 x i8] c"dev_attr_device_id\00", align 1
@___asan_gen_.629 = private unnamed_addr constant [30 x i8] c"dev_attr_provides_device_sdrs\00", align 1
@___asan_gen_.632 = private unnamed_addr constant [18 x i8] c"dev_attr_revision\00", align 1
@___asan_gen_.635 = private unnamed_addr constant [27 x i8] c"dev_attr_firmware_revision\00", align 1
@___asan_gen_.638 = private unnamed_addr constant [22 x i8] c"dev_attr_ipmi_version\00", align 1
@___asan_gen_.641 = private unnamed_addr constant [35 x i8] c"dev_attr_additional_device_support\00", align 1
@___asan_gen_.644 = private unnamed_addr constant [25 x i8] c"dev_attr_manufacturer_id\00", align 1
@___asan_gen_.647 = private unnamed_addr constant [20 x i8] c"dev_attr_product_id\00", align 1
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2723, i32 8 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2721, i32 25 }
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2739, i32 8 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2754, i32 8 }
@___asan_gen_.664 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2771, i32 8 }
@___asan_gen_.667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2768, i32 25 }
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2789, i32 8 }
@___asan_gen_.673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2785, i32 25 }
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2805, i32 8 }
@___asan_gen_.679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2803, i32 25 }
@___asan_gen_.682 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2822, i32 8 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2820, i32 25 }
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2838, i32 8 }
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 2836, i32 25 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3437, i32 4 }
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 3399, i32 4 }
@___asan_gen_.707 = private unnamed_addr constant [11 x i8] c"__srcu_key\00", align 1
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5395, i32 7 }
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5399, i32 19 }
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5401, i32 3 }
@___asan_gen_.728 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5406, i32 2 }
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5372, i32 3 }
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 4829, i32 2 }
@___asan_gen_.752 = private unnamed_addr constant [13 x i8] c"has_panicked\00", align 1
@___asan_gen_.753 = private unnamed_addr constant [17 x i8] c"panic_done_count\00", align 1
@___asan_gen_.755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5085, i32 17 }
@___asan_gen_.758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 604, i32 11 }
@___asan_gen_.759 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.765 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.766 = private constant [39 x i8] c"../drivers/char/ipmi/ipmi_msghandler.c\00", align 1
@___asan_gen_.767 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.766, i32 5425, i32 2 }
@llvm.compiler.used = appending global [287 x ptr] [ptr @__UNIQUE_ID_author290, ptr @__UNIQUE_ID_default_maintenance_retry_ms233, ptr @__UNIQUE_ID_default_maintenance_retry_mstype232, ptr @__UNIQUE_ID_default_max_retries235, ptr @__UNIQUE_ID_default_max_retriestype234, ptr @__UNIQUE_ID_default_retry_ms231, ptr @__UNIQUE_ID_default_retry_mstype230, ptr @__UNIQUE_ID_description291, ptr @__UNIQUE_ID_file288, ptr @__UNIQUE_ID_license289, ptr @__UNIQUE_ID_maintenance_mode_timeout_ms229, ptr @__UNIQUE_ID_maintenance_mode_timeout_mstype228, ptr @__UNIQUE_ID_panic_op227, ptr @__UNIQUE_ID_softdep293, ptr @__UNIQUE_ID_version292, ptr @__exitcall_cleanup_ipmi, ptr @__get_device_id._entry, ptr @__get_device_id._entry_ptr, ptr @__initcall__kmod_ipmi_msghandler__287_5474_ipmi_init_msghandler_mod6, ptr @__ipmi_bmc_register._entry, ptr @__ipmi_bmc_register._entry.103, ptr @__ipmi_bmc_register._entry.106, ptr @__ipmi_bmc_register._entry.109, ptr @__ipmi_bmc_register._entry.113, ptr @__ipmi_bmc_register._entry.116, ptr @__ipmi_bmc_register._entry_ptr, ptr @__ipmi_bmc_register._entry_ptr.105, ptr @__ipmi_bmc_register._entry_ptr.108, ptr @__ipmi_bmc_register._entry_ptr.111, ptr @__ipmi_bmc_register._entry_ptr.115, ptr @__ipmi_bmc_register._entry_ptr.118, ptr @__ksymtab_ipmb_checksum, ptr @__ksymtab_ipmi_add_smi, ptr @__ksymtab_ipmi_addr_length, ptr @__ksymtab_ipmi_addr_src_to_str, ptr @__ksymtab_ipmi_alloc_smi_msg, ptr @__ksymtab_ipmi_create_user, ptr @__ksymtab_ipmi_destroy_user, ptr @__ksymtab_ipmi_free_recv_msg, ptr @__ksymtab_ipmi_get_maintenance_mode, ptr @__ksymtab_ipmi_get_my_LUN, ptr @__ksymtab_ipmi_get_my_address, ptr @__ksymtab_ipmi_get_smi_info, ptr @__ksymtab_ipmi_get_version, ptr @__ksymtab_ipmi_poll_interface, ptr @__ksymtab_ipmi_register_for_cmd, ptr @__ksymtab_ipmi_request_settime, ptr @__ksymtab_ipmi_request_supply_msgs, ptr @__ksymtab_ipmi_set_gets_events, ptr @__ksymtab_ipmi_set_maintenance_mode, ptr @__ksymtab_ipmi_set_my_LUN, ptr @__ksymtab_ipmi_set_my_address, ptr @__ksymtab_ipmi_smi_msg_received, ptr @__ksymtab_ipmi_smi_watchdog_pretimeout, ptr @__ksymtab_ipmi_smi_watcher_register, ptr @__ksymtab_ipmi_smi_watcher_unregister, ptr @__ksymtab_ipmi_unregister_for_cmd, ptr @__ksymtab_ipmi_unregister_smi, ptr @__ksymtab_ipmi_validate_addr, ptr @__modver_attr, ptr @__param_default_maintenance_retry_ms, ptr @__param_default_max_retries, ptr @__param_default_retry_ms, ptr @__param_maintenance_mode_timeout_ms, ptr @__param_panic_op, ptr @__scan_channels._entry, ptr @__scan_channels._entry_ptr, ptr @bmc_device_id_handler._entry, ptr @bmc_device_id_handler._entry.89, ptr @bmc_device_id_handler._entry.92, ptr @bmc_device_id_handler._entry_ptr, ptr @bmc_device_id_handler._entry_ptr.91, ptr @bmc_device_id_handler._entry_ptr.94, ptr @channel_handler._entry, ptr @channel_handler._entry_ptr, ptr @cleanup_ipmi, ptr @cleanup_ipmi._entry, ptr @cleanup_ipmi._entry.36, ptr @cleanup_ipmi._entry_ptr, ptr @cleanup_ipmi._entry_ptr.38, ptr @guid_handler._entry, ptr @guid_handler._entry_ptr, ptr @handle_bmc_rsp._entry, ptr @handle_bmc_rsp._entry_ptr, ptr @handle_ipmb_direct_rcv_rsp._entry, ptr @handle_ipmb_direct_rcv_rsp._entry_ptr, ptr @handle_one_recv_msg._entry, ptr @handle_one_recv_msg._entry.70, ptr @handle_one_recv_msg._entry_ptr, ptr @handle_one_recv_msg._entry_ptr.72, ptr @handle_read_event_rsp._entry, ptr @handle_read_event_rsp._entry_ptr, ptr @ipmi_add_smi._entry, ptr @ipmi_add_smi._entry_ptr, ptr @ipmi_init_msghandler._entry, ptr @ipmi_init_msghandler._entry_ptr, ptr @ipmi_init_msghandler_mod._entry, ptr @ipmi_init_msghandler_mod._entry_ptr, ptr @ipmi_register_driver._entry, ptr @ipmi_register_driver._entry_ptr, ptr @ipmi_set_gets_events._entry, ptr @ipmi_set_gets_events._entry_ptr, ptr @panic_op_ops, ptr @maintenance_mode_timeout_ms, ptr @default_retry_ms, ptr @default_maintenance_retry_ms, ptr @default_max_retries, ptr @addr_src_to_str, ptr @smi_watchers_mutex, ptr @smi_watchers, ptr @ipmi_interfaces_srcu, ptr @.str, ptr @.str.1, ptr @ipmi_interfaces, ptr @ipmi_create_user.__key, ptr @.str.2, ptr @ipmi_create_user.__srcu_key, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @ipmi_add_smi.__srcu_key, ptr @.str.9, ptr @ipmi_add_smi.__key, ptr @.str.10, ptr @ipmi_add_smi.__key.11, ptr @.str.12, ptr @ipmi_add_smi.__key.13, ptr @.str.14, ptr @ipmi_add_smi.__key.15, ptr @.str.16, ptr @ipmi_add_smi.__key.17, ptr @.str.18, ptr @ipmi_add_smi.__key.19, ptr @.str.20, ptr @ipmi_add_smi.__key.21, ptr @.str.22, ptr @ipmi_add_smi.__key.23, ptr @.str.24, ptr @ipmi_add_smi.__key.25, ptr @.str.26, ptr @ipmi_add_smi.__key.27, ptr @.str.28, ptr @ipmi_add_smi.__key.29, ptr @.str.30, ptr @ipmi_interfaces_mutex, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @smi_msg_inuse_count, ptr @initialized, ptr @remove_work_wq, ptr @panic_block, ptr @stop_operation, ptr @ipmi_timer, ptr @.str.34, ptr @.str.35, ptr @recv_msg_inuse_count, ptr @.str.37, ptr @drvregistered, ptr @ipmidriver, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @ipmi_panic_event_str, ptr @ipmi_send_panic_event, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.71, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.90, ptr @.str.93, ptr @.str.95, ptr @ipmidriver_mutex, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.101, ptr @.str.102, ptr @ipmi_bmc_ida, ptr @bmc_device_type, ptr @.str.104, ptr @.str.107, ptr @.str.110, ptr @.str.112, ptr @.str.114, ptr @.str.117, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @bmc_dev_attr_groups, ptr @bmc_dev_attr_group, ptr @bmc_dev_attrs, ptr @dev_attr_aux_firmware_revision, ptr @dev_attr_guid, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @dev_attr_device_id, ptr @dev_attr_provides_device_sdrs, ptr @dev_attr_revision, ptr @dev_attr_firmware_revision, ptr @dev_attr_ipmi_version, ptr @dev_attr_additional_device_support, ptr @dev_attr_manufacturer_id, ptr @dev_attr_product_id, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @ipmi_init_msghandler.__srcu_key, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @ipmi_init_msghandler.__key, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @has_panicked, ptr @panic_done_count, ptr @.str.156, ptr @.str.157, ptr @.str.158], section "llvm.metadata"
@0 = internal global [202 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @panic_op_ops to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.168 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maintenance_mode_timeout_ms to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.171 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_retry_ms to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_maintenance_retry_ms to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_max_retries to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @addr_src_to_str to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @smi_watchers_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @smi_watchers to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_interfaces_srcu to i32), i32 824, i32 1024, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_interfaces to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_create_user.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_create_user.__srcu_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_set_gets_events._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__srcu_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.11 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.13 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.15 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.17 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.19 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.21 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.23 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.25 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.27 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi.__key.29 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_interfaces_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_add_smi._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @smi_msg_inuse_count to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @initialized to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @remove_work_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @panic_block to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @stop_operation to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_timer to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cleanup_ipmi._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @recv_msg_inuse_count to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cleanup_ipmi._entry.36 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @drvregistered to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmidriver to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_panic_event_str to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_send_panic_event to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @handle_one_recv_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @handle_one_recv_msg._entry.70 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @handle_ipmb_direct_rcv_rsp._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 164, i32 224, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @handle_read_event_rsp._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @handle_bmc_rsp._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @guid_handler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 117, i32 160, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bmc_device_id_handler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bmc_device_id_handler._entry.89 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bmc_device_id_handler._entry.92 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmidriver_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_bmc_ida to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bmc_device_type to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bmc_dev_attr_groups to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bmc_dev_attr_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bmc_dev_attrs to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_aux_firmware_revision to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_guid to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_device_id to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_provides_device_sdrs to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_revision to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_firmware_revision to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_ipmi_version to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_additional_device_support to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_manufacturer_id to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_product_id to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @channel_handler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_init_msghandler.__srcu_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_init_msghandler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_init_msghandler.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_register_driver._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @has_panicked to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @panic_done_count to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ipmi_init_msghandler_mod._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @ipmi_addr_src_to_str(i32 noundef %src) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %src)
  %cmp = icmp ugt i32 %src, 8
  %spec.store.select = select i1 %cmp, i32 0, i32 %src
  %arrayidx = getelementptr [9 x ptr], ptr @addr_src_to_str, i32 0, i32 %spec.store.select
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  ret ptr %1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_smi_watcher_register(ptr noundef %watcher) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @ipmi_init_msghandler()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup34_crit_edge

entry.cleanup34_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup34

if.end:                                           ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @smi_watchers_mutex, i32 noundef 0) #22
  %0 = load ptr, ptr @smi_watchers, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %watcher, ptr noundef nonnull @smi_watchers, ptr noundef %0) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_add.exit_crit_edge

if.end.list_add.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %1 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %watcher, ptr %prev1.i.i, align 4
  %2 = ptrtoint ptr %watcher to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %0, ptr %watcher, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %watcher, i32 0, i32 1
  %3 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @smi_watchers, ptr %prev3.i.i, align 4
  store volatile ptr %watcher, ptr @smi_watchers, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end.list_add.exit_crit_edge
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @ipmi_interfaces_srcu) #22
  tail call fastcc void @rcu_lock_acquire(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @ipmi_interfaces_srcu, i32 0, i32 16)) #22
  %call.i44 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @smi_watchers_mutex, i32 0, i32 5), i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i44)
  %tobool3.not = icmp eq i32 %call.i44, 0
  br i1 %tobool3.not, label %land.lhs.true, label %list_add.exit.do.end_crit_edge

list_add.exit.do.end_crit_edge:                   ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true:                                    ; preds = %list_add.exit
  %call4 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true6, label %land.lhs.true.do.end_crit_edge

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true6:                                   ; preds = %land.lhs.true
  %call7 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %land.lhs.true6.do.end_crit_edge, label %land.lhs.true9

land.lhs.true6.do.end_crit_edge:                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %.b43 = load i1, ptr @ipmi_smi_watcher_register.__warned, align 1
  br i1 %.b43, label %land.lhs.true9.do.end_crit_edge, label %if.then11

land.lhs.true9.do.end_crit_edge:                  ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

if.then11:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @ipmi_smi_watcher_register.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 746, ptr noundef nonnull @.str.1) #22
  br label %do.end

do.end:                                           ; preds = %if.then11, %land.lhs.true9.do.end_crit_edge, %land.lhs.true6.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %list_add.exit.do.end_crit_edge
  %.pn45 = load volatile ptr, ptr @ipmi_interfaces, align 4
  %cmp.not46 = icmp eq ptr %.pn45, @ipmi_interfaces
  br i1 %cmp.not46, label %do.end.for.end_crit_edge, label %for.body.lr.ph

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end
  %new_smi = getelementptr inbounds %struct.ipmi_smi_watcher, ptr %watcher, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %.pn47 = phi ptr [ %.pn45, %for.body.lr.ph ], [ %.pn, %cleanup.for.body_crit_edge ]
  %intf_num22 = getelementptr i8, ptr %.pn47, i32 -12
  %4 = ptrtoint ptr %intf_num22 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %intf_num22, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %cmp23 = icmp eq i32 %5, -1
  br i1 %cmp23, label %for.body.cleanup_crit_edge, label %if.end25

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end25:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %6 = ptrtoint ptr %new_smi to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %new_smi, align 4
  %si_dev = getelementptr i8, ptr %.pn47, i32 2300
  %8 = ptrtoint ptr %si_dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %si_dev, align 4
  tail call void %7(i32 noundef %5, ptr noundef %9) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end25, %for.body.cleanup_crit_edge
  %10 = ptrtoint ptr %.pn47 to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn = load volatile ptr, ptr %.pn47, align 4
  %cmp.not = icmp eq ptr %.pn, @ipmi_interfaces
  br i1 %cmp.not, label %cleanup.for.end_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %do.end.for.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i)
  %tobool.not.i = icmp ult i32 %call.i, 2
  br i1 %tobool.not.i, label %for.end.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

for.end.srcu_read_unlock.exit_crit_edge:          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %for.end
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i, !prof !498

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %for.end.srcu_read_unlock.exit_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @ipmi_interfaces_srcu, i32 0, i32 16)) #22
  tail call void @__srcu_read_unlock(ptr noundef nonnull @ipmi_interfaces_srcu, i32 noundef %call.i) #22
  tail call void @mutex_unlock(ptr noundef nonnull @smi_watchers_mutex) #22
  br label %cleanup34

cleanup34:                                        ; preds = %srcu_read_unlock.exit, %entry.cleanup34_crit_edge
  %retval.0 = phi i32 [ 0, %srcu_read_unlock.exit ], [ %call, %entry.cleanup34_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ipmi_init_msghandler() unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @ipmi_interfaces_mutex, i32 noundef 0) #22
  %.b6.i = load i1, ptr @drvregistered, align 1
  br i1 %.b6.i, label %entry.if.end_crit_edge, label %if.end.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end.i:                                         ; preds = %entry
  %call.i = tail call i32 @driver_register(ptr noundef getelementptr inbounds (%struct.platform_driver, ptr @ipmidriver, i32 0, i32 5)) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %if.else.i, label %ipmi_register_driver.exit

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @drvregistered, align 1
  br label %if.end

ipmi_register_driver.exit:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %call3.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.150, ptr noundef nonnull @.str.8) #25
  br label %out

if.end:                                           ; preds = %if.else.i, %entry.if.end_crit_edge
  %.b25 = load i1, ptr @initialized, align 1
  br i1 %.b25, label %if.end.out_crit_edge, label %if.end3

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end3:                                          ; preds = %if.end
  %call4 = tail call i32 @__init_srcu_struct(ptr noundef nonnull @ipmi_interfaces_srcu, ptr noundef nonnull @.str.144, ptr noundef nonnull @ipmi_init_msghandler.__srcu_key) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end7, label %if.end3.out_crit_edge

if.end3.out_crit_edge:                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end7:                                          ; preds = %if.end3
  %call8 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.145, i32 noundef 917514, i32 noundef 1, ptr noundef nonnull @.str.146) #22
  store ptr %call8, ptr @remove_work_wq, align 4
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.then20, label %out_wq

out_wq:                                           ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @init_timer_key(ptr noundef nonnull @ipmi_timer, ptr noundef nonnull @ipmi_timeout, i32 noundef 0, ptr noundef nonnull @.str.149, ptr noundef nonnull @ipmi_init_msghandler.__key) #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %0, 100
  %call17 = tail call i32 @mod_timer(ptr noundef nonnull @ipmi_timer, i32 noundef %add) #22
  %call18 = tail call i32 @atomic_notifier_chain_register(ptr noundef nonnull @panic_notifier_list, ptr noundef nonnull @panic_block) #22
  store i1 true, ptr @initialized, align 1
  br label %out

if.then20:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, ptr noundef nonnull @.str.8) #25
  tail call void @cleanup_srcu_struct(ptr noundef nonnull @ipmi_interfaces_srcu) #22
  br label %out

out:                                              ; preds = %if.then20, %out_wq, %if.end3.out_crit_edge, %if.end.out_crit_edge, %ipmi_register_driver.exit
  %rv.1 = phi i32 [ %call.i, %ipmi_register_driver.exit ], [ 0, %if.end.out_crit_edge ], [ %call4, %if.end3.out_crit_edge ], [ -12, %if.then20 ], [ 0, %out_wq ]
  tail call void @mutex_unlock(ptr noundef nonnull @ipmi_interfaces_mutex) #22
  ret i32 %rv.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @srcu_read_unlock(ptr noundef %ssp, i32 noundef %idx) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %idx)
  %tobool.not = icmp ult i32 %idx, 2
  br i1 %tobool.not, label %entry.if.end28_crit_edge, label %land.rhs

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end28

land.rhs:                                         ; preds = %entry
  %.b40 = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40, label %land.rhs.if.end28_crit_edge, label %if.then, !prof !498

land.rhs.if.end28_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end28

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs.if.end28_crit_edge, %entry.if.end28_crit_edge
  %dep_map = getelementptr inbounds %struct.srcu_struct, ptr %ssp, i32 0, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map)
  tail call void @__srcu_read_unlock(ptr noundef %ssp, i32 noundef %idx) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_smi_watcher_unregister(ptr noundef %watcher) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @smi_watchers_mutex, i32 noundef 0) #22
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %watcher) #22
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del.exit_crit_edge

entry.list_del.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %watcher, i32 0, i32 1
  %0 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i.i, align 4
  %2 = ptrtoint ptr %watcher to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %watcher, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev1.i.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %3, ptr %1, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %entry.list_del.exit_crit_edge
  %6 = ptrtoint ptr %watcher to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr inttoptr (i32 256 to ptr), ptr %watcher, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %watcher, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @smi_watchers_mutex) #22
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @ipmi_validate_addr(ptr nocapture noundef readonly %addr, i32 noundef %len) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %len)
  %cmp = icmp ult i32 %len, 8
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %1)
  %cmp1 = icmp eq i32 %1, 12
  %channel = getelementptr inbounds %struct.ipmi_addr, ptr %addr, i32 0, i32 1
  %2 = ptrtoint ptr %channel to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %channel, align 4
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  call void @__sanitizer_cov_trace_const_cmp2(i16 15, i16 %3)
  %cmp3.not = icmp eq i16 %3, 15
  %. = select i1 %cmp3.not, i32 0, i32 -22
  br label %return

if.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp2(i16 14, i16 %3)
  %4 = icmp ugt i16 %3, 14
  br i1 %4, label %if.end7.return_crit_edge, label %if.end22

if.end7.return_crit_edge:                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end22:                                         ; preds = %if.end7
  %5 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values)
  switch i32 %1, label %return.fold.split [
    i32 1, label %if.end22.return_crit_edge
    i32 65, label %if.end22.return_crit_edge93
    i32 129, label %if.then34
    i32 4, label %if.then62
  ]

if.end22.return_crit_edge93:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end22.return_crit_edge:                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.then34:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %cmp37.not = icmp ne i16 %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %len)
  %cmp41 = icmp ult i32 %len, 12
  %or.cond86 = or i1 %cmp41, %cmp37.not
  br i1 %or.cond86, label %if.then34.return_crit_edge, label %if.end44

if.then34.return_crit_edge:                       ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end44:                                         ; preds = %if.then34
  %slave_addr = getelementptr inbounds %struct.ipmi_ipmb_direct_addr, ptr %addr, i32 0, i32 2
  %6 = ptrtoint ptr %slave_addr to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %slave_addr, align 2
  %8 = and i8 %7, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool46.not = icmp eq i8 %8, 0
  br i1 %tobool46.not, label %if.end48, label %if.end44.return_crit_edge

if.end44.return_crit_edge:                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end48:                                         ; preds = %if.end44
  %rq_lun = getelementptr inbounds %struct.ipmi_ipmb_direct_addr, ptr %addr, i32 0, i32 4
  %9 = ptrtoint ptr %rq_lun to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %rq_lun, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %10)
  %cmp50 = icmp ugt i8 %10, 3
  br i1 %cmp50, label %if.end48.return_crit_edge, label %if.end53

if.end48.return_crit_edge:                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end53:                                         ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #24
  %rs_lun = getelementptr inbounds %struct.ipmi_ipmb_direct_addr, ptr %addr, i32 0, i32 3
  %11 = ptrtoint ptr %rs_lun to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %rs_lun, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %12)
  %cmp55 = icmp ugt i8 %12, 3
  %.84 = select i1 %cmp55, i32 -22, i32 0
  br label %return

if.then62:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %len)
  %cmp63 = icmp ult i32 %len, 12
  %.85 = select i1 %cmp63, i32 -22, i32 0
  br label %return

return.fold.split:                                ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

return:                                           ; preds = %return.fold.split, %if.then62, %if.end53, %if.end48.return_crit_edge, %if.end44.return_crit_edge, %if.then34.return_crit_edge, %if.end22.return_crit_edge, %if.end22.return_crit_edge93, %if.end7.return_crit_edge, %if.then2, %entry.return_crit_edge
  %retval.1 = phi i32 [ -22, %entry.return_crit_edge ], [ %., %if.then2 ], [ -22, %if.end7.return_crit_edge ], [ 0, %if.end22.return_crit_edge ], [ -22, %if.then34.return_crit_edge ], [ -22, %if.end44.return_crit_edge ], [ -22, %if.end48.return_crit_edge ], [ %.84, %if.end53 ], [ %.85, %if.then62 ], [ 0, %if.end22.return_crit_edge93 ], [ -22, %return.fold.split ]
  ret i32 %retval.1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @ipmi_addr_length(i32 noundef %addr_type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %addr_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.159)
  switch i32 %addr_type, label %if.end10 [
    i32 12, label %entry.return_crit_edge
    i32 1, label %entry.return_crit_edge15
    i32 65, label %entry.return_crit_edge16
    i32 129, label %if.then6
    i32 4, label %if.then9
  ]

entry.return_crit_edge16:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

entry.return_crit_edge15:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.then6:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.then9:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end10:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

return:                                           ; preds = %if.end10, %if.then9, %if.then6, %entry.return_crit_edge, %entry.return_crit_edge15, %entry.return_crit_edge16
  %retval.0 = phi i32 [ 12, %if.then6 ], [ 12, %if.then9 ], [ 0, %if.end10 ], [ 8, %entry.return_crit_edge ], [ 8, %entry.return_crit_edge15 ], [ 8, %entry.return_crit_edge16 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_create_user(i32 noundef %if_num, ptr noundef %handler, ptr noundef %handler_data, ptr nocapture noundef writeonly %user) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %handler, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @ipmi_init_msghandler()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %call3 = tail call noalias ptr @vzalloc(i32 noundef 900) #26
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end2.cleanup_crit_edge, label %if.end6

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end6:                                          ; preds = %if.end2
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @ipmi_interfaces_srcu) #22
  tail call fastcc void @rcu_lock_acquire(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @ipmi_interfaces_srcu, i32 0, i32 16)) #22
  %call8 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %land.lhs.true, label %if.end6.for.cond.preheader_crit_edge

if.end6.for.cond.preheader_crit_edge:             ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.preheader

land.lhs.true:                                    ; preds = %if.end6
  %call10 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %land.lhs.true.for.cond.preheader_crit_edge, label %land.lhs.true12

land.lhs.true.for.cond.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.preheader

land.lhs.true12:                                  ; preds = %land.lhs.true
  %.b140 = load i1, ptr @ipmi_create_user.__warned, align 1
  br i1 %.b140, label %land.lhs.true12.for.cond.preheader_crit_edge, label %if.then14

land.lhs.true12.for.cond.preheader_crit_edge:     ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.preheader

if.then14:                                        ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @ipmi_create_user.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1224, ptr noundef nonnull @.str.1) #22
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then14, %land.lhs.true12.for.cond.preheader_crit_edge, %land.lhs.true.for.cond.preheader_crit_edge, %if.end6.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %for.cond.preheader
  %.pn.in = phi ptr [ %.pn, %for.body.for.cond_crit_edge ], [ @ipmi_interfaces, %for.cond.preheader ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load volatile ptr, ptr %.pn.in, align 4
  %cmp20.not = icmp eq ptr %.pn, @ipmi_interfaces
  br i1 %cmp20.not, label %for.cond.out_kfree_crit_edge, label %for.body

for.cond.out_kfree_crit_edge:                     ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_kfree

for.body:                                         ; preds = %for.cond
  %intf_num = getelementptr i8, ptr %.pn, i32 -12
  %1 = ptrtoint ptr %intf_num to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %intf_num, align 4
  %cmp21 = icmp eq i32 %2, %if_num
  br i1 %cmp21, label %do.body32, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond

do.body32:                                        ; preds = %for.body
  %intf.0.le = getelementptr i8, ptr %.pn, i32 -16
  %remove_work = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 8
  tail call void @__init_work(ptr noundef %remove_work, i32 noundef 0) #22
  %3 = ptrtoint ptr %remove_work to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -64, ptr %remove_work, align 4
  %lockdep_map = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 8, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.2, ptr noundef nonnull @ipmi_create_user.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22
  %entry36 = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 8, i32 1
  %4 = ptrtoint ptr %entry36 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %entry36, ptr %entry36, align 4
  %prev.i = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 8, i32 1, i32 1
  %5 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %entry36, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 8, i32 2
  %6 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @free_user_work, ptr %func, align 4
  %release_barrier = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 2
  %call41 = tail call i32 @__init_srcu_struct(ptr noundef %release_barrier, ptr noundef nonnull @.str.3, ptr noundef nonnull @ipmi_create_user.__srcu_key) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.end44, label %do.body32.out_kfree_crit_edge

do.body32.out_kfree_crit_edge:                    ; preds = %do.body32
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_kfree

if.end44:                                         ; preds = %do.body32
  %7 = ptrtoint ptr %intf.0.le to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %intf.0.le, align 8
  %call45 = tail call zeroext i1 @try_module_get(ptr noundef %8) #22
  br i1 %call45, label %if.end47, label %if.end44.out_kfree_crit_edge

if.end44.out_kfree_crit_edge:                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_kfree

if.end47:                                         ; preds = %if.end44
  %refcount = getelementptr i8, ptr %.pn, i32 -8
  tail call fastcc void @kref_get(ptr noundef %refcount)
  %refcount48 = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount48, i32 noundef 4) #22
  %9 = ptrtoint ptr %refcount48 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 1, ptr %refcount48, align 4
  %handler49 = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %handler49 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %handler, ptr %handler49, align 4
  %handler_data50 = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %handler_data50 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %handler_data, ptr %handler_data50, align 4
  %intf51 = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 6
  %12 = ptrtoint ptr %intf51 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %intf.0.le, ptr %intf51, align 4
  %gets_events = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 7
  %13 = ptrtoint ptr %gets_events to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %gets_events, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !499
  %self78 = getelementptr inbounds %struct.ipmi_user, ptr %call3, i32 0, i32 1
  %14 = ptrtoint ptr %self78 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %call3, ptr %self78, align 4
  %seq_lock = getelementptr i8, ptr %.pn, i32 2304
  %call95 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %seq_lock) #22
  %users = getelementptr i8, ptr %.pn, i32 8
  tail call fastcc void @list_add_rcu(ptr noundef nonnull %call3, ptr noundef %users)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock, i32 noundef %call95) #22
  %ipmi_watchdog_pretimeout = getelementptr inbounds %struct.ipmi_user_hndl, ptr %handler, i32 0, i32 1
  %15 = ptrtoint ptr %ipmi_watchdog_pretimeout to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ipmi_watchdog_pretimeout, align 4
  %tobool102.not = icmp eq ptr %16, null
  br i1 %tobool102.not, label %if.end47.if.end104_crit_edge, label %if.then103

if.end47.if.end104_crit_edge:                     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end104

if.then103:                                       ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @smi_add_watch(ptr noundef %intf.0.le, i32 noundef 2)
  br label %if.end104

if.end104:                                        ; preds = %if.then103, %if.end47.if.end104_crit_edge
  tail call fastcc void @srcu_read_unlock(ptr noundef nonnull @ipmi_interfaces_srcu, i32 noundef %call.i)
  %17 = ptrtoint ptr %user to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call3, ptr %user, align 4
  br label %cleanup

out_kfree:                                        ; preds = %if.end44.out_kfree_crit_edge, %do.body32.out_kfree_crit_edge, %for.cond.out_kfree_crit_edge
  %rv.0 = phi i32 [ %call41, %do.body32.out_kfree_crit_edge ], [ -19, %if.end44.out_kfree_crit_edge ], [ -22, %for.cond.out_kfree_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i)
  %tobool.not.i = icmp ult i32 %call.i, 2
  br i1 %tobool.not.i, label %out_kfree.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

out_kfree.srcu_read_unlock.exit_crit_edge:        ; preds = %out_kfree
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %out_kfree
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i, !prof !498

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %out_kfree.srcu_read_unlock.exit_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @ipmi_interfaces_srcu, i32 0, i32 16)) #22
  tail call void @__srcu_read_unlock(ptr noundef nonnull @ipmi_interfaces_srcu, i32 noundef %call.i) #22
  tail call void @vfree(ptr noundef nonnull %call3) #22
  br label %cleanup

cleanup:                                          ; preds = %srcu_read_unlock.exit, %if.end104, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rv.0, %srcu_read_unlock.exit ], [ 0, %if.end104 ], [ -22, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ], [ -12, %if.end2.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @vzalloc(i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @free_user_work(ptr noundef %work) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -856
  %release_barrier = getelementptr i8, ptr %work, i32 -844
  tail call void @cleanup_srcu_struct(ptr noundef %release_barrier) #22
  tail call void @vfree(ptr noundef %add.ptr) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__init_srcu_struct(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @kref_get(ptr noundef %kref) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %kref, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %kref, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %kref, ptr %kref, i32 1, ptr elementtype(i32) %kref) #22, !srcloc !500
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %entry.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !501

entry.if.end15.sink.split.i.i.i_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %entry
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.refcount_inc.exit_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !498

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %refcount_inc.exit

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %entry.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %entry.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %kref, i32 noundef %.sink.i.i.i) #22
  br label %refcount_inc.exit

refcount_inc.exit:                                ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.refcount_inc.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @list_add_rcu(ptr noundef %new, ptr noundef %head) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %0 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head, align 4
  %call.i = tail call zeroext i1 @__list_add_valid(ptr noundef %new, ptr noundef %head, ptr noundef %1) #22
  br i1 %call.i, label %if.end.i, label %entry.__list_add_rcu.exit_crit_edge

entry.__list_add_rcu.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_add_rcu.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %new, align 4
  %prev2.i = getelementptr inbounds %struct.list_head, ptr %new, i32 0, i32 1
  %3 = ptrtoint ptr %prev2.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %head, ptr %prev2.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !502
  %4 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %new, ptr %head, align 4
  %prev37.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %5 = ptrtoint ptr %prev37.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %new, ptr %prev37.i, align 4
  br label %__list_add_rcu.exit

__list_add_rcu.exit:                              ; preds = %if.end.i, %entry.__list_add_rcu.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @smi_add_watch(ptr noundef %intf, i32 noundef %flags) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %handlers = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %0 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handlers, align 4
  %set_need_watch = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %set_need_watch to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %set_need_watch, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body1

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

do.body1:                                         ; preds = %entry
  %watch_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 39
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %watch_lock) #22
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %do.body1.if.end7_crit_edge, label %if.then6

do.body1.if.end7_crit_edge:                       ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.then6:                                         ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #24
  %response_waiters = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 42
  %4 = ptrtoint ptr %response_waiters to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %response_waiters, align 4
  %inc = add i32 %5, 1
  store i32 %inc, ptr %response_waiters, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %do.body1.if.end7_crit_edge
  %and8 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end7.if.end12_crit_edge, label %if.then10

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  %watchdog_waiters = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 41
  %6 = ptrtoint ptr %watchdog_waiters to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %watchdog_waiters, align 8
  %inc11 = add i32 %7, 1
  store i32 %inc11, ptr %watchdog_waiters, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end7.if.end12_crit_edge
  %and13 = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool14.not = icmp eq i32 %and13, 0
  br i1 %tobool14.not, label %if.end12.if.end17_crit_edge, label %if.then15

if.end12.if.end17_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  %command_waiters = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 40
  %8 = ptrtoint ptr %command_waiters to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %command_waiters, align 4
  %inc16 = add i32 %9, 1
  store i32 %inc16, ptr %command_waiters, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12.if.end17_crit_edge
  %last_watch_mask = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 43
  %10 = ptrtoint ptr %last_watch_mask to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %last_watch_mask, align 8
  %and18 = and i32 %11, %flags
  call void @__sanitizer_cov_trace_cmp4(i32 %and18, i32 %flags)
  %cmp19.not = icmp eq i32 %and18, %flags
  br i1 %cmp19.not, label %if.end17.if.end26_crit_edge, label %if.then21

if.end17.if.end26_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end26

if.then21:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  %or = or i32 %11, %flags
  %12 = ptrtoint ptr %last_watch_mask to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or, ptr %last_watch_mask, align 8
  %13 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %handlers, align 4
  %set_need_watch24 = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %14, i32 0, i32 7
  %15 = ptrtoint ptr %set_need_watch24 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %set_need_watch24, align 4
  %send_info = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %17 = ptrtoint ptr %send_info to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %send_info, align 8
  tail call void %16(ptr noundef %18, i32 noundef %or) #22
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.end17.if.end26_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %watch_lock, i32 noundef %call2) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end26, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_get_smi_info(i32 noundef %if_num, ptr noundef %data) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @ipmi_interfaces_srcu) #22
  tail call fastcc void @rcu_lock_acquire(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @ipmi_interfaces_srcu, i32 0, i32 16)) #22
  %call1 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.for.cond.preheader_crit_edge

entry.for.cond.preheader_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.preheader

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.for.cond.preheader_crit_edge, label %land.lhs.true4

land.lhs.true.for.cond.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.preheader

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b35 = load i1, ptr @ipmi_get_smi_info.__warned, align 1
  br i1 %.b35, label %land.lhs.true4.for.cond.preheader_crit_edge, label %if.then

land.lhs.true4.for.cond.preheader_crit_edge:      ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.preheader

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @ipmi_get_smi_info.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1277, ptr noundef nonnull @.str.1) #22
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then, %land.lhs.true4.for.cond.preheader_crit_edge, %land.lhs.true.for.cond.preheader_crit_edge, %entry.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %for.cond.preheader
  %.pn.in = phi ptr [ %.pn, %for.body.for.cond_crit_edge ], [ @ipmi_interfaces, %for.cond.preheader ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load volatile ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, @ipmi_interfaces
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %intf_num = getelementptr i8, ptr %.pn, i32 -12
  %1 = ptrtoint ptr %intf_num to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %intf_num, align 4
  %cmp10 = icmp eq i32 %2, %if_num
  br i1 %cmp10, label %found, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i)
  %tobool.not.i = icmp ult i32 %call.i, 2
  br i1 %tobool.not.i, label %for.end.cleanup_crit_edge, label %land.rhs.i

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.rhs.i:                                       ; preds = %for.end
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.cleanup_crit_edge, label %land.rhs.i.cleanup.sink.split_crit_edge, !prof !498

land.rhs.i.cleanup.sink.split_crit_edge:          ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.sink.split

land.rhs.i.cleanup_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

found:                                            ; preds = %for.body
  %handlers = getelementptr i8, ptr %.pn, i32 2292
  %3 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %handlers, align 4
  %get_smi_info = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %4, i32 0, i32 4
  %5 = ptrtoint ptr %get_smi_info to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %get_smi_info, align 4
  %tobool21.not = icmp eq ptr %6, null
  br i1 %tobool21.not, label %found.if.end26_crit_edge, label %if.else

found.if.end26_crit_edge:                         ; preds = %found
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end26

if.else:                                          ; preds = %found
  call void @__sanitizer_cov_trace_pc() #24
  %send_info = getelementptr i8, ptr %.pn, i32 2296
  %7 = ptrtoint ptr %send_info to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %send_info, align 8
  %call25 = tail call i32 %6(ptr noundef %8, ptr noundef %data) #22
  br label %if.end26

if.end26:                                         ; preds = %if.else, %found.if.end26_crit_edge
  %rv.0 = phi i32 [ %call25, %if.else ], [ -25, %found.if.end26_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i)
  %tobool.not.i36 = icmp ult i32 %call.i, 2
  br i1 %tobool.not.i36, label %if.end26.cleanup_crit_edge, label %land.rhs.i38

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.rhs.i38:                                     ; preds = %if.end26
  %.b40.i37 = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i37, label %land.rhs.i38.cleanup_crit_edge, label %land.rhs.i38.cleanup.sink.split_crit_edge, !prof !498

land.rhs.i38.cleanup.sink.split_crit_edge:        ; preds = %land.rhs.i38
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.sink.split

land.rhs.i38.cleanup_crit_edge:                   ; preds = %land.rhs.i38
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup.sink.split:                               ; preds = %land.rhs.i38.cleanup.sink.split_crit_edge, %land.rhs.i.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ -22, %land.rhs.i.cleanup.sink.split_crit_edge ], [ %rv.0, %land.rhs.i38.cleanup.sink.split_crit_edge ]
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %land.rhs.i38.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %land.rhs.i.cleanup_crit_edge, %for.end.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %for.end.cleanup_crit_edge ], [ -22, %land.rhs.i.cleanup_crit_edge ], [ %rv.0, %if.end26.cleanup_crit_edge ], [ %rv.0, %land.rhs.i38.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  tail call fastcc void @rcu_lock_release(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @ipmi_interfaces_srcu, i32 0, i32 16)) #22
  tail call void @__srcu_read_unlock(ptr noundef nonnull @ipmi_interfaces_srcu, i32 noundef %call.i) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_destroy_user(ptr noundef %user) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @_ipmi_destroy_user(ptr noundef %user)
  %refcount = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.kref_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.kref_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #22
  br label %kref_put.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %1 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i = getelementptr %struct.ipmi_user, ptr %user, i32 0, i32 8
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %1, ptr noundef %remove_work.i) #22
  br label %kref_put.exit

kref_put.exit:                                    ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.kref_put.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @_ipmi_destroy_user(ptr noundef %user) unnamed_addr #1 align 64 {
entry:
  %i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %intf1 = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 6
  %0 = ptrtoint ptr %intf1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %intf1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #22
  %2 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %i, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %i)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %do.body5

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %release_barrier = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 2
  tail call void @synchronize_srcu(ptr noundef %release_barrier) #22
  br label %cleanup

do.body5:                                         ; preds = %entry
  %self = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 1
  %3 = ptrtoint ptr %self to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr null, ptr %self, align 4
  %4 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %tobool.not.i.i = icmp ult i32 %5, 2
  br i1 %tobool.not.i.i, label %do.body5.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

do.body5.release_ipmi_user.exit_crit_edge:        ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %do.body5
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %do.body5.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %5) #22
  tail call void @synchronize_srcu(ptr noundef %release_barrier.i) #22
  %handler = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 4
  %6 = ptrtoint ptr %handler to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %handler, align 4
  %shutdown = getelementptr inbounds %struct.ipmi_user_hndl, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %shutdown to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %shutdown, align 4
  %tobool36.not = icmp eq ptr %9, null
  br i1 %tobool36.not, label %release_ipmi_user.exit.if.end40_crit_edge, label %if.then37

release_ipmi_user.exit.if.end40_crit_edge:        ; preds = %release_ipmi_user.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end40

if.then37:                                        ; preds = %release_ipmi_user.exit
  call void @__sanitizer_cov_trace_pc() #24
  %handler_data = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 5
  %10 = ptrtoint ptr %handler_data to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %handler_data, align 4
  tail call void %9(ptr noundef %11) #22
  br label %if.end40

if.end40:                                         ; preds = %if.then37, %release_ipmi_user.exit.if.end40_crit_edge
  %12 = ptrtoint ptr %handler to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %handler, align 4
  %ipmi_watchdog_pretimeout = getelementptr inbounds %struct.ipmi_user_hndl, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %ipmi_watchdog_pretimeout to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ipmi_watchdog_pretimeout, align 4
  %tobool42.not = icmp eq ptr %15, null
  br i1 %tobool42.not, label %if.end40.if.end44_crit_edge, label %if.then43

if.end40.if.end44_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44

if.then43:                                        ; preds = %if.end40
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 16
  %16 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %handlers.i, align 4
  %set_need_watch.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %17, i32 0, i32 7
  %18 = ptrtoint ptr %set_need_watch.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %set_need_watch.i, align 4
  %tobool.not.i = icmp eq ptr %19, null
  br i1 %tobool.not.i, label %if.then43.if.end44_crit_edge, label %do.body1.i

if.then43.if.end44_crit_edge:                     ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44

do.body1.i:                                       ; preds = %if.then43
  %watch_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 39
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %watch_lock.i) #22
  %watchdog_waiters.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 41
  %20 = ptrtoint ptr %watchdog_waiters.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %watchdog_waiters.i, align 8
  %dec11.i = add i32 %21, -1
  store i32 %dec11.i, ptr %watchdog_waiters.i, align 8
  %response_waiters18.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 42
  %22 = ptrtoint ptr %response_waiters18.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %response_waiters18.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool19.not.i = icmp ne i32 %23, 0
  %spec.select.i = zext i1 %tobool19.not.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec11.i)
  %tobool23.not.i = icmp eq i32 %dec11.i, 0
  %or25.i = or i32 %spec.select.i, 2
  %flags.addr.1.i = select i1 %tobool23.not.i, i32 %spec.select.i, i32 %or25.i
  %command_waiters27.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 40
  %24 = ptrtoint ptr %command_waiters27.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %command_waiters27.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool28.not.i = icmp eq i32 %25, 0
  %or30.i = or i32 %flags.addr.1.i, 4
  %flags.addr.2.i = select i1 %tobool28.not.i, i32 %flags.addr.1.i, i32 %or30.i
  %last_watch_mask.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 43
  %26 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %last_watch_mask.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %flags.addr.2.i)
  %cmp32.not.i = icmp eq i32 %27, %flags.addr.2.i
  br i1 %cmp32.not.i, label %do.body1.i.if.end39.i_crit_edge, label %if.then34.i

do.body1.i.if.end39.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39.i

if.then34.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  %28 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %flags.addr.2.i, ptr %last_watch_mask.i, align 8
  %29 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %handlers.i, align 4
  %set_need_watch37.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %30, i32 0, i32 7
  %31 = ptrtoint ptr %set_need_watch37.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %set_need_watch37.i, align 4
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 17
  %33 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %send_info.i, align 8
  tail call void %32(ptr noundef %34, i32 noundef %flags.addr.2.i) #22
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then34.i, %do.body1.i.if.end39.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %watch_lock.i, i32 noundef %call2.i) #22
  br label %if.end44

if.end44:                                         ; preds = %if.end39.i, %if.then43.if.end44_crit_edge, %if.end40.if.end44_crit_edge
  %gets_events = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 7
  %35 = ptrtoint ptr %gets_events to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %gets_events, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool45.not = icmp eq i8 %36, 0
  br i1 %tobool45.not, label %if.end44.do.body49_crit_edge, label %if.then46

if.end44.do.body49_crit_edge:                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body49

if.then46:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #24
  %event_waiters = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 37
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %event_waiters, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %event_waiters, i32 1, i32 3, i32 1) #22
  %37 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %event_waiters, ptr %event_waiters, i32 1, ptr elementtype(i32) %event_waiters) #22, !srcloc !508
  br label %do.body49

do.body49:                                        ; preds = %if.then46, %if.end44.do.body49_crit_edge
  %seq_lock = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 19
  %call52 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %seq_lock) #22
  %call.i.i169 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %user) #22
  br i1 %call.i.i169, label %if.end.i.i, label %do.body49.list_del_rcu.exit_crit_edge

do.body49.list_del_rcu.exit_crit_edge:            ; preds = %do.body49
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %do.body49
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %user, i32 0, i32 1
  %38 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %prev.i.i, align 4
  %40 = ptrtoint ptr %user to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %user, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %39, ptr %prev1.i.i.i, align 4
  %43 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %43)
  store volatile ptr %41, ptr %39, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %do.body49.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %user, i32 0, i32 1
  %44 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %handlers.i170 = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 16
  %watch_lock.i173 = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 39
  %response_waiters.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 42
  %watchdog_waiters22.i179 = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 41
  %command_waiters27.i183 = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 40
  %last_watch_mask.i187 = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 43
  %send_info.i190 = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 17
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %list_del_rcu.exit
  %storemerge203 = phi i32 [ 0, %list_del_rcu.exit ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %1, i32 0, i32 20, i32 %storemerge203
  %45 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %45)
  %bf.load = load i8, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool59.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool59.not, label %for.body.for.inc_crit_edge, label %land.lhs.true

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %recv_msg = getelementptr %struct.ipmi_smi, ptr %1, i32 0, i32 20, i32 %storemerge203, i32 5
  %46 = ptrtoint ptr %recv_msg to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %recv_msg, align 4
  %user62 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %user62 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %user62, align 4
  %cmp63 = icmp eq ptr %49, %user
  br i1 %cmp63, label %if.then65, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then65:                                        ; preds = %land.lhs.true
  %bf.clear = and i8 %bf.load, 127
  %50 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %bf.clear, ptr %arrayidx, align 4
  %51 = ptrtoint ptr %handlers.i170 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %handlers.i170, align 4
  %set_need_watch.i171 = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %52, i32 0, i32 7
  %53 = ptrtoint ptr %set_need_watch.i171 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %set_need_watch.i171, align 4
  %tobool.not.i172 = icmp eq ptr %54, null
  br i1 %tobool.not.i172, label %if.then65.smi_remove_watch.exit193_crit_edge, label %do.body1.i175

if.then65.smi_remove_watch.exit193_crit_edge:     ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #24
  br label %smi_remove_watch.exit193

do.body1.i175:                                    ; preds = %if.then65
  %call2.i174 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %watch_lock.i173) #22
  %55 = ptrtoint ptr %response_waiters.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %response_waiters.i, align 4
  %dec.i = add i32 %56, -1
  store i32 %dec.i, ptr %response_waiters.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool19.not.i177 = icmp ne i32 %dec.i, 0
  %spec.select.i178 = zext i1 %tobool19.not.i177 to i32
  %57 = ptrtoint ptr %watchdog_waiters22.i179 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %watchdog_waiters22.i179, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool23.not.i180 = icmp eq i32 %58, 0
  %or25.i181 = or i32 %spec.select.i178, 2
  %flags.addr.1.i182 = select i1 %tobool23.not.i180, i32 %spec.select.i178, i32 %or25.i181
  %59 = ptrtoint ptr %command_waiters27.i183 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %command_waiters27.i183, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool28.not.i184 = icmp eq i32 %60, 0
  %or30.i185 = or i32 %flags.addr.1.i182, 4
  %flags.addr.2.i186 = select i1 %tobool28.not.i184, i32 %flags.addr.1.i182, i32 %or30.i185
  %61 = ptrtoint ptr %last_watch_mask.i187 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %last_watch_mask.i187, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %62, i32 %flags.addr.2.i186)
  %cmp32.not.i188 = icmp eq i32 %62, %flags.addr.2.i186
  br i1 %cmp32.not.i188, label %do.body1.i175.if.end39.i192_crit_edge, label %if.then34.i191

do.body1.i175.if.end39.i192_crit_edge:            ; preds = %do.body1.i175
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39.i192

if.then34.i191:                                   ; preds = %do.body1.i175
  call void @__sanitizer_cov_trace_pc() #24
  %63 = ptrtoint ptr %last_watch_mask.i187 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %flags.addr.2.i186, ptr %last_watch_mask.i187, align 8
  %64 = ptrtoint ptr %handlers.i170 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %handlers.i170, align 4
  %set_need_watch37.i189 = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %65, i32 0, i32 7
  %66 = ptrtoint ptr %set_need_watch37.i189 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %set_need_watch37.i189, align 4
  %68 = ptrtoint ptr %send_info.i190 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %send_info.i190, align 8
  tail call void %67(ptr noundef %69, i32 noundef %flags.addr.2.i186) #22
  br label %if.end39.i192

if.end39.i192:                                    ; preds = %if.then34.i191, %do.body1.i175.if.end39.i192_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %watch_lock.i173, i32 noundef %call2.i174) #22
  br label %smi_remove_watch.exit193

smi_remove_watch.exit193:                         ; preds = %if.end39.i192, %if.then65.smi_remove_watch.exit193_crit_edge
  %70 = ptrtoint ptr %recv_msg to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %recv_msg, align 4
  %user.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %71, i32 0, i32 2
  %72 = ptrtoint ptr %user.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %user.i, align 4
  %tobool.not.i194 = icmp eq ptr %73, null
  br i1 %tobool.not.i194, label %smi_remove_watch.exit193.ipmi_free_recv_msg.exit_crit_edge, label %land.lhs.true.i

smi_remove_watch.exit193.ipmi_free_recv_msg.exit_crit_edge: ; preds = %smi_remove_watch.exit193
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit

land.lhs.true.i:                                  ; preds = %smi_remove_watch.exit193
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %74 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool1.not.i = icmp eq i32 %74, 0
  br i1 %tobool1.not.i, label %if.then.i, label %land.lhs.true.i.ipmi_free_recv_msg.exit_crit_edge

land.lhs.true.i.ipmi_free_recv_msg.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %refcount.i = getelementptr inbounds %struct.ipmi_user, ptr %73, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #22
  %75 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %75, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i195, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.ipmi_free_recv_msg.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !498

if.end5.i.i.i.i.i.ipmi_free_recv_msg.exit_crit_edge: ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 3) #22
  br label %ipmi_free_recv_msg.exit

if.then.i.i195:                                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %76 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i.i = getelementptr %struct.ipmi_user, ptr %73, i32 0, i32 8
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %76, ptr noundef %remove_work.i.i) #22
  br label %ipmi_free_recv_msg.exit

ipmi_free_recv_msg.exit:                          ; preds = %if.then.i.i195, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.ipmi_free_recv_msg.exit_crit_edge, %land.lhs.true.i.ipmi_free_recv_msg.exit_crit_edge, %smi_remove_watch.exit193.ipmi_free_recv_msg.exit_crit_edge
  %done.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %71, i32 0, i32 7
  %77 = ptrtoint ptr %done.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %done.i, align 4
  tail call void %78(ptr noundef %71) #22
  br label %for.inc

for.inc:                                          ; preds = %ipmi_free_recv_msg.exit, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %storemerge203, 1
  %exitcond.not = icmp eq i32 %inc, 64
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.end:                                          ; preds = %for.inc
  %79 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 64, ptr %i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock, i32 noundef %call52) #22
  %cmd_rcvrs_mutex = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 30
  tail call void @mutex_lock_nested(ptr noundef %cmd_rcvrs_mutex, i32 noundef 0) #22
  %dep_map = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 30, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool77.not = icmp eq i32 %call.i, 0
  br i1 %tobool77.not, label %land.lhs.true78, label %for.end.do.end89_crit_edge

for.end.do.end89_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end89

land.lhs.true78:                                  ; preds = %for.end
  %call79 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %land.lhs.true81, label %land.lhs.true78.do.end89_crit_edge

land.lhs.true78.do.end89_crit_edge:               ; preds = %land.lhs.true78
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end89

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %call82 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call82)
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %land.lhs.true81.do.end89_crit_edge, label %land.lhs.true84

land.lhs.true81.do.end89_crit_edge:               ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end89

land.lhs.true84:                                  ; preds = %land.lhs.true81
  %.b168 = load i1, ptr @_ipmi_destroy_user.__warned, align 1
  br i1 %.b168, label %land.lhs.true84.do.end89_crit_edge, label %if.then86

land.lhs.true84.do.end89_crit_edge:               ; preds = %land.lhs.true84
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end89

if.then86:                                        ; preds = %land.lhs.true84
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @_ipmi_destroy_user.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1358, ptr noundef nonnull @.str.1) #22
  br label %do.end89

do.end89:                                         ; preds = %if.then86, %land.lhs.true84.do.end89_crit_edge, %land.lhs.true81.do.end89_crit_edge, %land.lhs.true78.do.end89_crit_edge, %for.end.do.end89_crit_edge
  %cmd_rcvrs = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 31
  %80 = ptrtoint ptr %cmd_rcvrs to i32
  call void @__asan_load4_noabort(i32 %80)
  %rcvr.0204 = load volatile ptr, ptr %cmd_rcvrs, align 4
  %cmp98.not205 = icmp eq ptr %rcvr.0204, %cmd_rcvrs
  br i1 %cmp98.not205, label %do.end89.for.end118_crit_edge, label %do.end89.for.body100_crit_edge

do.end89.for.body100_crit_edge:                   ; preds = %do.end89
  br label %for.body100

do.end89.for.end118_crit_edge:                    ; preds = %do.end89
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end118

for.body100:                                      ; preds = %for.inc108.for.body100_crit_edge, %do.end89.for.body100_crit_edge
  %rcvr.0207 = phi ptr [ %rcvr.0, %for.inc108.for.body100_crit_edge ], [ %rcvr.0204, %do.end89.for.body100_crit_edge ]
  %rcvrs.0206 = phi ptr [ %rcvrs.1, %for.inc108.for.body100_crit_edge ], [ null, %do.end89.for.body100_crit_edge ]
  %user101 = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.0207, i32 0, i32 1
  %81 = ptrtoint ptr %user101 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %user101, align 4
  %cmp102 = icmp eq ptr %82, %user
  br i1 %cmp102, label %if.then104, label %for.body100.for.inc108_crit_edge

for.body100.for.inc108_crit_edge:                 ; preds = %for.body100
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc108

if.then104:                                       ; preds = %for.body100
  %call.i.i196 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %rcvr.0207) #22
  br i1 %call.i.i196, label %if.end.i.i199, label %if.then104.list_del_rcu.exit201_crit_edge

if.then104.list_del_rcu.exit201_crit_edge:        ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_rcu.exit201

if.end.i.i199:                                    ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i197 = getelementptr inbounds %struct.list_head, ptr %rcvr.0207, i32 0, i32 1
  %83 = ptrtoint ptr %prev.i.i197 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %prev.i.i197, align 4
  %85 = ptrtoint ptr %rcvr.0207 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %rcvr.0207, align 4
  %prev1.i.i.i198 = getelementptr inbounds %struct.list_head, ptr %86, i32 0, i32 1
  %87 = ptrtoint ptr %prev1.i.i.i198 to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %84, ptr %prev1.i.i.i198, align 4
  %88 = ptrtoint ptr %84 to i32
  call void @__asan_store4_noabort(i32 %88)
  store volatile ptr %86, ptr %84, align 4
  br label %list_del_rcu.exit201

list_del_rcu.exit201:                             ; preds = %if.end.i.i199, %if.then104.list_del_rcu.exit201_crit_edge
  %prev.i200 = getelementptr inbounds %struct.list_head, ptr %rcvr.0207, i32 0, i32 1
  %89 = ptrtoint ptr %prev.i200 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i200, align 4
  %next106 = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.0207, i32 0, i32 5
  %90 = ptrtoint ptr %next106 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %rcvrs.0206, ptr %next106, align 4
  br label %for.inc108

for.inc108:                                       ; preds = %list_del_rcu.exit201, %for.body100.for.inc108_crit_edge
  %rcvrs.1 = phi ptr [ %rcvr.0207, %list_del_rcu.exit201 ], [ %rcvrs.0206, %for.body100.for.inc108_crit_edge ]
  %91 = ptrtoint ptr %rcvr.0207 to i32
  call void @__asan_load4_noabort(i32 %91)
  %rcvr.0 = load volatile ptr, ptr %rcvr.0207, align 4
  %cmp98.not = icmp eq ptr %rcvr.0, %cmd_rcvrs
  br i1 %cmp98.not, label %for.inc108.for.end118_crit_edge, label %for.inc108.for.body100_crit_edge

for.inc108.for.body100_crit_edge:                 ; preds = %for.inc108
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body100

for.inc108.for.end118_crit_edge:                  ; preds = %for.inc108
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end118

for.end118:                                       ; preds = %for.inc108.for.end118_crit_edge, %do.end89.for.end118_crit_edge
  %rcvrs.0.lcssa = phi ptr [ null, %do.end89.for.end118_crit_edge ], [ %rcvrs.1, %for.inc108.for.end118_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %cmd_rcvrs_mutex) #22
  tail call void @synchronize_rcu() #22
  %tobool120.not208 = icmp eq ptr %rcvrs.0.lcssa, null
  br i1 %tobool120.not208, label %for.end118.while.end_crit_edge, label %for.end118.while.body_crit_edge

for.end118.while.body_crit_edge:                  ; preds = %for.end118
  br label %while.body

for.end118.while.end_crit_edge:                   ; preds = %for.end118
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %for.end118.while.body_crit_edge
  %rcvrs.2209 = phi ptr [ %93, %while.body.while.body_crit_edge ], [ %rcvrs.0.lcssa, %for.end118.while.body_crit_edge ]
  %next121 = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvrs.2209, i32 0, i32 5
  %92 = ptrtoint ptr %next121 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %next121, align 4
  tail call void @kfree(ptr noundef nonnull %rcvrs.2209) #22
  %tobool120.not = icmp eq ptr %93, null
  br i1 %tobool120.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %for.end118.while.end_crit_edge
  %refcount = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 2
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %94 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %94, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i202, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %while.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.kref_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.kref_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #22
  br label %kref_put.exit

if.then.i202:                                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  tail call fastcc void @intf_free(ptr noundef %refcount) #22, !callees !509
  br label %kref_put.exit

kref_put.exit:                                    ; preds = %if.then.i202, %if.then10.i.i.i.i, %if.end5.i.i.i.i.kref_put.exit_crit_edge
  %95 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %1, align 8
  tail call void @module_put(ptr noundef %96) #22
  br label %cleanup

cleanup:                                          ; preds = %kref_put.exit, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #22
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @kref_put(ptr noundef %kref, ptr nocapture noundef readonly %release) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %kref, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %kref, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %kref, ptr %kref, i32 1, ptr elementtype(i32) %kref) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.return_crit_edge, label %if.then10.i.i.i, !prof !498

if.end5.i.i.i.return_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %kref, i32 noundef 3) #22
  br label %return

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  tail call void %release(ptr noundef %kref) #22, !callees !509
  br label %return

return:                                           ; preds = %if.then, %if.then10.i.i.i, %if.end5.i.i.i.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_get_version(ptr noundef %user, ptr nocapture noundef writeonly %major, ptr nocapture noundef writeonly %minor) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %1 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %intf = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 6
  %2 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %intf, align 4
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef %3, ptr noundef null, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not = icmp eq i32 %call.i, 0
  br i1 %tobool2.not, label %if.then3, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %ipmi_version = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 4
  %4 = ptrtoint ptr %ipmi_version to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %ipmi_version, align 4
  %6 = and i8 %5, 15
  %7 = ptrtoint ptr %major to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %6, ptr %major, align 1
  %8 = lshr i8 %5, 4
  %9 = ptrtoint ptr %minor to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %minor, align 1
  br label %if.end8

if.end8:                                          ; preds = %if.then3, %if.end.if.end8_crit_edge
  %10 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %tobool.not.i.i = icmp ult i32 %11, 2
  br i1 %tobool.not.i.i, label %if.end8.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

if.end8.release_ipmi_user.exit_crit_edge:         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %if.end8
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %if.end8.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %11) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %release_ipmi_user.exit ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr nocapture noundef %index) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %release_barrier = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 2
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef %release_barrier) #22
  %dep_map.i = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i) #22
  %0 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %call.i, ptr %index, align 4
  %self = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 1
  %1 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %self, align 4
  %call.i21 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i21)
  %tobool.not.i = icmp eq i32 %call.i21, 0
  br i1 %tobool.not.i, label %entry.do.end9_crit_edge, label %srcu_read_lock_held.exit

entry.do.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end9

srcu_read_lock_held.exit:                         ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %land.lhs.true, label %srcu_read_lock_held.exit.do.end9_crit_edge

srcu_read_lock_held.exit.do.end9_crit_edge:       ; preds = %srcu_read_lock_held.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end9

land.lhs.true:                                    ; preds = %srcu_read_lock_held.exit
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true.do.end9_crit_edge, label %land.lhs.true6

land.lhs.true.do.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end9

land.lhs.true6:                                   ; preds = %land.lhs.true
  %.b20 = load i1, ptr @acquire_ipmi_user.__warned, align 1
  br i1 %.b20, label %land.lhs.true6.do.end9_crit_edge, label %if.then

land.lhs.true6.do.end9_crit_edge:                 ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end9

if.then:                                          ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @acquire_ipmi_user.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 202, ptr noundef nonnull @.str.59) #22
  br label %do.end9

do.end9:                                          ; preds = %if.then, %land.lhs.true6.do.end9_crit_edge, %land.lhs.true.do.end9_crit_edge, %srcu_read_lock_held.exit.do.end9_crit_edge, %entry.do.end9_crit_edge
  %tobool11.not = icmp eq ptr %2, null
  br i1 %tobool11.not, label %if.then12, label %do.end9.if.end14_crit_edge

do.end9.if.end14_crit_edge:                       ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end14

if.then12:                                        ; preds = %do.end9
  %3 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %tobool.not.i23 = icmp ult i32 %4, 2
  br i1 %tobool.not.i23, label %if.then12.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

if.then12.srcu_read_unlock.exit_crit_edge:        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %if.then12
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i, !prof !498

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %if.then12.srcu_read_unlock.exit_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier, i32 noundef %4) #22
  br label %if.end14

if.end14:                                         ; preds = %srcu_read_unlock.exit, %do.end9.if.end14_crit_edge
  ret ptr %2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_set_my_address(ptr noundef %user, i32 noundef %channel, i8 noundef zeroext %address) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %0 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %channel)
  %cmp = icmp ugt i32 %channel, 15
  br i1 %cmp, label %if.end.if.end7_crit_edge, label %if.else

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %1 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A", "=r,r,Ir,~{cc}"(i32 %channel, i32 16) #22, !srcloc !510
  %and = and i32 %1, %channel
  %intf = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 6
  %2 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %intf, align 4
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %3, i32 0, i32 58, i32 %and
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %address, ptr %arrayidx, align 2
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end.if.end7_crit_edge
  %rv.0 = phi i32 [ 0, %if.else ], [ -22, %if.end.if.end7_crit_edge ]
  %5 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %tobool.not.i.i = icmp ult i32 %6, 2
  br i1 %tobool.not.i.i, label %if.end7.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

if.end7.release_ipmi_user.exit_crit_edge:         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %if.end7
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %if.end7.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %6) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rv.0, %release_ipmi_user.exit ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_get_my_address(ptr noundef %user, i32 noundef %channel, ptr nocapture noundef writeonly %address) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %0 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %channel)
  %cmp = icmp ugt i32 %channel, 15
  br i1 %cmp, label %if.end.if.end7_crit_edge, label %if.else

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %1 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A", "=r,r,Ir,~{cc}"(i32 %channel, i32 16) #22, !srcloc !510
  %and = and i32 %1, %channel
  %intf = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 6
  %2 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %intf, align 4
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %3, i32 0, i32 58, i32 %and
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx, align 2
  %6 = ptrtoint ptr %address to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %address, align 1
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end.if.end7_crit_edge
  %rv.0 = phi i32 [ 0, %if.else ], [ -22, %if.end.if.end7_crit_edge ]
  %7 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %8)
  %tobool.not.i.i = icmp ult i32 %8, 2
  br i1 %tobool.not.i.i, label %if.end7.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

if.end7.release_ipmi_user.exit_crit_edge:         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %if.end7
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %if.end7.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %8) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rv.0, %release_ipmi_user.exit ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_set_my_LUN(ptr noundef %user, i32 noundef %channel, i8 noundef zeroext %LUN) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %0 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %channel)
  %cmp = icmp ugt i32 %channel, 15
  br i1 %cmp, label %if.end.if.end8_crit_edge, label %if.else

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %1 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A", "=r,r,Ir,~{cc}"(i32 %channel, i32 16) #22, !srcloc !510
  %and = and i32 %1, %channel
  %2 = and i8 %LUN, 3
  %intf = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 6
  %3 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %intf, align 4
  %lun = getelementptr %struct.ipmi_smi, ptr %4, i32 0, i32 58, i32 %and, i32 1
  %5 = ptrtoint ptr %lun to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %2, ptr %lun, align 1
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end.if.end8_crit_edge
  %rv.0 = phi i32 [ 0, %if.else ], [ -22, %if.end.if.end8_crit_edge ]
  %6 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %7)
  %tobool.not.i.i = icmp ult i32 %7, 2
  br i1 %tobool.not.i.i, label %if.end8.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

if.end8.release_ipmi_user.exit_crit_edge:         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %if.end8
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %if.end8.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %7) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rv.0, %release_ipmi_user.exit ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_get_my_LUN(ptr noundef %user, i32 noundef %channel, ptr nocapture noundef writeonly %address) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %0 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %channel)
  %cmp = icmp ugt i32 %channel, 15
  br i1 %cmp, label %if.end.if.end6_crit_edge, label %if.else

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end6

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %1 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A", "=r,r,Ir,~{cc}"(i32 %channel, i32 16) #22, !srcloc !510
  %and = and i32 %1, %channel
  %intf = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 6
  %2 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %intf, align 4
  %lun = getelementptr %struct.ipmi_smi, ptr %3, i32 0, i32 58, i32 %and, i32 1
  %4 = ptrtoint ptr %lun to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %lun, align 1
  %6 = ptrtoint ptr %address to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %address, align 1
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end.if.end6_crit_edge
  %rv.0 = phi i32 [ 0, %if.else ], [ -22, %if.end.if.end6_crit_edge ]
  %7 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %8)
  %tobool.not.i.i = icmp ult i32 %8, 2
  br i1 %tobool.not.i.i, label %if.end6.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

if.end6.release_ipmi_user.exit_crit_edge:         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %if.end6
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %if.end6.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %8) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rv.0, %release_ipmi_user.exit ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_get_maintenance_mode(ptr noundef %user) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %0 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body1

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

do.body1:                                         ; preds = %entry
  %intf = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 6
  %1 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %intf, align 4
  %maintenance_mode_lock = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 51
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %maintenance_mode_lock) #22
  %3 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %intf, align 4
  %maintenance_mode = getelementptr inbounds %struct.ipmi_smi, ptr %4, i32 0, i32 48
  %5 = ptrtoint ptr %maintenance_mode to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %maintenance_mode, align 8
  %maintenance_mode_lock8 = getelementptr inbounds %struct.ipmi_smi, ptr %4, i32 0, i32 51
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %maintenance_mode_lock8, i32 noundef %call3) #22
  %7 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %8)
  %tobool.not.i.i = icmp ult i32 %8, 2
  br i1 %tobool.not.i.i, label %do.body1.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

do.body1.release_ipmi_user.exit_crit_edge:        ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %do.body1
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %do.body1.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %8) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %6, %release_ipmi_user.exit ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_set_maintenance_mode(ptr noundef %user, i32 noundef %mode) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %0 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %index, align 4, !annotation !506
  %intf1 = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 6
  %1 = ptrtoint ptr %intf1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %intf1, align 4
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body2

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

do.body2:                                         ; preds = %entry
  %maintenance_mode_lock = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 51
  %call4 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %maintenance_mode_lock) #22
  %maintenance_mode = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 48
  %3 = ptrtoint ptr %maintenance_mode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %maintenance_mode, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %mode)
  %cmp7.not = icmp eq i32 %4, %mode
  br i1 %cmp7.not, label %do.body2.out_unlock_crit_edge, label %if.then9

do.body2.out_unlock_crit_edge:                    ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_unlock

if.then9:                                         ; preds = %do.body2
  %5 = zext i32 %mode to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.160)
  switch i32 %mode, label %if.then9.out_unlock_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb12
    i32 2, label %sw.bb14
  ]

if.then9.out_unlock_crit_edge:                    ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_unlock

sw.bb:                                            ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  %auto_maintenance_timeout = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 50
  %6 = ptrtoint ptr %auto_maintenance_timeout to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %auto_maintenance_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp10 = icmp sgt i32 %7, 0
  %maintenance_mode_enable = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 49
  %frombool = zext i1 %cmp10 to i8
  %8 = ptrtoint ptr %maintenance_mode_enable to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %frombool, ptr %maintenance_mode_enable, align 4
  br label %sw.epilog

sw.bb12:                                          ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  %maintenance_mode_enable13 = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 49
  %9 = ptrtoint ptr %maintenance_mode_enable13 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %maintenance_mode_enable13, align 4
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  %maintenance_mode_enable15 = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 49
  %10 = ptrtoint ptr %maintenance_mode_enable15 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 1, ptr %maintenance_mode_enable15, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb14, %sw.bb12, %sw.bb
  %11 = ptrtoint ptr %maintenance_mode to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %mode, ptr %maintenance_mode, align 8
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 16
  %12 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %handlers.i, align 4
  %set_maintenance_mode.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %13, i32 0, i32 11
  %14 = ptrtoint ptr %set_maintenance_mode.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %set_maintenance_mode.i, align 4
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %sw.epilog.out_unlock_crit_edge, label %if.then.i

sw.epilog.out_unlock_crit_edge:                   ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_unlock

if.then.i:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #24
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 17
  %16 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %send_info.i, align 8
  %maintenance_mode_enable.i = getelementptr inbounds %struct.ipmi_smi, ptr %2, i32 0, i32 49
  %18 = ptrtoint ptr %maintenance_mode_enable.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %maintenance_mode_enable.i, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool3.i = icmp ne i8 %19, 0
  tail call void %15(ptr noundef %17, i1 noundef zeroext %tobool3.i) #22
  br label %out_unlock

out_unlock:                                       ; preds = %if.then.i, %sw.epilog.out_unlock_crit_edge, %if.then9.out_unlock_crit_edge, %do.body2.out_unlock_crit_edge
  %rv.0 = phi i32 [ 0, %do.body2.out_unlock_crit_edge ], [ -22, %if.then9.out_unlock_crit_edge ], [ 0, %sw.epilog.out_unlock_crit_edge ], [ 0, %if.then.i ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %maintenance_mode_lock, i32 noundef %call4) #22
  %20 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %21)
  %tobool.not.i.i = icmp ult i32 %21, 2
  br i1 %tobool.not.i.i, label %out_unlock.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

out_unlock.release_ipmi_user.exit_crit_edge:      ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %out_unlock
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %out_unlock.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %21) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rv.0, %release_ipmi_user.exit ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_set_gets_events(ptr noundef %user, i1 noundef zeroext %val) #1 align 64 {
entry:
  %msgs = alloca %struct.list_head, align 4
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %val to i8
  %intf1 = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 6
  %0 = ptrtoint ptr %intf1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %intf1, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %msgs) #22
  %2 = getelementptr inbounds %struct.list_head, ptr %msgs, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %3 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %msgs to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %msgs, ptr %msgs, align 4
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %msgs, ptr %2, align 4
  %events_lock = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 32
  %call4 = call i32 @_raw_spin_lock_irqsave(ptr noundef %events_lock) #22
  %gets_events = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 7
  %6 = ptrtoint ptr %gets_events to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %gets_events, align 4, !range !507
  call void @__sanitizer_cov_trace_cmp1(i8 %7, i8 %frombool)
  %cmp11 = icmp eq i8 %7, %frombool
  br i1 %cmp11, label %if.end.out_crit_edge, label %if.end14

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end14:                                         ; preds = %if.end
  %8 = ptrtoint ptr %gets_events to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %frombool, ptr %gets_events, align 4
  %event_waiters = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 37
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %event_waiters, i32 noundef 4) #22
  br i1 %val, label %if.then19, label %if.else

if.then19:                                        ; preds = %if.end14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !511
  call void @llvm.prefetch.p0(ptr %event_waiters, i32 1, i32 3, i32 1) #22
  %9 = call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %event_waiters, ptr %event_waiters, i32 1, ptr elementtype(i32) %event_waiters) #22, !srcloc !512
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %9, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !513
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i)
  %cmp21 = icmp eq i32 %asmresult.i.i.i.i, 1
  br i1 %cmp21, label %if.then23, label %if.then19.if.end26_crit_edge

if.then19.if.end26_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end26

if.then23:                                        ; preds = %if.then19
  %10 = load volatile ptr, ptr getelementptr inbounds (%struct.timer_list, ptr @ipmi_timer, i32 0, i32 0, i32 1), align 4
  %tobool.not.i.i.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i.not.i, label %if.then.i, label %if.then23.if.end26_crit_edge

if.then23.if.end26_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end26

if.then.i:                                        ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %11 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %11, 100
  %call1.i = call i32 @mod_timer(ptr noundef nonnull @ipmi_timer, i32 noundef %add.i) #22
  br label %if.end26

if.else:                                          ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.prefetch.p0(ptr %event_waiters, i32 1, i32 3, i32 1) #22
  %12 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %event_waiters, ptr %event_waiters, i32 1, ptr elementtype(i32) %event_waiters) #22, !srcloc !508
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then.i, %if.then23.if.end26_crit_edge, %if.then19.if.end26_crit_edge
  %delivering_events = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 35
  %13 = ptrtoint ptr %delivering_events to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %delivering_events, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool27.not = icmp eq i8 %14, 0
  br i1 %tobool27.not, label %while.cond.preheader, label %if.end26.out_crit_edge

if.end26.out_crit_edge:                           ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

while.cond.preheader:                             ; preds = %if.end26
  %waiting_events = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 33
  %15 = ptrtoint ptr %gets_events to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %gets_events, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool31.not151 = icmp eq i8 %16, 0
  br i1 %tobool31.not151, label %while.cond.preheader.out_crit_edge, label %land.rhs.lr.ph

while.cond.preheader.out_crit_edge:               ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

land.rhs.lr.ph:                                   ; preds = %while.cond.preheader
  %waiting_events_count = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 34
  %event_msg_printed = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 36
  %si_dev = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 18
  %refcount = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 3
  %arrayidx.i = getelementptr %struct.ipmi_smi, ptr %1, i32 0, i32 60, i32 3
  %arrayidx2.i = getelementptr %struct.ipmi_smi, ptr %1, i32 0, i32 60, i32 2
  br label %land.rhs

land.rhs:                                         ; preds = %do.body85.land.rhs_crit_edge, %land.rhs.lr.ph
  %flags.0152 = phi i32 [ %call4, %land.rhs.lr.ph ], [ %call93, %do.body85.land.rhs_crit_edge ]
  %17 = ptrtoint ptr %waiting_events to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %waiting_events, align 4
  %cmp.i.not = icmp eq ptr %18, %waiting_events
  br i1 %cmp.i.not, label %land.rhs.out_crit_edge, label %land.rhs.for.body_crit_edge

land.rhs.for.body_crit_edge:                      ; preds = %land.rhs
  br label %for.body

land.rhs.out_crit_edge:                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

for.body:                                         ; preds = %list_move_tail.exit.for.body_crit_edge, %land.rhs.for.body_crit_edge
  %msg.0147 = phi ptr [ %msg2.0, %list_move_tail.exit.for.body_crit_edge ], [ %18, %land.rhs.for.body_crit_edge ]
  %19 = ptrtoint ptr %msg.0147 to i32
  call void @__asan_load4_noabort(i32 %19)
  %msg2.0 = load ptr, ptr %msg.0147, align 4
  %call.i.i143 = call zeroext i1 @__list_del_entry_valid(ptr noundef %msg.0147) #22
  br i1 %call.i.i143, label %if.end.i.i, label %for.body.__list_del_entry.exit.i_crit_edge

for.body.__list_del_entry.exit.i_crit_edge:       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %msg.0147, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i, align 4
  %22 = ptrtoint ptr %msg.0147 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %msg.0147, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %23, ptr %21, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %for.body.__list_del_entry.exit.i_crit_edge
  %26 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %2, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %msg.0147, ptr noundef %27, ptr noundef nonnull %msgs) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move_tail.exit_crit_edge

__list_del_entry.exit.i.list_move_tail.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_move_tail.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %28 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %msg.0147, ptr %2, align 4
  %29 = ptrtoint ptr %msg.0147 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %msgs, ptr %msg.0147, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %msg.0147, i32 0, i32 1
  %30 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %27, ptr %prev3.i.i.i, align 4
  %31 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %msg.0147, ptr %27, align 4
  br label %list_move_tail.exit

list_move_tail.exit:                              ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move_tail.exit_crit_edge
  %cmp43.not = icmp eq ptr %msg2.0, %waiting_events
  br i1 %cmp43.not, label %for.end, label %list_move_tail.exit.for.body_crit_edge

list_move_tail.exit.for.body_crit_edge:           ; preds = %list_move_tail.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.end:                                          ; preds = %list_move_tail.exit
  %32 = ptrtoint ptr %waiting_events_count to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %waiting_events_count, align 8
  %33 = ptrtoint ptr %event_msg_printed to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %event_msg_printed, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool52.not = icmp eq i8 %34, 0
  br i1 %tobool52.not, label %for.end.if.end58_crit_edge, label %do.end56

for.end.if.end58_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end58

do.end56:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  %35 = ptrtoint ptr %si_dev to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %si_dev, align 4
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %36, ptr noundef nonnull @.str.4, ptr noundef nonnull @.str.8) #25
  %37 = ptrtoint ptr %event_msg_printed to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 0, ptr %event_msg_printed, align 1
  br label %if.end58

if.end58:                                         ; preds = %do.end56, %for.end.if.end58_crit_edge
  %38 = ptrtoint ptr %delivering_events to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 1, ptr %delivering_events, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %events_lock, i32 noundef %flags.0152) #22
  %39 = ptrtoint ptr %msgs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %msgs, align 4
  %cmp72.not149 = icmp eq ptr %40, %msgs
  br i1 %cmp72.not149, label %if.end58.do.body85_crit_edge, label %if.end58.for.body75_crit_edge

if.end58.for.body75_crit_edge:                    ; preds = %if.end58
  br label %for.body75

if.end58.do.body85_crit_edge:                     ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body85

for.body75:                                       ; preds = %deliver_local_response.exit.for.body75_crit_edge, %if.end58.for.body75_crit_edge
  %msg.1150 = phi ptr [ %msg2.1, %deliver_local_response.exit.for.body75_crit_edge ], [ %40, %if.end58.for.body75_crit_edge ]
  %41 = ptrtoint ptr %msg.1150 to i32
  call void @__asan_load4_noabort(i32 %41)
  %msg2.1 = load ptr, ptr %msg.1150, align 4
  %user76 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg.1150, i32 0, i32 2
  %42 = ptrtoint ptr %user76 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %call, ptr %user76, align 4
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %43 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %43, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %for.body75.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !501

for.body75.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %for.body75
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %for.body75
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %44 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %44)
  %.not.i.i.i.i = icmp sgt i32 %44, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.kref_get.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !498

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.kref_get.exit_crit_edge:          ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_get.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %for.body75.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %for.body75.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef %.sink.i.i.i.i) #22
  br label %kref_get.exit

kref_get.exit:                                    ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.kref_get.exit_crit_edge
  %call.i = call fastcc i32 @deliver_response(ptr noundef %1, ptr noundef %msg.1150) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i145

if.then.i145:                                     ; preds = %kref_get.exit
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i.i144 = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %arrayidx.i, i32 1, i32 3, i32 1) #22
  %45 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i, ptr %arrayidx.i, i32 1, ptr elementtype(i32) %arrayidx.i) #22, !srcloc !514
  br label %deliver_local_response.exit

if.else.i:                                        ; preds = %kref_get.exit
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i5.i = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx2.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %arrayidx2.i, i32 1, i32 3, i32 1) #22
  %46 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx2.i, ptr %arrayidx2.i, i32 1, ptr elementtype(i32) %arrayidx2.i) #22, !srcloc !514
  br label %deliver_local_response.exit

deliver_local_response.exit:                      ; preds = %if.else.i, %if.then.i145
  %cmp72.not = icmp eq ptr %msg2.1, %msgs
  br i1 %cmp72.not, label %deliver_local_response.exit.do.body85_crit_edge, label %deliver_local_response.exit.for.body75_crit_edge

deliver_local_response.exit.for.body75_crit_edge: ; preds = %deliver_local_response.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body75

deliver_local_response.exit.do.body85_crit_edge:  ; preds = %deliver_local_response.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body85

do.body85:                                        ; preds = %deliver_local_response.exit.do.body85_crit_edge, %if.end58.do.body85_crit_edge
  %call93 = call i32 @_raw_spin_lock_irqsave(ptr noundef %events_lock) #22
  %47 = ptrtoint ptr %delivering_events to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 0, ptr %delivering_events, align 4
  %48 = ptrtoint ptr %gets_events to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %gets_events, align 4, !range !507
  %tobool31.not = icmp eq i8 %49, 0
  br i1 %tobool31.not, label %do.body85.out_crit_edge, label %do.body85.land.rhs_crit_edge

do.body85.land.rhs_crit_edge:                     ; preds = %do.body85
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs

do.body85.out_crit_edge:                          ; preds = %do.body85
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

out:                                              ; preds = %do.body85.out_crit_edge, %land.rhs.out_crit_edge, %while.cond.preheader.out_crit_edge, %if.end26.out_crit_edge, %if.end.out_crit_edge
  %flags.1 = phi i32 [ %call4, %if.end.out_crit_edge ], [ %call4, %if.end26.out_crit_edge ], [ %call4, %while.cond.preheader.out_crit_edge ], [ %call93, %do.body85.out_crit_edge ], [ %flags.0152, %land.rhs.out_crit_edge ]
  call void @_raw_spin_unlock_irqrestore(ptr noundef %events_lock, i32 noundef %flags.1) #22
  %50 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %51)
  %tobool.not.i.i = icmp ult i32 %51, 2
  br i1 %tobool.not.i.i, label %out.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

out.release_ipmi_user.exit_crit_edge:             ; preds = %out
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %out
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %out.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %51) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %release_ipmi_user.exit ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %msgs) #22
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_register_for_cmd(ptr noundef %user, i8 noundef zeroext %netfn, i8 noundef zeroext %cmd, i32 noundef %chans) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %intf1 = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 6
  %0 = ptrtoint ptr %intf1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %intf1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %2 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3264, i32 noundef 24) #27
  %tobool3.not = icmp eq ptr %call7.i, null
  br i1 %tobool3.not, label %if.end.out_release_crit_edge, label %if.end5

if.end.out_release_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_release

if.end5:                                          ; preds = %if.end
  %cmd6 = getelementptr inbounds %struct.cmd_rcvr, ptr %call7.i, i32 0, i32 3
  %4 = ptrtoint ptr %cmd6 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %cmd, ptr %cmd6, align 1
  %netfn7 = getelementptr inbounds %struct.cmd_rcvr, ptr %call7.i, i32 0, i32 2
  %5 = ptrtoint ptr %netfn7 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %netfn, ptr %netfn7, align 4
  %chans8 = getelementptr inbounds %struct.cmd_rcvr, ptr %call7.i, i32 0, i32 4
  %6 = ptrtoint ptr %chans8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %chans, ptr %chans8, align 8
  %user9 = getelementptr inbounds %struct.cmd_rcvr, ptr %call7.i, i32 0, i32 1
  %7 = ptrtoint ptr %user9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call, ptr %user9, align 8
  %cmd_rcvrs_mutex = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 30
  tail call void @mutex_lock_nested(ptr noundef %cmd_rcvrs_mutex, i32 noundef 0) #22
  %dep_map.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 30, i32 5
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end5.do.end.i_crit_edge

if.end5.do.end.i_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

land.lhs.true.i:                                  ; preds = %if.end5
  %call1.i = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i.do.end.i_crit_edge

land.lhs.true.i.do.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %call4.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true3.i.do.end.i_crit_edge, label %land.lhs.true6.i

land.lhs.true3.i.do.end.i_crit_edge:              ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %.b43.i = load i1, ptr @is_cmd_rcvr_exclusive.__warned, align 1
  br i1 %.b43.i, label %land.lhs.true6.i.do.end.i_crit_edge, label %if.then.i

land.lhs.true6.i.do.end.i_crit_edge:              ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

if.then.i:                                        ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @is_cmd_rcvr_exclusive.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1653, ptr noundef nonnull @.str.1) #22
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %land.lhs.true6.i.do.end.i_crit_edge, %land.lhs.true3.i.do.end.i_crit_edge, %land.lhs.true.i.do.end.i_crit_edge, %if.end5.do.end.i_crit_edge
  %cmd_rcvrs.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 31
  %8 = ptrtoint ptr %cmd_rcvrs.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %rcvr.044.i = load volatile ptr, ptr %cmd_rcvrs.i, align 4
  %cmp.not45.i = icmp eq ptr %rcvr.044.i, %cmd_rcvrs.i
  br i1 %cmp.not45.i, label %do.end.i.if.end13_crit_edge, label %do.end.i.for.body.i_crit_edge

do.end.i.for.body.i_crit_edge:                    ; preds = %do.end.i
  br label %for.body.i

do.end.i.if.end13_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end.i.for.body.i_crit_edge
  %rcvr.046.i = phi ptr [ %rcvr.0.i, %for.inc.i.for.body.i_crit_edge ], [ %rcvr.044.i, %do.end.i.for.body.i_crit_edge ]
  %netfn13.i = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.046.i, i32 0, i32 2
  %9 = ptrtoint ptr %netfn13.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %netfn13.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %10, i8 %netfn)
  %cmp15.i = icmp eq i8 %10, %netfn
  br i1 %cmp15.i, label %land.lhs.true17.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

land.lhs.true17.i:                                ; preds = %for.body.i
  %cmd18.i = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.046.i, i32 0, i32 3
  %11 = ptrtoint ptr %cmd18.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %cmd18.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %12, i8 %cmd)
  %cmp21.i = icmp eq i8 %12, %cmd
  br i1 %cmp21.i, label %land.lhs.true23.i, label %land.lhs.true17.i.for.inc.i_crit_edge

land.lhs.true17.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

land.lhs.true23.i:                                ; preds = %land.lhs.true17.i
  %chans24.i = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.046.i, i32 0, i32 4
  %13 = ptrtoint ptr %chans24.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %chans24.i, align 4
  %and.i = and i32 %14, %chans
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool25.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool25.not.i, label %land.lhs.true23.i.for.inc.i_crit_edge, label %if.then16

land.lhs.true23.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true23.i.for.inc.i_crit_edge, %land.lhs.true17.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %15 = ptrtoint ptr %rcvr.046.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %rcvr.0.i = load volatile ptr, ptr %rcvr.046.i, align 4
  %cmp.not.i = icmp eq ptr %rcvr.0.i, %cmd_rcvrs.i
  br i1 %cmp.not.i, label %for.inc.i.if.end13_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.inc.i.if.end13_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

if.end13:                                         ; preds = %for.inc.i.if.end13_crit_edge, %do.end.i.if.end13_crit_edge
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 16
  %16 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %handlers.i, align 4
  %set_need_watch.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %17, i32 0, i32 7
  %18 = ptrtoint ptr %set_need_watch.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %set_need_watch.i, align 4
  %tobool.not.i39 = icmp eq ptr %19, null
  br i1 %tobool.not.i39, label %if.end13.smi_add_watch.exit_crit_edge, label %do.body1.i

if.end13.smi_add_watch.exit_crit_edge:            ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #24
  br label %smi_add_watch.exit

do.body1.i:                                       ; preds = %if.end13
  %watch_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 39
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %watch_lock.i) #22
  %command_waiters.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 40
  %20 = ptrtoint ptr %command_waiters.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %command_waiters.i, align 4
  %inc16.i = add i32 %21, 1
  store i32 %inc16.i, ptr %command_waiters.i, align 4
  %last_watch_mask.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 43
  %22 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %last_watch_mask.i, align 8
  %and18.i = and i32 %23, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %cmp19.not.i.not = icmp eq i32 %and18.i, 0
  br i1 %cmp19.not.i.not, label %if.then21.i, label %do.body1.i.if.end26.i_crit_edge

do.body1.i.if.end26.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end26.i

if.then21.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  %or.i = or i32 %23, 4
  %24 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %or.i, ptr %last_watch_mask.i, align 8
  %25 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %handlers.i, align 4
  %set_need_watch24.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %26, i32 0, i32 7
  %27 = ptrtoint ptr %set_need_watch24.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %set_need_watch24.i, align 4
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 17
  %29 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %send_info.i, align 8
  tail call void %28(ptr noundef %30, i32 noundef %or.i) #22
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.then21.i, %do.body1.i.if.end26.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %watch_lock.i, i32 noundef %call2.i) #22
  br label %smi_add_watch.exit

smi_add_watch.exit:                               ; preds = %if.end26.i, %if.end13.smi_add_watch.exit_crit_edge
  %31 = ptrtoint ptr %cmd_rcvrs.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %cmd_rcvrs.i, align 4
  %call.i.i40 = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i, ptr noundef %cmd_rcvrs.i, ptr noundef %32) #22
  br i1 %call.i.i40, label %if.end.i.i, label %smi_add_watch.exit.out_unlock.thread_crit_edge

smi_add_watch.exit.out_unlock.thread_crit_edge:   ; preds = %smi_add_watch.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_unlock.thread

if.end.i.i:                                       ; preds = %smi_add_watch.exit
  call void @__sanitizer_cov_trace_pc() #24
  %33 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %32, ptr %call7.i, align 8
  %prev2.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i, i32 0, i32 1
  %34 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %cmd_rcvrs.i, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !502
  %35 = ptrtoint ptr %cmd_rcvrs.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %call7.i, ptr %cmd_rcvrs.i, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  %36 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %call7.i, ptr %prev37.i.i, align 4
  br label %out_unlock.thread

out_unlock.thread:                                ; preds = %if.end.i.i, %smi_add_watch.exit.out_unlock.thread_crit_edge
  tail call void @mutex_unlock(ptr noundef %cmd_rcvrs_mutex) #22
  br label %out_release

if.then16:                                        ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @mutex_unlock(ptr noundef %cmd_rcvrs_mutex) #22
  tail call void @kfree(ptr noundef nonnull %call7.i) #22
  br label %out_release

out_release:                                      ; preds = %if.then16, %out_unlock.thread, %if.end.out_release_crit_edge
  %rv.1 = phi i32 [ -16, %if.then16 ], [ -12, %if.end.out_release_crit_edge ], [ 0, %out_unlock.thread ]
  %37 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %38)
  %tobool.not.i.i = icmp ult i32 %38, 2
  br i1 %tobool.not.i.i, label %out_release.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

out_release.release_ipmi_user.exit_crit_edge:     ; preds = %out_release
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %out_release
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %out_release.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %38) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rv.1, %release_ipmi_user.exit ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_unregister_for_cmd(ptr noundef %user, i8 noundef zeroext %netfn, i8 noundef zeroext %cmd, i32 noundef %chans) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %intf1 = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 6
  %0 = ptrtoint ptr %intf1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %intf1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %2 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef %user, ptr noundef nonnull %index)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmd_rcvrs_mutex = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 30
  tail call void @mutex_lock_nested(ptr noundef %cmd_rcvrs_mutex, i32 noundef 0) #22
  %neg = xor i32 %chans, -1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end
  %rv.053 = phi i32 [ -2, %if.end ], [ %rv.1, %for.inc.for.body_crit_edge ]
  %i.052 = phi i32 [ 0, %if.end ], [ %inc, %for.inc.for.body_crit_edge ]
  %rcvrs.051 = phi ptr [ null, %if.end ], [ %rcvrs.1, %for.inc.for.body_crit_edge ]
  %shl = shl nuw nsw i32 1, %i.052
  %and = and i32 %shl, %chans
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp2 = icmp eq i32 %and, 0
  br i1 %cmp2, label %for.body.for.inc_crit_edge, label %if.end4

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end4:                                          ; preds = %for.body
  %conv = trunc i32 %i.052 to i8
  %call5 = tail call fastcc ptr @find_cmd_rcvr(ptr noundef %1, i8 noundef zeroext %netfn, i8 noundef zeroext %cmd, i8 noundef zeroext %conv)
  %cmp6 = icmp eq ptr %call5, null
  br i1 %cmp6, label %if.end4.for.inc_crit_edge, label %if.end9

if.end4.for.inc_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end9:                                          ; preds = %if.end4
  %user10 = getelementptr inbounds %struct.cmd_rcvr, ptr %call5, i32 0, i32 1
  %3 = ptrtoint ptr %user10 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %user10, align 4
  %cmp11 = icmp eq ptr %4, %call
  br i1 %cmp11, label %if.then13, label %if.end9.for.inc_crit_edge

if.end9.for.inc_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then13:                                        ; preds = %if.end9
  %chans14 = getelementptr inbounds %struct.cmd_rcvr, ptr %call5, i32 0, i32 4
  %5 = ptrtoint ptr %chans14 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %chans14, align 4
  %and15 = and i32 %6, %neg
  store i32 %and15, ptr %chans14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %cmp17 = icmp eq i32 %and15, 0
  br i1 %cmp17, label %if.then19, label %if.then13.for.inc_crit_edge

if.then13.for.inc_crit_edge:                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then19:                                        ; preds = %if.then13
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %call5) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.then19.list_del_rcu.exit_crit_edge

if.then19.list_del_rcu.exit_crit_edge:            ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call5, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %call5 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %call5, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.then19.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call5, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %next = getelementptr inbounds %struct.cmd_rcvr, ptr %call5, i32 0, i32 5
  %14 = ptrtoint ptr %next to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %rcvrs.051, ptr %next, align 4
  br label %for.inc

for.inc:                                          ; preds = %list_del_rcu.exit, %if.then13.for.inc_crit_edge, %if.end9.for.inc_crit_edge, %if.end4.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %rcvrs.1 = phi ptr [ %rcvrs.051, %for.body.for.inc_crit_edge ], [ %rcvrs.051, %if.end4.for.inc_crit_edge ], [ %call5, %list_del_rcu.exit ], [ %rcvrs.051, %if.then13.for.inc_crit_edge ], [ %rcvrs.051, %if.end9.for.inc_crit_edge ]
  %rv.1 = phi i32 [ %rv.053, %for.body.for.inc_crit_edge ], [ %rv.053, %if.end4.for.inc_crit_edge ], [ 0, %list_del_rcu.exit ], [ 0, %if.then13.for.inc_crit_edge ], [ %rv.053, %if.end9.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.052, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.end:                                          ; preds = %for.inc
  tail call void @mutex_unlock(ptr noundef %cmd_rcvrs_mutex) #22
  tail call void @synchronize_rcu() #22
  %15 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %tobool.not.i.i = icmp ult i32 %16, 2
  br i1 %tobool.not.i.i, label %for.end.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

for.end.release_ipmi_user.exit_crit_edge:         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %for.end
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %for.end.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %16) #22
  %tobool23.not54 = icmp eq ptr %rcvrs.1, null
  br i1 %tobool23.not54, label %release_ipmi_user.exit.cleanup_crit_edge, label %while.body.lr.ph

release_ipmi_user.exit.cleanup_crit_edge:         ; preds = %release_ipmi_user.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

while.body.lr.ph:                                 ; preds = %release_ipmi_user.exit
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 16
  %watch_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 39
  %command_waiters.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 40
  %response_waiters18.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 42
  %watchdog_waiters22.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 41
  %last_watch_mask.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 43
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 17
  br label %while.body

while.body:                                       ; preds = %smi_remove_watch.exit.while.body_crit_edge, %while.body.lr.ph
  %rcvrs.255 = phi ptr [ %rcvrs.1, %while.body.lr.ph ], [ %37, %smi_remove_watch.exit.while.body_crit_edge ]
  %17 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %handlers.i, align 4
  %set_need_watch.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %18, i32 0, i32 7
  %19 = ptrtoint ptr %set_need_watch.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %set_need_watch.i, align 4
  %tobool.not.i = icmp eq ptr %20, null
  br i1 %tobool.not.i, label %while.body.smi_remove_watch.exit_crit_edge, label %do.body1.i

while.body.smi_remove_watch.exit_crit_edge:       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %smi_remove_watch.exit

do.body1.i:                                       ; preds = %while.body
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %watch_lock.i) #22
  %21 = ptrtoint ptr %command_waiters.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %command_waiters.i, align 4
  %dec16.i = add i32 %22, -1
  store i32 %dec16.i, ptr %command_waiters.i, align 4
  %23 = ptrtoint ptr %response_waiters18.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %response_waiters18.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool19.not.i = icmp ne i32 %24, 0
  %spec.select.i = zext i1 %tobool19.not.i to i32
  %25 = ptrtoint ptr %watchdog_waiters22.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %watchdog_waiters22.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool23.not.i = icmp eq i32 %26, 0
  %or25.i = or i32 %spec.select.i, 2
  %flags.addr.1.i = select i1 %tobool23.not.i, i32 %spec.select.i, i32 %or25.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec16.i)
  %tobool28.not.i = icmp eq i32 %dec16.i, 0
  %or30.i = or i32 %flags.addr.1.i, 4
  %flags.addr.2.i = select i1 %tobool28.not.i, i32 %flags.addr.1.i, i32 %or30.i
  %27 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %last_watch_mask.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %flags.addr.2.i)
  %cmp32.not.i = icmp eq i32 %28, %flags.addr.2.i
  br i1 %cmp32.not.i, label %do.body1.i.if.end39.i_crit_edge, label %if.then34.i

do.body1.i.if.end39.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39.i

if.then34.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  %29 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %flags.addr.2.i, ptr %last_watch_mask.i, align 8
  %30 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %handlers.i, align 4
  %set_need_watch37.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %31, i32 0, i32 7
  %32 = ptrtoint ptr %set_need_watch37.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %set_need_watch37.i, align 4
  %34 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %send_info.i, align 8
  tail call void %33(ptr noundef %35, i32 noundef %flags.addr.2.i) #22
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then34.i, %do.body1.i.if.end39.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %watch_lock.i, i32 noundef %call2.i) #22
  br label %smi_remove_watch.exit

smi_remove_watch.exit:                            ; preds = %if.end39.i, %while.body.smi_remove_watch.exit_crit_edge
  %next24 = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvrs.255, i32 0, i32 5
  %36 = ptrtoint ptr %next24 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %next24, align 4
  tail call void @kfree(ptr noundef nonnull %rcvrs.255) #22
  %tobool23.not = icmp eq ptr %37, null
  br i1 %tobool23.not, label %smi_remove_watch.exit.cleanup_crit_edge, label %smi_remove_watch.exit.while.body_crit_edge

smi_remove_watch.exit.while.body_crit_edge:       ; preds = %smi_remove_watch.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

smi_remove_watch.exit.cleanup_crit_edge:          ; preds = %smi_remove_watch.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup:                                          ; preds = %smi_remove_watch.exit.cleanup_crit_edge, %release_ipmi_user.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -19, %entry.cleanup_crit_edge ], [ %rv.1, %release_ipmi_user.exit.cleanup_crit_edge ], [ %rv.1, %smi_remove_watch.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_cmd_rcvr(ptr noundef %intf, i8 noundef zeroext %netfn, i8 noundef zeroext %cmd, i8 noundef zeroext %chan) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %dep_map = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 30, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true3, label %land.lhs.true.do.end_crit_edge

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true3.do.end_crit_edge, label %land.lhs.true6

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %.b44 = load i1, ptr @find_cmd_rcvr.__warned, align 1
  br i1 %.b44, label %land.lhs.true6.do.end_crit_edge, label %if.then

land.lhs.true6.do.end_crit_edge:                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

if.then:                                          ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @find_cmd_rcvr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1637, ptr noundef nonnull @.str.1) #22
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true6.do.end_crit_edge, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %cmd_rcvrs = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 31
  %0 = ptrtoint ptr %cmd_rcvrs to i32
  call void @__asan_load4_noabort(i32 %0)
  %rcvr.045 = load volatile ptr, ptr %cmd_rcvrs, align 4
  %cmp.not46 = icmp eq ptr %rcvr.045, %cmd_rcvrs
  br i1 %cmp.not46, label %do.end.cleanup_crit_edge, label %for.body.lr.ph

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.body.lr.ph:                                   ; preds = %do.end
  %conv24 = zext i8 %chan to i32
  %shl = shl nuw i32 1, %conv24
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %rcvr.047 = phi ptr [ %rcvr.045, %for.body.lr.ph ], [ %rcvr.0, %for.inc.for.body_crit_edge ]
  %netfn13 = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.047, i32 0, i32 2
  %1 = ptrtoint ptr %netfn13 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %netfn13, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %2, i8 %netfn)
  %cmp15 = icmp eq i8 %2, %netfn
  br i1 %cmp15, label %land.lhs.true17, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

land.lhs.true17:                                  ; preds = %for.body
  %cmd18 = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.047, i32 0, i32 3
  %3 = ptrtoint ptr %cmd18 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %cmd18, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %4, i8 %cmd)
  %cmp21 = icmp eq i8 %4, %cmd
  br i1 %cmp21, label %land.lhs.true23, label %land.lhs.true17.for.inc_crit_edge

land.lhs.true17.for.inc_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

land.lhs.true23:                                  ; preds = %land.lhs.true17
  %chans = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.047, i32 0, i32 4
  %5 = ptrtoint ptr %chans to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %chans, align 4
  %and = and i32 %6, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool25.not = icmp eq i32 %and, 0
  br i1 %tobool25.not, label %land.lhs.true23.for.inc_crit_edge, label %land.lhs.true23.cleanup_crit_edge

land.lhs.true23.cleanup_crit_edge:                ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true23.for.inc_crit_edge:                ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true23.for.inc_crit_edge, %land.lhs.true17.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %7 = ptrtoint ptr %rcvr.047 to i32
  call void @__asan_load4_noabort(i32 %7)
  %rcvr.0 = load volatile ptr, ptr %rcvr.047, align 4
  %cmp.not = icmp eq ptr %rcvr.0, %cmd_rcvrs
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %land.lhs.true23.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %do.end.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ], [ %rcvr.047, %land.lhs.true23.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #3

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @ipmb_checksum(ptr nocapture noundef readonly %data, i32 noundef %size) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %cmp8 = icmp sgt i32 %size, 0
  br i1 %cmp8, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %csum.011 = phi i32 [ %phi.cast, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %size.addr.010 = phi i32 [ %dec, %for.body.for.body_crit_edge ], [ %size, %entry.for.body_crit_edge ]
  %data.addr.09 = phi ptr [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %data, %entry.for.body_crit_edge ]
  %0 = ptrtoint ptr %data.addr.09 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data.addr.09, align 1
  %conv = zext i8 %1 to i32
  %add = add nuw nsw i32 %csum.011, %conv
  %dec = add nsw i32 %size.addr.010, -1
  %incdec.ptr = getelementptr i8, ptr %data.addr.09, i32 1
  %phi.cast = and i32 %add, 255
  %cmp = icmp ugt i32 %size.addr.010, 1
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end.loopexit

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.end.loopexit:                                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %phi.cast12 = trunc i32 %add to i8
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry.for.end_crit_edge
  %csum.0.lcssa = phi i8 [ 0, %entry.for.end_crit_edge ], [ %phi.cast12, %for.end.loopexit ]
  %conv4 = sub i8 0, %csum.0.lcssa
  ret i8 %conv4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_request_settime(ptr noundef %user, ptr nocapture noundef %addr, i32 noundef %msgid, ptr nocapture noundef readonly %msg, ptr noundef %user_msg_data, i32 noundef %priority, i32 noundef %retries, i32 noundef %retry_time_ms) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %0 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %index, align 4, !annotation !506
  %tobool.not = icmp eq ptr %user, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef nonnull %user, ptr noundef nonnull %index)
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %channel.i = getelementptr inbounds %struct.ipmi_addr, ptr %addr, i32 0, i32 1
  %1 = ptrtoint ptr %channel.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %channel.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 15, i16 %2)
  %cmp.i = icmp sgt i16 %2, 15
  br i1 %cmp.i, label %if.end3.if.end9_crit_edge, label %if.then6

if.end3.if.end9_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9

if.then6:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  %intf = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 6
  %3 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %intf, align 4
  %conv.i = sext i16 %2 to i32
  %5 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A", "=r,r,Ir,~{cc}"(i32 %conv.i, i32 16) #22, !srcloc !510
  %6 = trunc i32 %5 to i16
  %conv8.i = and i16 %2, %6
  %7 = ptrtoint ptr %channel.i to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %conv8.i, ptr %channel.i, align 4
  %idxprom.i = sext i16 %conv8.i to i32
  %lun11.i = getelementptr %struct.ipmi_smi, ptr %4, i32 0, i32 58, i32 %idxprom.i, i32 1
  %8 = ptrtoint ptr %lun11.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %lun11.i, align 1
  %arrayidx15.i = getelementptr %struct.ipmi_smi, ptr %4, i32 0, i32 58, i32 %idxprom.i
  %10 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx15.i, align 2
  %12 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %intf, align 4
  %call8 = tail call fastcc i32 @i_ipmi_request(ptr noundef nonnull %call, ptr noundef %13, ptr noundef %addr, i32 noundef %msgid, ptr noundef %msg, ptr noundef %user_msg_data, ptr noundef null, ptr noundef null, i32 noundef %priority, i8 noundef zeroext %11, i8 noundef zeroext %9, i32 noundef %retries, i32 noundef %retry_time_ms)
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.end3.if.end9_crit_edge
  %rv.0 = phi i32 [ %call8, %if.then6 ], [ -22, %if.end3.if.end9_crit_edge ]
  %14 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %15)
  %tobool.not.i.i = icmp ult i32 %15, 2
  br i1 %tobool.not.i.i, label %if.end9.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

if.end9.release_ipmi_user.exit_crit_edge:         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %if.end9
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %if.end9.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %15) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rv.0, %release_ipmi_user.exit ], [ -22, %entry.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i_ipmi_request(ptr noundef %user, ptr noundef %intf, ptr nocapture noundef %addr, i32 noundef %msgid, ptr nocapture noundef readonly %msg, ptr noundef %user_msg_data, ptr noundef %supplied_smi, ptr noundef %supplied_recv, i32 noundef %priority, i8 noundef zeroext %source_address, i8 noundef zeroext %source_lun, i32 noundef %retries, i32 noundef %retry_time_ms) unnamed_addr #1 align 64 {
entry:
  %ipmb_seq.i = alloca i8, align 1
  %seqid.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %supplied_recv, null
  br i1 %tobool.not, label %if.else, label %entry.if.end2_crit_edge

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end2

if.else:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 2592, i32 noundef 348) #27
  %tobool.not.i112 = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not.i112, label %if.else.out_crit_edge, label %ipmi_alloc_recv_msg.exit

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

ipmi_alloc_recv_msg.exit:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %user.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 2
  %1 = ptrtoint ptr %user.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %user.i, align 4
  %done.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 7
  %2 = ptrtoint ptr %done.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @free_recv_msg, ptr %done.i, align 8
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @recv_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @recv_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @recv_msg_inuse_count, ptr nonnull @recv_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @recv_msg_inuse_count) #22, !srcloc !514
  br label %if.end2

if.end2:                                          ; preds = %ipmi_alloc_recv_msg.exit, %entry.if.end2_crit_edge
  %recv_msg.0 = phi ptr [ %call7.i.i, %ipmi_alloc_recv_msg.exit ], [ %supplied_recv, %entry.if.end2_crit_edge ]
  %user_msg_data3 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 6
  %4 = ptrtoint ptr %user_msg_data3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %user_msg_data, ptr %user_msg_data3, align 4
  %tobool4.not = icmp eq ptr %supplied_smi, null
  br i1 %tobool4.not, label %if.else6, label %if.end2.if.end14_crit_edge

if.end2.if.end14_crit_edge:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end14

if.else6:                                         ; preds = %if.end2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %5 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i114 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %5, i32 noundef 2592, i32 noundef 576) #27
  %tobool.not.i115 = icmp eq ptr %call7.i.i114, null
  br i1 %tobool.not.i115, label %if.then9, label %ipmi_alloc_smi_msg.exit

ipmi_alloc_smi_msg.exit:                          ; preds = %if.else6
  call void @__sanitizer_cov_trace_pc() #24
  %done.i116 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i.i114, i32 0, i32 8
  %6 = ptrtoint ptr %done.i116 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @free_smi_msg, ptr %done.i116, align 4
  %user_data.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i.i114, i32 0, i32 3
  %7 = ptrtoint ptr %user_data.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %user_data.i, align 8
  %type.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i.i114, i32 0, i32 1
  %8 = ptrtoint ptr %type.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %type.i, align 8
  %call.i.i.i117 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @smi_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @smi_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @smi_msg_inuse_count, ptr nonnull @smi_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @smi_msg_inuse_count) #22, !srcloc !514
  br label %if.end14

if.then9:                                         ; preds = %if.else6
  br i1 %tobool.not, label %if.then11, label %if.then9.out_crit_edge

if.then9.out_crit_edge:                           ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.then11:                                        ; preds = %if.then9
  %user.i119 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 2
  %10 = ptrtoint ptr %user.i119 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %user.i119, align 4
  %tobool.not.i120 = icmp eq ptr %11, null
  br i1 %tobool.not.i120, label %if.then11.ipmi_free_recv_msg.exit_crit_edge, label %land.lhs.true.i121

if.then11.ipmi_free_recv_msg.exit_crit_edge:      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit

land.lhs.true.i121:                               ; preds = %if.then11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %12 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool1.not.i = icmp eq i32 %12, 0
  br i1 %tobool1.not.i, label %if.then.i122, label %land.lhs.true.i121.ipmi_free_recv_msg.exit_crit_edge

land.lhs.true.i121.ipmi_free_recv_msg.exit_crit_edge: ; preds = %land.lhs.true.i121
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit

if.then.i122:                                     ; preds = %land.lhs.true.i121
  %refcount.i = getelementptr inbounds %struct.ipmi_user, ptr %11, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #22
  %13 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %13, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i122
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.ipmi_free_recv_msg.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !498

if.end5.i.i.i.i.i.ipmi_free_recv_msg.exit_crit_edge: ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 3) #22
  br label %ipmi_free_recv_msg.exit

if.then.i.i:                                      ; preds = %if.then.i122
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %14 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i.i = getelementptr %struct.ipmi_user, ptr %11, i32 0, i32 8
  %call.i.i.i123 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %14, ptr noundef %remove_work.i.i) #22
  br label %ipmi_free_recv_msg.exit

ipmi_free_recv_msg.exit:                          ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.ipmi_free_recv_msg.exit_crit_edge, %land.lhs.true.i121.ipmi_free_recv_msg.exit_crit_edge, %if.then11.ipmi_free_recv_msg.exit_crit_edge
  %done.i124 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 7
  %15 = ptrtoint ptr %done.i124 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %done.i124, align 4
  tail call void %16(ptr noundef nonnull %recv_msg.0) #22
  br label %out

if.end14:                                         ; preds = %ipmi_alloc_smi_msg.exit, %if.end2.if.end14_crit_edge
  %smi_msg.0 = phi ptr [ %call7.i.i114, %ipmi_alloc_smi_msg.exit ], [ %supplied_smi, %if.end2.if.end14_crit_edge ]
  %17 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %20, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !515
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %if.end14.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end14.rcu_read_lock.exit_crit_edge:            ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end14
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 696, ptr noundef nonnull @.str.64) #22
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end14.rcu_read_lock.exit_crit_edge
  %in_shutdown = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 3
  %21 = ptrtoint ptr %in_shutdown to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %in_shutdown, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool15.not = icmp eq i8 %22, 0
  br i1 %tobool15.not, label %if.end17, label %rcu_read_lock.exit.out_err_crit_edge

rcu_read_lock.exit.out_err_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_err

if.end17:                                         ; preds = %rcu_read_lock.exit
  %user18 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 2
  %23 = ptrtoint ptr %user18 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %user, ptr %user18, align 4
  %tobool19.not = icmp eq ptr %user, null
  br i1 %tobool19.not, label %if.end17.if.end21_crit_edge, label %if.then20

if.end17.if.end21_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end21

if.then20:                                        ; preds = %if.end17
  %refcount = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %24 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %24, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then20.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !501

if.then20.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then20
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %25 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %.not.i.i.i.i = icmp sgt i32 %25, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.if.end21_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !498

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.if.end21_crit_edge:               ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end21

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then20.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then20.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef %.sink.i.i.i.i) #22
  br label %if.end21

if.end21:                                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.if.end21_crit_edge, %if.end17.if.end21_crit_edge
  %msgid22 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 4
  %26 = ptrtoint ptr %msgid22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %msgid, ptr %msgid22, align 4
  %msg23 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 5
  %27 = ptrtoint ptr %msg to i32
  call void @__asan_loadN_noabort(i32 %27, i32 8)
  %28 = load i64, ptr %msg, align 4
  %29 = ptrtoint ptr %msg23 to i32
  call void @__asan_storeN_noabort(i32 %29, i32 8)
  store i64 %28, ptr %msg23, align 4
  %30 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %addr, align 4
  %32 = zext i32 %31 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.161)
  switch i32 %31, label %if.else44 [
    i32 12, label %if.then25
    i32 1, label %if.end21.if.then32_crit_edge
    i32 65, label %if.end21.if.then32_crit_edge189
    i32 129, label %if.then37
    i32 4, label %if.then42
  ]

if.end21.if.then32_crit_edge189:                  ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then32

if.end21.if.then32_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then32

if.then25:                                        ; preds = %if.end21
  %33 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %msg, align 4
  %35 = and i8 %34, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool.not.i125 = icmp eq i8 %35, 0
  br i1 %tobool.not.i125, label %if.end.i, label %if.then25.out_err_crit_edge

if.then25.out_err_crit_edge:                      ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_err

if.end.i:                                         ; preds = %if.then25
  %lun.i = getelementptr inbounds %struct.ipmi_system_interface_addr, ptr %addr, i32 0, i32 2
  %36 = ptrtoint ptr %lun.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %lun.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %37)
  %cmp.i = icmp ugt i8 %37, 3
  br i1 %cmp.i, label %if.then3.i, label %if.end4.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %stats.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i.i126 = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats.i, i32 1, i32 3, i32 1) #22
  %38 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats.i, ptr %stats.i, i32 1, ptr elementtype(i32) %stats.i) #22, !srcloc !514
  br label %out_err

if.end4.i:                                        ; preds = %if.end.i
  %addr5.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 3
  %39 = ptrtoint ptr %addr to i32
  call void @__asan_loadN_noabort(i32 %39, i32 8)
  %40 = load i64, ptr %addr, align 4
  %41 = ptrtoint ptr %addr5.i to i32
  call void @__asan_storeN_noabort(i32 %41, i32 8)
  store i64 %40, ptr %addr5.i, align 4
  %42 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %msg, align 4
  %44 = zext i8 %43 to i64
  call void @__sanitizer_cov_trace_switch(i64 %44, ptr @__sancov_gen_cov_switch_values.162)
  switch i8 %43, label %if.end4.i.if.end41.i_crit_edge [
    i8 6, label %land.lhs.true.i127
    i8 8, label %if.end4.i.if.then26.i_crit_edge
  ]

if.end4.i.if.then26.i_crit_edge:                  ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then26.i

if.end4.i.if.end41.i_crit_edge:                   ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end41.i

land.lhs.true.i127:                               ; preds = %if.end4.i
  %cmd.i = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 1
  %45 = ptrtoint ptr %cmd.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %cmd.i, align 1
  %.off.i = add i8 %46, -51
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %.off.i)
  %switch.i = icmp ult i8 %.off.i, 3
  br i1 %switch.i, label %if.then22.i, label %land.lhs.true.i.i

if.then22.i:                                      ; preds = %land.lhs.true.i127
  call void @__sanitizer_cov_trace_pc() #24
  %stats23.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i1.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats23.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats23.i, i32 1, i32 3, i32 1) #22
  %47 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats23.i, ptr %stats23.i, i32 1, ptr elementtype(i32) %stats23.i) #22, !srcloc !514
  br label %out_err

land.lhs.true.i.i:                                ; preds = %land.lhs.true.i127
  %48 = and i8 %46, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %48)
  %switch.i.i = icmp eq i8 %48, 2
  br i1 %switch.i.i, label %land.lhs.true.i.i.if.then26.i_crit_edge, label %land.lhs.true.i.i.if.end41.i_crit_edge

land.lhs.true.i.i.if.end41.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end41.i

land.lhs.true.i.i.if.then26.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then26.i

if.then26.i:                                      ; preds = %land.lhs.true.i.i.if.then26.i_crit_edge, %if.end4.i.if.then26.i_crit_edge
  %maintenance_mode_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 51
  %call31.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %maintenance_mode_lock.i) #22
  %49 = load i32, ptr @maintenance_mode_timeout_ms, align 4
  %auto_maintenance_timeout.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 50
  %50 = ptrtoint ptr %auto_maintenance_timeout.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %auto_maintenance_timeout.i, align 8
  %maintenance_mode.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 48
  %51 = ptrtoint ptr %maintenance_mode.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %maintenance_mode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool34.not.i = icmp eq i32 %52, 0
  br i1 %tobool34.not.i, label %land.lhs.true35.i, label %if.then26.i.if.end39.i_crit_edge

if.then26.i.if.end39.i_crit_edge:                 ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39.i

land.lhs.true35.i:                                ; preds = %if.then26.i
  %maintenance_mode_enable.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 49
  %53 = ptrtoint ptr %maintenance_mode_enable.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %maintenance_mode_enable.i, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool36.not.i = icmp eq i8 %54, 0
  br i1 %tobool36.not.i, label %if.then37.i, label %land.lhs.true35.i.if.end39.i_crit_edge

land.lhs.true35.i.if.end39.i_crit_edge:           ; preds = %land.lhs.true35.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39.i

if.then37.i:                                      ; preds = %land.lhs.true35.i
  %55 = ptrtoint ptr %maintenance_mode_enable.i to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 1, ptr %maintenance_mode_enable.i, align 4
  %handlers.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %56 = ptrtoint ptr %handlers.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %handlers.i.i, align 4
  %set_maintenance_mode.i.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %57, i32 0, i32 11
  %58 = ptrtoint ptr %set_maintenance_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %set_maintenance_mode.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %59, null
  br i1 %tobool.not.i.i, label %if.then37.i.if.end39.i_crit_edge, label %if.then.i.i128

if.then37.i.if.end39.i_crit_edge:                 ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39.i

if.then.i.i128:                                   ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #24
  %send_info.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %60 = ptrtoint ptr %send_info.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %send_info.i.i, align 8
  tail call void %59(ptr noundef %61, i1 noundef zeroext true) #22
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then.i.i128, %if.then37.i.if.end39.i_crit_edge, %land.lhs.true35.i.if.end39.i_crit_edge, %if.then26.i.if.end39.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %maintenance_mode_lock.i, i32 noundef %call31.i) #22
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.end39.i, %land.lhs.true.i.i.if.end41.i_crit_edge, %if.end4.i.if.end41.i_crit_edge
  %data_len.i = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 2
  %62 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %data_len.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 270, i16 %63)
  %cmp43.i = icmp ugt i16 %63, 270
  br i1 %cmp43.i, label %if.then45.i, label %if.end48.i

if.then45.i:                                      ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #24
  %stats46.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i2.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats46.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats46.i, i32 1, i32 3, i32 1) #22
  %64 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats46.i, ptr %stats46.i, i32 1, ptr elementtype(i32) %stats46.i) #22, !srcloc !514
  br label %out_err

if.end48.i:                                       ; preds = %if.end41.i
  %65 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %msg, align 4
  %shl.i = shl i8 %66, 2
  %67 = ptrtoint ptr %lun.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %lun.i, align 2
  %69 = and i8 %68, 3
  %or.i = or i8 %69, %shl.i
  %data.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5
  %70 = ptrtoint ptr %data.i to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 %or.i, ptr %data.i, align 4
  %cmd56.i = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 1
  %71 = ptrtoint ptr %cmd56.i to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %cmd56.i, align 1
  %arrayidx58.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 1
  %73 = ptrtoint ptr %arrayidx58.i to i32
  call void @__asan_store1_noabort(i32 %73)
  store i8 %72, ptr %arrayidx58.i, align 1
  %msgid59.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 2
  %74 = ptrtoint ptr %msgid59.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %msgid, ptr %msgid59.i, align 4
  %user_data.i129 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 3
  %75 = ptrtoint ptr %user_data.i129 to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %recv_msg.0, ptr %user_data.i129, align 4
  %76 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %data_len.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %77)
  %cmp62.not.i = icmp eq i16 %77, 0
  br i1 %cmp62.not.i, label %if.end48.i.if.end48.thread185_crit_edge, label %if.then64.i

if.end48.i.if.end48.thread185_crit_edge:          ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end48.thread185

if.then64.i:                                      ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #24
  %conv61.i = zext i16 %77 to i32
  %arrayidx66.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 2
  %data67.i = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 3
  %78 = ptrtoint ptr %data67.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %data67.i, align 4
  %80 = call ptr @memcpy(ptr %arrayidx66.i, ptr %79, i32 %conv61.i)
  br label %if.end48.thread185

if.end48.thread185:                               ; preds = %if.then64.i, %if.end48.i.if.end48.thread185_crit_edge
  %81 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load2_noabort(i32 %81)
  %82 = load i16, ptr %data_len.i, align 2
  %conv72.i = zext i16 %82 to i32
  %add73.i = add nuw nsw i32 %conv72.i, 2
  %data_size.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 4
  %83 = ptrtoint ptr %data_size.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %add73.i, ptr %data_size.i, align 4
  %arrayidx75.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 1
  %call.i.i3.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx75.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx75.i, i32 1, i32 3, i32 1) #22
  %84 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx75.i, ptr %arrayidx75.i, i32 1, ptr elementtype(i32) %arrayidx75.i) #22, !srcloc !514
  br label %do.body

if.then32:                                        ; preds = %if.end21.if.then32_crit_edge, %if.end21.if.then32_crit_edge189
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %ipmb_seq.i) #22
  %85 = ptrtoint ptr %ipmb_seq.i to i32
  call void @__asan_store1_noabort(i32 %85)
  store i8 -1, ptr %ipmb_seq.i, align 1, !annotation !506
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %seqid.i) #22
  %86 = ptrtoint ptr %seqid.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 -1, ptr %seqid.i, align 4, !annotation !506
  %channel.i = getelementptr inbounds %struct.ipmi_addr, ptr %addr, i32 0, i32 1
  %87 = ptrtoint ptr %channel.i to i32
  call void @__asan_load2_noabort(i32 %87)
  %88 = load i16, ptr %channel.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 15, i16 %88)
  %cmp.i134 = icmp sgt i16 %88, 15
  br i1 %cmp.i134, label %if.then.i137, label %do.end.i

if.then.i137:                                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #24
  %stats.i135 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i.i136 = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats.i135, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats.i135, i32 1, i32 3, i32 1) #22
  %89 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats.i135, ptr %stats.i135, i32 1, ptr elementtype(i32) %stats.i135) #22, !srcloc !514
  br label %i_ipmi_req_ipmb.exit

do.end.i:                                         ; preds = %if.then32
  %channel_list.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 55
  %90 = ptrtoint ptr %channel_list.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile ptr, ptr %channel_list.i, align 4
  %idxprom.i = sext i16 %88 to i32
  %arrayidx3.i = getelementptr %struct.ipmi_channel, ptr %91, i32 %idxprom.i
  %92 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %arrayidx3.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %93)
  %cmp5.not.i = icmp eq i8 %93, 1
  br i1 %cmp5.not.i, label %if.end10.i, label %if.then7.i

if.then7.i:                                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %stats8.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i124.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats8.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats8.i, i32 1, i32 3, i32 1) #22
  %94 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats8.i, ptr %stats8.i, i32 1, ptr elementtype(i32) %stats8.i) #22, !srcloc !514
  br label %i_ipmi_req_ipmb.exit

if.end10.i:                                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 65, i32 %31)
  %cmp11.i = icmp eq i32 %31, 65
  br i1 %cmp11.i, label %if.then13.i, label %if.end10.i.if.end15.i_crit_edge

if.end10.i.if.end15.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.i

if.then13.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #24
  %95 = ptrtoint ptr %addr to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 1, ptr %addr, align 4
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then13.i, %if.end10.i.if.end15.i_crit_edge
  %broadcast.0.i = phi i32 [ 1, %if.then13.i ], [ 0, %if.end10.i.if.end15.i_crit_edge ]
  %retries.addr.0.i = phi i32 [ 0, %if.then13.i ], [ %retries, %if.end10.i.if.end15.i_crit_edge ]
  %data_len.i138 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 2
  %96 = ptrtoint ptr %data_len.i138 to i32
  call void @__asan_load2_noabort(i32 %96)
  %97 = load i16, ptr %data_len.i138, align 2
  %conv16.i = zext i16 %97 to i32
  %add.i = or i32 %broadcast.0.i, 10
  %add17.i = add nuw nsw i32 %add.i, %conv16.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 272, i32 %add17.i)
  %cmp18.i = icmp ugt i32 %add17.i, 272
  br i1 %cmp18.i, label %if.then20.i, label %if.end23.i

if.then20.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #24
  %stats21.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i125.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats21.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats21.i, i32 1, i32 3, i32 1) #22
  %98 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats21.i, ptr %stats21.i, i32 1, ptr elementtype(i32) %stats21.i) #22, !srcloc !514
  br label %i_ipmi_req_ipmb.exit

if.end23.i:                                       ; preds = %if.end15.i
  %lun.i139 = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %addr, i32 0, i32 3
  %99 = ptrtoint ptr %lun.i139 to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %lun.i139, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %100)
  %cmp25.i = icmp ugt i8 %100, 3
  br i1 %cmp25.i, label %if.then27.i, label %if.end30.i

if.then27.i:                                      ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #24
  %stats28.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i126.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats28.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats28.i, i32 1, i32 3, i32 1) #22
  %101 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats28.i, ptr %stats28.i, i32 1, ptr elementtype(i32) %stats28.i) #22, !srcloc !514
  br label %i_ipmi_req_ipmb.exit

if.end30.i:                                       ; preds = %if.end23.i
  %addr31.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 3
  %102 = ptrtoint ptr %addr to i32
  call void @__asan_loadN_noabort(i32 %102, i32 8)
  %103 = load i64, ptr %addr, align 4
  %104 = ptrtoint ptr %addr31.i to i32
  call void @__asan_storeN_noabort(i32 %104, i32 8)
  store i64 %103, ptr %addr31.i, align 4
  %105 = ptrtoint ptr %msg23 to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %msg23, align 4
  %107 = and i8 %106, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %107)
  %tobool.not.i140 = icmp eq i8 %107, 0
  br i1 %tobool.not.i140, label %if.else.i, label %if.then34.i

if.then34.i:                                      ; preds = %if.end30.i
  %arrayidx36.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 9
  %call.i.i127.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx36.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx36.i, i32 1, i32 3, i32 1) #22
  %108 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx36.i, ptr %arrayidx36.i, i32 1, ptr elementtype(i32) %arrayidx36.i) #22, !srcloc !514
  %conv37.i = trunc i32 %msgid to i8
  %data.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5
  %109 = ptrtoint ptr %data.i.i to i32
  call void @__asan_store1_noabort(i32 %109)
  store i8 24, ptr %data.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 1
  %110 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store1_noabort(i32 %110)
  store i8 52, ptr %arrayidx2.i.i, align 1
  %111 = ptrtoint ptr %channel.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %channel.i, align 4
  %conv.i.i = trunc i16 %112 to i8
  %arrayidx4.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 2
  %113 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_store1_noabort(i32 %113)
  store i8 %conv.i.i, ptr %arrayidx4.i.i, align 2
  br i1 %cmp11.i, label %if.then.i.i141, label %if.then34.i.if.end.i.i_crit_edge

if.then34.i.if.end.i.i_crit_edge:                 ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i.i

if.then.i.i141:                                   ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx6.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 3
  %114 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_store1_noabort(i32 %114)
  store i8 0, ptr %arrayidx6.i.i, align 1
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i141, %if.then34.i.if.end.i.i_crit_edge
  %slave_addr.i.i = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %addr, i32 0, i32 2
  %115 = ptrtoint ptr %slave_addr.i.i to i32
  call void @__asan_load1_noabort(i32 %115)
  %116 = load i8, ptr %slave_addr.i.i, align 2
  %add.i.i = add nuw nsw i32 %broadcast.0.i, 3
  %arrayidx8.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 %add.i.i
  %117 = ptrtoint ptr %arrayidx8.i.i to i32
  call void @__asan_store1_noabort(i32 %117)
  store i8 %116, ptr %arrayidx8.i.i, align 1
  %118 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %118)
  %119 = load i8, ptr %msg, align 4
  %shl.i.i = shl i8 %119, 2
  %120 = ptrtoint ptr %lun.i139 to i32
  call void @__asan_load1_noabort(i32 %120)
  %121 = load i8, ptr %lun.i139, align 1
  %122 = and i8 %121, 3
  %or.i.i = or i8 %122, %shl.i.i
  %add13.i.i = or i32 %broadcast.0.i, 4
  %arrayidx14.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 %add13.i.i
  %123 = ptrtoint ptr %arrayidx14.i.i to i32
  call void @__asan_store1_noabort(i32 %123)
  store i8 %or.i.i, ptr %arrayidx14.i.i, align 1
  %add.i.1.i.i = add i8 %116, %or.i.i
  %conv4.i.i.i = sub i8 0, %add.i.1.i.i
  %add19.i.i = add nuw nsw i32 %broadcast.0.i, 5
  %arrayidx20.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 %add19.i.i
  %124 = ptrtoint ptr %arrayidx20.i.i to i32
  call void @__asan_store1_noabort(i32 %124)
  store i8 %conv4.i.i.i, ptr %arrayidx20.i.i, align 1
  %add22.i.i = or i32 %broadcast.0.i, 6
  %arrayidx23.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 %add22.i.i
  %125 = ptrtoint ptr %arrayidx23.i.i to i32
  call void @__asan_store1_noabort(i32 %125)
  store i8 %source_address, ptr %arrayidx23.i.i, align 1
  %shl25.i.i = shl i8 %conv37.i, 2
  %or27.i.i = or i8 %shl25.i.i, %source_lun
  %add30.i.i = add nuw nsw i32 %broadcast.0.i, 7
  %arrayidx31.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 %add30.i.i
  %126 = ptrtoint ptr %arrayidx31.i.i to i32
  call void @__asan_store1_noabort(i32 %126)
  store i8 %or27.i.i, ptr %arrayidx31.i.i, align 1
  %cmd.i.i = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 1
  %127 = ptrtoint ptr %cmd.i.i to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load i8, ptr %cmd.i.i, align 1
  %add33.i.i = or i32 %broadcast.0.i, 8
  %arrayidx34.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 %add33.i.i
  %129 = ptrtoint ptr %arrayidx34.i.i to i32
  call void @__asan_store1_noabort(i32 %129)
  store i8 %128, ptr %arrayidx34.i.i, align 1
  %130 = ptrtoint ptr %data_len.i138 to i32
  call void @__asan_load2_noabort(i32 %130)
  %131 = load i16, ptr %data_len.i138, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %131)
  %cmp.not.i.i = icmp eq i16 %131, 0
  br i1 %cmp.not.i.i, label %if.end.i.i.if.end44.i.i_crit_edge, label %if.then37.i.i

if.end.i.i.if.end44.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44.i.i

if.then37.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %conv35.i.i = zext i16 %131 to i32
  %add39.i.i = add nuw nsw i32 %broadcast.0.i, 9
  %arrayidx40.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 %add39.i.i
  %data41.i.i = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 3
  %132 = ptrtoint ptr %data41.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %data41.i.i, align 4
  %134 = call ptr @memcpy(ptr %arrayidx40.i.i, ptr %133, i32 %conv35.i.i)
  br label %if.end44.i.i

if.end44.i.i:                                     ; preds = %if.then37.i.i, %if.end.i.i.if.end44.i.i_crit_edge
  %135 = ptrtoint ptr %data_len.i138 to i32
  call void @__asan_load2_noabort(i32 %135)
  %136 = load i16, ptr %data_len.i138, align 2
  %conv46.i.i = zext i16 %136 to i32
  %add47.i.i = add nuw nsw i32 %conv46.i.i, 9
  %data_size.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 4
  %137 = ptrtoint ptr %data_size.i.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 %add47.i.i, ptr %data_size.i.i, align 4
  %sub.i.i = add nuw nsw i32 %conv46.i.i, 3
  br label %for.body.i106.i.i

for.body.i106.i.i:                                ; preds = %for.body.i106.i.i.for.body.i106.i.i_crit_edge, %if.end44.i.i
  %csum.011.i97.i.i = phi i32 [ %phi.cast.i104.i.i, %for.body.i106.i.i.for.body.i106.i.i_crit_edge ], [ 0, %if.end44.i.i ]
  %size.addr.010.i98.i.i = phi i32 [ %dec.i102.i.i, %for.body.i106.i.i.for.body.i106.i.i_crit_edge ], [ %sub.i.i, %if.end44.i.i ]
  %data.addr.09.i99.i.i = phi ptr [ %incdec.ptr.i103.i.i, %for.body.i106.i.i.for.body.i106.i.i_crit_edge ], [ %arrayidx23.i.i, %if.end44.i.i ]
  %138 = ptrtoint ptr %data.addr.09.i99.i.i to i32
  call void @__asan_load1_noabort(i32 %138)
  %139 = load i8, ptr %data.addr.09.i99.i.i, align 1
  %conv.i100.i.i = zext i8 %139 to i32
  %add.i101.i.i = add nuw nsw i32 %csum.011.i97.i.i, %conv.i100.i.i
  %dec.i102.i.i = add nsw i32 %size.addr.010.i98.i.i, -1
  %incdec.ptr.i103.i.i = getelementptr i8, ptr %data.addr.09.i99.i.i, i32 1
  %phi.cast.i104.i.i = and i32 %add.i101.i.i, 255
  %cmp.i105.i.i = icmp ugt i32 %size.addr.010.i98.i.i, 1
  br i1 %cmp.i105.i.i, label %for.body.i106.i.i.for.body.i106.i.i_crit_edge, label %format_ipmb_msg.exit.i

for.body.i106.i.i.for.body.i106.i.i_crit_edge:    ; preds = %for.body.i106.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i106.i.i

format_ipmb_msg.exit.i:                           ; preds = %for.body.i106.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %phi.cast12.i107.i.i = trunc i32 %add.i101.i.i to i8
  %conv4.i108.i.i = sub i8 0, %phi.cast12.i107.i.i
  %add55.i.i = add nuw nsw i32 %add47.i.i, %broadcast.0.i
  %arrayidx56.i.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5, i32 %add55.i.i
  %140 = ptrtoint ptr %arrayidx56.i.i to i32
  call void @__asan_store1_noabort(i32 %140)
  store i8 %conv4.i108.i.i, ptr %arrayidx56.i.i, align 1
  %add59.i.i = add nuw nsw i32 %add55.i.i, 1
  %141 = ptrtoint ptr %data_size.i.i to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 %add59.i.i, ptr %data_size.i.i, align 4
  %msgid60.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 2
  %142 = ptrtoint ptr %msgid60.i.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 %msgid, ptr %msgid60.i.i, align 4
  %user_data.i142 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 3
  %143 = ptrtoint ptr %user_data.i142 to i32
  call void @__asan_store4_noabort(i32 %143)
  store ptr %recv_msg.0, ptr %user_data.i142, align 4
  br label %i_ipmi_req_ipmb.exit

if.else.i:                                        ; preds = %if.end30.i
  %seq_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 19
  %call43.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %seq_lock.i) #22
  %144 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %144)
  %145 = load i8, ptr %msg, align 4
  %146 = zext i8 %145 to i64
  call void @__sanitizer_cov_trace_switch(i64 %146, ptr @__sancov_gen_cov_switch_values.163)
  switch i8 %145, label %if.else.i.if.end50.i_crit_edge [
    i8 6, label %land.lhs.true.i.i144
    i8 8, label %if.else.i.if.then49.i_crit_edge
  ]

if.else.i.if.then49.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then49.i

if.else.i.if.end50.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end50.i

land.lhs.true.i.i144:                             ; preds = %if.else.i
  %cmd.i129.i = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 1
  %147 = ptrtoint ptr %cmd.i129.i to i32
  call void @__asan_load1_noabort(i32 %147)
  %148 = load i8, ptr %cmd.i129.i, align 1
  %149 = and i8 %148, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %149)
  %switch.i.i143 = icmp eq i8 %149, 2
  br i1 %switch.i.i143, label %land.lhs.true.i.i144.if.then49.i_crit_edge, label %land.lhs.true.i.i144.if.end50.i_crit_edge

land.lhs.true.i.i144.if.end50.i_crit_edge:        ; preds = %land.lhs.true.i.i144
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end50.i

land.lhs.true.i.i144.if.then49.i_crit_edge:       ; preds = %land.lhs.true.i.i144
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then49.i

if.then49.i:                                      ; preds = %land.lhs.true.i.i144.if.then49.i_crit_edge, %if.else.i.if.then49.i_crit_edge
  %150 = load i32, ptr @maintenance_mode_timeout_ms, align 4
  %ipmb_maintenance_mode_timeout.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 52
  %151 = ptrtoint ptr %ipmb_maintenance_mode_timeout.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %150, ptr %ipmb_maintenance_mode_timeout.i, align 8
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.then49.i, %land.lhs.true.i.i144.if.end50.i_crit_edge, %if.else.i.if.end50.i_crit_edge
  %ipmb_maintenance_mode_timeout51.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 52
  %152 = ptrtoint ptr %ipmb_maintenance_mode_timeout51.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %ipmb_maintenance_mode_timeout51.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %153)
  %tobool52.not.i = icmp ne i32 %153, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retry_time_ms)
  %cmp53.i = icmp eq i32 %retry_time_ms, 0
  %or.cond.i = and i1 %cmp53.i, %tobool52.not.i
  br i1 %or.cond.i, label %if.then55.i, label %if.end50.i.if.end56.i_crit_edge

if.end50.i.if.end56.i_crit_edge:                  ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end56.i

if.then55.i:                                      ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #24
  %154 = load i32, ptr @default_maintenance_retry_ms, align 4
  br label %if.end56.i

if.end56.i:                                       ; preds = %if.then55.i, %if.end50.i.if.end56.i_crit_edge
  %retry_time_ms.addr.0.i = phi i32 [ %154, %if.then55.i ], [ %retry_time_ms, %if.end50.i.if.end56.i_crit_edge ]
  %call57.i = call fastcc i32 @intf_next_seq(ptr noundef %intf, ptr noundef nonnull %recv_msg.0, i32 noundef %retry_time_ms.addr.0.i, i32 noundef %retries.addr.0.i, i32 noundef %broadcast.0.i, ptr noundef nonnull %ipmb_seq.i, ptr noundef nonnull %seqid.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57.i)
  %tobool58.not.i = icmp eq i32 %call57.i, 0
  br i1 %tobool58.not.i, label %if.end60.i, label %if.end56.i.out_err.i_crit_edge

if.end56.i.out_err.i_crit_edge:                   ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_err.i

if.end60.i:                                       ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx62.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 4
  %call.i.i128.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx62.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx62.i, i32 1, i32 3, i32 1) #22
  %155 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx62.i, ptr %arrayidx62.i, i32 1, ptr elementtype(i32) %arrayidx62.i) #22, !srcloc !514
  %156 = ptrtoint ptr %ipmb_seq.i to i32
  call void @__asan_load1_noabort(i32 %156)
  %157 = load i8, ptr %ipmb_seq.i, align 1
  %and64.i = zext i8 %157 to i32
  %shl.i145 = shl i32 %and64.i, 26
  %158 = ptrtoint ptr %seqid.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %seqid.i, align 4
  %and65.i = and i32 %159, 67108863
  %or.i146 = or i32 %shl.i145, %and65.i
  tail call fastcc void @format_ipmb_msg(ptr noundef nonnull %smi_msg.0, ptr noundef %msg, ptr noundef %addr, i32 noundef %or.i146, i8 noundef zeroext %157, i32 noundef %broadcast.0.i, i8 noundef zeroext %source_address, i8 noundef zeroext %source_lun) #22
  %msg_data.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 8
  %data.i147 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5
  %data_size.i148 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 4
  %160 = ptrtoint ptr %data_size.i148 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %data_size.i148, align 4
  %162 = call ptr @memcpy(ptr %msg_data.i, ptr %data.i147, i32 %161)
  %data71.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 5, i32 3
  %163 = ptrtoint ptr %data71.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store ptr %msg_data.i, ptr %data71.i, align 4
  %164 = load i32, ptr %data_size.i148, align 4
  %conv73.i = trunc i32 %164 to i16
  %data_len75.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 5, i32 2
  %165 = ptrtoint ptr %data_len75.i to i32
  call void @__asan_store2_noabort(i32 %165)
  store i16 %conv73.i, ptr %data_len75.i, align 2
  br label %out_err.i

out_err.i:                                        ; preds = %if.end60.i, %if.end56.i.out_err.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock.i, i32 noundef %call43.i) #22
  br label %i_ipmi_req_ipmb.exit

i_ipmi_req_ipmb.exit:                             ; preds = %out_err.i, %format_ipmb_msg.exit.i, %if.then27.i, %if.then20.i, %if.then7.i, %if.then.i137
  %retval.0.i149 = phi i32 [ -22, %if.then.i137 ], [ -22, %if.then7.i ], [ -90, %if.then20.i ], [ -22, %if.then27.i ], [ 0, %format_ipmb_msg.exit.i ], [ %call57.i, %out_err.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seqid.i) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %ipmb_seq.i) #22
  br label %if.end48

if.then37:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #24
  %call38 = tail call fastcc i32 @i_ipmi_req_ipmb_direct(ptr noundef %intf, ptr noundef %addr, i32 noundef %msgid, ptr noundef %msg, ptr noundef nonnull %smi_msg.0, ptr noundef nonnull %recv_msg.0)
  br label %if.end48

if.then42:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #24
  %call43 = tail call fastcc i32 @i_ipmi_req_lan(ptr noundef %intf, ptr noundef %addr, i32 noundef %msgid, ptr noundef %msg, ptr noundef nonnull %smi_msg.0, ptr noundef nonnull %recv_msg.0, i8 noundef zeroext %source_lun, i32 noundef %retries, i32 noundef %retry_time_ms)
  br label %if.end48

if.else44:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #24
  %stats = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats, i32 1, i32 3, i32 1) #22
  %166 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats, ptr %stats, i32 1, ptr elementtype(i32) %stats) #22, !srcloc !514
  br label %out_err

if.end48:                                         ; preds = %if.then42, %if.then37, %i_ipmi_req_ipmb.exit
  %rv.0 = phi i32 [ %retval.0.i149, %i_ipmi_req_ipmb.exit ], [ %call38, %if.then37 ], [ %call43, %if.then42 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rv.0)
  %tobool49.not = icmp eq i32 %rv.0, 0
  br i1 %tobool49.not, label %if.end48.do.body_crit_edge, label %if.end48.out_err_crit_edge

if.end48.out_err_crit_edge:                       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_err

if.end48.do.body_crit_edge:                       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body

out_err:                                          ; preds = %if.end48.out_err_crit_edge, %if.else44, %if.then45.i, %if.then22.i, %if.then3.i, %if.then25.out_err_crit_edge, %rcu_read_lock.exit.out_err_crit_edge
  %rv.1 = phi i32 [ %rv.0, %if.end48.out_err_crit_edge ], [ -19, %rcu_read_lock.exit.out_err_crit_edge ], [ -22, %if.then25.out_err_crit_edge ], [ -90, %if.then45.i ], [ -22, %if.then22.i ], [ -22, %if.then3.i ], [ -22, %if.else44 ]
  %done.i154 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 8
  %167 = ptrtoint ptr %done.i154 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %done.i154, align 4
  tail call void %168(ptr noundef %smi_msg.0) #22
  %user.i155 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 2
  %169 = ptrtoint ptr %user.i155 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %user.i155, align 4
  %tobool.not.i156 = icmp eq ptr %170, null
  br i1 %tobool.not.i156, label %out_err.ipmi_free_recv_msg.exit172_crit_edge, label %land.lhs.true.i158

out_err.ipmi_free_recv_msg.exit172_crit_edge:     ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit172

land.lhs.true.i158:                               ; preds = %out_err
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %171 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %171)
  %tobool1.not.i157 = icmp eq i32 %171, 0
  br i1 %tobool1.not.i157, label %if.then.i163, label %land.lhs.true.i158.ipmi_free_recv_msg.exit172_crit_edge

land.lhs.true.i158.ipmi_free_recv_msg.exit172_crit_edge: ; preds = %land.lhs.true.i158
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit172

if.then.i163:                                     ; preds = %land.lhs.true.i158
  %refcount.i159 = getelementptr inbounds %struct.ipmi_user, ptr %170, i32 0, i32 3
  %call.i.i.i.i.i.i.i160 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i159, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount.i159, i32 1, i32 3, i32 1) #22
  %172 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i159, ptr %refcount.i159, i32 1, ptr elementtype(i32) %refcount.i159) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i161 = extractvalue { i32, i32, i32 } %172, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i161)
  %cmp.i.i.i.i.i162 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i161, 1
  br i1 %cmp.i.i.i.i.i162, label %if.then.i.i169, label %if.end5.i.i.i.i.i165

if.end5.i.i.i.i.i165:                             ; preds = %if.then.i163
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i161)
  %.not.i.i.i.i.i164 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i161, 0
  br i1 %.not.i.i.i.i.i164, label %if.end5.i.i.i.i.i165.ipmi_free_recv_msg.exit172_crit_edge, label %if.then10.i.i.i.i.i166, !prof !498

if.end5.i.i.i.i.i165.ipmi_free_recv_msg.exit172_crit_edge: ; preds = %if.end5.i.i.i.i.i165
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit172

if.then10.i.i.i.i.i166:                           ; preds = %if.end5.i.i.i.i.i165
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i159, i32 noundef 3) #22
  br label %ipmi_free_recv_msg.exit172

if.then.i.i169:                                   ; preds = %if.then.i163
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %173 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i.i167 = getelementptr %struct.ipmi_user, ptr %170, i32 0, i32 8
  %call.i.i.i168 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %173, ptr noundef %remove_work.i.i167) #22
  br label %ipmi_free_recv_msg.exit172

ipmi_free_recv_msg.exit172:                       ; preds = %if.then.i.i169, %if.then10.i.i.i.i.i166, %if.end5.i.i.i.i.i165.ipmi_free_recv_msg.exit172_crit_edge, %land.lhs.true.i158.ipmi_free_recv_msg.exit172_crit_edge, %out_err.ipmi_free_recv_msg.exit172_crit_edge
  %done.i170 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0, i32 0, i32 7
  %174 = ptrtoint ptr %done.i170 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %done.i170, align 4
  tail call void %175(ptr noundef %recv_msg.0) #22
  br label %if.end58

do.body:                                          ; preds = %if.end48.do.body_crit_edge, %if.end48.thread185
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @i_ipmi_request.__UNIQUE_ID_ddebug267, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@i_ipmi_request, %if.then56)) #22
          to label %do.end [label %if.then56], !srcloc !516

if.then56:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #24
  %data_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 4
  %176 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %data_size, align 4
  %data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg.0, i32 0, i32 5
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @i_ipmi_request.__UNIQUE_ID_ddebug267, ptr noundef nonnull @.str.62, ptr noundef nonnull @.str.8, i32 noundef %177, ptr noundef %data) #22
  br label %do.end

do.end:                                           ; preds = %if.then56, %do.body
  %handlers = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %178 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %handlers, align 4
  tail call fastcc void @smi_send(ptr noundef %intf, ptr noundef %179, ptr noundef %smi_msg.0, i32 noundef %priority)
  br label %if.end58

if.end58:                                         ; preds = %do.end, %ipmi_free_recv_msg.exit172
  %rv.2 = phi i32 [ %rv.1, %ipmi_free_recv_msg.exit172 ], [ 0, %do.end ]
  %call.i173 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i173, label %if.end58.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i176

if.end58.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true.i176:                               ; preds = %if.end58
  %call1.i174 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i174)
  %tobool.not.i175 = icmp eq i32 %call1.i174, 0
  br i1 %tobool.not.i175, label %land.lhs.true.i176.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i178

land.lhs.true.i176.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i176
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true2.i178:                              ; preds = %land.lhs.true.i176
  %.b4.i177 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i177, label %land.lhs.true2.i178.rcu_read_unlock.exit_crit_edge, label %if.then.i179

land.lhs.true2.i178.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i178
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

if.then.i179:                                     ; preds = %land.lhs.true2.i178
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 724, ptr noundef nonnull @.str.65) #22
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i179, %land.lhs.true2.i178.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i176.rcu_read_unlock.exit_crit_edge, %if.end58.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !517
  %180 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i180 = and i32 %180, -16384
  %181 = inttoptr i32 %and.i.i.i.i.i180 to ptr
  %preempt_count.i.i.i.i181 = getelementptr inbounds %struct.thread_info, ptr %181, i32 0, i32 1
  %182 = ptrtoint ptr %preempt_count.i.i.i.i181 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load volatile i32, ptr %preempt_count.i.i.i.i181, align 4
  %sub.i.i.i = add i32 %183, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i181, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  br label %out

out:                                              ; preds = %rcu_read_unlock.exit, %ipmi_free_recv_msg.exit, %if.then9.out_crit_edge, %if.else.out_crit_edge
  %rv.3 = phi i32 [ %rv.2, %rcu_read_unlock.exit ], [ -12, %ipmi_free_recv_msg.exit ], [ -12, %if.then9.out_crit_edge ], [ -12, %if.else.out_crit_edge ]
  ret i32 %rv.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_request_supply_msgs(ptr noundef %user, ptr nocapture noundef %addr, i32 noundef %msgid, ptr nocapture noundef readonly %msg, ptr noundef %user_msg_data, ptr noundef %supplied_smi, ptr noundef %supplied_recv, i32 noundef %priority) #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %0 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %index, align 4, !annotation !506
  %tobool.not = icmp eq ptr %user, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef nonnull %user, ptr noundef nonnull %index)
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %channel.i = getelementptr inbounds %struct.ipmi_addr, ptr %addr, i32 0, i32 1
  %1 = ptrtoint ptr %channel.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %channel.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 15, i16 %2)
  %cmp.i = icmp sgt i16 %2, 15
  br i1 %cmp.i, label %if.end3.if.end9_crit_edge, label %if.then6

if.end3.if.end9_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9

if.then6:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  %intf = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 6
  %3 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %intf, align 4
  %conv.i = sext i16 %2 to i32
  %5 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A", "=r,r,Ir,~{cc}"(i32 %conv.i, i32 16) #22, !srcloc !510
  %6 = trunc i32 %5 to i16
  %conv8.i = and i16 %2, %6
  %7 = ptrtoint ptr %channel.i to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %conv8.i, ptr %channel.i, align 4
  %idxprom.i = sext i16 %conv8.i to i32
  %lun11.i = getelementptr %struct.ipmi_smi, ptr %4, i32 0, i32 58, i32 %idxprom.i, i32 1
  %8 = ptrtoint ptr %lun11.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %lun11.i, align 1
  %arrayidx15.i = getelementptr %struct.ipmi_smi, ptr %4, i32 0, i32 58, i32 %idxprom.i
  %10 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx15.i, align 2
  %12 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %intf, align 4
  %call8 = tail call fastcc i32 @i_ipmi_request(ptr noundef nonnull %call, ptr noundef %13, ptr noundef %addr, i32 noundef %msgid, ptr noundef %msg, ptr noundef %user_msg_data, ptr noundef %supplied_smi, ptr noundef %supplied_recv, i32 noundef %priority, i8 noundef zeroext %11, i8 noundef zeroext %9, i32 noundef -1, i32 noundef 0)
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.end3.if.end9_crit_edge
  %rv.0 = phi i32 [ %call8, %if.then6 ], [ -22, %if.end3.if.end9_crit_edge ]
  %14 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %15)
  %tobool.not.i.i = icmp ult i32 %15, 2
  br i1 %tobool.not.i.i, label %if.end9.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

if.end9.release_ipmi_user.exit_crit_edge:         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %if.end9
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %if.end9.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %15) #22
  br label %cleanup

cleanup:                                          ; preds = %release_ipmi_user.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rv.0, %release_ipmi_user.exit ], [ -22, %entry.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ipmi_poll_interface(ptr nocapture noundef readonly %user) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %intf = getelementptr inbounds %struct.ipmi_user, ptr %user, i32 0, i32 6
  %0 = ptrtoint ptr %intf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %intf, align 4
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 16
  %2 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %handlers.i, align 4
  %poll.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %poll.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %poll.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %entry.ipmi_poll.exit_crit_edge, label %if.then.i

entry.ipmi_poll.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_poll.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %1, i32 0, i32 17
  %6 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %send_info.i, align 8
  tail call void %5(ptr noundef %7) #22
  br label %ipmi_poll.exit

ipmi_poll.exit:                                   ; preds = %if.then.i, %entry.ipmi_poll.exit_crit_edge
  tail call fastcc void @handle_new_recv_msgs(ptr noundef %1) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ipmi_add_smi(ptr noundef %owner, ptr noundef %handlers, ptr noundef %send_info, ptr noundef %si_dev, i8 noundef zeroext %slave_addr) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call = tail call fastcc i32 @ipmi_init_msghandler()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 13) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 13), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3520, i32 noundef 4576) #27
  %tobool2.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %users_srcu = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 6
  %call5 = tail call i32 @__init_srcu_struct(ptr noundef %users_srcu, ptr noundef nonnull @.str.9, ptr noundef nonnull @ipmi_add_smi.__srcu_key) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #22
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  %2 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %owner, ptr %call7.i.i, align 8
  %tmp_bmc = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 9
  %bmc = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 10
  %3 = ptrtoint ptr %bmc to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %tmp_bmc, ptr %bmc, align 8
  %intfs = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 9, i32 1
  %4 = ptrtoint ptr %intfs to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %intfs, ptr %intfs, align 8
  %prev.i = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 9, i32 1, i32 1
  %5 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %intfs, ptr %prev.i, align 4
  %dyn_mutex = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 9, i32 6
  tail call void @__mutex_init(ptr noundef %dyn_mutex, ptr noundef nonnull @.str.10, ptr noundef nonnull @ipmi_add_smi.__key) #22
  %bmc_link = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 12
  %6 = ptrtoint ptr %bmc_link to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %bmc_link, ptr %bmc_link, align 8
  %prev.i266 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 12, i32 1
  %7 = ptrtoint ptr %prev.i266 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %bmc_link, ptr %prev.i266, align 4
  %bmc_reg_mutex = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 8
  tail call void @__mutex_init(ptr noundef %bmc_reg_mutex, ptr noundef nonnull @.str.12, ptr noundef nonnull @ipmi_add_smi.__key.11) #22
  %intf_num = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %intf_num to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %intf_num, align 4
  %refcount = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 2
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  %9 = ptrtoint ptr %refcount to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 1, ptr %refcount, align 8
  %bmc_reg_work = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 15
  tail call void @__init_work(ptr noundef %bmc_reg_work, i32 noundef 0) #22
  %10 = ptrtoint ptr %bmc_reg_work to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -64, ptr %bmc_reg_work, align 8
  %lockdep_map = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 15, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.14, ptr noundef nonnull @ipmi_add_smi.__key.13, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22
  %entry19 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 15, i32 1
  %11 = ptrtoint ptr %entry19 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %entry19, ptr %entry19, align 4
  %prev.i267 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 15, i32 1, i32 1
  %12 = ptrtoint ptr %prev.i267 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %entry19, ptr %prev.i267, align 8
  %func = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 15, i32 2
  %13 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @redo_bmc_reg, ptr %func, align 4
  %si_dev23 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 18
  %14 = ptrtoint ptr %si_dev23 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %si_dev, ptr %si_dev23, align 4
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 0
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 32, ptr %arrayidx, align 4
  %lun = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 0, i32 1
  %16 = ptrtoint ptr %lun to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 2, ptr %lun, align 1
  %arrayidx.1 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 1
  %17 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 32, ptr %arrayidx.1, align 2
  %lun.1 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 1, i32 1
  %18 = ptrtoint ptr %lun.1 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 2, ptr %lun.1, align 1
  %arrayidx.2 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 2
  %19 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 32, ptr %arrayidx.2, align 8
  %lun.2 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 2, i32 1
  %20 = ptrtoint ptr %lun.2 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 2, ptr %lun.2, align 1
  %arrayidx.3 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 3
  %21 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 32, ptr %arrayidx.3, align 2
  %lun.3 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 3, i32 1
  %22 = ptrtoint ptr %lun.3 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 2, ptr %lun.3, align 1
  %arrayidx.4 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 4
  %23 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 32, ptr %arrayidx.4, align 4
  %lun.4 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 4, i32 1
  %24 = ptrtoint ptr %lun.4 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 2, ptr %lun.4, align 1
  %arrayidx.5 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 5
  %25 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 32, ptr %arrayidx.5, align 2
  %lun.5 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 5, i32 1
  %26 = ptrtoint ptr %lun.5 to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 2, ptr %lun.5, align 1
  %arrayidx.6 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 6
  %27 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 32, ptr %arrayidx.6, align 8
  %lun.6 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 6, i32 1
  %28 = ptrtoint ptr %lun.6 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 2, ptr %lun.6, align 1
  %arrayidx.7 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 7
  %29 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 32, ptr %arrayidx.7, align 2
  %lun.7 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 7, i32 1
  %30 = ptrtoint ptr %lun.7 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 2, ptr %lun.7, align 1
  %arrayidx.8 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 8
  %31 = ptrtoint ptr %arrayidx.8 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 32, ptr %arrayidx.8, align 4
  %lun.8 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 8, i32 1
  %32 = ptrtoint ptr %lun.8 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 2, ptr %lun.8, align 1
  %arrayidx.9 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 9
  %33 = ptrtoint ptr %arrayidx.9 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 32, ptr %arrayidx.9, align 2
  %lun.9 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 9, i32 1
  %34 = ptrtoint ptr %lun.9 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 2, ptr %lun.9, align 1
  %arrayidx.10 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 10
  %35 = ptrtoint ptr %arrayidx.10 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 32, ptr %arrayidx.10, align 8
  %lun.10 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 10, i32 1
  %36 = ptrtoint ptr %lun.10 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 2, ptr %lun.10, align 1
  %arrayidx.11 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 11
  %37 = ptrtoint ptr %arrayidx.11 to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 32, ptr %arrayidx.11, align 2
  %lun.11 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 11, i32 1
  %38 = ptrtoint ptr %lun.11 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 2, ptr %lun.11, align 1
  %arrayidx.12 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 12
  %39 = ptrtoint ptr %arrayidx.12 to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 32, ptr %arrayidx.12, align 4
  %lun.12 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 12, i32 1
  %40 = ptrtoint ptr %lun.12 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 2, ptr %lun.12, align 1
  %arrayidx.13 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 13
  %41 = ptrtoint ptr %arrayidx.13 to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 32, ptr %arrayidx.13, align 2
  %lun.13 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 13, i32 1
  %42 = ptrtoint ptr %lun.13 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 2, ptr %lun.13, align 1
  %arrayidx.14 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 14
  %43 = ptrtoint ptr %arrayidx.14 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 32, ptr %arrayidx.14, align 8
  %lun.14 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 14, i32 1
  %44 = ptrtoint ptr %lun.14 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 2, ptr %lun.14, align 1
  %arrayidx.15 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 15
  %45 = ptrtoint ptr %arrayidx.15 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 32, ptr %arrayidx.15, align 2
  %lun.15 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 58, i32 15, i32 1
  %46 = ptrtoint ptr %lun.15 to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 2, ptr %lun.15, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %slave_addr)
  %cmp26.not = icmp eq i8 %slave_addr, 0
  br i1 %cmp26.not, label %if.end8.if.end32_crit_edge, label %if.then28

if.end8.if.end32_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end32

if.then28:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  %47 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %slave_addr, ptr %arrayidx, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then28, %if.end8.if.end32_crit_edge
  %users = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 5
  %48 = ptrtoint ptr %users to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile ptr %users, ptr %users, align 8
  %prev.i268 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 5, i32 1
  %49 = ptrtoint ptr %prev.i268 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %users, ptr %prev.i268, align 4
  %handlers33 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 16
  %50 = ptrtoint ptr %handlers33 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %handlers, ptr %handlers33, align 4
  %send_info34 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 17
  %51 = ptrtoint ptr %send_info34 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %send_info, ptr %send_info34, align 8
  %seq_lock = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 19
  tail call void @__raw_spin_lock_init(ptr noundef %seq_lock, ptr noundef nonnull @.str.16, ptr noundef nonnull @ipmi_add_smi.__key.15, i16 noundef signext 3) #22
  br label %for.body42

for.body42:                                       ; preds = %for.body42.for.body42_crit_edge, %if.end32
  %j.1283 = phi i32 [ 0, %if.end32 ], [ %inc47, %for.body42.for.body42_crit_edge ]
  %arrayidx43 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 20, i32 %j.1283
  %52 = ptrtoint ptr %arrayidx43 to i32
  call void @__asan_load1_noabort(i32 %52)
  %bf.load = load i8, ptr %arrayidx43, align 4
  %bf.clear = and i8 %bf.load, 127
  store i8 %bf.clear, ptr %arrayidx43, align 4
  %seqid = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 20, i32 %j.1283, i32 4
  %53 = ptrtoint ptr %seqid to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %seqid, align 4
  %inc47 = add nuw nsw i32 %j.1283, 1
  %exitcond.not = icmp eq i32 %inc47, 64
  br i1 %exitcond.not, label %for.end48, label %for.body42.for.body42_crit_edge

for.body42.for.body42_crit_edge:                  ; preds = %for.body42
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body42

for.end48:                                        ; preds = %for.body42
  %curr_seq = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 21
  %54 = ptrtoint ptr %curr_seq to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 0, ptr %curr_seq, align 4
  %waiting_rcv_msgs_lock = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 22
  tail call void @__raw_spin_lock_init(ptr noundef %waiting_rcv_msgs_lock, ptr noundef nonnull @.str.18, ptr noundef nonnull @ipmi_add_smi.__key.17, i16 noundef signext 3) #22
  %waiting_rcv_msgs = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 23
  %55 = ptrtoint ptr %waiting_rcv_msgs to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile ptr %waiting_rcv_msgs, ptr %waiting_rcv_msgs, align 4
  %prev.i269 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 23, i32 1
  %56 = ptrtoint ptr %prev.i269 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %waiting_rcv_msgs, ptr %prev.i269, align 8
  %recv_tasklet = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 25
  tail call void @tasklet_setup(ptr noundef %recv_tasklet, ptr noundef nonnull @smi_recv_tasklet) #22
  %watchdog_pretimeouts_to_deliver = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 24
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %watchdog_pretimeouts_to_deliver, i32 noundef 4) #22
  %57 = ptrtoint ptr %watchdog_pretimeouts_to_deliver to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile i32 0, ptr %watchdog_pretimeouts_to_deliver, align 4
  %xmit_msgs_lock = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 26
  tail call void @__raw_spin_lock_init(ptr noundef %xmit_msgs_lock, ptr noundef nonnull @.str.20, ptr noundef nonnull @ipmi_add_smi.__key.19, i16 noundef signext 3) #22
  %xmit_msgs = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 27
  %58 = ptrtoint ptr %xmit_msgs to i32
  call void @__asan_store4_noabort(i32 %58)
  store volatile ptr %xmit_msgs, ptr %xmit_msgs, align 4
  %prev.i270 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 27, i32 1
  %59 = ptrtoint ptr %prev.i270 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %xmit_msgs, ptr %prev.i270, align 8
  %hp_xmit_msgs = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 29
  %60 = ptrtoint ptr %hp_xmit_msgs to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile ptr %hp_xmit_msgs, ptr %hp_xmit_msgs, align 8
  %prev.i271 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 29, i32 1
  %61 = ptrtoint ptr %prev.i271 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %hp_xmit_msgs, ptr %prev.i271, align 4
  %events_lock = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 32
  tail call void @__raw_spin_lock_init(ptr noundef %events_lock, ptr noundef nonnull @.str.22, ptr noundef nonnull @ipmi_add_smi.__key.21, i16 noundef signext 3) #22
  %watch_lock = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 39
  tail call void @__raw_spin_lock_init(ptr noundef %watch_lock, ptr noundef nonnull @.str.24, ptr noundef nonnull @ipmi_add_smi.__key.23, i16 noundef signext 3) #22
  %event_waiters = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 37
  %call.i.i264 = tail call zeroext i1 @__kasan_check_write(ptr noundef %event_waiters, i32 noundef 4) #22
  %62 = ptrtoint ptr %event_waiters to i32
  call void @__asan_store4_noabort(i32 %62)
  store volatile i32 0, ptr %event_waiters, align 8
  %ticks_to_req_ev = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 38
  %63 = ptrtoint ptr %ticks_to_req_ev to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 1, ptr %ticks_to_req_ev, align 4
  %waiting_events = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 33
  %64 = ptrtoint ptr %waiting_events to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %waiting_events, ptr %waiting_events, align 8
  %prev.i272 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 33, i32 1
  %65 = ptrtoint ptr %prev.i272 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %waiting_events, ptr %prev.i272, align 4
  %waiting_events_count = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 34
  %66 = ptrtoint ptr %waiting_events_count to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 0, ptr %waiting_events_count, align 8
  %cmd_rcvrs_mutex = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 30
  tail call void @__mutex_init(ptr noundef %cmd_rcvrs_mutex, ptr noundef nonnull @.str.26, ptr noundef nonnull @ipmi_add_smi.__key.25) #22
  %maintenance_mode_lock = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 51
  tail call void @__raw_spin_lock_init(ptr noundef %maintenance_mode_lock, ptr noundef nonnull @.str.28, ptr noundef nonnull @ipmi_add_smi.__key.27, i16 noundef signext 3) #22
  %cmd_rcvrs = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 31
  %67 = ptrtoint ptr %cmd_rcvrs to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile ptr %cmd_rcvrs, ptr %cmd_rcvrs, align 4
  %prev.i273 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 31, i32 1
  %68 = ptrtoint ptr %prev.i273 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %cmd_rcvrs, ptr %prev.i273, align 8
  %waitq = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 7
  tail call void @__init_waitqueue_head(ptr noundef %waitq, ptr noundef nonnull @.str.30, ptr noundef nonnull @ipmi_add_smi.__key.29) #22
  br label %for.body78

for.body78:                                       ; preds = %for.body78.for.body78_crit_edge, %for.end48
  %i.0284 = phi i32 [ 0, %for.end48 ], [ %inc81, %for.body78.for.body78_crit_edge ]
  %arrayidx79 = getelementptr %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 60, i32 %i.0284
  %call.i.i265 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx79, i32 noundef 4) #22
  %69 = ptrtoint ptr %arrayidx79 to i32
  call void @__asan_store4_noabort(i32 %69)
  store volatile i32 0, ptr %arrayidx79, align 4
  %inc81 = add nuw nsw i32 %i.0284, 1
  %exitcond292.not = icmp eq i32 %inc81, 28
  br i1 %exitcond292.not, label %for.end82, label %for.body78.for.body78_crit_edge

for.body78.for.body78_crit_edge:                  ; preds = %for.body78
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body78

for.end82:                                        ; preds = %for.body78
  tail call void @mutex_lock_nested(ptr noundef nonnull @ipmi_interfaces_mutex, i32 noundef 0) #22
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @ipmi_interfaces_mutex, i32 0, i32 5), i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool85.not = icmp eq i32 %call.i, 0
  br i1 %tobool85.not, label %land.lhs.true, label %for.end82.do.end96_crit_edge

for.end82.do.end96_crit_edge:                     ; preds = %for.end82
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end96

land.lhs.true:                                    ; preds = %for.end82
  %call86 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86)
  %tobool87.not = icmp eq i32 %call86, 0
  br i1 %tobool87.not, label %land.lhs.true88, label %land.lhs.true.do.end96_crit_edge

land.lhs.true.do.end96_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end96

land.lhs.true88:                                  ; preds = %land.lhs.true
  %call89 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89)
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %land.lhs.true88.do.end96_crit_edge, label %land.lhs.true91

land.lhs.true88.do.end96_crit_edge:               ; preds = %land.lhs.true88
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end96

land.lhs.true91:                                  ; preds = %land.lhs.true88
  %.b263 = load i1, ptr @ipmi_add_smi.__warned, align 1
  br i1 %.b263, label %land.lhs.true91.do.end96_crit_edge, label %if.then93

land.lhs.true91.do.end96_crit_edge:               ; preds = %land.lhs.true91
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end96

if.then93:                                        ; preds = %land.lhs.true91
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @ipmi_add_smi.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 3566, ptr noundef nonnull @.str.1) #22
  br label %do.end96

do.end96:                                         ; preds = %if.then93, %land.lhs.true91.do.end96_crit_edge, %land.lhs.true88.do.end96_crit_edge, %land.lhs.true.do.end96_crit_edge, %for.end82.do.end96_crit_edge
  %.pn285 = load volatile ptr, ptr @ipmi_interfaces, align 4
  %cmp104.not286 = icmp eq ptr %.pn285, @ipmi_interfaces
  br i1 %cmp104.not286, label %do.end96.if.then126_crit_edge, label %do.end96.for.body106_crit_edge

do.end96.for.body106_crit_edge:                   ; preds = %do.end96
  br label %for.body106

do.end96.if.then126_crit_edge:                    ; preds = %do.end96
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then126

for.body106:                                      ; preds = %if.end112.for.body106_crit_edge, %do.end96.for.body106_crit_edge
  %.pn288 = phi ptr [ %.pn, %if.end112.for.body106_crit_edge ], [ %.pn285, %do.end96.for.body106_crit_edge ]
  %i.1287 = phi i32 [ %inc113, %if.end112.for.body106_crit_edge ], [ 0, %do.end96.for.body106_crit_edge ]
  %intf_num107 = getelementptr i8, ptr %.pn288, i32 -12
  %70 = ptrtoint ptr %intf_num107 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %intf_num107, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %71, i32 %i.1287)
  %cmp108.not = icmp eq i32 %71, %i.1287
  br i1 %cmp108.not, label %if.end112, label %for.body106.for.end123_crit_edge

for.body106.for.end123_crit_edge:                 ; preds = %for.body106
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end123

if.end112:                                        ; preds = %for.body106
  %inc113 = add i32 %i.1287, 1
  %72 = ptrtoint ptr %.pn288 to i32
  call void @__asan_load4_noabort(i32 %72)
  %.pn = load volatile ptr, ptr %.pn288, align 4
  %cmp104.not = icmp eq ptr %.pn, @ipmi_interfaces
  br i1 %cmp104.not, label %if.end112.for.end123_crit_edge, label %if.end112.for.body106_crit_edge

if.end112.for.body106_crit_edge:                  ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body106

if.end112.for.end123_crit_edge:                   ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end123

for.end123:                                       ; preds = %if.end112.for.end123_crit_edge, %for.body106.for.end123_crit_edge
  %i.1.lcssa = phi i32 [ %inc113, %if.end112.for.end123_crit_edge ], [ %i.1287, %for.body106.for.end123_crit_edge ]
  %.pn.lcssa = phi ptr [ @ipmi_interfaces, %if.end112.for.end123_crit_edge ], [ %.pn288, %for.body106.for.end123_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.1.lcssa)
  %cmp124 = icmp eq i32 %i.1.lcssa, 0
  br i1 %cmp124, label %for.end123.if.then126_crit_edge, label %if.else

for.end123.if.then126_crit_edge:                  ; preds = %for.end123
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then126

if.then126:                                       ; preds = %for.end123.if.then126_crit_edge, %do.end96.if.then126_crit_edge
  %link127 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 4
  %73 = load ptr, ptr @ipmi_interfaces, align 4
  %call.i.i274 = tail call zeroext i1 @__list_add_valid(ptr noundef %link127, ptr noundef nonnull @ipmi_interfaces, ptr noundef %73) #22
  br i1 %call.i.i274, label %if.end.i.i, label %if.then126.if.end129_crit_edge

if.then126.if.end129_crit_edge:                   ; preds = %if.then126
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end129

if.end.i.i:                                       ; preds = %if.then126
  call void @__sanitizer_cov_trace_pc() #24
  %74 = ptrtoint ptr %link127 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %73, ptr %link127, align 8
  %prev2.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 4, i32 1
  %75 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr @ipmi_interfaces, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !502
  store volatile ptr %link127, ptr @ipmi_interfaces, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %73, i32 0, i32 1
  %76 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %link127, ptr %prev37.i.i, align 4
  br label %if.end129

if.else:                                          ; preds = %for.end123
  %link128 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 4
  %prev.i275 = getelementptr inbounds %struct.list_head, ptr %.pn.lcssa, i32 0, i32 1
  %77 = ptrtoint ptr %prev.i275 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %prev.i275, align 4
  %call.i.i276 = tail call zeroext i1 @__list_add_valid(ptr noundef %link128, ptr noundef %78, ptr noundef %.pn.lcssa) #22
  br i1 %call.i.i276, label %if.end.i.i278, label %if.else.if.end129_crit_edge

if.else.if.end129_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end129

if.end.i.i278:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %79 = ptrtoint ptr %link128 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %.pn.lcssa, ptr %link128, align 8
  %prev2.i.i277 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 4, i32 1
  %80 = ptrtoint ptr %prev2.i.i277 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %78, ptr %prev2.i.i277, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !502
  %81 = ptrtoint ptr %78 to i32
  call void @__asan_store4_noabort(i32 %81)
  store volatile ptr %link128, ptr %78, align 4
  %82 = ptrtoint ptr %prev.i275 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %link128, ptr %prev.i275, align 4
  br label %if.end129

if.end129:                                        ; preds = %if.end.i.i278, %if.else.if.end129_crit_edge, %if.end.i.i, %if.then126.if.end129_crit_edge
  %i.1.lcssa296 = phi i32 [ %i.1.lcssa, %if.end.i.i278 ], [ %i.1.lcssa, %if.else.if.end129_crit_edge ], [ 0, %if.end.i.i ], [ 0, %if.then126.if.end129_crit_edge ]
  %start_processing = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %handlers, i32 0, i32 2
  %83 = ptrtoint ptr %start_processing to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %start_processing, align 4
  %call130 = tail call i32 %84(ptr noundef %send_info, ptr noundef nonnull %call7.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call130)
  %tobool131.not = icmp eq i32 %call130, 0
  br i1 %tobool131.not, label %if.end133, label %if.end129.out_err_crit_edge

if.end129.out_err_crit_edge:                      ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_err

if.end133:                                        ; preds = %if.end129
  %call134 = call fastcc i32 @__bmc_get_device_id(ptr noundef nonnull %call7.i.i, ptr noundef null, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef %i.1.lcssa296)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call134)
  %tobool135.not = icmp eq i32 %call134, 0
  br i1 %tobool135.not, label %if.end140, label %do.end139

do.end139:                                        ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #24
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %si_dev, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.8, i32 noundef %call134) #25
  br label %out_err_started

if.end140:                                        ; preds = %if.end133
  call void @mutex_lock_nested(ptr noundef %bmc_reg_mutex, i32 noundef 0) #22
  %call142 = call fastcc i32 @__scan_channels(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %id)
  call void @mutex_unlock(ptr noundef %bmc_reg_mutex) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call142)
  %tobool144.not = icmp eq i32 %call142, 0
  br i1 %tobool144.not, label %do.end150, label %out_err_bmc_reg

do.end150:                                        ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !518
  %85 = ptrtoint ptr %intf_num to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %i.1.lcssa296, ptr %intf_num, align 4
  call void @mutex_unlock(ptr noundef nonnull @ipmi_interfaces_mutex) #22
  %86 = ptrtoint ptr %si_dev23 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %si_dev23, align 4
  call fastcc void @call_smi_watchers(i32 noundef %i.1.lcssa296, ptr noundef %87)
  br label %cleanup

out_err_bmc_reg:                                  ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @ipmi_bmc_unregister(ptr noundef nonnull %call7.i.i)
  br label %out_err_started

out_err_started:                                  ; preds = %out_err_bmc_reg, %do.end139
  %rv.0 = phi i32 [ %call134, %do.end139 ], [ %call142, %out_err_bmc_reg ]
  %88 = ptrtoint ptr %handlers33 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %handlers33, align 4
  %shutdown = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %89, i32 0, i32 3
  %90 = ptrtoint ptr %shutdown to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %shutdown, align 4
  %tobool156.not = icmp eq ptr %91, null
  br i1 %tobool156.not, label %out_err_started.out_err_crit_edge, label %if.then157

out_err_started.out_err_crit_edge:                ; preds = %out_err_started
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_err

if.then157:                                       ; preds = %out_err_started
  call void @__sanitizer_cov_trace_pc() #24
  %92 = ptrtoint ptr %send_info34 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %send_info34, align 8
  call void %91(ptr noundef %93) #22
  br label %out_err

out_err:                                          ; preds = %if.then157, %out_err_started.out_err_crit_edge, %if.end129.out_err_crit_edge
  %rv.1 = phi i32 [ %call130, %if.end129.out_err_crit_edge ], [ %rv.0, %if.then157 ], [ %rv.0, %out_err_started.out_err_crit_edge ]
  %link162 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 4
  %call.i.i279 = call zeroext i1 @__list_del_entry_valid(ptr noundef %link162) #22
  br i1 %call.i.i279, label %if.end.i.i280, label %out_err.list_del_rcu.exit_crit_edge

out_err.list_del_rcu.exit_crit_edge:              ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_rcu.exit

if.end.i.i280:                                    ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 4, i32 1
  %94 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %prev.i.i, align 4
  %96 = ptrtoint ptr %link162 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %link162, align 8
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %97, i32 0, i32 1
  %98 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store ptr %95, ptr %prev1.i.i.i, align 4
  %99 = ptrtoint ptr %95 to i32
  call void @__asan_store4_noabort(i32 %99)
  store volatile ptr %97, ptr %95, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i280, %out_err.list_del_rcu.exit_crit_edge
  %prev.i281 = getelementptr inbounds %struct.ipmi_smi, ptr %call7.i.i, i32 0, i32 4, i32 1
  %100 = ptrtoint ptr %prev.i281 to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i281, align 4
  call void @mutex_unlock(ptr noundef nonnull @ipmi_interfaces_mutex) #22
  call void @synchronize_srcu(ptr noundef nonnull @ipmi_interfaces_srcu) #22
  call void @cleanup_srcu_struct(ptr noundef %users_srcu) #22
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %101 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %101, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.cleanup_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.cleanup_crit_edge:                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #22
  br label %cleanup

if.then.i:                                        ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  call fastcc void @intf_free(ptr noundef %refcount) #22, !callees !509
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.cleanup_crit_edge, %do.end150, %if.then7, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.then7 ], [ 0, %do.end150 ], [ %call, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ %rv.1, %if.end5.i.i.i.i.cleanup_crit_edge ], [ %rv.1, %if.then10.i.i.i.i ], [ %rv.1, %if.then.i ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @redo_bmc_reg(ptr noundef %work) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %in_shutdown = getelementptr i8, ptr %work, i32 -2252
  %0 = ptrtoint ptr %in_shutdown to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %in_shutdown, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr = getelementptr i8, ptr %work, i32 -2264
  %call.i = tail call fastcc i32 @__bmc_get_device_id(ptr noundef %add.ptr, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %refcount = getelementptr i8, ptr %work, i32 -2256
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.kref_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.kref_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #22
  br label %kref_put.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  tail call fastcc void @intf_free(ptr noundef %refcount) #22, !callees !509
  br label %kref_put.exit

kref_put.exit:                                    ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.kref_put.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @tasklet_setup(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @smi_recv_tasklet(ptr noundef %t) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %run_to_completion1 = getelementptr i8, ptr %t, i32 608
  %0 = ptrtoint ptr %run_to_completion1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %run_to_completion1, align 8
  %2 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !515
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 696, ptr noundef nonnull @.str.64) #22
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %do.body2, label %rcu_read_lock.exit.if.end_crit_edge

rcu_read_lock.exit.if.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.body2:                                         ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #24
  %xmit_msgs_lock = getelementptr i8, ptr %t, i32 24
  %call4 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %xmit_msgs_lock) #22
  br label %if.end

if.end:                                           ; preds = %do.body2, %rcu_read_lock.exit.if.end_crit_edge
  %flags.0 = phi i32 [ 0, %rcu_read_lock.exit.if.end_crit_edge ], [ %call4, %do.body2 ]
  %curr_msg = getelementptr i8, ptr %t, i32 76
  %6 = ptrtoint ptr %curr_msg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %curr_msg, align 4
  %cmp7 = icmp eq ptr %7, null
  br i1 %cmp7, label %land.lhs.true, label %if.end.if.end30_crit_edge

if.end.if.end30_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end30

land.lhs.true:                                    ; preds = %if.end
  %in_shutdown = getelementptr i8, ptr %t, i32 -3948
  %8 = ptrtoint ptr %in_shutdown to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %in_shutdown, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool9.not = icmp eq i8 %9, 0
  br i1 %tobool9.not, label %if.then10, label %land.lhs.true.if.end30_crit_edge

land.lhs.true.if.end30_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end30

if.then10:                                        ; preds = %land.lhs.true
  %hp_xmit_msgs = getelementptr i8, ptr %t, i32 80
  %10 = ptrtoint ptr %hp_xmit_msgs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %hp_xmit_msgs, align 4
  %cmp.i.not = icmp eq ptr %11, %hp_xmit_msgs
  br i1 %cmp.i.not, label %if.else, label %if.then10.if.end22_crit_edge

if.then10.if.end22_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

if.else:                                          ; preds = %if.then10
  %xmit_msgs = getelementptr i8, ptr %t, i32 68
  %12 = ptrtoint ptr %xmit_msgs to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %xmit_msgs, align 4
  %cmp.i55.not = icmp eq ptr %13, %xmit_msgs
  br i1 %cmp.i55.not, label %if.else.if.end30_crit_edge, label %if.else.if.end22_crit_edge

if.else.if.end22_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

if.else.if.end30_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end30

if.end22:                                         ; preds = %if.else.if.end22_crit_edge, %if.then10.if.end22_crit_edge
  %entry11.0 = phi ptr [ %11, %if.then10.if.end22_crit_edge ], [ %13, %if.else.if.end22_crit_edge ]
  %tobool23.not = icmp eq ptr %entry11.0, null
  br i1 %tobool23.not, label %if.end22.if.end30_crit_edge, label %if.then24

if.end22.if.end30_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end30

if.then24:                                        ; preds = %if.end22
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %entry11.0) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.then24.list_del.exit_crit_edge

if.then24.list_del.exit_crit_edge:                ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %entry11.0, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i.i, align 4
  %16 = ptrtoint ptr %entry11.0 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %entry11.0, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %15, ptr %prev1.i.i.i, align 4
  %19 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %17, ptr %15, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then24.list_del.exit_crit_edge
  %20 = ptrtoint ptr %entry11.0 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 256 to ptr), ptr %entry11.0, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %entry11.0, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %22 = ptrtoint ptr %curr_msg to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %entry11.0, ptr %curr_msg, align 4
  br label %if.end30

if.end30:                                         ; preds = %list_del.exit, %if.end22.if.end30_crit_edge, %if.else.if.end30_crit_edge, %land.lhs.true.if.end30_crit_edge, %if.end.if.end30_crit_edge
  %newmsg.1 = phi ptr [ null, %land.lhs.true.if.end30_crit_edge ], [ null, %if.end.if.end30_crit_edge ], [ %entry11.0, %list_del.exit ], [ null, %if.end22.if.end30_crit_edge ], [ null, %if.else.if.end30_crit_edge ]
  br i1 %tobool.not, label %if.then32, label %if.end30.if.end34_crit_edge

if.end30.if.end34_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end34

if.then32:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #24
  %xmit_msgs_lock33 = getelementptr i8, ptr %t, i32 24
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %xmit_msgs_lock33, i32 noundef %flags.0) #22
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end30.if.end34_crit_edge
  %tobool35.not = icmp eq ptr %newmsg.1, null
  br i1 %tobool35.not, label %if.end34.if.end37_crit_edge, label %if.then36

if.end34.if.end37_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end37

if.then36:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #24
  %handlers = getelementptr i8, ptr %t, i32 -1652
  %23 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %handlers, align 4
  %sender = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %24, i32 0, i32 5
  %25 = ptrtoint ptr %sender to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sender, align 4
  %send_info = getelementptr i8, ptr %t, i32 -1648
  %27 = ptrtoint ptr %send_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %send_info, align 8
  tail call void %26(ptr noundef %28, ptr noundef nonnull %newmsg.1) #22
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.end34.if.end37_crit_edge
  %call.i57 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i57, label %if.end37.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i60

if.end37.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true.i60:                                ; preds = %if.end37
  %call1.i58 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i58)
  %tobool.not.i59 = icmp eq i32 %call1.i58, 0
  br i1 %tobool.not.i59, label %land.lhs.true.i60.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i62

land.lhs.true.i60.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i60
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true2.i62:                               ; preds = %land.lhs.true.i60
  %.b4.i61 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i61, label %land.lhs.true2.i62.rcu_read_unlock.exit_crit_edge, label %if.then.i63

land.lhs.true2.i62.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i62
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

if.then.i63:                                      ; preds = %land.lhs.true2.i62
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 724, ptr noundef nonnull @.str.65) #22
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i63, %land.lhs.true2.i62.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i60.rcu_read_unlock.exit_crit_edge, %if.end37.rcu_read_unlock.exit_crit_edge
  %add.ptr = getelementptr i8, ptr %t, i32 -3960
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !517
  %29 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i64 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i64 to ptr
  %preempt_count.i.i.i.i65 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i65 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i65, align 4
  %sub.i.i.i = add i32 %32, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i65, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  tail call fastcc void @handle_new_recv_msgs(ptr noundef %add.ptr)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__bmc_get_device_id(ptr noundef %intf, ptr noundef %bmc, ptr noundef writeonly %id, ptr noundef writeonly %guid_set, ptr noundef writeonly %guid, i32 noundef %intf_num) unnamed_addr #1 align 64 {
entry:
  %id.i.i = alloca %struct.prod_dev_id, align 8
  %si.i.i258 = alloca %struct.ipmi_system_interface_addr, align 8
  %msg.i.i259 = alloca %struct.kernel_ipmi_msg, align 4
  %__wq_entry.i260 = alloca %struct.wait_queue_entry, align 4
  %msg.i.i = alloca %struct.kernel_ipmi_msg, align 4
  %si.i.i = alloca %struct.ipmi_system_interface_addr, align 8
  %__wq_entry.i = alloca %struct.wait_queue_entry, align 4
  %id71 = alloca %struct.ipmi_device_id, align 4
  %guid75 = alloca %struct.guid_t, align 1
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp.not = icmp eq ptr %intf, null
  br i1 %cmp.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %dyn_mutex = getelementptr inbounds %struct.bmc_device, ptr %bmc, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %dyn_mutex, i32 noundef 0) #22
  br label %retry_bmc_lock.preheader

retry_bmc_lock.preheader:                         ; preds = %cleanup, %if.then
  %bmc.addr.0.ph = phi ptr [ %bmc, %if.then ], [ %bmc.addr.1, %cleanup ]
  %intfs = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.0.ph, i32 0, i32 1
  %0 = ptrtoint ptr %intfs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %intfs, align 4
  %cmp.i.not314 = icmp eq ptr %1, %intfs
  br i1 %cmp.i.not314, label %retry_bmc_lock.preheader.if.then2_crit_edge, label %if.end.lr.ph

retry_bmc_lock.preheader.if.then2_crit_edge:      ; preds = %retry_bmc_lock.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then2

if.end.lr.ph:                                     ; preds = %retry_bmc_lock.preheader
  %dyn_mutex5 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.0.ph, i32 0, i32 6
  br label %if.end

if.then2:                                         ; preds = %kref_put.exit.if.then2_crit_edge, %retry_bmc_lock.preheader.if.then2_crit_edge
  %dyn_mutex3 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.0.ph, i32 0, i32 6
  call void @mutex_unlock(ptr noundef %dyn_mutex3) #22
  br label %cleanup157

if.end:                                           ; preds = %kref_put.exit.if.end_crit_edge, %if.end.lr.ph
  %2 = phi ptr [ %1, %if.end.lr.ph ], [ %9, %kref_put.exit.if.end_crit_edge ]
  %refcount = getelementptr i8, ptr %2, i32 -2240
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %3 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !501

if.end.if.end15.sink.split.i.i.i.i_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %4 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %4)
  %.not.i.i.i.i = icmp sgt i32 %4, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.kref_get.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !498

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.kref_get.exit_crit_edge:          ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_get.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef %.sink.i.i.i.i) #22
  br label %kref_get.exit

kref_get.exit:                                    ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.kref_get.exit_crit_edge
  call void @mutex_unlock(ptr noundef %dyn_mutex5) #22
  %bmc_reg_mutex = getelementptr i8, ptr %2, i32 -1340
  call void @mutex_lock_nested(ptr noundef %bmc_reg_mutex, i32 noundef 0) #22
  call void @mutex_lock_nested(ptr noundef %dyn_mutex5, i32 noundef 0) #22
  %5 = ptrtoint ptr %intfs to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %intfs, align 8
  %cmp12.not = icmp eq ptr %2, %6
  br i1 %cmp12.not, label %if.end22.loopexit, label %if.then13

if.then13:                                        ; preds = %kref_get.exit
  call void @mutex_unlock(ptr noundef %bmc_reg_mutex) #22
  %call.i.i.i.i.i.i246 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %7 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i247 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i247, label %if.end5.i.i.i.i.kref_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.kref_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #22
  br label %kref_put.exit

if.then.i:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  call fastcc void @intf_free(ptr noundef %refcount) #22, !callees !509
  br label %kref_put.exit

kref_put.exit:                                    ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.kref_put.exit_crit_edge
  %8 = ptrtoint ptr %intfs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %intfs, align 4
  %cmp.i.not = icmp eq ptr %9, %intfs
  br i1 %cmp.i.not, label %kref_put.exit.if.then2_crit_edge, label %kref_put.exit.if.end_crit_edge

kref_put.exit.if.end_crit_edge:                   ; preds = %kref_put.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

kref_put.exit.if.then2_crit_edge:                 ; preds = %kref_put.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then2

if.else:                                          ; preds = %entry
  %bmc_reg_mutex18 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 8
  tail call void @mutex_lock_nested(ptr noundef %bmc_reg_mutex18, i32 noundef 0) #22
  %bmc19 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 10
  %10 = ptrtoint ptr %bmc19 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bmc19, align 8
  %dyn_mutex20 = getelementptr inbounds %struct.bmc_device, ptr %11, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %dyn_mutex20, i32 noundef 0) #22
  %refcount21 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 2
  %call.i.i.i.i.i.i248 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount21, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %refcount21, i32 1, i32 3, i32 1) #22
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount21, ptr %refcount21, i32 1, ptr elementtype(i32) %refcount21) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i249 = extractvalue { i32, i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i249)
  %tobool1.not.i.i.i.i250 = icmp eq i32 %asmresult.i.i.i.i.i.i249, 0
  br i1 %tobool1.not.i.i.i.i250, label %if.else.if.end15.sink.split.i.i.i.i255_crit_edge, label %if.else.i.i.i.i253, !prof !501

if.else.if.end15.sink.split.i.i.i.i255_crit_edge: ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i255

if.else.i.i.i.i253:                               ; preds = %if.else
  %add.i.i.i.i251 = add i32 %asmresult.i.i.i.i.i.i249, 1
  %13 = or i32 %add.i.i.i.i251, %asmresult.i.i.i.i.i.i249
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %.not.i.i.i.i252 = icmp sgt i32 %13, -1
  br i1 %.not.i.i.i.i252, label %if.else.i.i.i.i253.if.end22_crit_edge, label %if.else.i.i.i.i253.if.end15.sink.split.i.i.i.i255_crit_edge, !prof !498

if.else.i.i.i.i253.if.end15.sink.split.i.i.i.i255_crit_edge: ; preds = %if.else.i.i.i.i253
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i255

if.else.i.i.i.i253.if.end22_crit_edge:            ; preds = %if.else.i.i.i.i253
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

if.end15.sink.split.i.i.i.i255:                   ; preds = %if.else.i.i.i.i253.if.end15.sink.split.i.i.i.i255_crit_edge, %if.else.if.end15.sink.split.i.i.i.i255_crit_edge
  %.sink.i.i.i.i254 = phi i32 [ 2, %if.else.if.end15.sink.split.i.i.i.i255_crit_edge ], [ 1, %if.else.i.i.i.i253.if.end15.sink.split.i.i.i.i255_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount21, i32 noundef %.sink.i.i.i.i254) #22
  br label %if.end22

if.end22.loopexit:                                ; preds = %kref_get.exit
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr.le = getelementptr i8, ptr %2, i32 -2248
  br label %if.end22

if.end22:                                         ; preds = %if.end22.loopexit, %if.end15.sink.split.i.i.i.i255, %if.else.i.i.i.i253.if.end22_crit_edge
  %bmc.addr.1 = phi ptr [ %11, %if.else.i.i.i.i253.if.end22_crit_edge ], [ %11, %if.end15.sink.split.i.i.i.i255 ], [ %bmc.addr.0.ph, %if.end22.loopexit ]
  %intf.addr.0 = phi ptr [ %intf, %if.else.i.i.i.i253.if.end22_crit_edge ], [ %intf, %if.end15.sink.split.i.i.i.i255 ], [ %add.ptr.le, %if.end22.loopexit ]
  %in_bmc_register = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 14
  %14 = ptrtoint ptr %in_bmc_register to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %in_bmc_register, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool23.not = icmp eq i8 %15, 0
  br i1 %tobool23.not, label %lor.lhs.false, label %if.end22.if.then134_crit_edge

if.end22.if.then134_crit_edge:                    ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then134

lor.lhs.false:                                    ; preds = %if.end22
  %dyn_id_set = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 4
  %16 = ptrtoint ptr %dyn_id_set to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %dyn_id_set, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool24.not = icmp eq i32 %17, 0
  br i1 %tobool24.not, label %lor.lhs.false.if.end27_crit_edge, label %land.lhs.true

lor.lhs.false.if.end27_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end27

land.lhs.true:                                    ; preds = %lor.lhs.false
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %18 = load volatile i32, ptr @jiffies, align 128
  %dyn_id_expiry = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 5
  %19 = ptrtoint ptr %dyn_id_expiry to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %dyn_id_expiry, align 4
  %sub = sub i32 %18, %20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp25 = icmp slt i32 %sub, 0
  br i1 %cmp25, label %land.lhs.true.if.then134_crit_edge, label %land.lhs.true.if.end27_crit_edge

land.lhs.true.if.end27_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end27

land.lhs.true.if.then134_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then134

if.end27:                                         ; preds = %land.lhs.true.if.end27_crit_edge, %lor.lhs.false.if.end27_crit_edge
  %dyn_guid_set = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 9
  %21 = ptrtoint ptr %dyn_guid_set to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %dyn_guid_set, align 4
  %bmc1.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 10
  %23 = ptrtoint ptr %bmc1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %bmc1.i, align 8
  %dyn_guid_set.i = getelementptr inbounds %struct.bmc_device, ptr %24, i32 0, i32 9
  %25 = ptrtoint ptr %dyn_guid_set.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 2, ptr %dyn_guid_set.i, align 4
  %null_user_handler.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 53
  %26 = ptrtoint ptr %null_user_handler.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @guid_handler, ptr %null_user_handler.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %msg.i.i) #22
  %27 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i.i, i32 0, i32 1
  %28 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i.i, i32 0, i32 2
  %29 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i.i, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %si.i.i) #22
  %30 = ptrtoint ptr %si.i.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 51540590847, ptr %si.i.i, align 8, !annotation !506
  %31 = ptrtoint ptr %msg.i.i to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 6, ptr %msg.i.i, align 4
  %32 = ptrtoint ptr %27 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 8, ptr %27, align 1
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %29, align 4
  %34 = ptrtoint ptr %28 to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 0, ptr %28, align 2
  %addrinfo.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 58
  %35 = ptrtoint ptr %addrinfo.i.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %addrinfo.i.i, align 4
  %lun3.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 58, i32 0, i32 1
  %37 = ptrtoint ptr %lun3.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %lun3.i.i, align 1
  %call.i.i = call fastcc i32 @i_ipmi_request(ptr noundef null, ptr noundef %intf.addr.0, ptr noundef nonnull %si.i.i, i32 noundef 0, ptr noundef nonnull %msg.i.i, ptr noundef %intf.addr.0, ptr noundef null, ptr noundef null, i32 noundef 0, i8 noundef zeroext %36, i8 noundef zeroext %38, i32 noundef -1, i32 noundef 0) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %si.i.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %msg.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %do.body3.i, label %if.then.i257

if.then.i257:                                     ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #24
  %39 = ptrtoint ptr %dyn_guid_set.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 0, ptr %dyn_guid_set.i, align 4
  br label %__get_guid.exit

do.body3.i:                                       ; preds = %if.end27
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3305) #22
  %40 = ptrtoint ptr %dyn_guid_set.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %dyn_guid_set.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %41)
  %cmp.not.i = icmp eq i32 %41, 2
  br i1 %cmp.not.i, label %if.end.i, label %do.body3.i.__get_guid.exit_crit_edge

do.body3.i.__get_guid.exit_crit_edge:             ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__get_guid.exit

if.end.i:                                         ; preds = %do.body3.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry.i) #22
  %42 = call ptr @memset(ptr %__wq_entry.i, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry.i, i32 noundef 0) #22
  %waitq.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 7
  %call935.i = call i32 @prepare_to_wait_event(ptr noundef %waitq.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 2) #22
  %43 = ptrtoint ptr %dyn_guid_set.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %dyn_guid_set.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %44)
  %cmp11.not36.i = icmp eq i32 %44, 2
  br i1 %cmp11.not36.i, label %if.end.i.cleanup.i_crit_edge, label %if.end.i.for.end.i_crit_edge

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i

if.end.i.cleanup.i_crit_edge:                     ; preds = %if.end.i
  br label %cleanup.i

cleanup.i:                                        ; preds = %cleanup.i.cleanup.i_crit_edge, %if.end.i.cleanup.i_crit_edge
  call void @schedule() #22
  %call9.i = call i32 @prepare_to_wait_event(ptr noundef %waitq.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 2) #22
  %45 = ptrtoint ptr %dyn_guid_set.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %dyn_guid_set.i, align 4
  %cmp11.not.i = icmp eq i32 %46, 2
  br i1 %cmp11.not.i, label %cleanup.i.cleanup.i_crit_edge, label %cleanup.i.for.end.i_crit_edge

cleanup.i.for.end.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i

cleanup.i.cleanup.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.i

for.end.i:                                        ; preds = %cleanup.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  call void @finish_wait(ptr noundef %waitq.i, ptr noundef nonnull %__wq_entry.i) #22
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry.i) #22
  br label %__get_guid.exit

__get_guid.exit:                                  ; preds = %for.end.i, %do.body3.i.__get_guid.exit_crit_edge, %if.then.i257
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !519
  %47 = ptrtoint ptr %null_user_handler.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %null_user_handler.i, align 4
  %48 = ptrtoint ptr %dyn_id_set to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %dyn_id_set, align 8
  store ptr @bmc_device_id_handler, ptr %null_user_handler.i, align 4
  %cc.i = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 12
  %50 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i.i259, i32 0, i32 1
  %51 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i.i259, i32 0, i32 2
  %52 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i.i259, i32 0, i32 3
  %waitq.i264 = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 7
  %si_dev.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 18
  br label %retry.i

retry.i:                                          ; preds = %if.then24.i, %__get_guid.exit
  %retry_count.0.i = phi i32 [ 0, %__get_guid.exit ], [ %inc.i, %if.then24.i ]
  %53 = ptrtoint ptr %cc.i to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 0, ptr %cc.i, align 8
  %54 = ptrtoint ptr %dyn_id_set to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 2, ptr %dyn_id_set, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %si.i.i258) #22
  %55 = ptrtoint ptr %si.i.i258 to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 51540590847, ptr %si.i.i258, align 8, !annotation !506
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %msg.i.i259) #22
  %56 = ptrtoint ptr %msg.i.i259 to i32
  call void @__asan_store1_noabort(i32 %56)
  store i8 6, ptr %msg.i.i259, align 4
  %57 = ptrtoint ptr %50 to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 1, ptr %50, align 1
  %58 = ptrtoint ptr %52 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr null, ptr %52, align 4
  %59 = ptrtoint ptr %51 to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 0, ptr %51, align 2
  %60 = ptrtoint ptr %addrinfo.i.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %addrinfo.i.i, align 4
  %62 = ptrtoint ptr %lun3.i.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %lun3.i.i, align 1
  %call.i.i265 = call fastcc i32 @i_ipmi_request(ptr noundef null, ptr noundef %intf.addr.0, ptr noundef nonnull %si.i.i258, i32 noundef 0, ptr noundef nonnull %msg.i.i259, ptr noundef %intf.addr.0, ptr noundef null, ptr noundef null, i32 noundef 0, i8 noundef zeroext %61, i8 noundef zeroext %63, i32 noundef -1, i32 noundef 0) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %msg.i.i259) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %si.i.i258) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i265)
  %tobool.not.i266 = icmp eq i32 %call.i.i265, 0
  br i1 %tobool.not.i266, label %do.body1.i, label %retry.i.land.lhs.true112_crit_edge

retry.i.land.lhs.true112_crit_edge:               ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.lhs.true112

do.body1.i:                                       ; preds = %retry.i
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 2536) #22
  %64 = ptrtoint ptr %dyn_id_set to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %dyn_id_set, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %65)
  %cmp.not.i267 = icmp eq i32 %65, 2
  br i1 %cmp.not.i267, label %if.end7.i, label %do.body1.i.do.end15.i_crit_edge

do.body1.i.do.end15.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end15.i

if.end7.i:                                        ; preds = %do.body1.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry.i260) #22
  %66 = call ptr @memset(ptr %__wq_entry.i260, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry.i260, i32 noundef 0) #22
  %call856.i = call i32 @prepare_to_wait_event(ptr noundef %waitq.i264, ptr noundef nonnull %__wq_entry.i260, i32 noundef 2) #22
  %67 = ptrtoint ptr %dyn_id_set to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %dyn_id_set, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %68)
  %cmp10.not57.i = icmp eq i32 %68, 2
  br i1 %cmp10.not57.i, label %if.end7.i.cleanup.i268_crit_edge, label %if.end7.i.for.end.i269_crit_edge

if.end7.i.for.end.i269_crit_edge:                 ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i269

if.end7.i.cleanup.i268_crit_edge:                 ; preds = %if.end7.i
  br label %cleanup.i268

cleanup.i268:                                     ; preds = %cleanup.i268.cleanup.i268_crit_edge, %if.end7.i.cleanup.i268_crit_edge
  call void @schedule() #22
  %call8.i = call i32 @prepare_to_wait_event(ptr noundef %waitq.i264, ptr noundef nonnull %__wq_entry.i260, i32 noundef 2) #22
  %69 = ptrtoint ptr %dyn_id_set to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %dyn_id_set, align 8
  %cmp10.not.i = icmp eq i32 %70, 2
  br i1 %cmp10.not.i, label %cleanup.i268.cleanup.i268_crit_edge, label %cleanup.i268.for.end.i269_crit_edge

cleanup.i268.for.end.i269_crit_edge:              ; preds = %cleanup.i268
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i269

cleanup.i268.cleanup.i268_crit_edge:              ; preds = %cleanup.i268
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.i268

for.end.i269:                                     ; preds = %cleanup.i268.for.end.i269_crit_edge, %if.end7.i.for.end.i269_crit_edge
  call void @finish_wait(ptr noundef %waitq.i264, ptr noundef nonnull %__wq_entry.i260) #22
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry.i260) #22
  %71 = ptrtoint ptr %dyn_id_set to i32
  call void @__asan_load4_noabort(i32 %71)
  %.pr.i = load i32, ptr %dyn_id_set, align 8
  br label %do.end15.i

do.end15.i:                                       ; preds = %for.end.i269, %do.body1.i.do.end15.i_crit_edge
  %72 = phi i32 [ %65, %do.body1.i.do.end15.i_crit_edge ], [ %.pr.i, %for.end.i269 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool17.not.i = icmp eq i32 %72, 0
  br i1 %tobool17.not.i, label %if.then18.i, label %if.end32

if.then18.i:                                      ; preds = %do.end15.i
  %73 = ptrtoint ptr %cc.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %cc.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %74)
  %cmp20.not.i = icmp eq i8 %74, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %retry_count.0.i)
  %exitcond.not.i = icmp eq i32 %retry_count.0.i, 5
  %or.cond.i = select i1 %cmp20.not.i, i1 true, i1 %exitcond.not.i
  br i1 %or.cond.i, label %__get_device_id.exit, label %if.then24.i

if.then24.i:                                      ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #24
  %inc.i = add nuw nsw i32 %retry_count.0.i, 1
  call void @msleep(i32 noundef 500) #22
  %75 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %si_dev.i, align 4
  %77 = ptrtoint ptr %cc.i to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %cc.i, align 8
  %conv29.i = zext i8 %78 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %76, ptr noundef nonnull @.str.85, ptr noundef nonnull @.str.8, i32 noundef %conv29.i) #25
  br label %retry.i

__get_device_id.exit:                             ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !520
  br label %land.lhs.true112

if.end32:                                         ; preds = %do.end15.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !520
  %79 = ptrtoint ptr %null_user_handler.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr null, ptr %null_user_handler.i, align 4
  %bmc_registered = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 11
  %80 = ptrtoint ptr %bmc_registered to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %bmc_registered, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %81)
  %tobool33.not = icmp eq i8 %81, 0
  br i1 %tobool33.not, label %if.end32.if.then70thread-pre-split_crit_edge, label %lor.lhs.false34

if.end32.if.then70thread-pre-split_crit_edge:     ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then70thread-pre-split

lor.lhs.false34:                                  ; preds = %if.end32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool35.not = icmp eq i32 %22, 0
  br i1 %tobool35.not, label %land.lhs.true36, label %lor.lhs.false34.lor.lhs.false39_crit_edge

lor.lhs.false34.lor.lhs.false39_crit_edge:        ; preds = %lor.lhs.false34
  call void @__sanitizer_cov_trace_pc() #24
  br label %lor.lhs.false39

land.lhs.true36:                                  ; preds = %lor.lhs.false34
  %82 = ptrtoint ptr %dyn_guid_set to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %dyn_guid_set, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %tobool38.not = icmp eq i32 %83, 0
  br i1 %tobool38.not, label %land.lhs.true36.lor.lhs.false39_crit_edge, label %land.lhs.true36.if.then70_crit_edge

land.lhs.true36.if.then70_crit_edge:              ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then70

land.lhs.true36.lor.lhs.false39_crit_edge:        ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #24
  br label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %land.lhs.true36.lor.lhs.false39_crit_edge, %lor.lhs.false34.lor.lhs.false39_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool40.not = icmp eq i32 %49, 0
  br i1 %tobool40.not, label %land.lhs.true41, label %lor.lhs.false39.lor.lhs.false44_crit_edge

lor.lhs.false39.lor.lhs.false44_crit_edge:        ; preds = %lor.lhs.false39
  call void @__sanitizer_cov_trace_pc() #24
  br label %lor.lhs.false44

land.lhs.true41:                                  ; preds = %lor.lhs.false39
  %84 = ptrtoint ptr %dyn_id_set to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %dyn_id_set, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool43.not = icmp eq i32 %85, 0
  br i1 %tobool43.not, label %land.lhs.true41.lor.lhs.false44_crit_edge, label %land.lhs.true41.if.then70thread-pre-split_crit_edge

land.lhs.true41.if.then70thread-pre-split_crit_edge: ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then70thread-pre-split

land.lhs.true41.lor.lhs.false44_crit_edge:        ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #24
  br label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %land.lhs.true41.lor.lhs.false44_crit_edge, %lor.lhs.false39.lor.lhs.false44_crit_edge
  br i1 %tobool35.not, label %lor.lhs.false44.lor.lhs.false52_crit_edge, label %land.lhs.true46

lor.lhs.false44.lor.lhs.false52_crit_edge:        ; preds = %lor.lhs.false44
  call void @__sanitizer_cov_trace_pc() #24
  br label %lor.lhs.false52

land.lhs.true46:                                  ; preds = %lor.lhs.false44
  %86 = ptrtoint ptr %dyn_guid_set to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %dyn_guid_set, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %tobool48.not = icmp eq i32 %87, 0
  br i1 %tobool48.not, label %land.lhs.true46.lor.lhs.false52_crit_edge, label %land.lhs.true49

land.lhs.true46.lor.lhs.false52_crit_edge:        ; preds = %land.lhs.true46
  call void @__sanitizer_cov_trace_pc() #24
  br label %lor.lhs.false52

land.lhs.true49:                                  ; preds = %land.lhs.true46
  %guid50 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 7
  %fetch_guid = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 8
  %bcmp.i = call i32 @bcmp(ptr noundef dereferenceable(16) %guid50, ptr noundef dereferenceable(16) %fetch_guid, i32 16) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp.i270 = icmp eq i32 %bcmp.i, 0
  br i1 %cmp.i270, label %land.lhs.true49.lor.lhs.false52_crit_edge, label %land.lhs.true49.if.then70thread-pre-split_crit_edge

land.lhs.true49.if.then70thread-pre-split_crit_edge: ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then70thread-pre-split

land.lhs.true49.lor.lhs.false52_crit_edge:        ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #24
  br label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %land.lhs.true49.lor.lhs.false52_crit_edge, %land.lhs.true46.lor.lhs.false52_crit_edge, %lor.lhs.false44.lor.lhs.false52_crit_edge
  %id53 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 2
  %88 = ptrtoint ptr %id53 to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %id53, align 8
  %fetch_id = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 3
  %90 = ptrtoint ptr %fetch_id to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %fetch_id, align 8
  call void @__sanitizer_cov_trace_cmp1(i8 %89, i8 %91)
  %cmp56.not = icmp eq i8 %89, %91
  br i1 %cmp56.not, label %lor.lhs.false58, label %lor.lhs.false52.if.then70thread-pre-split_crit_edge

lor.lhs.false52.if.then70thread-pre-split_crit_edge: ; preds = %lor.lhs.false52
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then70thread-pre-split

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %manufacturer_id = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 2, i32 6
  %92 = ptrtoint ptr %manufacturer_id to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %manufacturer_id, align 8
  %manufacturer_id61 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 3, i32 6
  %94 = ptrtoint ptr %manufacturer_id61 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %manufacturer_id61, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %93, i32 %95)
  %cmp62.not = icmp eq i32 %93, %95
  br i1 %cmp62.not, label %lor.lhs.false64, label %lor.lhs.false58.if.then70thread-pre-split_crit_edge

lor.lhs.false58.if.then70thread-pre-split_crit_edge: ; preds = %lor.lhs.false58
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then70thread-pre-split

lor.lhs.false64:                                  ; preds = %lor.lhs.false58
  %product_id = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 2, i32 7
  %96 = ptrtoint ptr %product_id to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %product_id, align 4
  %product_id67 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 3, i32 7
  %98 = ptrtoint ptr %product_id67 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %product_id67, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %97, i32 %99)
  %cmp68.not = icmp eq i32 %97, %99
  br i1 %cmp68.not, label %if.else100, label %lor.lhs.false64.if.then70thread-pre-split_crit_edge

lor.lhs.false64.if.then70thread-pre-split_crit_edge: ; preds = %lor.lhs.false64
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then70thread-pre-split

if.then70thread-pre-split:                        ; preds = %lor.lhs.false64.if.then70thread-pre-split_crit_edge, %lor.lhs.false58.if.then70thread-pre-split_crit_edge, %lor.lhs.false52.if.then70thread-pre-split_crit_edge, %land.lhs.true49.if.then70thread-pre-split_crit_edge, %land.lhs.true41.if.then70thread-pre-split_crit_edge, %if.end32.if.then70thread-pre-split_crit_edge
  %100 = ptrtoint ptr %dyn_guid_set to i32
  call void @__asan_load4_noabort(i32 %100)
  %.pr = load i32, ptr %dyn_guid_set, align 4
  br label %if.then70

if.then70:                                        ; preds = %if.then70thread-pre-split, %land.lhs.true36.if.then70_crit_edge
  %101 = phi i32 [ %.pr, %if.then70thread-pre-split ], [ %83, %land.lhs.true36.if.then70_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id71) #22
  %fetch_id72 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 3
  %102 = call ptr @memcpy(ptr %id71, ptr %fetch_id72, i32 24)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %guid75) #22
  %fetch_guid76 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 8
  %103 = call ptr @memcpy(ptr %guid75, ptr %fetch_guid76, i32 16)
  %dyn_mutex77 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 6
  call void @mutex_unlock(ptr noundef %dyn_mutex77) #22
  call fastcc void @__ipmi_bmc_unregister(ptr noundef %intf.addr.0)
  %104 = ptrtoint ptr %bmc1.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %bmc1.i, align 8
  %id79 = getelementptr inbounds %struct.bmc_device, ptr %105, i32 0, i32 2
  %106 = call ptr @memcpy(ptr %id79, ptr %id71, i32 24)
  %107 = load ptr, ptr %bmc1.i, align 8
  %dyn_guid_set81 = getelementptr inbounds %struct.bmc_device, ptr %107, i32 0, i32 9
  %108 = ptrtoint ptr %dyn_guid_set81 to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 %101, ptr %dyn_guid_set81, align 4
  %109 = load ptr, ptr %bmc1.i, align 8
  %guid83 = getelementptr inbounds %struct.bmc_device, ptr %109, i32 0, i32 7
  %110 = call ptr @memcpy(ptr %guid83, ptr %guid75, i32 16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %101)
  %tobool84 = icmp ne i32 %101, 0
  %111 = ptrtoint ptr %in_bmc_register to i32
  call void @__asan_store1_noabort(i32 %111)
  store i8 1, ptr %in_bmc_register, align 4
  %bmc_reg_mutex.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 8
  call void @mutex_unlock(ptr noundef %bmc_reg_mutex.i) #22
  call void @mutex_lock_nested(ptr noundef nonnull @ipmidriver_mutex, i32 noundef 0) #22
  br i1 %tobool84, label %if.then.i272, label %if.else.i

if.then.i272:                                     ; preds = %if.then70
  %call.i.i271 = call ptr @driver_find_device(ptr noundef getelementptr inbounds (%struct.platform_driver, ptr @ipmidriver, i32 0, i32 5), ptr noundef null, ptr noundef nonnull %guid75, ptr noundef nonnull @__find_bmc_guid) #22
  %tobool.not.i.i = icmp eq ptr %call.i.i271, null
  br i1 %tobool.not.i.i, label %if.then.i272.if.else11.i_crit_edge, label %if.then.i.i

if.then.i272.if.else11.i_crit_edge:               ; preds = %if.then.i272
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else11.i

if.then.i.i:                                      ; preds = %if.then.i272
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr.i.i = getelementptr i8, ptr %call.i.i271, i32 -16
  call void @put_device(ptr noundef nonnull %call.i.i271) #22
  br label %if.end.i273

if.else.i:                                        ; preds = %if.then70
  %product_id.i = getelementptr inbounds %struct.ipmi_device_id, ptr %id71, i32 0, i32 7
  %112 = ptrtoint ptr %product_id.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %product_id.i, align 4
  %114 = ptrtoint ptr %id71 to i32
  call void @__asan_load1_noabort(i32 %114)
  %115 = load i8, ptr %id71, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %id.i.i) #22
  %116 = ptrtoint ptr %id.i.i to i32
  call void @__asan_store8_noabort(i32 %116)
  store i64 -1, ptr %id.i.i, align 8, !annotation !506
  store i32 %113, ptr %id.i.i, align 8
  %device_id2.i.i = getelementptr inbounds %struct.prod_dev_id, ptr %id.i.i, i32 0, i32 1
  %117 = ptrtoint ptr %device_id2.i.i to i32
  call void @__asan_store1_noabort(i32 %117)
  store i8 %115, ptr %device_id2.i.i, align 4
  %call.i215.i = call ptr @driver_find_device(ptr noundef getelementptr inbounds (%struct.platform_driver, ptr @ipmidriver, i32 0, i32 5), ptr noundef null, ptr noundef nonnull %id.i.i, ptr noundef nonnull @__find_bmc_prod_dev_id) #22
  %tobool.not.i216.i = icmp eq ptr %call.i215.i, null
  br i1 %tobool.not.i216.i, label %if.else.i.ipmi_find_bmc_prod_dev_id.exit.i_crit_edge, label %if.then.i218.i

if.else.i.ipmi_find_bmc_prod_dev_id.exit.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_find_bmc_prod_dev_id.exit.i

if.then.i218.i:                                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr.i217.i = getelementptr i8, ptr %call.i215.i, i32 -16
  call void @put_device(ptr noundef nonnull %call.i215.i) #22
  br label %ipmi_find_bmc_prod_dev_id.exit.i

ipmi_find_bmc_prod_dev_id.exit.i:                 ; preds = %if.then.i218.i, %if.else.i.ipmi_find_bmc_prod_dev_id.exit.i_crit_edge
  %bmc.0.i219.i = phi ptr [ %add.ptr.i217.i, %if.then.i218.i ], [ null, %if.else.i.ipmi_find_bmc_prod_dev_id.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %id.i.i) #22
  br label %if.end.i273

if.end.i273:                                      ; preds = %ipmi_find_bmc_prod_dev_id.exit.i, %if.then.i.i
  %old_bmc.0.i = phi ptr [ %bmc.0.i219.i, %ipmi_find_bmc_prod_dev_id.exit.i ], [ %add.ptr.i.i, %if.then.i.i ]
  %tobool2.not.i = icmp eq ptr %old_bmc.0.i, null
  br i1 %tobool2.not.i, label %if.end.i273.if.else11.i_crit_edge, label %if.then3.i

if.end.i273.if.else11.i_crit_edge:                ; preds = %if.end.i273
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else11.i

if.then3.i:                                       ; preds = %if.end.i273
  %118 = ptrtoint ptr %bmc1.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %old_bmc.0.i, ptr %bmc1.i, align 8
  %dyn_mutex.i = getelementptr inbounds %struct.bmc_device, ptr %old_bmc.0.i, i32 0, i32 6
  call void @mutex_lock_nested(ptr noundef %dyn_mutex.i, i32 noundef 0) #22
  %bmc_link.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 12
  %intfs.i = getelementptr inbounds %struct.bmc_device, ptr %old_bmc.0.i, i32 0, i32 1
  %prev.i.i = getelementptr inbounds %struct.bmc_device, ptr %old_bmc.0.i, i32 0, i32 1, i32 1
  %119 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %bmc_link.i, ptr noundef %120, ptr noundef %intfs.i) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then3.i.list_add_tail.exit.i_crit_edge

if.then3.i.list_add_tail.exit.i_crit_edge:        ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #24
  %121 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %121)
  store ptr %bmc_link.i, ptr %prev.i.i, align 4
  %122 = ptrtoint ptr %bmc_link.i to i32
  call void @__asan_store4_noabort(i32 %122)
  store ptr %intfs.i, ptr %bmc_link.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 12, i32 1
  %123 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr %120, ptr %prev3.i.i.i, align 4
  %124 = ptrtoint ptr %120 to i32
  call void @__asan_store4_noabort(i32 %124)
  store volatile ptr %bmc_link.i, ptr %120, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %if.then3.i.list_add_tail.exit.i_crit_edge
  call void @mutex_unlock(ptr noundef %dyn_mutex.i) #22
  %125 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %si_dev.i, align 4
  %id6.i = getelementptr inbounds %struct.bmc_device, ptr %old_bmc.0.i, i32 0, i32 2
  %manufacturer_id.i = getelementptr inbounds %struct.bmc_device, ptr %old_bmc.0.i, i32 0, i32 2, i32 6
  %127 = ptrtoint ptr %manufacturer_id.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %manufacturer_id.i, align 8
  %product_id8.i = getelementptr inbounds %struct.bmc_device, ptr %old_bmc.0.i, i32 0, i32 2, i32 7
  %129 = ptrtoint ptr %product_id8.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %product_id8.i, align 4
  %131 = ptrtoint ptr %id6.i to i32
  call void @__asan_load1_noabort(i32 %131)
  %132 = load i8, ptr %id6.i, align 8
  %conv.i275 = zext i8 %132 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %126, ptr noundef nonnull @.str.96, ptr noundef nonnull @.str.8, i32 noundef %128, i32 noundef %130, i32 noundef %conv.i275) #25
  br label %if.end69.i

if.else11.i:                                      ; preds = %if.end.i273.if.else11.i_crit_edge, %if.then.i272.if.else11.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %133 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %133, i32 noundef 3520, i32 noundef 1240) #27
  %tobool13.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool13.not.i, label %if.else11.i.__ipmi_bmc_register.exit_crit_edge, label %if.end15.i

if.else11.i.__ipmi_bmc_register.exit_crit_edge:   ; preds = %if.else11.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__ipmi_bmc_register.exit

if.end15.i:                                       ; preds = %if.else11.i
  %intfs16.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 1
  %134 = ptrtoint ptr %intfs16.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store volatile ptr %intfs16.i, ptr %intfs16.i, align 8
  %prev.i221.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 1, i32 1
  %135 = ptrtoint ptr %prev.i221.i to i32
  call void @__asan_store4_noabort(i32 %135)
  store ptr %intfs16.i, ptr %prev.i221.i, align 4
  %dyn_mutex18.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 6
  call void @__mutex_init(ptr noundef %dyn_mutex18.i, ptr noundef nonnull @.str.99, ptr noundef nonnull @__ipmi_bmc_register.__key) #22
  %remove_work.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 11
  call void @__init_work(ptr noundef %remove_work.i, i32 noundef 0) #22
  %136 = ptrtoint ptr %remove_work.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store i32 -64, ptr %remove_work.i, align 4
  %lockdep_map.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 11, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map.i, ptr noundef nonnull @.str.101, ptr noundef nonnull @__ipmi_bmc_register.__key.100, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22
  %entry25.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 11, i32 1
  %137 = ptrtoint ptr %entry25.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store volatile ptr %entry25.i, ptr %entry25.i, align 8
  %prev.i222.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 11, i32 1, i32 1
  %138 = ptrtoint ptr %prev.i222.i to i32
  call void @__asan_store4_noabort(i32 %138)
  store ptr %entry25.i, ptr %prev.i222.i, align 4
  %func.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 11, i32 2
  %139 = ptrtoint ptr %func.i to i32
  call void @__asan_store4_noabort(i32 %139)
  store ptr @cleanup_bmc_work, ptr %func.i, align 8
  %id29.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 2
  %140 = call ptr @memcpy(ptr %id29.i, ptr %id71, i32 24)
  %dyn_id_set.i276 = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 4
  %141 = ptrtoint ptr %dyn_id_set.i276 to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 1, ptr %dyn_id_set.i276, align 8
  %conv31.i = zext i1 %tobool84 to i32
  %dyn_guid_set.i277 = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 9
  %142 = ptrtoint ptr %dyn_guid_set.i277 to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 %conv31.i, ptr %dyn_guid_set.i277, align 4
  %guid32.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 7
  %143 = call ptr @memcpy(ptr %guid32.i, ptr %guid75, i32 16)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %144 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %144, 1000
  %dyn_id_expiry.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 5
  %145 = ptrtoint ptr %dyn_id_expiry.i to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 %add.i, ptr %dyn_id_expiry.i, align 4
  %146 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store ptr @.str.102, ptr %call7.i.i.i, align 8
  %call33.i = call i32 @ida_alloc_range(ptr noundef nonnull @ipmi_bmc_ida, i32 noundef 0, i32 noundef -1, i32 noundef 3264) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i)
  %cmp.i278 = icmp slt i32 %call33.i, 0
  br i1 %cmp.i278, label %if.then35.i, label %if.end36.i

if.then35.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @kfree(ptr noundef nonnull %call7.i.i.i) #22
  br label %__ipmi_bmc_register.exit

if.end36.i:                                       ; preds = %if.end15.i
  %driver.i = getelementptr inbounds %struct.platform_device, ptr %call7.i.i.i, i32 0, i32 3, i32 6
  %147 = ptrtoint ptr %driver.i to i32
  call void @__asan_store4_noabort(i32 %147)
  store ptr getelementptr inbounds (%struct.platform_driver, ptr @ipmidriver, i32 0, i32 5), ptr %driver.i, align 4
  %id39.i = getelementptr inbounds %struct.platform_device, ptr %call7.i.i.i, i32 0, i32 1
  %148 = ptrtoint ptr %id39.i to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 %call33.i, ptr %id39.i, align 4
  %release.i = getelementptr inbounds %struct.platform_device, ptr %call7.i.i.i, i32 0, i32 3, i32 35
  %149 = ptrtoint ptr %release.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store ptr @release_bmc_device, ptr %release.i, align 4
  %type.i = getelementptr inbounds %struct.platform_device, ptr %call7.i.i.i, i32 0, i32 3, i32 4
  %150 = ptrtoint ptr %type.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store ptr @bmc_device_type, ptr %type.i, align 4
  %usecount.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 10
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %usecount.i, i32 noundef 4) #22
  %151 = ptrtoint ptr %usecount.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store volatile i32 1, ptr %usecount.i, align 8
  %152 = ptrtoint ptr %bmc1.i to i32
  call void @__asan_store4_noabort(i32 %152)
  store ptr %call7.i.i.i, ptr %bmc1.i, align 8
  call void @mutex_lock_nested(ptr noundef %dyn_mutex18.i, i32 noundef 0) #22
  %bmc_link46.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 12
  %153 = ptrtoint ptr %prev.i221.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %prev.i221.i, align 4
  %call.i.i224.i = call zeroext i1 @__list_add_valid(ptr noundef %bmc_link46.i, ptr noundef %154, ptr noundef %intfs16.i) #22
  br i1 %call.i.i224.i, label %if.end.i.i226.i, label %if.end36.i.list_add_tail.exit227.i_crit_edge

if.end36.i.list_add_tail.exit227.i_crit_edge:     ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit227.i

if.end.i.i226.i:                                  ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #24
  %155 = ptrtoint ptr %prev.i221.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr %bmc_link46.i, ptr %prev.i221.i, align 4
  %156 = ptrtoint ptr %bmc_link46.i to i32
  call void @__asan_store4_noabort(i32 %156)
  store ptr %intfs16.i, ptr %bmc_link46.i, align 4
  %prev3.i.i225.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 12, i32 1
  %157 = ptrtoint ptr %prev3.i.i225.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store ptr %154, ptr %prev3.i.i225.i, align 4
  %158 = ptrtoint ptr %154 to i32
  call void @__asan_store4_noabort(i32 %158)
  store volatile ptr %bmc_link46.i, ptr %154, align 4
  br label %list_add_tail.exit227.i

list_add_tail.exit227.i:                          ; preds = %if.end.i.i226.i, %if.end36.i.list_add_tail.exit227.i_crit_edge
  call void @mutex_unlock(ptr noundef %dyn_mutex18.i) #22
  %call50.i = call i32 @platform_device_register(ptr noundef nonnull %call7.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50.i)
  %tobool51.not.i = icmp eq i32 %call50.i, 0
  br i1 %tobool51.not.i, label %do.end60.i, label %do.end55.i

do.end55.i:                                       ; preds = %list_add_tail.exit227.i
  %dev.i = getelementptr inbounds %struct.platform_device, ptr %call7.i.i.i, i32 0, i32 3
  %159 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %si_dev.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %160, ptr noundef nonnull @.str.104, ptr noundef nonnull @.str.8, i32 noundef %call50.i) #25
  call void @mutex_lock_nested(ptr noundef %dyn_mutex18.i, i32 noundef 0) #22
  %call.i.i228.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %bmc_link46.i) #22
  br i1 %call.i.i228.i, label %if.end.i.i229.i, label %do.end55.i.list_del.exit.i_crit_edge

do.end55.i.list_del.exit.i_crit_edge:             ; preds = %do.end55.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit.i

if.end.i.i229.i:                                  ; preds = %do.end55.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 12, i32 1
  %161 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %prev.i.i.i, align 4
  %163 = ptrtoint ptr %bmc_link46.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %bmc_link46.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %164, i32 0, i32 1
  %165 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store ptr %162, ptr %prev1.i.i.i.i, align 4
  %166 = ptrtoint ptr %162 to i32
  call void @__asan_store4_noabort(i32 %166)
  store volatile ptr %164, ptr %162, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i229.i, %do.end55.i.list_del.exit.i_crit_edge
  %167 = ptrtoint ptr %bmc_link46.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store ptr inttoptr (i32 256 to ptr), ptr %bmc_link46.i, align 4
  %prev.i230.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 12, i32 1
  %168 = ptrtoint ptr %prev.i230.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i230.i, align 4
  call void @mutex_unlock(ptr noundef %dyn_mutex18.i) #22
  %tmp_bmc125.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 9
  %169 = ptrtoint ptr %bmc1.i to i32
  call void @__asan_store4_noabort(i32 %169)
  store ptr %tmp_bmc125.i, ptr %bmc1.i, align 8
  call void @put_device(ptr noundef %dev.i) #22
  br label %__ipmi_bmc_register.exit

do.end60.i:                                       ; preds = %list_add_tail.exit227.i
  call void @__sanitizer_cov_trace_pc() #24
  %170 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %si_dev.i, align 4
  %manufacturer_id63.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 2, i32 6
  %172 = ptrtoint ptr %manufacturer_id63.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %manufacturer_id63.i, align 8
  %product_id65.i = getelementptr inbounds %struct.bmc_device, ptr %call7.i.i.i, i32 0, i32 2, i32 7
  %174 = ptrtoint ptr %product_id65.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %product_id65.i, align 4
  %176 = ptrtoint ptr %id29.i to i32
  call void @__asan_load1_noabort(i32 %176)
  %177 = load i8, ptr %id29.i, align 8
  %conv68.i = zext i8 %177 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %171, ptr noundef nonnull @.str.107, ptr noundef nonnull @.str.8, i32 noundef %173, i32 noundef %175, i32 noundef %conv68.i) #25
  br label %if.end69.i

if.end69.i:                                       ; preds = %do.end60.i, %list_add_tail.exit.i
  %bmc.0.i = phi ptr [ %old_bmc.0.i, %list_add_tail.exit.i ], [ %call7.i.i.i, %do.end60.i ]
  %178 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %si_dev.i, align 4
  %dev72.i = getelementptr inbounds %struct.platform_device, ptr %bmc.0.i, i32 0, i32 3
  %call74.i = call i32 @sysfs_create_link(ptr noundef %179, ptr noundef %dev72.i, ptr noundef nonnull @.str.95) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74.i)
  %tobool75.not.i = icmp eq i32 %call74.i, 0
  br i1 %tobool75.not.i, label %if.end81.i, label %do.end79.i

do.end79.i:                                       ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #24
  %180 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %si_dev.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %181, ptr noundef nonnull @.str.110, ptr noundef nonnull @.str.8, i32 noundef %call74.i) #25
  br label %out_put_bmc.i

if.end81.i:                                       ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %intf_num)
  %cmp82.i = icmp eq i32 %intf_num, -1
  br i1 %cmp82.i, label %if.then84.i, label %if.end81.i.if.end86.i_crit_edge

if.end81.i.if.end86.i_crit_edge:                  ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end86.i

if.then84.i:                                      ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #24
  %intf_num85.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 1
  %182 = ptrtoint ptr %intf_num85.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %intf_num85.i, align 4
  br label %if.end86.i

if.end86.i:                                       ; preds = %if.then84.i, %if.end81.i.if.end86.i_crit_edge
  %intf_num.addr.0.i = phi i32 [ %183, %if.then84.i ], [ %intf_num, %if.end81.i.if.end86.i_crit_edge ]
  %call87.i = call noalias ptr (i32, ptr, ...) @kasprintf(i32 noundef 3264, ptr noundef nonnull @.str.112, i32 noundef %intf_num.addr.0.i) #22
  %my_dev_name.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 13
  %184 = ptrtoint ptr %my_dev_name.i to i32
  call void @__asan_store4_noabort(i32 %184)
  store ptr %call87.i, ptr %my_dev_name.i, align 8
  %tobool89.not.i = icmp eq ptr %call87.i, null
  %185 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %si_dev.i, align 4
  br i1 %tobool89.not.i, label %if.then90.i, label %if.end95.i

if.then90.i:                                      ; preds = %if.end86.i
  call void @__sanitizer_cov_trace_pc() #24
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %186, ptr noundef nonnull @.str.114, ptr noundef nonnull @.str.8, i32 noundef -12) #25
  br label %out_unlink1.i

if.end95.i:                                       ; preds = %if.end86.i
  %call102.i = call i32 @sysfs_create_link(ptr noundef %dev72.i, ptr noundef %186, ptr noundef nonnull %call87.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call102.i)
  %tobool103.not.i = icmp eq i32 %call102.i, 0
  br i1 %tobool103.not.i, label %if.end109.i, label %do.end107.i

do.end107.i:                                      ; preds = %if.end95.i
  call void @__sanitizer_cov_trace_pc() #24
  %187 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %si_dev.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %188, ptr noundef nonnull @.str.117, ptr noundef nonnull @.str.8, i32 noundef %call102.i) #25
  %189 = ptrtoint ptr %my_dev_name.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %my_dev_name.i, align 8
  call void @kfree(ptr noundef %190) #22
  %191 = ptrtoint ptr %my_dev_name.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store ptr null, ptr %my_dev_name.i, align 8
  br label %out_unlink1.i

if.end109.i:                                      ; preds = %if.end95.i
  call void @__sanitizer_cov_trace_pc() #24
  %192 = ptrtoint ptr %bmc_registered to i32
  call void @__asan_store1_noabort(i32 %192)
  store i8 1, ptr %bmc_registered, align 4
  br label %__ipmi_bmc_register.exit

out_unlink1.i:                                    ; preds = %do.end107.i, %if.then90.i
  %rv.1.i280 = phi i32 [ %call102.i, %do.end107.i ], [ -12, %if.then90.i ]
  %193 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %si_dev.i, align 4
  call void @sysfs_remove_link(ptr noundef %194, ptr noundef nonnull @.str.95) #22
  br label %out_put_bmc.i

out_put_bmc.i:                                    ; preds = %out_unlink1.i, %do.end79.i
  %rv.2.i = phi i32 [ %call74.i, %do.end79.i ], [ %rv.1.i280, %out_unlink1.i ]
  %dyn_mutex116.i = getelementptr inbounds %struct.bmc_device, ptr %bmc.0.i, i32 0, i32 6
  call void @mutex_lock_nested(ptr noundef %dyn_mutex116.i, i32 noundef 0) #22
  %bmc_link117.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 12
  %call.i.i231.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %bmc_link117.i) #22
  br i1 %call.i.i231.i, label %if.end.i.i234.i, label %out_put_bmc.i.list_del.exit236.i_crit_edge

out_put_bmc.i.list_del.exit236.i_crit_edge:       ; preds = %out_put_bmc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit236.i

if.end.i.i234.i:                                  ; preds = %out_put_bmc.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i232.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 12, i32 1
  %195 = ptrtoint ptr %prev.i.i232.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %prev.i.i232.i, align 4
  %197 = ptrtoint ptr %bmc_link117.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %bmc_link117.i, align 4
  %prev1.i.i.i233.i = getelementptr inbounds %struct.list_head, ptr %198, i32 0, i32 1
  %199 = ptrtoint ptr %prev1.i.i.i233.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store ptr %196, ptr %prev1.i.i.i233.i, align 4
  %200 = ptrtoint ptr %196 to i32
  call void @__asan_store4_noabort(i32 %200)
  store volatile ptr %198, ptr %196, align 4
  br label %list_del.exit236.i

list_del.exit236.i:                               ; preds = %if.end.i.i234.i, %out_put_bmc.i.list_del.exit236.i_crit_edge
  %201 = ptrtoint ptr %bmc_link117.i to i32
  call void @__asan_store4_noabort(i32 %201)
  store ptr inttoptr (i32 256 to ptr), ptr %bmc_link117.i, align 4
  %prev.i235.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 12, i32 1
  %202 = ptrtoint ptr %prev.i235.i to i32
  call void @__asan_store4_noabort(i32 %202)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i235.i, align 4
  call void @mutex_unlock(ptr noundef %dyn_mutex116.i) #22
  %tmp_bmc.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 9
  %203 = ptrtoint ptr %bmc1.i to i32
  call void @__asan_store4_noabort(i32 %203)
  store ptr %tmp_bmc.i, ptr %bmc1.i, align 8
  %usecount120.i = getelementptr inbounds %struct.bmc_device, ptr %bmc.0.i, i32 0, i32 10
  call fastcc void @kref_put(ptr noundef %usecount120.i, ptr noundef nonnull @cleanup_bmc_device) #22
  br label %__ipmi_bmc_register.exit

__ipmi_bmc_register.exit:                         ; preds = %list_del.exit236.i, %if.end109.i, %list_del.exit.i, %if.then35.i, %if.else11.i.__ipmi_bmc_register.exit_crit_edge
  %rv.0.i279 = phi i32 [ %rv.2.i, %list_del.exit236.i ], [ 0, %if.end109.i ], [ -12, %if.then35.i ], [ -12, %list_del.exit.i ], [ -12, %if.else11.i.__ipmi_bmc_register.exit_crit_edge ]
  call void @mutex_unlock(ptr noundef nonnull @ipmidriver_mutex) #22
  call void @mutex_lock_nested(ptr noundef %bmc_reg_mutex.i, i32 noundef 0) #22
  %204 = ptrtoint ptr %in_bmc_register to i32
  call void @__asan_store1_noabort(i32 %204)
  store i8 0, ptr %in_bmc_register, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rv.0.i279)
  %tobool86.not = icmp eq i32 %rv.0.i279, 0
  br i1 %tobool86.not, label %if.else88, label %if.then87

if.then87:                                        ; preds = %__ipmi_bmc_register.exit
  %205 = load volatile ptr, ptr getelementptr inbounds (%struct.timer_list, ptr @ipmi_timer, i32 0, i32 0, i32 1), align 4
  %tobool.not.i.i.not.i = icmp eq ptr %205, null
  br i1 %tobool.not.i.i.not.i, label %if.then.i282, label %if.then87.if.end90_crit_edge

if.then87.if.end90_crit_edge:                     ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end90

if.then.i282:                                     ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %206 = load volatile i32, ptr @jiffies, align 128
  %add.i281 = add i32 %206, 100
  %call1.i = call i32 @mod_timer(ptr noundef nonnull @ipmi_timer, i32 noundef %add.i281) #22
  br label %if.end90

if.else88:                                        ; preds = %__ipmi_bmc_register.exit
  call void @__sanitizer_cov_trace_pc() #24
  %call89 = call fastcc i32 @__scan_channels(ptr noundef %intf.addr.0, ptr noundef nonnull %id71)
  br label %if.end90

if.end90:                                         ; preds = %if.else88, %if.then.i282, %if.then87.if.end90_crit_edge
  br i1 %cmp.not, label %cleanup, label %cleanup.thread

cleanup.thread:                                   ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #24
  %207 = ptrtoint ptr %bmc1.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %bmc1.i, align 8
  %dyn_mutex97 = getelementptr inbounds %struct.bmc_device, ptr %208, i32 0, i32 6
  call void @mutex_lock_nested(ptr noundef %dyn_mutex97, i32 noundef 0) #22
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %guid75) #22
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id71) #22
  br label %if.then134

cleanup:                                          ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #24
  call void @mutex_unlock(ptr noundef %bmc_reg_mutex.i) #22
  call void @mutex_lock_nested(ptr noundef %dyn_mutex77, i32 noundef 0) #22
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %guid75) #22
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id71) #22
  br label %retry_bmc_lock.preheader

if.else100:                                       ; preds = %lor.lhs.false64
  %bcmp = call i32 @bcmp(ptr noundef dereferenceable(24) %fetch_id, ptr noundef dereferenceable(24) %id53, i32 24) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool104.not = icmp eq i32 %bcmp, 0
  br i1 %tobool104.not, label %if.else100.if.end109_crit_edge, label %if.then105

if.else100.if.end109_crit_edge:                   ; preds = %if.else100
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end109

if.then105:                                       ; preds = %if.else100
  call void @__sanitizer_cov_trace_pc() #24
  %call107 = call fastcc i32 @__scan_channels(ptr noundef %intf.addr.0, ptr noundef %fetch_id)
  br label %if.end109

if.end109:                                        ; preds = %if.then105, %if.else100.if.end109_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %209 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %209, 1000
  %dyn_id_expiry110 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 5
  %210 = ptrtoint ptr %dyn_id_expiry110 to i32
  call void @__asan_store4_noabort(i32 %210)
  store i32 %add, ptr %dyn_id_expiry110, align 4
  br label %if.then118

land.lhs.true112:                                 ; preds = %__get_device_id.exit, %retry.i.land.lhs.true112_crit_edge
  %rv.1.i294 = phi i32 [ -5, %__get_device_id.exit ], [ %call.i.i265, %retry.i.land.lhs.true112_crit_edge ]
  %211 = ptrtoint ptr %null_user_handler.i to i32
  call void @__asan_store4_noabort(i32 %211)
  store ptr null, ptr %null_user_handler.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool113.not = icmp eq i32 %49, 0
  br i1 %tobool113.not, label %land.lhs.true112.if.end152_crit_edge, label %if.then114

land.lhs.true112.if.end152_crit_edge:             ; preds = %land.lhs.true112
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end152

if.then114:                                       ; preds = %land.lhs.true112
  call void @__sanitizer_cov_trace_pc() #24
  %212 = ptrtoint ptr %dyn_id_set to i32
  call void @__asan_store4_noabort(i32 %212)
  store i32 %49, ptr %dyn_id_set, align 8
  br label %if.then118

if.then118:                                       ; preds = %if.then114, %if.end109
  %id119 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 2
  %fetch_id120 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 3
  %213 = call ptr @memcpy(ptr %id119, ptr %fetch_id120, i32 24)
  %214 = ptrtoint ptr %dyn_guid_set to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %dyn_guid_set, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %215)
  %tobool122.not = icmp eq i32 %215, 0
  br i1 %tobool122.not, label %if.else126, label %if.then123

if.then123:                                       ; preds = %if.then118
  call void @__sanitizer_cov_trace_pc() #24
  %guid124 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 7
  %fetch_guid125 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.1, i32 0, i32 8
  %216 = call ptr @memcpy(ptr %guid124, ptr %fetch_guid125, i32 16)
  br label %if.then134

if.else126:                                       ; preds = %if.then118
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool127.not = icmp eq i32 %22, 0
  br i1 %tobool127.not, label %if.else126.if.then134_crit_edge, label %if.then128

if.else126.if.then134_crit_edge:                  ; preds = %if.else126
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then134

if.then128:                                       ; preds = %if.else126
  call void @__sanitizer_cov_trace_pc() #24
  %217 = ptrtoint ptr %dyn_guid_set to i32
  call void @__asan_store4_noabort(i32 %217)
  store i32 %22, ptr %dyn_guid_set, align 4
  br label %if.then134

if.then134:                                       ; preds = %if.then128, %if.else126.if.then134_crit_edge, %if.then123, %cleanup.thread, %land.lhs.true.if.then134_crit_edge, %if.end22.if.then134_crit_edge
  %bmc.addr.3.ph = phi ptr [ %208, %cleanup.thread ], [ %bmc.addr.1, %if.else126.if.then134_crit_edge ], [ %bmc.addr.1, %if.then128 ], [ %bmc.addr.1, %if.then123 ], [ %bmc.addr.1, %land.lhs.true.if.then134_crit_edge ], [ %bmc.addr.1, %if.end22.if.then134_crit_edge ]
  %tobool135.not = icmp eq ptr %id, null
  br i1 %tobool135.not, label %if.then134.if.end138_crit_edge, label %if.then136

if.then134.if.end138_crit_edge:                   ; preds = %if.then134
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end138

if.then136:                                       ; preds = %if.then134
  call void @__sanitizer_cov_trace_pc() #24
  %id137 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.3.ph, i32 0, i32 2
  %218 = call ptr @memcpy(ptr %id, ptr %id137, i32 24)
  br label %if.end138

if.end138:                                        ; preds = %if.then136, %if.then134.if.end138_crit_edge
  %tobool139.not = icmp eq ptr %guid_set, null
  br i1 %tobool139.not, label %if.end138.if.end144_crit_edge, label %if.then140

if.end138.if.end144_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end144

if.then140:                                       ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #24
  %dyn_guid_set141 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.3.ph, i32 0, i32 9
  %219 = ptrtoint ptr %dyn_guid_set141 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %dyn_guid_set141, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %220)
  %tobool142 = icmp ne i32 %220, 0
  %frombool143 = zext i1 %tobool142 to i8
  %221 = ptrtoint ptr %guid_set to i32
  call void @__asan_store1_noabort(i32 %221)
  store i8 %frombool143, ptr %guid_set, align 1
  br label %if.end144

if.end144:                                        ; preds = %if.then140, %if.end138.if.end144_crit_edge
  %tobool145.not = icmp eq ptr %guid, null
  br i1 %tobool145.not, label %if.end144.if.end152_crit_edge, label %land.lhs.true146

if.end144.if.end152_crit_edge:                    ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end152

land.lhs.true146:                                 ; preds = %if.end144
  %dyn_guid_set147 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.3.ph, i32 0, i32 9
  %222 = ptrtoint ptr %dyn_guid_set147 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %dyn_guid_set147, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %223)
  %tobool148.not = icmp eq i32 %223, 0
  br i1 %tobool148.not, label %land.lhs.true146.if.end152_crit_edge, label %if.then149

land.lhs.true146.if.end152_crit_edge:             ; preds = %land.lhs.true146
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end152

if.then149:                                       ; preds = %land.lhs.true146
  call void @__sanitizer_cov_trace_pc() #24
  %guid150 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.3.ph, i32 0, i32 7
  %224 = call ptr @memcpy(ptr %guid, ptr %guid150, i32 16)
  br label %if.end152

if.end152:                                        ; preds = %if.then149, %land.lhs.true146.if.end152_crit_edge, %if.end144.if.end152_crit_edge, %land.lhs.true112.if.end152_crit_edge
  %bmc.addr.3310 = phi ptr [ %bmc.addr.3.ph, %if.end144.if.end152_crit_edge ], [ %bmc.addr.3.ph, %land.lhs.true146.if.end152_crit_edge ], [ %bmc.addr.3.ph, %if.then149 ], [ %bmc.addr.1, %land.lhs.true112.if.end152_crit_edge ]
  %rv.3308 = phi i32 [ 0, %if.end144.if.end152_crit_edge ], [ 0, %land.lhs.true146.if.end152_crit_edge ], [ 0, %if.then149 ], [ %rv.1.i294, %land.lhs.true112.if.end152_crit_edge ]
  %dyn_mutex153 = getelementptr inbounds %struct.bmc_device, ptr %bmc.addr.3310, i32 0, i32 6
  call void @mutex_unlock(ptr noundef %dyn_mutex153) #22
  %bmc_reg_mutex154 = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 8
  call void @mutex_unlock(ptr noundef %bmc_reg_mutex154) #22
  %refcount155 = getelementptr inbounds %struct.ipmi_smi, ptr %intf.addr.0, i32 0, i32 2
  %call.i.i.i.i.i.i284 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount155, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  call void @llvm.prefetch.p0(ptr %refcount155, i32 1, i32 3, i32 1) #22
  %225 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount155, ptr %refcount155, i32 1, ptr elementtype(i32) %refcount155) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i285 = extractvalue { i32, i32, i32 } %225, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i285)
  %cmp.i.i.i.i286 = icmp eq i32 %asmresult.i.i.i.i.i.i.i285, 1
  br i1 %cmp.i.i.i.i286, label %if.then.i290, label %if.end5.i.i.i.i288

if.end5.i.i.i.i288:                               ; preds = %if.end152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i285)
  %.not.i.i.i.i287 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i285, 0
  br i1 %.not.i.i.i.i287, label %if.end5.i.i.i.i288.cleanup157_crit_edge, label %if.then10.i.i.i.i289, !prof !498

if.end5.i.i.i.i288.cleanup157_crit_edge:          ; preds = %if.end5.i.i.i.i288
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup157

if.then10.i.i.i.i289:                             ; preds = %if.end5.i.i.i.i288
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %refcount155, i32 noundef 3) #22
  br label %cleanup157

if.then.i290:                                     ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  call fastcc void @intf_free(ptr noundef %refcount155) #22, !callees !509
  br label %cleanup157

cleanup157:                                       ; preds = %if.then.i290, %if.then10.i.i.i.i289, %if.end5.i.i.i.i288.cleanup157_crit_edge, %if.then2
  %retval.0 = phi i32 [ -2, %if.then2 ], [ %rv.3308, %if.end5.i.i.i.i288.cleanup157_crit_edge ], [ %rv.3308, %if.then10.i.i.i.i289 ], [ %rv.3308, %if.then.i290 ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__scan_channels(ptr noundef %intf, ptr nocapture noundef readonly %id) unnamed_addr #1 align 64 {
entry:
  %msg.i = alloca %struct.kernel_ipmi_msg, align 4
  %data.i = alloca [1 x i8], align 1
  %si.i = alloca %struct.ipmi_system_interface_addr, align 8
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %ipmi_version = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 4
  %0 = ptrtoint ptr %ipmi_version to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %ipmi_version, align 4
  %2 = and i8 %1, 15
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %2)
  %cmp = icmp ugt i8 %2, 1
  br i1 %cmp, label %entry.if.then_crit_edge, label %lor.lhs.false

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %2)
  %cmp5 = icmp eq i8 %2, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 79, i8 %1)
  %cmp9 = icmp ugt i8 %1, 79
  %or.cond = and i1 %cmp9, %cmp5
  br i1 %or.cond, label %lor.lhs.false.if.then_crit_edge, label %if.else

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %curr_working_cset = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 56
  %3 = ptrtoint ptr %curr_working_cset to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %curr_working_cset, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  %lnot.ext = zext i1 %tobool.not to i32
  %5 = ptrtoint ptr %curr_working_cset to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %lnot.ext, ptr %curr_working_cset, align 8
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 57, i32 %lnot.ext
  %6 = call ptr @memset(ptr %arrayidx, i32 0, i32 32)
  %null_user_handler = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 53
  %7 = ptrtoint ptr %null_user_handler to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @channel_handler, ptr %null_user_handler, align 4
  %curr_channel = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 54
  %8 = ptrtoint ptr %curr_channel to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %curr_channel, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %msg.i) #22
  %9 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i, i32 0, i32 1
  %10 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i, i32 0, i32 2
  %11 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %data.i) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %si.i) #22
  %12 = ptrtoint ptr %si.i to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 51540590847, ptr %si.i, align 8, !annotation !506
  %13 = ptrtoint ptr %msg.i to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 6, ptr %msg.i, align 4
  %14 = ptrtoint ptr %9 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 66, ptr %9, align 1
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %data.i, ptr %11, align 4
  %16 = ptrtoint ptr %10 to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 1, ptr %10, align 2
  %17 = ptrtoint ptr %data.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 0, ptr %data.i, align 1
  %addrinfo.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 58
  %18 = ptrtoint ptr %addrinfo.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %addrinfo.i, align 4
  %lun5.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 58, i32 0, i32 1
  %20 = ptrtoint ptr %lun5.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %lun5.i, align 1
  %call.i = call fastcc i32 @i_ipmi_request(ptr noundef null, ptr noundef %intf, ptr noundef nonnull %si.i, i32 noundef 0, ptr noundef nonnull %msg.i, ptr noundef %intf, ptr noundef null, ptr noundef null, i32 noundef 0, i8 noundef zeroext %19, i8 noundef zeroext %21, i32 noundef -1, i32 noundef 0) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %si.i) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %data.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %msg.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool12.not = icmp eq i32 %call.i, 0
  br i1 %tobool12.not, label %do.body16, label %do.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %si_dev = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %22 = ptrtoint ptr %si_dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %si_dev, align 4
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %23, ptr noundef nonnull @.str.140, ptr noundef nonnull @.str.8, i32 noundef %call.i) #25
  %24 = ptrtoint ptr %null_user_handler to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %null_user_handler, align 4
  br label %cleanup49

do.body16:                                        ; preds = %if.then
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3445) #22
  %channels_ready = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 59
  %25 = ptrtoint ptr %channels_ready to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %channels_ready, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool22.not = icmp eq i8 %26, 0
  br i1 %tobool22.not, label %if.end24, label %if.end48.critedge

if.end24:                                         ; preds = %do.body16
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #22
  %27 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #22
  %waitq = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 7
  %call2577 = call i32 @prepare_to_wait_event(ptr noundef %waitq, ptr noundef nonnull %__wq_entry, i32 noundef 2) #22
  %28 = ptrtoint ptr %channels_ready to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %channels_ready, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool27.not78 = icmp eq i8 %29, 0
  br i1 %tobool27.not78, label %if.end24.cleanup_crit_edge, label %if.end24.for.end_crit_edge

if.end24.for.end_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  br label %cleanup

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.end24.cleanup_crit_edge
  call void @schedule() #22
  %call25 = call i32 @prepare_to_wait_event(ptr noundef %waitq, ptr noundef nonnull %__wq_entry, i32 noundef 2) #22
  %30 = ptrtoint ptr %channels_ready to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %channels_ready, align 4, !range !507
  %tobool27.not = icmp eq i8 %31, 0
  br i1 %tobool27.not, label %cleanup.cleanup_crit_edge, label %cleanup.for.end_crit_edge

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.end24.for.end_crit_edge
  call void @finish_wait(ptr noundef %waitq, ptr noundef nonnull %__wq_entry) #22
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #22
  %32 = ptrtoint ptr %null_user_handler to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %null_user_handler, align 4
  br label %cleanup49

if.else:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  %curr_working_cset38 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 56
  %33 = ptrtoint ptr %curr_working_cset38 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %curr_working_cset38, align 8
  %wchannels39 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 57
  %arrayidx40 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 57, i32 %34
  %35 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 1, ptr %arrayidx40, align 4
  %protocol = getelementptr inbounds %struct.ipmi_channel, ptr %arrayidx40, i32 0, i32 1
  %36 = ptrtoint ptr %protocol to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 1, ptr %protocol, align 1
  %add.ptr = getelementptr %struct.ipmi_channel_set, ptr %wchannels39, i32 %34
  %channel_list = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 55
  %37 = ptrtoint ptr %channel_list to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %add.ptr, ptr %channel_list, align 4
  %channels_ready47 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 59
  %38 = ptrtoint ptr %channels_ready47 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 1, ptr %channels_ready47, align 4
  br label %cleanup49

if.end48.critedge:                                ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #24
  %39 = ptrtoint ptr %null_user_handler to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %null_user_handler, align 4
  br label %cleanup49

cleanup49:                                        ; preds = %if.end48.critedge, %if.else, %for.end, %do.end
  %retval.1 = phi i32 [ -5, %do.end ], [ 0, %for.end ], [ 0, %if.end48.critedge ], [ 0, %if.else ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @call_smi_watchers(i32 noundef %i, ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @smi_watchers_mutex, i32 noundef 0) #22
  %w.010 = load ptr, ptr @smi_watchers, align 4
  %cmp.not11 = icmp eq ptr %w.010, @smi_watchers
  br i1 %cmp.not11, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %w.012 = phi ptr [ %w.0, %for.inc.for.body_crit_edge ], [ %w.010, %entry.for.body_crit_edge ]
  %owner = getelementptr inbounds %struct.ipmi_smi_watcher, ptr %w.012, i32 0, i32 1
  %0 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %owner, align 4
  %call = tail call zeroext i1 @try_module_get(ptr noundef %1) #22
  br i1 %call, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %new_smi = getelementptr inbounds %struct.ipmi_smi_watcher, ptr %w.012, i32 0, i32 2
  %2 = ptrtoint ptr %new_smi to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %new_smi, align 4
  tail call void %3(i32 noundef %i, ptr noundef %dev) #22
  %4 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %owner, align 4
  tail call void @module_put(ptr noundef %5) #22
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %6 = ptrtoint ptr %w.012 to i32
  call void @__asan_load4_noabort(i32 %6)
  %w.0 = load ptr, ptr %w.012, align 4
  %cmp.not = icmp eq ptr %w.0, @smi_watchers
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @smi_watchers_mutex) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ipmi_bmc_unregister(ptr noundef %intf) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %bmc_reg_mutex = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 8
  tail call void @mutex_lock_nested(ptr noundef %bmc_reg_mutex, i32 noundef 0) #22
  tail call fastcc void @__ipmi_bmc_unregister(ptr noundef %intf)
  tail call void @mutex_unlock(ptr noundef %bmc_reg_mutex) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_srcu(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @cleanup_srcu_struct(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @intf_free(ptr noundef %ref) unnamed_addr #1 align 64 {
entry:
  %list.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %ref, i32 -8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %list.i) #22
  %0 = getelementptr inbounds %struct.list_head, ptr %list.i, i32 0, i32 1
  %recv_tasklet.i = getelementptr i8, ptr %ref, i32 3952
  tail call void @tasklet_kill(ptr noundef %recv_tasklet.i) #22
  %waiting_rcv_msgs.i = getelementptr i8, ptr %ref, i32 3940
  %1 = ptrtoint ptr %waiting_rcv_msgs.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %waiting_rcv_msgs.i, align 4
  %cmp.not17.i.i = icmp eq ptr %2, %waiting_rcv_msgs.i
  br i1 %cmp.not17.i.i, label %entry.free_smi_msg_list.exit.i_crit_edge, label %entry.for.body.i.i_crit_edge

entry.for.body.i.i_crit_edge:                     ; preds = %entry
  br label %for.body.i.i

entry.free_smi_msg_list.exit.i_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %free_smi_msg_list.exit.i

for.body.i.i:                                     ; preds = %list_del.exit.i.i.for.body.i.i_crit_edge, %entry.for.body.i.i_crit_edge
  %msg.018.i.i = phi ptr [ %msg2.0.i.i, %list_del.exit.i.i.for.body.i.i_crit_edge ], [ %2, %entry.for.body.i.i_crit_edge ]
  %3 = ptrtoint ptr %msg.018.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %msg2.0.i.i = load ptr, ptr %msg.018.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %msg.018.i.i) #22
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %for.body.i.i.list_del.exit.i.i_crit_edge

for.body.i.i.list_del.exit.i.i_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit.i.i

if.end.i.i.i.i:                                   ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %msg.018.i.i, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i.i.i, align 4
  %6 = ptrtoint ptr %msg.018.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %msg.018.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i.i.i, %for.body.i.i.list_del.exit.i.i_crit_edge
  %10 = ptrtoint ptr %msg.018.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 256 to ptr), ptr %msg.018.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %msg.018.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  %done.i.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg.018.i.i, i32 0, i32 8
  %12 = ptrtoint ptr %done.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %done.i.i.i, align 4
  tail call void %13(ptr noundef %msg.018.i.i) #22
  %cmp.not.i.i = icmp eq ptr %msg2.0.i.i, %waiting_rcv_msgs.i
  br i1 %cmp.not.i.i, label %list_del.exit.i.i.free_smi_msg_list.exit.i_crit_edge, label %list_del.exit.i.i.for.body.i.i_crit_edge

list_del.exit.i.i.for.body.i.i_crit_edge:         ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i.i

list_del.exit.i.i.free_smi_msg_list.exit.i_crit_edge: ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %free_smi_msg_list.exit.i

free_smi_msg_list.exit.i:                         ; preds = %list_del.exit.i.i.free_smi_msg_list.exit.i_crit_edge, %entry.free_smi_msg_list.exit.i_crit_edge
  %waiting_events.i = getelementptr i8, ptr %ref, i32 4184
  %14 = ptrtoint ptr %waiting_events.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %waiting_events.i, align 4
  %cmp.not17.i38.i = icmp eq ptr %15, %waiting_events.i
  br i1 %cmp.not17.i38.i, label %free_smi_msg_list.exit.i.free_recv_msg_list.exit.i_crit_edge, label %free_smi_msg_list.exit.i.for.body.i42.i_crit_edge

free_smi_msg_list.exit.i.for.body.i42.i_crit_edge: ; preds = %free_smi_msg_list.exit.i
  br label %for.body.i42.i

free_smi_msg_list.exit.i.free_recv_msg_list.exit.i_crit_edge: ; preds = %free_smi_msg_list.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %free_recv_msg_list.exit.i

for.body.i42.i:                                   ; preds = %ipmi_free_recv_msg.exit.i.i.for.body.i42.i_crit_edge, %free_smi_msg_list.exit.i.for.body.i42.i_crit_edge
  %msg.018.i39.i = phi ptr [ %msg2.0.i40.i, %ipmi_free_recv_msg.exit.i.i.for.body.i42.i_crit_edge ], [ %15, %free_smi_msg_list.exit.i.for.body.i42.i_crit_edge ]
  %16 = ptrtoint ptr %msg.018.i39.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %msg2.0.i40.i = load ptr, ptr %msg.018.i39.i, align 4
  %call.i.i.i41.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %msg.018.i39.i) #22
  br i1 %call.i.i.i41.i, label %if.end.i.i.i45.i, label %for.body.i42.i.list_del.exit.i47.i_crit_edge

for.body.i42.i.list_del.exit.i47.i_crit_edge:     ; preds = %for.body.i42.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit.i47.i

if.end.i.i.i45.i:                                 ; preds = %for.body.i42.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i43.i = getelementptr inbounds %struct.list_head, ptr %msg.018.i39.i, i32 0, i32 1
  %17 = ptrtoint ptr %prev.i.i.i43.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %prev.i.i.i43.i, align 4
  %19 = ptrtoint ptr %msg.018.i39.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %msg.018.i39.i, align 4
  %prev1.i.i.i.i44.i = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %prev1.i.i.i.i44.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %18, ptr %prev1.i.i.i.i44.i, align 4
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %20, ptr %18, align 4
  br label %list_del.exit.i47.i

list_del.exit.i47.i:                              ; preds = %if.end.i.i.i45.i, %for.body.i42.i.list_del.exit.i47.i_crit_edge
  %23 = ptrtoint ptr %msg.018.i39.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr inttoptr (i32 256 to ptr), ptr %msg.018.i39.i, align 4
  %prev.i.i46.i = getelementptr inbounds %struct.list_head, ptr %msg.018.i39.i, i32 0, i32 1
  %24 = ptrtoint ptr %prev.i.i46.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i46.i, align 4
  %user.i.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg.018.i39.i, i32 0, i32 2
  %25 = ptrtoint ptr %user.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %user.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %26, null
  br i1 %tobool.not.i.i.i, label %list_del.exit.i47.i.ipmi_free_recv_msg.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

list_del.exit.i47.i.ipmi_free_recv_msg.exit.i.i_crit_edge: ; preds = %list_del.exit.i47.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %list_del.exit.i47.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %27 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool1.not.i.i.i = icmp eq i32 %27, 0
  br i1 %tobool1.not.i.i.i, label %if.then.i.i.i, label %land.lhs.true.i.i.i.ipmi_free_recv_msg.exit.i.i_crit_edge

land.lhs.true.i.i.i.ipmi_free_recv_msg.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  %refcount.i.i.i = getelementptr inbounds %struct.ipmi_user, ptr %26, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount.i.i.i, i32 1, i32 3, i32 1) #22
  %28 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i.i, ptr %refcount.i.i.i, i32 1, ptr elementtype(i32) %refcount.i.i.i) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %28, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i.i.i.i, label %if.end5.i.i.i.i.i.i.i

if.end5.i.i.i.i.i.i.i:                            ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i.i.i, label %if.end5.i.i.i.i.i.i.i.ipmi_free_recv_msg.exit.i.i_crit_edge, label %if.then10.i.i.i.i.i.i.i, !prof !498

if.end5.i.i.i.i.i.i.i.ipmi_free_recv_msg.exit.i.i_crit_edge: ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit.i.i

if.then10.i.i.i.i.i.i.i:                          ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i.i.i, i32 noundef 3) #22
  br label %ipmi_free_recv_msg.exit.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %29 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i.i.i.i = getelementptr %struct.ipmi_user, ptr %26, i32 0, i32 8
  %call.i.i.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %29, ptr noundef %remove_work.i.i.i.i) #22
  br label %ipmi_free_recv_msg.exit.i.i

ipmi_free_recv_msg.exit.i.i:                      ; preds = %if.then.i.i.i.i, %if.then10.i.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.i.ipmi_free_recv_msg.exit.i.i_crit_edge, %land.lhs.true.i.i.i.ipmi_free_recv_msg.exit.i.i_crit_edge, %list_del.exit.i47.i.ipmi_free_recv_msg.exit.i.i_crit_edge
  %done.i.i48.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg.018.i39.i, i32 0, i32 7
  %30 = ptrtoint ptr %done.i.i48.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %done.i.i48.i, align 4
  tail call void %31(ptr noundef %msg.018.i39.i) #22
  %cmp.not.i49.i = icmp eq ptr %msg2.0.i40.i, %waiting_events.i
  br i1 %cmp.not.i49.i, label %ipmi_free_recv_msg.exit.i.i.free_recv_msg_list.exit.i_crit_edge, label %ipmi_free_recv_msg.exit.i.i.for.body.i42.i_crit_edge

ipmi_free_recv_msg.exit.i.i.for.body.i42.i_crit_edge: ; preds = %ipmi_free_recv_msg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i42.i

ipmi_free_recv_msg.exit.i.i.free_recv_msg_list.exit.i_crit_edge: ; preds = %ipmi_free_recv_msg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %free_recv_msg_list.exit.i

free_recv_msg_list.exit.i:                        ; preds = %ipmi_free_recv_msg.exit.i.i.free_recv_msg_list.exit.i_crit_edge, %free_smi_msg_list.exit.i.free_recv_msg_list.exit.i_crit_edge
  %cmd_rcvrs_mutex.i = getelementptr i8, ptr %ref, i32 4040
  tail call void @mutex_lock_nested(ptr noundef %cmd_rcvrs_mutex.i, i32 noundef 0) #22
  %32 = ptrtoint ptr %list.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %list.i, ptr %list.i, align 4
  %33 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %list.i, ptr %0, align 4
  %cmd_rcvrs.i = getelementptr i8, ptr %ref, i32 4132
  %34 = ptrtoint ptr %cmd_rcvrs.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile ptr, ptr %cmd_rcvrs.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %35, %cmd_rcvrs.i
  br i1 %cmp.i.not.i.i, label %free_recv_msg_list.exit.i.list_splice_init_rcu.exit.i_crit_edge, label %if.then.i.i

free_recv_msg_list.exit.i.list_splice_init_rcu.exit.i_crit_edge: ; preds = %free_recv_msg_list.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_splice_init_rcu.exit.i

if.then.i.i:                                      ; preds = %free_recv_msg_list.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev2.i.i.i = getelementptr i8, ptr %ref, i32 4136
  %36 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prev2.i.i.i, align 4
  %38 = ptrtoint ptr %cmd_rcvrs.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %cmd_rcvrs.i, ptr %cmd_rcvrs.i, align 4
  store volatile ptr %cmd_rcvrs.i, ptr %prev2.i.i.i, align 4
  call void @synchronize_rcu() #22
  %39 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %list.i, ptr %37, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !521
  %40 = ptrtoint ptr %list.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %35, ptr %list.i, align 4
  %prev36.i.i.i = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  %41 = ptrtoint ptr %prev36.i.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %list.i, ptr %prev36.i.i.i, align 4
  %42 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %37, ptr %0, align 4
  br label %list_splice_init_rcu.exit.i

list_splice_init_rcu.exit.i:                      ; preds = %if.then.i.i, %free_recv_msg_list.exit.i.list_splice_init_rcu.exit.i_crit_edge
  call void @mutex_unlock(ptr noundef %cmd_rcvrs_mutex.i) #22
  %43 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %list.i, align 4
  %cmp.not53.i = icmp eq ptr %44, %list.i
  br i1 %cmp.not53.i, label %list_splice_init_rcu.exit.i.for.body14.i.preheader_crit_edge, label %list_splice_init_rcu.exit.i.for.body.i_crit_edge

list_splice_init_rcu.exit.i.for.body.i_crit_edge: ; preds = %list_splice_init_rcu.exit.i
  br label %for.body.i

list_splice_init_rcu.exit.i.for.body14.i.preheader_crit_edge: ; preds = %list_splice_init_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body14.i.preheader

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %list_splice_init_rcu.exit.i.for.body.i_crit_edge
  %rcvr.054.i = phi ptr [ %rcvr2.0.i, %for.body.i.for.body.i_crit_edge ], [ %44, %list_splice_init_rcu.exit.i.for.body.i_crit_edge ]
  %45 = ptrtoint ptr %rcvr.054.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %rcvr2.0.i = load ptr, ptr %rcvr.054.i, align 4
  call void @kfree(ptr noundef %rcvr.054.i) #22
  %cmp.not.i = icmp eq ptr %rcvr2.0.i, %list.i
  br i1 %cmp.not.i, label %for.body.i.for.body14.i.preheader_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.body.i.for.body14.i.preheader_crit_edge:      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body14.i.preheader

for.body14.i.preheader:                           ; preds = %for.body.i.for.body14.i.preheader_crit_edge, %list_splice_init_rcu.exit.i.for.body14.i.preheader_crit_edge
  br label %for.body14.i

for.body14.i:                                     ; preds = %for.inc21.i.for.body14.i_crit_edge, %for.body14.i.preheader
  %i.055.i = phi i32 [ %inc.i, %for.inc21.i.for.body14.i_crit_edge ], [ 0, %for.body14.i.preheader ]
  %arrayidx.i = getelementptr %struct.ipmi_smi, ptr %add.ptr, i32 0, i32 20, i32 %i.055.i
  %46 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %bf.load.i = load i8, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %for.body14.i.for.inc21.i_crit_edge, label %land.lhs.true.i

for.body14.i.for.inc21.i_crit_edge:               ; preds = %for.body14.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc21.i

land.lhs.true.i:                                  ; preds = %for.body14.i
  %recv_msg.i = getelementptr %struct.ipmi_smi, ptr %add.ptr, i32 0, i32 20, i32 %i.055.i, i32 5
  %47 = ptrtoint ptr %recv_msg.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %recv_msg.i, align 4
  %tobool17.not.i = icmp eq ptr %48, null
  br i1 %tobool17.not.i, label %land.lhs.true.i.for.inc21.i_crit_edge, label %if.then.i

land.lhs.true.i.for.inc21.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc21.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %user.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %48, i32 0, i32 2
  %49 = ptrtoint ptr %user.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %user.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %50, null
  br i1 %tobool.not.i.i, label %if.then.i.ipmi_free_recv_msg.exit.i_crit_edge, label %land.lhs.true.i.i

if.then.i.ipmi_free_recv_msg.exit.i_crit_edge:    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit.i

land.lhs.true.i.i:                                ; preds = %if.then.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %51 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool1.not.i.i = icmp eq i32 %51, 0
  br i1 %tobool1.not.i.i, label %if.then.i50.i, label %land.lhs.true.i.i.ipmi_free_recv_msg.exit.i_crit_edge

land.lhs.true.i.i.ipmi_free_recv_msg.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit.i

if.then.i50.i:                                    ; preds = %land.lhs.true.i.i
  %refcount.i.i = getelementptr inbounds %struct.ipmi_user, ptr %50, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  call void @llvm.prefetch.p0(ptr %refcount.i.i, i32 1, i32 3, i32 1) #22
  %52 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i, ptr %refcount.i.i, i32 1, ptr elementtype(i32) %refcount.i.i) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %52, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i52.i, label %if.end5.i.i.i.i.i.i

if.end5.i.i.i.i.i.i:                              ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i.i, label %if.end5.i.i.i.i.i.i.ipmi_free_recv_msg.exit.i_crit_edge, label %if.then10.i.i.i.i.i.i, !prof !498

if.end5.i.i.i.i.i.i.ipmi_free_recv_msg.exit.i_crit_edge: ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit.i

if.then10.i.i.i.i.i.i:                            ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %refcount.i.i, i32 noundef 3) #22
  br label %ipmi_free_recv_msg.exit.i

if.then.i.i52.i:                                  ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %53 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i.i.i = getelementptr %struct.ipmi_user, ptr %50, i32 0, i32 8
  %call.i.i.i51.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %53, ptr noundef %remove_work.i.i.i) #22
  br label %ipmi_free_recv_msg.exit.i

ipmi_free_recv_msg.exit.i:                        ; preds = %if.then.i.i52.i, %if.then10.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.ipmi_free_recv_msg.exit.i_crit_edge, %land.lhs.true.i.i.ipmi_free_recv_msg.exit.i_crit_edge, %if.then.i.ipmi_free_recv_msg.exit.i_crit_edge
  %done.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %48, i32 0, i32 7
  %54 = ptrtoint ptr %done.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %done.i.i, align 4
  call void %55(ptr noundef nonnull %48) #22
  br label %for.inc21.i

for.inc21.i:                                      ; preds = %ipmi_free_recv_msg.exit.i, %land.lhs.true.i.for.inc21.i_crit_edge, %for.body14.i.for.inc21.i_crit_edge
  %inc.i = add nuw nsw i32 %i.055.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 64
  br i1 %exitcond.not.i, label %clean_up_interface_data.exit, label %for.inc21.i.for.body14.i_crit_edge

for.inc21.i.for.body14.i_crit_edge:               ; preds = %for.inc21.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body14.i

clean_up_interface_data.exit:                     ; preds = %for.inc21.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %list.i) #22
  call void @kfree(ptr noundef %add.ptr) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ipmi_unregister_smi(ptr noundef %intf) #1 align 64 {
entry:
  %tmplist.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %intf_num1 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 1
  %0 = ptrtoint ptr %intf_num1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %intf_num1, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @ipmi_interfaces_mutex, i32 noundef 0) #22
  %2 = ptrtoint ptr %intf_num1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %intf_num1, align 4
  %in_shutdown = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 3
  %3 = ptrtoint ptr %in_shutdown to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 1, ptr %in_shutdown, align 4
  %link = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %link) #22
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del_rcu.exit_crit_edge

entry.list_del_rcu.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 4, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %link, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %entry.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 4, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @ipmi_interfaces_mutex) #22
  tail call void @synchronize_srcu(ptr noundef nonnull @ipmi_interfaces_srcu) #22
  tail call void @mutex_lock_nested(ptr noundef nonnull @smi_watchers_mutex, i32 noundef 0) #22
  %w.042 = load ptr, ptr @smi_watchers, align 4
  %cmp.not43 = icmp eq ptr %w.042, @smi_watchers
  br i1 %cmp.not43, label %list_del_rcu.exit.for.end_crit_edge, label %list_del_rcu.exit.for.body_crit_edge

list_del_rcu.exit.for.body_crit_edge:             ; preds = %list_del_rcu.exit
  br label %for.body

list_del_rcu.exit.for.end_crit_edge:              ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %list_del_rcu.exit.for.body_crit_edge
  %w.044 = phi ptr [ %w.0, %for.body.for.body_crit_edge ], [ %w.042, %list_del_rcu.exit.for.body_crit_edge ]
  %smi_gone = getelementptr inbounds %struct.ipmi_smi_watcher, ptr %w.044, i32 0, i32 3
  %11 = ptrtoint ptr %smi_gone to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %smi_gone, align 4
  tail call void %12(i32 noundef %1) #22
  %13 = ptrtoint ptr %w.044 to i32
  call void @__asan_load4_noabort(i32 %13)
  %w.0 = load ptr, ptr %w.044, align 4
  %cmp.not = icmp eq ptr %w.0, @smi_watchers
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %list_del_rcu.exit.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @smi_watchers_mutex) #22
  %users_srcu = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 6
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef %users_srcu) #22
  %dep_map.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 6, i32 16
  tail call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i) #22
  %users = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 5
  %14 = ptrtoint ptr %users to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %users, align 4
  %cmp.i.not45 = icmp eq ptr %15, %users
  br i1 %cmp.i.not45, label %for.end.while.end_crit_edge, label %for.end.while.body_crit_edge

for.end.while.body_crit_edge:                     ; preds = %for.end
  br label %while.body

for.end.while.end_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %for.end.while.body_crit_edge
  %16 = phi ptr [ %18, %while.body.while.body_crit_edge ], [ %15, %for.end.while.body_crit_edge ]
  tail call fastcc void @_ipmi_destroy_user(ptr noundef %16)
  %17 = ptrtoint ptr %users to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %users, align 4
  %cmp.i.not = icmp eq ptr %18, %users
  br i1 %cmp.i.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %for.end.while.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i)
  %tobool.not.i = icmp ult i32 %call.i, 2
  br i1 %tobool.not.i, label %while.end.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

while.end.srcu_read_unlock.exit_crit_edge:        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %while.end
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i, !prof !498

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %while.end.srcu_read_unlock.exit_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %users_srcu, i32 noundef %call.i) #22
  %handlers = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %19 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %handlers, align 4
  %shutdown = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %shutdown to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %shutdown, align 4
  %tobool16.not = icmp eq ptr %22, null
  br i1 %tobool16.not, label %srcu_read_unlock.exit.if.end_crit_edge, label %if.then

srcu_read_unlock.exit.if.end_crit_edge:           ; preds = %srcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %srcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #24
  %send_info = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %23 = ptrtoint ptr %send_info to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %send_info, align 8
  tail call void %22(ptr noundef %24) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %srcu_read_unlock.exit.if.end_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmplist.i) #22
  %25 = getelementptr inbounds %struct.list_head, ptr %tmplist.i, i32 0, i32 1
  %26 = ptrtoint ptr %tmplist.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %tmplist.i, ptr %tmplist.i, align 4
  %27 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %tmplist.i, ptr %25, align 4
  %hp_xmit_msgs.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 29
  %28 = ptrtoint ptr %hp_xmit_msgs.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %hp_xmit_msgs.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %29, %hp_xmit_msgs.i
  br i1 %cmp.i.not.i.i, label %if.end.list_splice_tail.exit.i_crit_edge, label %if.then.i.i

if.end.list_splice_tail.exit.i_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_splice_tail.exit.i

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %prev2.i.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 29, i32 1
  %30 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev2.i.i.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %32 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %tmplist.i, ptr %prev3.i.i.i, align 4
  %33 = ptrtoint ptr %tmplist.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %29, ptr %tmplist.i, align 4
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %tmplist.i, ptr %31, align 4
  %35 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %31, ptr %25, align 4
  br label %list_splice_tail.exit.i

list_splice_tail.exit.i:                          ; preds = %if.then.i.i, %if.end.list_splice_tail.exit.i_crit_edge
  %xmit_msgs.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 27
  %36 = ptrtoint ptr %xmit_msgs.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile ptr, ptr %xmit_msgs.i, align 4
  %cmp.i.not.i22.i = icmp eq ptr %37, %xmit_msgs.i
  br i1 %cmp.i.not.i22.i, label %list_splice_tail.exit.i.list_splice_tail.exit27.i_crit_edge, label %if.then.i26.i

list_splice_tail.exit.i.list_splice_tail.exit27.i_crit_edge: ; preds = %list_splice_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_splice_tail.exit27.i

if.then.i26.i:                                    ; preds = %list_splice_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %38 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %25, align 4
  %prev2.i.i24.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 27, i32 1
  %40 = ptrtoint ptr %prev2.i.i24.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prev2.i.i24.i, align 4
  %prev3.i.i25.i = getelementptr inbounds %struct.list_head, ptr %37, i32 0, i32 1
  %42 = ptrtoint ptr %prev3.i.i25.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %39, ptr %prev3.i.i25.i, align 4
  %43 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %37, ptr %39, align 4
  %44 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %tmplist.i, ptr %41, align 4
  store ptr %41, ptr %25, align 4
  br label %list_splice_tail.exit27.i

list_splice_tail.exit27.i:                        ; preds = %if.then.i26.i, %list_splice_tail.exit.i.list_splice_tail.exit27.i_crit_edge
  %waiting_rcv_msgs.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 23
  %curr_msg.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 28
  %45 = ptrtoint ptr %curr_msg.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %curr_msg.i, align 4
  %tobool.not33.i = icmp eq ptr %46, null
  br i1 %tobool.not33.i, label %list_splice_tail.exit27.i.while.end.i_crit_edge, label %list_splice_tail.exit27.i.land.rhs.i38_crit_edge

list_splice_tail.exit27.i.land.rhs.i38_crit_edge: ; preds = %list_splice_tail.exit27.i
  br label %land.rhs.i38

list_splice_tail.exit27.i.while.end.i_crit_edge:  ; preds = %list_splice_tail.exit27.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end.i

land.rhs.i38:                                     ; preds = %while.body.i.land.rhs.i38_crit_edge, %list_splice_tail.exit27.i.land.rhs.i38_crit_edge
  %47 = ptrtoint ptr %waiting_rcv_msgs.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile ptr, ptr %waiting_rcv_msgs.i, align 4
  %cmp.i.not.i = icmp eq ptr %48, %waiting_rcv_msgs.i
  br i1 %cmp.i.not.i, label %land.rhs.i38.while.end.i_crit_edge, label %while.body.i

land.rhs.i38.while.end.i_crit_edge:               ; preds = %land.rhs.i38
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end.i

while.body.i:                                     ; preds = %land.rhs.i38
  %call3.i = call i32 @schedule_timeout(i32 noundef 1) #22
  %49 = ptrtoint ptr %curr_msg.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %curr_msg.i, align 4
  %tobool.not.i39 = icmp eq ptr %50, null
  br i1 %tobool.not.i39, label %while.body.i.while.end.i_crit_edge, label %while.body.i.land.rhs.i38_crit_edge

while.body.i.land.rhs.i38_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i38

while.body.i.while.end.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end.i

while.end.i:                                      ; preds = %while.body.i.while.end.i_crit_edge, %land.rhs.i38.while.end.i_crit_edge, %list_splice_tail.exit27.i.while.end.i_crit_edge
  %51 = ptrtoint ptr %tmplist.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %tmplist.i, align 4
  %cmp.i28.not34.i = icmp eq ptr %52, %tmplist.i
  br i1 %cmp.i28.not34.i, label %while.end.i.for.cond.preheader.i_crit_edge, label %while.end.i.while.body8.i_crit_edge

while.end.i.while.body8.i_crit_edge:              ; preds = %while.end.i
  br label %while.body8.i

while.end.i.for.cond.preheader.i_crit_edge:       ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %list_del.exit.i.for.cond.preheader.i_crit_edge, %while.end.i.for.cond.preheader.i_crit_edge
  %arrayidx.i.i.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 3
  %arrayidx2.i.i.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 2
  br label %for.body.i

while.body8.i:                                    ; preds = %list_del.exit.i.while.body8.i_crit_edge, %while.end.i.while.body8.i_crit_edge
  %53 = phi ptr [ %72, %list_del.exit.i.while.body8.i_crit_edge ], [ %52, %while.end.i.while.body8.i_crit_edge ]
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %53) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %while.body8.i.list_del.exit.i_crit_edge

while.body8.i.list_del.exit.i_crit_edge:          ; preds = %while.body8.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %while.body8.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %prev.i.i.i, align 4
  %56 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %53, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %55, ptr %prev1.i.i.i.i, align 4
  %59 = ptrtoint ptr %55 to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %57, ptr %55, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %while.body8.i.list_del.exit.i_crit_edge
  %60 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr inttoptr (i32 256 to ptr), ptr %53, align 4
  %prev.i30.i = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  %61 = ptrtoint ptr %prev.i30.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i30.i, align 4
  %data.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %53, i32 0, i32 5
  %62 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %data.i.i, align 4
  %64 = or i8 %63, 4
  %rsp.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %53, i32 0, i32 7
  %65 = ptrtoint ptr %rsp.i.i to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 %64, ptr %rsp.i.i, align 4
  %arrayidx4.i.i = getelementptr %struct.ipmi_smi_msg, ptr %53, i32 0, i32 5, i32 1
  %66 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %arrayidx4.i.i, align 1
  %arrayidx6.i.i = getelementptr %struct.ipmi_smi_msg, ptr %53, i32 0, i32 7, i32 1
  %68 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 %67, ptr %arrayidx6.i.i, align 1
  %arrayidx8.i.i = getelementptr %struct.ipmi_smi_msg, ptr %53, i32 0, i32 7, i32 2
  %69 = ptrtoint ptr %arrayidx8.i.i to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 -1, ptr %arrayidx8.i.i, align 2
  %rsp_size.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %53, i32 0, i32 6
  %70 = ptrtoint ptr %rsp_size.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 3, ptr %rsp_size.i.i, align 4
  %call.i.i40 = call fastcc i32 @handle_one_recv_msg(ptr noundef %intf, ptr noundef %53) #22
  %71 = ptrtoint ptr %tmplist.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile ptr, ptr %tmplist.i, align 4
  %cmp.i28.not.i = icmp eq ptr %72, %tmplist.i
  br i1 %cmp.i28.not.i, label %list_del.exit.i.for.cond.preheader.i_crit_edge, label %list_del.exit.i.while.body8.i_crit_edge

list_del.exit.i.while.body8.i_crit_edge:          ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body8.i

list_del.exit.i.for.cond.preheader.i_crit_edge:   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.preheader.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i
  %i.035.i = phi i32 [ 0, %for.cond.preheader.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %i.035.i
  %73 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %bf.load.i = load i8, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool10.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool10.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %recv_msg.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %i.035.i, i32 5
  %74 = ptrtoint ptr %recv_msg.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %recv_msg.i, align 4
  %recv_type.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %recv_type.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 1, ptr %recv_type.i.i, align 4
  %msg_data.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %75, i32 0, i32 8
  %77 = ptrtoint ptr %msg_data.i.i to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 -1, ptr %msg_data.i.i, align 4
  %msg1.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %75, i32 0, i32 5
  %78 = ptrtoint ptr %msg1.i.i to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %msg1.i.i, align 4
  %80 = or i8 %79, 1
  store i8 %80, ptr %msg1.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %75, i32 0, i32 5, i32 2
  %81 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_store2_noabort(i32 %81)
  store i16 1, ptr %data_len.i.i, align 2
  %data.i31.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %75, i32 0, i32 5, i32 3
  %82 = ptrtoint ptr %data.i31.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %msg_data.i.i, ptr %data.i31.i, align 4
  %call.i.i32.i = call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef %75) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i32.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i32.i, 0
  br i1 %tobool.not.i.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.i.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %arrayidx.i.i.i, i32 1, i32 3, i32 1) #22
  %83 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.i.i, ptr %arrayidx.i.i.i, i32 1, ptr elementtype(i32) %arrayidx.i.i.i) #22, !srcloc !514
  br label %for.inc.i

if.else.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i5.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx2.i.i.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %arrayidx2.i.i.i, i32 1, i32 3, i32 1) #22
  %84 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx2.i.i.i, ptr %arrayidx2.i.i.i, i32 1, ptr elementtype(i32) %arrayidx2.i.i.i) #22, !srcloc !514
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else.i.i.i, %if.then.i.i.i, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.035.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 64
  br i1 %exitcond.not.i, label %cleanup_smi_msgs.exit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

cleanup_smi_msgs.exit:                            ; preds = %for.inc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmplist.i) #22
  %bmc_reg_mutex.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 8
  call void @mutex_lock_nested(ptr noundef %bmc_reg_mutex.i, i32 noundef 0) #22
  call fastcc void @__ipmi_bmc_unregister(ptr noundef %intf) #22
  call void @mutex_unlock(ptr noundef %bmc_reg_mutex.i) #22
  call void @cleanup_srcu_struct(ptr noundef %users_srcu) #22
  %refcount = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 2
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %85 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %85, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i41, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %cleanup_smi_msgs.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.kref_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.kref_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #22
  br label %kref_put.exit

if.then.i41:                                      ; preds = %cleanup_smi_msgs.exit
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  call fastcc void @intf_free(ptr noundef %refcount) #22, !callees !509
  br label %kref_put.exit

kref_put.exit:                                    ; preds = %if.then.i41, %if.then10.i.i.i.i, %if.end5.i.i.i.i.kref_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ipmi_smi_msg_received(ptr noundef %intf, ptr noundef %msg) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %run_to_completion1 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 61
  %0 = ptrtoint ptr %run_to_completion1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %run_to_completion1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %do.body2, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %waiting_rcv_msgs_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 22
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %waiting_rcv_msgs_lock) #22
  br label %if.end

if.end:                                           ; preds = %do.body2, %entry.if.end_crit_edge
  %flags.0 = phi i32 [ 0, %entry.if.end_crit_edge ], [ %call3, %do.body2 ]
  %waiting_rcv_msgs = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 23
  %prev.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 23, i32 1
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %msg, ptr noundef %3, ptr noundef %waiting_rcv_msgs) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_add_tail.exit_crit_edge

if.end.list_add_tail.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %4 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %msg, ptr %prev.i, align 4
  %5 = ptrtoint ptr %msg to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %waiting_rcv_msgs, ptr %msg, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %msg, i32 0, i32 1
  %6 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev3.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %msg, ptr %3, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end.list_add_tail.exit_crit_edge
  br i1 %tobool.not, label %if.then7, label %list_add_tail.exit.if.end25_crit_edge

list_add_tail.exit.if.end25_crit_edge:            ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25

if.then7:                                         ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #24
  %waiting_rcv_msgs_lock8 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 22
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %waiting_rcv_msgs_lock8, i32 noundef %flags.0) #22
  %xmit_msgs_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 26
  %call20 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %xmit_msgs_lock) #22
  br label %if.end25

if.end25:                                         ; preds = %if.then7, %list_add_tail.exit.if.end25_crit_edge
  %flags.1 = phi i32 [ %call20, %if.then7 ], [ %flags.0, %list_add_tail.exit.if.end25_crit_edge ]
  %curr_msg = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 28
  %8 = ptrtoint ptr %curr_msg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %curr_msg, align 4
  %cmp26 = icmp eq ptr %9, %msg
  br i1 %cmp26, label %if.then28, label %if.end25.if.end30_crit_edge

if.end25.if.end30_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end30

if.then28:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #24
  %10 = ptrtoint ptr %curr_msg to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %curr_msg, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %if.end25.if.end30_crit_edge
  br i1 %tobool.not, label %if.then32, label %if.then36.critedge

if.then32:                                        ; preds = %if.end30
  %xmit_msgs_lock33 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %xmit_msgs_lock33, i32 noundef %flags.1) #22
  %state.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 25, i32 1
  %call.i = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %state.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.then32.if.end38_crit_edge

if.then32.if.end38_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end38

if.then.i:                                        ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #24
  %recv_tasklet37 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 25
  tail call void @__tasklet_schedule(ptr noundef %recv_tasklet37) #22
  br label %if.end38

if.then36.critedge:                               ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #24
  %recv_tasklet = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 25
  tail call void @smi_recv_tasklet(ptr noundef %recv_tasklet)
  br label %if.end38

if.end38:                                         ; preds = %if.then36.critedge, %if.then.i, %if.then32.if.end38_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ipmi_smi_watchdog_pretimeout(ptr noundef %intf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %in_shutdown = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 3
  %0 = ptrtoint ptr %in_shutdown to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %in_shutdown, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %entry
  %watchdog_pretimeouts_to_deliver = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 24
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %watchdog_pretimeouts_to_deliver, i32 noundef 4) #22
  %2 = ptrtoint ptr %watchdog_pretimeouts_to_deliver to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 1, ptr %watchdog_pretimeouts_to_deliver, align 4
  %state.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 25, i32 1
  %call.i = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %state.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %recv_tasklet = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 25
  tail call void @__tasklet_schedule(ptr noundef %recv_tasklet) #22
  br label %return

return:                                           ; preds = %if.then.i, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @ipmi_alloc_smi_msg() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 2592, i32 noundef 576) #27
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %done = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i, i32 0, i32 8
  %1 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @free_smi_msg, ptr %done, align 4
  %user_data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i, i32 0, i32 3
  %2 = ptrtoint ptr %user_data to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %user_data, align 8
  %type = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i, i32 0, i32 1
  %3 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %type, align 8
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @smi_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @smi_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @smi_msg_inuse_count, ptr nonnull @smi_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @smi_msg_inuse_count) #22, !srcloc !514
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret ptr %call7.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @free_smi_msg(ptr noundef %msg) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @smi_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @smi_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @smi_msg_inuse_count, ptr nonnull @smi_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @smi_msg_inuse_count) #22, !srcloc !508
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kfree(ptr noundef %msg) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ipmi_free_recv_msg(ptr noundef %msg) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %user = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 2
  %0 = ptrtoint ptr %user to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %user, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %2 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %refcount = getelementptr inbounds %struct.ipmi_user, ptr %1, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.if.end_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.if.end_crit_edge:                 ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #22
  br label %if.end

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %4 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i = getelementptr %struct.ipmi_user, ptr %1, i32 0, i32 8
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %4, ptr noundef %remove_work.i) #22
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %done = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 7
  %5 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %done, align 4
  tail call void %6(ptr noundef %msg) #22
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @cleanup_ipmi() #9 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %.b22 = load i1, ptr @initialized, align 1
  br i1 %.b22, label %if.then, label %entry.if.end14_crit_edge

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end14

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @remove_work_wq, align 4
  tail call void @destroy_workqueue(ptr noundef %0) #22
  %call = tail call i32 @atomic_notifier_chain_unregister(ptr noundef nonnull @panic_notifier_list, ptr noundef nonnull @panic_block) #22
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @stop_operation, i32 noundef 4) #22
  store volatile i32 1, ptr @stop_operation, align 4
  %call1 = tail call i32 @del_timer_sync(ptr noundef nonnull @ipmi_timer) #22
  store i1 false, ptr @initialized, align 1
  %call.i.i24 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @smi_msg_inuse_count, i32 noundef 4) #22
  %1 = load volatile i32, ptr @smi_msg_inuse_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %if.then.if.end_crit_edge, label %do.end

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.8, i32 noundef %1) #25
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then.if.end_crit_edge
  %call.i.i25 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @recv_msg_inuse_count, i32 noundef 4) #22
  %2 = load volatile i32, ptr @recv_msg_inuse_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp6.not = icmp eq i32 %2, 0
  br i1 %cmp6.not, label %if.end.if.end13_crit_edge, label %do.end10

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

do.end10:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.37, ptr noundef nonnull @.str.8, i32 noundef %2) #25
  br label %if.end13

if.end13:                                         ; preds = %do.end10, %if.end.if.end13_crit_edge
  tail call void @cleanup_srcu_struct(ptr noundef nonnull @ipmi_interfaces_srcu) #22
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %entry.if.end14_crit_edge
  %.b2123 = load i1, ptr @drvregistered, align 1
  br i1 %.b2123, label %if.then16, label %if.end14.if.end17_crit_edge

if.end14.if.end17_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17

if.then16:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @driver_unregister(ptr noundef getelementptr inbounds (%struct.platform_driver, ptr @ipmidriver, i32 0, i32 5)) #22
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end14.if.end17_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @atomic_notifier_chain_unregister(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @driver_unregister(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @ipmi_init_msghandler_mod() #9 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.157, ptr noundef nonnull @.str.8) #25
  tail call void @mutex_lock_nested(ptr noundef nonnull @ipmi_interfaces_mutex, i32 noundef 0) #22
  %.b6.i = load i1, ptr @drvregistered, align 1
  br i1 %.b6.i, label %entry.ipmi_register_driver.exit_crit_edge, label %if.end.i

entry.ipmi_register_driver.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_register_driver.exit

if.end.i:                                         ; preds = %entry
  %call.i = tail call i32 @driver_register(ptr noundef getelementptr inbounds (%struct.platform_driver, ptr @ipmidriver, i32 0, i32 5)) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %if.else.i, label %do.end.i

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %call3.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.150, ptr noundef nonnull @.str.8) #25
  br label %ipmi_register_driver.exit

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @drvregistered, align 1
  br label %ipmi_register_driver.exit

ipmi_register_driver.exit:                        ; preds = %if.else.i, %do.end.i, %entry.ipmi_register_driver.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %entry.ipmi_register_driver.exit_crit_edge ], [ 0, %if.else.i ], [ %call.i, %do.end.i ]
  tail call void @mutex_unlock(ptr noundef nonnull @ipmi_interfaces_mutex) #22
  ret i32 %retval.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__modver_version_show(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @panic_op_write_handler(ptr noundef %val, ptr nocapture noundef readnone %kp) #1 align 64 {
entry:
  %valcp = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %valcp) #22
  %0 = call ptr @memset(ptr %valcp, i32 255, i32 16)
  %call = call i32 @strscpy(ptr noundef nonnull %valcp, ptr noundef %val, i32 noundef 16) #22
  %call.i = call ptr @strim(ptr noundef nonnull %valcp) #22
  %call3 = call i32 @match_string(ptr noundef nonnull @ipmi_panic_event_str, i32 noundef -1, ptr noundef %call.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  store i32 %call3, ptr @ipmi_send_panic_event, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ %call3, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %valcp) #22
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @panic_op_read_handler(ptr nocapture noundef writeonly %buffer, ptr nocapture noundef readnone %kp) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @ipmi_send_panic_event, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %0)
  %cmp = icmp ugt i32 %0, 2
  br i1 %cmp, label %entry.if.end_crit_edge, label %if.else

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx = getelementptr [4 x ptr], ptr @ipmi_panic_event_str, i32 0, i32 %0
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge
  %event_str.0 = phi ptr [ %2, %if.else ], [ @.str.45, %entry.if.end_crit_edge ]
  %call = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buffer, ptr noundef nonnull @.str.46, ptr noundef %event_str.0)
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strscpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @match_string(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strim(ptr noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__srcu_read_lock(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr noundef %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @lock_acquire(ptr noundef %map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr noundef %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @lock_release(ptr noundef %map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__srcu_read_unlock(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef %msg) unnamed_addr #1 align 64 {
entry:
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %user = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 2
  %0 = ptrtoint ptr %user to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %user, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then, label %if.else4

if.then:                                          ; preds = %entry
  %null_user_handler = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 53
  %2 = ptrtoint ptr %null_user_handler to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %null_user_handler, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %if.then.if.end_crit_edge, label %if.then2

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  tail call void %3(ptr noundef %intf, ptr noundef %msg) #22
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then.if.end_crit_edge
  %rv.0 = phi i32 [ 0, %if.then2 ], [ -22, %if.then.if.end_crit_edge ]
  %4 = ptrtoint ptr %user to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %user, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.end.ipmi_free_recv_msg.exit_crit_edge, label %land.lhs.true.i

if.end.ipmi_free_recv_msg.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit

land.lhs.true.i:                                  ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %6 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool1.not.i = icmp eq i32 %6, 0
  br i1 %tobool1.not.i, label %if.then.i, label %land.lhs.true.i.ipmi_free_recv_msg.exit_crit_edge

land.lhs.true.i.ipmi_free_recv_msg.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %refcount.i = getelementptr inbounds %struct.ipmi_user, ptr %5, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #22
  %7 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.ipmi_free_recv_msg.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !498

if.end5.i.i.i.i.i.ipmi_free_recv_msg.exit_crit_edge: ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 3) #22
  br label %ipmi_free_recv_msg.exit

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %8 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i.i = getelementptr %struct.ipmi_user, ptr %5, i32 0, i32 8
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %8, ptr noundef %remove_work.i.i) #22
  br label %ipmi_free_recv_msg.exit

ipmi_free_recv_msg.exit:                          ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.ipmi_free_recv_msg.exit_crit_edge, %land.lhs.true.i.ipmi_free_recv_msg.exit_crit_edge, %if.end.ipmi_free_recv_msg.exit_crit_edge
  %done.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 7
  %9 = ptrtoint ptr %done.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %done.i, align 4
  tail call void %10(ptr noundef %msg) #22
  br label %if.end15

if.else4:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %11 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool5.not = icmp eq i32 %11, 0
  br i1 %tobool5.not, label %if.else7, label %ipmi_free_recv_msg.exit43

ipmi_free_recv_msg.exit43:                        ; preds = %if.else4
  call void @__sanitizer_cov_trace_pc() #24
  %done.i42 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 7
  %12 = ptrtoint ptr %done.i42 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %done.i42, align 4
  tail call void %13(ptr noundef %msg) #22
  br label %if.end15

if.else7:                                         ; preds = %if.else4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #22
  %14 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -1, ptr %index, align 4, !annotation !506
  %call = call fastcc ptr @acquire_ipmi_user(ptr noundef nonnull %1, ptr noundef nonnull %index)
  %tobool10.not = icmp eq ptr %call, null
  br i1 %tobool10.not, label %if.else12, label %if.then11

if.then11:                                        ; preds = %if.else7
  %handler = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 4
  %15 = ptrtoint ptr %handler to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %handler, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %handler_data = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 5
  %19 = ptrtoint ptr %handler_data to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %handler_data, align 4
  tail call void %18(ptr noundef %msg, ptr noundef %20) #22
  %21 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %22)
  %tobool.not.i.i = icmp ult i32 %22, 2
  br i1 %tobool.not.i.i, label %if.then11.release_ipmi_user.exit_crit_edge, label %land.rhs.i.i

if.then11.release_ipmi_user.exit_crit_edge:       ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

land.rhs.i.i:                                     ; preds = %if.then11
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.release_ipmi_user.exit_crit_edge, label %if.then.i.i44, !prof !498

land.rhs.i.i.release_ipmi_user.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %release_ipmi_user.exit

if.then.i.i44:                                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %release_ipmi_user.exit

release_ipmi_user.exit:                           ; preds = %if.then.i.i44, %land.rhs.i.i.release_ipmi_user.exit_crit_edge, %if.then11.release_ipmi_user.exit_crit_edge
  %release_barrier.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_user, ptr %call, i32 0, i32 2, i32 16
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %release_barrier.i, i32 noundef %22) #22
  br label %if.end13

if.else12:                                        ; preds = %if.else7
  %23 = ptrtoint ptr %user to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %user, align 4
  %tobool.not.i46 = icmp eq ptr %24, null
  br i1 %tobool.not.i46, label %if.else12.ipmi_free_recv_msg.exit61_crit_edge, label %land.lhs.true.i48

if.else12.ipmi_free_recv_msg.exit61_crit_edge:    ; preds = %if.else12
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit61

land.lhs.true.i48:                                ; preds = %if.else12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %25 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool1.not.i47 = icmp eq i32 %25, 0
  br i1 %tobool1.not.i47, label %if.then.i53, label %land.lhs.true.i48.ipmi_free_recv_msg.exit61_crit_edge

land.lhs.true.i48.ipmi_free_recv_msg.exit61_crit_edge: ; preds = %land.lhs.true.i48
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit61

if.then.i53:                                      ; preds = %land.lhs.true.i48
  %refcount.i49 = getelementptr inbounds %struct.ipmi_user, ptr %24, i32 0, i32 3
  %call.i.i.i.i.i.i.i50 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i49, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount.i49, i32 1, i32 3, i32 1) #22
  %26 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i49, ptr %refcount.i49, i32 1, ptr elementtype(i32) %refcount.i49) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i51 = extractvalue { i32, i32, i32 } %26, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i51)
  %cmp.i.i.i.i.i52 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i51, 1
  br i1 %cmp.i.i.i.i.i52, label %if.then.i.i59, label %if.end5.i.i.i.i.i55

if.end5.i.i.i.i.i55:                              ; preds = %if.then.i53
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i51)
  %.not.i.i.i.i.i54 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i51, 0
  br i1 %.not.i.i.i.i.i54, label %if.end5.i.i.i.i.i55.ipmi_free_recv_msg.exit61_crit_edge, label %if.then10.i.i.i.i.i56, !prof !498

if.end5.i.i.i.i.i55.ipmi_free_recv_msg.exit61_crit_edge: ; preds = %if.end5.i.i.i.i.i55
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit61

if.then10.i.i.i.i.i56:                            ; preds = %if.end5.i.i.i.i.i55
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i49, i32 noundef 3) #22
  br label %ipmi_free_recv_msg.exit61

if.then.i.i59:                                    ; preds = %if.then.i53
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %27 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i.i57 = getelementptr %struct.ipmi_user, ptr %24, i32 0, i32 8
  %call.i.i.i58 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %27, ptr noundef %remove_work.i.i57) #22
  br label %ipmi_free_recv_msg.exit61

ipmi_free_recv_msg.exit61:                        ; preds = %if.then.i.i59, %if.then10.i.i.i.i.i56, %if.end5.i.i.i.i.i55.ipmi_free_recv_msg.exit61_crit_edge, %land.lhs.true.i48.ipmi_free_recv_msg.exit61_crit_edge, %if.else12.ipmi_free_recv_msg.exit61_crit_edge
  %done.i60 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 7
  %28 = ptrtoint ptr %done.i60 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %done.i60, align 4
  tail call void %29(ptr noundef %msg) #22
  br label %if.end13

if.end13:                                         ; preds = %ipmi_free_recv_msg.exit61, %release_ipmi_user.exit
  %rv.1 = phi i32 [ 0, %release_ipmi_user.exit ], [ -22, %ipmi_free_recv_msg.exit61 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #22
  br label %if.end15

if.end15:                                         ; preds = %if.end13, %ipmi_free_recv_msg.exit43, %ipmi_free_recv_msg.exit
  %rv.2 = phi i32 [ 0, %ipmi_free_recv_msg.exit43 ], [ %rv.1, %if.end13 ], [ %rv.0, %ipmi_free_recv_msg.exit ]
  ret i32 %rv.2
}

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i_ipmi_req_ipmb_direct(ptr noundef %intf, ptr nocapture noundef readonly %addr, i32 noundef %msgid, ptr nocapture noundef readonly %msg, ptr nocapture noundef writeonly %smi_msg, ptr noundef %recv_msg) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %msg1 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 5
  %0 = ptrtoint ptr %msg1 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %msg1, align 4
  %2 = and i8 %1, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  %handlers = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %3 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %handlers, align 4
  %flags = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 4
  %and2 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  br i1 %tobool.not, label %if.end.if.end8_crit_edge, label %land.lhs.true

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8

land.lhs.true:                                    ; preds = %if.end
  %data_len = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 2
  %7 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %data_len, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %cmp = icmp eq i16 %8, 0
  br i1 %cmp, label %if.then7, label %land.lhs.true.if.end8_crit_edge

land.lhs.true.if.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8

if.then7:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  %stats = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats, i32 1, i32 3, i32 1) #22
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats, ptr %stats, i32 1, ptr elementtype(i32) %stats) #22, !srcloc !514
  br label %cleanup

if.end8:                                          ; preds = %land.lhs.true.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %data_len9 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 2
  %10 = ptrtoint ptr %data_len9 to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %data_len9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 268, i16 %11)
  %cmp11 = icmp ugt i16 %11, 268
  br i1 %cmp11, label %if.then13, label %if.end16

if.then13:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  %stats14 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i2 = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats14, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats14, i32 1, i32 3, i32 1) #22
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats14, ptr %stats14, i32 1, ptr elementtype(i32) %stats14) #22, !srcloc !514
  br label %cleanup

if.end16:                                         ; preds = %if.end8
  %rq_lun = getelementptr inbounds %struct.ipmi_ipmb_direct_addr, ptr %addr, i32 0, i32 4
  %13 = ptrtoint ptr %rq_lun to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %rq_lun, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %14)
  %cmp18 = icmp ugt i8 %14, 3
  br i1 %cmp18, label %if.end16.if.then23_crit_edge, label %lor.lhs.false

if.end16.if.then23_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then23

lor.lhs.false:                                    ; preds = %if.end16
  %rs_lun = getelementptr inbounds %struct.ipmi_ipmb_direct_addr, ptr %addr, i32 0, i32 3
  %15 = ptrtoint ptr %rs_lun to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %rs_lun, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %16)
  %cmp21 = icmp ugt i8 %16, 3
  br i1 %cmp21, label %lor.lhs.false.if.then23_crit_edge, label %if.end26

lor.lhs.false.if.then23_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then23

if.then23:                                        ; preds = %lor.lhs.false.if.then23_crit_edge, %if.end16.if.then23_crit_edge
  %stats24 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i3 = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats24, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats24, i32 1, i32 3, i32 1) #22
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats24, ptr %stats24, i32 1, ptr elementtype(i32) %stats24) #22, !srcloc !514
  br label %cleanup

if.end26:                                         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  %type = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 1
  %18 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %type, align 4
  %msgid27 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 2
  %19 = ptrtoint ptr %msgid27 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %msgid, ptr %msgid27, align 4
  %20 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %msg, align 4
  %shl = shl i8 %21, 2
  %rs_lun.rq_lun = select i1 %tobool.not, ptr %rs_lun, ptr %rq_lun
  %rq_lun.rs_lun = select i1 %tobool.not, ptr %rq_lun, ptr %rs_lun
  %22 = ptrtoint ptr %rs_lun.rq_lun to i32
  call void @__asan_load1_noabort(i32 %22)
  %.sink5 = load i8, ptr %rs_lun.rq_lun, align 1
  %or49 = or i8 %shl, %.sink5
  %data51 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5
  %23 = ptrtoint ptr %data51 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %or49, ptr %data51, align 4
  %24 = ptrtoint ptr %rq_lun.rs_lun to i32
  call void @__asan_load1_noabort(i32 %24)
  %.sink4 = load i8, ptr %rq_lun.rs_lun, align 1
  %.sink.in = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 4
  %25 = ptrtoint ptr %.sink.in to i32
  call void @__asan_load4_noabort(i32 %25)
  %.sink = load i32, ptr %.sink.in, align 4
  %.tr = trunc i32 %.sink to i8
  %26 = shl i8 %.tr, 2
  %conv58 = or i8 %26, %.sink4
  %27 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 2
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %conv58, ptr %27, align 2
  %slave_addr = getelementptr inbounds %struct.ipmi_ipmb_direct_addr, ptr %addr, i32 0, i32 2
  %29 = ptrtoint ptr %slave_addr to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %slave_addr, align 2
  %arrayidx63 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 1
  %31 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %30, ptr %arrayidx63, align 1
  %cmd = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 1
  %32 = ptrtoint ptr %cmd to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %cmd, align 1
  %arrayidx65 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 3
  %34 = ptrtoint ptr %arrayidx65 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %33, ptr %arrayidx65, align 1
  %add.ptr = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 4
  %data67 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 3
  %35 = ptrtoint ptr %data67 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %data67, align 4
  %37 = ptrtoint ptr %data_len9 to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %data_len9, align 2
  %conv69 = zext i16 %38 to i32
  %39 = call ptr @memcpy(ptr %add.ptr, ptr %36, i32 %conv69)
  %40 = load i16, ptr %data_len9, align 2
  %conv71 = zext i16 %40 to i32
  %add72 = add nuw nsw i32 %conv71, 4
  %data_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 4
  %41 = ptrtoint ptr %data_size to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %add72, ptr %data_size, align 4
  %user_data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 3
  %42 = ptrtoint ptr %user_data to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %recv_msg, ptr %user_data, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end26, %if.then23, %if.then13, %if.then7, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -90, %if.then13 ], [ -22, %if.then23 ], [ 0, %if.end26 ], [ -22, %if.then7 ], [ -97, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i_ipmi_req_lan(ptr noundef %intf, ptr nocapture noundef readonly %addr, i32 noundef %msgid, ptr nocapture noundef readonly %msg, ptr nocapture noundef %smi_msg, ptr noundef %recv_msg, i8 noundef zeroext %source_lun, i32 noundef %retries, i32 noundef %retry_time_ms) unnamed_addr #1 align 64 {
entry:
  %ipmb_seq = alloca i8, align 1
  %seqid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %ipmb_seq) #22
  %0 = ptrtoint ptr %ipmb_seq to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %ipmb_seq, align 1, !annotation !506
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %seqid) #22
  %1 = ptrtoint ptr %seqid to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %seqid, align 4, !annotation !506
  %channel = getelementptr inbounds %struct.ipmi_addr, ptr %addr, i32 0, i32 1
  %2 = ptrtoint ptr %channel to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %channel, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 15, i16 %3)
  %cmp = icmp sgt i16 %3, 15
  br i1 %cmp, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %stats = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats, i32 1, i32 3, i32 1) #22
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats, ptr %stats, i32 1, ptr elementtype(i32) %stats) #22, !srcloc !514
  br label %cleanup

do.end:                                           ; preds = %entry
  %channel_list = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 55
  %5 = ptrtoint ptr %channel_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %channel_list, align 4
  %idxprom = sext i16 %3 to i32
  %arrayidx3 = getelementptr %struct.ipmi_channel, ptr %6, i32 %idxprom
  %7 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx3, align 1
  %9 = and i8 %8, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %9)
  %switch = icmp eq i8 %9, 4
  br i1 %switch, label %if.end17, label %if.then14

if.then14:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %stats15 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i107 = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats15, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats15, i32 1, i32 3, i32 1) #22
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats15, ptr %stats15, i32 1, ptr elementtype(i32) %stats15) #22, !srcloc !514
  br label %cleanup

if.end17:                                         ; preds = %do.end
  %data_len = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 2
  %11 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %data_len, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 260, i16 %12)
  %cmp19 = icmp ugt i16 %12, 260
  br i1 %cmp19, label %if.then21, label %if.end24

if.then21:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  %stats22 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i108 = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats22, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats22, i32 1, i32 3, i32 1) #22
  %13 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats22, ptr %stats22, i32 1, ptr elementtype(i32) %stats22) #22, !srcloc !514
  br label %cleanup

if.end24:                                         ; preds = %if.end17
  %lun = getelementptr inbounds %struct.ipmi_lan_addr, ptr %addr, i32 0, i32 6
  %14 = ptrtoint ptr %lun to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %lun, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %15)
  %cmp26 = icmp ugt i8 %15, 3
  br i1 %cmp26, label %if.then28, label %if.end31

if.then28:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  %stats29 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 60
  %call.i.i109 = tail call zeroext i1 @__kasan_check_write(ptr noundef %stats29, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %stats29, i32 1, i32 3, i32 1) #22
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stats29, ptr %stats29, i32 1, ptr elementtype(i32) %stats29) #22, !srcloc !514
  br label %cleanup

if.end31:                                         ; preds = %if.end24
  %addr32 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 3
  %17 = call ptr @memcpy(ptr %addr32, ptr %addr, i32 12)
  %msg33 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 5
  %18 = ptrtoint ptr %msg33 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %msg33, align 4
  %20 = and i8 %19, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not = icmp eq i8 %20, 0
  br i1 %tobool.not, label %if.else, label %if.then35

if.then35:                                        ; preds = %if.end31
  %arrayidx37 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 17
  %call.i.i110 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx37, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx37, i32 1, i32 3, i32 1) #22
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx37, ptr %arrayidx37, i32 1, ptr elementtype(i32) %arrayidx37) #22, !srcloc !514
  %conv38 = trunc i32 %msgid to i8
  %data.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5
  %22 = ptrtoint ptr %data.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 24, ptr %data.i, align 4
  %arrayidx2.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 1
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 52, ptr %arrayidx2.i, align 1
  %24 = ptrtoint ptr %channel to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %channel, align 4
  %conv.i = trunc i16 %25 to i8
  %arrayidx4.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 2
  %26 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 %conv.i, ptr %arrayidx4.i, align 2
  %session_handle.i = getelementptr inbounds %struct.ipmi_lan_addr, ptr %addr, i32 0, i32 3
  %27 = ptrtoint ptr %session_handle.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %session_handle.i, align 1
  %arrayidx6.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 3
  %29 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %28, ptr %arrayidx6.i, align 1
  %remote_SWID.i = getelementptr inbounds %struct.ipmi_lan_addr, ptr %addr, i32 0, i32 4
  %30 = ptrtoint ptr %remote_SWID.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %remote_SWID.i, align 4
  %arrayidx8.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 4
  %32 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %31, ptr %arrayidx8.i, align 4
  %33 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %msg, align 4
  %shl.i = shl i8 %34, 2
  %35 = ptrtoint ptr %lun to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %lun, align 2
  %37 = and i8 %36, 3
  %or.i = or i8 %37, %shl.i
  %arrayidx13.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 5
  %38 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %or.i, ptr %arrayidx13.i, align 1
  %add.i.1.i = add i8 %31, %or.i
  %conv4.i.i = sub i8 0, %add.i.1.i
  %arrayidx17.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 6
  %39 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 %conv4.i.i, ptr %arrayidx17.i, align 2
  %local_SWID.i = getelementptr inbounds %struct.ipmi_lan_addr, ptr %addr, i32 0, i32 5
  %40 = ptrtoint ptr %local_SWID.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %local_SWID.i, align 1
  %arrayidx19.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 7
  %42 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %41, ptr %arrayidx19.i, align 1
  %shl21.i = shl i8 %conv38, 2
  %or23.i = or i8 %shl21.i, %source_lun
  %arrayidx26.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 8
  %43 = ptrtoint ptr %arrayidx26.i to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %or23.i, ptr %arrayidx26.i, align 4
  %cmd.i = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 1
  %44 = ptrtoint ptr %cmd.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %cmd.i, align 1
  %arrayidx28.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 9
  %46 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 %45, ptr %arrayidx28.i, align 1
  %47 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %data_len, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %48)
  %cmp.not.i = icmp eq i16 %48, 0
  br i1 %cmp.not.i, label %if.then35.if.end.i_crit_edge, label %if.then.i

if.then35.if.end.i_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

if.then.i:                                        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #24
  %conv29.i = zext i16 %48 to i32
  %arrayidx32.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 10
  %data33.i = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 3
  %49 = ptrtoint ptr %data33.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %data33.i, align 4
  %51 = call ptr @memcpy(ptr %arrayidx32.i, ptr %50, i32 %conv29.i)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then35.if.end.i_crit_edge
  %52 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %data_len, align 2
  %conv37.i = zext i16 %53 to i32
  %add.i = add nuw nsw i32 %conv37.i, 10
  %data_size.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 4
  %54 = ptrtoint ptr %data_size.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %add.i, ptr %data_size.i, align 4
  %sub.i = add nuw nsw i32 %conv37.i, 3
  br label %for.body.i84.i

for.body.i84.i:                                   ; preds = %for.body.i84.i.for.body.i84.i_crit_edge, %if.end.i
  %csum.011.i75.i = phi i32 [ %phi.cast.i82.i, %for.body.i84.i.for.body.i84.i_crit_edge ], [ 0, %if.end.i ]
  %size.addr.010.i76.i = phi i32 [ %dec.i80.i, %for.body.i84.i.for.body.i84.i_crit_edge ], [ %sub.i, %if.end.i ]
  %data.addr.09.i77.i = phi ptr [ %incdec.ptr.i81.i, %for.body.i84.i.for.body.i84.i_crit_edge ], [ %arrayidx19.i, %if.end.i ]
  %55 = ptrtoint ptr %data.addr.09.i77.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %data.addr.09.i77.i, align 1
  %conv.i78.i = zext i8 %56 to i32
  %add.i79.i = add nuw nsw i32 %csum.011.i75.i, %conv.i78.i
  %dec.i80.i = add nsw i32 %size.addr.010.i76.i, -1
  %incdec.ptr.i81.i = getelementptr i8, ptr %data.addr.09.i77.i, i32 1
  %phi.cast.i82.i = and i32 %add.i79.i, 255
  %cmp.i83.i = icmp ugt i32 %size.addr.010.i76.i, 1
  br i1 %cmp.i83.i, label %for.body.i84.i.for.body.i84.i_crit_edge, label %format_lan_msg.exit

for.body.i84.i.for.body.i84.i_crit_edge:          ; preds = %for.body.i84.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i84.i

format_lan_msg.exit:                              ; preds = %for.body.i84.i
  call void @__sanitizer_cov_trace_pc() #24
  %phi.cast12.i85.i = trunc i32 %add.i79.i to i8
  %conv4.i86.i = sub i8 0, %phi.cast12.i85.i
  %arrayidx44.i = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add.i
  %57 = ptrtoint ptr %arrayidx44.i to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 %conv4.i86.i, ptr %arrayidx44.i, align 1
  %add46.i = add nuw nsw i32 %conv37.i, 11
  %58 = ptrtoint ptr %data_size.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %add46.i, ptr %data_size.i, align 4
  %msgid47.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 2
  %59 = ptrtoint ptr %msgid47.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %msgid, ptr %msgid47.i, align 4
  %user_data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 3
  %60 = ptrtoint ptr %user_data to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %recv_msg, ptr %user_data, align 4
  br label %cleanup

if.else:                                          ; preds = %if.end31
  %seq_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 19
  %call44 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %seq_lock) #22
  %call49 = call fastcc i32 @intf_next_seq(ptr noundef %intf, ptr noundef %recv_msg, i32 noundef %retry_time_ms, i32 noundef %retries, i32 noundef 0, ptr noundef nonnull %ipmb_seq, ptr noundef nonnull %seqid)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49)
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %if.end52, label %if.else.out_err_crit_edge

if.else.out_err_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_err

if.end52:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx54 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 13
  %call.i.i111 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx54, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx54, i32 1, i32 3, i32 1) #22
  %61 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx54, ptr %arrayidx54, i32 1, ptr elementtype(i32) %arrayidx54) #22, !srcloc !514
  %62 = ptrtoint ptr %ipmb_seq to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %ipmb_seq, align 1
  %and56 = zext i8 %63 to i32
  %shl = shl i32 %and56, 26
  %64 = ptrtoint ptr %seqid to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %seqid, align 4
  %and57 = and i32 %65, 67108863
  %or = or i32 %shl, %and57
  tail call fastcc void @format_lan_msg(ptr noundef %smi_msg, ptr noundef %msg, ptr noundef %addr, i32 noundef %or, i8 noundef zeroext %63, i8 noundef zeroext %source_lun)
  %msg_data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 8
  %data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5
  %data_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 4
  %66 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %data_size, align 4
  %68 = call ptr @memcpy(ptr %msg_data, ptr %data, i32 %67)
  %data63 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 5, i32 3
  %69 = ptrtoint ptr %data63 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %msg_data, ptr %data63, align 4
  %70 = load i32, ptr %data_size, align 4
  %conv65 = trunc i32 %70 to i16
  %data_len67 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 5, i32 2
  %71 = ptrtoint ptr %data_len67 to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 %conv65, ptr %data_len67, align 2
  br label %out_err

out_err:                                          ; preds = %if.end52, %if.else.out_err_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock, i32 noundef %call44) #22
  br label %cleanup

cleanup:                                          ; preds = %out_err, %format_lan_msg.exit, %if.then28, %if.then21, %if.then14, %if.then
  %retval.0 = phi i32 [ -22, %if.then ], [ -22, %if.then14 ], [ -90, %if.then21 ], [ -22, %if.then28 ], [ 0, %format_lan_msg.exit ], [ %call49, %out_err ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seqid) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %ipmb_seq) #22
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @smi_send(ptr noundef %intf, ptr nocapture noundef readonly %handlers, ptr noundef %smi_msg, i32 noundef %priority) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %run_to_completion1 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 61
  %0 = ptrtoint ptr %run_to_completion1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %run_to_completion1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %do.body2, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %xmit_msgs_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 26
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %xmit_msgs_lock) #22
  br label %if.end

if.end:                                           ; preds = %do.body2, %entry.if.end_crit_edge
  %flags.0 = phi i32 [ 0, %entry.if.end_crit_edge ], [ %call3, %do.body2 ]
  %curr_msg.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 28
  %2 = ptrtoint ptr %curr_msg.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %curr_msg.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %priority)
  %cmp.i = icmp sgt i32 %priority, 0
  br i1 %cmp.i, label %if.then1.i, label %if.else.i

if.then1.i:                                       ; preds = %if.then.i
  %hp_xmit_msgs.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 29
  %prev.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 29, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %smi_msg, ptr noundef %5, ptr noundef %hp_xmit_msgs.i) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then1.i.smi_add_send_msg.exit_crit_edge

if.then1.i.smi_add_send_msg.exit_crit_edge:       ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %smi_add_send_msg.exit

if.end.i.i.i:                                     ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #24
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %smi_msg, ptr %prev.i.i, align 4
  %7 = ptrtoint ptr %smi_msg to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %hp_xmit_msgs.i, ptr %smi_msg, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %smi_msg, i32 0, i32 1
  %8 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev3.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %smi_msg, ptr %5, align 4
  br label %smi_add_send_msg.exit

if.else.i:                                        ; preds = %if.then.i
  %xmit_msgs.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 27
  %prev.i12.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 27, i32 1
  %10 = ptrtoint ptr %prev.i12.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i12.i, align 4
  %call.i.i13.i = tail call zeroext i1 @__list_add_valid(ptr noundef %smi_msg, ptr noundef %11, ptr noundef %xmit_msgs.i) #22
  br i1 %call.i.i13.i, label %if.end.i.i15.i, label %if.else.i.smi_add_send_msg.exit_crit_edge

if.else.i.smi_add_send_msg.exit_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %smi_add_send_msg.exit

if.end.i.i15.i:                                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  %12 = ptrtoint ptr %prev.i12.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %smi_msg, ptr %prev.i12.i, align 4
  %13 = ptrtoint ptr %smi_msg to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %xmit_msgs.i, ptr %smi_msg, align 4
  %prev3.i.i14.i = getelementptr inbounds %struct.list_head, ptr %smi_msg, i32 0, i32 1
  %14 = ptrtoint ptr %prev3.i.i14.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev3.i.i14.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %smi_msg, ptr %11, align 4
  br label %smi_add_send_msg.exit

if.else3.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %16 = ptrtoint ptr %curr_msg.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %smi_msg, ptr %curr_msg.i, align 4
  br label %smi_add_send_msg.exit

smi_add_send_msg.exit:                            ; preds = %if.else3.i, %if.end.i.i15.i, %if.else.i.smi_add_send_msg.exit_crit_edge, %if.end.i.i.i, %if.then1.i.smi_add_send_msg.exit_crit_edge
  %smi_msg.addr.0.i = phi ptr [ %smi_msg, %if.else3.i ], [ null, %if.then1.i.smi_add_send_msg.exit_crit_edge ], [ null, %if.end.i.i.i ], [ null, %if.else.i.smi_add_send_msg.exit_crit_edge ], [ null, %if.end.i.i15.i ]
  br i1 %tobool.not, label %if.then8, label %smi_add_send_msg.exit.if.end10_crit_edge

smi_add_send_msg.exit.if.end10_crit_edge:         ; preds = %smi_add_send_msg.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end10

if.then8:                                         ; preds = %smi_add_send_msg.exit
  call void @__sanitizer_cov_trace_pc() #24
  %xmit_msgs_lock9 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %xmit_msgs_lock9, i32 noundef %flags.0) #22
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %smi_add_send_msg.exit.if.end10_crit_edge
  %tobool11.not = icmp eq ptr %smi_msg.addr.0.i, null
  br i1 %tobool11.not, label %if.end10.if.end13_crit_edge, label %if.then12

if.end10.if.end13_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #24
  %sender = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %handlers, i32 0, i32 5
  %17 = ptrtoint ptr %sender to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sender, align 4
  %send_info = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %19 = ptrtoint ptr %send_info to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %send_info, align 8
  tail call void %18(ptr noundef %20, ptr noundef nonnull %smi_msg.addr.0.i) #22
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end10.if.end13_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @free_recv_msg(ptr noundef %msg) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @recv_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @recv_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @recv_msg_inuse_count, ptr nonnull @recv_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @recv_msg_inuse_count) #22, !srcloc !508
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kfree(ptr noundef %msg) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #14

; Function Attrs: inlinehint nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @format_ipmb_msg(ptr nocapture noundef %smi_msg, ptr nocapture noundef readonly %msg, ptr nocapture noundef readonly %ipmb_addr, i32 noundef %msgid, i8 noundef zeroext %ipmb_seq, i32 noundef %broadcast, i8 noundef zeroext %source_address, i8 noundef zeroext %source_lun) unnamed_addr #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 24, ptr %data, align 4
  %arrayidx2 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 1
  %1 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 52, ptr %arrayidx2, align 1
  %channel = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %ipmb_addr, i32 0, i32 1
  %2 = ptrtoint ptr %channel to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %channel, align 4
  %conv = trunc i16 %3 to i8
  %arrayidx4 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 2
  %4 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %conv, ptr %arrayidx4, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %broadcast)
  %tobool.not = icmp eq i32 %broadcast, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx6 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 3
  %5 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %arrayidx6, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %slave_addr = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %ipmb_addr, i32 0, i32 2
  %6 = ptrtoint ptr %slave_addr to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %slave_addr, align 2
  %add = add i32 %broadcast, 3
  %arrayidx8 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add
  %8 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %arrayidx8, align 1
  %9 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %msg, align 4
  %shl = shl i8 %10, 2
  %lun = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %ipmb_addr, i32 0, i32 3
  %11 = ptrtoint ptr %lun to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %lun, align 1
  %13 = and i8 %12, 3
  %or = or i8 %13, %shl
  %add13 = add i32 %broadcast, 4
  %arrayidx14 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add13
  %14 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %or, ptr %arrayidx14, align 1
  %add.i.1 = add i8 %7, %or
  %conv4.i = sub i8 0, %add.i.1
  %add19 = add i32 %broadcast, 5
  %arrayidx20 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add19
  %15 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %conv4.i, ptr %arrayidx20, align 1
  %add22 = add i32 %broadcast, 6
  %arrayidx23 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add22
  %16 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %source_address, ptr %arrayidx23, align 1
  %shl25 = shl i8 %ipmb_seq, 2
  %or27 = or i8 %shl25, %source_lun
  %add30 = add i32 %broadcast, 7
  %arrayidx31 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add30
  %17 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %or27, ptr %arrayidx31, align 1
  %cmd = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 1
  %18 = ptrtoint ptr %cmd to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %cmd, align 1
  %add33 = add i32 %broadcast, 8
  %arrayidx34 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add33
  %20 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %arrayidx34, align 1
  %data_len = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 2
  %21 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %data_len, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %cmp.not = icmp eq i16 %22, 0
  br i1 %cmp.not, label %if.end.if.end44_crit_edge, label %if.then37

if.end.if.end44_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44

if.then37:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %conv35 = zext i16 %22 to i32
  %add39 = add i32 %broadcast, 9
  %arrayidx40 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add39
  %data41 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 3
  %23 = ptrtoint ptr %data41 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %data41, align 4
  %25 = call ptr @memcpy(ptr %arrayidx40, ptr %24, i32 %conv35)
  br label %if.end44

if.end44:                                         ; preds = %if.then37, %if.end.if.end44_crit_edge
  %26 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %data_len, align 2
  %conv46 = zext i16 %27 to i32
  %add47 = add nuw nsw i32 %conv46, 9
  %data_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 4
  %28 = ptrtoint ptr %data_size to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %add47, ptr %data_size, align 4
  %sub = add nuw nsw i32 %conv46, 3
  br label %for.body.i106

for.body.i106:                                    ; preds = %for.body.i106.for.body.i106_crit_edge, %if.end44
  %csum.011.i97 = phi i32 [ %phi.cast.i104, %for.body.i106.for.body.i106_crit_edge ], [ 0, %if.end44 ]
  %size.addr.010.i98 = phi i32 [ %dec.i102, %for.body.i106.for.body.i106_crit_edge ], [ %sub, %if.end44 ]
  %data.addr.09.i99 = phi ptr [ %incdec.ptr.i103, %for.body.i106.for.body.i106_crit_edge ], [ %arrayidx23, %if.end44 ]
  %29 = ptrtoint ptr %data.addr.09.i99 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %data.addr.09.i99, align 1
  %conv.i100 = zext i8 %30 to i32
  %add.i101 = add nuw nsw i32 %csum.011.i97, %conv.i100
  %dec.i102 = add nsw i32 %size.addr.010.i98, -1
  %incdec.ptr.i103 = getelementptr i8, ptr %data.addr.09.i99, i32 1
  %phi.cast.i104 = and i32 %add.i101, 255
  %cmp.i105 = icmp ugt i32 %size.addr.010.i98, 1
  br i1 %cmp.i105, label %for.body.i106.for.body.i106_crit_edge, label %ipmb_checksum.exit109

for.body.i106.for.body.i106_crit_edge:            ; preds = %for.body.i106
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i106

ipmb_checksum.exit109:                            ; preds = %for.body.i106
  call void @__sanitizer_cov_trace_pc() #24
  %phi.cast12.i107 = trunc i32 %add.i101 to i8
  %conv4.i108 = sub i8 0, %phi.cast12.i107
  %add55 = add i32 %add47, %broadcast
  %arrayidx56 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add55
  %31 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %conv4.i108, ptr %arrayidx56, align 1
  %add57 = add i32 %broadcast, 1
  %32 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %data_size, align 4
  %add59 = add i32 %add57, %33
  store i32 %add59, ptr %data_size, align 4
  %msgid60 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 2
  %34 = ptrtoint ptr %msgid60 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %msgid, ptr %msgid60, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @intf_next_seq(ptr noundef %intf, ptr noundef %recv_msg, i32 noundef %timeout, i32 noundef %retries, i32 noundef %broadcast, ptr nocapture noundef writeonly %seq, ptr nocapture noundef writeonly %seqid) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %timeout)
  %cmp = icmp eq i32 %timeout, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %0 = load i32, ptr @default_retry_ms, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %timeout.addr.0 = phi i32 [ %0, %if.then ], [ %timeout, %entry.if.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retries)
  %cmp1 = icmp slt i32 %retries, 0
  br i1 %cmp1, label %if.then2, label %if.end.if.end3_crit_edge

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %1 = load i32, ptr @default_max_retries, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end.if.end3_crit_edge
  %retries.addr.0 = phi i32 [ %1, %if.then2 ], [ %retries, %if.end.if.end3_crit_edge ]
  %curr_seq = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 21
  %2 = ptrtoint ptr %curr_seq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %curr_seq, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end3
  %i.0 = phi i32 [ %3, %if.end3 ], [ %rem, %for.body.for.cond_crit_edge ]
  %add = add i32 %i.0, 1
  %rem = and i32 %add, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %rem, i32 %3)
  %cmp5.not = icmp eq i32 %rem, %3
  br i1 %cmp5.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %i.0
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %arrayidx, align 4
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %for.body.for.end_crit_edge, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.for.end_crit_edge
  %rem.lcssa = phi i32 [ %rem, %for.body.for.end_crit_edge ], [ %3, %for.cond.for.end_crit_edge ]
  %arrayidx11 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %i.0
  %5 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load12 = load i8, ptr %arrayidx11, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load12)
  %tobool15.not = icmp sgt i8 %bf.load12, -1
  br i1 %tobool15.not, label %if.then16, label %for.end.if.end48_crit_edge

for.end.if.end48_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end48

if.then16:                                        ; preds = %for.end
  %recv_msg19 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %i.0, i32 5
  %6 = ptrtoint ptr %recv_msg19 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %recv_msg, ptr %recv_msg19, align 4
  %timeout22 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %i.0, i32 1
  %7 = ptrtoint ptr %timeout22 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 60000, ptr %timeout22, align 4
  %orig_timeout = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %i.0, i32 2
  %8 = ptrtoint ptr %orig_timeout to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %timeout.addr.0, ptr %orig_timeout, align 4
  %retries_left = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %i.0, i32 3
  %9 = ptrtoint ptr %retries_left to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %retries.addr.0, ptr %retries_left, align 4
  %10 = trunc i32 %broadcast to i8
  %bf.value = shl i8 %10, 6
  %bf.clear = and i8 %bf.load12, 63
  %bf.clear33 = or i8 %bf.clear, %bf.value
  %bf.set34 = or i8 %bf.clear33, -128
  %11 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %bf.set34, ptr %arrayidx11, align 4
  %seqid37 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %i.0, i32 4
  %12 = ptrtoint ptr %seqid37 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %seqid37, align 4
  %add38 = add i32 %13, 1
  %and = and i32 %add38, 67108863
  store i32 %and, ptr %seqid37, align 4
  %conv = trunc i32 %i.0 to i8
  %14 = ptrtoint ptr %seq to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %conv, ptr %seq, align 1
  %15 = load i32, ptr %seqid37, align 4
  %16 = ptrtoint ptr %seqid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %seqid, align 4
  %17 = ptrtoint ptr %curr_seq to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %rem.lcssa, ptr %curr_seq, align 4
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %18 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %handlers.i, align 4
  %set_need_watch.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %19, i32 0, i32 7
  %20 = ptrtoint ptr %set_need_watch.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %set_need_watch.i, align 4
  %tobool.not.i = icmp eq ptr %21, null
  br i1 %tobool.not.i, label %if.then16.smi_add_watch.exit_crit_edge, label %do.body1.i

if.then16.smi_add_watch.exit_crit_edge:           ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  br label %smi_add_watch.exit

do.body1.i:                                       ; preds = %if.then16
  %watch_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 39
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %watch_lock.i) #22
  %response_waiters.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 42
  %22 = ptrtoint ptr %response_waiters.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %response_waiters.i, align 4
  %inc.i = add i32 %23, 1
  store i32 %inc.i, ptr %response_waiters.i, align 4
  %last_watch_mask.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 43
  %24 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %last_watch_mask.i, align 8
  %and18.i = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %cmp19.not.i.not = icmp eq i32 %and18.i, 0
  br i1 %cmp19.not.i.not, label %if.then21.i, label %do.body1.i.if.end26.i_crit_edge

do.body1.i.if.end26.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end26.i

if.then21.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  %or.i = or i32 %25, 1
  %26 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %or.i, ptr %last_watch_mask.i, align 8
  %27 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %handlers.i, align 4
  %set_need_watch24.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %28, i32 0, i32 7
  %29 = ptrtoint ptr %set_need_watch24.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %set_need_watch24.i, align 4
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %31 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %send_info.i, align 8
  tail call void %30(ptr noundef %32, i32 noundef %or.i) #22
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.then21.i, %do.body1.i.if.end26.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %watch_lock.i, i32 noundef %call2.i) #22
  br label %smi_add_watch.exit

smi_add_watch.exit:                               ; preds = %if.end26.i, %if.then16.smi_add_watch.exit_crit_edge
  %33 = load volatile ptr, ptr getelementptr inbounds (%struct.timer_list, ptr @ipmi_timer, i32 0, i32 0, i32 1), align 4
  %tobool.not.i.i.not.i = icmp eq ptr %33, null
  br i1 %tobool.not.i.i.not.i, label %if.then.i, label %smi_add_watch.exit.if.end48_crit_edge

smi_add_watch.exit.if.end48_crit_edge:            ; preds = %smi_add_watch.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end48

if.then.i:                                        ; preds = %smi_add_watch.exit
  call void @__sanitizer_cov_trace_pc() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %34 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %34, 100
  %call1.i = tail call i32 @mod_timer(ptr noundef nonnull @ipmi_timer, i32 noundef %add.i) #22
  br label %if.end48

if.end48:                                         ; preds = %if.then.i, %smi_add_watch.exit.if.end48_crit_edge, %for.end.if.end48_crit_edge
  %rv.0 = phi i32 [ -11, %for.end.if.end48_crit_edge ], [ 0, %smi_add_watch.exit.if.end48_crit_edge ], [ 0, %if.then.i ]
  ret i32 %rv.0
}

; Function Attrs: inlinehint nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @format_lan_msg(ptr nocapture noundef %smi_msg, ptr nocapture noundef readonly %msg, ptr nocapture noundef readonly %lan_addr, i32 noundef %msgid, i8 noundef zeroext %ipmb_seq, i8 noundef zeroext %source_lun) unnamed_addr #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 24, ptr %data, align 4
  %arrayidx2 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 1
  %1 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 52, ptr %arrayidx2, align 1
  %channel = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 1
  %2 = ptrtoint ptr %channel to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %channel, align 4
  %conv = trunc i16 %3 to i8
  %arrayidx4 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 2
  %4 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %conv, ptr %arrayidx4, align 2
  %session_handle = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 3
  %5 = ptrtoint ptr %session_handle to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %session_handle, align 1
  %arrayidx6 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 3
  %7 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %6, ptr %arrayidx6, align 1
  %remote_SWID = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 4
  %8 = ptrtoint ptr %remote_SWID to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %remote_SWID, align 4
  %arrayidx8 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 4
  %10 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %9, ptr %arrayidx8, align 4
  %11 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %msg, align 4
  %shl = shl i8 %12, 2
  %lun = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 6
  %13 = ptrtoint ptr %lun to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %lun, align 2
  %15 = and i8 %14, 3
  %or = or i8 %15, %shl
  %arrayidx13 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 5
  %16 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %or, ptr %arrayidx13, align 1
  %add.i.1 = add i8 %9, %or
  %conv4.i = sub i8 0, %add.i.1
  %arrayidx17 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 6
  %17 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv4.i, ptr %arrayidx17, align 2
  %local_SWID = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 5
  %18 = ptrtoint ptr %local_SWID to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %local_SWID, align 1
  %arrayidx19 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 7
  %20 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %arrayidx19, align 1
  %shl21 = shl i8 %ipmb_seq, 2
  %or23 = or i8 %shl21, %source_lun
  %arrayidx26 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 8
  %21 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %or23, ptr %arrayidx26, align 4
  %cmd = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 1
  %22 = ptrtoint ptr %cmd to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %cmd, align 1
  %arrayidx28 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 9
  %24 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %arrayidx28, align 1
  %data_len = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 2
  %25 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %data_len, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %26)
  %cmp.not = icmp eq i16 %26, 0
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %conv29 = zext i16 %26 to i32
  %arrayidx32 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 10
  %data33 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg, i32 0, i32 3
  %27 = ptrtoint ptr %data33 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %data33, align 4
  %29 = call ptr @memcpy(ptr %arrayidx32, ptr %28, i32 %conv29)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %30 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %data_len, align 2
  %conv37 = zext i16 %31 to i32
  %add = add nuw nsw i32 %conv37, 10
  %data_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 4
  %32 = ptrtoint ptr %data_size to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %add, ptr %data_size, align 4
  %sub = add nuw nsw i32 %conv37, 3
  br label %for.body.i84

for.body.i84:                                     ; preds = %for.body.i84.for.body.i84_crit_edge, %if.end
  %csum.011.i75 = phi i32 [ %phi.cast.i82, %for.body.i84.for.body.i84_crit_edge ], [ 0, %if.end ]
  %size.addr.010.i76 = phi i32 [ %dec.i80, %for.body.i84.for.body.i84_crit_edge ], [ %sub, %if.end ]
  %data.addr.09.i77 = phi ptr [ %incdec.ptr.i81, %for.body.i84.for.body.i84_crit_edge ], [ %arrayidx19, %if.end ]
  %33 = ptrtoint ptr %data.addr.09.i77 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %data.addr.09.i77, align 1
  %conv.i78 = zext i8 %34 to i32
  %add.i79 = add nuw nsw i32 %csum.011.i75, %conv.i78
  %dec.i80 = add nsw i32 %size.addr.010.i76, -1
  %incdec.ptr.i81 = getelementptr i8, ptr %data.addr.09.i77, i32 1
  %phi.cast.i82 = and i32 %add.i79, 255
  %cmp.i83 = icmp ugt i32 %size.addr.010.i76, 1
  br i1 %cmp.i83, label %for.body.i84.for.body.i84_crit_edge, label %ipmb_checksum.exit87

for.body.i84.for.body.i84_crit_edge:              ; preds = %for.body.i84
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i84

ipmb_checksum.exit87:                             ; preds = %for.body.i84
  call void @__sanitizer_cov_trace_pc() #24
  %phi.cast12.i85 = trunc i32 %add.i79 to i8
  %conv4.i86 = sub i8 0, %phi.cast12.i85
  %arrayidx44 = getelementptr %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 5, i32 %add
  %35 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %conv4.i86, ptr %arrayidx44, align 1
  %add46 = add nuw nsw i32 %conv37, 11
  %36 = ptrtoint ptr %data_size to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %add46, ptr %data_size, align 4
  %msgid47 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 2
  %37 = ptrtoint ptr %msgid47 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %msgid, ptr %msgid47, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @handle_new_recv_msgs(ptr noundef %intf) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %run_to_completion1 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 61
  %0 = ptrtoint ptr %run_to_completion1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %run_to_completion1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %do.body2, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %waiting_rcv_msgs_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 22
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %waiting_rcv_msgs_lock) #22
  br label %if.end

if.end:                                           ; preds = %do.body2, %entry.if.end_crit_edge
  %flags.0 = phi i32 [ 0, %entry.if.end_crit_edge ], [ %call3, %do.body2 ]
  %waiting_rcv_msgs = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 23
  %2 = ptrtoint ptr %waiting_rcv_msgs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %waiting_rcv_msgs, align 4
  %cmp.i.not125 = icmp eq ptr %3, %waiting_rcv_msgs
  br i1 %cmp.i.not125, label %if.end.while.end_crit_edge, label %while.body.lr.ph

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end
  %waiting_rcv_msgs_lock12 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 22
  br label %while.body

while.body:                                       ; preds = %if.end41.while.body_crit_edge, %while.body.lr.ph
  %4 = phi ptr [ %3, %while.body.lr.ph ], [ %22, %if.end41.while.body_crit_edge ]
  %flags.1126 = phi i32 [ %flags.0, %while.body.lr.ph ], [ %flags.2, %if.end41.while.body_crit_edge ]
  %call.i.i114 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %4) #22
  br i1 %call.i.i114, label %if.end.i.i, label %while.body.list_del.exit_crit_edge

while.body.list_del.exit_crit_edge:               ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i.i, align 4
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %4, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev1.i.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %8, ptr %6, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %while.body.list_del.exit_crit_edge
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 256 to ptr), ptr %4, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  br i1 %tobool.not, label %do.body18, label %if.end13

if.end13:                                         ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  %call14 = tail call fastcc i32 @handle_one_recv_msg(ptr noundef %intf, ptr noundef %4)
  br label %if.end31

do.body18:                                        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %waiting_rcv_msgs_lock12, i32 noundef %flags.1126) #22
  %call14118 = tail call fastcc i32 @handle_one_recv_msg(ptr noundef %intf, ptr noundef %4)
  %call26 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %waiting_rcv_msgs_lock12) #22
  br label %if.end31

if.end31:                                         ; preds = %do.body18, %if.end13
  %call14119 = phi i32 [ %call14, %if.end13 ], [ %call14118, %do.body18 ]
  %flags.2 = phi i32 [ %flags.1126, %if.end13 ], [ %call26, %do.body18 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14119)
  %cmp32 = icmp sgt i32 %call14119, 0
  br i1 %cmp32, label %if.then34, label %if.else

if.then34:                                        ; preds = %if.end31
  %13 = ptrtoint ptr %waiting_rcv_msgs to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %waiting_rcv_msgs, align 4
  %call.i.i115 = tail call zeroext i1 @__list_add_valid(ptr noundef %4, ptr noundef %waiting_rcv_msgs, ptr noundef %14) #22
  br i1 %call.i.i115, label %if.end.i.i116, label %if.then34.while.end_crit_edge

if.then34.while.end_crit_edge:                    ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

if.end.i.i116:                                    ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.le = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %4, ptr %prev1.i.i, align 4
  %16 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %14, ptr %4, align 4
  %17 = ptrtoint ptr %prev.i.le to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %waiting_rcv_msgs, ptr %prev.i.le, align 4
  %18 = ptrtoint ptr %waiting_rcv_msgs to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %4, ptr %waiting_rcv_msgs, align 4
  br label %while.end

if.else:                                          ; preds = %if.end31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14119)
  %cmp37 = icmp eq i32 %call14119, 0
  br i1 %cmp37, label %if.then39, label %if.else.if.end41_crit_edge

if.else.if.end41_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end41

if.then39:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %done.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %4, i32 0, i32 8
  %19 = ptrtoint ptr %done.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %done.i, align 4
  tail call void %20(ptr noundef %4) #22
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else.if.end41_crit_edge
  %21 = ptrtoint ptr %waiting_rcv_msgs to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %waiting_rcv_msgs, align 4
  %cmp.i.not = icmp eq ptr %22, %waiting_rcv_msgs
  br i1 %cmp.i.not, label %if.end41.while.end_crit_edge, label %if.end41.while.body_crit_edge

if.end41.while.body_crit_edge:                    ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

if.end41.while.end_crit_edge:                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %if.end41.while.end_crit_edge, %if.end.i.i116, %if.then34.while.end_crit_edge, %if.end.while.end_crit_edge
  %flags.3 = phi i32 [ %flags.2, %if.then34.while.end_crit_edge ], [ %flags.2, %if.end.i.i116 ], [ %flags.0, %if.end.while.end_crit_edge ], [ %flags.2, %if.end41.while.end_crit_edge ]
  br i1 %tobool.not, label %if.then43, label %while.end.if.end45_crit_edge

while.end.if.end45_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end45

if.then43:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #24
  %waiting_rcv_msgs_lock44 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 22
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %waiting_rcv_msgs_lock44, i32 noundef %flags.3) #22
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %while.end.if.end45_crit_edge
  %watchdog_pretimeouts_to_deliver = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 24
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %watchdog_pretimeouts_to_deliver, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !522
  tail call void @llvm.prefetch.p0(ptr %watchdog_pretimeouts_to_deliver, i32 1, i32 3, i32 1) #22
  %23 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %watchdog_pretimeouts_to_deliver, ptr %watchdog_pretimeouts_to_deliver, i32 0, i32 -1, ptr elementtype(i32) %watchdog_pretimeouts_to_deliver) #22, !srcloc !523
  %asmresult.i.i.i = extractvalue { i32, i32, i32 } %23, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.not.i.i.i, label %if.end45.if.end87_crit_edge, label %if.then47

if.end45.if.end87_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end87

if.then47:                                        ; preds = %if.end45
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !524
  %users_srcu = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 6
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef %users_srcu) #22
  %dep_map.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 6, i32 16
  tail call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i) #22
  %call50 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %land.lhs.true, label %if.then47.do.end59_crit_edge

if.then47.do.end59_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end59

land.lhs.true:                                    ; preds = %if.then47
  %call52 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %land.lhs.true.do.end59_crit_edge, label %land.lhs.true54

land.lhs.true.do.end59_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end59

land.lhs.true54:                                  ; preds = %land.lhs.true
  %.b113 = load i1, ptr @handle_new_recv_msgs.__warned, align 1
  br i1 %.b113, label %land.lhs.true54.do.end59_crit_edge, label %if.then56

land.lhs.true54.do.end59_crit_edge:               ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end59

if.then56:                                        ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @handle_new_recv_msgs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4713, ptr noundef nonnull @.str.1) #22
  br label %do.end59

do.end59:                                         ; preds = %if.then56, %land.lhs.true54.do.end59_crit_edge, %land.lhs.true.do.end59_crit_edge, %if.then47.do.end59_crit_edge
  %users = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 5
  %24 = ptrtoint ptr %users to i32
  call void @__asan_load4_noabort(i32 %24)
  %user.0127 = load volatile ptr, ptr %users, align 4
  %cmp70.not128 = icmp eq ptr %user.0127, %users
  br i1 %cmp70.not128, label %do.end59.for.end_crit_edge, label %do.end59.for.body_crit_edge

do.end59.for.body_crit_edge:                      ; preds = %do.end59
  br label %for.body

do.end59.for.end_crit_edge:                       ; preds = %do.end59
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end59.for.body_crit_edge
  %user.0129 = phi ptr [ %user.0, %for.inc.for.body_crit_edge ], [ %user.0127, %do.end59.for.body_crit_edge ]
  %handler = getelementptr inbounds %struct.ipmi_user, ptr %user.0129, i32 0, i32 4
  %25 = ptrtoint ptr %handler to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %handler, align 4
  %ipmi_watchdog_pretimeout = getelementptr inbounds %struct.ipmi_user_hndl, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %ipmi_watchdog_pretimeout to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ipmi_watchdog_pretimeout, align 4
  %tobool72.not = icmp eq ptr %28, null
  br i1 %tobool72.not, label %for.body.for.inc_crit_edge, label %if.then73

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then73:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %handler_data = getelementptr inbounds %struct.ipmi_user, ptr %user.0129, i32 0, i32 5
  %29 = ptrtoint ptr %handler_data to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %handler_data, align 4
  tail call void %28(ptr noundef %30) #22
  br label %for.inc

for.inc:                                          ; preds = %if.then73, %for.body.for.inc_crit_edge
  %31 = ptrtoint ptr %user.0129 to i32
  call void @__asan_load4_noabort(i32 %31)
  %user.0 = load volatile ptr, ptr %user.0129, align 4
  %cmp70.not = icmp eq ptr %user.0, %users
  br i1 %cmp70.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end59.for.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i)
  %tobool.not.i = icmp ult i32 %call.i, 2
  br i1 %tobool.not.i, label %for.end.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

for.end.srcu_read_unlock.exit_crit_edge:          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %for.end
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i, !prof !498

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %for.end.srcu_read_unlock.exit_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef %dep_map.i) #22
  tail call void @__srcu_read_unlock(ptr noundef %users_srcu, i32 noundef %call.i) #22
  br label %if.end87

if.end87:                                         ; preds = %srcu_read_unlock.exit, %if.end45.if.end87_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @handle_one_recv_msg(ptr noundef %intf, ptr noundef %msg) unnamed_addr #1 align 64 {
entry:
  %msgs.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %rsp = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7
  %0 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %rsp, align 4
  %2 = and i8 %1, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @handle_one_recv_msg.__UNIQUE_ID_ddebug275, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@handle_one_recv_msg, %if.then)) #22
          to label %do.end [label %if.then], !srcloc !516

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %rsp_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 6
  %3 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rsp_size, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @handle_one_recv_msg.__UNIQUE_ID_ddebug275, ptr noundef nonnull @.str.68, ptr noundef nonnull @.str.8, i32 noundef %4, ptr noundef %rsp) #22
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %rsp_size7 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 6
  %5 = ptrtoint ptr %rsp_size7 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %rsp_size7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %cmp = icmp slt i32 %6, 2
  br i1 %cmp, label %do.end12, label %if.else

do.end12:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  %si_dev = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %7 = ptrtoint ptr %si_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %si_dev, align 4
  %data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 4
  %11 = lshr i8 %10, 2
  %12 = or i8 %11, 1
  %or = zext i8 %12 to i32
  %arrayidx17 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 1
  %13 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx17, align 1
  %conv18 = zext i8 %14 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %8, ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.8, i32 noundef %or, i32 noundef %conv18, i32 noundef %6) #25
  br label %return_unspecified

return_unspecified:                               ; preds = %do.end215, %do.end12
  %data20 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5
  %15 = ptrtoint ptr %data20 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %data20, align 4
  %17 = or i8 %16, 4
  %18 = ptrtoint ptr %rsp to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %rsp, align 4
  %arrayidx28 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 1
  %19 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx28, align 1
  %arrayidx30 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %21 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %20, ptr %arrayidx30, align 1
  %arrayidx32 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %22 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 -1, ptr %arrayidx32, align 2
  %23 = ptrtoint ptr %rsp_size7 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 3, ptr %rsp_size7, align 4
  br label %if.end235

if.else:                                          ; preds = %do.end
  %type = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 1
  %24 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %25)
  %cmp34 = icmp eq i32 %25, 1
  br i1 %cmp34, label %if.then36, label %if.else102

if.then36:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %6)
  %cmp40 = icmp ult i32 %6, 4
  %or.cond = select i1 %tobool.not, i1 %cmp40, i1 false
  br i1 %or.cond, label %if.then42, label %if.end44

if.then42:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx43 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 22
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx43, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx43, i32 1, i32 3, i32 1) #22
  %26 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx43, ptr %arrayidx43, i32 1, ptr elementtype(i32) %arrayidx43) #22, !srcloc !514
  br label %cleanup384

if.end44:                                         ; preds = %if.then36
  %tobool.not.not = xor i1 %tobool.not, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %6)
  %cmp48 = icmp ult i32 %6, 5
  %or.cond606 = select i1 %tobool.not.not, i1 %cmp48, i1 false
  br i1 %or.cond606, label %if.then50, label %if.end44.if.end235_crit_edge

if.end44.if.end235_crit_edge:                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end235

if.then50:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx52 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 11
  %call.i.i506 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx52, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx52, i32 1, i32 3, i32 1) #22
  %27 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx52, ptr %arrayidx52, i32 1, ptr elementtype(i32) %arrayidx52) #22, !srcloc !514
  %data53 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5
  %28 = ptrtoint ptr %data53 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %data53, align 4
  %30 = and i8 %29, -8
  %31 = or i8 %30, 4
  %arrayidx66 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 2
  %32 = ptrtoint ptr %arrayidx66 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx66, align 2
  %34 = and i8 %33, 3
  %or72503 = or i8 %34, %31
  %35 = ptrtoint ptr %rsp to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %or72503, ptr %rsp, align 4
  %arrayidx75 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 1
  %36 = ptrtoint ptr %arrayidx75 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx75, align 1
  %arrayidx77 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %38 = ptrtoint ptr %arrayidx77 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %37, ptr %arrayidx77, align 1
  %39 = and i8 %33, -4
  %arrayidx84 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %40 = and i8 %29, 3
  %or92504 = or i8 %39, %40
  %41 = ptrtoint ptr %arrayidx84 to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %or92504, ptr %arrayidx84, align 2
  %arrayidx95 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 3
  %42 = ptrtoint ptr %arrayidx95 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %arrayidx95, align 1
  %arrayidx97 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %44 = ptrtoint ptr %arrayidx97 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %43, ptr %arrayidx97, align 1
  %arrayidx99 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  %45 = ptrtoint ptr %arrayidx99 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 -1, ptr %arrayidx99, align 4
  %46 = ptrtoint ptr %rsp_size7 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 5, ptr %rsp_size7, align 4
  br label %if.end235

if.else102:                                       ; preds = %if.else
  %data_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 4
  %47 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %data_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %48)
  %cmp103 = icmp sgt i32 %48, 1
  br i1 %cmp103, label %land.lhs.true105, label %if.else102.if.else191_crit_edge

if.else102.if.else191_crit_edge:                  ; preds = %if.else102
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else191

land.lhs.true105:                                 ; preds = %if.else102
  %data106 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5
  %49 = ptrtoint ptr %data106 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %data106, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 24, i8 %50)
  %cmp109 = icmp eq i8 %50, 24
  br i1 %cmp109, label %land.lhs.true111, label %land.lhs.true105.if.else191_crit_edge

land.lhs.true105.if.else191_crit_edge:            ; preds = %land.lhs.true105
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else191

land.lhs.true111:                                 ; preds = %land.lhs.true105
  %arrayidx113 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 1
  %51 = ptrtoint ptr %arrayidx113 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %arrayidx113, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 52, i8 %52)
  %cmp115 = icmp eq i8 %52, 52
  br i1 %cmp115, label %land.lhs.true117, label %land.lhs.true111.if.else191_crit_edge

land.lhs.true111.if.else191_crit_edge:            ; preds = %land.lhs.true111
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else191

land.lhs.true117:                                 ; preds = %land.lhs.true111
  %user_data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 3
  %53 = ptrtoint ptr %user_data to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %user_data, align 4
  %cmp118 = icmp eq ptr %54, null
  br i1 %cmp118, label %if.then120, label %land.lhs.true117.if.else191_crit_edge

land.lhs.true117.if.else191_crit_edge:            ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else191

if.then120:                                       ; preds = %land.lhs.true117
  %in_shutdown = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 3
  %55 = ptrtoint ptr %in_shutdown to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %in_shutdown, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool121.not = icmp eq i8 %56, 0
  br i1 %tobool121.not, label %if.end123, label %if.then120.cleanup384_crit_edge

if.then120.cleanup384_crit_edge:                  ; preds = %if.then120
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup384

if.end123:                                        ; preds = %if.then120
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %cmp125 = icmp ugt i32 %6, 2
  br i1 %cmp125, label %land.lhs.true127, label %if.end123.if.else187_crit_edge

if.end123.if.else187_crit_edge:                   ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else187

land.lhs.true127:                                 ; preds = %if.end123
  %arrayidx129 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %57 = ptrtoint ptr %arrayidx129 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %arrayidx129, align 2
  %59 = zext i8 %58 to i64
  call void @__sanitizer_cov_trace_switch(i64 %59, ptr @__sancov_gen_cov_switch_values.164)
  switch i8 %58, label %if.then157 [
    i8 0, label %land.lhs.true127.if.else187_crit_edge
    i8 -64, label %land.lhs.true127.if.else187_crit_edge618
    i8 -127, label %land.lhs.true127.if.else187_crit_edge619
    i8 -126, label %land.lhs.true127.if.else187_crit_edge620
    i8 -125, label %land.lhs.true127.if.else187_crit_edge621
  ]

land.lhs.true127.if.else187_crit_edge621:         ; preds = %land.lhs.true127
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else187

land.lhs.true127.if.else187_crit_edge620:         ; preds = %land.lhs.true127
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else187

land.lhs.true127.if.else187_crit_edge619:         ; preds = %land.lhs.true127
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else187

land.lhs.true127.if.else187_crit_edge618:         ; preds = %land.lhs.true127
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else187

land.lhs.true127.if.else187_crit_edge:            ; preds = %land.lhs.true127
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else187

if.then157:                                       ; preds = %land.lhs.true127
  %arrayidx159 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %60 = ptrtoint ptr %arrayidx159 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %arrayidx159, align 1
  %62 = and i8 %61, 15
  %and161 = zext i8 %62 to i32
  %channel_list = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 55
  %63 = ptrtoint ptr %channel_list to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile ptr, ptr %channel_list, align 4
  %arrayidx167 = getelementptr %struct.ipmi_channel, ptr %64, i32 %and161
  %65 = ptrtoint ptr %arrayidx167 to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %arrayidx167, align 1
  %67 = and i8 %66, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %67)
  %switch = icmp eq i8 %67, 4
  br i1 %switch, label %if.then176, label %if.else179

if.then176:                                       ; preds = %if.then157
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx178 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 14
  %call.i.i507 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx178, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx178, i32 1, i32 3, i32 1) #22
  %68 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx178, ptr %arrayidx178, i32 1, ptr elementtype(i32) %arrayidx178) #22, !srcloc !514
  br label %if.end182

if.else179:                                       ; preds = %if.then157
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx181 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 5
  %call.i.i508 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx181, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx181, i32 1, i32 3, i32 1) #22
  %69 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx181, ptr %arrayidx181, i32 1, ptr elementtype(i32) %arrayidx181) #22, !srcloc !514
  br label %if.end182

if.end182:                                        ; preds = %if.else179, %if.then176
  %msgid = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 2
  %70 = ptrtoint ptr %msgid to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %msgid, align 4
  %72 = ptrtoint ptr %arrayidx129 to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %arrayidx129, align 2
  %conv185 = zext i8 %73 to i32
  tail call fastcc void @intf_err_seq(ptr noundef %intf, i32 noundef %71, i32 noundef %conv185)
  br label %if.end235

if.else187:                                       ; preds = %land.lhs.true127.if.else187_crit_edge, %land.lhs.true127.if.else187_crit_edge618, %land.lhs.true127.if.else187_crit_edge619, %land.lhs.true127.if.else187_crit_edge620, %land.lhs.true127.if.else187_crit_edge621, %if.end123.if.else187_crit_edge
  %msgid188 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 2
  %74 = ptrtoint ptr %msgid188 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %msgid188, align 4
  tail call fastcc void @intf_start_seq_timer(ptr noundef %intf, i32 noundef %75)
  br label %if.end235

if.else191:                                       ; preds = %land.lhs.true117.if.else191_crit_edge, %land.lhs.true111.if.else191_crit_edge, %land.lhs.true105.if.else191_crit_edge, %if.else102.if.else191_crit_edge
  %76 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %rsp, align 4
  %78 = lshr i8 %77, 2
  %data196 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5
  %79 = ptrtoint ptr %data196 to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %data196, align 4
  %81 = lshr i8 %80, 2
  %82 = or i8 %81, 1
  call void @__sanitizer_cov_trace_cmp1(i8 %78, i8 %82)
  %cmp201.not = icmp eq i8 %78, %82
  br i1 %cmp201.not, label %lor.lhs.false203, label %if.else191.do.end215_crit_edge

if.else191.do.end215_crit_edge:                   ; preds = %if.else191
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end215

lor.lhs.false203:                                 ; preds = %if.else191
  %arrayidx205 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %83 = ptrtoint ptr %arrayidx205 to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %arrayidx205, align 1
  %arrayidx208 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 1
  %85 = ptrtoint ptr %arrayidx208 to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %arrayidx208, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %84, i8 %86)
  %cmp210.not = icmp eq i8 %84, %86
  br i1 %cmp210.not, label %lor.lhs.false203.if.end235_crit_edge, label %lor.lhs.false203.do.end215_crit_edge

lor.lhs.false203.do.end215_crit_edge:             ; preds = %lor.lhs.false203
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end215

lor.lhs.false203.if.end235_crit_edge:             ; preds = %lor.lhs.false203
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end235

do.end215:                                        ; preds = %lor.lhs.false203.do.end215_crit_edge, %if.else191.do.end215_crit_edge
  %si_dev216 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %87 = ptrtoint ptr %si_dev216 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %si_dev216, align 4
  %or221 = zext i8 %82 to i32
  %arrayidx223 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 1
  %89 = ptrtoint ptr %arrayidx223 to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %arrayidx223, align 1
  %conv224 = zext i8 %90 to i32
  %91 = zext i8 %78 to i32
  %arrayidx230 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %92 = ptrtoint ptr %arrayidx230 to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %arrayidx230, align 1
  %conv231 = zext i8 %93 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %88, ptr noundef nonnull @.str.71, ptr noundef nonnull @.str.8, i32 noundef %or221, i32 noundef %conv224, i32 noundef %91, i32 noundef %conv231) #25
  br label %return_unspecified

if.end235:                                        ; preds = %lor.lhs.false203.if.end235_crit_edge, %if.else187, %if.end182, %if.then50, %if.end44.if.end235_crit_edge, %return_unspecified
  %type236 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 1
  %94 = ptrtoint ptr %type236 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %type236, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %95)
  %cmp237 = icmp eq i32 %95, 1
  br i1 %cmp237, label %if.then239, label %if.else256

if.then239:                                       ; preds = %if.end235
  %data240 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5
  %96 = ptrtoint ptr %data240 to i32
  call void @__asan_load1_noabort(i32 %96)
  %97 = load i8, ptr %data240, align 4
  %98 = and i8 %97, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %98)
  %tobool245.not = icmp eq i8 %98, 0
  br i1 %tobool245.not, label %if.end249, label %if.then246

if.then246:                                       ; preds = %if.then239
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx248 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  br label %process_response_response

if.end249:                                        ; preds = %if.then239
  br i1 %tobool.not, label %if.then251, label %if.else253

if.then251:                                       ; preds = %if.end249
  %99 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %rsp, align 4
  %101 = lshr i8 %100, 2
  %arrayidx3.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %102 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %arrayidx3.i, align 1
  %104 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i.i = and i32 %104, -16384
  %105 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %105, i32 0, i32 1
  %106 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %107, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !515
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i.i509 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i.i509, label %if.then251.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.then251.rcu_read_lock.exit.i_crit_edge:        ; preds = %if.then251
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.then251
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 696, ptr noundef nonnull @.str.64) #22
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.then251.rcu_read_lock.exit.i_crit_edge
  %dep_map.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 30, i32 5
  %call.i.i167.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i167.i)
  %tobool.not.i168.i = icmp eq i32 %call.i.i167.i, 0
  br i1 %tobool.not.i168.i, label %land.lhs.true.i170.i, label %rcu_read_lock.exit.i.do.end.i.i_crit_edge

rcu_read_lock.exit.i.do.end.i.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i.i

land.lhs.true.i170.i:                             ; preds = %rcu_read_lock.exit.i
  %call1.i169.i = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i169.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i169.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true3.i.i, label %land.lhs.true.i170.i.do.end.i.i_crit_edge

land.lhs.true.i170.i.do.end.i.i_crit_edge:        ; preds = %land.lhs.true.i170.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i170.i
  %call4.i.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true3.i.i.do.end.i.i_crit_edge, label %land.lhs.true6.i.i

land.lhs.true3.i.i.do.end.i.i_crit_edge:          ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i.i

land.lhs.true6.i.i:                               ; preds = %land.lhs.true3.i.i
  %.b44.i.i = load i1, ptr @find_cmd_rcvr.__warned, align 1
  br i1 %.b44.i.i, label %land.lhs.true6.i.i.do.end.i.i_crit_edge, label %if.then.i171.i

land.lhs.true6.i.i.do.end.i.i_crit_edge:          ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i.i

if.then.i171.i:                                   ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @find_cmd_rcvr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1637, ptr noundef nonnull @.str.1) #22
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %if.then.i171.i, %land.lhs.true6.i.i.do.end.i.i_crit_edge, %land.lhs.true3.i.i.do.end.i.i_crit_edge, %land.lhs.true.i170.i.do.end.i.i_crit_edge, %rcu_read_lock.exit.i.do.end.i.i_crit_edge
  %cmd_rcvrs.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 31
  %108 = ptrtoint ptr %cmd_rcvrs.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %rcvr.045.i.i = load volatile ptr, ptr %cmd_rcvrs.i.i, align 4
  %cmp.not46.i.i = icmp eq ptr %rcvr.045.i.i, %cmd_rcvrs.i.i
  br i1 %cmp.not46.i.i, label %do.end.i.i.if.end.i_crit_edge, label %do.end.i.i.for.body.i.i_crit_edge

do.end.i.i.for.body.i.i_crit_edge:                ; preds = %do.end.i.i
  br label %for.body.i.i

do.end.i.i.if.end.i_crit_edge:                    ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %do.end.i.i.for.body.i.i_crit_edge
  %rcvr.047.i.i = phi ptr [ %rcvr.0.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %rcvr.045.i.i, %do.end.i.i.for.body.i.i_crit_edge ]
  %netfn13.i.i = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.047.i.i, i32 0, i32 2
  %109 = ptrtoint ptr %netfn13.i.i to i32
  call void @__asan_load1_noabort(i32 %109)
  %110 = load i8, ptr %netfn13.i.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %110, i8 %101)
  %cmp15.i.i = icmp eq i8 %110, %101
  br i1 %cmp15.i.i, label %land.lhs.true17.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i.i

land.lhs.true17.i.i:                              ; preds = %for.body.i.i
  %cmd18.i.i = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.047.i.i, i32 0, i32 3
  %111 = ptrtoint ptr %cmd18.i.i to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load i8, ptr %cmd18.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %112, i8 %103)
  %cmp21.i.i = icmp eq i8 %112, %103
  br i1 %cmp21.i.i, label %land.lhs.true23.i.i, label %land.lhs.true17.i.i.for.inc.i.i_crit_edge

land.lhs.true17.i.i.for.inc.i.i_crit_edge:        ; preds = %land.lhs.true17.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i.i

land.lhs.true23.i.i:                              ; preds = %land.lhs.true17.i.i
  %chans.i.i = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.047.i.i, i32 0, i32 4
  %113 = ptrtoint ptr %chans.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %chans.i.i, align 4
  %and.i.i = and i32 %114, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool25.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool25.not.i.i, label %land.lhs.true23.i.i.for.inc.i.i_crit_edge, label %find_cmd_rcvr.exit.i

land.lhs.true23.i.i.for.inc.i.i_crit_edge:        ; preds = %land.lhs.true23.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true23.i.i.for.inc.i.i_crit_edge, %land.lhs.true17.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %115 = ptrtoint ptr %rcvr.047.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %rcvr.0.i.i = load volatile ptr, ptr %rcvr.047.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %rcvr.0.i.i, %cmd_rcvrs.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.if.end.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i.i

for.inc.i.i.if.end.i_crit_edge:                   ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

find_cmd_rcvr.exit.i:                             ; preds = %land.lhs.true23.i.i
  %tobool.not.i = icmp eq ptr %rcvr.047.i.i, null
  br i1 %tobool.not.i, label %find_cmd_rcvr.exit.i.if.end.i_crit_edge, label %if.then.i

find_cmd_rcvr.exit.i.if.end.i_crit_edge:          ; preds = %find_cmd_rcvr.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

if.then.i:                                        ; preds = %find_cmd_rcvr.exit.i
  %user4.i = getelementptr inbounds %struct.cmd_rcvr, ptr %rcvr.047.i.i, i32 0, i32 1
  %116 = ptrtoint ptr %user4.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %user4.i, align 4
  %refcount.i = getelementptr inbounds %struct.ipmi_user, ptr %117, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #22
  %118 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %118, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !501

if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %119 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %119)
  %.not.i.i.i.i.i = icmp sgt i32 %119, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.if.end.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !498

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.if.end.i_crit_edge:             ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i.i) #22
  br label %if.end.i

if.end.i:                                         ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.if.end.i_crit_edge, %find_cmd_rcvr.exit.i.if.end.i_crit_edge, %for.inc.i.i.if.end.i_crit_edge, %do.end.i.i.if.end.i_crit_edge
  %user.0.i = phi ptr [ null, %find_cmd_rcvr.exit.i.if.end.i_crit_edge ], [ %117, %if.else.i.i.i.i.i.if.end.i_crit_edge ], [ %117, %if.end15.sink.split.i.i.i.i.i ], [ null, %do.end.i.i.if.end.i_crit_edge ], [ null, %for.inc.i.i.if.end.i_crit_edge ]
  %call.i172.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i172.i, label %if.end.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i175.i

if.end.i.rcu_read_unlock.exit.i_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit.i

land.lhs.true.i175.i:                             ; preds = %if.end.i
  %call1.i173.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i173.i)
  %tobool.not.i174.i = icmp eq i32 %call1.i173.i, 0
  br i1 %tobool.not.i174.i, label %land.lhs.true.i175.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i177.i

land.lhs.true.i175.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i175.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i177.i:                            ; preds = %land.lhs.true.i175.i
  %.b4.i176.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i176.i, label %land.lhs.true2.i177.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i178.i

land.lhs.true2.i177.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i177.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit.i

if.then.i178.i:                                   ; preds = %land.lhs.true2.i177.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 724, ptr noundef nonnull @.str.65) #22
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i178.i, %land.lhs.true2.i177.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i175.i.rcu_read_unlock.exit.i_crit_edge, %if.end.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !517
  %120 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i179.i = and i32 %120, -16384
  %121 = inttoptr i32 %and.i.i.i.i.i179.i to ptr
  %preempt_count.i.i.i.i180.i = getelementptr inbounds %struct.thread_info, ptr %121, i32 0, i32 1
  %122 = ptrtoint ptr %preempt_count.i.i.i.i180.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile i32, ptr %preempt_count.i.i.i.i180.i, align 4
  %sub.i.i.i.i = add i32 %123, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i180.i, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  %cmp.i = icmp eq ptr %user.0.i, null
  br i1 %cmp.i, label %if.then6.i, label %if.else45.i

if.then6.i:                                       ; preds = %rcu_read_unlock.exit.i
  %arrayidx7.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 23
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx7.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx7.i, i32 1, i32 3, i32 1) #22
  %124 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx7.i, ptr %arrayidx7.i, i32 1, ptr elementtype(i32) %arrayidx7.i) #22, !srcloc !514
  %125 = add i8 %100, 4
  %shl.i = and i8 %125, -4
  %arrayidx12.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %126 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load1_noabort(i32 %126)
  %127 = load i8, ptr %arrayidx12.i, align 2
  %128 = and i8 %127, 3
  %or152.i = or i8 %128, %shl.i
  %129 = ptrtoint ptr %data240 to i32
  call void @__asan_store1_noabort(i32 %129)
  store i8 %or152.i, ptr %data240, align 4
  %arrayidx19.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %130 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_load1_noabort(i32 %130)
  %131 = load i8, ptr %arrayidx19.i, align 1
  %arrayidx21.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 1
  %132 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_store1_noabort(i32 %132)
  store i8 %131, ptr %arrayidx21.i, align 1
  %133 = and i8 %127, -4
  %arrayidx28.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 2
  %134 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %134)
  %135 = load i8, ptr %rsp, align 4
  %136 = and i8 %135, 3
  %or36153.i = or i8 %136, %133
  %137 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_store1_noabort(i32 %137)
  store i8 %or36153.i, ptr %arrayidx28.i, align 2
  %arrayidx39.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 3
  %138 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_store1_noabort(i32 %138)
  store i8 %103, ptr %arrayidx39.i, align 1
  %arrayidx41.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 4
  %139 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_store1_noabort(i32 %139)
  store i8 -63, ptr %arrayidx41.i, align 4
  %data_size.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 4
  %140 = ptrtoint ptr %data_size.i to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 5, ptr %data_size.i, align 4
  %141 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i154.i = and i32 %141, -16384
  %142 = inttoptr i32 %and.i.i.i.i.i154.i to ptr
  %preempt_count.i.i.i.i155.i = getelementptr inbounds %struct.thread_info, ptr %142, i32 0, i32 1
  %143 = ptrtoint ptr %preempt_count.i.i.i.i155.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load volatile i32, ptr %preempt_count.i.i.i.i155.i, align 4
  %add.i.i.i156.i = add i32 %144, 1
  store volatile i32 %add.i.i.i156.i, ptr %preempt_count.i.i.i.i155.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !515
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i157.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i157.i, label %if.then6.i.rcu_read_lock.exit164.i_crit_edge, label %land.lhs.true.i160.i

if.then6.i.rcu_read_lock.exit164.i_crit_edge:     ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit164.i

land.lhs.true.i160.i:                             ; preds = %if.then6.i
  %call1.i158.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i158.i)
  %tobool.not.i159.i = icmp eq i32 %call1.i158.i, 0
  br i1 %tobool.not.i159.i, label %land.lhs.true.i160.i.rcu_read_lock.exit164.i_crit_edge, label %land.lhs.true2.i162.i

land.lhs.true.i160.i.rcu_read_lock.exit164.i_crit_edge: ; preds = %land.lhs.true.i160.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit164.i

land.lhs.true2.i162.i:                            ; preds = %land.lhs.true.i160.i
  %.b4.i161.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i161.i, label %land.lhs.true2.i162.i.rcu_read_lock.exit164.i_crit_edge, label %if.then.i163.i

land.lhs.true2.i162.i.rcu_read_lock.exit164.i_crit_edge: ; preds = %land.lhs.true2.i162.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit164.i

if.then.i163.i:                                   ; preds = %land.lhs.true2.i162.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 696, ptr noundef nonnull @.str.64) #22
  br label %rcu_read_lock.exit164.i

rcu_read_lock.exit164.i:                          ; preds = %if.then.i163.i, %land.lhs.true2.i162.i.rcu_read_lock.exit164.i_crit_edge, %land.lhs.true.i160.i.rcu_read_lock.exit164.i_crit_edge, %if.then6.i.rcu_read_lock.exit164.i_crit_edge
  %in_shutdown.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 3
  %145 = ptrtoint ptr %in_shutdown.i to i32
  call void @__asan_load1_noabort(i32 %145)
  %146 = load i8, ptr %in_shutdown.i, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %146)
  %tobool42.not.i = icmp eq i8 %146, 0
  br i1 %tobool42.not.i, label %if.then43.i, label %rcu_read_lock.exit164.i.if.end44.i_crit_edge

rcu_read_lock.exit164.i.if.end44.i_crit_edge:     ; preds = %rcu_read_lock.exit164.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44.i

if.then43.i:                                      ; preds = %rcu_read_lock.exit164.i
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %147 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %handlers.i, align 4
  %run_to_completion1.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 61
  %149 = ptrtoint ptr %run_to_completion1.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %run_to_completion1.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %150)
  %tobool.not.i182.i = icmp eq i32 %150, 0
  br i1 %tobool.not.i182.i, label %do.body2.i.i, label %if.then43.i.if.end.i.i_crit_edge

if.then43.i.if.end.i.i_crit_edge:                 ; preds = %if.then43.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i.i

do.body2.i.i:                                     ; preds = %if.then43.i
  call void @__sanitizer_cov_trace_pc() #24
  %xmit_msgs_lock.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 26
  %call3.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %xmit_msgs_lock.i.i) #22
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.body2.i.i, %if.then43.i.if.end.i.i_crit_edge
  %flags.0.i.i = phi i32 [ 0, %if.then43.i.if.end.i.i_crit_edge ], [ %call3.i.i, %do.body2.i.i ]
  %curr_msg.i.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 28
  %151 = ptrtoint ptr %curr_msg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %curr_msg.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %152, null
  br i1 %tobool.not.i.i.i, label %if.else3.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %xmit_msgs.i.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 27
  %prev.i12.i.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 27, i32 1
  %153 = ptrtoint ptr %prev.i12.i.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %prev.i12.i.i.i, align 4
  %call.i.i13.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %msg, ptr noundef %154, ptr noundef %xmit_msgs.i.i.i) #22
  br i1 %call.i.i13.i.i.i, label %if.end.i.i15.i.i.i, label %if.then.i.i.i.smi_add_send_msg.exit.i.i_crit_edge

if.then.i.i.i.smi_add_send_msg.exit.i.i_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %smi_add_send_msg.exit.i.i

if.end.i.i15.i.i.i:                               ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %155 = ptrtoint ptr %prev.i12.i.i.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr %msg, ptr %prev.i12.i.i.i, align 4
  %156 = ptrtoint ptr %msg to i32
  call void @__asan_store4_noabort(i32 %156)
  store ptr %xmit_msgs.i.i.i, ptr %msg, align 4
  %prev3.i.i14.i.i.i = getelementptr inbounds %struct.list_head, ptr %msg, i32 0, i32 1
  %157 = ptrtoint ptr %prev3.i.i14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store ptr %154, ptr %prev3.i.i14.i.i.i, align 4
  %158 = ptrtoint ptr %154 to i32
  call void @__asan_store4_noabort(i32 %158)
  store volatile ptr %msg, ptr %154, align 4
  br label %smi_add_send_msg.exit.i.i

if.else3.i.i.i:                                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %159 = ptrtoint ptr %curr_msg.i.i.i to i32
  call void @__asan_store4_noabort(i32 %159)
  store ptr %msg, ptr %curr_msg.i.i.i, align 4
  br label %smi_add_send_msg.exit.i.i

smi_add_send_msg.exit.i.i:                        ; preds = %if.else3.i.i.i, %if.end.i.i15.i.i.i, %if.then.i.i.i.smi_add_send_msg.exit.i.i_crit_edge
  %smi_msg.addr.0.i.i.i = phi ptr [ %msg, %if.else3.i.i.i ], [ null, %if.then.i.i.i.smi_add_send_msg.exit.i.i_crit_edge ], [ null, %if.end.i.i15.i.i.i ]
  br i1 %tobool.not.i182.i, label %if.then8.i.i, label %smi_add_send_msg.exit.i.i.if.end10.i.i_crit_edge

smi_add_send_msg.exit.i.i.if.end10.i.i_crit_edge: ; preds = %smi_add_send_msg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end10.i.i

if.then8.i.i:                                     ; preds = %smi_add_send_msg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %xmit_msgs_lock9.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %xmit_msgs_lock9.i.i, i32 noundef %flags.0.i.i) #22
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %if.then8.i.i, %smi_add_send_msg.exit.i.i.if.end10.i.i_crit_edge
  %tobool11.not.i.i = icmp eq ptr %smi_msg.addr.0.i.i.i, null
  br i1 %tobool11.not.i.i, label %if.end10.i.i.if.end44.i_crit_edge, label %if.then12.i.i

if.end10.i.i.if.end44.i_crit_edge:                ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44.i

if.then12.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %sender.i.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %148, i32 0, i32 5
  %160 = ptrtoint ptr %sender.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %sender.i.i, align 4
  %send_info.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %162 = ptrtoint ptr %send_info.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %send_info.i.i, align 8
  tail call void %161(ptr noundef %163, ptr noundef nonnull %smi_msg.addr.0.i.i.i) #22
  br label %if.end44.i

if.end44.i:                                       ; preds = %if.then12.i.i, %if.end10.i.i.if.end44.i_crit_edge, %rcu_read_lock.exit164.i.if.end44.i_crit_edge
  %rv.0.i = phi i32 [ 0, %rcu_read_lock.exit164.i.if.end44.i_crit_edge ], [ -1, %if.end10.i.i.if.end44.i_crit_edge ], [ -1, %if.then12.i.i ]
  %call.i183.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i183.i, label %if.end44.i.rcu_read_unlock.exit194.i_crit_edge, label %land.lhs.true.i186.i

if.end44.i.rcu_read_unlock.exit194.i_crit_edge:   ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit194.i

land.lhs.true.i186.i:                             ; preds = %if.end44.i
  %call1.i184.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i184.i)
  %tobool.not.i185.i = icmp eq i32 %call1.i184.i, 0
  br i1 %tobool.not.i185.i, label %land.lhs.true.i186.i.rcu_read_unlock.exit194.i_crit_edge, label %land.lhs.true2.i188.i

land.lhs.true.i186.i.rcu_read_unlock.exit194.i_crit_edge: ; preds = %land.lhs.true.i186.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit194.i

land.lhs.true2.i188.i:                            ; preds = %land.lhs.true.i186.i
  %.b4.i187.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i187.i, label %land.lhs.true2.i188.i.rcu_read_unlock.exit194.i_crit_edge, label %if.then.i189.i

land.lhs.true2.i188.i.rcu_read_unlock.exit194.i_crit_edge: ; preds = %land.lhs.true2.i188.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit194.i

if.then.i189.i:                                   ; preds = %land.lhs.true2.i188.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 724, ptr noundef nonnull @.str.65) #22
  br label %rcu_read_unlock.exit194.i

rcu_read_unlock.exit194.i:                        ; preds = %if.then.i189.i, %land.lhs.true2.i188.i.rcu_read_unlock.exit194.i_crit_edge, %land.lhs.true.i186.i.rcu_read_unlock.exit194.i_crit_edge, %if.end44.i.rcu_read_unlock.exit194.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !517
  %164 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i190.i = and i32 %164, -16384
  %165 = inttoptr i32 %and.i.i.i.i.i190.i to ptr
  %preempt_count.i.i.i.i191.i = getelementptr inbounds %struct.thread_info, ptr %165, i32 0, i32 1
  %166 = ptrtoint ptr %preempt_count.i.i.i.i191.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load volatile i32, ptr %preempt_count.i.i.i.i191.i, align 4
  %sub.i.i.i192.i = add i32 %167, -1
  store volatile i32 %sub.i.i.i192.i, ptr %preempt_count.i.i.i.i191.i, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  br label %cleanup384

if.else45.i:                                      ; preds = %rcu_read_unlock.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %168 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %168, i32 noundef 2592, i32 noundef 348) #27
  %tobool.not.i195.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i195.i, label %if.then48.i, label %if.else51.i

if.then48.i:                                      ; preds = %if.else45.i
  %refcount49.i = getelementptr inbounds %struct.ipmi_user, ptr %user.0.i, i32 0, i32 3
  %call.i.i.i.i.i.i198.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount49.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount49.i, i32 1, i32 3, i32 1) #22
  %169 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount49.i, ptr %refcount49.i, i32 1, ptr elementtype(i32) %refcount49.i) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %169, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i200.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i199.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i199.i, label %if.end5.i.i.i.i.i.cleanup384_crit_edge, label %if.then10.i.i.i.i.i, !prof !498

if.end5.i.i.i.i.i.cleanup384_crit_edge:           ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup384

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount49.i, i32 noundef 3) #22
  br label %cleanup384

if.then.i200.i:                                   ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %170 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i.i = getelementptr %struct.ipmi_user, ptr %user.0.i, i32 0, i32 8
  %call.i.i201.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %170, ptr noundef %remove_work.i.i) #22
  br label %cleanup384

if.else51.i:                                      ; preds = %if.else45.i
  %user.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 2
  %done.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 7
  %171 = ptrtoint ptr %done.i.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store ptr @free_recv_msg, ptr %done.i.i, align 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @recv_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @recv_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %172 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @recv_msg_inuse_count, ptr nonnull @recv_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @recv_msg_inuse_count) #22, !srcloc !514
  %addr.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 3
  %173 = ptrtoint ptr %addr.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store i32 129, ptr %addr.i, align 8
  %channel.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 3, i32 1
  %174 = ptrtoint ptr %channel.i to i32
  call void @__asan_store2_noabort(i32 %174)
  store i16 0, ptr %channel.i, align 4
  %arrayidx53.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %175 = ptrtoint ptr %arrayidx53.i to i32
  call void @__asan_load1_noabort(i32 %175)
  %176 = load i8, ptr %arrayidx53.i, align 1
  %slave_addr.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 3, i32 2
  %177 = ptrtoint ptr %slave_addr.i to i32
  call void @__asan_store1_noabort(i32 %177)
  store i8 %176, ptr %slave_addr.i, align 2
  %178 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %178)
  %179 = load i8, ptr %rsp, align 4
  %180 = and i8 %179, 3
  %rs_lun.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 3, i32 2, i32 1
  %181 = ptrtoint ptr %rs_lun.i to i32
  call void @__asan_store1_noabort(i32 %181)
  store i8 %180, ptr %rs_lun.i, align 1
  %arrayidx60.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %182 = ptrtoint ptr %arrayidx60.i to i32
  call void @__asan_load1_noabort(i32 %182)
  %183 = load i8, ptr %arrayidx60.i, align 2
  %184 = and i8 %183, 3
  %rq_lun.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 3, i32 2, i32 2
  %185 = ptrtoint ptr %rq_lun.i to i32
  call void @__asan_store1_noabort(i32 %185)
  store i8 %184, ptr %rq_lun.i, align 8
  %186 = ptrtoint ptr %user.i.i to i32
  call void @__asan_store4_noabort(i32 %186)
  store ptr %user.0.i, ptr %user.i.i, align 4
  %recv_type.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 1
  %187 = ptrtoint ptr %recv_type.i to i32
  call void @__asan_store4_noabort(i32 %187)
  store i32 3, ptr %recv_type.i, align 8
  %188 = lshr i8 %183, 2
  %189 = zext i8 %188 to i32
  %msgid.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 4
  %190 = ptrtoint ptr %msgid.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 %189, ptr %msgid.i, align 8
  %191 = lshr i8 %179, 2
  %msg74.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 5
  %192 = ptrtoint ptr %msg74.i to i32
  call void @__asan_store1_noabort(i32 %192)
  store i8 %191, ptr %msg74.i, align 4
  %193 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %193)
  %194 = load i8, ptr %arrayidx3.i, align 1
  %cmd79.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 5, i32 1
  %195 = ptrtoint ptr %cmd79.i to i32
  call void @__asan_store1_noabort(i32 %195)
  store i8 %194, ptr %cmd79.i, align 1
  %msg_data.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 8
  %data81.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 5, i32 3
  %196 = ptrtoint ptr %data81.i to i32
  call void @__asan_store4_noabort(i32 %196)
  store ptr %msg_data.i, ptr %data81.i, align 8
  %197 = ptrtoint ptr %rsp_size7 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %rsp_size7, align 4
  %199 = trunc i32 %198 to i16
  %conv82.i = add i16 %199, -4
  %data_len.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i, i32 0, i32 5, i32 2
  %200 = ptrtoint ptr %data_len.i to i32
  call void @__asan_store2_noabort(i32 %200)
  store i16 %conv82.i, ptr %data_len.i, align 2
  %add.ptr.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  %sub89.i = add i32 %198, -4
  %201 = call ptr @memcpy(ptr %msg_data.i, ptr %add.ptr.i, i32 %sub89.i)
  %call90.i = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef nonnull %call7.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call90.i)
  %tobool91.not.i = icmp eq i32 %call90.i, 0
  br i1 %tobool91.not.i, label %if.else95.i, label %if.then92.i

if.then92.i:                                      ; preds = %if.else51.i
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx94.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 23
  %call.i.i165.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx94.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx94.i, i32 1, i32 3, i32 1) #22
  %202 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx94.i, ptr %arrayidx94.i, i32 1, ptr elementtype(i32) %arrayidx94.i) #22, !srcloc !514
  br label %cleanup384

if.else95.i:                                      ; preds = %if.else51.i
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx97.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 21
  %call.i.i166.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx97.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx97.i, i32 1, i32 3, i32 1) #22
  %203 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx97.i, ptr %arrayidx97.i, i32 1, ptr elementtype(i32) %arrayidx97.i) #22, !srcloc !514
  br label %cleanup384

if.else253:                                       ; preds = %if.end249
  %user_data.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 3
  %204 = ptrtoint ptr %user_data.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %user_data.i, align 4
  %cmp.i510 = icmp eq ptr %205, null
  br i1 %cmp.i510, label %do.end.i, label %if.end.i526

do.end.i:                                         ; preds = %if.else253
  call void @__sanitizer_cov_trace_pc() #24
  %si_dev.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %206 = ptrtoint ptr %si_dev.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %si_dev.i, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %207, ptr noundef nonnull @.str.73, ptr noundef nonnull @.str.8) #25
  br label %cleanup384

if.end.i526:                                      ; preds = %if.else253
  %recv_type.i511 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 1
  %208 = ptrtoint ptr %recv_type.i511 to i32
  call void @__asan_store4_noabort(i32 %208)
  store i32 1, ptr %recv_type.i511, align 4
  %msgid.i512 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 2
  %209 = ptrtoint ptr %msgid.i512 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %msgid.i512, align 4
  %msgid1.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 4
  %211 = ptrtoint ptr %msgid1.i to i32
  call void @__asan_store4_noabort(i32 %211)
  store i32 %210, ptr %msgid1.i, align 4
  %addr.i513 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 3
  %212 = ptrtoint ptr %addr.i513 to i32
  call void @__asan_store4_noabort(i32 %212)
  store i32 129, ptr %addr.i513, align 4
  %channel.i514 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 3, i32 1
  %213 = ptrtoint ptr %channel.i514 to i32
  call void @__asan_store2_noabort(i32 %213)
  store i16 0, ptr %channel.i514, align 4
  %arrayidx.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %214 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %214)
  %215 = load i8, ptr %arrayidx.i, align 1
  %slave_addr.i516 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 3, i32 2
  %216 = ptrtoint ptr %slave_addr.i516 to i32
  call void @__asan_store1_noabort(i32 %216)
  store i8 %215, ptr %slave_addr.i516, align 2
  %217 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %217)
  %218 = load i8, ptr %rsp, align 4
  %219 = and i8 %218, 3
  %rq_lun.i517 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 3, i32 2, i32 2
  %220 = ptrtoint ptr %rq_lun.i517 to i32
  call void @__asan_store1_noabort(i32 %220)
  store i8 %219, ptr %rq_lun.i517, align 4
  %arrayidx6.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %221 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load1_noabort(i32 %221)
  %222 = load i8, ptr %arrayidx6.i, align 2
  %223 = and i8 %222, 3
  %rs_lun.i518 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 3, i32 2, i32 1
  %224 = ptrtoint ptr %rs_lun.i518 to i32
  call void @__asan_store1_noabort(i32 %224)
  store i8 %223, ptr %rs_lun.i518, align 1
  %225 = load i8, ptr %rsp, align 4
  %226 = lshr i8 %225, 2
  %msg14.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 5
  %227 = ptrtoint ptr %msg14.i to i32
  call void @__asan_store1_noabort(i32 %227)
  store i8 %226, ptr %msg14.i, align 4
  %arrayidx16.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %228 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load1_noabort(i32 %228)
  %229 = load i8, ptr %arrayidx16.i, align 1
  %cmd.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 5, i32 1
  %230 = ptrtoint ptr %cmd.i to i32
  call void @__asan_store1_noabort(i32 %230)
  store i8 %229, ptr %cmd.i, align 1
  %msg_data.i519 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 8
  %arrayidx19.i520 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  %231 = ptrtoint ptr %rsp_size7 to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %rsp_size7, align 4
  %sub.i = add i32 %232, -4
  %233 = call ptr @memcpy(ptr %msg_data.i519, ptr %arrayidx19.i520, i32 %sub.i)
  %data.i522 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 5, i32 3
  %234 = ptrtoint ptr %data.i522 to i32
  call void @__asan_store4_noabort(i32 %234)
  store ptr %msg_data.i519, ptr %data.i522, align 4
  %235 = load i32, ptr %rsp_size7, align 4
  %236 = trunc i32 %235 to i16
  %conv25.i = add i16 %236, -4
  %data_len.i523 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %205, i32 0, i32 5, i32 2
  %237 = ptrtoint ptr %data_len.i523 to i32
  call void @__asan_store2_noabort(i32 %237)
  store i16 %conv25.i, ptr %data_len.i523, align 2
  %call.i.i524 = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef nonnull %205) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i524)
  %tobool.not.i.i525 = icmp eq i32 %call.i.i524, 0
  br i1 %tobool.not.i.i525, label %if.else.i.i, label %if.then.i.i528

if.then.i.i528:                                   ; preds = %if.end.i526
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx.i.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 3
  %call.i.i.i.i527 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.i, i32 1, i32 3, i32 1) #22
  %238 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.i, ptr %arrayidx.i.i, i32 1, ptr elementtype(i32) %arrayidx.i.i) #22, !srcloc !514
  br label %cleanup384

if.else.i.i:                                      ; preds = %if.end.i526
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx2.i.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 2
  %call.i.i5.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx2.i.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx2.i.i, i32 1, i32 3, i32 1) #22
  %239 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx2.i.i, ptr %arrayidx2.i.i, i32 1, ptr elementtype(i32) %arrayidx2.i.i) #22, !srcloc !514
  br label %cleanup384

if.else256:                                       ; preds = %if.end235
  %240 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %240)
  %241 = load i8, ptr %rsp, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 28, i8 %241)
  %cmp260 = icmp eq i8 %241, 28
  br i1 %cmp260, label %land.lhs.true262, label %if.else256.if.else378_crit_edge

if.else256.if.else378_crit_edge:                  ; preds = %if.else256
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else378

land.lhs.true262:                                 ; preds = %if.else256
  %arrayidx264 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %242 = ptrtoint ptr %arrayidx264 to i32
  call void @__asan_load1_noabort(i32 %242)
  %243 = load i8, ptr %arrayidx264, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 52, i8 %243)
  %cmp266 = icmp eq i8 %243, 52
  br i1 %cmp266, label %land.lhs.true268, label %land.lhs.true262.land.lhs.true299_crit_edge

land.lhs.true262.land.lhs.true299_crit_edge:      ; preds = %land.lhs.true262
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.lhs.true299

land.lhs.true268:                                 ; preds = %land.lhs.true262
  %user_data269 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 3
  %244 = ptrtoint ptr %user_data269 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %user_data269, align 4
  %cmp270.not = icmp eq ptr %245, null
  br i1 %cmp270.not, label %land.lhs.true299thread-pre-split, label %if.end280

if.end280:                                        ; preds = %land.lhs.true268
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx282 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  br label %process_response_response

process_response_response:                        ; preds = %if.end280, %if.then246
  %cc.0.in = phi ptr [ %arrayidx248, %if.then246 ], [ %arrayidx282, %if.end280 ]
  %user_data283 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 3
  %246 = ptrtoint ptr %user_data283 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %user_data283, align 4
  %tobool284.not = icmp eq ptr %247, null
  br i1 %tobool284.not, label %process_response_response.cleanup384_crit_edge, label %if.end286

process_response_response.cleanup384_crit_edge:   ; preds = %process_response_response
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup384

if.end286:                                        ; preds = %process_response_response
  %248 = ptrtoint ptr %cc.0.in to i32
  call void @__asan_load1_noabort(i32 %248)
  %cc.0 = load i8, ptr %cc.0.in, align 2
  %recv_type = getelementptr inbounds %struct.ipmi_recv_msg, ptr %247, i32 0, i32 1
  %249 = ptrtoint ptr %recv_type to i32
  call void @__asan_store4_noabort(i32 %249)
  store i32 4, ptr %recv_type, align 4
  %msg_data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %247, i32 0, i32 8
  %data289 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %247, i32 0, i32 5, i32 3
  %250 = ptrtoint ptr %data289 to i32
  call void @__asan_store4_noabort(i32 %250)
  store ptr %msg_data, ptr %data289, align 4
  %251 = ptrtoint ptr %msg_data to i32
  call void @__asan_store1_noabort(i32 %251)
  store i8 %cc.0, ptr %msg_data, align 4
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %247, i32 0, i32 5, i32 2
  %252 = ptrtoint ptr %data_len to i32
  call void @__asan_store2_noabort(i32 %252)
  store i16 1, ptr %data_len, align 2
  %call.i = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef nonnull %247) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i529 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i529, label %if.else.i, label %if.then.i532

if.then.i532:                                     ; preds = %if.end286
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx.i530 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 3
  %call.i.i.i531 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i530, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i530, i32 1, i32 3, i32 1) #22
  %253 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i530, ptr %arrayidx.i530, i32 1, ptr elementtype(i32) %arrayidx.i530) #22, !srcloc !514
  br label %cleanup384

if.else.i:                                        ; preds = %if.end286
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx2.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 2
  %call.i.i5.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx2.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx2.i, i32 1, i32 3, i32 1) #22
  %254 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx2.i, ptr %arrayidx2.i, i32 1, ptr elementtype(i32) %arrayidx2.i) #22, !srcloc !514
  br label %cleanup384

land.lhs.true299thread-pre-split:                 ; preds = %land.lhs.true268
  call void @__sanitizer_cov_trace_pc() #24
  %255 = ptrtoint ptr %arrayidx264 to i32
  call void @__asan_load1_noabort(i32 %255)
  %.pr = load i8, ptr %arrayidx264, align 1
  br label %land.lhs.true299

land.lhs.true299:                                 ; preds = %land.lhs.true299thread-pre-split, %land.lhs.true262.land.lhs.true299_crit_edge
  %256 = phi i8 [ %.pr, %land.lhs.true299thread-pre-split ], [ %243, %land.lhs.true262.land.lhs.true299_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 51, i8 %256)
  %cmp303 = icmp eq i8 %256, 51
  br i1 %cmp303, label %if.then305, label %land.lhs.true370

if.then305:                                       ; preds = %land.lhs.true299
  %channels_ready = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 59
  %257 = ptrtoint ptr %channels_ready to i32
  call void @__asan_load1_noabort(i32 %257)
  %258 = load i8, ptr %channels_ready, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %258)
  %tobool315.not = icmp eq i8 %258, 0
  br i1 %tobool315.not, label %if.then305.cleanup384_crit_edge, label %do.end320

if.then305.cleanup384_crit_edge:                  ; preds = %if.then305
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup384

do.end320:                                        ; preds = %if.then305
  %arrayidx308 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %259 = ptrtoint ptr %arrayidx308 to i32
  call void @__asan_load1_noabort(i32 %259)
  %260 = load i8, ptr %arrayidx308, align 1
  %261 = and i8 %260, 15
  %and310 = zext i8 %261 to i32
  %channel_list322 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 55
  %262 = ptrtoint ptr %channel_list322 to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load volatile ptr, ptr %channel_list322, align 4
  %arrayidx325 = getelementptr %struct.ipmi_channel, ptr %263, i32 %and310
  %264 = ptrtoint ptr %arrayidx325 to i32
  call void @__asan_load1_noabort(i32 %264)
  %265 = load i8, ptr %arrayidx325, align 1
  %266 = zext i8 %265 to i64
  call void @__sanitizer_cov_trace_switch(i64 %266, ptr @__sancov_gen_cov_switch_values.165)
  switch i8 %265, label %sw.default [
    i8 1, label %sw.bb
    i8 4, label %do.end320.sw.bb338_crit_edge
    i8 5, label %do.end320.sw.bb338_crit_edge622
  ]

do.end320.sw.bb338_crit_edge622:                  ; preds = %do.end320
  call void @__sanitizer_cov_trace_pc() #24
  br label %sw.bb338

do.end320.sw.bb338_crit_edge:                     ; preds = %do.end320
  call void @__sanitizer_cov_trace_pc() #24
  br label %sw.bb338

sw.bb:                                            ; preds = %do.end320
  %arrayidx329 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  %267 = ptrtoint ptr %arrayidx329 to i32
  call void @__asan_load1_noabort(i32 %267)
  %268 = load i8, ptr %arrayidx329, align 4
  %269 = and i8 %268, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %269)
  %tobool332.not = icmp eq i8 %269, 0
  br i1 %tobool332.not, label %if.else335, label %if.then333

if.then333:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @handle_ipmb_get_msg_rsp(ptr noundef %intf, ptr noundef %msg)
  br label %cleanup384

if.else335:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #24
  %call336 = tail call fastcc i32 @handle_ipmb_get_msg_cmd(ptr noundef %intf, ptr noundef %msg)
  br label %cleanup384

sw.bb338:                                         ; preds = %do.end320.sw.bb338_crit_edge, %do.end320.sw.bb338_crit_edge622
  %arrayidx340 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 6
  %270 = ptrtoint ptr %arrayidx340 to i32
  call void @__asan_load1_noabort(i32 %270)
  %271 = load i8, ptr %arrayidx340, align 2
  %272 = and i8 %271, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %272)
  %tobool343.not = icmp eq i8 %272, 0
  br i1 %tobool343.not, label %if.else346, label %if.then344

if.then344:                                       ; preds = %sw.bb338
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @handle_lan_get_msg_rsp(ptr noundef %intf, ptr noundef %msg)
  br label %cleanup384

if.else346:                                       ; preds = %sw.bb338
  call void @__sanitizer_cov_trace_pc() #24
  %call347 = tail call fastcc i32 @handle_lan_get_msg_cmd(ptr noundef %intf, ptr noundef %msg)
  br label %cleanup384

sw.default:                                       ; preds = %do.end320
  call void @__sanitizer_cov_trace_const_cmp1(i8 95, i8 %265)
  %273 = icmp sgt i8 %265, 95
  br i1 %273, label %if.then360, label %sw.default.cleanup384_crit_edge

sw.default.cleanup384_crit_edge:                  ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup384

if.then360:                                       ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #24
  %call361 = tail call fastcc i32 @handle_oem_get_msg_cmd(ptr noundef %intf, ptr noundef %msg)
  br label %cleanup384

land.lhs.true370:                                 ; preds = %land.lhs.true299
  %274 = ptrtoint ptr %arrayidx264 to i32
  call void @__asan_load1_noabort(i32 %274)
  %275 = load i8, ptr %arrayidx264, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 53, i8 %275)
  %cmp374 = icmp eq i8 %275, 53
  br i1 %cmp374, label %if.then376, label %land.lhs.true370.if.else378_crit_edge

land.lhs.true370.if.else378_crit_edge:            ; preds = %land.lhs.true370
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else378

if.then376:                                       ; preds = %land.lhs.true370
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %msgs.i) #22
  %276 = getelementptr inbounds %struct.list_head, ptr %msgs.i, i32 0, i32 1
  %277 = ptrtoint ptr %rsp_size7 to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load i32, ptr %rsp_size7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 19, i32 %278)
  %cmp.i535 = icmp slt i32 %278, 19
  br i1 %cmp.i535, label %if.then.i538, label %if.end.i539

if.then.i538:                                     ; preds = %if.then376
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx.i536 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 24
  %call.i.i.i537 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i536, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i536, i32 1, i32 3, i32 1) #22
  %279 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i536, ptr %arrayidx.i536, i32 1, ptr elementtype(i32) %arrayidx.i536) #22, !srcloc !514
  br label %handle_read_event_rsp.exit

if.end.i539:                                      ; preds = %if.then376
  %arrayidx1.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %280 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load1_noabort(i32 %280)
  %281 = load i8, ptr %arrayidx1.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %281)
  %cmp2.not.i = icmp eq i8 %281, 0
  br i1 %cmp2.not.i, label %if.end5.i, label %if.end.i539.handle_read_event_rsp.exit_crit_edge

if.end.i539.handle_read_event_rsp.exit_crit_edge: ; preds = %if.end.i539
  call void @__sanitizer_cov_trace_pc() #24
  br label %handle_read_event_rsp.exit

if.end5.i:                                        ; preds = %if.end.i539
  %282 = ptrtoint ptr %msgs.i to i32
  call void @__asan_store4_noabort(i32 %282)
  store volatile ptr %msgs.i, ptr %msgs.i, align 4
  %283 = ptrtoint ptr %276 to i32
  call void @__asan_store4_noabort(i32 %283)
  store ptr %msgs.i, ptr %276, align 4
  %events_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 32
  %call9.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %events_lock.i) #22
  %arrayidx13.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 25
  %call.i.i167.i540 = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx13.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %arrayidx13.i, i32 1, i32 3, i32 1) #22
  %284 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx13.i, ptr %arrayidx13.i, i32 1, ptr elementtype(i32) %arrayidx13.i) #22, !srcloc !514
  %users_srcu.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 6
  %call.i.i541 = call i32 @__srcu_read_lock(ptr noundef %users_srcu.i) #22
  %dep_map.i.i542 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 6, i32 16
  call fastcc void @rcu_lock_acquire(ptr noundef %dep_map.i.i542) #22
  %call16.i = call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %tobool.not.i543 = icmp eq i32 %call16.i, 0
  br i1 %tobool.not.i543, label %land.lhs.true.i, label %if.end5.i.do.end24.i_crit_edge

if.end5.i.do.end24.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end24.i

land.lhs.true.i:                                  ; preds = %if.end5.i
  %call17.i = call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17.i)
  %tobool18.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool18.not.i, label %land.lhs.true.i.do.end24.i_crit_edge, label %land.lhs.true19.i

land.lhs.true.i.do.end24.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end24.i

land.lhs.true19.i:                                ; preds = %land.lhs.true.i
  %.b166.i = load i1, ptr @handle_read_event_rsp.__warned, align 1
  br i1 %.b166.i, label %land.lhs.true19.i.do.end24.i_crit_edge, label %if.then21.i

land.lhs.true19.i.do.end24.i_crit_edge:           ; preds = %land.lhs.true19.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end24.i

if.then21.i:                                      ; preds = %land.lhs.true19.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @handle_read_event_rsp.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4333, ptr noundef nonnull @.str.1) #22
  br label %do.end24.i

do.end24.i:                                       ; preds = %if.then21.i, %land.lhs.true19.i.do.end24.i_crit_edge, %land.lhs.true.i.do.end24.i_crit_edge, %if.end5.i.do.end24.i_crit_edge
  %users.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 5
  %285 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %285)
  %user.0209.i = load volatile ptr, ptr %users.i, align 4
  %cmp31.not210.i = icmp eq ptr %user.0209.i, %users.i
  br i1 %cmp31.not210.i, label %do.end24.i.for.end72.i_crit_edge, label %for.body.lr.ph.i

do.end24.i.for.end72.i_crit_edge:                 ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end72.i

for.body.lr.ph.i:                                 ; preds = %do.end24.i
  %arrayidx11.i.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc62.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %user.0212.i = phi ptr [ %user.0209.i, %for.body.lr.ph.i ], [ %user.0.i569, %for.inc62.i.for.body.i_crit_edge ]
  %deliver_count.0211.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %deliver_count.1.i, %for.inc62.i.for.body.i_crit_edge ]
  %gets_events.i = getelementptr inbounds %struct.ipmi_user, ptr %user.0212.i, i32 0, i32 7
  %286 = ptrtoint ptr %gets_events.i to i32
  call void @__asan_load1_noabort(i32 %286)
  %287 = load i8, ptr %gets_events.i, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %287)
  %tobool33.not.i = icmp eq i8 %287, 0
  br i1 %tobool33.not.i, label %for.body.i.for.inc62.i_crit_edge, label %if.end35.i

for.body.i.for.inc62.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62.i

if.end35.i:                                       ; preds = %for.body.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %288 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i544 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %288, i32 noundef 2592, i32 noundef 348) #27
  %tobool.not.i.i545 = icmp eq ptr %call7.i.i.i544, null
  br i1 %tobool.not.i.i545, label %if.then38.i, label %if.end59.i

if.then38.i:                                      ; preds = %if.end35.i
  %call.i168.i = call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i168.i, label %if.then38.i.rcu_read_unlock.exit.i553_crit_edge, label %land.lhs.true.i.i547

if.then38.i.rcu_read_unlock.exit.i553_crit_edge:  ; preds = %if.then38.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit.i553

land.lhs.true.i.i547:                             ; preds = %if.then38.i
  %call1.i.i546 = call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i546)
  %tobool.not.i169.i = icmp eq i32 %call1.i.i546, 0
  br i1 %tobool.not.i169.i, label %land.lhs.true.i.i547.rcu_read_unlock.exit.i553_crit_edge, label %land.lhs.true2.i.i549

land.lhs.true.i.i547.rcu_read_unlock.exit.i553_crit_edge: ; preds = %land.lhs.true.i.i547
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit.i553

land.lhs.true2.i.i549:                            ; preds = %land.lhs.true.i.i547
  %.b4.i.i548 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i.i548, label %land.lhs.true2.i.i549.rcu_read_unlock.exit.i553_crit_edge, label %if.then.i170.i

land.lhs.true2.i.i549.rcu_read_unlock.exit.i553_crit_edge: ; preds = %land.lhs.true2.i.i549
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit.i553

if.then.i170.i:                                   ; preds = %land.lhs.true2.i.i549
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 724, ptr noundef nonnull @.str.65) #22
  br label %rcu_read_unlock.exit.i553

rcu_read_unlock.exit.i553:                        ; preds = %if.then.i170.i, %land.lhs.true2.i.i549.rcu_read_unlock.exit.i553_crit_edge, %land.lhs.true.i.i547.rcu_read_unlock.exit.i553_crit_edge, %if.then38.i.rcu_read_unlock.exit.i553_crit_edge
  call void asm sideeffect "", "~{memory}"() #22, !srcloc !517
  %289 = call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i.i550 = and i32 %289, -16384
  %290 = inttoptr i32 %and.i.i.i.i.i.i550 to ptr
  %preempt_count.i.i.i.i.i551 = getelementptr inbounds %struct.thread_info, ptr %290, i32 0, i32 1
  %291 = ptrtoint ptr %preempt_count.i.i.i.i.i551 to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load volatile i32, ptr %preempt_count.i.i.i.i.i551, align 4
  %sub.i.i.i.i552 = add i32 %292, -1
  store volatile i32 %sub.i.i.i.i552, ptr %preempt_count.i.i.i.i.i551, align 4
  call void @rcu_read_unlock_strict() #22
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  %293 = ptrtoint ptr %msgs.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load ptr, ptr %msgs.i, align 4
  %cmp50.not213.i = icmp eq ptr %294, %msgs.i
  br i1 %cmp50.not213.i, label %rcu_read_unlock.exit.i553.out.i_crit_edge, label %rcu_read_unlock.exit.i553.for.body52.i_crit_edge

rcu_read_unlock.exit.i553.for.body52.i_crit_edge: ; preds = %rcu_read_unlock.exit.i553
  br label %for.body52.i

rcu_read_unlock.exit.i553.out.i_crit_edge:        ; preds = %rcu_read_unlock.exit.i553
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

for.body52.i:                                     ; preds = %ipmi_free_recv_msg.exit.i.for.body52.i_crit_edge, %rcu_read_unlock.exit.i553.for.body52.i_crit_edge
  %recv_msg.0214.i = phi ptr [ %recv_msg2.0.i, %ipmi_free_recv_msg.exit.i.for.body52.i_crit_edge ], [ %294, %rcu_read_unlock.exit.i553.for.body52.i_crit_edge ]
  %295 = ptrtoint ptr %recv_msg.0214.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %recv_msg2.0.i = load ptr, ptr %recv_msg.0214.i, align 4
  %call.i.i171.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %recv_msg.0214.i) #22
  br i1 %call.i.i171.i, label %if.end.i.i.i, label %for.body52.i.list_del.exit.i_crit_edge

for.body52.i.list_del.exit.i_crit_edge:           ; preds = %for.body52.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body52.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %recv_msg.0214.i, i32 0, i32 1
  %296 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %prev.i.i.i, align 4
  %298 = ptrtoint ptr %recv_msg.0214.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %recv_msg.0214.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %299, i32 0, i32 1
  %300 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %300)
  store ptr %297, ptr %prev1.i.i.i.i, align 4
  %301 = ptrtoint ptr %297 to i32
  call void @__asan_store4_noabort(i32 %301)
  store volatile ptr %299, ptr %297, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body52.i.list_del.exit.i_crit_edge
  %302 = ptrtoint ptr %recv_msg.0214.i to i32
  call void @__asan_store4_noabort(i32 %302)
  store ptr inttoptr (i32 256 to ptr), ptr %recv_msg.0214.i, align 4
  %prev.i172.i = getelementptr inbounds %struct.list_head, ptr %recv_msg.0214.i, i32 0, i32 1
  %303 = ptrtoint ptr %prev.i172.i to i32
  call void @__asan_store4_noabort(i32 %303)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i172.i, align 4
  %user.i173.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0214.i, i32 0, i32 2
  %304 = ptrtoint ptr %user.i173.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %user.i173.i, align 4
  %tobool.not.i174.i554 = icmp eq ptr %305, null
  br i1 %tobool.not.i174.i554, label %list_del.exit.i.ipmi_free_recv_msg.exit.i_crit_edge, label %land.lhs.true.i175.i555

list_del.exit.i.ipmi_free_recv_msg.exit.i_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit.i

land.lhs.true.i175.i555:                          ; preds = %list_del.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %306 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %306)
  %tobool1.not.i.i = icmp eq i32 %306, 0
  br i1 %tobool1.not.i.i, label %if.then.i176.i, label %land.lhs.true.i175.i555.ipmi_free_recv_msg.exit.i_crit_edge

land.lhs.true.i175.i555.ipmi_free_recv_msg.exit.i_crit_edge: ; preds = %land.lhs.true.i175.i555
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit.i

if.then.i176.i:                                   ; preds = %land.lhs.true.i175.i555
  %refcount.i.i = getelementptr inbounds %struct.ipmi_user, ptr %305, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  call void @llvm.prefetch.p0(ptr %refcount.i.i, i32 1, i32 3, i32 1) #22
  %307 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i, ptr %refcount.i.i, i32 1, ptr elementtype(i32) %refcount.i.i) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %307, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i556, label %if.end5.i.i.i.i.i.i

if.end5.i.i.i.i.i.i:                              ; preds = %if.then.i176.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i.i, label %if.end5.i.i.i.i.i.i.ipmi_free_recv_msg.exit.i_crit_edge, label %if.then10.i.i.i.i.i.i, !prof !498

if.end5.i.i.i.i.i.i.ipmi_free_recv_msg.exit.i_crit_edge: ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_free_recv_msg.exit.i

if.then10.i.i.i.i.i.i:                            ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %refcount.i.i, i32 noundef 3) #22
  br label %ipmi_free_recv_msg.exit.i

if.then.i.i.i556:                                 ; preds = %if.then.i176.i
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %308 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i.i.i = getelementptr %struct.ipmi_user, ptr %305, i32 0, i32 8
  %call.i.i.i177.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %308, ptr noundef %remove_work.i.i.i) #22
  br label %ipmi_free_recv_msg.exit.i

ipmi_free_recv_msg.exit.i:                        ; preds = %if.then.i.i.i556, %if.then10.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.ipmi_free_recv_msg.exit.i_crit_edge, %land.lhs.true.i175.i555.ipmi_free_recv_msg.exit.i_crit_edge, %list_del.exit.i.ipmi_free_recv_msg.exit.i_crit_edge
  %done.i178.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg.0214.i, i32 0, i32 7
  %309 = ptrtoint ptr %done.i178.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load ptr, ptr %done.i178.i, align 4
  call void %310(ptr noundef %recv_msg.0214.i) #22
  %cmp50.not.i = icmp eq ptr %recv_msg2.0.i, %msgs.i
  br i1 %cmp50.not.i, label %ipmi_free_recv_msg.exit.i.out.i_crit_edge, label %ipmi_free_recv_msg.exit.i.for.body52.i_crit_edge

ipmi_free_recv_msg.exit.i.for.body52.i_crit_edge: ; preds = %ipmi_free_recv_msg.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body52.i

ipmi_free_recv_msg.exit.i.out.i_crit_edge:        ; preds = %ipmi_free_recv_msg.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

if.end59.i:                                       ; preds = %if.end35.i
  %user.i.i557 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 2
  %311 = ptrtoint ptr %user.i.i557 to i32
  call void @__asan_store4_noabort(i32 %311)
  store ptr null, ptr %user.i.i557, align 4
  %done.i.i558 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 7
  %312 = ptrtoint ptr %done.i.i558 to i32
  call void @__asan_store4_noabort(i32 %312)
  store ptr @free_recv_msg, ptr %done.i.i558, align 8
  %call.i.i.i.i559 = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @recv_msg_inuse_count, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr nonnull @recv_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %313 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @recv_msg_inuse_count, ptr nonnull @recv_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @recv_msg_inuse_count) #22, !srcloc !514
  %inc.i = add i32 %deliver_count.0211.i, 1
  %msgid.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 4
  %314 = ptrtoint ptr %msgid.i.i to i32
  call void @__asan_store4_noabort(i32 %314)
  store i32 0, ptr %msgid.i.i, align 8
  %addr.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 3
  %315 = ptrtoint ptr %addr.i.i to i32
  call void @__asan_store4_noabort(i32 %315)
  store i32 12, ptr %addr.i.i, align 8
  %channel.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 3, i32 1
  %316 = ptrtoint ptr %channel.i.i to i32
  call void @__asan_store2_noabort(i32 %316)
  store i16 15, ptr %channel.i.i, align 4
  %317 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %317)
  %318 = load i8, ptr %rsp, align 4
  %319 = and i8 %318, 3
  %lun.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 3, i32 2
  %320 = ptrtoint ptr %lun.i.i to i32
  call void @__asan_store1_noabort(i32 %320)
  store i8 %319, ptr %lun.i.i, align 2
  %recv_type.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 1
  %321 = ptrtoint ptr %recv_type.i.i to i32
  call void @__asan_store4_noabort(i32 %321)
  store i32 2, ptr %recv_type.i.i, align 8
  %322 = lshr i8 %318, 2
  %msg6.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 5
  %323 = ptrtoint ptr %msg6.i.i to i32
  call void @__asan_store1_noabort(i32 %323)
  store i8 %322, ptr %msg6.i.i, align 4
  %324 = ptrtoint ptr %arrayidx264 to i32
  call void @__asan_load1_noabort(i32 %324)
  %325 = load i8, ptr %arrayidx264, align 1
  %cmd.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 5, i32 1
  %326 = ptrtoint ptr %cmd.i.i to i32
  call void @__asan_store1_noabort(i32 %326)
  store i8 %325, ptr %cmd.i.i, align 1
  %msg_data.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 8
  %327 = ptrtoint ptr %rsp_size7 to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %rsp_size7, align 4
  %sub.i.i = add i32 %328, -3
  %329 = call ptr @memcpy(ptr %msg_data.i.i, ptr %arrayidx11.i.i, i32 %sub.i.i)
  %data.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 5, i32 3
  %330 = ptrtoint ptr %data.i.i to i32
  call void @__asan_store4_noabort(i32 %330)
  store ptr %msg_data.i.i, ptr %data.i.i, align 8
  %331 = trunc i32 %328 to i16
  %conv17.i.i = add i16 %331, -3
  %data_len.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i.i544, i32 0, i32 5, i32 2
  %332 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_store2_noabort(i32 %332)
  store i16 %conv17.i.i, ptr %data_len.i.i, align 2
  %333 = ptrtoint ptr %user.i.i557 to i32
  call void @__asan_store4_noabort(i32 %333)
  store ptr %user.0212.i, ptr %user.i.i557, align 4
  %refcount.i560 = getelementptr inbounds %struct.ipmi_user, ptr %user.0212.i, i32 0, i32 3
  %call.i.i.i.i.i.i.i561 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i560, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %refcount.i560, i32 1, i32 3, i32 1) #22
  %334 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i560, ptr %refcount.i560, i32 1, ptr elementtype(i32) %refcount.i560) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i.i562 = extractvalue { i32, i32, i32 } %334, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i562)
  %tobool1.not.i.i.i.i.i563 = icmp eq i32 %asmresult.i.i.i.i.i.i.i562, 0
  br i1 %tobool1.not.i.i.i.i.i563, label %if.end59.i.if.end15.sink.split.i.i.i.i.i568_crit_edge, label %if.else.i.i.i.i.i566, !prof !501

if.end59.i.if.end15.sink.split.i.i.i.i.i568_crit_edge: ; preds = %if.end59.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i.i568

if.else.i.i.i.i.i566:                             ; preds = %if.end59.i
  %add.i.i.i.i.i564 = add i32 %asmresult.i.i.i.i.i.i.i562, 1
  %335 = or i32 %add.i.i.i.i.i564, %asmresult.i.i.i.i.i.i.i562
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %335)
  %.not.i.i.i.i.i565 = icmp sgt i32 %335, -1
  br i1 %.not.i.i.i.i.i565, label %if.else.i.i.i.i.i566.kref_get.exit.i_crit_edge, label %if.else.i.i.i.i.i566.if.end15.sink.split.i.i.i.i.i568_crit_edge, !prof !498

if.else.i.i.i.i.i566.if.end15.sink.split.i.i.i.i.i568_crit_edge: ; preds = %if.else.i.i.i.i.i566
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i.i568

if.else.i.i.i.i.i566.kref_get.exit.i_crit_edge:   ; preds = %if.else.i.i.i.i.i566
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_get.exit.i

if.end15.sink.split.i.i.i.i.i568:                 ; preds = %if.else.i.i.i.i.i566.if.end15.sink.split.i.i.i.i.i568_crit_edge, %if.end59.i.if.end15.sink.split.i.i.i.i.i568_crit_edge
  %.sink.i.i.i.i.i567 = phi i32 [ 2, %if.end59.i.if.end15.sink.split.i.i.i.i.i568_crit_edge ], [ 1, %if.else.i.i.i.i.i566.if.end15.sink.split.i.i.i.i.i568_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i560, i32 noundef %.sink.i.i.i.i.i567) #22
  br label %kref_get.exit.i

kref_get.exit.i:                                  ; preds = %if.end15.sink.split.i.i.i.i.i568, %if.else.i.i.i.i.i566.kref_get.exit.i_crit_edge
  %336 = ptrtoint ptr %276 to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load ptr, ptr %276, align 4
  %call.i.i180.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i544, ptr noundef %337, ptr noundef nonnull %msgs.i) #22
  br i1 %call.i.i180.i, label %if.end.i.i181.i, label %kref_get.exit.i.for.inc62.i_crit_edge

kref_get.exit.i.for.inc62.i_crit_edge:            ; preds = %kref_get.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62.i

if.end.i.i181.i:                                  ; preds = %kref_get.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %338 = ptrtoint ptr %276 to i32
  call void @__asan_store4_noabort(i32 %338)
  store ptr %call7.i.i.i544, ptr %276, align 4
  %339 = ptrtoint ptr %call7.i.i.i544 to i32
  call void @__asan_store4_noabort(i32 %339)
  store ptr %msgs.i, ptr %call7.i.i.i544, align 8
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i.i544, i32 0, i32 1
  %340 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %340)
  store ptr %337, ptr %prev3.i.i.i, align 4
  %341 = ptrtoint ptr %337 to i32
  call void @__asan_store4_noabort(i32 %341)
  store volatile ptr %call7.i.i.i544, ptr %337, align 4
  br label %for.inc62.i

for.inc62.i:                                      ; preds = %if.end.i.i181.i, %kref_get.exit.i.for.inc62.i_crit_edge, %for.body.i.for.inc62.i_crit_edge
  %deliver_count.1.i = phi i32 [ %deliver_count.0211.i, %for.body.i.for.inc62.i_crit_edge ], [ %inc.i, %kref_get.exit.i.for.inc62.i_crit_edge ], [ %inc.i, %if.end.i.i181.i ]
  %342 = ptrtoint ptr %user.0212.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %user.0.i569 = load volatile ptr, ptr %user.0212.i, align 4
  %cmp31.not.i = icmp eq ptr %user.0.i569, %users.i
  br i1 %cmp31.not.i, label %for.inc62.i.for.end72.i_crit_edge, label %for.inc62.i.for.body.i_crit_edge

for.inc62.i.for.body.i_crit_edge:                 ; preds = %for.inc62.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.inc62.i.for.end72.i_crit_edge:                ; preds = %for.inc62.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end72.i

for.end72.i:                                      ; preds = %for.inc62.i.for.end72.i_crit_edge, %do.end24.i.for.end72.i_crit_edge
  %deliver_count.0.lcssa.i = phi i32 [ 0, %do.end24.i.for.end72.i_crit_edge ], [ %deliver_count.1.i, %for.inc62.i.for.end72.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i.i541)
  %tobool.not.i182.i570 = icmp ult i32 %call.i.i541, 2
  br i1 %tobool.not.i182.i570, label %for.end72.i.srcu_read_unlock.exit.i_crit_edge, label %land.rhs.i.i

for.end72.i.srcu_read_unlock.exit.i_crit_edge:    ; preds = %for.end72.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit.i

land.rhs.i.i:                                     ; preds = %for.end72.i
  %.b40.i.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs.i.i.srcu_read_unlock.exit.i_crit_edge, label %if.then.i183.i, !prof !498

land.rhs.i.i.srcu_read_unlock.exit.i_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit.i

if.then.i183.i:                                   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %srcu_read_unlock.exit.i

srcu_read_unlock.exit.i:                          ; preds = %if.then.i183.i, %land.rhs.i.i.srcu_read_unlock.exit.i_crit_edge, %for.end72.i.srcu_read_unlock.exit.i_crit_edge
  call fastcc void @rcu_lock_release(ptr noundef %dep_map.i.i542) #22
  call void @__srcu_read_unlock(ptr noundef %users_srcu.i, i32 noundef %call.i.i541) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %deliver_count.0.lcssa.i)
  %tobool74.not.i = icmp eq i32 %deliver_count.0.lcssa.i, 0
  br i1 %tobool74.not.i, label %if.else.i575, label %if.then75.i

if.then75.i:                                      ; preds = %srcu_read_unlock.exit.i
  %343 = ptrtoint ptr %msgs.i to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load ptr, ptr %msgs.i, align 4
  %cmp87.not215.i = icmp eq ptr %344, %msgs.i
  br i1 %cmp87.not215.i, label %if.then75.i.out.i_crit_edge, label %for.body90.lr.ph.i

if.then75.i.out.i_crit_edge:                      ; preds = %if.then75.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

for.body90.lr.ph.i:                               ; preds = %if.then75.i
  %arrayidx.i.i571 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 3
  %arrayidx2.i.i572 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 2
  br label %for.body90.i

for.body90.i:                                     ; preds = %deliver_local_response.exit.i.for.body90.i_crit_edge, %for.body90.lr.ph.i
  %recv_msg.1216.i = phi ptr [ %344, %for.body90.lr.ph.i ], [ %recv_msg2.1.i, %deliver_local_response.exit.i.for.body90.i_crit_edge ]
  %345 = ptrtoint ptr %recv_msg.1216.i to i32
  call void @__asan_load4_noabort(i32 %345)
  %recv_msg2.1.i = load ptr, ptr %recv_msg.1216.i, align 4
  %call.i.i185.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %recv_msg.1216.i) #22
  br i1 %call.i.i185.i, label %if.end.i.i188.i, label %for.body90.i.list_del.exit190.i_crit_edge

for.body90.i.list_del.exit190.i_crit_edge:        ; preds = %for.body90.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit190.i

if.end.i.i188.i:                                  ; preds = %for.body90.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i186.i = getelementptr inbounds %struct.list_head, ptr %recv_msg.1216.i, i32 0, i32 1
  %346 = ptrtoint ptr %prev.i.i186.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load ptr, ptr %prev.i.i186.i, align 4
  %348 = ptrtoint ptr %recv_msg.1216.i to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load ptr, ptr %recv_msg.1216.i, align 4
  %prev1.i.i.i187.i = getelementptr inbounds %struct.list_head, ptr %349, i32 0, i32 1
  %350 = ptrtoint ptr %prev1.i.i.i187.i to i32
  call void @__asan_store4_noabort(i32 %350)
  store ptr %347, ptr %prev1.i.i.i187.i, align 4
  %351 = ptrtoint ptr %347 to i32
  call void @__asan_store4_noabort(i32 %351)
  store volatile ptr %349, ptr %347, align 4
  br label %list_del.exit190.i

list_del.exit190.i:                               ; preds = %if.end.i.i188.i, %for.body90.i.list_del.exit190.i_crit_edge
  %352 = ptrtoint ptr %recv_msg.1216.i to i32
  call void @__asan_store4_noabort(i32 %352)
  store ptr inttoptr (i32 256 to ptr), ptr %recv_msg.1216.i, align 4
  %prev.i189.i = getelementptr inbounds %struct.list_head, ptr %recv_msg.1216.i, i32 0, i32 1
  %353 = ptrtoint ptr %prev.i189.i to i32
  call void @__asan_store4_noabort(i32 %353)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i189.i, align 4
  %call.i191.i = call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef %recv_msg.1216.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i191.i)
  %tobool.not.i192.i = icmp eq i32 %call.i191.i, 0
  br i1 %tobool.not.i192.i, label %if.else.i.i574, label %if.then.i194.i

if.then.i194.i:                                   ; preds = %list_del.exit190.i
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i.i193.i = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.i571, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %arrayidx.i.i571, i32 1, i32 3, i32 1) #22
  %354 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.i571, ptr %arrayidx.i.i571, i32 1, ptr elementtype(i32) %arrayidx.i.i571) #22, !srcloc !514
  br label %deliver_local_response.exit.i

if.else.i.i574:                                   ; preds = %list_del.exit190.i
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i5.i.i573 = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx2.i.i572, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %arrayidx2.i.i572, i32 1, i32 3, i32 1) #22
  %355 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx2.i.i572, ptr %arrayidx2.i.i572, i32 1, ptr elementtype(i32) %arrayidx2.i.i572) #22, !srcloc !514
  br label %deliver_local_response.exit.i

deliver_local_response.exit.i:                    ; preds = %if.else.i.i574, %if.then.i194.i
  %cmp87.not.i = icmp eq ptr %recv_msg2.1.i, %msgs.i
  br i1 %cmp87.not.i, label %deliver_local_response.exit.i.out.i_crit_edge, label %deliver_local_response.exit.i.for.body90.i_crit_edge

deliver_local_response.exit.i.for.body90.i_crit_edge: ; preds = %deliver_local_response.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body90.i

deliver_local_response.exit.i.out.i_crit_edge:    ; preds = %deliver_local_response.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

if.else.i575:                                     ; preds = %srcu_read_unlock.exit.i
  %waiting_events_count.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 34
  %356 = ptrtoint ptr %waiting_events_count.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %waiting_events_count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 25, i32 %357)
  %cmp99.i = icmp ult i32 %357, 25
  br i1 %cmp99.i, label %if.then101.i, label %if.else109.i

if.then101.i:                                     ; preds = %if.else.i575
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %358 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i195.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %358, i32 noundef 2592, i32 noundef 348) #27
  %tobool.not.i196.i = icmp eq ptr %call7.i.i195.i, null
  br i1 %tobool.not.i196.i, label %if.then101.i.out.i_crit_edge, label %if.end105.i

if.then101.i.out.i_crit_edge:                     ; preds = %if.then101.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

if.end105.i:                                      ; preds = %if.then101.i
  %user.i197.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i195.i, i32 0, i32 2
  %359 = ptrtoint ptr %user.i197.i to i32
  call void @__asan_store4_noabort(i32 %359)
  store ptr null, ptr %user.i197.i, align 4
  %done.i198.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i195.i, i32 0, i32 7
  %360 = ptrtoint ptr %done.i198.i to i32
  call void @__asan_store4_noabort(i32 %360)
  store ptr @free_recv_msg, ptr %done.i198.i, align 8
  %call.i.i.i199.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @recv_msg_inuse_count, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr nonnull @recv_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %361 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @recv_msg_inuse_count, ptr nonnull @recv_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @recv_msg_inuse_count) #22, !srcloc !514
  call fastcc void @copy_event_into_recv_msg(ptr noundef nonnull %call7.i.i195.i, ptr noundef %msg) #22
  %waiting_events.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 33
  %prev.i202.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 33, i32 1
  %362 = ptrtoint ptr %prev.i202.i to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load ptr, ptr %prev.i202.i, align 4
  %call.i.i203.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i195.i, ptr noundef %363, ptr noundef %waiting_events.i) #22
  br i1 %call.i.i203.i, label %if.end.i.i205.i, label %if.end105.i.list_add_tail.exit206.i_crit_edge

if.end105.i.list_add_tail.exit206.i_crit_edge:    ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit206.i

if.end.i.i205.i:                                  ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #24
  %364 = ptrtoint ptr %prev.i202.i to i32
  call void @__asan_store4_noabort(i32 %364)
  store ptr %call7.i.i195.i, ptr %prev.i202.i, align 4
  %365 = ptrtoint ptr %call7.i.i195.i to i32
  call void @__asan_store4_noabort(i32 %365)
  store ptr %waiting_events.i, ptr %call7.i.i195.i, align 8
  %prev3.i.i204.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i195.i, i32 0, i32 1
  %366 = ptrtoint ptr %prev3.i.i204.i to i32
  call void @__asan_store4_noabort(i32 %366)
  store ptr %363, ptr %prev3.i.i204.i, align 4
  %367 = ptrtoint ptr %363 to i32
  call void @__asan_store4_noabort(i32 %367)
  store volatile ptr %call7.i.i195.i, ptr %363, align 4
  br label %list_add_tail.exit206.i

list_add_tail.exit206.i:                          ; preds = %if.end.i.i205.i, %if.end105.i.list_add_tail.exit206.i_crit_edge
  %368 = ptrtoint ptr %waiting_events_count.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load i32, ptr %waiting_events_count.i, align 8
  %inc108.i = add i32 %369, 1
  store i32 %inc108.i, ptr %waiting_events_count.i, align 8
  br label %out.i

if.else109.i:                                     ; preds = %if.else.i575
  %event_msg_printed.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 36
  %370 = ptrtoint ptr %event_msg_printed.i to i32
  call void @__asan_load1_noabort(i32 %370)
  %371 = load i8, ptr %event_msg_printed.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %371)
  %tobool110.not.i = icmp eq i8 %371, 0
  br i1 %tobool110.not.i, label %do.end114.i, label %if.else109.i.out.i_crit_edge

if.else109.i.out.i_crit_edge:                     ; preds = %if.else109.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

do.end114.i:                                      ; preds = %if.else109.i
  call void @__sanitizer_cov_trace_pc() #24
  %si_dev.i576 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %372 = ptrtoint ptr %si_dev.i576 to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %si_dev.i576, align 4
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %373, ptr noundef nonnull @.str.78, ptr noundef nonnull @.str.8) #25
  %374 = ptrtoint ptr %event_msg_printed.i to i32
  call void @__asan_store1_noabort(i32 %374)
  store i8 1, ptr %event_msg_printed.i, align 1
  br label %out.i

out.i:                                            ; preds = %do.end114.i, %if.else109.i.out.i_crit_edge, %list_add_tail.exit206.i, %if.then101.i.out.i_crit_edge, %deliver_local_response.exit.i.out.i_crit_edge, %if.then75.i.out.i_crit_edge, %ipmi_free_recv_msg.exit.i.out.i_crit_edge, %rcu_read_unlock.exit.i553.out.i_crit_edge
  %rv.0.i577 = phi i32 [ 0, %list_add_tail.exit206.i ], [ 0, %if.else109.i.out.i_crit_edge ], [ 0, %do.end114.i ], [ 1, %if.then101.i.out.i_crit_edge ], [ 0, %if.then75.i.out.i_crit_edge ], [ 1, %rcu_read_unlock.exit.i553.out.i_crit_edge ], [ 0, %deliver_local_response.exit.i.out.i_crit_edge ], [ 1, %ipmi_free_recv_msg.exit.i.out.i_crit_edge ]
  call void @_raw_spin_unlock_irqrestore(ptr noundef %events_lock.i, i32 noundef %call9.i) #22
  br label %handle_read_event_rsp.exit

handle_read_event_rsp.exit:                       ; preds = %out.i, %if.end.i539.handle_read_event_rsp.exit_crit_edge, %if.then.i538
  %retval.0.i578 = phi i32 [ 0, %if.then.i538 ], [ %rv.0.i577, %out.i ], [ 0, %if.end.i539.handle_read_event_rsp.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %msgs.i) #22
  br label %cleanup384

if.else378:                                       ; preds = %land.lhs.true370.if.else378_crit_edge, %if.else256.if.else378_crit_edge
  %user_data.i579 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 3
  %375 = ptrtoint ptr %user_data.i579 to i32
  call void @__asan_load4_noabort(i32 %375)
  %376 = load ptr, ptr %user_data.i579, align 4
  %cmp.i580 = icmp eq ptr %376, null
  br i1 %cmp.i580, label %do.end.i582, label %if.end.i598

do.end.i582:                                      ; preds = %if.else378
  call void @__sanitizer_cov_trace_pc() #24
  %si_dev.i581 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %377 = ptrtoint ptr %si_dev.i581 to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load ptr, ptr %si_dev.i581, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %378, ptr noundef nonnull @.str.73, ptr noundef nonnull @.str.8) #25
  br label %cleanup384

if.end.i598:                                      ; preds = %if.else378
  %recv_type.i583 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 1
  %379 = ptrtoint ptr %recv_type.i583 to i32
  call void @__asan_store4_noabort(i32 %379)
  store i32 1, ptr %recv_type.i583, align 4
  %msgid.i584 = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 2
  %380 = ptrtoint ptr %msgid.i584 to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load i32, ptr %msgid.i584, align 4
  %msgid1.i585 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 4
  %382 = ptrtoint ptr %msgid1.i585 to i32
  call void @__asan_store4_noabort(i32 %382)
  store i32 %381, ptr %msgid1.i585, align 4
  %addr.i586 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 3
  %383 = ptrtoint ptr %addr.i586 to i32
  call void @__asan_store4_noabort(i32 %383)
  store i32 12, ptr %addr.i586, align 4
  %channel.i587 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 3, i32 1
  %384 = ptrtoint ptr %channel.i587 to i32
  call void @__asan_store2_noabort(i32 %384)
  store i16 15, ptr %channel.i587, align 4
  %385 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %385)
  %386 = load i8, ptr %rsp, align 4
  %387 = and i8 %386, 3
  %lun.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 3, i32 2
  %388 = ptrtoint ptr %lun.i to i32
  call void @__asan_store1_noabort(i32 %388)
  store i8 %387, ptr %lun.i, align 2
  %389 = load i8, ptr %rsp, align 4
  %390 = lshr i8 %389, 2
  %msg7.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 5
  %391 = ptrtoint ptr %msg7.i to i32
  call void @__asan_store1_noabort(i32 %391)
  store i8 %390, ptr %msg7.i, align 4
  %arrayidx9.i = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %392 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load1_noabort(i32 %392)
  %393 = load i8, ptr %arrayidx9.i, align 1
  %cmd.i589 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 5, i32 1
  %394 = ptrtoint ptr %cmd.i589 to i32
  call void @__asan_store1_noabort(i32 %394)
  store i8 %393, ptr %cmd.i589, align 1
  %msg_data.i590 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 8
  %arrayidx12.i591 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %395 = ptrtoint ptr %rsp_size7 to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load i32, ptr %rsp_size7, align 4
  %sub.i593 = add i32 %396, -2
  %397 = call ptr @memcpy(ptr %msg_data.i590, ptr %arrayidx12.i591, i32 %sub.i593)
  %data.i594 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 5, i32 3
  %398 = ptrtoint ptr %data.i594 to i32
  call void @__asan_store4_noabort(i32 %398)
  store ptr %msg_data.i590, ptr %data.i594, align 4
  %399 = load i32, ptr %rsp_size7, align 4
  %400 = trunc i32 %399 to i16
  %conv18.i = add i16 %400, -2
  %data_len.i595 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %376, i32 0, i32 5, i32 2
  %401 = ptrtoint ptr %data_len.i595 to i32
  call void @__asan_store2_noabort(i32 %401)
  store i16 %conv18.i, ptr %data_len.i595, align 2
  %call.i.i596 = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef nonnull %376) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i596)
  %tobool.not.i.i597 = icmp eq i32 %call.i.i596, 0
  br i1 %tobool.not.i.i597, label %if.else.i.i604, label %if.then.i.i601

if.then.i.i601:                                   ; preds = %if.end.i598
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx.i.i599 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 3
  %call.i.i.i.i600 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.i599, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.i599, i32 1, i32 3, i32 1) #22
  %402 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.i599, ptr %arrayidx.i.i599, i32 1, ptr elementtype(i32) %arrayidx.i.i599) #22, !srcloc !514
  br label %cleanup384

if.else.i.i604:                                   ; preds = %if.end.i598
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx2.i.i602 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 2
  %call.i.i5.i.i603 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx2.i.i602, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx2.i.i602, i32 1, i32 3, i32 1) #22
  %403 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx2.i.i602, ptr %arrayidx2.i.i602, i32 1, ptr elementtype(i32) %arrayidx2.i.i602) #22, !srcloc !514
  br label %cleanup384

cleanup384:                                       ; preds = %if.else.i.i604, %if.then.i.i601, %do.end.i582, %handle_read_event_rsp.exit, %if.then360, %sw.default.cleanup384_crit_edge, %if.else346, %if.then344, %if.else335, %if.then333, %if.then305.cleanup384_crit_edge, %if.else.i, %if.then.i532, %process_response_response.cleanup384_crit_edge, %if.else.i.i, %if.then.i.i528, %do.end.i, %if.else95.i, %if.then92.i, %if.then.i200.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.cleanup384_crit_edge, %rcu_read_unlock.exit194.i, %if.then120.cleanup384_crit_edge, %if.then42
  %retval.0 = phi i32 [ 0, %process_response_response.cleanup384_crit_edge ], [ %retval.0.i578, %handle_read_event_rsp.exit ], [ 0, %if.then42 ], [ 0, %if.then120.cleanup384_crit_edge ], [ 0, %if.then305.cleanup384_crit_edge ], [ %call361, %if.then360 ], [ 0, %if.then344 ], [ %call347, %if.else346 ], [ 0, %if.then333 ], [ %call336, %if.else335 ], [ 0, %sw.default.cleanup384_crit_edge ], [ %rv.0.i, %rcu_read_unlock.exit194.i ], [ 0, %if.then92.i ], [ 0, %if.else95.i ], [ 1, %if.end5.i.i.i.i.i.cleanup384_crit_edge ], [ 1, %if.then10.i.i.i.i.i ], [ 1, %if.then.i200.i ], [ 0, %do.end.i ], [ 0, %if.then.i.i528 ], [ 0, %if.else.i.i ], [ 0, %if.then.i532 ], [ 0, %if.else.i ], [ 0, %do.end.i582 ], [ 0, %if.then.i.i601 ], [ 0, %if.else.i.i604 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @intf_err_seq(ptr noundef %intf, i32 noundef %msgid, i32 noundef %err) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = lshr i32 %msgid, 26
  %seq_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 19
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %seq_lock) #22
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %0
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %1)
  %bf.load = load i8, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %entry.if.end.thread_crit_edge, label %land.lhs.true

entry.if.end.thread_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.thread

land.lhs.true:                                    ; preds = %entry
  %and1 = and i32 %msgid, 67108863
  %seqid13 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %0, i32 4
  %2 = ptrtoint ptr %seqid13 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %seqid13, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %and1)
  %cmp14 = icmp eq i32 %3, %and1
  br i1 %cmp14, label %if.then, label %land.lhs.true.if.end.thread_crit_edge

land.lhs.true.if.end.thread_crit_edge:            ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.thread

if.then:                                          ; preds = %land.lhs.true
  %bf.clear = and i8 %bf.load, 127
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %bf.clear, ptr %arrayidx, align 4
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %5 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %handlers.i, align 4
  %set_need_watch.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %6, i32 0, i32 7
  %7 = ptrtoint ptr %set_need_watch.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %set_need_watch.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.then.if.end_crit_edge, label %do.body1.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.body1.i:                                       ; preds = %if.then
  %watch_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 39
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %watch_lock.i) #22
  %response_waiters.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 42
  %9 = ptrtoint ptr %response_waiters.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %response_waiters.i, align 4
  %dec.i = add i32 %10, -1
  store i32 %dec.i, ptr %response_waiters.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool19.not.i = icmp ne i32 %dec.i, 0
  %spec.select.i = zext i1 %tobool19.not.i to i32
  %watchdog_waiters22.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 41
  %11 = ptrtoint ptr %watchdog_waiters22.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %watchdog_waiters22.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool23.not.i = icmp eq i32 %12, 0
  %or25.i = or i32 %spec.select.i, 2
  %flags.addr.1.i = select i1 %tobool23.not.i, i32 %spec.select.i, i32 %or25.i
  %command_waiters27.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 40
  %13 = ptrtoint ptr %command_waiters27.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %command_waiters27.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool28.not.i = icmp eq i32 %14, 0
  %or30.i = or i32 %flags.addr.1.i, 4
  %flags.addr.2.i = select i1 %tobool28.not.i, i32 %flags.addr.1.i, i32 %or30.i
  %last_watch_mask.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 43
  %15 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %last_watch_mask.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %flags.addr.2.i)
  %cmp32.not.i = icmp eq i32 %16, %flags.addr.2.i
  br i1 %cmp32.not.i, label %do.body1.i.if.end39.i_crit_edge, label %if.then34.i

do.body1.i.if.end39.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39.i

if.then34.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  %17 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %flags.addr.2.i, ptr %last_watch_mask.i, align 8
  %18 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %handlers.i, align 4
  %set_need_watch37.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %19, i32 0, i32 7
  %20 = ptrtoint ptr %set_need_watch37.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %set_need_watch37.i, align 4
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %22 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %send_info.i, align 8
  tail call void %21(ptr noundef %23, i32 noundef %flags.addr.2.i) #22
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then34.i, %do.body1.i.if.end39.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %watch_lock.i, i32 noundef %call2.i) #22
  br label %if.end

if.end.thread:                                    ; preds = %land.lhs.true.if.end.thread_crit_edge, %entry.if.end.thread_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock, i32 noundef %call5) #22
  br label %if.end23

if.end:                                           ; preds = %if.end39.i, %if.then.if.end_crit_edge
  %recv_msg = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %0, i32 5
  %24 = ptrtoint ptr %recv_msg to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %recv_msg, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock, i32 noundef %call5) #22
  %tobool21.not = icmp eq ptr %25, null
  br i1 %tobool21.not, label %if.end.if.end23_crit_edge, label %if.then22

if.end.if.end23_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end23

if.then22:                                        ; preds = %if.end
  %recv_type.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %recv_type.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 1, ptr %recv_type.i, align 4
  %conv.i = trunc i32 %err to i8
  %msg_data.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %25, i32 0, i32 8
  %27 = ptrtoint ptr %msg_data.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %conv.i, ptr %msg_data.i, align 4
  %msg1.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %25, i32 0, i32 5
  %28 = ptrtoint ptr %msg1.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %msg1.i, align 4
  %30 = or i8 %29, 1
  store i8 %30, ptr %msg1.i, align 4
  %data_len.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %25, i32 0, i32 5, i32 2
  %31 = ptrtoint ptr %data_len.i to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 1, ptr %data_len.i, align 2
  %data.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %25, i32 0, i32 5, i32 3
  %32 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %msg_data.i, ptr %data.i, align 4
  %call.i.i = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef nonnull %25) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx.i.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.i, i32 1, i32 3, i32 1) #22
  %33 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.i, ptr %arrayidx.i.i, i32 1, ptr elementtype(i32) %arrayidx.i.i) #22, !srcloc !514
  br label %if.end23

if.else.i.i:                                      ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx2.i.i = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 2
  %call.i.i5.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx2.i.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx2.i.i, i32 1, i32 3, i32 1) #22
  %34 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx2.i.i, ptr %arrayidx2.i.i, i32 1, ptr elementtype(i32) %arrayidx2.i.i) #22, !srcloc !514
  br label %if.end23

if.end23:                                         ; preds = %if.else.i.i, %if.then.i.i, %if.end.if.end23_crit_edge, %if.end.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @intf_start_seq_timer(ptr noundef %intf, i32 noundef %msgid) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = lshr i32 %msgid, 26
  %seq_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 19
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %seq_lock) #22
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %0
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %1)
  %bf.load = load i8, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %and1 = and i32 %msgid, 67108863
  %seqid13 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %0, i32 4
  %2 = ptrtoint ptr %seqid13 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %seqid13, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %and1)
  %cmp14 = icmp eq i32 %3, %and1
  br i1 %cmp14, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  %orig_timeout = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %0, i32 2
  %4 = ptrtoint ptr %orig_timeout to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %orig_timeout, align 4
  %timeout = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %0, i32 1
  %6 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %timeout, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock, i32 noundef %call5) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @handle_ipmb_get_msg_rsp(ptr noundef %intf, ptr nocapture noundef readonly %msg) unnamed_addr #1 align 64 {
entry:
  %ipmb_addr = alloca %struct.ipmi_ipmb_addr, align 4
  %recv_msg = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ipmb_addr) #22
  %0 = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %ipmb_addr, i32 0, i32 1
  %1 = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %ipmb_addr, i32 0, i32 2
  %2 = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %ipmb_addr, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %recv_msg) #22
  %3 = ptrtoint ptr %recv_msg to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %recv_msg, align 4, !annotation !506
  %rsp_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 6
  %4 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rsp_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %5)
  %cmp = icmp slt i32 %5, 11
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 11
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx, i32 1, i32 3, i32 1) #22
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx, ptr %arrayidx, i32 1, ptr elementtype(i32) %arrayidx) #22, !srcloc !514
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx1 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %7 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx1, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %cmp2.not = icmp eq i8 %8, 0
  br i1 %cmp2.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %9 = ptrtoint ptr %ipmb_addr to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %ipmb_addr, align 4
  %arrayidx7 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 6
  %10 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx7, align 2
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %1, align 2
  %arrayidx9 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %13 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx9, align 1
  %15 = and i8 %14, 15
  %conv11 = zext i8 %15 to i16
  %16 = ptrtoint ptr %0 to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %conv11, ptr %0, align 4
  %arrayidx13 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 7
  %17 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx13, align 1
  %19 = and i8 %18, 3
  %20 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %2, align 1
  %21 = lshr i8 %18, 2
  %arrayidx27 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 8
  %22 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx27, align 4
  %arrayidx29 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  %24 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx29, align 4
  %26 = lshr i8 %25, 2
  %27 = and i8 %26, 62
  %call = call fastcc i32 @intf_find_seq(ptr noundef %intf, i8 noundef zeroext %21, i16 noundef signext %conv11, i8 noundef zeroext %23, i8 noundef zeroext %27, ptr noundef nonnull %ipmb_addr, ptr noundef nonnull %recv_msg)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end37, label %if.then34

if.then34:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx36 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 12
  %call.i.i1 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx36, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx36, i32 1, i32 3, i32 1) #22
  %28 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx36, ptr %arrayidx36, i32 1, ptr elementtype(i32) %arrayidx36) #22, !srcloc !514
  br label %cleanup

if.end37:                                         ; preds = %if.end5
  %29 = ptrtoint ptr %recv_msg to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %recv_msg, align 4
  %msg_data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %30, i32 0, i32 8
  %arrayidx39 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 9
  %31 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rsp_size, align 4
  %sub = add i32 %32, -9
  %33 = call ptr @memcpy(ptr %msg_data, ptr %arrayidx39, i32 %sub)
  %34 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %arrayidx29, align 4
  %36 = lshr i8 %35, 2
  %msg46 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %30, i32 0, i32 5
  %37 = ptrtoint ptr %msg46 to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %36, ptr %msg46, align 4
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %30, i32 0, i32 5, i32 3
  %38 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %msg_data, ptr %data, align 4
  %39 = load i32, ptr %rsp_size, align 4
  %40 = trunc i32 %39 to i16
  %conv52 = add i16 %40, -10
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %30, i32 0, i32 5, i32 2
  %41 = ptrtoint ptr %data_len to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %conv52, ptr %data_len, align 2
  %recv_type = getelementptr inbounds %struct.ipmi_recv_msg, ptr %30, i32 0, i32 1
  %42 = ptrtoint ptr %recv_type to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 1, ptr %recv_type, align 4
  %call54 = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef %30)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %if.else, label %if.then56

if.then56:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx58 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 12
  %call.i.i2 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx58, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx58, i32 1, i32 3, i32 1) #22
  %43 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx58, ptr %arrayidx58, i32 1, ptr elementtype(i32) %arrayidx58) #22, !srcloc !514
  br label %cleanup

if.else:                                          ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx60 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 10
  %call.i.i3 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx60, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx60, i32 1, i32 3, i32 1) #22
  %44 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx60, ptr %arrayidx60, i32 1, ptr elementtype(i32) %arrayidx60) #22, !srcloc !514
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then56, %if.then34, %if.end.cleanup_crit_edge, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %recv_msg) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ipmb_addr) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @handle_ipmb_get_msg_cmd(ptr noundef %intf, ptr noundef %msg) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %rsp_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 6
  %0 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rsp_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %1)
  %cmp = icmp slt i32 %1, 10
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 22
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx, i32 1, i32 3, i32 1) #22
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx, ptr %arrayidx, i32 1, ptr elementtype(i32) %arrayidx) #22, !srcloc !514
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx1 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %3 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx1, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %cmp2.not = icmp eq i8 %4, 0
  br i1 %cmp2.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %arrayidx7 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  %5 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx7, align 4
  %7 = lshr i8 %6, 2
  %arrayidx11 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 8
  %8 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx11, align 4
  %arrayidx13 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %10 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx13, align 1
  %12 = and i8 %11, 15
  %13 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %16, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !515
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %if.end5.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end5.rcu_read_lock.exit_crit_edge:             ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end5
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 696, ptr noundef nonnull @.str.64) #22
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end5.rcu_read_lock.exit_crit_edge
  %call = tail call fastcc ptr @find_cmd_rcvr(ptr noundef %intf, i8 noundef zeroext %7, i8 noundef zeroext %9, i8 noundef zeroext %12)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %rcu_read_lock.exit.if.end18_crit_edge, label %if.then16

rcu_read_lock.exit.if.end18_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18

if.then16:                                        ; preds = %rcu_read_lock.exit
  %user17 = getelementptr inbounds %struct.cmd_rcvr, ptr %call, i32 0, i32 1
  %17 = ptrtoint ptr %user17 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %user17, align 4
  %refcount = getelementptr inbounds %struct.ipmi_user, ptr %18, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %19 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then16.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !501

if.then16.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then16
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %20 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %20)
  %.not.i.i.i.i = icmp sgt i32 %20, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.if.end18_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !498

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.if.end18_crit_edge:               ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then16.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then16.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef %.sink.i.i.i.i) #22
  br label %if.end18

if.end18:                                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.if.end18_crit_edge, %rcu_read_lock.exit.if.end18_crit_edge
  %user.0 = phi ptr [ null, %rcu_read_lock.exit.if.end18_crit_edge ], [ %18, %if.else.i.i.i.i.if.end18_crit_edge ], [ %18, %if.end15.sink.split.i.i.i.i ]
  %call.i234 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i234, label %if.end18.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i237

if.end18.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true.i237:                               ; preds = %if.end18
  %call1.i235 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i235)
  %tobool.not.i236 = icmp eq i32 %call1.i235, 0
  br i1 %tobool.not.i236, label %land.lhs.true.i237.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i239

land.lhs.true.i237.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i237
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true2.i239:                              ; preds = %land.lhs.true.i237
  %.b4.i238 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i238, label %land.lhs.true2.i239.rcu_read_unlock.exit_crit_edge, label %if.then.i240

land.lhs.true2.i239.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i239
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

if.then.i240:                                     ; preds = %land.lhs.true2.i239
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 724, ptr noundef nonnull @.str.65) #22
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i240, %land.lhs.true2.i239.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i237.rcu_read_unlock.exit_crit_edge, %if.end18.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !517
  %21 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i241 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i.i.i241 to ptr
  %preempt_count.i.i.i.i242 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i.i.i242 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i.i.i242, align 4
  %sub.i.i.i = add i32 %24, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i242, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  %cmp19 = icmp eq ptr %user.0, null
  br i1 %cmp19, label %if.then21, label %if.else89

if.then21:                                        ; preds = %rcu_read_unlock.exit
  %arrayidx23 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 23
  %call.i.i220 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx23, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx23, i32 1, i32 3, i32 1) #22
  %25 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx23, ptr %arrayidx23, i32 1, ptr elementtype(i32) %arrayidx23) #22, !srcloc !514
  %data = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5
  %26 = ptrtoint ptr %data to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 24, ptr %data, align 4
  %arrayidx26 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 1
  %27 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 52, ptr %arrayidx26, align 1
  %28 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx13, align 1
  %arrayidx30 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 2
  %30 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %arrayidx30, align 2
  %arrayidx32 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 6
  %31 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx32, align 2
  %arrayidx34 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 3
  %33 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %32, ptr %arrayidx34, align 1
  %34 = add i8 %6, 4
  %shl = and i8 %34, -4
  %arrayidx37 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 7
  %35 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx37, align 1
  %37 = and i8 %36, 3
  %or = or i8 %37, %shl
  %arrayidx42 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 4
  %38 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %or, ptr %arrayidx42, align 4
  %add.i.1 = add i8 %32, %or
  %conv4.i = sub i8 0, %add.i.1
  %arrayidx47 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 5
  %39 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 %conv4.i, ptr %arrayidx47, align 1
  %40 = and i8 %29, 15
  %and51 = zext i8 %40 to i32
  %arrayidx52 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 58, i32 %and51
  %41 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx52, align 2
  %arrayidx54 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 6
  %43 = ptrtoint ptr %arrayidx54 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %42, ptr %arrayidx54, align 2
  %44 = and i8 %36, -4
  %45 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %arrayidx7, align 4
  %47 = and i8 %46, 3
  %or63219 = or i8 %47, %44
  %arrayidx66 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 7
  %48 = ptrtoint ptr %arrayidx66 to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %or63219, ptr %arrayidx66, align 1
  %49 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %arrayidx11, align 4
  %arrayidx70 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 8
  %51 = ptrtoint ptr %arrayidx70 to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %50, ptr %arrayidx70, align 4
  %arrayidx72 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 9
  %52 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 -63, ptr %arrayidx72, align 1
  %add.i247.1 = add i8 %42, %or63219
  %add.i247.2 = add i8 %add.i247.1, %50
  %conv4.i254 = sub i8 63, %add.i247.2
  %arrayidx77 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 5, i32 10
  %53 = ptrtoint ptr %arrayidx77 to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %conv4.i254, ptr %arrayidx77, align 2
  %data_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 4
  %54 = ptrtoint ptr %data_size to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 11, ptr %data_size, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @handle_ipmb_get_msg_cmd.__UNIQUE_ID_ddebug272, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@handle_ipmb_get_msg_cmd, %if.then82)) #22
          to label %do.end [label %if.then82], !srcloc !516

if.then82:                                        ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #24
  %55 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %data_size, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @handle_ipmb_get_msg_cmd.__UNIQUE_ID_ddebug272, ptr noundef nonnull @.str.77, ptr noundef nonnull @.str.8, i32 noundef %56, ptr noundef %data) #22
  br label %do.end

do.end:                                           ; preds = %if.then82, %if.then21
  %57 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i221 = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i.i.i.i221 to ptr
  %preempt_count.i.i.i.i222 = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %preempt_count.i.i.i.i222 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %preempt_count.i.i.i.i222, align 4
  %add.i.i.i223 = add i32 %60, 1
  store volatile i32 %add.i.i.i223, ptr %preempt_count.i.i.i.i222, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !515
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i224 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i224, label %do.end.rcu_read_lock.exit231_crit_edge, label %land.lhs.true.i227

do.end.rcu_read_lock.exit231_crit_edge:           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit231

land.lhs.true.i227:                               ; preds = %do.end
  %call1.i225 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i225)
  %tobool.not.i226 = icmp eq i32 %call1.i225, 0
  br i1 %tobool.not.i226, label %land.lhs.true.i227.rcu_read_lock.exit231_crit_edge, label %land.lhs.true2.i229

land.lhs.true.i227.rcu_read_lock.exit231_crit_edge: ; preds = %land.lhs.true.i227
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit231

land.lhs.true2.i229:                              ; preds = %land.lhs.true.i227
  %.b4.i228 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i228, label %land.lhs.true2.i229.rcu_read_lock.exit231_crit_edge, label %if.then.i230

land.lhs.true2.i229.rcu_read_lock.exit231_crit_edge: ; preds = %land.lhs.true2.i229
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit231

if.then.i230:                                     ; preds = %land.lhs.true2.i229
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 696, ptr noundef nonnull @.str.64) #22
  br label %rcu_read_lock.exit231

rcu_read_lock.exit231:                            ; preds = %if.then.i230, %land.lhs.true2.i229.rcu_read_lock.exit231_crit_edge, %land.lhs.true.i227.rcu_read_lock.exit231_crit_edge, %do.end.rcu_read_lock.exit231_crit_edge
  %in_shutdown = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 3
  %61 = ptrtoint ptr %in_shutdown to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %in_shutdown, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %62)
  %tobool86.not = icmp eq i8 %62, 0
  br i1 %tobool86.not, label %if.then87, label %rcu_read_lock.exit231.if.end88_crit_edge

rcu_read_lock.exit231.if.end88_crit_edge:         ; preds = %rcu_read_lock.exit231
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end88

if.then87:                                        ; preds = %rcu_read_lock.exit231
  %handlers = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %63 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %handlers, align 4
  %run_to_completion1.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 61
  %65 = ptrtoint ptr %run_to_completion1.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %run_to_completion1.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool.not.i256 = icmp eq i32 %66, 0
  br i1 %tobool.not.i256, label %do.body2.i, label %if.then87.if.end.i_crit_edge

if.then87.if.end.i_crit_edge:                     ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

do.body2.i:                                       ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #24
  %xmit_msgs_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 26
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %xmit_msgs_lock.i) #22
  br label %if.end.i

if.end.i:                                         ; preds = %do.body2.i, %if.then87.if.end.i_crit_edge
  %flags.0.i = phi i32 [ 0, %if.then87.if.end.i_crit_edge ], [ %call3.i, %do.body2.i ]
  %curr_msg.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 28
  %67 = ptrtoint ptr %curr_msg.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %curr_msg.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %68, null
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i
  %xmit_msgs.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 27
  %prev.i12.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 27, i32 1
  %69 = ptrtoint ptr %prev.i12.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %prev.i12.i.i, align 4
  %call.i.i13.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %msg, ptr noundef %70, ptr noundef %xmit_msgs.i.i) #22
  br i1 %call.i.i13.i.i, label %if.end.i.i15.i.i, label %if.then.i.i.smi_add_send_msg.exit.i_crit_edge

if.then.i.i.smi_add_send_msg.exit.i_crit_edge:    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %smi_add_send_msg.exit.i

if.end.i.i15.i.i:                                 ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %71 = ptrtoint ptr %prev.i12.i.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %msg, ptr %prev.i12.i.i, align 4
  %72 = ptrtoint ptr %msg to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %xmit_msgs.i.i, ptr %msg, align 4
  %prev3.i.i14.i.i = getelementptr inbounds %struct.list_head, ptr %msg, i32 0, i32 1
  %73 = ptrtoint ptr %prev3.i.i14.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %70, ptr %prev3.i.i14.i.i, align 4
  %74 = ptrtoint ptr %70 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile ptr %msg, ptr %70, align 4
  br label %smi_add_send_msg.exit.i

if.else3.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %75 = ptrtoint ptr %curr_msg.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %msg, ptr %curr_msg.i.i, align 4
  br label %smi_add_send_msg.exit.i

smi_add_send_msg.exit.i:                          ; preds = %if.else3.i.i, %if.end.i.i15.i.i, %if.then.i.i.smi_add_send_msg.exit.i_crit_edge
  %smi_msg.addr.0.i.i = phi ptr [ %msg, %if.else3.i.i ], [ null, %if.then.i.i.smi_add_send_msg.exit.i_crit_edge ], [ null, %if.end.i.i15.i.i ]
  br i1 %tobool.not.i256, label %if.then8.i, label %smi_add_send_msg.exit.i.if.end10.i_crit_edge

smi_add_send_msg.exit.i.if.end10.i_crit_edge:     ; preds = %smi_add_send_msg.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end10.i

if.then8.i:                                       ; preds = %smi_add_send_msg.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %xmit_msgs_lock9.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %xmit_msgs_lock9.i, i32 noundef %flags.0.i) #22
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %smi_add_send_msg.exit.i.if.end10.i_crit_edge
  %tobool11.not.i = icmp eq ptr %smi_msg.addr.0.i.i, null
  br i1 %tobool11.not.i, label %if.end10.i.if.end88_crit_edge, label %if.then12.i

if.end10.i.if.end88_crit_edge:                    ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end88

if.then12.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #24
  %sender.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %64, i32 0, i32 5
  %76 = ptrtoint ptr %sender.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %sender.i, align 4
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %78 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %send_info.i, align 8
  tail call void %77(ptr noundef %79, ptr noundef nonnull %smi_msg.addr.0.i.i) #22
  br label %if.end88

if.end88:                                         ; preds = %if.then12.i, %if.end10.i.if.end88_crit_edge, %rcu_read_lock.exit231.if.end88_crit_edge
  %rv.0 = phi i32 [ 0, %rcu_read_lock.exit231.if.end88_crit_edge ], [ -1, %if.end10.i.if.end88_crit_edge ], [ -1, %if.then12.i ]
  %call.i257 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i257, label %if.end88.rcu_read_unlock.exit267_crit_edge, label %land.lhs.true.i260

if.end88.rcu_read_unlock.exit267_crit_edge:       ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit267

land.lhs.true.i260:                               ; preds = %if.end88
  %call1.i258 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i258)
  %tobool.not.i259 = icmp eq i32 %call1.i258, 0
  br i1 %tobool.not.i259, label %land.lhs.true.i260.rcu_read_unlock.exit267_crit_edge, label %land.lhs.true2.i262

land.lhs.true.i260.rcu_read_unlock.exit267_crit_edge: ; preds = %land.lhs.true.i260
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit267

land.lhs.true2.i262:                              ; preds = %land.lhs.true.i260
  %.b4.i261 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i261, label %land.lhs.true2.i262.rcu_read_unlock.exit267_crit_edge, label %if.then.i263

land.lhs.true2.i262.rcu_read_unlock.exit267_crit_edge: ; preds = %land.lhs.true2.i262
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit267

if.then.i263:                                     ; preds = %land.lhs.true2.i262
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 724, ptr noundef nonnull @.str.65) #22
  br label %rcu_read_unlock.exit267

rcu_read_unlock.exit267:                          ; preds = %if.then.i263, %land.lhs.true2.i262.rcu_read_unlock.exit267_crit_edge, %land.lhs.true.i260.rcu_read_unlock.exit267_crit_edge, %if.end88.rcu_read_unlock.exit267_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !517
  %80 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i264 = and i32 %80, -16384
  %81 = inttoptr i32 %and.i.i.i.i.i264 to ptr
  %preempt_count.i.i.i.i265 = getelementptr inbounds %struct.thread_info, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %preempt_count.i.i.i.i265 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %preempt_count.i.i.i.i265, align 4
  %sub.i.i.i266 = add i32 %83, -1
  store volatile i32 %sub.i.i.i266, ptr %preempt_count.i.i.i.i265, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  br label %cleanup

if.else89:                                        ; preds = %rcu_read_unlock.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %84 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %84, i32 noundef 2592, i32 noundef 348) #27
  %tobool.not.i268 = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not.i268, label %if.then92, label %if.else95

if.then92:                                        ; preds = %if.else89
  %refcount93 = getelementptr inbounds %struct.ipmi_user, ptr %user.0, i32 0, i32 3
  %call.i.i.i.i.i.i271 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount93, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount93, i32 1, i32 3, i32 1) #22
  %85 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount93, ptr %refcount93, i32 1, ptr elementtype(i32) %refcount93) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %85, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i273, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then92
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i272 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i272, label %if.end5.i.i.i.i.cleanup_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.cleanup_crit_edge:                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount93, i32 noundef 3) #22
  br label %cleanup

if.then.i273:                                     ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %86 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i = getelementptr %struct.ipmi_user, ptr %user.0, i32 0, i32 8
  %call.i.i274 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %86, ptr noundef %remove_work.i) #22
  br label %cleanup

if.else95:                                        ; preds = %if.else89
  %user.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 2
  %done.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 7
  %87 = ptrtoint ptr %done.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr @free_recv_msg, ptr %done.i, align 8
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @recv_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @recv_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %88 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @recv_msg_inuse_count, ptr nonnull @recv_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @recv_msg_inuse_count) #22, !srcloc !514
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3
  %89 = ptrtoint ptr %addr to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 1, ptr %addr, align 8
  %arrayidx97 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 6
  %90 = ptrtoint ptr %arrayidx97 to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %arrayidx97, align 2
  %slave_addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 2
  %92 = ptrtoint ptr %slave_addr to i32
  call void @__asan_store1_noabort(i32 %92)
  store i8 %91, ptr %slave_addr, align 2
  %arrayidx99 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 7
  %93 = ptrtoint ptr %arrayidx99 to i32
  call void @__asan_load1_noabort(i32 %93)
  %94 = load i8, ptr %arrayidx99, align 1
  %95 = and i8 %94, 3
  %lun = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 2, i32 1
  %96 = ptrtoint ptr %lun to i32
  call void @__asan_store1_noabort(i32 %96)
  store i8 %95, ptr %lun, align 1
  %97 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %97)
  %98 = load i8, ptr %arrayidx13, align 1
  %99 = and i8 %98, 15
  %conv107 = zext i8 %99 to i16
  %channel = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 1
  %100 = ptrtoint ptr %channel to i32
  call void @__asan_store2_noabort(i32 %100)
  store i16 %conv107, ptr %channel, align 4
  %101 = ptrtoint ptr %user.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %user.0, ptr %user.i, align 4
  %recv_type = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 1
  %102 = ptrtoint ptr %recv_type to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 3, ptr %recv_type, align 8
  %103 = lshr i8 %94, 2
  %104 = zext i8 %103 to i32
  %msgid = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 4
  %105 = ptrtoint ptr %msgid to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %104, ptr %msgid, align 8
  %106 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %106)
  %107 = load i8, ptr %arrayidx7, align 4
  %108 = lshr i8 %107, 2
  %msg118 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5
  %109 = ptrtoint ptr %msg118 to i32
  call void @__asan_store1_noabort(i32 %109)
  store i8 %108, ptr %msg118, align 4
  %110 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %arrayidx11, align 4
  %cmd123 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5, i32 1
  %112 = ptrtoint ptr %cmd123 to i32
  call void @__asan_store1_noabort(i32 %112)
  store i8 %111, ptr %cmd123, align 1
  %msg_data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 8
  %data126 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5, i32 3
  %113 = ptrtoint ptr %data126 to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %msg_data, ptr %data126, align 8
  %114 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %rsp_size, align 4
  %116 = trunc i32 %115 to i16
  %conv128 = add i16 %116, -10
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5, i32 2
  %117 = ptrtoint ptr %data_len to i32
  call void @__asan_store2_noabort(i32 %117)
  store i16 %conv128, ptr %data_len, align 2
  %arrayidx133 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 9
  %sub135 = add i32 %115, -10
  %118 = call ptr @memcpy(ptr %msg_data, ptr %arrayidx133, i32 %sub135)
  %call136 = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call136)
  %tobool137.not = icmp eq i32 %call136, 0
  br i1 %tobool137.not, label %if.else141, label %if.then138

if.then138:                                       ; preds = %if.else95
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx140 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 23
  %call.i.i232 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx140, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx140, i32 1, i32 3, i32 1) #22
  %119 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx140, ptr %arrayidx140, i32 1, ptr elementtype(i32) %arrayidx140) #22, !srcloc !514
  br label %cleanup

if.else141:                                       ; preds = %if.else95
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx143 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 21
  %call.i.i233 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx143, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx143, i32 1, i32 3, i32 1) #22
  %120 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx143, ptr %arrayidx143, i32 1, ptr elementtype(i32) %arrayidx143) #22, !srcloc !514
  br label %cleanup

cleanup:                                          ; preds = %if.else141, %if.then138, %if.then.i273, %if.then10.i.i.i.i, %if.end5.i.i.i.i.cleanup_crit_edge, %rcu_read_unlock.exit267, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.end.cleanup_crit_edge ], [ %rv.0, %rcu_read_unlock.exit267 ], [ 0, %if.then138 ], [ 0, %if.else141 ], [ 1, %if.end5.i.i.i.i.cleanup_crit_edge ], [ 1, %if.then10.i.i.i.i ], [ 1, %if.then.i273 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @handle_lan_get_msg_rsp(ptr noundef %intf, ptr nocapture noundef readonly %msg) unnamed_addr #1 align 64 {
entry:
  %lan_addr = alloca %struct.ipmi_lan_addr, align 4
  %recv_msg = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %lan_addr) #22
  %0 = getelementptr inbounds i8, ptr %lan_addr, i32 8
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %recv_msg) #22
  %2 = ptrtoint ptr %recv_msg to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %recv_msg, align 4, !annotation !506
  %rsp_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 6
  %3 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rsp_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %4)
  %cmp = icmp slt i32 %4, 13
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 19
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx, i32 1, i32 3, i32 1) #22
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx, ptr %arrayidx, i32 1, ptr elementtype(i32) %arrayidx) #22, !srcloc !514
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx1 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %6 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx1, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp2.not = icmp eq i8 %7, 0
  br i1 %cmp2.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %8 = ptrtoint ptr %lan_addr to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 4, ptr %lan_addr, align 4
  %arrayidx7 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  %9 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx7, align 4
  %session_handle = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 3
  %11 = ptrtoint ptr %session_handle to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %session_handle, align 1
  %arrayidx9 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 8
  %12 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx9, align 4
  %remote_SWID = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 4
  %14 = ptrtoint ptr %remote_SWID to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %remote_SWID, align 4
  %arrayidx11 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 5
  %15 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx11, align 1
  %local_SWID = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 5
  %17 = ptrtoint ptr %local_SWID to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %local_SWID, align 1
  %arrayidx13 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %18 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx13, align 1
  %20 = and i8 %19, 15
  %conv15 = zext i8 %20 to i16
  %channel = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 1
  %21 = ptrtoint ptr %channel to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %conv15, ptr %channel, align 4
  %22 = lshr i8 %19, 4
  %privilege = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 2
  %23 = ptrtoint ptr %privilege to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %22, ptr %privilege, align 2
  %arrayidx21 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 9
  %24 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx21, align 1
  %26 = and i8 %25, 3
  %lun = getelementptr inbounds %struct.ipmi_lan_addr, ptr %lan_addr, i32 0, i32 6
  %27 = ptrtoint ptr %lun to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %lun, align 2
  %28 = lshr i8 %25, 2
  %arrayidx36 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 10
  %29 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %arrayidx36, align 2
  %arrayidx38 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 6
  %31 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx38, align 2
  %33 = lshr i8 %32, 2
  %34 = and i8 %33, 62
  %call = call fastcc i32 @intf_find_seq(ptr noundef %intf, i8 noundef zeroext %28, i16 noundef signext %conv15, i8 noundef zeroext %30, i8 noundef zeroext %34, ptr noundef nonnull %lan_addr, ptr noundef nonnull %recv_msg)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end46, label %if.then43

if.then43:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx45 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 20
  %call.i.i1 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx45, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx45, i32 1, i32 3, i32 1) #22
  %35 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx45, ptr %arrayidx45, i32 1, ptr elementtype(i32) %arrayidx45) #22, !srcloc !514
  br label %cleanup

if.end46:                                         ; preds = %if.end5
  %36 = ptrtoint ptr %recv_msg to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %recv_msg, align 4
  %msg_data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %37, i32 0, i32 8
  %arrayidx48 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 11
  %38 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rsp_size, align 4
  %sub = add i32 %39, -11
  %40 = call ptr @memcpy(ptr %msg_data, ptr %arrayidx48, i32 %sub)
  %41 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx38, align 2
  %43 = lshr i8 %42, 2
  %msg55 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %37, i32 0, i32 5
  %44 = ptrtoint ptr %msg55 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %43, ptr %msg55, align 4
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %37, i32 0, i32 5, i32 3
  %45 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %msg_data, ptr %data, align 4
  %46 = load i32, ptr %rsp_size, align 4
  %47 = trunc i32 %46 to i16
  %conv61 = add i16 %47, -12
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %37, i32 0, i32 5, i32 2
  %48 = ptrtoint ptr %data_len to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 %conv61, ptr %data_len, align 2
  %recv_type = getelementptr inbounds %struct.ipmi_recv_msg, ptr %37, i32 0, i32 1
  %49 = ptrtoint ptr %recv_type to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 1, ptr %recv_type, align 4
  %call63 = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef %37)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %if.else, label %if.then65

if.then65:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx67 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 20
  %call.i.i2 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx67, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx67, i32 1, i32 3, i32 1) #22
  %50 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx67, ptr %arrayidx67, i32 1, ptr elementtype(i32) %arrayidx67) #22, !srcloc !514
  br label %cleanup

if.else:                                          ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx69 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 18
  %call.i.i3 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx69, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx69, i32 1, i32 3, i32 1) #22
  %51 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx69, ptr %arrayidx69, i32 1, ptr elementtype(i32) %arrayidx69) #22, !srcloc !514
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then65, %if.then43, %if.end.cleanup_crit_edge, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %recv_msg) #22
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %lan_addr) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @handle_lan_get_msg_cmd(ptr noundef %intf, ptr nocapture noundef readonly %msg) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %rsp_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 6
  %0 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rsp_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %1)
  %cmp = icmp slt i32 %1, 12
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 22
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx, i32 1, i32 3, i32 1) #22
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx, ptr %arrayidx, i32 1, ptr elementtype(i32) %arrayidx) #22, !srcloc !514
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx1 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %3 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx1, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %cmp2.not = icmp eq i8 %4, 0
  br i1 %cmp2.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %arrayidx7 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 6
  %5 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx7, align 2
  %7 = lshr i8 %6, 2
  %arrayidx11 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 10
  %8 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx11, align 2
  %arrayidx13 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %10 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx13, align 1
  %12 = and i8 %11, 15
  %13 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %16, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !515
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %if.end5.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end5.rcu_read_lock.exit_crit_edge:             ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end5
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 696, ptr noundef nonnull @.str.64) #22
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end5.rcu_read_lock.exit_crit_edge
  %call = tail call fastcc ptr @find_cmd_rcvr(ptr noundef %intf, i8 noundef zeroext %7, i8 noundef zeroext %9, i8 noundef zeroext %12)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %rcu_read_lock.exit.if.end18_crit_edge, label %if.then16

rcu_read_lock.exit.if.end18_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18

if.then16:                                        ; preds = %rcu_read_lock.exit
  %user17 = getelementptr inbounds %struct.cmd_rcvr, ptr %call, i32 0, i32 1
  %17 = ptrtoint ptr %user17 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %user17, align 4
  %refcount = getelementptr inbounds %struct.ipmi_user, ptr %18, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %19 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then16.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !501

if.then16.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then16
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %20 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %20)
  %.not.i.i.i.i = icmp sgt i32 %20, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.if.end18_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !498

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.if.end18_crit_edge:               ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then16.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then16.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef %.sink.i.i.i.i) #22
  br label %if.end18

if.end18:                                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.if.end18_crit_edge, %rcu_read_lock.exit.if.end18_crit_edge
  %user.0 = phi ptr [ null, %rcu_read_lock.exit.if.end18_crit_edge ], [ %18, %if.else.i.i.i.i.if.end18_crit_edge ], [ %18, %if.end15.sink.split.i.i.i.i ]
  %call.i141 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i141, label %if.end18.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i144

if.end18.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true.i144:                               ; preds = %if.end18
  %call1.i142 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i142)
  %tobool.not.i143 = icmp eq i32 %call1.i142, 0
  br i1 %tobool.not.i143, label %land.lhs.true.i144.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i146

land.lhs.true.i144.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i144
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true2.i146:                              ; preds = %land.lhs.true.i144
  %.b4.i145 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i145, label %land.lhs.true2.i146.rcu_read_unlock.exit_crit_edge, label %if.then.i147

land.lhs.true2.i146.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i146
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

if.then.i147:                                     ; preds = %land.lhs.true2.i146
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 724, ptr noundef nonnull @.str.65) #22
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i147, %land.lhs.true2.i146.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i144.rcu_read_unlock.exit_crit_edge, %if.end18.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !517
  %21 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i148 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i.i.i148 to ptr
  %preempt_count.i.i.i.i149 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i.i.i149 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i.i.i149, align 4
  %sub.i.i.i = add i32 %24, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i149, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  %cmp19 = icmp eq ptr %user.0, null
  br i1 %cmp19, label %if.then21, label %if.else24

if.then21:                                        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx23 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 23
  %call.i.i138 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx23, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx23, i32 1, i32 3, i32 1) #22
  %25 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx23, ptr %arrayidx23, i32 1, ptr elementtype(i32) %arrayidx23) #22, !srcloc !514
  br label %cleanup

if.else24:                                        ; preds = %rcu_read_unlock.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %26 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %26, i32 noundef 2592, i32 noundef 348) #27
  %tobool.not.i150 = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not.i150, label %if.then27, label %if.else30

if.then27:                                        ; preds = %if.else24
  %refcount28 = getelementptr inbounds %struct.ipmi_user, ptr %user.0, i32 0, i32 3
  %call.i.i.i.i.i.i152 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount28, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount28, i32 1, i32 3, i32 1) #22
  %27 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount28, ptr %refcount28, i32 1, ptr elementtype(i32) %refcount28) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %27, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i154, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i153 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i153, label %if.end5.i.i.i.i.cleanup_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.cleanup_crit_edge:                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount28, i32 noundef 3) #22
  br label %cleanup

if.then.i154:                                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %28 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i = getelementptr %struct.ipmi_user, ptr %user.0, i32 0, i32 8
  %call.i.i155 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %28, ptr noundef %remove_work.i) #22
  br label %cleanup

if.else30:                                        ; preds = %if.else24
  %user.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 2
  %done.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 7
  %29 = ptrtoint ptr %done.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @free_recv_msg, ptr %done.i, align 8
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @recv_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @recv_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %30 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @recv_msg_inuse_count, ptr nonnull @recv_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @recv_msg_inuse_count) #22, !srcloc !514
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3
  %31 = ptrtoint ptr %addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 4, ptr %addr, align 8
  %arrayidx32 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  %32 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx32, align 4
  %session_handle = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 2, i32 1
  %34 = ptrtoint ptr %session_handle to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %33, ptr %session_handle, align 1
  %arrayidx34 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 8
  %35 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx34, align 4
  %remote_SWID = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 2, i32 2
  %37 = ptrtoint ptr %remote_SWID to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %36, ptr %remote_SWID, align 8
  %arrayidx36 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 5
  %38 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %arrayidx36, align 1
  %local_SWID = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 2, i32 3
  %40 = ptrtoint ptr %local_SWID to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %39, ptr %local_SWID, align 1
  %arrayidx38 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 9
  %41 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx38, align 1
  %43 = and i8 %42, 3
  %lun = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 2, i32 4
  %44 = ptrtoint ptr %lun to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %43, ptr %lun, align 2
  %45 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %arrayidx13, align 1
  %47 = and i8 %46, 15
  %conv46 = zext i8 %47 to i16
  %channel = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 1
  %48 = ptrtoint ptr %channel to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 %conv46, ptr %channel, align 4
  %49 = lshr i8 %46, 4
  %privilege = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 2
  %50 = ptrtoint ptr %privilege to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %49, ptr %privilege, align 2
  %51 = ptrtoint ptr %user.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %user.0, ptr %user.i, align 4
  %recv_type = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 1
  %52 = ptrtoint ptr %recv_type to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 3, ptr %recv_type, align 8
  %53 = lshr i8 %42, 2
  %54 = zext i8 %53 to i32
  %msgid = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 4
  %55 = ptrtoint ptr %msgid to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %msgid, align 8
  %56 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %arrayidx7, align 2
  %58 = lshr i8 %57, 2
  %msg62 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5
  %59 = ptrtoint ptr %msg62 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 %58, ptr %msg62, align 4
  %60 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %arrayidx11, align 2
  %cmd67 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5, i32 1
  %62 = ptrtoint ptr %cmd67 to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 %61, ptr %cmd67, align 1
  %msg_data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 8
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5, i32 3
  %63 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %msg_data, ptr %data, align 8
  %64 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %rsp_size, align 4
  %66 = trunc i32 %65 to i16
  %conv70 = add i16 %66, -12
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5, i32 2
  %67 = ptrtoint ptr %data_len to i32
  call void @__asan_store2_noabort(i32 %67)
  store i16 %conv70, ptr %data_len, align 2
  %arrayidx75 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 11
  %sub77 = add i32 %65, -12
  %68 = call ptr @memcpy(ptr %msg_data, ptr %arrayidx75, i32 %sub77)
  %call78 = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78)
  %tobool79.not = icmp eq i32 %call78, 0
  br i1 %tobool79.not, label %if.else83, label %if.then80

if.then80:                                        ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx82 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 23
  %call.i.i139 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx82, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx82, i32 1, i32 3, i32 1) #22
  %69 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx82, ptr %arrayidx82, i32 1, ptr elementtype(i32) %arrayidx82) #22, !srcloc !514
  br label %cleanup

if.else83:                                        ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx85 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 21
  %call.i.i140 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx85, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx85, i32 1, i32 3, i32 1) #22
  %70 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx85, ptr %arrayidx85, i32 1, ptr elementtype(i32) %arrayidx85) #22, !srcloc !514
  br label %cleanup

cleanup:                                          ; preds = %if.else83, %if.then80, %if.then.i154, %if.then10.i.i.i.i, %if.end5.i.i.i.i.cleanup_crit_edge, %if.then21, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.then21 ], [ 0, %if.then80 ], [ 0, %if.else83 ], [ 1, %if.end5.i.i.i.i.cleanup_crit_edge ], [ 1, %if.then10.i.i.i.i ], [ 1, %if.then.i154 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @handle_oem_get_msg_cmd(ptr noundef %intf, ptr nocapture noundef readonly %msg) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %rsp_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 6
  %0 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rsp_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %1)
  %cmp = icmp slt i32 %1, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 22
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx, i32 1, i32 3, i32 1) #22
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx, ptr %arrayidx, i32 1, ptr elementtype(i32) %arrayidx) #22, !srcloc !514
  br label %cleanup

if.end:                                           ; preds = %entry
  %rsp = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7
  %arrayidx1 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 2
  %3 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx1, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %cmp2.not = icmp eq i8 %4, 0
  br i1 %cmp2.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %5 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %rsp, align 4
  %7 = lshr i8 %6, 2
  %arrayidx11 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %8 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx11, align 1
  %arrayidx13 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %10 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx13, align 1
  %12 = and i8 %11, 15
  %13 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %16, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !515
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %if.end5.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end5.rcu_read_lock.exit_crit_edge:             ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end5
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 696, ptr noundef nonnull @.str.64) #22
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end5.rcu_read_lock.exit_crit_edge
  %call = tail call fastcc ptr @find_cmd_rcvr(ptr noundef %intf, i8 noundef zeroext %7, i8 noundef zeroext %9, i8 noundef zeroext %12)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %rcu_read_lock.exit.if.end18_crit_edge, label %if.then16

rcu_read_lock.exit.if.end18_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18

if.then16:                                        ; preds = %rcu_read_lock.exit
  %user17 = getelementptr inbounds %struct.cmd_rcvr, ptr %call, i32 0, i32 1
  %17 = ptrtoint ptr %user17 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %user17, align 4
  %refcount = getelementptr inbounds %struct.ipmi_user, ptr %18, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #22
  %19 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then16.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !501

if.then16.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then16
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %20 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %20)
  %.not.i.i.i.i = icmp sgt i32 %20, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.if.end18_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !498

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.if.end18_crit_edge:               ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then16.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then16.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef %.sink.i.i.i.i) #22
  br label %if.end18

if.end18:                                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.if.end18_crit_edge, %rcu_read_lock.exit.if.end18_crit_edge
  %user.0 = phi ptr [ null, %rcu_read_lock.exit.if.end18_crit_edge ], [ %18, %if.else.i.i.i.i.if.end18_crit_edge ], [ %18, %if.end15.sink.split.i.i.i.i ]
  %call.i111 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i111, label %if.end18.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i114

if.end18.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true.i114:                               ; preds = %if.end18
  %call1.i112 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i112)
  %tobool.not.i113 = icmp eq i32 %call1.i112, 0
  br i1 %tobool.not.i113, label %land.lhs.true.i114.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i116

land.lhs.true.i114.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i114
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true2.i116:                              ; preds = %land.lhs.true.i114
  %.b4.i115 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i115, label %land.lhs.true2.i116.rcu_read_unlock.exit_crit_edge, label %if.then.i117

land.lhs.true2.i116.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i116
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

if.then.i117:                                     ; preds = %land.lhs.true2.i116
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.63, i32 noundef 724, ptr noundef nonnull @.str.65) #22
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i117, %land.lhs.true2.i116.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i114.rcu_read_unlock.exit_crit_edge, %if.end18.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !517
  %21 = tail call i32 @llvm.read_register.i32(metadata !488) #22
  %and.i.i.i.i.i118 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i.i.i118 to ptr
  %preempt_count.i.i.i.i119 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i.i.i119 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i.i.i119, align 4
  %sub.i.i.i = add i32 %24, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i119, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  %cmp19 = icmp eq ptr %user.0, null
  br i1 %cmp19, label %if.then21, label %if.else24

if.then21:                                        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx23 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 23
  %call.i.i108 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx23, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx23, i32 1, i32 3, i32 1) #22
  %25 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx23, ptr %arrayidx23, i32 1, ptr elementtype(i32) %arrayidx23) #22, !srcloc !514
  br label %cleanup

if.else24:                                        ; preds = %rcu_read_unlock.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %26 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %26, i32 noundef 2592, i32 noundef 348) #27
  %tobool.not.i120 = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not.i120, label %if.then27, label %if.else30

if.then27:                                        ; preds = %if.else24
  %refcount28 = getelementptr inbounds %struct.ipmi_user, ptr %user.0, i32 0, i32 3
  %call.i.i.i.i.i.i122 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount28, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %refcount28, i32 1, i32 3, i32 1) #22
  %27 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount28, ptr %refcount28, i32 1, ptr elementtype(i32) %refcount28) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %27, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i124, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i123 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i123, label %if.end5.i.i.i.i.cleanup_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.cleanup_crit_edge:                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %refcount28, i32 noundef 3) #22
  br label %cleanup

if.then.i124:                                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %28 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i = getelementptr %struct.ipmi_user, ptr %user.0, i32 0, i32 8
  %call.i.i125 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %28, ptr noundef %remove_work.i) #22
  br label %cleanup

if.else30:                                        ; preds = %if.else24
  %user.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 2
  %done.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 7
  %29 = ptrtoint ptr %done.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @free_recv_msg, ptr %done.i, align 8
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @recv_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @recv_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %30 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @recv_msg_inuse_count, ptr nonnull @recv_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @recv_msg_inuse_count) #22, !srcloc !514
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3
  %31 = ptrtoint ptr %addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 12, ptr %addr, align 8
  %channel = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 1
  %32 = ptrtoint ptr %channel to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 15, ptr %channel, align 4
  %33 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %rsp, align 4
  %35 = and i8 %34, 3
  %lun = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 3, i32 2
  %36 = ptrtoint ptr %lun to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %35, ptr %lun, align 2
  %37 = ptrtoint ptr %user.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %user.0, ptr %user.i, align 4
  %user_msg_data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 6
  %38 = ptrtoint ptr %user_msg_data to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %user_msg_data, align 4
  %recv_type = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 1
  %39 = ptrtoint ptr %recv_type to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 5, ptr %recv_type, align 8
  %40 = lshr i8 %34, 2
  %msg42 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5
  %41 = ptrtoint ptr %msg42 to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %40, ptr %msg42, align 4
  %42 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %arrayidx11, align 1
  %cmd47 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5, i32 1
  %44 = ptrtoint ptr %cmd47 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %43, ptr %cmd47, align 1
  %msg_data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 8
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5, i32 3
  %45 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %msg_data, ptr %data, align 8
  %46 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rsp_size, align 4
  %48 = trunc i32 %47 to i16
  %conv50 = add i16 %48, -4
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %call7.i.i, i32 0, i32 5, i32 2
  %49 = ptrtoint ptr %data_len to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %conv50, ptr %data_len, align 2
  %arrayidx55 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 4
  %sub57 = add i32 %47, -4
  %50 = call ptr @memcpy(ptr %msg_data, ptr %arrayidx55, i32 %sub57)
  %call58 = tail call fastcc i32 @deliver_response(ptr noundef %intf, ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %if.else63, label %if.then60

if.then60:                                        ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx62 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 23
  %call.i.i109 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx62, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx62, i32 1, i32 3, i32 1) #22
  %51 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx62, ptr %arrayidx62, i32 1, ptr elementtype(i32) %arrayidx62) #22, !srcloc !514
  br label %cleanup

if.else63:                                        ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx65 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 21
  %call.i.i110 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx65, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx65, i32 1, i32 3, i32 1) #22
  %52 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx65, ptr %arrayidx65, i32 1, ptr elementtype(i32) %arrayidx65) #22, !srcloc !514
  br label %cleanup

cleanup:                                          ; preds = %if.else63, %if.then60, %if.then.i124, %if.then10.i.i.i.i, %if.end5.i.i.i.i.cleanup_crit_edge, %if.then21, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.then21 ], [ 0, %if.then60 ], [ 0, %if.else63 ], [ 1, %if.end5.i.i.i.i.cleanup_crit_edge ], [ 1, %if.then10.i.i.i.i ], [ 1, %if.then.i124 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @intf_find_seq(ptr noundef %intf, i8 noundef zeroext %seq, i16 noundef signext %channel, i8 noundef zeroext %cmd, i8 noundef zeroext %netfn, ptr nocapture noundef readonly %addr, ptr nocapture noundef writeonly %recv_msg) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i8 %seq to i32
  %seq_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 19
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %seq_lock) #22
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %conv
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %entry.if.end42_crit_edge, label %if.then8

entry.if.end42_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

if.then8:                                         ; preds = %entry
  %recv_msg12 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 20, i32 %conv, i32 5
  %1 = ptrtoint ptr %recv_msg12 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %recv_msg12, align 4
  %addr13 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3
  %channel14 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 1
  %3 = ptrtoint ptr %channel14 to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %channel14, align 4
  %conv15 = sext i16 %4 to i32
  %5 = zext i16 %channel to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv15, i32 %5)
  %cmp17 = icmp eq i32 %conv15, %5
  br i1 %cmp17, label %land.lhs.true, label %if.then8.if.end42_crit_edge

if.then8.if.end42_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.lhs.true:                                    ; preds = %if.then8
  %cmd20 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 5, i32 1
  %6 = ptrtoint ptr %cmd20 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %cmd20, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %7, i8 %cmd)
  %cmp23 = icmp eq i8 %7, %cmd
  br i1 %cmp23, label %land.lhs.true25, label %land.lhs.true.if.end42_crit_edge

land.lhs.true.if.end42_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.lhs.true25:                                  ; preds = %land.lhs.true
  %msg19 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 5
  %8 = ptrtoint ptr %msg19 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %msg19, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %9, i8 %netfn)
  %cmp30 = icmp eq i8 %9, %netfn
  br i1 %cmp30, label %land.lhs.true32, label %land.lhs.true25.if.end42_crit_edge

land.lhs.true25.if.end42_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.lhs.true32:                                  ; preds = %land.lhs.true25
  %10 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %addr, align 4
  %12 = ptrtoint ptr %addr13 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %addr13, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %13)
  %cmp.not.i = icmp eq i32 %11, %13
  br i1 %cmp.not.i, label %if.end.i, label %land.lhs.true32.if.end42_crit_edge

land.lhs.true32.if.end42_crit_edge:               ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

if.end.i:                                         ; preds = %land.lhs.true32
  %channel.i = getelementptr inbounds %struct.ipmi_addr, ptr %addr, i32 0, i32 1
  %14 = ptrtoint ptr %channel.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %channel.i, align 4
  %16 = ptrtoint ptr %channel14 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %channel14, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %17)
  %cmp4.not.i = icmp eq i16 %15, %17
  br i1 %cmp4.not.i, label %if.end7.i, label %if.end.i.if.end42_crit_edge

if.end.i.if.end42_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

if.end7.i:                                        ; preds = %if.end.i
  %18 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.166)
  switch i32 %11, label %if.end7.i.if.then36_crit_edge [
    i32 12, label %if.then11.i
    i32 1, label %if.end7.i.if.then20.i_crit_edge
    i32 65, label %if.end7.i.if.then20.i_crit_edge65
    i32 129, label %if.then35.i
    i32 4, label %if.then58.i
  ]

if.end7.i.if.then20.i_crit_edge65:                ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then20.i

if.end7.i.if.then20.i_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then20.i

if.end7.i.if.then36_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then36

if.then11.i:                                      ; preds = %if.end7.i
  %lun.i = getelementptr inbounds %struct.ipmi_system_interface_addr, ptr %addr, i32 0, i32 2
  %19 = ptrtoint ptr %lun.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %lun.i, align 2
  %lun13.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2
  %21 = ptrtoint ptr %lun13.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %lun13.i, align 2
  call void @__sanitizer_cov_trace_cmp1(i8 %20, i8 %22)
  %cmp15.i = icmp eq i8 %20, %22
  br i1 %cmp15.i, label %if.then11.i.if.then36_crit_edge, label %if.then11.i.if.end42_crit_edge

if.then11.i.if.end42_crit_edge:                   ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

if.then11.i.if.then36_crit_edge:                  ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then36

if.then20.i:                                      ; preds = %if.end7.i.if.then20.i_crit_edge, %if.end7.i.if.then20.i_crit_edge65
  %slave_addr.i = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %addr, i32 0, i32 2
  %23 = ptrtoint ptr %slave_addr.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %slave_addr.i, align 2
  %slave_addr22.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2
  %25 = ptrtoint ptr %slave_addr22.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %slave_addr22.i, align 2
  call void @__sanitizer_cov_trace_cmp1(i8 %24, i8 %26)
  %cmp24.i = icmp eq i8 %24, %26
  br i1 %cmp24.i, label %land.rhs.i, label %if.then20.i.if.end42_crit_edge

if.then20.i.if.end42_crit_edge:                   ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.rhs.i:                                       ; preds = %if.then20.i
  %lun26.i = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %addr, i32 0, i32 3
  %27 = ptrtoint ptr %lun26.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %lun26.i, align 1
  %lun28.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2, i32 1
  %29 = ptrtoint ptr %lun28.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %lun28.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %28, i8 %30)
  %cmp30.i = icmp eq i8 %28, %30
  br i1 %cmp30.i, label %land.rhs.i.if.then36_crit_edge, label %land.rhs.i.if.end42_crit_edge

land.rhs.i.if.end42_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.rhs.i.if.then36_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then36

if.then35.i:                                      ; preds = %if.end7.i
  %slave_addr36.i = getelementptr inbounds %struct.ipmi_ipmb_direct_addr, ptr %addr, i32 0, i32 2
  %31 = ptrtoint ptr %slave_addr36.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %slave_addr36.i, align 2
  %slave_addr38.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2
  %33 = ptrtoint ptr %slave_addr38.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %slave_addr38.i, align 2
  call void @__sanitizer_cov_trace_cmp1(i8 %32, i8 %34)
  %cmp40.i = icmp eq i8 %32, %34
  br i1 %cmp40.i, label %land.lhs.true.i, label %if.then35.i.if.end42_crit_edge

if.then35.i.if.end42_crit_edge:                   ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.lhs.true.i:                                  ; preds = %if.then35.i
  %rq_lun.i = getelementptr inbounds %struct.ipmi_ipmb_direct_addr, ptr %addr, i32 0, i32 4
  %35 = ptrtoint ptr %rq_lun.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %rq_lun.i, align 4
  %rq_lun43.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2, i32 2
  %37 = ptrtoint ptr %rq_lun43.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %rq_lun43.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %36, i8 %38)
  %cmp45.i = icmp eq i8 %36, %38
  br i1 %cmp45.i, label %land.rhs47.i, label %land.lhs.true.i.if.end42_crit_edge

land.lhs.true.i.if.end42_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.rhs47.i:                                     ; preds = %land.lhs.true.i
  %rs_lun.i = getelementptr inbounds %struct.ipmi_ipmb_direct_addr, ptr %addr, i32 0, i32 3
  %39 = ptrtoint ptr %rs_lun.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %rs_lun.i, align 1
  %rs_lun49.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2, i32 1
  %41 = ptrtoint ptr %rs_lun49.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %rs_lun49.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %40, i8 %42)
  %cmp51.i = icmp eq i8 %40, %42
  br i1 %cmp51.i, label %land.rhs47.i.if.then36_crit_edge, label %land.rhs47.i.if.end42_crit_edge

land.rhs47.i.if.end42_crit_edge:                  ; preds = %land.rhs47.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.rhs47.i.if.then36_crit_edge:                 ; preds = %land.rhs47.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then36

if.then58.i:                                      ; preds = %if.end7.i
  %remote_SWID.i = getelementptr inbounds %struct.ipmi_lan_addr, ptr %addr, i32 0, i32 4
  %43 = ptrtoint ptr %remote_SWID.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %remote_SWID.i, align 4
  %remote_SWID60.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2, i32 2
  %45 = ptrtoint ptr %remote_SWID60.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %remote_SWID60.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %44, i8 %46)
  %cmp62.i = icmp eq i8 %44, %46
  br i1 %cmp62.i, label %land.lhs.true64.i, label %if.then58.i.if.end42_crit_edge

if.then58.i.if.end42_crit_edge:                   ; preds = %if.then58.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.lhs.true64.i:                                ; preds = %if.then58.i
  %local_SWID.i = getelementptr inbounds %struct.ipmi_lan_addr, ptr %addr, i32 0, i32 5
  %47 = ptrtoint ptr %local_SWID.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %local_SWID.i, align 1
  %local_SWID66.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2, i32 3
  %49 = ptrtoint ptr %local_SWID66.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %local_SWID66.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %48, i8 %50)
  %cmp68.i = icmp eq i8 %48, %50
  br i1 %cmp68.i, label %land.lhs.true70.i, label %land.lhs.true64.i.if.end42_crit_edge

land.lhs.true64.i.if.end42_crit_edge:             ; preds = %land.lhs.true64.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

land.lhs.true70.i:                                ; preds = %land.lhs.true64.i
  %session_handle.i = getelementptr inbounds %struct.ipmi_lan_addr, ptr %addr, i32 0, i32 3
  %51 = ptrtoint ptr %session_handle.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %session_handle.i, align 1
  %session_handle72.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2, i32 1
  %53 = ptrtoint ptr %session_handle72.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %session_handle72.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %52, i8 %54)
  %cmp74.i = icmp eq i8 %52, %54
  br i1 %cmp74.i, label %ipmi_addr_equal.exit, label %land.lhs.true70.i.if.end42_crit_edge

land.lhs.true70.i.if.end42_crit_edge:             ; preds = %land.lhs.true70.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

ipmi_addr_equal.exit:                             ; preds = %land.lhs.true70.i
  %lun77.i = getelementptr inbounds %struct.ipmi_lan_addr, ptr %addr, i32 0, i32 6
  %55 = ptrtoint ptr %lun77.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %lun77.i, align 2
  %lun79.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %2, i32 0, i32 3, i32 2, i32 4
  %57 = ptrtoint ptr %lun79.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %lun79.i, align 2
  call void @__sanitizer_cov_trace_cmp1(i8 %56, i8 %58)
  %cmp81.i = icmp eq i8 %56, %58
  br i1 %cmp81.i, label %ipmi_addr_equal.exit.if.then36_crit_edge, label %ipmi_addr_equal.exit.if.end42_crit_edge

ipmi_addr_equal.exit.if.end42_crit_edge:          ; preds = %ipmi_addr_equal.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

ipmi_addr_equal.exit.if.then36_crit_edge:         ; preds = %ipmi_addr_equal.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then36

if.then36:                                        ; preds = %ipmi_addr_equal.exit.if.then36_crit_edge, %land.rhs47.i.if.then36_crit_edge, %land.rhs.i.if.then36_crit_edge, %if.then11.i.if.then36_crit_edge, %if.end7.i.if.then36_crit_edge
  %59 = ptrtoint ptr %recv_msg to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %2, ptr %recv_msg, align 4
  %60 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %60)
  %bf.load40 = load i8, ptr %arrayidx, align 4
  %bf.clear = and i8 %bf.load40, 127
  store i8 %bf.clear, ptr %arrayidx, align 4
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %61 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %handlers.i, align 4
  %set_need_watch.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %62, i32 0, i32 7
  %63 = ptrtoint ptr %set_need_watch.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %set_need_watch.i, align 4
  %tobool.not.i = icmp eq ptr %64, null
  br i1 %tobool.not.i, label %if.then36.if.end42_crit_edge, label %do.body1.i

if.then36.if.end42_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42

do.body1.i:                                       ; preds = %if.then36
  %watch_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 39
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %watch_lock.i) #22
  %response_waiters.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 42
  %65 = ptrtoint ptr %response_waiters.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %response_waiters.i, align 4
  %dec.i = add i32 %66, -1
  store i32 %dec.i, ptr %response_waiters.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool19.not.i = icmp ne i32 %dec.i, 0
  %spec.select.i = zext i1 %tobool19.not.i to i32
  %watchdog_waiters22.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 41
  %67 = ptrtoint ptr %watchdog_waiters22.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %watchdog_waiters22.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool23.not.i = icmp eq i32 %68, 0
  %or25.i = or i32 %spec.select.i, 2
  %flags.addr.1.i = select i1 %tobool23.not.i, i32 %spec.select.i, i32 %or25.i
  %command_waiters27.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 40
  %69 = ptrtoint ptr %command_waiters27.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %command_waiters27.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool28.not.i = icmp eq i32 %70, 0
  %or30.i = or i32 %flags.addr.1.i, 4
  %flags.addr.2.i = select i1 %tobool28.not.i, i32 %flags.addr.1.i, i32 %or30.i
  %last_watch_mask.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 43
  %71 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %last_watch_mask.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %72, i32 %flags.addr.2.i)
  %cmp32.not.i = icmp eq i32 %72, %flags.addr.2.i
  br i1 %cmp32.not.i, label %do.body1.i.if.end39.i_crit_edge, label %if.then34.i

do.body1.i.if.end39.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39.i

if.then34.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  %73 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %flags.addr.2.i, ptr %last_watch_mask.i, align 8
  %74 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %handlers.i, align 4
  %set_need_watch37.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %75, i32 0, i32 7
  %76 = ptrtoint ptr %set_need_watch37.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %set_need_watch37.i, align 4
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %78 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %send_info.i, align 8
  tail call void %77(ptr noundef %79, i32 noundef %flags.addr.2.i) #22
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then34.i, %do.body1.i.if.end39.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %watch_lock.i, i32 noundef %call2.i) #22
  br label %if.end42

if.end42:                                         ; preds = %if.end39.i, %if.then36.if.end42_crit_edge, %ipmi_addr_equal.exit.if.end42_crit_edge, %land.lhs.true70.i.if.end42_crit_edge, %land.lhs.true64.i.if.end42_crit_edge, %if.then58.i.if.end42_crit_edge, %land.rhs47.i.if.end42_crit_edge, %land.lhs.true.i.if.end42_crit_edge, %if.then35.i.if.end42_crit_edge, %land.rhs.i.if.end42_crit_edge, %if.then20.i.if.end42_crit_edge, %if.then11.i.if.end42_crit_edge, %if.end.i.if.end42_crit_edge, %land.lhs.true32.if.end42_crit_edge, %land.lhs.true25.if.end42_crit_edge, %land.lhs.true.if.end42_crit_edge, %if.then8.if.end42_crit_edge, %entry.if.end42_crit_edge
  %rv.1 = phi i32 [ -19, %entry.if.end42_crit_edge ], [ -19, %ipmi_addr_equal.exit.if.end42_crit_edge ], [ -19, %land.lhs.true25.if.end42_crit_edge ], [ -19, %land.lhs.true.if.end42_crit_edge ], [ -19, %if.then8.if.end42_crit_edge ], [ 0, %if.then36.if.end42_crit_edge ], [ 0, %if.end39.i ], [ -19, %land.lhs.true32.if.end42_crit_edge ], [ -19, %if.end.i.if.end42_crit_edge ], [ -19, %if.then20.i.if.end42_crit_edge ], [ -19, %land.lhs.true.i.if.end42_crit_edge ], [ -19, %if.then35.i.if.end42_crit_edge ], [ -19, %land.lhs.true70.i.if.end42_crit_edge ], [ -19, %land.lhs.true64.i.if.end42_crit_edge ], [ -19, %if.then58.i.if.end42_crit_edge ], [ -19, %if.then11.i.if.end42_crit_edge ], [ -19, %land.rhs.i.if.end42_crit_edge ], [ -19, %land.rhs47.i.if.end42_crit_edge ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock, i32 noundef %call5) #22
  ret i32 %rv.1
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @copy_event_into_recv_msg(ptr noundef %recv_msg, ptr nocapture noundef readonly %msg) unnamed_addr #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %msgid = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 4
  %0 = ptrtoint ptr %msgid to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %msgid, align 4
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 3
  %1 = ptrtoint ptr %addr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 12, ptr %addr, align 4
  %channel = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 3, i32 1
  %2 = ptrtoint ptr %channel to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 15, ptr %channel, align 4
  %rsp = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7
  %3 = ptrtoint ptr %rsp to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %rsp, align 4
  %5 = and i8 %4, 3
  %lun = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 3, i32 2
  %6 = ptrtoint ptr %lun to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %lun, align 2
  %recv_type = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 1
  %7 = ptrtoint ptr %recv_type to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 2, ptr %recv_type, align 4
  %8 = load i8, ptr %rsp, align 4
  %9 = lshr i8 %8, 2
  %msg6 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 5
  %10 = ptrtoint ptr %msg6 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %9, ptr %msg6, align 4
  %arrayidx8 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 1
  %11 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx8, align 1
  %cmd = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 5, i32 1
  %13 = ptrtoint ptr %cmd to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %12, ptr %cmd, align 1
  %msg_data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 8
  %arrayidx11 = getelementptr %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 7, i32 3
  %rsp_size = getelementptr inbounds %struct.ipmi_smi_msg, ptr %msg, i32 0, i32 6
  %14 = ptrtoint ptr %rsp_size to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rsp_size, align 4
  %sub = add i32 %15, -3
  %16 = call ptr @memcpy(ptr %msg_data, ptr %arrayidx11, i32 %sub)
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 5, i32 3
  %17 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %msg_data, ptr %data, align 4
  %18 = load i32, ptr %rsp_size, align 4
  %19 = trunc i32 %18 to i16
  %conv17 = add i16 %19, -3
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 5, i32 2
  %20 = ptrtoint ptr %data_len to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %conv17, ptr %data_len, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__ipmi_bmc_unregister(ptr noundef %intf) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %bmc_registered = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 11
  %0 = ptrtoint ptr %bmc_registered to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %bmc_registered, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %bmc1 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 10
  %2 = ptrtoint ptr %bmc1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bmc1, align 8
  %si_dev = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %4 = ptrtoint ptr %si_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %si_dev, align 4
  tail call void @sysfs_remove_link(ptr noundef %5, ptr noundef nonnull @.str.95) #22
  %dev = getelementptr inbounds %struct.platform_device, ptr %3, i32 0, i32 3
  %my_dev_name = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 13
  %6 = ptrtoint ptr %my_dev_name to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %my_dev_name, align 8
  tail call void @sysfs_remove_link(ptr noundef %dev, ptr noundef %7) #22
  %8 = ptrtoint ptr %my_dev_name to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %my_dev_name, align 8
  tail call void @kfree(ptr noundef %9) #22
  %10 = ptrtoint ptr %my_dev_name to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %my_dev_name, align 8
  %dyn_mutex = getelementptr inbounds %struct.bmc_device, ptr %3, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %dyn_mutex, i32 noundef 0) #22
  %bmc_link = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 12
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %bmc_link) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_del.exit_crit_edge

if.end.list_del.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 12, i32 1
  %11 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev.i.i, align 4
  %13 = ptrtoint ptr %bmc_link to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %bmc_link, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %prev1.i.i.i, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %14, ptr %12, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end.list_del.exit_crit_edge
  %17 = ptrtoint ptr %bmc_link to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 256 to ptr), ptr %bmc_link, align 4
  %prev.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 12, i32 1
  %18 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef %dyn_mutex) #22
  %tmp_bmc = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 9
  %19 = ptrtoint ptr %bmc1 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %tmp_bmc, ptr %bmc1, align 8
  %usecount = getelementptr inbounds %struct.bmc_device, ptr %3, i32 0, i32 10
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usecount, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %usecount, i32 1, i32 3, i32 1) #22
  %20 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usecount, ptr %usecount, i32 1, ptr elementtype(i32) %usecount) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %20, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.kref_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end5.i.i.i.i.kref_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %usecount, i32 noundef 3) #22
  br label %kref_put.exit

if.then.i:                                        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  %21 = load ptr, ptr @remove_work_wq, align 4
  %remove_work.i = getelementptr %struct.bmc_device, ptr %3, i32 0, i32 11
  %call.i.i20 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %21, ptr noundef %remove_work.i) #22
  br label %kref_put.exit

kref_put.exit:                                    ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.kref_put.exit_crit_edge
  %22 = ptrtoint ptr %bmc_registered to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 0, ptr %bmc_registered, align 4
  br label %cleanup

cleanup:                                          ; preds = %kref_put.exit, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @guid_handler(ptr noundef %intf, ptr nocapture noundef readonly %msg) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %bmc1 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 10
  %0 = ptrtoint ptr %bmc1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bmc1, align 8
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 3
  %2 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %3)
  %cmp.not = icmp eq i32 %3, 12
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %msg2 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5
  %4 = ptrtoint ptr %msg2 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %msg2, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %5)
  %cmp3.not = icmp eq i8 %5, 7
  br i1 %cmp3.not, label %lor.lhs.false5, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmd = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 1
  %6 = ptrtoint ptr %cmd to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %cmd, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %7)
  %cmp8.not = icmp eq i8 %7, 8
  br i1 %cmp8.not, label %if.end, label %lor.lhs.false5.cleanup_crit_edge

lor.lhs.false5.cleanup_crit_edge:                 ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false5
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 3
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %data, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %9, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %cmp12.not = icmp eq i8 %11, 0
  br i1 %cmp12.not, label %if.end15, label %if.then14

if.then14:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %dyn_guid_set = getelementptr inbounds %struct.bmc_device, ptr %1, i32 0, i32 9
  %12 = ptrtoint ptr %dyn_guid_set to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %dyn_guid_set, align 4
  br label %out

if.end15:                                         ; preds = %if.end
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 2
  %13 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %data_len, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 17, i16 %14)
  %cmp18 = icmp ult i16 %14, 17
  br i1 %cmp18, label %if.then20, label %if.end25

if.then20:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #24
  %dyn_guid_set21 = getelementptr inbounds %struct.bmc_device, ptr %1, i32 0, i32 9
  %15 = ptrtoint ptr %dyn_guid_set21 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %dyn_guid_set21, align 4
  %si_dev = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %16 = ptrtoint ptr %si_dev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %si_dev, align 4
  %18 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %data_len, align 2
  %conv24 = zext i16 %19 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %17, ptr noundef nonnull @.str.83, ptr noundef nonnull @.str.8, i32 noundef %conv24, i32 noundef 17) #25
  br label %out

if.end25:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #24
  %fetch_guid = getelementptr inbounds %struct.bmc_device, ptr %1, i32 0, i32 8
  %add.ptr = getelementptr i8, ptr %9, i32 1
  %20 = call ptr @memcpy(ptr %fetch_guid, ptr %add.ptr, i32 16)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !525
  %dyn_guid_set34 = getelementptr inbounds %struct.bmc_device, ptr %1, i32 0, i32 9
  %21 = ptrtoint ptr %dyn_guid_set34 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %dyn_guid_set34, align 4
  br label %out

out:                                              ; preds = %if.end25, %if.then20, %if.then14
  %waitq = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 7
  tail call void @__wake_up(ptr noundef %waitq, i32 noundef 3, i32 noundef 1, ptr noundef null) #22
  br label %cleanup

cleanup:                                          ; preds = %out, %lor.lhs.false5.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bmc_device_id_handler(ptr noundef %intf, ptr nocapture noundef readonly %msg) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 3
  %0 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %1)
  %cmp.not = icmp eq i32 %1, 12
  br i1 %cmp.not, label %lor.lhs.false, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

lor.lhs.false:                                    ; preds = %entry
  %msg1 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5
  %2 = ptrtoint ptr %msg1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %msg1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %3)
  %cmp2.not = icmp eq i8 %3, 7
  br i1 %cmp2.not, label %lor.lhs.false4, label %lor.lhs.false.do.end_crit_edge

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmd = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 1
  %4 = ptrtoint ptr %cmd to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %cmd, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp7.not = icmp eq i8 %5, 1
  br i1 %cmp7.not, label %if.end, label %lor.lhs.false4.do.end_crit_edge

lor.lhs.false4.do.end_crit_edge:                  ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

do.end:                                           ; preds = %lor.lhs.false4.do.end_crit_edge, %lor.lhs.false.do.end_crit_edge, %entry.do.end_crit_edge
  %si_dev = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %6 = ptrtoint ptr %si_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %si_dev, align 4
  %msg11 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5
  %8 = ptrtoint ptr %msg11 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %msg11, align 4
  %conv13 = zext i8 %9 to i32
  %cmd15 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 1
  %10 = ptrtoint ptr %cmd15 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %cmd15, align 1
  %conv16 = zext i8 %11 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %7, ptr noundef nonnull @.str.87, ptr noundef nonnull @.str.8, i32 noundef %1, i32 noundef %conv13, i32 noundef %conv16) #25
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false4
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 3
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %data, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %13, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not = icmp eq i8 %15, 0
  br i1 %tobool.not, label %if.end27, label %do.end21

do.end21:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %si_dev22 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %16 = ptrtoint ptr %si_dev22 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %si_dev22, align 4
  %conv26 = zext i8 %15 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %17, ptr noundef nonnull @.str.90, ptr noundef nonnull @.str.8, i32 noundef %conv26) #25
  %bmc = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 10
  br label %out

if.end27:                                         ; preds = %if.end
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 2
  %18 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %data_len, align 2
  %bmc36 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 10
  %20 = ptrtoint ptr %bmc36 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %bmc36, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %19)
  %cmp.i = icmp ult i16 %19, 7
  br i1 %cmp.i, label %do.end41, label %if.end12.i

if.end12.i:                                       ; preds = %if.end27
  %fetch_id = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3
  %conv35 = zext i16 %19 to i32
  %incdec.ptr.i = getelementptr i8, ptr %13, i32 1
  %dec.i = add nsw i32 %conv35, -1
  %22 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %incdec.ptr.i, align 1
  %24 = ptrtoint ptr %fetch_id to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %fetch_id, align 4
  %arrayidx14.i = getelementptr i8, ptr %13, i32 2
  %25 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %arrayidx14.i, align 1
  %device_revision.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 1
  %27 = ptrtoint ptr %device_revision.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %device_revision.i, align 1
  %arrayidx15.i = getelementptr i8, ptr %13, i32 3
  %28 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx15.i, align 1
  %firmware_revision_1.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 2
  %30 = ptrtoint ptr %firmware_revision_1.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %firmware_revision_1.i, align 2
  %arrayidx16.i = getelementptr i8, ptr %13, i32 4
  %31 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx16.i, align 1
  %firmware_revision_2.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 3
  %33 = ptrtoint ptr %firmware_revision_2.i to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %32, ptr %firmware_revision_2.i, align 1
  %arrayidx17.i = getelementptr i8, ptr %13, i32 5
  %34 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %arrayidx17.i, align 1
  %ipmi_version.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 4
  %36 = ptrtoint ptr %ipmi_version.i to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %35, ptr %ipmi_version.i, align 4
  %arrayidx18.i = getelementptr i8, ptr %13, i32 6
  %37 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %arrayidx18.i, align 1
  %additional_device_support.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 5
  %39 = ptrtoint ptr %additional_device_support.i to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 %38, ptr %additional_device_support.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %dec.i)
  %cmp19.i = icmp ugt i32 %dec.i, 10
  br i1 %cmp19.i, label %if.end38.i, label %if.end38.thread.i

if.end38.thread.i:                                ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #24
  %manufacturer_id36.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 6
  %40 = ptrtoint ptr %manufacturer_id36.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 0, ptr %manufacturer_id36.i, align 4
  %product_id37.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 7
  %41 = ptrtoint ptr %product_id37.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %product_id37.i, align 4
  br label %if.else42.i

if.end38.i:                                       ; preds = %if.end12.i
  %arrayidx22.i = getelementptr i8, ptr %13, i32 7
  %42 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %arrayidx22.i, align 1
  %conv23.i = zext i8 %43 to i32
  %arrayidx24.i = getelementptr i8, ptr %13, i32 8
  %44 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %arrayidx24.i, align 1
  %conv25.i = zext i8 %45 to i32
  %shl.i = shl nuw nsw i32 %conv25.i, 8
  %or.i = or i32 %shl.i, %conv23.i
  %arrayidx26.i = getelementptr i8, ptr %13, i32 9
  %46 = ptrtoint ptr %arrayidx26.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %arrayidx26.i, align 1
  %conv27.i = zext i8 %47 to i32
  %shl28.i = shl nuw nsw i32 %conv27.i, 16
  %or29.i = or i32 %or.i, %shl28.i
  %manufacturer_id.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 6
  %48 = ptrtoint ptr %manufacturer_id.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %or29.i, ptr %manufacturer_id.i, align 4
  %arrayidx30.i = getelementptr i8, ptr %13, i32 10
  %49 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %arrayidx30.i, align 1
  %conv31.i = zext i8 %50 to i32
  %arrayidx32.i = getelementptr i8, ptr %13, i32 11
  %51 = ptrtoint ptr %arrayidx32.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %arrayidx32.i, align 1
  %conv33.i = zext i8 %52 to i32
  %shl34.i = shl nuw nsw i32 %conv33.i, 8
  %or35.i = or i32 %shl34.i, %conv31.i
  %product_id.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 7
  %53 = ptrtoint ptr %product_id.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %or35.i, ptr %product_id.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %dec.i)
  %cmp39.i = icmp ugt i32 %dec.i, 14
  br i1 %cmp39.i, label %if.then41.i, label %if.end38.i.if.else42.i_crit_edge

if.end38.i.if.else42.i_crit_edge:                 ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else42.i

if.then41.i:                                      ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #24
  %aux_firmware_revision.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 8
  %add.ptr.i = getelementptr i8, ptr %13, i32 12
  %54 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_loadN_noabort(i32 %54, i32 4)
  %55 = load i32, ptr %add.ptr.i, align 1
  %56 = ptrtoint ptr %aux_firmware_revision.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %aux_firmware_revision.i, align 4
  %aux_firmware_revision_set.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 9
  %57 = ptrtoint ptr %aux_firmware_revision_set.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %bf.load.i = load i8, ptr %aux_firmware_revision_set.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %aux_firmware_revision_set.i, align 4
  br label %do.end52

if.else42.i:                                      ; preds = %if.end38.i.if.else42.i_crit_edge, %if.end38.thread.i
  %aux_firmware_revision_set43.i = getelementptr inbounds %struct.bmc_device, ptr %21, i32 0, i32 3, i32 9
  %58 = ptrtoint ptr %aux_firmware_revision_set43.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %bf.load44.i = load i8, ptr %aux_firmware_revision_set43.i, align 4
  %bf.clear45.i = and i8 %bf.load44.i, 127
  store i8 %bf.clear45.i, ptr %aux_firmware_revision_set43.i, align 4
  br label %do.end52

do.end41:                                         ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #24
  %si_dev42 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %59 = ptrtoint ptr %si_dev42 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %si_dev42, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %60, ptr noundef nonnull @.str.93, ptr noundef nonnull @.str.8, i32 noundef -22) #25
  %61 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %data, align 4
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %62, align 1
  %65 = ptrtoint ptr %bmc36 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %bmc36, align 8
  %cc = getelementptr inbounds %struct.bmc_device, ptr %66, i32 0, i32 12
  %67 = ptrtoint ptr %cc to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 %64, ptr %cc, align 8
  br label %out

do.end52:                                         ; preds = %if.else42.i, %if.then41.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !526
  br label %out

out:                                              ; preds = %do.end52, %do.end41, %do.end21
  %bmc36.sink = phi ptr [ %bmc36, %do.end41 ], [ %bmc36, %do.end52 ], [ %bmc, %do.end21 ]
  %.sink = phi i32 [ 0, %do.end41 ], [ 1, %do.end52 ], [ 0, %do.end21 ]
  %68 = ptrtoint ptr %bmc36.sink to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %bmc36.sink, align 8
  %dyn_id_set48 = getelementptr inbounds %struct.bmc_device, ptr %69, i32 0, i32 4
  %70 = ptrtoint ptr %dyn_id_set48 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %.sink, ptr %dyn_id_set48, align 8
  %waitq = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 7
  tail call void @__wake_up(ptr noundef %waitq, i32 noundef 3, i32 noundef 1, ptr noundef null) #22
  br label %cleanup

cleanup:                                          ; preds = %out, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_link(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cleanup_bmc_device(ptr noundef %ref) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @remove_work_wq, align 4
  %remove_work = getelementptr i8, ptr %ref, i32 4
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %0, ptr noundef %remove_work) #22
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cleanup_bmc_work(ptr noundef %work) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -1188
  %id1 = getelementptr i8, ptr %work, i32 -1184
  %0 = ptrtoint ptr %id1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id1, align 4
  tail call void @platform_device_unregister(ptr noundef %add.ptr) #22
  tail call void @ida_free(ptr noundef nonnull @ipmi_bmc_ida, i32 noundef %1) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ida_alloc_range(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @release_bmc_device(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  tail call void @kfree(ptr noundef %add.ptr) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @platform_device_register(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_link(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kasprintf(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @driver_find_device(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @__find_bmc_guid(ptr noundef %dev, ptr nocapture noundef readonly %data) #1 align 64 {
entry:
  %old.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %type = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type, align 4
  %cmp.not = icmp eq ptr %1, @bmc_device_type
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %dyn_guid_set = getelementptr i8, ptr %dev, i32 1164
  %2 = ptrtoint ptr %dyn_guid_set to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dyn_guid_set, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %land.end

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.end:                                         ; preds = %if.end
  %guid1 = getelementptr i8, ptr %dev, i32 1132
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %guid1, ptr noundef dereferenceable(16) %data, i32 16) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp.i = icmp eq i32 %bcmp.i, 0
  br i1 %cmp.i, label %if.then3, label %land.end.cleanup_crit_edge

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then3:                                         ; preds = %land.end
  %usecount = getelementptr i8, ptr %dev, i32 1168
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i.i) #22
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %usecount, i32 noundef 4) #22
  %4 = ptrtoint ptr %usecount to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %usecount, align 4
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, %if.then3
  %6 = phi i32 [ %5, %if.then3 ], [ %asmresult3.i.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge ]
  %7 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %old.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i.i.i.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i.i.i.i, label %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %do.cond.i.i.i.i

do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end4.i.i.i.i

do.cond.i.i.i.i:                                  ; preds = %do.body.i.i.i.i
  %add.i.i.i.i = add i32 %6, 1
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %usecount, i32 noundef 4) #22
  %call.i3.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i.i, i32 noundef 4) #22
  %8 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %old.i.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %usecount, i32 1, i32 3, i32 1) #22
  br label %do.body.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i:                            ; preds = %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i.i
  %10 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %usecount, ptr %usecount, i32 %9, i32 %add.i.i.i.i, ptr elementtype(i32) %usecount) #22, !srcloc !527
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %10, 0
  %tobool.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i, label %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i:     ; preds = %do.body.i.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i.i = extractvalue { i32, i32 } %10, 1
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i.i, %9
  br i1 %cmp.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, !prof !498

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end4.i.i.i.i

if.end4.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge
  %11 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %old.i.i.i.i, align 4
  %add5.i.i.i.i = add i32 %12, 1
  %13 = or i32 %add5.i.i.i.i, %12
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %.not.i.i.i.i = icmp sgt i32 %13, -1
  br i1 %.not.i.i.i.i, label %if.end4.i.i.i.i.kref_get_unless_zero.exit_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end4.i.i.i.i.kref_get_unless_zero.exit_crit_edge: ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_get_unless_zero.exit

if.then10.i.i.i.i:                                ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %usecount, i32 noundef 0) #22
  br label %kref_get_unless_zero.exit

kref_get_unless_zero.exit:                        ; preds = %if.then10.i.i.i.i, %if.end4.i.i.i.i.kref_get_unless_zero.exit_crit_edge
  %14 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %old.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool12.i.i.i.i = icmp ne i32 %15, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i.i) #22
  %conv.i = zext i1 %tobool12.i.i.i.i to i32
  br label %cleanup

cleanup:                                          ; preds = %kref_get_unless_zero.exit, %land.end.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %conv.i, %kref_get_unless_zero.exit ], [ 0, %land.end.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @__find_bmc_prod_dev_id(ptr noundef %dev, ptr nocapture noundef readonly %data) #1 align 64 {
entry:
  %old.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %type = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type, align 4
  %cmp.not = icmp eq ptr %1, @bmc_device_type
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %product_id = getelementptr i8, ptr %dev, i32 996
  %2 = ptrtoint ptr %product_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %product_id, align 4
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %data, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %5)
  %cmp2 = icmp eq i32 %3, %5
  br i1 %cmp2, label %land.end, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.end:                                         ; preds = %if.end
  %id = getelementptr i8, ptr %dev, i32 984
  %6 = ptrtoint ptr %id to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %id, align 8
  %device_id4 = getelementptr inbounds %struct.prod_dev_id, ptr %data, i32 0, i32 1
  %8 = ptrtoint ptr %device_id4 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %device_id4, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %7, i8 %9)
  %cmp6 = icmp eq i8 %7, %9
  br i1 %cmp6, label %if.then8, label %land.end.cleanup_crit_edge

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then8:                                         ; preds = %land.end
  %usecount = getelementptr i8, ptr %dev, i32 1168
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i.i) #22
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %usecount, i32 noundef 4) #22
  %10 = ptrtoint ptr %usecount to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %usecount, align 4
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, %if.then8
  %12 = phi i32 [ %11, %if.then8 ], [ %asmresult3.i.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge ]
  %13 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %old.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i.i.i.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i.i.i.i, label %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %do.cond.i.i.i.i

do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end4.i.i.i.i

do.cond.i.i.i.i:                                  ; preds = %do.body.i.i.i.i
  %add.i.i.i.i = add i32 %12, 1
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %usecount, i32 noundef 4) #22
  %call.i3.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i.i, i32 noundef 4) #22
  %14 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %old.i.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %usecount, i32 1, i32 3, i32 1) #22
  br label %do.body.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i:                            ; preds = %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i.i
  %16 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %usecount, ptr %usecount, i32 %15, i32 %add.i.i.i.i, ptr elementtype(i32) %usecount) #22, !srcloc !527
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %16, 0
  %tobool.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i, label %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i:     ; preds = %do.body.i.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i.i = extractvalue { i32, i32 } %16, 1
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i.i, %15
  br i1 %cmp.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, !prof !498

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end4.i.i.i.i

if.end4.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge
  %17 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %old.i.i.i.i, align 4
  %add5.i.i.i.i = add i32 %18, 1
  %19 = or i32 %add5.i.i.i.i, %18
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %.not.i.i.i.i = icmp sgt i32 %19, -1
  br i1 %.not.i.i.i.i, label %if.end4.i.i.i.i.kref_get_unless_zero.exit_crit_edge, label %if.then10.i.i.i.i, !prof !498

if.end4.i.i.i.i.kref_get_unless_zero.exit_crit_edge: ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_get_unless_zero.exit

if.then10.i.i.i.i:                                ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %usecount, i32 noundef 0) #22
  br label %kref_get_unless_zero.exit

kref_get_unless_zero.exit:                        ; preds = %if.then10.i.i.i.i, %if.end4.i.i.i.i.kref_get_unless_zero.exit_crit_edge
  %20 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %old.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool12.i.i.i.i = icmp ne i32 %21, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i.i) #22
  %conv.i = zext i1 %tobool12.i.i.i.i to i32
  br label %cleanup

cleanup:                                          ; preds = %kref_get_unless_zero.exit, %land.end.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %conv.i, %kref_get_unless_zero.exit ], [ 0, %land.end.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @platform_device_unregister(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_free(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i16 @bmc_dev_attr_is_visible(ptr noundef %kobj, ptr noundef readonly %attr, i32 noundef %idx) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  %guid_set = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %kobj, i32 -16
  %mode1 = getelementptr inbounds %struct.attribute, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %mode1 to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %mode1, align 4
  %cmp = icmp eq ptr %attr, @dev_attr_aux_firmware_revision
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %2 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.then.cond.end_crit_edge

if.then.cond.end_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

land.lhs.true:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %aux_firmware_revision_set = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 9
  %3 = ptrtoint ptr %aux_firmware_revision_set to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load = load i8, ptr %aux_firmware_revision_set, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool3.not = icmp sgt i8 %bf.load, -1
  %spec.select = select i1 %tobool3.not, i16 0, i16 %1
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true, %if.then.cond.end_crit_edge
  %cond = phi i16 [ 0, %if.then.cond.end_crit_edge ], [ %spec.select, %land.lhs.true ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmp5 = icmp eq ptr %attr, @dev_attr_guid
  br i1 %cmp5, label %if.then7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then7:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %guid_set) #22
  %4 = ptrtoint ptr %guid_set to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 -1, ptr %guid_set, align 1, !annotation !506
  %call.i30 = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef null, ptr noundef nonnull %guid_set, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i30)
  %tobool9.not = icmp eq i32 %call.i30, 0
  br i1 %tobool9.not, label %land.lhs.true10, label %if.then7.cond.end16_crit_edge

if.then7.cond.end16_crit_edge:                    ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end16

land.lhs.true10:                                  ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #24
  %5 = ptrtoint ptr %guid_set to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %guid_set, align 1, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool11.not = icmp eq i8 %6, 0
  %spec.select29 = select i1 %tobool11.not, i16 0, i16 %1
  br label %cond.end16

cond.end16:                                       ; preds = %land.lhs.true10, %if.then7.cond.end16_crit_edge
  %cond17 = phi i16 [ 0, %if.then7.cond.end16_crit_edge ], [ %spec.select29, %land.lhs.true10 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %guid_set) #22
  br label %cleanup

cleanup:                                          ; preds = %cond.end16, %if.end.cleanup_crit_edge, %cond.end
  %retval.0 = phi i16 [ %cond, %cond.end ], [ %cond17, %cond.end16 ], [ %1, %if.end.cleanup_crit_edge ]
  ret i16 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @aux_firmware_rev_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %aux_firmware_revision = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 8
  %arrayidx = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 8, i32 3
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %2 to i32
  %arrayidx2 = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 8, i32 2
  %3 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx2, align 2
  %conv3 = zext i8 %4 to i32
  %arrayidx5 = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 8, i32 1
  %5 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx5, align 1
  %conv6 = zext i8 %6 to i32
  %7 = ptrtoint ptr %aux_firmware_revision to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %aux_firmware_revision, align 4
  %conv9 = zext i8 %8 to i32
  %call10 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.123, i32 noundef %conv, i32 noundef %conv3, i32 noundef %conv6, i32 noundef %conv9) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_emit(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @guid_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %guid_set = alloca i8, align 1
  %guid = alloca %struct.guid_t, align 1
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %guid_set) #22
  %0 = ptrtoint ptr %guid_set to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %guid_set, align 1, !annotation !506
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %guid) #22
  %1 = call ptr @memset(ptr %guid, i32 255, i32 16)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef null, ptr noundef nonnull %guid_set, ptr noundef nonnull %guid, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %guid_set to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %guid_set, align 1, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %call4 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.125, ptr noundef nonnull %guid) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end3 ], [ %call.i, %entry.cleanup_crit_edge ], [ -2, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %guid) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %guid_set) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @device_id_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %1 = ptrtoint ptr %id to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %id, align 4
  %conv = zext i8 %2 to i32
  %call1 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.127, i32 noundef %conv) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @provides_device_sdrs_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %device_revision = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 1
  %1 = ptrtoint ptr %device_revision to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %device_revision, align 1
  %3 = lshr i8 %2, 7
  %4 = zext i8 %3 to i32
  %call1 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.127, i32 noundef %4) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @revision_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %device_revision = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 1
  %1 = ptrtoint ptr %device_revision to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %device_revision, align 1
  %3 = and i8 %2, 15
  %and = zext i8 %3 to i32
  %call1 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.127, i32 noundef %and) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @firmware_revision_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %firmware_revision_1 = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 2
  %1 = ptrtoint ptr %firmware_revision_1 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %firmware_revision_1, align 2
  %conv = zext i8 %2 to i32
  %firmware_revision_2 = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 3
  %3 = ptrtoint ptr %firmware_revision_2 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %firmware_revision_2, align 1
  %conv1 = zext i8 %4 to i32
  %call2 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.131, i32 noundef %conv, i32 noundef %conv1) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ipmi_version_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %ipmi_version = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 4
  %1 = ptrtoint ptr %ipmi_version to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %ipmi_version, align 4
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 15
  %3 = lshr i32 %conv, 4
  %call3 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.133, i32 noundef %and, i32 noundef %3) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @add_dev_support_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %additional_device_support = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 5
  %1 = ptrtoint ptr %additional_device_support to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %additional_device_support, align 1
  %conv = zext i8 %2 to i32
  %call1 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.135, i32 noundef %conv) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @manufacturer_id_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %manufacturer_id = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 6
  %1 = ptrtoint ptr %manufacturer_id to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %manufacturer_id, align 4
  %call1 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.137, i32 noundef %2) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @product_id_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #1 align 64 {
entry:
  %id = alloca %struct.ipmi_device_id, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %id) #22
  %0 = call ptr @memset(ptr %id, i32 255, i32 24)
  %call.i = call fastcc i32 @__bmc_get_device_id(ptr noundef null, ptr noundef %add.ptr, ptr noundef nonnull %id, ptr noundef null, ptr noundef null, i32 noundef -1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %product_id = getelementptr inbounds %struct.ipmi_device_id, ptr %id, i32 0, i32 7
  %1 = ptrtoint ptr %product_id to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %product_id, align 4
  %call1 = call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.139, i32 noundef %2) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %id) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @channel_handler(ptr noundef %intf, ptr nocapture noundef readonly %msg) #1 align 64 {
entry:
  %msg.i = alloca %struct.kernel_ipmi_msg, align 4
  %data.i = alloca [1 x i8], align 1
  %si.i = alloca %struct.ipmi_system_interface_addr, align 8
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %curr_working_cset = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 56
  %0 = ptrtoint ptr %curr_working_cset to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %curr_working_cset, align 8
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 3
  %2 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %3)
  %cmp = icmp eq i32 %3, 12
  br i1 %cmp, label %land.lhs.true, label %entry.out_crit_edge

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

land.lhs.true:                                    ; preds = %entry
  %msg1 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5
  %4 = ptrtoint ptr %msg1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %msg1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %5)
  %cmp2 = icmp eq i8 %5, 7
  br i1 %cmp2, label %land.lhs.true4, label %land.lhs.true.out_crit_edge

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

land.lhs.true4:                                   ; preds = %land.lhs.true
  %cmd = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 1
  %6 = ptrtoint ptr %cmd to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %cmd, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 66, i8 %7)
  %cmp7 = icmp eq i8 %7, 66
  br i1 %cmp7, label %if.then, label %land.lhs.true4.out_crit_edge

land.lhs.true4.out_crit_edge:                     ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.then:                                          ; preds = %land.lhs.true4
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 3
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %data, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %9, align 1
  %12 = zext i8 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.167)
  switch i8 %11, label %if.then.next_channel_crit_edge [
    i8 0, label %if.end28
    i8 -63, label %if.then20
  ]

if.then.next_channel_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_channel

if.then20:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %wchannels = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 57
  %arrayidx21 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 57, i32 %1
  %13 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 1, ptr %arrayidx21, align 4
  %protocol = getelementptr inbounds %struct.ipmi_channel, ptr %arrayidx21, i32 0, i32 1
  %14 = ptrtoint ptr %protocol to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 1, ptr %protocol, align 1
  %add.ptr = getelementptr %struct.ipmi_channel_set, ptr %wchannels, i32 %1
  %channel_list = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 55
  %15 = ptrtoint ptr %channel_list to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %add.ptr, ptr %channel_list, align 4
  %channels_ready = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 59
  %16 = ptrtoint ptr %channels_ready to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %channels_ready, align 4
  %waitq = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 7
  tail call void @__wake_up(ptr noundef %waitq, i32 noundef 3, i32 noundef 1, ptr noundef null) #22
  br label %out

if.end28:                                         ; preds = %if.then
  %data_len = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 2
  %17 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %data_len, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %18)
  %cmp31 = icmp ult i16 %18, 4
  br i1 %cmp31, label %if.end28.next_channel_crit_edge, label %if.end34

if.end28.next_channel_crit_edge:                  ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_channel

if.end34:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #24
  %curr_channel = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 54
  %19 = ptrtoint ptr %curr_channel to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %curr_channel, align 8
  %arrayidx36 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 57, i32 %1
  %arrayidx41 = getelementptr i8, ptr %9, i32 2
  %21 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx41, align 1
  %23 = and i8 %22, 127
  %arrayidx44 = getelementptr %struct.ipmi_channel, ptr %arrayidx36, i32 %20
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %arrayidx44, align 1
  %25 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %data, align 4
  %arrayidx48 = getelementptr i8, ptr %26, i32 3
  %27 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx48, align 1
  %29 = and i8 %28, 31
  %protocol53 = getelementptr %struct.ipmi_channel, ptr %arrayidx36, i32 %20, i32 1
  %30 = ptrtoint ptr %protocol53 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %protocol53, align 1
  br label %next_channel

next_channel:                                     ; preds = %if.end34, %if.end28.next_channel_crit_edge, %if.then.next_channel_crit_edge
  %curr_channel54 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 54
  %31 = ptrtoint ptr %curr_channel54 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %curr_channel54, align 8
  %inc = add i32 %32, 1
  store i32 %inc, ptr %curr_channel54, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %inc)
  %cmp56 = icmp sgt i32 %inc, 15
  %wchannels59 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 57
  %add.ptr61 = getelementptr %struct.ipmi_channel_set, ptr %wchannels59, i32 %1
  %channel_list62 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 55
  %33 = ptrtoint ptr %channel_list62 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %add.ptr61, ptr %channel_list62, align 4
  %channels_ready63 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 59
  %34 = ptrtoint ptr %channels_ready63 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 1, ptr %channels_ready63, align 4
  br i1 %cmp56, label %if.end71.thread, label %if.end71

if.end71.thread:                                  ; preds = %next_channel
  call void @__sanitizer_cov_trace_pc() #24
  %waitq64 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 7
  tail call void @__wake_up(ptr noundef %waitq64, i32 noundef 3, i32 noundef 1, ptr noundef null) #22
  br label %out

if.end71:                                         ; preds = %next_channel
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %msg.i) #22
  %35 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i, i32 0, i32 1
  %36 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i, i32 0, i32 2
  %37 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %data.i) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %si.i) #22
  %38 = ptrtoint ptr %si.i to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 51540590847, ptr %si.i, align 8, !annotation !506
  %39 = ptrtoint ptr %msg.i to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 6, ptr %msg.i, align 4
  %40 = ptrtoint ptr %35 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 66, ptr %35, align 1
  %41 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %data.i, ptr %37, align 4
  %42 = ptrtoint ptr %36 to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 1, ptr %36, align 2
  %conv.i = trunc i32 %inc to i8
  %43 = ptrtoint ptr %data.i to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %conv.i, ptr %data.i, align 1
  %addrinfo.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 58
  %44 = ptrtoint ptr %addrinfo.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %addrinfo.i, align 4
  %lun5.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 58, i32 0, i32 1
  %46 = ptrtoint ptr %lun5.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %lun5.i, align 1
  %call.i = call fastcc i32 @i_ipmi_request(ptr noundef null, ptr noundef %intf, ptr noundef nonnull %si.i, i32 noundef 0, ptr noundef nonnull %msg.i, ptr noundef %intf, ptr noundef null, ptr noundef null, i32 noundef 0, i8 noundef zeroext %45, i8 noundef zeroext %47, i32 noundef -1, i32 noundef 0) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %si.i) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %data.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %msg.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end71.out_crit_edge, label %do.end

if.end71.out_crit_edge:                           ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

do.end:                                           ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #24
  %si_dev = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 18
  %48 = ptrtoint ptr %si_dev to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %si_dev, align 4
  %50 = ptrtoint ptr %curr_channel54 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %curr_channel54, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %49, ptr noundef nonnull @.str.142, ptr noundef nonnull @.str.8, i32 noundef %51, i32 noundef %call.i) #25
  %52 = ptrtoint ptr %channel_list62 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %add.ptr61, ptr %channel_list62, align 4
  %53 = ptrtoint ptr %channels_ready63 to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 1, ptr %channels_ready63, align 4
  %waitq79 = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 7
  call void @__wake_up(ptr noundef %waitq79, i32 noundef 3, i32 noundef 1, ptr noundef null) #22
  br label %out

out:                                              ; preds = %do.end, %if.end71.out_crit_edge, %if.end71.thread, %if.then20, %land.lhs.true4.out_crit_edge, %land.lhs.true.out_crit_edge, %entry.out_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tasklet_kill(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__tasklet_schedule(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ipmi_timeout(ptr nocapture noundef readnone %unused) #1 align 64 {
entry:
  %timeouts.i = alloca %struct.list_head, align 4
  %flags.i = alloca i32, align 4
  %need_timer.i = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @stop_operation, i32 noundef 4) #22
  %0 = load volatile i32, ptr @stop_operation, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @ipmi_interfaces_srcu) #22
  tail call fastcc void @rcu_lock_acquire(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @ipmi_interfaces_srcu, i32 0, i32 16)) #22
  %call2 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true, label %if.end.do.end_crit_edge

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true:                                    ; preds = %if.end
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true6

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true6:                                   ; preds = %land.lhs.true
  %.b51 = load i1, ptr @ipmi_timeout.__warned, align 1
  br i1 %.b51, label %land.lhs.true6.do.end_crit_edge, label %if.then8

land.lhs.true6.do.end_crit_edge:                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

if.then8:                                         ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @ipmi_timeout.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 5006, ptr noundef nonnull @.str.1) #22
  br label %do.end

do.end:                                           ; preds = %if.then8, %land.lhs.true6.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %if.end.do.end_crit_edge
  %.pn58 = load volatile ptr, ptr @ipmi_interfaces, align 4
  %cmp.not60 = icmp eq ptr %.pn58, @ipmi_interfaces
  br i1 %cmp.not60, label %do.end.for.end_crit_edge, label %for.body.lr.ph

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end
  %1 = getelementptr inbounds %struct.list_head, ptr %timeouts.i, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %ipmi_timeout_handler.exit.for.body_crit_edge, %for.body.lr.ph
  %.pn62 = phi ptr [ %.pn58, %for.body.lr.ph ], [ %.pn, %ipmi_timeout_handler.exit.for.body_crit_edge ]
  %need_timer.0.off061 = phi i1 [ false, %for.body.lr.ph ], [ %or50, %ipmi_timeout_handler.exit.for.body_crit_edge ]
  %intf.063 = getelementptr i8, ptr %.pn62, i32 -16
  %event_waiters = getelementptr i8, ptr %.pn62, i32 4192
  %call.i.i52 = call zeroext i1 @__kasan_check_read(ptr noundef %event_waiters, i32 noundef 4) #22
  %2 = ptrtoint ptr %event_waiters to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %event_waiters, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool15.not = icmp eq i32 %3, 0
  br i1 %tobool15.not, label %for.body.if.end22_crit_edge, label %if.then16

for.body.if.end22_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

if.then16:                                        ; preds = %for.body
  %ticks_to_req_ev = getelementptr i8, ptr %.pn62, i32 4196
  %4 = ptrtoint ptr %ticks_to_req_ev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ticks_to_req_ev, align 4
  %dec = add i32 %5, -1
  store i32 %dec, ptr %ticks_to_req_ev, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp18 = icmp eq i32 %dec, 0
  br i1 %cmp18, label %if.then19, label %if.then16.if.end22_crit_edge

if.then16.if.end22_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

if.then19:                                        ; preds = %if.then16
  %maintenance_mode_enable.i = getelementptr i8, ptr %.pn62, i32 4268
  %6 = ptrtoint ptr %maintenance_mode_enable.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %maintenance_mode_enable.i, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.i = icmp eq i8 %7, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then19.ipmi_request_event.exit_crit_edge

if.then19.ipmi_request_event.exit_crit_edge:      ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_request_event.exit

if.end.i:                                         ; preds = %if.then19
  %in_shutdown.i = getelementptr i8, ptr %.pn62, i32 -4
  %8 = ptrtoint ptr %in_shutdown.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %in_shutdown.i, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool1.not.i = icmp eq i8 %9, 0
  br i1 %tobool1.not.i, label %if.then2.i, label %if.end.i.ipmi_request_event.exit_crit_edge

if.end.i.ipmi_request_event.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_request_event.exit

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %handlers.i = getelementptr i8, ptr %.pn62, i32 2292
  %10 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %handlers.i, align 4
  %request_events.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %11, i32 0, i32 6
  %12 = ptrtoint ptr %request_events.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %request_events.i, align 4
  %send_info.i = getelementptr i8, ptr %.pn62, i32 2296
  %14 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %send_info.i, align 8
  call void %13(ptr noundef %15) #22
  br label %ipmi_request_event.exit

ipmi_request_event.exit:                          ; preds = %if.then2.i, %if.end.i.ipmi_request_event.exit_crit_edge, %if.then19.ipmi_request_event.exit_crit_edge
  %16 = ptrtoint ptr %ticks_to_req_ev to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1, ptr %ticks_to_req_ev, align 4
  br label %if.end22

if.end22:                                         ; preds = %ipmi_request_event.exit, %if.then16.if.end22_crit_edge, %for.body.if.end22_crit_edge
  %need_timer.1.off0 = phi i1 [ %need_timer.0.off061, %for.body.if.end22_crit_edge ], [ true, %ipmi_request_event.exit ], [ true, %if.then16.if.end22_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %timeouts.i) #22
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i) #22
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %need_timer.i) #22
  %17 = ptrtoint ptr %need_timer.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 0, ptr %need_timer.i, align 1
  %bmc_registered.i = getelementptr i8, ptr %.pn62, i32 2228
  %18 = ptrtoint ptr %bmc_registered.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %bmc_registered.i, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool.not.i53 = icmp eq i8 %19, 0
  br i1 %tobool.not.i53, label %if.then.i, label %if.end22.if.end4.i_crit_edge

if.end22.if.end4.i_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end4.i

if.then.i:                                        ; preds = %if.end22
  %refcount.i = getelementptr i8, ptr %.pn62, i32 -8
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #22
  %20 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #22, !srcloc !500
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %20, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !501

if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %21 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %.not.i.i.i.i.i = icmp sgt i32 %21, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.kref_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !498

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.kref_get.exit.i_crit_edge:      ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_get.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i.i) #22
  br label %kref_get.exit.i

kref_get.exit.i:                                  ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.kref_get.exit.i_crit_edge
  %bmc_reg_work.i = getelementptr i8, ptr %.pn62, i32 2248
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %22 = load ptr, ptr @system_wq, align 4
  %call.i.i.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %22, ptr noundef %bmc_reg_work.i) #22
  br i1 %call.i.i.i, label %kref_get.exit.i.if.end4.i_crit_edge, label %if.then1.i

kref_get.exit.i.if.end4.i_crit_edge:              ; preds = %kref_get.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end4.i

if.then1.i:                                       ; preds = %kref_get.exit.i
  %call.i.i.i.i.i.i1.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !503
  call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #22
  %23 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #22, !srcloc !504
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %23, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i2.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i2.i, label %if.end5.i.i.i.i.i.kref_put.exit.i_crit_edge, label %if.then10.i.i.i.i.i, !prof !498

if.end5.i.i.i.i.i.kref_put.exit.i_crit_edge:      ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %kref_put.exit.i

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 3) #22
  br label %kref_put.exit.i

if.then.i.i:                                      ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !505
  call fastcc void @intf_free(ptr noundef %refcount.i) #22, !callees !509
  br label %kref_put.exit.i

kref_put.exit.i:                                  ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.kref_put.exit.i_crit_edge
  %24 = ptrtoint ptr %need_timer.i to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 1, ptr %need_timer.i, align 1
  br label %if.end4.i

if.end4.i:                                        ; preds = %kref_put.exit.i, %kref_get.exit.i.if.end4.i_crit_edge, %if.end22.if.end4.i_crit_edge
  %25 = ptrtoint ptr %timeouts.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %timeouts.i, ptr %timeouts.i, align 4
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %timeouts.i, ptr %1, align 4
  %seq_lock.i = getelementptr i8, ptr %.pn62, i32 2304
  %call7.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %seq_lock.i) #22
  %27 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %call7.i, ptr %flags.i, align 4
  %ipmb_maintenance_mode_timeout.i = getelementptr i8, ptr %.pn62, i32 4320
  %28 = ptrtoint ptr %ipmb_maintenance_mode_timeout.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %ipmb_maintenance_mode_timeout.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool10.not.i = icmp eq i32 %29, 0
  br i1 %tobool10.not.i, label %if.end4.i.for.body.i.preheader_crit_edge, label %if.then11.i

if.end4.i.for.body.i.preheader_crit_edge:         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i.preheader

if.then11.i:                                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 1001, i32 %29)
  %cmp13.i = icmp ult i32 %29, 1001
  %sub.i = add i32 %29, -1000
  %.sink.i = select i1 %cmp13.i, i32 0, i32 %sub.i
  %30 = ptrtoint ptr %ipmb_maintenance_mode_timeout.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %.sink.i, ptr %ipmb_maintenance_mode_timeout.i, align 8
  br label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %if.then11.i, %if.end4.i.for.body.i.preheader_crit_edge
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.i.preheader
  %i.07.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.i.preheader ]
  %arrayidx.i = getelementptr %struct.ipmi_smi, ptr %intf.063, i32 0, i32 20, i32 %i.07.i
  call fastcc void @check_msg_timeout(ptr noundef %intf.063, ptr noundef %arrayidx.i, ptr noundef nonnull %timeouts.i, i32 noundef %i.07.i, ptr noundef nonnull %flags.i, ptr noundef nonnull %need_timer.i) #22
  %inc.i = add nuw nsw i32 %i.07.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 64
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %31 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags.i, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock.i, i32 noundef %32) #22
  %33 = ptrtoint ptr %timeouts.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %timeouts.i, align 4
  %cmp30.not8.i = icmp eq ptr %34, %timeouts.i
  br i1 %cmp30.not8.i, label %for.end.i.for.end39.i_crit_edge, label %for.body32.lr.ph.i

for.end.i.for.end39.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end39.i

for.body32.lr.ph.i:                               ; preds = %for.end.i
  %arrayidx.i.i.i = getelementptr i8, ptr %.pn62, i32 4452
  %arrayidx2.i.i.i = getelementptr i8, ptr %.pn62, i32 4448
  br label %for.body32.i

for.body32.i:                                     ; preds = %deliver_err_response.exit.i.for.body32.i_crit_edge, %for.body32.lr.ph.i
  %msg.09.i = phi ptr [ %34, %for.body32.lr.ph.i ], [ %msg2.0.i, %deliver_err_response.exit.i.for.body32.i_crit_edge ]
  %35 = ptrtoint ptr %msg.09.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %msg2.0.i = load ptr, ptr %msg.09.i, align 4
  %recv_type.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg.09.i, i32 0, i32 1
  %36 = ptrtoint ptr %recv_type.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 1, ptr %recv_type.i.i, align 4
  %msg_data.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg.09.i, i32 0, i32 8
  %37 = ptrtoint ptr %msg_data.i.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 -61, ptr %msg_data.i.i, align 4
  %msg1.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg.09.i, i32 0, i32 5
  %38 = ptrtoint ptr %msg1.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %msg1.i.i, align 4
  %40 = or i8 %39, 1
  store i8 %40, ptr %msg1.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg.09.i, i32 0, i32 5, i32 2
  %41 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 1, ptr %data_len.i.i, align 2
  %data.i.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg.09.i, i32 0, i32 5, i32 3
  %42 = ptrtoint ptr %data.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %msg_data.i.i, ptr %data.i.i, align 4
  %call.i.i3.i = call fastcc i32 @deliver_response(ptr noundef %intf.063, ptr noundef %msg.09.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i3.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i3.i, 0
  br i1 %tobool.not.i.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %for.body32.i
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.i.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %arrayidx.i.i.i, i32 1, i32 3, i32 1) #22
  %43 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.i.i, ptr %arrayidx.i.i.i, i32 1, ptr elementtype(i32) %arrayidx.i.i.i) #22, !srcloc !514
  br label %deliver_err_response.exit.i

if.else.i.i.i:                                    ; preds = %for.body32.i
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i5.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx2.i.i.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %arrayidx2.i.i.i, i32 1, i32 3, i32 1) #22
  %44 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx2.i.i.i, ptr %arrayidx2.i.i.i, i32 1, ptr elementtype(i32) %arrayidx2.i.i.i) #22, !srcloc !514
  br label %deliver_err_response.exit.i

deliver_err_response.exit.i:                      ; preds = %if.else.i.i.i, %if.then.i.i.i
  %cmp30.not.i = icmp eq ptr %msg2.0.i, %timeouts.i
  br i1 %cmp30.not.i, label %deliver_err_response.exit.i.for.end39.i_crit_edge, label %deliver_err_response.exit.i.for.body32.i_crit_edge

deliver_err_response.exit.i.for.body32.i_crit_edge: ; preds = %deliver_err_response.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body32.i

deliver_err_response.exit.i.for.end39.i_crit_edge: ; preds = %deliver_err_response.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end39.i

for.end39.i:                                      ; preds = %deliver_err_response.exit.i.for.end39.i_crit_edge, %for.end.i.for.end39.i_crit_edge
  %auto_maintenance_timeout.i = getelementptr i8, ptr %.pn62, i32 4272
  %45 = ptrtoint ptr %auto_maintenance_timeout.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %auto_maintenance_timeout.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %cmp40.i = icmp sgt i32 %46, 0
  br i1 %cmp40.i, label %do.body44.i, label %for.end39.i.if.end70.i_crit_edge

for.end39.i.if.end70.i_crit_edge:                 ; preds = %for.end39.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end70.i

do.body44.i:                                      ; preds = %for.end39.i
  %maintenance_mode_lock.i = getelementptr i8, ptr %.pn62, i32 4276
  %call51.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %maintenance_mode_lock.i) #22
  %47 = ptrtoint ptr %auto_maintenance_timeout.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %auto_maintenance_timeout.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp57.i = icmp sgt i32 %48, 0
  br i1 %cmp57.i, label %if.then59.i, label %do.body44.i.if.end68.i_crit_edge

do.body44.i.if.end68.i_crit_edge:                 ; preds = %do.body44.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end68.i

if.then59.i:                                      ; preds = %do.body44.i
  %sub61.i = add nsw i32 %48, -1000
  %49 = ptrtoint ptr %auto_maintenance_timeout.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %sub61.i, ptr %auto_maintenance_timeout.i, align 8
  %maintenance_mode.i = getelementptr i8, ptr %.pn62, i32 4264
  %50 = ptrtoint ptr %maintenance_mode.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %maintenance_mode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool62.not.i = icmp eq i32 %51, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1001, i32 %48)
  %cmp64.i = icmp ult i32 %48, 1001
  %or.cond.i = select i1 %tobool62.not.i, i1 %cmp64.i, i1 false
  br i1 %or.cond.i, label %if.then66.i, label %if.then59.i.if.end68.i_crit_edge

if.then59.i.if.end68.i_crit_edge:                 ; preds = %if.then59.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end68.i

if.then66.i:                                      ; preds = %if.then59.i
  %maintenance_mode_enable.i54 = getelementptr i8, ptr %.pn62, i32 4268
  %52 = ptrtoint ptr %maintenance_mode_enable.i54 to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 0, ptr %maintenance_mode_enable.i54, align 4
  %handlers.i.i = getelementptr i8, ptr %.pn62, i32 2292
  %53 = ptrtoint ptr %handlers.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %handlers.i.i, align 4
  %set_maintenance_mode.i.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %54, i32 0, i32 11
  %55 = ptrtoint ptr %set_maintenance_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %set_maintenance_mode.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %56, null
  br i1 %tobool.not.i.i, label %if.then66.i.if.end68.i_crit_edge, label %if.then.i4.i

if.then66.i.if.end68.i_crit_edge:                 ; preds = %if.then66.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end68.i

if.then.i4.i:                                     ; preds = %if.then66.i
  call void @__sanitizer_cov_trace_pc() #24
  %send_info.i.i = getelementptr i8, ptr %.pn62, i32 2296
  %57 = ptrtoint ptr %send_info.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %send_info.i.i, align 8
  call void %56(ptr noundef %58, i1 noundef zeroext false) #22
  br label %if.end68.i

if.end68.i:                                       ; preds = %if.then.i4.i, %if.then66.i.if.end68.i_crit_edge, %if.then59.i.if.end68.i_crit_edge, %do.body44.i.if.end68.i_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %maintenance_mode_lock.i, i32 noundef %call51.i) #22
  br label %if.end70.i

if.end70.i:                                       ; preds = %if.end68.i, %for.end39.i.if.end70.i_crit_edge
  %state.i.i = getelementptr i8, ptr %.pn62, i32 3948
  %call.i.i55 = call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %state.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i55)
  %tobool.not.i5.i = icmp eq i32 %call.i.i55, 0
  br i1 %tobool.not.i5.i, label %if.then.i6.i, label %if.end70.i.ipmi_timeout_handler.exit_crit_edge

if.end70.i.ipmi_timeout_handler.exit_crit_edge:   ; preds = %if.end70.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_timeout_handler.exit

if.then.i6.i:                                     ; preds = %if.end70.i
  call void @__sanitizer_cov_trace_pc() #24
  %recv_tasklet.i = getelementptr i8, ptr %.pn62, i32 3944
  call void @__tasklet_schedule(ptr noundef %recv_tasklet.i) #22
  br label %ipmi_timeout_handler.exit

ipmi_timeout_handler.exit:                        ; preds = %if.then.i6.i, %if.end70.i.ipmi_timeout_handler.exit_crit_edge
  %59 = ptrtoint ptr %need_timer.i to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %need_timer.i, align 1, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %60)
  %tobool71.i = icmp ne i8 %60, 0
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %need_timer.i) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %timeouts.i) #22
  %or50 = or i1 %need_timer.1.off0, %tobool71.i
  %61 = ptrtoint ptr %.pn62 to i32
  call void @__asan_load4_noabort(i32 %61)
  %.pn = load volatile ptr, ptr %.pn62, align 4
  %cmp.not = icmp eq ptr %.pn, @ipmi_interfaces
  br i1 %cmp.not, label %ipmi_timeout_handler.exit.for.end_crit_edge, label %ipmi_timeout_handler.exit.for.body_crit_edge

ipmi_timeout_handler.exit.for.body_crit_edge:     ; preds = %ipmi_timeout_handler.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

ipmi_timeout_handler.exit.for.end_crit_edge:      ; preds = %ipmi_timeout_handler.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %ipmi_timeout_handler.exit.for.end_crit_edge, %do.end.for.end_crit_edge
  %need_timer.0.off0.lcssa = phi i1 [ false, %do.end.for.end_crit_edge ], [ %or50, %ipmi_timeout_handler.exit.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.i)
  %tobool.not.i56 = icmp ult i32 %call.i, 2
  br i1 %tobool.not.i56, label %for.end.srcu_read_unlock.exit_crit_edge, label %land.rhs.i

for.end.srcu_read_unlock.exit_crit_edge:          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

land.rhs.i:                                       ; preds = %for.end
  %.b40.i = load i1, ptr @srcu_read_unlock.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i.srcu_read_unlock.exit_crit_edge, label %if.then.i57, !prof !498

land.rhs.i.srcu_read_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %srcu_read_unlock.exit

if.then.i57:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 189, i32 noundef 9, ptr noundef null) #22
  br label %srcu_read_unlock.exit

srcu_read_unlock.exit:                            ; preds = %if.then.i57, %land.rhs.i.srcu_read_unlock.exit_crit_edge, %for.end.srcu_read_unlock.exit_crit_edge
  call fastcc void @rcu_lock_release(ptr noundef getelementptr inbounds (%struct.srcu_struct, ptr @ipmi_interfaces_srcu, i32 0, i32 16)) #22
  call void @__srcu_read_unlock(ptr noundef nonnull @ipmi_interfaces_srcu, i32 noundef %call.i) #22
  br i1 %need_timer.0.off0.lcssa, label %if.then36, label %srcu_read_unlock.exit.cleanup_crit_edge

srcu_read_unlock.exit.cleanup_crit_edge:          ; preds = %srcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then36:                                        ; preds = %srcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %62 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %62, 100
  %call37 = call i32 @mod_timer(ptr noundef nonnull @ipmi_timer, i32 noundef %add) #22
  br label %cleanup

cleanup:                                          ; preds = %if.then36, %srcu_read_unlock.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @atomic_notifier_chain_register(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @driver_register(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @check_msg_timeout(ptr noundef %intf, ptr nocapture noundef %ent, ptr noundef %timeouts, i32 noundef %slot, ptr nocapture noundef %flags, ptr nocapture noundef writeonly %need_timer) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %in_shutdown = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 3
  %0 = ptrtoint ptr %in_shutdown to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %in_shutdown, align 4, !range !507
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup70_crit_edge

entry.cleanup70_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup70

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %ent to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %ent, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool1.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool1.not, label %if.end.cleanup70_crit_edge, label %if.end3

if.end.cleanup70_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup70

if.end3:                                          ; preds = %if.end
  %timeout = getelementptr inbounds %struct.seq_table, ptr %ent, i32 0, i32 1
  %3 = ptrtoint ptr %timeout to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %timeout, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %4)
  %cmp = icmp ugt i32 %4, 1000
  br i1 %cmp, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  %sub = add i32 %4, -1000
  %5 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %sub, ptr %timeout, align 4
  %6 = ptrtoint ptr %need_timer to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 1, ptr %need_timer, align 1
  br label %cleanup70

if.end6:                                          ; preds = %if.end3
  %retries_left = getelementptr inbounds %struct.seq_table, ptr %ent, i32 0, i32 3
  %7 = ptrtoint ptr %retries_left to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %retries_left, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp7 = icmp eq i32 %8, 0
  br i1 %cmp7, label %if.then8, label %if.else26

if.then8:                                         ; preds = %if.end6
  %bf.clear = and i8 %bf.load, 127
  %9 = ptrtoint ptr %ent to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %bf.clear, ptr %ent, align 4
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %10 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %handlers.i, align 4
  %set_need_watch.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %11, i32 0, i32 7
  %12 = ptrtoint ptr %set_need_watch.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %set_need_watch.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.then8.smi_remove_watch.exit_crit_edge, label %do.body1.i

if.then8.smi_remove_watch.exit_crit_edge:         ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #24
  br label %smi_remove_watch.exit

do.body1.i:                                       ; preds = %if.then8
  %watch_lock.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 39
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %watch_lock.i) #22
  %response_waiters.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 42
  %14 = ptrtoint ptr %response_waiters.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %response_waiters.i, align 4
  %dec.i = add i32 %15, -1
  store i32 %dec.i, ptr %response_waiters.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool19.not.i = icmp ne i32 %dec.i, 0
  %spec.select.i = zext i1 %tobool19.not.i to i32
  %watchdog_waiters22.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 41
  %16 = ptrtoint ptr %watchdog_waiters22.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %watchdog_waiters22.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool23.not.i = icmp eq i32 %17, 0
  %or25.i = or i32 %spec.select.i, 2
  %flags.addr.1.i = select i1 %tobool23.not.i, i32 %spec.select.i, i32 %or25.i
  %command_waiters27.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 40
  %18 = ptrtoint ptr %command_waiters27.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %command_waiters27.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool28.not.i = icmp eq i32 %19, 0
  %or30.i = or i32 %flags.addr.1.i, 4
  %flags.addr.2.i = select i1 %tobool28.not.i, i32 %flags.addr.1.i, i32 %or30.i
  %last_watch_mask.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 43
  %20 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %last_watch_mask.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %flags.addr.2.i)
  %cmp32.not.i = icmp eq i32 %21, %flags.addr.2.i
  br i1 %cmp32.not.i, label %do.body1.i.if.end39.i_crit_edge, label %if.then34.i

do.body1.i.if.end39.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39.i

if.then34.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #24
  %22 = ptrtoint ptr %last_watch_mask.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %flags.addr.2.i, ptr %last_watch_mask.i, align 8
  %23 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %handlers.i, align 4
  %set_need_watch37.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %24, i32 0, i32 7
  %25 = ptrtoint ptr %set_need_watch37.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %set_need_watch37.i, align 4
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %27 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %send_info.i, align 8
  tail call void %26(ptr noundef %28, i32 noundef %flags.addr.2.i) #22
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then34.i, %do.body1.i.if.end39.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %watch_lock.i, i32 noundef %call2.i) #22
  br label %smi_remove_watch.exit

smi_remove_watch.exit:                            ; preds = %if.end39.i, %if.then8.smi_remove_watch.exit_crit_edge
  %recv_msg = getelementptr inbounds %struct.seq_table, ptr %ent, i32 0, i32 5
  %29 = ptrtoint ptr %recv_msg to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %recv_msg, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %timeouts, i32 0, i32 1
  %31 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %prev.i, align 4
  %call.i.i8 = tail call zeroext i1 @__list_add_valid(ptr noundef %30, ptr noundef %32, ptr noundef %timeouts) #22
  br i1 %call.i.i8, label %if.end.i.i, label %smi_remove_watch.exit.list_add_tail.exit_crit_edge

smi_remove_watch.exit.list_add_tail.exit_crit_edge: ; preds = %smi_remove_watch.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %smi_remove_watch.exit
  call void @__sanitizer_cov_trace_pc() #24
  %33 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev.i, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %timeouts, ptr %30, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %35 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %32, ptr %prev3.i.i, align 4
  %36 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %30, ptr %32, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %smi_remove_watch.exit.list_add_tail.exit_crit_edge
  %37 = ptrtoint ptr %ent to i32
  call void @__asan_load1_noabort(i32 %37)
  %bf.load10 = load i8, ptr %ent, align 4
  %38 = and i8 %bf.load10, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %38)
  %tobool14.not = icmp eq i8 %38, 0
  br i1 %tobool14.not, label %if.else, label %if.then15

if.then15:                                        ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 8
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx, i32 1, i32 3, i32 1) #22
  %39 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx, ptr %arrayidx, i32 1, ptr elementtype(i32) %arrayidx) #22, !srcloc !514
  br label %cleanup70

if.else:                                          ; preds = %list_add_tail.exit
  %40 = ptrtoint ptr %recv_msg to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %recv_msg, align 4
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %41, i32 0, i32 3
  %42 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %43)
  %cmp.i.not = icmp eq i32 %43, 4
  br i1 %cmp.i.not, label %if.then18, label %if.else21

if.then18:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx20 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 16
  %call.i.i2 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx20, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx20, i32 1, i32 3, i32 1) #22
  %44 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx20, ptr %arrayidx20, i32 1, ptr elementtype(i32) %arrayidx20) #22, !srcloc !514
  br label %cleanup70

if.else21:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx23 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 7
  %call.i.i3 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx23, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx23, i32 1, i32 3, i32 1) #22
  %45 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx23, ptr %arrayidx23, i32 1, ptr elementtype(i32) %arrayidx23) #22, !srcloc !514
  br label %cleanup70

if.else26:                                        ; preds = %if.end6
  %46 = ptrtoint ptr %need_timer to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 1, ptr %need_timer, align 1
  %47 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 60000, ptr %timeout, align 4
  %48 = ptrtoint ptr %retries_left to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %retries_left, align 4
  %dec = add i32 %49, -1
  store i32 %dec, ptr %retries_left, align 4
  %recv_msg29 = getelementptr inbounds %struct.seq_table, ptr %ent, i32 0, i32 5
  %50 = ptrtoint ptr %recv_msg29 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %recv_msg29, align 4
  %seqid = getelementptr inbounds %struct.seq_table, ptr %ent, i32 0, i32 4
  %52 = ptrtoint ptr %seqid to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %seqid, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %54 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %54, i32 noundef 2592, i32 noundef 576) #27
  %tobool.not.i.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i.i, label %if.then32, label %if.end.i

if.end.i:                                         ; preds = %if.else26
  %done.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i.i.i, i32 0, i32 8
  %55 = ptrtoint ptr %done.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @free_smi_msg, ptr %done.i.i, align 4
  %user_data.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i.i.i, i32 0, i32 3
  %56 = ptrtoint ptr %user_data.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr null, ptr %user_data.i.i, align 8
  %type.i.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i.i.i, i32 0, i32 1
  %57 = ptrtoint ptr %type.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %type.i.i, align 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @smi_msg_inuse_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @smi_msg_inuse_count, i32 1, i32 3, i32 1) #22
  %58 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @smi_msg_inuse_count, ptr nonnull @smi_msg_inuse_count, i32 1, ptr nonnull elementtype(i32) @smi_msg_inuse_count) #22, !srcloc !514
  %data.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i.i.i, i32 0, i32 5
  %data1.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %51, i32 0, i32 5, i32 3
  %59 = ptrtoint ptr %data1.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %data1.i, align 4
  %data_len.i = getelementptr inbounds %struct.ipmi_recv_msg, ptr %51, i32 0, i32 5, i32 2
  %61 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %data_len.i, align 2
  %conv.i9 = zext i16 %62 to i32
  %63 = call ptr @memcpy(ptr %data.i, ptr %60, i32 %conv.i9)
  %data_size.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i.i.i, i32 0, i32 4
  %64 = ptrtoint ptr %data_size.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %conv.i9, ptr %data_size.i, align 4
  %shl.i = shl i32 %slot, 26
  %and7.i = and i32 %53, 67108863
  %or.i = or i32 %and7.i, %shl.i
  %msgid.i = getelementptr inbounds %struct.ipmi_smi_msg, ptr %call7.i.i.i, i32 0, i32 2
  %65 = ptrtoint ptr %msgid.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %or.i, ptr %msgid.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @smi_from_recv_msg.__UNIQUE_ID_ddebug280, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@check_msg_timeout, %if.then12.i)) #22
          to label %if.end44 [label %if.then12.i], !srcloc !516

if.then12.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %66 = ptrtoint ptr %data_size.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %data_size.i, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @smi_from_recv_msg.__UNIQUE_ID_ddebug280, ptr noundef nonnull @.str.154, ptr noundef nonnull @.str.8, i32 noundef %67, ptr noundef %data.i) #22
  br label %if.end44

if.then32:                                        ; preds = %if.else26
  %68 = ptrtoint ptr %recv_msg29 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %recv_msg29, align 4
  %addr34 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %69, i32 0, i32 3
  %70 = ptrtoint ptr %addr34 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %addr34, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %71)
  %cmp.i10.not = icmp eq i32 %71, 4
  br i1 %cmp.i10.not, label %if.then37, label %if.else40

if.then37:                                        ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx39 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 27
  %call.i.i4 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx39, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx39, i32 1, i32 3, i32 1) #22
  %72 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx39, ptr %arrayidx39, i32 1, ptr elementtype(i32) %arrayidx39) #22, !srcloc !514
  br label %cleanup70

if.else40:                                        ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx42 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 26
  %call.i.i5 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx42, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx42, i32 1, i32 3, i32 1) #22
  %73 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx42, ptr %arrayidx42, i32 1, ptr elementtype(i32) %arrayidx42) #22, !srcloc !514
  br label %cleanup70

if.end44:                                         ; preds = %if.then12.i, %if.end.i
  %seq_lock = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 19
  %74 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %flags, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %seq_lock, i32 noundef %75) #22
  %handlers = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %76 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %handlers, align 4
  %tobool45.not = icmp eq ptr %77, null
  br i1 %tobool45.not, label %if.else59, label %if.then46

if.then46:                                        ; preds = %if.end44
  %78 = ptrtoint ptr %recv_msg29 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %recv_msg29, align 4
  %addr48 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %79, i32 0, i32 3
  %80 = ptrtoint ptr %addr48 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %addr48, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %81)
  %cmp.i12.not = icmp eq i32 %81, 4
  br i1 %cmp.i12.not, label %if.then51, label %if.else54

if.then51:                                        ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx53 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 15
  %call.i.i6 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx53, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx53, i32 1, i32 3, i32 1) #22
  %82 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx53, ptr %arrayidx53, i32 1, ptr elementtype(i32) %arrayidx53) #22, !srcloc !514
  br label %if.end57

if.else54:                                        ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx56 = getelementptr %struct.ipmi_smi, ptr %intf, i32 0, i32 60, i32 6
  %call.i.i7 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx56, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %arrayidx56, i32 1, i32 3, i32 1) #22
  %83 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx56, ptr %arrayidx56, i32 1, ptr elementtype(i32) %arrayidx56) #22, !srcloc !514
  br label %if.end57

if.end57:                                         ; preds = %if.else54, %if.then51
  %84 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %handlers, align 4
  tail call fastcc void @smi_send(ptr noundef %intf, ptr noundef %85, ptr noundef nonnull %call7.i.i.i, i32 noundef 0)
  br label %do.body61

if.else59:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #24
  %86 = ptrtoint ptr %done.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %done.i.i, align 4
  tail call void %87(ptr noundef nonnull %call7.i.i.i) #22
  br label %do.body61

do.body61:                                        ; preds = %if.else59, %if.end57
  %call66 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %seq_lock) #22
  %88 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %call66, ptr %flags, align 4
  br label %cleanup70

cleanup70:                                        ; preds = %do.body61, %if.else40, %if.then37, %if.else21, %if.then18, %if.then15, %if.then4, %if.end.cleanup70_crit_edge, %entry.cleanup70_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @panic_event(ptr nocapture noundef readnone %this, i32 noundef %event, ptr noundef readonly %ptr) #1 align 64 {
entry:
  %msg.i = alloca %struct.kernel_ipmi_msg, align 4
  %data.i = alloca [16 x i8], align 1
  %addr.i = alloca %struct.ipmi_addr, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %.b = load i1, ptr @has_panicked, align 4
  br i1 %.b, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  store i1 true, ptr @has_panicked, align 4
  %call = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %land.lhs.true, label %if.end.do.end_crit_edge

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true:                                    ; preds = %if.end
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true4

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b111114 = load i1, ptr @panic_event.__warned, align 1
  br i1 %.b111114, label %land.lhs.true4.do.end_crit_edge, label %if.then6

land.lhs.true4.do.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

if.then6:                                         ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @panic_event.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 5320, ptr noundef nonnull @.str.1) #22
  br label %do.end

do.end:                                           ; preds = %if.then6, %land.lhs.true4.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %if.end.do.end_crit_edge
  %.pn122 = load volatile ptr, ptr @ipmi_interfaces, align 4
  %cmp.not124 = icmp eq ptr %.pn122, @ipmi_interfaces
  br i1 %cmp.not124, label %do.end.cleanup_crit_edge, label %for.body.lr.ph

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.body.lr.ph:                                   ; preds = %do.end
  %0 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i, i32 0, i32 1
  %1 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i, i32 0, i32 2
  %2 = getelementptr inbounds %struct.kernel_ipmi_msg, ptr %msg.i, i32 0, i32 3
  %3 = getelementptr inbounds [16 x i8], ptr %data.i, i32 0, i32 1
  %4 = getelementptr inbounds [16 x i8], ptr %data.i, i32 0, i32 2
  %5 = getelementptr inbounds [16 x i8], ptr %data.i, i32 0, i32 3
  %6 = getelementptr inbounds [16 x i8], ptr %data.i, i32 0, i32 4
  %7 = getelementptr inbounds [16 x i8], ptr %data.i, i32 0, i32 5
  %8 = getelementptr inbounds [16 x i8], ptr %data.i, i32 0, i32 6
  %9 = getelementptr inbounds [16 x i8], ptr %data.i, i32 0, i32 7
  %10 = getelementptr inbounds i8, ptr %addr.i, i32 4
  %lun.i = getelementptr inbounds %struct.ipmi_system_interface_addr, ptr %addr.i, i32 0, i32 2
  %tobool.not.i = icmp eq ptr %ptr, null
  %arrayidx9.i = getelementptr i8, ptr %ptr, i32 1
  %arrayidx11.i = getelementptr i8, ptr %ptr, i32 2
  %lun52.i = getelementptr inbounds %struct.ipmi_ipmb_addr, ptr %addr.i, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc75.for.body_crit_edge, %for.body.lr.ph
  %.pn125 = phi ptr [ %.pn122, %for.body.lr.ph ], [ %.pn, %for.inc75.for.body_crit_edge ]
  %intf.0126 = getelementptr i8, ptr %.pn125, i32 -16
  %handlers = getelementptr i8, ptr %.pn125, i32 2292
  %11 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %handlers, align 4
  %tobool12.not = icmp eq ptr %12, null
  br i1 %tobool12.not, label %for.body.for.inc75_crit_edge, label %lor.lhs.false

for.body.for.inc75_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc75

lor.lhs.false:                                    ; preds = %for.body
  %intf_num = getelementptr i8, ptr %.pn125, i32 -12
  %13 = ptrtoint ptr %intf_num to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %intf_num, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %14)
  %cmp13 = icmp eq i32 %14, -1
  br i1 %cmp13, label %lor.lhs.false.for.inc75_crit_edge, label %if.end15

lor.lhs.false.for.inc75_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc75

if.end15:                                         ; preds = %lor.lhs.false
  %poll = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %12, i32 0, i32 10
  %15 = ptrtoint ptr %poll to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %poll, align 4
  %tobool17.not = icmp eq ptr %16, null
  br i1 %tobool17.not, label %if.end15.for.inc75_crit_edge, label %if.end19

if.end15.for.inc75_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc75

if.end19:                                         ; preds = %if.end15
  %xmit_msgs_lock = getelementptr i8, ptr %.pn125, i32 3968
  %call.i = call i32 @_raw_spin_trylock(ptr noundef %xmit_msgs_lock) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool21.not = icmp eq i32 %call.i, 0
  br i1 %tobool21.not, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #24
  %xmit_msgs = getelementptr i8, ptr %.pn125, i32 4012
  %17 = ptrtoint ptr %xmit_msgs to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %xmit_msgs, ptr %xmit_msgs, align 4
  %prev.i = getelementptr i8, ptr %.pn125, i32 4016
  %18 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %xmit_msgs, ptr %prev.i, align 4
  %hp_xmit_msgs = getelementptr i8, ptr %.pn125, i32 4024
  %19 = ptrtoint ptr %hp_xmit_msgs to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %hp_xmit_msgs, ptr %hp_xmit_msgs, align 4
  %prev.i116 = getelementptr i8, ptr %.pn125, i32 4028
  %20 = ptrtoint ptr %prev.i116 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %hp_xmit_msgs, ptr %prev.i116, align 4
  br label %if.end24

if.else:                                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #24
  call void @_raw_spin_unlock(ptr noundef %xmit_msgs_lock) #22
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then22
  %waiting_rcv_msgs_lock = getelementptr i8, ptr %.pn125, i32 3888
  %call.i115 = call i32 @_raw_spin_trylock(ptr noundef %waiting_rcv_msgs_lock) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i115)
  %tobool26.not = icmp eq i32 %call.i115, 0
  br i1 %tobool26.not, label %if.then27, label %if.else28

if.then27:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  %waiting_rcv_msgs = getelementptr i8, ptr %.pn125, i32 3932
  %21 = ptrtoint ptr %waiting_rcv_msgs to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %waiting_rcv_msgs, ptr %waiting_rcv_msgs, align 4
  %prev.i117 = getelementptr i8, ptr %.pn125, i32 3936
  %22 = ptrtoint ptr %prev.i117 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %waiting_rcv_msgs, ptr %prev.i117, align 4
  br label %if.end30

if.else28:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #24
  call void @_raw_spin_unlock(ptr noundef %waiting_rcv_msgs_lock) #22
  br label %if.end30

if.end30:                                         ; preds = %if.else28, %if.then27
  %run_to_completion = getelementptr i8, ptr %.pn125, i32 4552
  %23 = ptrtoint ptr %run_to_completion to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 1, ptr %run_to_completion, align 8
  %24 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %handlers, align 4
  %set_run_to_completion = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %25, i32 0, i32 9
  %26 = ptrtoint ptr %set_run_to_completion to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %set_run_to_completion, align 4
  %tobool32.not = icmp eq ptr %27, null
  br i1 %tobool32.not, label %if.end30.do.body37_crit_edge, label %if.then33

if.end30.do.body37_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body37

if.then33:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #24
  %send_info = getelementptr i8, ptr %.pn125, i32 2296
  %28 = ptrtoint ptr %send_info to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %send_info, align 8
  call void %27(ptr noundef %29, i1 noundef zeroext true) #22
  br label %do.body37

do.body37:                                        ; preds = %if.then33, %if.end30.do.body37_crit_edge
  %call38 = call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %land.lhs.true40, label %do.body37.do.end48_crit_edge

do.body37.do.end48_crit_edge:                     ; preds = %do.body37
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end48

land.lhs.true40:                                  ; preds = %do.body37
  %call41 = call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %land.lhs.true40.do.end48_crit_edge, label %land.lhs.true43

land.lhs.true40.do.end48_crit_edge:               ; preds = %land.lhs.true40
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end48

land.lhs.true43:                                  ; preds = %land.lhs.true40
  %.b112113 = load i1, ptr @panic_event.__warned.155, align 1
  br i1 %.b112113, label %land.lhs.true43.do.end48_crit_edge, label %if.then45

land.lhs.true43.do.end48_crit_edge:               ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end48

if.then45:                                        ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @panic_event.__warned.155, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 5350, ptr noundef nonnull @.str.1) #22
  br label %do.end48

do.end48:                                         ; preds = %if.then45, %land.lhs.true43.do.end48_crit_edge, %land.lhs.true40.do.end48_crit_edge, %do.body37.do.end48_crit_edge
  %users = getelementptr i8, ptr %.pn125, i32 8
  %30 = ptrtoint ptr %users to i32
  call void @__asan_load4_noabort(i32 %30)
  %user.0119 = load volatile ptr, ptr %users, align 4
  %cmp59.not120 = icmp eq ptr %user.0119, %users
  br i1 %cmp59.not120, label %do.end48.for.end_crit_edge, label %do.end48.for.body60_crit_edge

do.end48.for.body60_crit_edge:                    ; preds = %do.end48
  br label %for.body60

do.end48.for.end_crit_edge:                       ; preds = %do.end48
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body60:                                       ; preds = %for.inc.for.body60_crit_edge, %do.end48.for.body60_crit_edge
  %user.0121 = phi ptr [ %user.0, %for.inc.for.body60_crit_edge ], [ %user.0119, %do.end48.for.body60_crit_edge ]
  %handler = getelementptr inbounds %struct.ipmi_user, ptr %user.0121, i32 0, i32 4
  %31 = ptrtoint ptr %handler to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %handler, align 4
  %ipmi_panic_handler = getelementptr inbounds %struct.ipmi_user_hndl, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %ipmi_panic_handler to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ipmi_panic_handler, align 4
  %tobool61.not = icmp eq ptr %34, null
  br i1 %tobool61.not, label %for.body60.for.inc_crit_edge, label %if.then62

for.body60.for.inc_crit_edge:                     ; preds = %for.body60
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then62:                                        ; preds = %for.body60
  call void @__sanitizer_cov_trace_pc() #24
  %handler_data = getelementptr inbounds %struct.ipmi_user, ptr %user.0121, i32 0, i32 5
  %35 = ptrtoint ptr %handler_data to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %handler_data, align 4
  call void %34(ptr noundef %36) #22
  br label %for.inc

for.inc:                                          ; preds = %if.then62, %for.body60.for.inc_crit_edge
  %37 = ptrtoint ptr %user.0121 to i32
  call void @__asan_load4_noabort(i32 %37)
  %user.0 = load volatile ptr, ptr %user.0121, align 4
  %cmp59.not = icmp eq ptr %user.0, %users
  br i1 %cmp59.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body60_crit_edge

for.inc.for.body60_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body60

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end48.for.end_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %msg.i) #22
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %data.i) #22
  %38 = call ptr @memset(ptr %5, i32 255, i32 13)
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %addr.i) #22
  %39 = call ptr @memset(ptr %10, i32 255, i32 36)
  %40 = load i32, ptr @ipmi_send_panic_event, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %cmp.i = icmp eq i32 %40, 0
  br i1 %cmp.i, label %for.end.send_panic_events.exit_crit_edge, label %if.end.i

for.end.send_panic_events.exit_crit_edge:         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %send_panic_events.exit

if.end.i:                                         ; preds = %for.end
  %41 = ptrtoint ptr %addr.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 12, ptr %addr.i, align 4
  %42 = ptrtoint ptr %10 to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 15, ptr %10, align 4
  %43 = ptrtoint ptr %lun.i to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 0, ptr %lun.i, align 2
  %44 = ptrtoint ptr %msg.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 4, ptr %msg.i, align 4
  %45 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 2, ptr %0, align 1
  %46 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %data.i, ptr %2, align 4
  %47 = ptrtoint ptr %1 to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 8, ptr %1, align 2
  %48 = ptrtoint ptr %data.i to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 65, ptr %data.i, align 1
  %49 = ptrtoint ptr %3 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 3, ptr %3, align 1
  %50 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 32, ptr %4, align 1
  %51 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 111, ptr %6, align 1
  %52 = ptrtoint ptr %7 to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 -95, ptr %7, align 1
  br i1 %tobool.not.i, label %if.end.i.if.end13.i_crit_edge, label %if.then6.i

if.end.i.if.end13.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13.i

if.then6.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %53 = ptrtoint ptr %ptr to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %ptr, align 1
  %55 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %54, ptr %5, align 1
  %56 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %arrayidx9.i, align 1
  %58 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %57, ptr %8, align 1
  %59 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %arrayidx11.i, align 1
  %61 = ptrtoint ptr %9 to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %60, ptr %9, align 1
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then6.i, %if.end.i.if.end13.i_crit_edge
  call fastcc void @ipmi_panic_request_and_wait(ptr noundef %intf.0126, ptr noundef nonnull %addr.i, ptr noundef nonnull %msg.i) #22
  %62 = load i32, ptr @ipmi_send_panic_event, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %62)
  %cmp14.not.i = icmp ne i32 %62, 2
  %brmerge.i = or i1 %tobool.not.i, %cmp14.not.i
  br i1 %brmerge.i, label %if.end13.i.send_panic_events.exit_crit_edge, label %do.end.i

if.end13.i.send_panic_events.exit_crit_edge:      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %send_panic_events.exit

do.end.i:                                         ; preds = %if.end13.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !528
  %local_sel_device.i = getelementptr i8, ptr %.pn125, i32 4262
  %63 = ptrtoint ptr %local_sel_device.i to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 0, ptr %local_sel_device.i, align 2
  %local_event_generator.i = getelementptr i8, ptr %.pn125, i32 4263
  %64 = ptrtoint ptr %local_event_generator.i to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 0, ptr %local_event_generator.i, align 1
  %event_receiver.i = getelementptr i8, ptr %.pn125, i32 4260
  %65 = ptrtoint ptr %event_receiver.i to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 0, ptr %event_receiver.i, align 4
  %66 = ptrtoint ptr %msg.i to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 6, ptr %msg.i, align 4
  %67 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 1, ptr %0, align 1
  %68 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr null, ptr %2, align 4
  %69 = ptrtoint ptr %1 to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 0, ptr %1, align 2
  %null_user_handler.i = getelementptr i8, ptr %.pn125, i32 4324
  %70 = ptrtoint ptr %null_user_handler.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr @device_id_fetcher, ptr %null_user_handler.i, align 4
  call fastcc void @ipmi_panic_request_and_wait(ptr noundef %intf.0126, ptr noundef nonnull %addr.i, ptr noundef nonnull %msg.i) #22
  %71 = ptrtoint ptr %local_event_generator.i to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %local_event_generator.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %72)
  %tobool26.not.i = icmp eq i8 %72, 0
  br i1 %tobool26.not.i, label %do.end.i.if.end33.i_crit_edge, label %if.then27.i

do.end.i.if.end33.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end33.i

if.then27.i:                                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %73 = ptrtoint ptr %msg.i to i32
  call void @__asan_store1_noabort(i32 %73)
  store i8 4, ptr %msg.i, align 4
  %74 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 1, ptr %0, align 1
  %75 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr null, ptr %2, align 4
  %76 = ptrtoint ptr %1 to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 0, ptr %1, align 2
  %77 = ptrtoint ptr %null_user_handler.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr @event_receiver_fetcher, ptr %null_user_handler.i, align 4
  call fastcc void @ipmi_panic_request_and_wait(ptr noundef %intf.0126, ptr noundef nonnull %addr.i, ptr noundef nonnull %msg.i) #22
  br label %if.end33.i

if.end33.i:                                       ; preds = %if.then27.i, %do.end.i.if.end33.i_crit_edge
  %78 = ptrtoint ptr %null_user_handler.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr null, ptr %null_user_handler.i, align 4
  %79 = ptrtoint ptr %event_receiver.i to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %event_receiver.i, align 4
  %81 = and i8 %80, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %81)
  %cmp36.i = icmp ne i8 %81, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %80)
  %cmp40.not.i = icmp eq i8 %80, 0
  %or.cond.i = or i1 %cmp40.not.i, %cmp36.i
  br i1 %or.cond.i, label %if.end33.i.if.else.i_crit_edge, label %land.lhs.true42.i

if.end33.i.if.else.i_crit_edge:                   ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else.i

land.lhs.true42.i:                                ; preds = %if.end33.i
  %addrinfo.i = getelementptr i8, ptr %.pn125, i32 4404
  %82 = ptrtoint ptr %addrinfo.i to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %addrinfo.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %80, i8 %83)
  %cmp47.not.i = icmp eq i8 %80, %83
  br i1 %cmp47.not.i, label %land.lhs.true42.i.if.else.i_crit_edge, label %if.then49.i

land.lhs.true42.i.if.else.i_crit_edge:            ; preds = %land.lhs.true42.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else.i

if.then49.i:                                      ; preds = %land.lhs.true42.i
  call void @__sanitizer_cov_trace_pc() #24
  %84 = ptrtoint ptr %addr.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 1, ptr %addr.i, align 4
  %85 = ptrtoint ptr %10 to i32
  call void @__asan_store2_noabort(i32 %85)
  store i16 0, ptr %10, align 4
  %event_receiver_lun.i = getelementptr i8, ptr %.pn125, i32 4261
  %86 = ptrtoint ptr %event_receiver_lun.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %event_receiver_lun.i, align 1
  %88 = ptrtoint ptr %lun52.i to i32
  call void @__asan_store1_noabort(i32 %88)
  store i8 %87, ptr %lun52.i, align 1
  br label %if.end62.i

if.else.i:                                        ; preds = %land.lhs.true42.i.if.else.i_crit_edge, %if.end33.i.if.else.i_crit_edge
  %89 = ptrtoint ptr %local_sel_device.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %local_sel_device.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %90)
  %tobool55.not.i = icmp eq i8 %90, 0
  br i1 %tobool55.not.i, label %if.else.i.send_panic_events.exit_crit_edge, label %if.then56.i

if.else.i.send_panic_events.exit_crit_edge:       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %send_panic_events.exit

if.then56.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  %91 = ptrtoint ptr %addr.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 12, ptr %addr.i, align 4
  %92 = ptrtoint ptr %10 to i32
  call void @__asan_store2_noabort(i32 %92)
  store i16 15, ptr %10, align 4
  br label %if.end62.i

if.end62.i:                                       ; preds = %if.then56.i, %if.then49.i
  %storemerge.i = phi i8 [ %80, %if.then49.i ], [ 0, %if.then56.i ]
  %93 = ptrtoint ptr %lun.i to i32
  call void @__asan_store1_noabort(i32 %93)
  store i8 %storemerge.i, ptr %lun.i, align 2
  %94 = ptrtoint ptr %msg.i to i32
  call void @__asan_store1_noabort(i32 %94)
  store i8 10, ptr %msg.i, align 4
  %95 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %95)
  store i8 68, ptr %0, align 1
  %96 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr %data.i, ptr %2, align 4
  %97 = ptrtoint ptr %1 to i32
  call void @__asan_store2_noabort(i32 %97)
  store i16 16, ptr %1, align 2
  %98 = ptrtoint ptr %ptr to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %ptr, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %99)
  %tobool68.not126.i = icmp eq i8 %99, 0
  br i1 %tobool68.not126.i, label %if.end62.i.send_panic_events.exit_crit_edge, label %while.body.lr.ph.i

if.end62.i.send_panic_events.exit_crit_edge:      ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %send_panic_events.exit

while.body.lr.ph.i:                               ; preds = %if.end62.i
  %addrinfo76.i = getelementptr i8, ptr %.pn125, i32 4404
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %j.0128.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc.i, %while.body.i.while.body.i_crit_edge ]
  %p.0127.i = phi ptr [ %ptr, %while.body.lr.ph.i ], [ %add.ptr84.i, %while.body.i.while.body.i_crit_edge ]
  %call.i118 = call i32 @strlen(ptr noundef %p.0127.i) #28
  %100 = call i32 @llvm.smin.i32(i32 %call.i118, i32 11) #22
  %101 = ptrtoint ptr %data.i to i32
  call void @__asan_store1_noabort(i32 %101)
  store i8 0, ptr %data.i, align 1
  %102 = ptrtoint ptr %3 to i32
  call void @__asan_store1_noabort(i32 %102)
  store i8 0, ptr %3, align 1
  %103 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %103)
  store i8 -16, ptr %4, align 1
  %104 = ptrtoint ptr %addrinfo76.i to i32
  call void @__asan_load1_noabort(i32 %104)
  %105 = load i8, ptr %addrinfo76.i, align 4
  %106 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 %105, ptr %5, align 1
  %inc.i = add i32 %j.0128.i, 1
  %conv80.i = trunc i32 %j.0128.i to i8
  %107 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %107)
  store i8 %conv80.i, ptr %6, align 1
  %call83.i = call ptr @strncpy(ptr noundef %7, ptr noundef %p.0127.i, i32 noundef 11) #22
  %add.ptr84.i = getelementptr i8, ptr %p.0127.i, i32 %100
  call fastcc void @ipmi_panic_request_and_wait(ptr noundef %intf.0126, ptr noundef nonnull %addr.i, ptr noundef nonnull %msg.i) #22
  %108 = ptrtoint ptr %add.ptr84.i to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %add.ptr84.i, align 1
  %tobool68.not.i = icmp eq i8 %109, 0
  br i1 %tobool68.not.i, label %while.body.i.send_panic_events.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body.i

while.body.i.send_panic_events.exit_crit_edge:    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %send_panic_events.exit

send_panic_events.exit:                           ; preds = %while.body.i.send_panic_events.exit_crit_edge, %if.end62.i.send_panic_events.exit_crit_edge, %if.else.i.send_panic_events.exit_crit_edge, %if.end13.i.send_panic_events.exit_crit_edge, %for.end.send_panic_events.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %addr.i) #22
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %data.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %msg.i) #22
  br label %for.inc75

for.inc75:                                        ; preds = %send_panic_events.exit, %if.end15.for.inc75_crit_edge, %lor.lhs.false.for.inc75_crit_edge, %for.body.for.inc75_crit_edge
  %110 = ptrtoint ptr %.pn125 to i32
  call void @__asan_load4_noabort(i32 %110)
  %.pn = load volatile ptr, ptr %.pn125, align 4
  %cmp.not = icmp eq ptr %.pn, @ipmi_interfaces
  br i1 %cmp.not, label %for.inc75.cleanup_crit_edge, label %for.inc75.for.body_crit_edge

for.inc75.for.body_crit_edge:                     ; preds = %for.inc75
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc75.cleanup_crit_edge:                      ; preds = %for.inc75
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup:                                          ; preds = %for.inc75.cleanup_crit_edge, %do.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ipmi_panic_request_and_wait(ptr noundef %intf, ptr nocapture noundef %addr, ptr nocapture noundef readonly %msg) unnamed_addr #1 align 64 {
entry:
  %smi_msg = alloca %struct.ipmi_smi_msg, align 4
  %recv_msg = alloca %struct.ipmi_recv_msg, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 576, ptr nonnull %smi_msg) #22
  %0 = call ptr @memset(ptr %smi_msg, i32 255, i32 572)
  call void @llvm.lifetime.start.p0(i64 348, ptr nonnull %recv_msg) #22
  %1 = call ptr @memset(ptr %recv_msg, i32 255, i32 348)
  %done = getelementptr inbounds %struct.ipmi_smi_msg, ptr %smi_msg, i32 0, i32 8
  %2 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @dummy_smi_done_handler, ptr %done, align 4
  %done1 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %recv_msg, i32 0, i32 7
  %3 = ptrtoint ptr %done1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @dummy_recv_done_handler, ptr %done1, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @panic_done_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @panic_done_count, i32 1, i32 3, i32 1) #22
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @panic_done_count, ptr nonnull @panic_done_count, i32 2, ptr nonnull elementtype(i32) @panic_done_count) #22, !srcloc !514
  %addrinfo = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 58
  %5 = ptrtoint ptr %addrinfo to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %addrinfo, align 4
  %lun = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 58, i32 0, i32 1
  %7 = ptrtoint ptr %lun to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %lun, align 1
  %call = call fastcc i32 @i_ipmi_request(ptr noundef null, ptr noundef %intf, ptr noundef %addr, i32 noundef 0, ptr noundef %msg, ptr noundef %intf, ptr noundef nonnull %smi_msg, ptr noundef nonnull %recv_msg, i32 noundef 0, i8 noundef zeroext %6, i8 noundef zeroext %8, i32 noundef 0, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call.i.i17 = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @panic_done_count, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr nonnull @panic_done_count, i32 1, i32 3, i32 1) #22
  %9 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @panic_done_count, ptr nonnull @panic_done_count, i32 2, ptr nonnull elementtype(i32) @panic_done_count) #22, !srcloc !508
  br label %if.end8

if.else:                                          ; preds = %entry
  %handlers = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %10 = ptrtoint ptr %handlers to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %handlers, align 4
  %flush_messages = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %flush_messages to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %flush_messages, align 4
  %tobool4.not = icmp eq ptr %13, null
  br i1 %tobool4.not, label %if.else.if.end8_crit_edge, label %if.then5

if.else.if.end8_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8

if.then5:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %send_info = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  %14 = ptrtoint ptr %send_info to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %send_info, align 8
  call void %13(ptr noundef %15) #22
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.else.if.end8_crit_edge, %if.then
  %call.i.i1819 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @panic_done_count, i32 noundef 4) #22
  %16 = load volatile i32, ptr @panic_done_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.not20 = icmp eq i32 %16, 0
  br i1 %cmp.not20, label %if.end8.while.end_crit_edge, label %while.body.lr.ph

if.end8.while.end_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end8
  %handlers.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 16
  %send_info.i = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 17
  br label %while.body

while.body:                                       ; preds = %ipmi_poll.exit.while.body_crit_edge, %while.body.lr.ph
  %17 = ptrtoint ptr %handlers.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %handlers.i, align 4
  %poll.i = getelementptr inbounds %struct.ipmi_smi_handlers, ptr %18, i32 0, i32 10
  %19 = ptrtoint ptr %poll.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %poll.i, align 4
  %tobool.not.i = icmp eq ptr %20, null
  br i1 %tobool.not.i, label %while.body.ipmi_poll.exit_crit_edge, label %if.then.i

while.body.ipmi_poll.exit_crit_edge:              ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %ipmi_poll.exit

if.then.i:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  %21 = ptrtoint ptr %send_info.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %send_info.i, align 8
  call void %20(ptr noundef %22) #22
  br label %ipmi_poll.exit

ipmi_poll.exit:                                   ; preds = %if.then.i, %while.body.ipmi_poll.exit_crit_edge
  call fastcc void @handle_new_recv_msgs(ptr noundef %intf) #22
  %call.i.i18 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @panic_done_count, i32 noundef 4) #22
  %23 = load volatile i32, ptr @panic_done_count, align 4
  %cmp.not = icmp eq i32 %23, 0
  br i1 %cmp.not, label %ipmi_poll.exit.while.end_crit_edge, label %ipmi_poll.exit.while.body_crit_edge

ipmi_poll.exit.while.body_crit_edge:              ; preds = %ipmi_poll.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

ipmi_poll.exit.while.end_crit_edge:               ; preds = %ipmi_poll.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %ipmi_poll.exit.while.end_crit_edge, %if.end8.while.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 348, ptr nonnull %recv_msg) #22
  call void @llvm.lifetime.end.p0(i64 576, ptr nonnull %smi_msg) #22
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @device_id_fetcher(ptr nocapture noundef writeonly %intf, ptr nocapture noundef readonly %msg) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 3
  %0 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %1)
  %cmp = icmp eq i32 %1, 12
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %msg1 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5
  %2 = ptrtoint ptr %msg1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %msg1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %3)
  %cmp2 = icmp eq i8 %3, 7
  br i1 %cmp2, label %land.lhs.true4, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %cmd = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 1
  %4 = ptrtoint ptr %cmd to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %cmd, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp7 = icmp eq i8 %5, 1
  br i1 %cmp7, label %land.lhs.true9, label %land.lhs.true4.if.end_crit_edge

land.lhs.true4.if.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true9:                                   ; preds = %land.lhs.true4
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 3
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %data, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %7, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %cmp12 = icmp eq i8 %9, 0
  br i1 %cmp12, label %if.then, label %land.lhs.true9.if.end_crit_edge

land.lhs.true9.if.end_crit_edge:                  ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx16 = getelementptr i8, ptr %7, i32 6
  %10 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx16, align 1
  %12 = lshr i8 %11, 2
  %13 = and i8 %12, 1
  %local_sel_device = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 46
  %14 = ptrtoint ptr %local_sel_device to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %local_sel_device, align 2
  %15 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %data, align 4
  %arrayidx21 = getelementptr i8, ptr %16, i32 6
  %17 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx21, align 1
  %19 = lshr i8 %18, 5
  %20 = and i8 %19, 1
  %local_event_generator = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 47
  %21 = ptrtoint ptr %local_event_generator to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %20, ptr %local_event_generator, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true9.if.end_crit_edge, %land.lhs.true4.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @event_receiver_fetcher(ptr nocapture noundef writeonly %intf, ptr nocapture noundef readonly %msg) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %addr = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 3
  %0 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %1)
  %cmp = icmp eq i32 %1, 12
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %msg1 = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5
  %2 = ptrtoint ptr %msg1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %msg1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %3)
  %cmp2 = icmp eq i8 %3, 5
  br i1 %cmp2, label %land.lhs.true4, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %cmd = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 1
  %4 = ptrtoint ptr %cmd to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %cmd, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp7 = icmp eq i8 %5, 1
  br i1 %cmp7, label %land.lhs.true9, label %land.lhs.true4.if.end_crit_edge

land.lhs.true4.if.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true9:                                   ; preds = %land.lhs.true4
  %data = getelementptr inbounds %struct.ipmi_recv_msg, ptr %msg, i32 0, i32 5, i32 3
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %data, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %7, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %cmp12 = icmp eq i8 %9, 0
  br i1 %cmp12, label %if.then, label %land.lhs.true9.if.end_crit_edge

land.lhs.true9.if.end_crit_edge:                  ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx16 = getelementptr i8, ptr %7, i32 1
  %10 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx16, align 1
  %event_receiver = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 44
  %12 = ptrtoint ptr %event_receiver to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %event_receiver, align 4
  %13 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %data, align 4
  %arrayidx19 = getelementptr i8, ptr %14, i32 2
  %15 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx19, align 1
  %17 = and i8 %16, 3
  %event_receiver_lun = getelementptr inbounds %struct.ipmi_smi, ptr %intf, i32 0, i32 45
  %18 = ptrtoint ptr %event_receiver_lun to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %event_receiver_lun, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true9.if.end_crit_edge, %land.lhs.true4.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #19

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @dummy_smi_done_handler(ptr nocapture noundef readnone %msg) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @panic_done_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @panic_done_count, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @panic_done_count, ptr nonnull @panic_done_count, i32 1, ptr nonnull elementtype(i32) @panic_done_count) #22, !srcloc !508
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @dummy_recv_done_handler(ptr nocapture noundef readnone %msg) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @panic_done_count, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr nonnull @panic_done_count, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @panic_done_count, ptr nonnull @panic_done_count, i32 1, ptr nonnull elementtype(i32) @panic_done_count) #22, !srcloc !508
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #21

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #22

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #23 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 202)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #23 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 202)
  ret void
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #13 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nounwind readonly }
attributes #15 = { inlinehint nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { argmemonly nofree nounwind readonly willreturn }
attributes #21 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #22 = { nounwind }
attributes #23 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #24 = { nomerge }
attributes #25 = { cold nounwind }
attributes #26 = { nounwind allocsize(0) }
attributes #27 = { nounwind allocsize(2) }
attributes #28 = { nobuiltin nounwind }
attributes #29 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !9, !11, !12, !14, !16, !17, !19, !21, !22, !24, !26, !28, !29, !30, !32, !34, !36, !38, !40, !42, !43, !45, !46, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !71, !72, !73, !74, !75, !76, !78, !80, !82, !84, !86, !88, !90, !92, !93, !95, !96, !98, !99, !101, !102, !104, !105, !107, !108, !110, !111, !113, !114, !116, !117, !119, !120, !122, !123, !125, !126, !128, !130, !131, !132, !133, !134, !136, !138, !140, !142, !144, !146, !148, !149, !150, !151, !153, !154, !155, !157, !159, !161, !162, !164, !166, !168, !169, !170, !171, !172, !174, !176, !178, !180, !182, !184, !186, !187, !189, !191, !193, !195, !197, !199, !201, !203, !204, !206, !207, !209, !210, !212, !213, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !235, !237, !238, !239, !241, !243, !245, !246, !248, !250, !251, !253, !255, !257, !258, !259, !260, !262, !263, !264, !266, !267, !269, !271, !272, !273, !274, !276, !277, !278, !280, !281, !282, !284, !285, !286, !287, !289, !290, !291, !292, !294, !296, !297, !298, !299, !301, !302, !303, !305, !306, !307, !309, !310, !311, !312, !314, !315, !316, !317, !319, !320, !321, !322, !324, !325, !326, !328, !329, !330, !332, !334, !335, !336, !337, !338, !340, !341, !343, !344, !346, !348, !349, !350, !352, !353, !354, !356, !357, !358, !360, !362, !363, !364, !366, !367, !368, !370, !371, !372, !374, !375, !377, !379, !381, !383, !384, !386, !388, !389, !391, !393, !395, !396, !398, !400, !401, !403, !404, !406, !407, !409, !411, !412, !414, !416, !417, !419, !421, !422, !424, !426, !427, !429, !431, !432, !433, !434, !436, !437, !438, !439, !441, !443, !444, !446, !447, !449, !450, !451, !452, !454, !455, !457, !458, !459, !460, !462, !464, !465, !466, !467, !469, !471, !473, !475, !477, !479, !481, !483, !485, !486, !487}
!llvm.named.register.sp = !{!488}
!llvm.module.flags = !{!489, !490, !491, !492, !493, !494, !495, !496}
!llvm.ident = !{!497}

!0 = !{ptr @__param_panic_op, !1, !"__param_panic_op", i1 false, i1 false}
!1 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 105, i32 1}
!2 = !{ptr @__UNIQUE_ID_panic_op227, !3, !"__UNIQUE_ID_panic_op227", i1 false, i1 false}
!3 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 106, i32 1}
!4 = !{ptr @__param_maintenance_mode_timeout_ms, !5, !"__param_maintenance_mode_timeout_ms", i1 false, i1 false}
!5 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 113, i32 1}
!6 = !{ptr @__UNIQUE_ID_maintenance_mode_timeout_mstype228, !5, !"__UNIQUE_ID_maintenance_mode_timeout_mstype228", i1 false, i1 false}
!7 = !{ptr @__UNIQUE_ID_maintenance_mode_timeout_ms229, !8, !"__UNIQUE_ID_maintenance_mode_timeout_ms229", i1 false, i1 false}
!8 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 114, i32 1}
!9 = !{ptr @__param_default_retry_ms, !10, !"__param_default_retry_ms", i1 false, i1 false}
!10 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 132, i32 1}
!11 = !{ptr @__UNIQUE_ID_default_retry_mstype230, !10, !"__UNIQUE_ID_default_retry_mstype230", i1 false, i1 false}
!12 = !{ptr @__UNIQUE_ID_default_retry_ms231, !13, !"__UNIQUE_ID_default_retry_ms231", i1 false, i1 false}
!13 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 133, i32 1}
!14 = !{ptr @__param_default_maintenance_retry_ms, !15, !"__param_default_maintenance_retry_ms", i1 false, i1 false}
!15 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 138, i32 1}
!16 = !{ptr @__UNIQUE_ID_default_maintenance_retry_mstype232, !15, !"__UNIQUE_ID_default_maintenance_retry_mstype232", i1 false, i1 false}
!17 = !{ptr @__UNIQUE_ID_default_maintenance_retry_ms233, !18, !"__UNIQUE_ID_default_maintenance_retry_ms233", i1 false, i1 false}
!18 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 139, i32 1}
!19 = !{ptr @__param_default_max_retries, !20, !"__param_default_max_retries", i1 false, i1 false}
!20 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 144, i32 1}
!21 = !{ptr @__UNIQUE_ID_default_max_retriestype234, !20, !"__UNIQUE_ID_default_max_retriestype234", i1 false, i1 false}
!22 = !{ptr @__UNIQUE_ID_default_max_retries235, !23, !"__UNIQUE_ID_default_max_retries235", i1 false, i1 false}
!23 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 145, i32 1}
!24 = !{ptr @__ksymtab_ipmi_addr_src_to_str, !25, !"__ksymtab_ipmi_addr_src_to_str", i1 false, i1 false}
!25 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 641, i32 1}
!26 = distinct !{null, !27, !"__warned", i1 false, i1 false}
!27 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 745, i32 2}
!28 = !{ptr @.str, !27, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @.str.1, !27, !"<string literal>", i1 false, i1 false}
!30 = !{ptr @__ksymtab_ipmi_smi_watcher_register, !31, !"__ksymtab_ipmi_smi_watcher_register", i1 false, i1 false}
!31 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 759, i32 1}
!32 = !{ptr @__ksymtab_ipmi_smi_watcher_unregister, !33, !"__ksymtab_ipmi_smi_watcher_unregister", i1 false, i1 false}
!33 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 768, i32 1}
!34 = !{ptr @__ksymtab_ipmi_validate_addr, !35, !"__ksymtab_ipmi_validate_addr", i1 false, i1 false}
!35 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 889, i32 1}
!36 = !{ptr @__ksymtab_ipmi_addr_length, !37, !"__ksymtab_ipmi_addr_length", i1 false, i1 false}
!37 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 908, i32 1}
!38 = distinct !{null, !39, !"__warned", i1 false, i1 false}
!39 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1224, i32 2}
!40 = !{ptr @ipmi_create_user.__key, !41, !"__key", i1 false, i1 false}
!41 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1233, i32 2}
!42 = !{ptr @.str.2, !41, !"<string literal>", i1 false, i1 false}
!43 = !{ptr @ipmi_create_user.__srcu_key, !44, !"__srcu_key", i1 false, i1 false}
!44 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1235, i32 7}
!45 = !{ptr @.str.3, !44, !"<string literal>", i1 false, i1 false}
!46 = !{ptr @__ksymtab_ipmi_create_user, !47, !"__ksymtab_ipmi_create_user", i1 false, i1 false}
!47 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1269, i32 1}
!48 = distinct !{null, !49, !"__warned", i1 false, i1 false}
!49 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1277, i32 2}
!50 = !{ptr @__ksymtab_ipmi_get_smi_info, !51, !"__ksymtab_ipmi_get_smi_info", i1 false, i1 false}
!51 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1295, i32 1}
!52 = !{ptr @__ksymtab_ipmi_destroy_user, !53, !"__ksymtab_ipmi_destroy_user", i1 false, i1 false}
!53 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1385, i32 1}
!54 = !{ptr @__ksymtab_ipmi_get_version, !55, !"__ksymtab_ipmi_get_version", i1 false, i1 false}
!55 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1407, i32 1}
!56 = !{ptr @__ksymtab_ipmi_set_my_address, !57, !"__ksymtab_ipmi_set_my_address", i1 false, i1 false}
!57 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1429, i32 1}
!58 = !{ptr @__ksymtab_ipmi_get_my_address, !59, !"__ksymtab_ipmi_get_my_address", i1 false, i1 false}
!59 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1451, i32 1}
!60 = !{ptr @__ksymtab_ipmi_set_my_LUN, !61, !"__ksymtab_ipmi_set_my_LUN", i1 false, i1 false}
!61 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1473, i32 1}
!62 = !{ptr @__ksymtab_ipmi_get_my_LUN, !63, !"__ksymtab_ipmi_get_my_LUN", i1 false, i1 false}
!63 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1495, i32 1}
!64 = !{ptr @__ksymtab_ipmi_get_maintenance_mode, !65, !"__ksymtab_ipmi_get_maintenance_mode", i1 false, i1 false}
!65 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1513, i32 1}
!66 = !{ptr @__ksymtab_ipmi_set_maintenance_mode, !67, !"__ksymtab_ipmi_set_maintenance_mode", i1 false, i1 false}
!67 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1562, i32 1}
!68 = !{ptr @.str.4, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1604, i32 4}
!70 = !{ptr @.str.5, !69, !"<string literal>", i1 false, i1 false}
!71 = !{ptr @.str.6, !69, !"<string literal>", i1 false, i1 false}
!72 = !{ptr @.str.7, !69, !"<string literal>", i1 false, i1 false}
!73 = !{ptr @ipmi_set_gets_events._entry, !69, !"_entry", i1 false, i1 false}
!74 = !{ptr @ipmi_set_gets_events._entry_ptr, !69, !"_entry_ptr", i1 false, i1 false}
!75 = !{ptr @.str.8, !69, !"<string literal>", i1 false, i1 false}
!76 = !{ptr @__ksymtab_ipmi_set_gets_events, !77, !"__ksymtab_ipmi_set_gets_events", i1 false, i1 false}
!77 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1627, i32 1}
!78 = !{ptr @__ksymtab_ipmi_register_for_cmd, !79, !"__ksymtab_ipmi_register_for_cmd", i1 false, i1 false}
!79 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1704, i32 1}
!80 = !{ptr @__ksymtab_ipmi_unregister_for_cmd, !81, !"__ksymtab_ipmi_unregister_for_cmd", i1 false, i1 false}
!81 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1749, i32 1}
!82 = !{ptr @__ksymtab_ipmb_checksum, !83, !"__ksymtab_ipmb_checksum", i1 false, i1 false}
!83 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1761, i32 1}
!84 = !{ptr @__ksymtab_ipmi_request_settime, !85, !"__ksymtab_ipmi_request_settime", i1 false, i1 false}
!85 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2411, i32 1}
!86 = !{ptr @__ksymtab_ipmi_request_supply_msgs, !87, !"__ksymtab_ipmi_request_supply_msgs", i1 false, i1 false}
!87 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2450, i32 1}
!88 = !{ptr @__ksymtab_ipmi_poll_interface, !89, !"__ksymtab_ipmi_poll_interface", i1 false, i1 false}
!89 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3472, i32 1}
!90 = !{ptr @ipmi_add_smi.__srcu_key, !91, !"__srcu_key", i1 false, i1 false}
!91 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3509, i32 7}
!92 = !{ptr @.str.9, !91, !"<string literal>", i1 false, i1 false}
!93 = !{ptr @ipmi_add_smi.__key, !94, !"__key", i1 false, i1 false}
!94 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3518, i32 2}
!95 = !{ptr @.str.10, !94, !"<string literal>", i1 false, i1 false}
!96 = !{ptr @ipmi_add_smi.__key.11, !97, !"__key", i1 false, i1 false}
!97 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3520, i32 2}
!98 = !{ptr @.str.12, !97, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @ipmi_add_smi.__key.13, !100, !"__key", i1 false, i1 false}
!100 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3523, i32 2}
!101 = !{ptr @.str.14, !100, !"<string literal>", i1 false, i1 false}
!102 = !{ptr @ipmi_add_smi.__key.15, !103, !"__key", i1 false, i1 false}
!103 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3534, i32 2}
!104 = !{ptr @.str.16, !103, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @ipmi_add_smi.__key.17, !106, !"__key", i1 false, i1 false}
!106 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3540, i32 2}
!107 = !{ptr @.str.18, !106, !"<string literal>", i1 false, i1 false}
!108 = !{ptr @ipmi_add_smi.__key.19, !109, !"__key", i1 false, i1 false}
!109 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3545, i32 2}
!110 = !{ptr @.str.20, !109, !"<string literal>", i1 false, i1 false}
!111 = !{ptr @ipmi_add_smi.__key.21, !112, !"__key", i1 false, i1 false}
!112 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3548, i32 2}
!113 = !{ptr @.str.22, !112, !"<string literal>", i1 false, i1 false}
!114 = !{ptr @ipmi_add_smi.__key.23, !115, !"__key", i1 false, i1 false}
!115 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3549, i32 2}
!116 = !{ptr @.str.24, !115, !"<string literal>", i1 false, i1 false}
!117 = !{ptr @ipmi_add_smi.__key.25, !118, !"__key", i1 false, i1 false}
!118 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3554, i32 2}
!119 = !{ptr @.str.26, !118, !"<string literal>", i1 false, i1 false}
!120 = !{ptr @ipmi_add_smi.__key.27, !121, !"__key", i1 false, i1 false}
!121 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3555, i32 2}
!122 = !{ptr @.str.28, !121, !"<string literal>", i1 false, i1 false}
!123 = !{ptr @ipmi_add_smi.__key.29, !124, !"__key", i1 false, i1 false}
!124 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3557, i32 2}
!125 = !{ptr @.str.30, !124, !"<string literal>", i1 false, i1 false}
!126 = distinct !{null, !127, !"__warned", i1 false, i1 false}
!127 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3565, i32 2}
!128 = !{ptr @.str.31, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3585, i32 3}
!130 = !{ptr @.str.32, !129, !"<string literal>", i1 false, i1 false}
!131 = !{ptr @.str.33, !129, !"<string literal>", i1 false, i1 false}
!132 = !{ptr @ipmi_add_smi._entry, !129, !"_entry", i1 false, i1 false}
!133 = !{ptr @ipmi_add_smi._entry_ptr, !129, !"_entry_ptr", i1 false, i1 false}
!134 = !{ptr @__ksymtab_ipmi_add_smi, !135, !"__ksymtab_ipmi_add_smi", i1 false, i1 false}
!135 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3623, i32 1}
!136 = !{ptr @__ksymtab_ipmi_unregister_smi, !137, !"__ksymtab_ipmi_unregister_smi", i1 false, i1 false}
!137 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3720, i32 1}
!138 = !{ptr @__ksymtab_ipmi_smi_msg_received, !139, !"__ksymtab_ipmi_smi_msg_received", i1 false, i1 false}
!139 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4801, i32 1}
!140 = !{ptr @__ksymtab_ipmi_smi_watchdog_pretimeout, !141, !"__ksymtab_ipmi_smi_watchdog_pretimeout", i1 false, i1 false}
!141 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4811, i32 1}
!142 = !{ptr @__ksymtab_ipmi_alloc_smi_msg, !143, !"__ksymtab_ipmi_alloc_smi_msg", i1 false, i1 false}
!143 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5054, i32 1}
!144 = !{ptr @__ksymtab_ipmi_free_recv_msg, !145, !"__ksymtab_ipmi_free_recv_msg", i1 false, i1 false}
!145 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5083, i32 1}
!146 = !{ptr @.str.34, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5462, i32 4}
!148 = !{ptr @.str.35, !147, !"<string literal>", i1 false, i1 false}
!149 = !{ptr @cleanup_ipmi._entry, !147, !"_entry", i1 false, i1 false}
!150 = !{ptr @cleanup_ipmi._entry_ptr, !147, !"_entry_ptr", i1 false, i1 false}
!151 = !{ptr @.str.37, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5465, i32 4}
!153 = !{ptr @cleanup_ipmi._entry.36, !152, !"_entry", i1 false, i1 false}
!154 = !{ptr @cleanup_ipmi._entry_ptr.38, !152, !"_entry_ptr", i1 false, i1 false}
!155 = !{ptr @__exitcall_cleanup_ipmi, !156, !"__exitcall_cleanup_ipmi", i1 false, i1 false}
!156 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5472, i32 1}
!157 = !{ptr @__initcall__kmod_ipmi_msghandler__287_5474_ipmi_init_msghandler_mod6, !158, !"__initcall__kmod_ipmi_msghandler__287_5474_ipmi_init_msghandler_mod6", i1 false, i1 false}
!158 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5474, i32 1}
!159 = !{ptr @__UNIQUE_ID_file288, !160, !"__UNIQUE_ID_file288", i1 false, i1 false}
!160 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5475, i32 1}
!161 = !{ptr @__UNIQUE_ID_license289, !160, !"__UNIQUE_ID_license289", i1 false, i1 false}
!162 = !{ptr @__UNIQUE_ID_author290, !163, !"__UNIQUE_ID_author290", i1 false, i1 false}
!163 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5476, i32 1}
!164 = !{ptr @__UNIQUE_ID_description291, !165, !"__UNIQUE_ID_description291", i1 false, i1 false}
!165 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5477, i32 1}
!166 = !{ptr @__UNIQUE_ID_version292, !167, !"__UNIQUE_ID_version292", i1 false, i1 false}
!167 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5478, i32 1}
!168 = !{ptr @.str.39, !167, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @.str.40, !167, !"<string literal>", i1 false, i1 false}
!170 = !{ptr @.str.41, !167, !"<string literal>", i1 false, i1 false}
!171 = !{ptr @__modver_attr, !167, !"__modver_attr", i1 false, i1 false}
!172 = !{ptr @__UNIQUE_ID_softdep293, !173, !"__UNIQUE_ID_softdep293", i1 false, i1 false}
!173 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5479, i32 1}
!174 = distinct !{null, !175, !"initialized", i1 false, i1 false}
!175 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 50, i32 13}
!176 = distinct !{null, !177, !"drvregistered", i1 false, i1 false}
!177 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 51, i32 13}
!178 = !{ptr @remove_work_wq, !179, !"remove_work_wq", i1 false, i1 false}
!179 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 194, i32 33}
!180 = !{ptr @ipmi_interfaces_srcu, !181, !"ipmi_interfaces_srcu", i1 false, i1 false}
!181 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 617, i32 27}
!182 = !{ptr @ipmi_timer, !183, !"ipmi_timer", i1 false, i1 false}
!183 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4992, i32 26}
!184 = !{ptr @stop_operation, !185, !"stop_operation", i1 false, i1 false}
!185 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4994, i32 17}
!186 = !{ptr @__param_str_panic_op, !1, !"__param_str_panic_op", i1 false, i1 false}
!187 = !{ptr @panic_op_ops, !188, !"panic_op_ops", i1 false, i1 false}
!188 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 101, i32 38}
!189 = !{ptr @.str.42, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 62, i32 53}
!191 = !{ptr @.str.43, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 62, i32 61}
!193 = !{ptr @.str.44, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 62, i32 70}
!195 = !{ptr @ipmi_panic_event_str, !196, !"ipmi_panic_event_str", i1 false, i1 false}
!196 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 62, i32 26}
!197 = !{ptr @ipmi_send_panic_event, !198, !"ipmi_send_panic_event", i1 false, i1 false}
!198 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 72, i32 33}
!199 = !{ptr @.str.45, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 94, i32 15}
!201 = !{ptr @.str.46, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 98, i32 25}
!203 = !{ptr @__param_str_maintenance_mode_timeout_ms, !5, !"__param_str_maintenance_mode_timeout_ms", i1 false, i1 false}
!204 = !{ptr @maintenance_mode_timeout_ms, !205, !"maintenance_mode_timeout_ms", i1 false, i1 false}
!205 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 112, i32 22}
!206 = !{ptr @__param_str_default_retry_ms, !10, !"__param_str_default_retry_ms", i1 false, i1 false}
!207 = !{ptr @default_retry_ms, !208, !"default_retry_ms", i1 false, i1 false}
!208 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 131, i32 22}
!209 = !{ptr @__param_str_default_maintenance_retry_ms, !15, !"__param_str_default_maintenance_retry_ms", i1 false, i1 false}
!210 = !{ptr @default_maintenance_retry_ms, !211, !"default_maintenance_retry_ms", i1 false, i1 false}
!211 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 137, i32 22}
!212 = !{ptr @__param_str_default_max_retries, !20, !"__param_str_default_max_retries", i1 false, i1 false}
!213 = !{ptr @default_max_retries, !214, !"default_max_retries", i1 false, i1 false}
!214 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 143, i32 21}
!215 = !{ptr @.str.47, !216, !"<string literal>", i1 false, i1 false}
!216 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 631, i32 2}
!217 = !{ptr @.str.48, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 631, i32 13}
!219 = !{ptr @.str.49, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 631, i32 23}
!221 = !{ptr @.str.50, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 631, i32 36}
!223 = !{ptr @.str.51, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 631, i32 44}
!225 = !{ptr @.str.52, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 631, i32 52}
!227 = !{ptr @.str.53, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 631, i32 62}
!229 = !{ptr @.str.54, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 632, i32 2}
!231 = !{ptr @.str.55, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 632, i32 17}
!233 = !{ptr @addr_src_to_str, !234, !"addr_src_to_str", i1 false, i1 false}
!234 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 630, i32 27}
!235 = !{ptr @.str.56, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 623, i32 8}
!237 = !{ptr @.str.57, !236, !"<string literal>", i1 false, i1 false}
!238 = !{ptr @smi_watchers_mutex, !236, !"smi_watchers_mutex", i1 false, i1 false}
!239 = !{ptr @smi_watchers, !240, !"smi_watchers", i1 false, i1 false}
!240 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 622, i32 8}
!241 = !{ptr @ipmi_interfaces, !242, !"ipmi_interfaces", i1 false, i1 false}
!242 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 613, i32 8}
!243 = distinct !{null, !244, !"__already_done", i1 false, i1 false}
!244 = !{!"../include/linux/srcu.h", i32 189, i32 2}
!245 = !{ptr @.str.58, !244, !"<string literal>", i1 false, i1 false}
!246 = distinct !{null, !247, !"__warned", i1 false, i1 false}
!247 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1357, i32 2}
!248 = distinct !{null, !249, !"__warned", i1 false, i1 false}
!249 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 202, i32 10}
!250 = !{ptr @.str.59, !249, !"<string literal>", i1 false, i1 false}
!251 = distinct !{null, !252, !"__warned", i1 false, i1 false}
!252 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1652, i32 2}
!253 = distinct !{null, !254, !"__warned", i1 false, i1 false}
!254 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 1636, i32 2}
!255 = !{ptr @.str.60, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2351, i32 3}
!257 = !{ptr @.str.61, !256, !"<string literal>", i1 false, i1 false}
!258 = !{ptr @i_ipmi_request.__UNIQUE_ID_ddebug267, !256, !"__UNIQUE_ID_ddebug267", i1 false, i1 false}
!259 = !{ptr @.str.62, !256, !"<string literal>", i1 false, i1 false}
!260 = distinct !{null, !261, !"__warned", i1 false, i1 false}
!261 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!262 = !{ptr @.str.63, !261, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @.str.64, !261, !"<string literal>", i1 false, i1 false}
!264 = distinct !{null, !265, !"__warned", i1 false, i1 false}
!265 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!266 = !{ptr @.str.65, !265, !"<string literal>", i1 false, i1 false}
!267 = distinct !{null, !268, !"__warned", i1 false, i1 false}
!268 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4713, i32 3}
!269 = !{ptr @.str.66, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4447, i32 2}
!271 = !{ptr @.str.67, !270, !"<string literal>", i1 false, i1 false}
!272 = !{ptr @handle_one_recv_msg.__UNIQUE_ID_ddebug275, !270, !"__UNIQUE_ID_ddebug275", i1 false, i1 false}
!273 = !{ptr @.str.68, !270, !"<string literal>", i1 false, i1 false}
!274 = !{ptr @.str.69, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4451, i32 3}
!276 = !{ptr @handle_one_recv_msg._entry, !275, !"_entry", i1 false, i1 false}
!277 = !{ptr @handle_one_recv_msg._entry_ptr, !275, !"_entry_ptr", i1 false, i1 false}
!278 = !{ptr @.str.71, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4527, i32 3}
!280 = !{ptr @handle_one_recv_msg._entry.70, !279, !"_entry", i1 false, i1 false}
!281 = !{ptr @handle_one_recv_msg._entry_ptr.72, !279, !"_entry_ptr", i1 false, i1 false}
!282 = !{ptr @.str.73, !283, !"<string literal>", i1 false, i1 false}
!283 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3994, i32 3}
!284 = !{ptr @.str.74, !283, !"<string literal>", i1 false, i1 false}
!285 = !{ptr @handle_ipmb_direct_rcv_rsp._entry, !283, !"_entry", i1 false, i1 false}
!286 = !{ptr @handle_ipmb_direct_rcv_rsp._entry_ptr, !283, !"_entry_ptr", i1 false, i1 false}
!287 = !{ptr @.str.75, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3839, i32 3}
!289 = !{ptr @.str.76, !288, !"<string literal>", i1 false, i1 false}
!290 = !{ptr @handle_ipmb_get_msg_cmd.__UNIQUE_ID_ddebug272, !288, !"__UNIQUE_ID_ddebug272", i1 false, i1 false}
!291 = !{ptr @.str.77, !288, !"<string literal>", i1 false, i1 false}
!292 = distinct !{null, !293, !"__warned", i1 false, i1 false}
!293 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4333, i32 2}
!294 = !{ptr @.str.78, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4393, i32 3}
!296 = !{ptr @.str.79, !295, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @handle_read_event_rsp._entry, !295, !"_entry", i1 false, i1 false}
!298 = !{ptr @handle_read_event_rsp._entry_ptr, !295, !"_entry_ptr", i1 false, i1 false}
!299 = !{ptr @.str.80, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4412, i32 3}
!301 = !{ptr @handle_bmc_rsp._entry, !300, !"_entry", i1 false, i1 false}
!302 = !{ptr @handle_bmc_rsp._entry_ptr, !300, !"_entry_ptr", i1 false, i1 false}
!303 = !{ptr @.str.81, !304, !"<string literal>", i1 false, i1 false}
!304 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 614, i32 8}
!305 = !{ptr @.str.82, !304, !"<string literal>", i1 false, i1 false}
!306 = !{ptr @ipmi_interfaces_mutex, !304, !"ipmi_interfaces_mutex", i1 false, i1 false}
!307 = !{ptr @.str.83, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3276, i32 3}
!309 = !{ptr @.str.84, !308, !"<string literal>", i1 false, i1 false}
!310 = !{ptr @guid_handler._entry, !308, !"_entry", i1 false, i1 false}
!311 = !{ptr @guid_handler._entry_ptr, !308, !"_entry_ptr", i1 false, i1 false}
!312 = !{ptr @.str.85, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2542, i32 4}
!314 = !{ptr @.str.86, !313, !"<string literal>", i1 false, i1 false}
!315 = !{ptr @__get_device_id._entry, !313, !"_entry", i1 false, i1 false}
!316 = !{ptr @__get_device_id._entry_ptr, !313, !"_entry_ptr", i1 false, i1 false}
!317 = !{ptr @.str.87, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2460, i32 3}
!319 = !{ptr @.str.88, !318, !"<string literal>", i1 false, i1 false}
!320 = !{ptr @bmc_device_id_handler._entry, !318, !"_entry", i1 false, i1 false}
!321 = !{ptr @bmc_device_id_handler._entry_ptr, !318, !"_entry_ptr", i1 false, i1 false}
!322 = !{ptr @.str.90, !323, !"<string literal>", i1 false, i1 false}
!323 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2467, i32 3}
!324 = !{ptr @bmc_device_id_handler._entry.89, !323, !"_entry", i1 false, i1 false}
!325 = !{ptr @bmc_device_id_handler._entry_ptr.91, !323, !"_entry_ptr", i1 false, i1 false}
!326 = !{ptr @.str.93, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2476, i32 3}
!328 = !{ptr @bmc_device_id_handler._entry.92, !327, !"_entry", i1 false, i1 false}
!329 = !{ptr @bmc_device_id_handler._entry_ptr.94, !327, !"_entry_ptr", i1 false, i1 false}
!330 = !{ptr @.str.95, !331, !"<string literal>", i1 false, i1 false}
!331 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3047, i32 41}
!332 = !{ptr @.str.96, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3114, i32 3}
!334 = !{ptr @.str.97, !333, !"<string literal>", i1 false, i1 false}
!335 = !{ptr @.str.98, !333, !"<string literal>", i1 false, i1 false}
!336 = !{ptr @__ipmi_bmc_register._entry, !333, !"_entry", i1 false, i1 false}
!337 = !{ptr @__ipmi_bmc_register._entry_ptr, !333, !"_entry_ptr", i1 false, i1 false}
!338 = !{ptr @__ipmi_bmc_register.__key, !339, !"__key", i1 false, i1 false}
!339 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3126, i32 3}
!340 = !{ptr @.str.99, !339, !"<string literal>", i1 false, i1 false}
!341 = !{ptr @__ipmi_bmc_register.__key.100, !342, !"__key", i1 false, i1 false}
!342 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3127, i32 3}
!343 = !{ptr @.str.101, !342, !"<string literal>", i1 false, i1 false}
!344 = !{ptr @.str.102, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3135, i32 20}
!346 = !{ptr @.str.104, !347, !"<string literal>", i1 false, i1 false}
!347 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3156, i32 4}
!348 = !{ptr @__ipmi_bmc_register._entry.103, !347, !"_entry", i1 false, i1 false}
!349 = !{ptr @__ipmi_bmc_register._entry_ptr.105, !347, !"_entry_ptr", i1 false, i1 false}
!350 = !{ptr @.str.107, !351, !"<string literal>", i1 false, i1 false}
!351 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3162, i32 3}
!352 = !{ptr @__ipmi_bmc_register._entry.106, !351, !"_entry", i1 false, i1 false}
!353 = !{ptr @__ipmi_bmc_register._entry_ptr.108, !351, !"_entry_ptr", i1 false, i1 false}
!354 = !{ptr @.str.110, !355, !"<string literal>", i1 false, i1 false}
!355 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3175, i32 3}
!356 = !{ptr @__ipmi_bmc_register._entry.109, !355, !"_entry", i1 false, i1 false}
!357 = !{ptr @__ipmi_bmc_register._entry_ptr.111, !355, !"_entry_ptr", i1 false, i1 false}
!358 = !{ptr @.str.112, !359, !"<string literal>", i1 false, i1 false}
!359 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3181, i32 44}
!360 = !{ptr @.str.114, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3184, i32 3}
!362 = !{ptr @__ipmi_bmc_register._entry.113, !361, !"_entry", i1 false, i1 false}
!363 = !{ptr @__ipmi_bmc_register._entry_ptr.115, !361, !"_entry_ptr", i1 false, i1 false}
!364 = !{ptr @.str.117, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3192, i32 3}
!366 = !{ptr @__ipmi_bmc_register._entry.116, !365, !"_entry", i1 false, i1 false}
!367 = !{ptr @__ipmi_bmc_register._entry_ptr.118, !365, !"_entry_ptr", i1 false, i1 false}
!368 = !{ptr @.str.119, !369, !"<string literal>", i1 false, i1 false}
!369 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 611, i32 8}
!370 = !{ptr @.str.120, !369, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @ipmidriver_mutex, !369, !"ipmidriver_mutex", i1 false, i1 false}
!372 = !{ptr @.str.121, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3006, i32 8}
!374 = !{ptr @ipmi_bmc_ida, !373, !"ipmi_bmc_ida", i1 false, i1 false}
!375 = !{ptr @bmc_device_type, !376, !"bmc_device_type", i1 false, i1 false}
!376 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2925, i32 33}
!377 = !{ptr @bmc_dev_attr_groups, !378, !"bmc_dev_attr_groups", i1 false, i1 false}
!378 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2920, i32 38}
!379 = !{ptr @bmc_dev_attr_group, !380, !"bmc_dev_attr_group", i1 false, i1 false}
!380 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2915, i32 37}
!381 = !{ptr @.str.122, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2858, i32 8}
!383 = !{ptr @dev_attr_aux_firmware_revision, !382, !"dev_attr_aux_firmware_revision", i1 false, i1 false}
!384 = !{ptr @.str.123, !385, !"<string literal>", i1 false, i1 false}
!385 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2852, i32 25}
!386 = !{ptr @.str.124, !387, !"<string literal>", i1 false, i1 false}
!387 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2876, i32 8}
!388 = !{ptr @dev_attr_guid, !387, !"dev_attr_guid", i1 false, i1 false}
!389 = !{ptr @.str.125, !390, !"<string literal>", i1 false, i1 false}
!390 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2874, i32 25}
!391 = !{ptr @bmc_dev_attrs, !392, !"bmc_dev_attrs", i1 false, i1 false}
!392 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2878, i32 26}
!393 = !{ptr @.str.126, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2723, i32 8}
!395 = !{ptr @dev_attr_device_id, !394, !"dev_attr_device_id", i1 false, i1 false}
!396 = !{ptr @.str.127, !397, !"<string literal>", i1 false, i1 false}
!397 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2721, i32 25}
!398 = !{ptr @.str.128, !399, !"<string literal>", i1 false, i1 false}
!399 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2739, i32 8}
!400 = !{ptr @dev_attr_provides_device_sdrs, !399, !"dev_attr_provides_device_sdrs", i1 false, i1 false}
!401 = !{ptr @.str.129, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2754, i32 8}
!403 = !{ptr @dev_attr_revision, !402, !"dev_attr_revision", i1 false, i1 false}
!404 = !{ptr @.str.130, !405, !"<string literal>", i1 false, i1 false}
!405 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2771, i32 8}
!406 = !{ptr @dev_attr_firmware_revision, !405, !"dev_attr_firmware_revision", i1 false, i1 false}
!407 = !{ptr @.str.131, !408, !"<string literal>", i1 false, i1 false}
!408 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2768, i32 25}
!409 = !{ptr @.str.132, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2789, i32 8}
!411 = !{ptr @dev_attr_ipmi_version, !410, !"dev_attr_ipmi_version", i1 false, i1 false}
!412 = !{ptr @.str.133, !413, !"<string literal>", i1 false, i1 false}
!413 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2785, i32 25}
!414 = !{ptr @.str.134, !415, !"<string literal>", i1 false, i1 false}
!415 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2805, i32 8}
!416 = !{ptr @dev_attr_additional_device_support, !415, !"dev_attr_additional_device_support", i1 false, i1 false}
!417 = !{ptr @.str.135, !418, !"<string literal>", i1 false, i1 false}
!418 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2803, i32 25}
!419 = !{ptr @.str.136, !420, !"<string literal>", i1 false, i1 false}
!420 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2822, i32 8}
!421 = !{ptr @dev_attr_manufacturer_id, !420, !"dev_attr_manufacturer_id", i1 false, i1 false}
!422 = !{ptr @.str.137, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2820, i32 25}
!424 = !{ptr @.str.138, !425, !"<string literal>", i1 false, i1 false}
!425 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2838, i32 8}
!426 = !{ptr @dev_attr_product_id, !425, !"dev_attr_product_id", i1 false, i1 false}
!427 = !{ptr @.str.139, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 2836, i32 25}
!429 = !{ptr @.str.140, !430, !"<string literal>", i1 false, i1 false}
!430 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3437, i32 4}
!431 = !{ptr @.str.141, !430, !"<string literal>", i1 false, i1 false}
!432 = !{ptr @__scan_channels._entry, !430, !"_entry", i1 false, i1 false}
!433 = !{ptr @__scan_channels._entry_ptr, !430, !"_entry_ptr", i1 false, i1 false}
!434 = !{ptr @.str.142, !435, !"<string literal>", i1 false, i1 false}
!435 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 3399, i32 4}
!436 = !{ptr @.str.143, !435, !"<string literal>", i1 false, i1 false}
!437 = !{ptr @channel_handler._entry, !435, !"_entry", i1 false, i1 false}
!438 = !{ptr @channel_handler._entry_ptr, !435, !"_entry_ptr", i1 false, i1 false}
!439 = !{ptr @smi_msg_inuse_count, !440, !"smi_msg_inuse_count", i1 false, i1 false}
!440 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5031, i32 17}
!441 = !{ptr @ipmi_init_msghandler.__srcu_key, !442, !"__srcu_key", i1 false, i1 false}
!442 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5395, i32 7}
!443 = !{ptr @.str.144, !442, !"<string literal>", i1 false, i1 false}
!444 = !{ptr @.str.145, !445, !"<string literal>", i1 false, i1 false}
!445 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5399, i32 19}
!446 = !{ptr @.str.146, !445, !"<string literal>", i1 false, i1 false}
!447 = !{ptr @.str.147, !448, !"<string literal>", i1 false, i1 false}
!448 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5401, i32 3}
!449 = !{ptr @.str.148, !448, !"<string literal>", i1 false, i1 false}
!450 = !{ptr @ipmi_init_msghandler._entry, !448, !"_entry", i1 false, i1 false}
!451 = !{ptr @ipmi_init_msghandler._entry_ptr, !448, !"_entry_ptr", i1 false, i1 false}
!452 = !{ptr @ipmi_init_msghandler.__key, !453, !"__key", i1 false, i1 false}
!453 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5406, i32 2}
!454 = !{ptr @.str.149, !453, !"<string literal>", i1 false, i1 false}
!455 = !{ptr @.str.150, !456, !"<string literal>", i1 false, i1 false}
!456 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5372, i32 3}
!457 = !{ptr @.str.151, !456, !"<string literal>", i1 false, i1 false}
!458 = !{ptr @ipmi_register_driver._entry, !456, !"_entry", i1 false, i1 false}
!459 = !{ptr @ipmi_register_driver._entry_ptr, !456, !"_entry_ptr", i1 false, i1 false}
!460 = distinct !{null, !461, !"__warned", i1 false, i1 false}
!461 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5006, i32 2}
!462 = !{ptr @.str.152, !463, !"<string literal>", i1 false, i1 false}
!463 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 4829, i32 2}
!464 = !{ptr @.str.153, !463, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @smi_from_recv_msg.__UNIQUE_ID_ddebug280, !463, !"__UNIQUE_ID_ddebug280", i1 false, i1 false}
!466 = !{ptr @.str.154, !463, !"<string literal>", i1 false, i1 false}
!467 = !{ptr @panic_block, !468, !"panic_block", i1 false, i1 false}
!468 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5378, i32 30}
!469 = distinct !{null, !470, !"__warned", i1 false, i1 false}
!470 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5320, i32 2}
!471 = distinct !{null, !472, !"__warned", i1 false, i1 false}
!472 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5350, i32 3}
!473 = distinct !{null, !474, !"has_panicked", i1 false, i1 false}
!474 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5306, i32 12}
!475 = !{ptr @panic_done_count, !476, !"panic_done_count", i1 false, i1 false}
!476 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5085, i32 17}
!477 = !{ptr @recv_msg_inuse_count, !478, !"recv_msg_inuse_count", i1 false, i1 false}
!478 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5032, i32 17}
!479 = !{ptr @.str.156, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 604, i32 11}
!481 = !{ptr @ipmidriver, !482, !"ipmidriver", i1 false, i1 false}
!482 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 602, i32 31}
!483 = !{ptr @.str.157, !484, !"<string literal>", i1 false, i1 false}
!484 = !{!"../drivers/char/ipmi/ipmi_msghandler.c", i32 5425, i32 2}
!485 = !{ptr @.str.158, !484, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @ipmi_init_msghandler_mod._entry, !484, !"_entry", i1 false, i1 false}
!487 = !{ptr @ipmi_init_msghandler_mod._entry_ptr, !484, !"_entry_ptr", i1 false, i1 false}
!488 = !{!"sp"}
!489 = !{i32 1, !"wchar_size", i32 2}
!490 = !{i32 1, !"min_enum_size", i32 4}
!491 = !{i32 8, !"branch-target-enforcement", i32 0}
!492 = !{i32 8, !"sign-return-address", i32 0}
!493 = !{i32 8, !"sign-return-address-all", i32 0}
!494 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!495 = !{i32 7, !"uwtable", i32 1}
!496 = !{i32 7, !"frame-pointer", i32 2}
!497 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!498 = !{!"branch_weights", i32 2000, i32 1}
!499 = !{i64 2154699163}
!500 = !{i64 2148481826, i64 2148481858, i64 2148481887, i64 2148481921, i64 2148481952, i64 2148481975}
!501 = !{!"branch_weights", i32 1, i32 2000}
!502 = !{i64 2151855211}
!503 = !{i64 2148569851}
!504 = !{i64 2148484291, i64 2148484323, i64 2148484352, i64 2148484386, i64 2148484417, i64 2148484440}
!505 = !{i64 2149445965}
!506 = !{!"auto-init"}
!507 = !{i8 0, i8 2}
!508 = !{i64 2148482761, i64 2148482787, i64 2148482816, i64 2148482850, i64 2148482881, i64 2148482904}
!509 = distinct !{ptr @cleanup_bmc_device, null, ptr @intf_free}
!510 = !{i64 740306, i64 740323}
!511 = !{i64 2148565731}
!512 = !{i64 2148481016, i64 2148481048, i64 2148481077, i64 2148481111, i64 2148481142, i64 2148481165}
!513 = !{i64 2148565960}
!514 = !{i64 2148480296, i64 2148480322, i64 2148480351, i64 2148480385, i64 2148480416, i64 2148480439}
!515 = !{i64 2149496455}
!516 = !{i64 2149093673, i64 2149093678, i64 2149093691, i64 2149093735, i64 2149093769, i64 2149093790}
!517 = !{i64 2149496721}
!518 = !{i64 2155051070}
!519 = !{i64 2155000488}
!520 = !{i64 2154942736}
!521 = !{i64 2151880503}
!522 = !{i64 2148479715}
!523 = !{i64 965335, i64 965360, i64 965382, i64 965398, i64 965410, i64 965430, i64 965454, i64 965470, i64 965482}
!524 = !{i64 2148479903}
!525 = !{i64 2154998897}
!526 = !{i64 2154939113}
!527 = !{i64 964829, i64 964853, i64 964874, i64 964891, i64 964908}
!528 = !{i64 2155235316}
