; ModuleID = '/llk/IR_all_yes/drivers/clk/actions/owl-s700.c_pt.bc'
source_filename = "../drivers/clk/actions/owl-s700.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.platform_driver = type { ptr, ptr, ptr, ptr, ptr, %struct.device_driver, ptr, i8 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], ptr }
%struct.owl_clk_desc = type { ptr, i32, ptr, ptr, i32, ptr }
%struct.reset_control_ops = type { ptr, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.owl_reset_map = type { i32, i32 }
%struct.owl_pll = type { %struct.owl_pll_hw, %struct.owl_clk_common }
%struct.owl_pll_hw = type { i32, i32, i8, i8, i8, i8, i8, i8, ptr }
%struct.owl_clk_common = type { ptr, %struct.clk_hw }
%struct.clk_hw = type { ptr, ptr, ptr }
%struct.owl_mux = type { %struct.owl_mux_hw, %struct.owl_clk_common }
%struct.owl_mux_hw = type { i32, i8, i8 }
%struct.owl_divider = type { %struct.owl_divider_hw, %struct.owl_clk_common }
%struct.owl_divider_hw = type { i32, i8, i8, i8, ptr }
%struct.owl_gate = type { %struct.owl_gate_hw, %struct.owl_clk_common }
%struct.owl_gate_hw = type { i32, i8, i8 }
%struct.owl_composite = type { %struct.owl_mux_hw, %struct.owl_gate_hw, %union.owl_rate, ptr, %struct.owl_clk_common }
%union.owl_rate = type { %struct.clk_fixed_factor }
%struct.clk_fixed_factor = type { %struct.clk_hw, i32, i32 }
%struct.clk_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.clk_init_data = type { ptr, ptr, ptr, ptr, ptr, i8, i32 }
%struct.clk_pll_table = type { i32, i32 }
%struct.clk_factor_table = type { i32, i32, i32 }
%struct.owl_factor_hw = type { i32, i8, i8, i8, ptr }
%struct.clk_div_table = type { i32, i32 }
%struct.platform_device = type { ptr, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, ptr, ptr, ptr, ptr, %struct.pdev_archdata }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.list_head = type { ptr, ptr }
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.pdev_archdata = type { ptr }
%struct.reset_controller_dev = type { ptr, ptr, %struct.list_head, %struct.list_head, ptr, ptr, i32, ptr, i32 }
%struct.owl_reset = type { %struct.reset_controller_dev, ptr, ptr }

@__initcall__kmod_owl_s700__170_657_s700_clk_init1 = internal global ptr @s700_clk_init, section ".initcall1.init", align 4
@s700_clk_driver = internal global { %struct.platform_driver, [56 x i8] } { %struct.platform_driver { ptr @s700_clk_probe, ptr null, ptr null, ptr null, ptr null, %struct.device_driver { ptr @.str, ptr null, ptr null, ptr null, i8 0, i32 0, ptr @s700_clk_of_match, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, ptr null, i8 0 }, [56 x i8] zeroinitializer }, align 32
@.str = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"s700-cmu\00", [23 x i8] zeroinitializer }, align 32
@s700_clk_of_match = internal constant { [2 x %struct.of_device_id], [120 x i8] } { [2 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"actions,s700-cmu\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null }, %struct.of_device_id zeroinitializer], [120 x i8] zeroinitializer }, align 32
@s700_clk_desc = internal global { %struct.owl_clk_desc, [40 x i8] } { %struct.owl_clk_desc { ptr @s700_clks, i32 79, ptr @s700_hw_clks, ptr @s700_resets, i32 23, ptr null }, [40 x i8] zeroinitializer }, align 32
@owl_reset_ops = external dso_local constant %struct.reset_control_ops, align 4
@s700_clk_probe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str.3, i32 635, ptr @.str.4, ptr @.str.5 }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Failed to register reset controller\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"s700_clk_probe\00", [17 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"drivers/clk/actions/owl-s700.c\00", [33 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@s700_clk_probe._entry_ptr = internal global ptr @s700_clk_probe._entry, section ".printk_index", align 4
@s700_clks = internal global { [79 x ptr], [68 x i8] } { [79 x ptr] [ptr getelementptr (i8, ptr @clk_core_pll, i64 20), ptr getelementptr (i8, ptr @clk_dev_pll, i64 20), ptr getelementptr (i8, ptr @clk_ddr_pll, i64 20), ptr getelementptr (i8, ptr @clk_nand_pll, i64 20), ptr getelementptr (i8, ptr @clk_display_pll, i64 20), ptr getelementptr (i8, ptr @clk_cvbs_pll, i64 20), ptr getelementptr (i8, ptr @clk_audio_pll, i64 20), ptr getelementptr (i8, ptr @clk_ethernet_pll, i64 20), ptr getelementptr (i8, ptr @clk_cpu, i64 8), ptr getelementptr (i8, ptr @clk_dev, i64 8), ptr getelementptr (i8, ptr @clk_ahb, i64 12), ptr getelementptr (i8, ptr @clk_apb, i64 12), ptr getelementptr (i8, ptr @clk_dmac, i64 8), ptr getelementptr (i8, ptr @clk_noc0_clk_mux, i64 8), ptr getelementptr (i8, ptr @clk_noc1_clk_mux, i64 8), ptr getelementptr (i8, ptr @clk_hp_clk_mux, i64 8), ptr getelementptr (i8, ptr @clk_hp_clk_div, i64 12), ptr getelementptr (i8, ptr @clk_noc1_clk_div, i64 12), ptr getelementptr (i8, ptr @clk_noc0, i64 12), ptr getelementptr (i8, ptr @clk_noc1, i64 12), ptr getelementptr (i8, ptr @clk_sensor_src, i64 40), ptr getelementptr (i8, ptr @clk_gpio, i64 8), ptr getelementptr (i8, ptr @clk_timer, i64 8), ptr getelementptr (i8, ptr @clk_dsi, i64 8), ptr getelementptr (i8, ptr @clk_csi, i64 40), ptr getelementptr (i8, ptr @clk_si, i64 40), ptr getelementptr (i8, ptr @clk_de, i64 40), ptr getelementptr (i8, ptr @clk_hde, i64 40), ptr getelementptr (i8, ptr @clk_vde, i64 40), ptr getelementptr (i8, ptr @clk_vce, i64 40), ptr getelementptr (i8, ptr @clk_nand, i64 40), ptr getelementptr (i8, ptr @clk_sd0, i64 40), ptr getelementptr (i8, ptr @clk_sd1, i64 40), ptr getelementptr (i8, ptr @clk_sd2, i64 40), ptr getelementptr (i8, ptr @clk_uart0, i64 40), ptr getelementptr (i8, ptr @clk_uart1, i64 40), ptr getelementptr (i8, ptr @clk_uart2, i64 40), ptr getelementptr (i8, ptr @clk_uart3, i64 40), ptr getelementptr (i8, ptr @clk_uart4, i64 40), ptr getelementptr (i8, ptr @clk_uart5, i64 40), ptr getelementptr (i8, ptr @clk_uart6, i64 40), ptr getelementptr (i8, ptr @clk_pwm0, i64 40), ptr getelementptr (i8, ptr @clk_pwm1, i64 40), ptr getelementptr (i8, ptr @clk_pwm2, i64 40), ptr getelementptr (i8, ptr @clk_pwm3, i64 40), ptr getelementptr (i8, ptr @clk_pwm4, i64 40), ptr getelementptr (i8, ptr @clk_pwm5, i64 40), ptr getelementptr (i8, ptr @clk_gpu3d, i64 40), ptr getelementptr (i8, ptr @clk_i2c0, i64 8), ptr getelementptr (i8, ptr @clk_i2c1, i64 8), ptr getelementptr (i8, ptr @clk_i2c2, i64 8), ptr getelementptr (i8, ptr @clk_i2c3, i64 8), ptr getelementptr (i8, ptr @clk_spi0, i64 8), ptr getelementptr (i8, ptr @clk_spi1, i64 8), ptr getelementptr (i8, ptr @clk_spi2, i64 8), ptr getelementptr (i8, ptr @clk_spi3, i64 8), ptr getelementptr (i8, ptr @clk_usb3_480mpll0, i64 8), ptr getelementptr (i8, ptr @clk_usb3_480mphy0, i64 8), ptr getelementptr (i8, ptr @clk_usb3_5gphy, i64 8), ptr getelementptr (i8, ptr @clk_usb3_cce, i64 8), ptr getelementptr (i8, ptr @clk_lcd, i64 40), ptr getelementptr (i8, ptr @clk_hdmi_audio, i64 40), ptr getelementptr (i8, ptr @clk_i2srx, i64 40), ptr getelementptr (i8, ptr @clk_i2stx, i64 40), ptr getelementptr (i8, ptr @clk_sensor0, i64 12), ptr getelementptr (i8, ptr @clk_sensor1, i64 12), ptr getelementptr (i8, ptr @clk_hdmi_dev, i64 8), ptr getelementptr (i8, ptr @clk_ethernet, i64 40), ptr getelementptr (i8, ptr @clk_rmii_ref, i64 12), ptr getelementptr (i8, ptr @clk_usb2h0_pllen, i64 8), ptr getelementptr (i8, ptr @clk_usb2h0_phy, i64 8), ptr getelementptr (i8, ptr @clk_usb2h0_cce, i64 8), ptr getelementptr (i8, ptr @clk_usb2h1_pllen, i64 8), ptr getelementptr (i8, ptr @clk_usb2h1_phy, i64 8), ptr getelementptr (i8, ptr @clk_usb2h1_cce, i64 8), ptr getelementptr (i8, ptr @clk_tvout, i64 8), ptr getelementptr (i8, ptr @clk_thermal_sensor, i64 40), ptr getelementptr (i8, ptr @clk_irc_switch, i64 8), ptr getelementptr (i8, ptr @clk_pcm1, i64 40)], [68 x i8] zeroinitializer }, align 32
@s700_resets = internal constant { [23 x %struct.owl_reset_map], [40 x i8] } { [23 x %struct.owl_reset_map] [%struct.owl_reset_map { i32 172, i32 536870912 }, %struct.owl_reset_map { i32 168, i32 8192 }, %struct.owl_reset_map { i32 168, i32 1 }, %struct.owl_reset_map { i32 168, i32 4 }, %struct.owl_reset_map { i32 172, i32 33554432 }, %struct.owl_reset_map { i32 172, i32 1 }, %struct.owl_reset_map { i32 172, i32 2 }, %struct.owl_reset_map { i32 172, i32 4 }, %struct.owl_reset_map { i32 172, i32 8 }, %struct.owl_reset_map { i32 172, i32 16777216 }, %struct.owl_reset_map { i32 168, i32 2 }, %struct.owl_reset_map { i32 168, i32 16384 }, %struct.owl_reset_map { i32 172, i32 16 }, %struct.owl_reset_map { i32 172, i32 32 }, %struct.owl_reset_map { i32 172, i32 64 }, %struct.owl_reset_map { i32 172, i32 128 }, %struct.owl_reset_map { i32 172, i32 256 }, %struct.owl_reset_map { i32 172, i32 512 }, %struct.owl_reset_map { i32 172, i32 1024 }, %struct.owl_reset_map { i32 172, i32 2048 }, %struct.owl_reset_map { i32 172, i32 4096 }, %struct.owl_reset_map { i32 172, i32 8192 }, %struct.owl_reset_map { i32 172, i32 16384 }], [40 x i8] zeroinitializer }, align 32
@clk_core_pll = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 0, i32 12000000, i8 9, i8 0, i8 8, i8 4, i8 -82, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral } } }, [60 x i8] zeroinitializer }, align 32
@clk_dev_pll = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 4, i32 6000000, i8 8, i8 0, i8 8, i8 8, i8 126, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.8 } } }, [60 x i8] zeroinitializer }, align 32
@clk_ddr_pll = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 8, i32 6000000, i8 8, i8 0, i8 8, i8 2, i8 -76, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.10 } } }, [60 x i8] zeroinitializer }, align 32
@clk_nand_pll = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 12, i32 6000000, i8 8, i8 0, i8 8, i8 2, i8 86, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.12 } } }, [60 x i8] zeroinitializer }, align 32
@clk_display_pll = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 16, i32 6000000, i8 8, i8 0, i8 8, i8 2, i8 -116, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.14 } } }, [60 x i8] zeroinitializer }, align 32
@clk_cvbs_pll = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 184, i32 0, i8 8, i8 0, i8 8, i8 27, i8 43, i8 50, ptr @clk_cvbs_pll_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.16 } } }, [60 x i8] zeroinitializer }, align 32
@clk_audio_pll = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 20, i32 0, i8 4, i8 0, i8 1, i8 0, i8 0, i8 50, ptr @clk_audio_pll_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.18 } } }, [60 x i8] zeroinitializer }, align 32
@clk_ethernet_pll = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 180, i32 500000000, i8 0, i8 0, i8 0, i8 0, i8 0, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.20 } } }, [60 x i8] zeroinitializer }, align 32
@clk_cpu = internal global { %struct.owl_mux, [40 x i8] } { %struct.owl_mux { %struct.owl_mux_hw { i32 28, i8 0, i8 2 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.22 } } }, [40 x i8] zeroinitializer }, align 32
@clk_dev = internal global { %struct.owl_mux, [40 x i8] } { %struct.owl_mux { %struct.owl_mux_hw { i32 4, i8 12, i8 1 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.27 } } }, [40 x i8] zeroinitializer }, align 32
@clk_ahb = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 56, i8 2, i8 2, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.31 } } }, [36 x i8] zeroinitializer }, align 32
@clk_apb = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 56, i8 14, i8 2, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.34 } } }, [36 x i8] zeroinitializer }, align 32
@clk_dmac = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 17, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.37 } } }, [40 x i8] zeroinitializer }, align 32
@clk_noc0_clk_mux = internal global { %struct.owl_mux, [40 x i8] } { %struct.owl_mux { %struct.owl_mux_hw { i32 28, i8 4, i8 3 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.39 } } }, [40 x i8] zeroinitializer }, align 32
@clk_noc1_clk_mux = internal global { %struct.owl_mux, [40 x i8] } { %struct.owl_mux { %struct.owl_mux_hw { i32 56, i8 4, i8 3 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.41 } } }, [40 x i8] zeroinitializer }, align 32
@clk_hp_clk_mux = internal global { %struct.owl_mux, [40 x i8] } { %struct.owl_mux { %struct.owl_mux_hw { i32 56, i8 8, i8 3 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.43 } } }, [40 x i8] zeroinitializer }, align 32
@clk_hp_clk_div = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 56, i8 12, i8 2, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.45 } } }, [36 x i8] zeroinitializer }, align 32
@clk_noc1_clk_div = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 56, i8 20, i8 1, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.48 } } }, [36 x i8] zeroinitializer }, align 32
@clk_noc0 = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 28, i8 16, i8 2, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.51 } } }, [36 x i8] zeroinitializer }, align 32
@clk_noc1 = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 56, i8 16, i8 2, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.53 } } }, [36 x i8] zeroinitializer }, align 32
@clk_gpio = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 25, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.60 } } }, [40 x i8] zeroinitializer }, align 32
@clk_timer = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 22, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.63 } } }, [40 x i8] zeroinitializer }, align 32
@clk_dsi = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 2, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.65 } } }, [40 x i8] zeroinitializer }, align 32
@clk_i2c0 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 0, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.140 } } }, [40 x i8] zeroinitializer }, align 32
@clk_i2c1 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 1, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.143 } } }, [40 x i8] zeroinitializer }, align 32
@clk_i2c2 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 2, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.146 } } }, [40 x i8] zeroinitializer }, align 32
@clk_i2c3 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 3, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.149 } } }, [40 x i8] zeroinitializer }, align 32
@clk_spi0 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 4, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.152 } } }, [40 x i8] zeroinitializer }, align 32
@clk_spi1 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 5, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.155 } } }, [40 x i8] zeroinitializer }, align 32
@clk_spi2 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 6, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.158 } } }, [40 x i8] zeroinitializer }, align 32
@clk_spi3 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 7, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.161 } } }, [40 x i8] zeroinitializer }, align 32
@clk_usb3_480mpll0 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 176, i8 3, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.163 } } }, [40 x i8] zeroinitializer }, align 32
@clk_usb3_480mphy0 = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 176, i8 2, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.165 } } }, [40 x i8] zeroinitializer }, align 32
@clk_usb3_5gphy = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 176, i8 1, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.167 } } }, [40 x i8] zeroinitializer }, align 32
@clk_usb3_cce = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 25, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.169 } } }, [40 x i8] zeroinitializer }, align 32
@clk_sensor0 = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 32, i8 0, i8 4, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.184 } } }, [36 x i8] zeroinitializer }, align 32
@clk_sensor1 = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 32, i8 8, i8 4, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.187 } } }, [36 x i8] zeroinitializer }, align 32
@clk_hdmi_dev = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 5, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.189 } } }, [40 x i8] zeroinitializer }, align 32
@clk_ethernet = internal global { %struct.owl_composite, [40 x i8] } { %struct.owl_composite { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 23, i8 0 }, %union.owl_rate { %struct.clk_fixed_factor { %struct.clk_hw zeroinitializer, i32 1, i32 20 } }, ptr @clk_fixed_factor_ops, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.192 } } }, [40 x i8] zeroinitializer }, align 32
@clk_rmii_ref = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 180, i8 2, i8 1, i8 0, ptr @rmii_div_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.195 } } }, [36 x i8] zeroinitializer }, align 32
@clk_usb2h0_pllen = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 176, i8 12, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.197 } } }, [40 x i8] zeroinitializer }, align 32
@clk_usb2h0_phy = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 176, i8 10, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.199 } } }, [40 x i8] zeroinitializer }, align 32
@clk_usb2h0_cce = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 26, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.201 } } }, [40 x i8] zeroinitializer }, align 32
@clk_usb2h1_pllen = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 176, i8 13, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.203 } } }, [40 x i8] zeroinitializer }, align 32
@clk_usb2h1_phy = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 176, i8 11, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.205 } } }, [40 x i8] zeroinitializer }, align 32
@clk_usb2h1_cce = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 27, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.207 } } }, [40 x i8] zeroinitializer }, align 32
@clk_tvout = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 3, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.209 } } }, [40 x i8] zeroinitializer }, align 32
@clk_irc_switch = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 15, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.215 } } }, [40 x i8] zeroinitializer }, align 32
@clk_pcm1 = internal global { %struct.owl_composite, [40 x i8] } { %struct.owl_composite { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 31, i8 0 }, %union.owl_rate { %struct.clk_fixed_factor { %struct.clk_hw zeroinitializer, i32 1, i32 2 } }, ptr @clk_fixed_factor_ops, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.218 } } }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"core_pll\00", [23 x i8] zeroinitializer }, align 32
@owl_pll_ops = external dso_local constant %struct.clk_ops, align 4
@.compoundliteral = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.6, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dev_pll\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.8 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.7, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ddr_pll\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.10 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.9, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nand_pll\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.12 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.11, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"display_pll\00", [20 x i8] zeroinitializer }, align 32
@.compoundliteral.14 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.13, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@clk_cvbs_pll_table = internal global { [18 x %struct.clk_pll_table], [48 x i8] } { [18 x %struct.clk_pll_table] [%struct.clk_pll_table { i32 27, i32 348000000 }, %struct.clk_pll_table { i32 28, i32 360000000 }, %struct.clk_pll_table { i32 29, i32 372000000 }, %struct.clk_pll_table { i32 30, i32 384000000 }, %struct.clk_pll_table { i32 31, i32 396000000 }, %struct.clk_pll_table { i32 32, i32 408000000 }, %struct.clk_pll_table { i32 33, i32 420000000 }, %struct.clk_pll_table { i32 34, i32 432000000 }, %struct.clk_pll_table { i32 35, i32 444000000 }, %struct.clk_pll_table { i32 36, i32 456000000 }, %struct.clk_pll_table { i32 37, i32 468000000 }, %struct.clk_pll_table { i32 38, i32 480000000 }, %struct.clk_pll_table { i32 39, i32 492000000 }, %struct.clk_pll_table { i32 40, i32 504000000 }, %struct.clk_pll_table { i32 41, i32 516000000 }, %struct.clk_pll_table { i32 42, i32 528000000 }, %struct.clk_pll_table { i32 43, i32 540000000 }, %struct.clk_pll_table zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"cvbs_pll\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.16 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.15, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@clk_audio_pll_table = internal global { [3 x %struct.clk_pll_table], [40 x i8] } { [3 x %struct.clk_pll_table] [%struct.clk_pll_table { i32 0, i32 45158400 }, %struct.clk_pll_table { i32 1, i32 49152000 }, %struct.clk_pll_table zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"audio_pll\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.18 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.17, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ethernet_pll\00", [19 x i8] zeroinitializer }, align 32
@.compoundliteral.20 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.19, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"cpu_clk\00", [24 x i8] zeroinitializer }, align 32
@owl_mux_ops = external dso_local constant %struct.clk_ops, align 4
@cpu_clk_mux_p = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.23, ptr @.str.24, ptr @.str.6, ptr @.str.25], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.22 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.21, ptr @owl_mux_ops, ptr @cpu_clk_mux_p, ptr null, ptr null, i8 4, i32 4 }, [36 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"losc\00", [27 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"hosc\00", [27 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"noc1_clk_div\00", [19 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dev_clk\00", [24 x i8] zeroinitializer }, align 32
@dev_clk_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.24, ptr @.str.7], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.27 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.26, ptr @owl_mux_ops, ptr @dev_clk_p, ptr null, ptr null, i8 2, i32 4 }, [36 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ahb_clk\00", [24 x i8] zeroinitializer }, align 32
@owl_divider_ops = external dso_local constant %struct.clk_ops, align 4
@.str.29 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"hp_clk_div\00", [21 x i8] zeroinitializer }, align 32
@.compoundliteral.30 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.29], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.31 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.28, ptr @owl_divider_ops, ptr @.compoundliteral.30, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"apb_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.33 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.28], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.34 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.32, ptr @owl_divider_ops, ptr @.compoundliteral.33, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"dmac\00", [27 x i8] zeroinitializer }, align 32
@owl_gate_ops = external dso_local constant %struct.clk_ops, align 4
@.compoundliteral.36 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.29], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.37 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.35, ptr @owl_gate_ops, ptr @.compoundliteral.36, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"noc0_clk_mux\00", [19 x i8] zeroinitializer }, align 32
@noc_clk_mux_p = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.26, ptr @.str.13, ptr @.str.11, ptr @.str.9, ptr @.str.15], [44 x i8] zeroinitializer }, align 32
@.compoundliteral.39 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.38, ptr @owl_mux_ops, ptr @noc_clk_mux_p, ptr null, ptr null, i8 5, i32 4 }, [36 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"noc1_clk_mux\00", [19 x i8] zeroinitializer }, align 32
@.compoundliteral.41 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.40, ptr @owl_mux_ops, ptr @noc_clk_mux_p, ptr null, ptr null, i8 5, i32 4 }, [36 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"hp_clk_mux\00", [21 x i8] zeroinitializer }, align 32
@.compoundliteral.43 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.42, ptr @owl_mux_ops, ptr @noc_clk_mux_p, ptr null, ptr null, i8 5, i32 4 }, [36 x i8] zeroinitializer }, align 32
@.compoundliteral.44 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.42], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.45 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.29, ptr @owl_divider_ops, ptr @.compoundliteral.44, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"noc1_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.47 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.46], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.48 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.25, ptr @owl_divider_ops, ptr @.compoundliteral.47, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"noc0_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.50 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.38], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.51 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.49, ptr @owl_divider_ops, ptr @.compoundliteral.50, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.compoundliteral.52 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.40], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.53 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.46, ptr @owl_divider_ops, ptr @.compoundliteral.52, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sensor_src\00", [21 x i8] zeroinitializer }, align 32
@owl_comp_div_ops = external dso_local constant %struct.clk_ops, align 4
@sensor_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.24, ptr @.str.57], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.55 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.54, ptr @owl_comp_div_ops, ptr @sensor_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_sensor_src = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 32, i8 4, i8 1 }, %struct.owl_gate_hw zeroinitializer, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 32, i8 5, i8 2, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.55 } } }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"si\00", [29 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"gpio\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.59 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.32], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.60 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.58, ptr @owl_gate_ops, ptr @.compoundliteral.59, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"timer\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.62 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.24], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.63 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.61, ptr @owl_gate_ops, ptr @.compoundliteral.62, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dsi_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.65 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.64, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"csi\00", [28 x i8] zeroinitializer }, align 32
@csi_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.13, ptr @.str.26], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.67 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.66, ptr @owl_comp_div_ops, ptr @csi_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_csi = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 44, i8 4, i8 1 }, %struct.owl_gate_hw { i32 160, i8 13, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 44, i8 0, i8 4, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.67 } } }, [40 x i8] zeroinitializer }, align 32
@.compoundliteral.69 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.57, ptr @owl_comp_div_ops, ptr @csi_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_si = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 52, i8 4, i8 1 }, %struct.owl_gate_hw { i32 160, i8 14, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 52, i8 0, i8 4, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.69 } } }, [40 x i8] zeroinitializer }, align 32
@de_factor_table = internal global { [10 x %struct.clk_factor_table], [40 x i8] } { [10 x %struct.clk_factor_table] [%struct.clk_factor_table { i32 0, i32 1, i32 1 }, %struct.clk_factor_table { i32 1, i32 2, i32 3 }, %struct.clk_factor_table { i32 2, i32 1, i32 2 }, %struct.clk_factor_table { i32 3, i32 2, i32 5 }, %struct.clk_factor_table { i32 4, i32 1, i32 3 }, %struct.clk_factor_table { i32 5, i32 1, i32 4 }, %struct.clk_factor_table { i32 6, i32 1, i32 6 }, %struct.clk_factor_table { i32 7, i32 1, i32 8 }, %struct.clk_factor_table { i32 8, i32 1, i32 12 }, %struct.clk_factor_table zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"de\00", [29 x i8] zeroinitializer }, align 32
@owl_comp_fact_ops = external dso_local constant %struct.clk_ops, align 4
@de_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.13, ptr @.str.26], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.72 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.71, ptr @owl_comp_fact_ops, ptr @de_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_de = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 48, i8 12, i8 1 }, %struct.owl_gate_hw { i32 160, i8 0, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 48, i8 0, i8 3, i8 0, ptr @de_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.72 } } }, [40 x i8] zeroinitializer }, align 32
@hde_factor_table = internal global { [9 x %struct.clk_factor_table], [52 x i8] } { [9 x %struct.clk_factor_table] [%struct.clk_factor_table { i32 0, i32 1, i32 1 }, %struct.clk_factor_table { i32 1, i32 2, i32 3 }, %struct.clk_factor_table { i32 2, i32 1, i32 2 }, %struct.clk_factor_table { i32 3, i32 2, i32 5 }, %struct.clk_factor_table { i32 4, i32 1, i32 3 }, %struct.clk_factor_table { i32 5, i32 1, i32 4 }, %struct.clk_factor_table { i32 6, i32 1, i32 6 }, %struct.clk_factor_table { i32 7, i32 1, i32 8 }, %struct.clk_factor_table zeroinitializer], [52 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"hde\00", [28 x i8] zeroinitializer }, align 32
@hde_clk_mux_p = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.26, ptr @.str.13, ptr @.str.11, ptr @.str.9], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.75 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.74, ptr @owl_comp_fact_ops, ptr @hde_clk_mux_p, ptr null, ptr null, i8 4, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_hde = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 60, i8 4, i8 2 }, %struct.owl_gate_hw { i32 160, i8 9, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 60, i8 0, i8 3, i8 0, ptr @hde_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.75 } } }, [40 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"vde\00", [28 x i8] zeroinitializer }, align 32
@.compoundliteral.78 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.77, ptr @owl_comp_fact_ops, ptr @hde_clk_mux_p, ptr null, ptr null, i8 4, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_vde = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 64, i8 4, i8 2 }, %struct.owl_gate_hw { i32 160, i8 10, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 64, i8 0, i8 3, i8 0, ptr @hde_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.78 } } }, [40 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"vce\00", [28 x i8] zeroinitializer }, align 32
@.compoundliteral.81 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.80, ptr @owl_comp_fact_ops, ptr @hde_clk_mux_p, ptr null, ptr null, i8 4, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_vce = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 68, i8 4, i8 2 }, %struct.owl_gate_hw { i32 160, i8 11, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 68, i8 0, i8 3, i8 0, ptr @hde_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.81 } } }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"nand\00", [27 x i8] zeroinitializer }, align 32
@nand_clk_mux_p = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.11, ptr @.str.13, ptr @.str.26, ptr @.str.9], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.84 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.83, ptr @owl_comp_div_ops, ptr @nand_clk_mux_p, ptr null, ptr null, i8 4, i32 4 }, [36 x i8] zeroinitializer }, align 32
@clk_nand = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 76, i8 8, i8 2 }, %struct.owl_gate_hw { i32 160, i8 21, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 76, i8 0, i8 3, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.84 } } }, [40 x i8] zeroinitializer }, align 32
@sd_factor_table = internal global { [53 x %struct.clk_factor_table], [132 x i8] } { [53 x %struct.clk_factor_table] [%struct.clk_factor_table { i32 0, i32 1, i32 1 }, %struct.clk_factor_table { i32 1, i32 1, i32 2 }, %struct.clk_factor_table { i32 2, i32 1, i32 3 }, %struct.clk_factor_table { i32 3, i32 1, i32 4 }, %struct.clk_factor_table { i32 4, i32 1, i32 5 }, %struct.clk_factor_table { i32 5, i32 1, i32 6 }, %struct.clk_factor_table { i32 6, i32 1, i32 7 }, %struct.clk_factor_table { i32 7, i32 1, i32 8 }, %struct.clk_factor_table { i32 8, i32 1, i32 9 }, %struct.clk_factor_table { i32 9, i32 1, i32 10 }, %struct.clk_factor_table { i32 10, i32 1, i32 11 }, %struct.clk_factor_table { i32 11, i32 1, i32 12 }, %struct.clk_factor_table { i32 12, i32 1, i32 13 }, %struct.clk_factor_table { i32 13, i32 1, i32 14 }, %struct.clk_factor_table { i32 14, i32 1, i32 15 }, %struct.clk_factor_table { i32 15, i32 1, i32 16 }, %struct.clk_factor_table { i32 16, i32 1, i32 17 }, %struct.clk_factor_table { i32 17, i32 1, i32 18 }, %struct.clk_factor_table { i32 18, i32 1, i32 19 }, %struct.clk_factor_table { i32 19, i32 1, i32 20 }, %struct.clk_factor_table { i32 20, i32 1, i32 21 }, %struct.clk_factor_table { i32 21, i32 1, i32 22 }, %struct.clk_factor_table { i32 22, i32 1, i32 23 }, %struct.clk_factor_table { i32 23, i32 1, i32 24 }, %struct.clk_factor_table { i32 24, i32 1, i32 25 }, %struct.clk_factor_table { i32 25, i32 1, i32 26 }, %struct.clk_factor_table { i32 256, i32 1, i32 128 }, %struct.clk_factor_table { i32 257, i32 1, i32 256 }, %struct.clk_factor_table { i32 258, i32 1, i32 384 }, %struct.clk_factor_table { i32 259, i32 1, i32 512 }, %struct.clk_factor_table { i32 260, i32 1, i32 640 }, %struct.clk_factor_table { i32 261, i32 1, i32 768 }, %struct.clk_factor_table { i32 262, i32 1, i32 896 }, %struct.clk_factor_table { i32 263, i32 1, i32 1024 }, %struct.clk_factor_table { i32 264, i32 1, i32 1152 }, %struct.clk_factor_table { i32 265, i32 1, i32 1280 }, %struct.clk_factor_table { i32 266, i32 1, i32 1408 }, %struct.clk_factor_table { i32 267, i32 1, i32 1536 }, %struct.clk_factor_table { i32 268, i32 1, i32 1664 }, %struct.clk_factor_table { i32 269, i32 1, i32 1792 }, %struct.clk_factor_table { i32 270, i32 1, i32 1920 }, %struct.clk_factor_table { i32 271, i32 1, i32 2048 }, %struct.clk_factor_table { i32 272, i32 1, i32 2176 }, %struct.clk_factor_table { i32 273, i32 1, i32 2304 }, %struct.clk_factor_table { i32 274, i32 1, i32 2432 }, %struct.clk_factor_table { i32 275, i32 1, i32 2560 }, %struct.clk_factor_table { i32 276, i32 1, i32 2688 }, %struct.clk_factor_table { i32 277, i32 1, i32 2816 }, %struct.clk_factor_table { i32 278, i32 1, i32 2944 }, %struct.clk_factor_table { i32 279, i32 1, i32 3072 }, %struct.clk_factor_table { i32 280, i32 1, i32 3200 }, %struct.clk_factor_table { i32 281, i32 1, i32 3328 }, %struct.clk_factor_table zeroinitializer], [132 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"sd0\00", [28 x i8] zeroinitializer }, align 32
@sd_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.26, ptr @.str.11], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.87 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.86, ptr @owl_comp_fact_ops, ptr @sd_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_sd0 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 80, i8 9, i8 1 }, %struct.owl_gate_hw { i32 160, i8 22, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 80, i8 0, i8 9, i8 0, ptr @sd_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.87 } } }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"sd1\00", [28 x i8] zeroinitializer }, align 32
@.compoundliteral.90 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.89, ptr @owl_comp_fact_ops, ptr @sd_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_sd1 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 84, i8 9, i8 1 }, %struct.owl_gate_hw { i32 160, i8 23, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 84, i8 0, i8 9, i8 0, ptr @sd_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.90 } } }, [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"sd2\00", [28 x i8] zeroinitializer }, align 32
@.compoundliteral.93 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.92, ptr @owl_comp_fact_ops, ptr @sd_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_sd2 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 88, i8 9, i8 1 }, %struct.owl_gate_hw { i32 160, i8 24, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 88, i8 0, i8 9, i8 0, ptr @sd_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.93 } } }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uart0\00", [26 x i8] zeroinitializer }, align 32
@uart_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.24, ptr @.str.7], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.96 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.95, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_uart0 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 92, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 8, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 92, i8 0, i8 9, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.96 } } }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uart1\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.99 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.98, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_uart1 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 96, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 9, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 96, i8 0, i8 9, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.99 } } }, [40 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uart2\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.102 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.101, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_uart2 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 100, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 10, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 100, i8 0, i8 9, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.102 } } }, [40 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uart3\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.105 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.104, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_uart3 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 104, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 11, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 104, i8 0, i8 9, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.105 } } }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uart4\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.108 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.107, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_uart4 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 108, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 12, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 108, i8 0, i8 9, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.108 } } }, [40 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uart5\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.111 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.110, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_uart5 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 112, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 13, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 112, i8 0, i8 9, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.111 } } }, [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uart6\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.114 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.113, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_uart6 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 116, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 14, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 116, i8 0, i8 9, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.114 } } }, [40 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pwm0\00", [27 x i8] zeroinitializer }, align 32
@pwm_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.23, ptr @.str.24], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.117 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.116, ptr @owl_comp_div_ops, ptr @pwm_clk_mux_p, ptr null, ptr null, i8 2, i32 8 }, [36 x i8] zeroinitializer }, align 32
@clk_pwm0 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 120, i8 12, i8 1 }, %struct.owl_gate_hw { i32 164, i8 16, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 120, i8 0, i8 10, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.117 } } }, [40 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pwm1\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.120 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.119, ptr @owl_comp_div_ops, ptr @pwm_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_pwm1 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 124, i8 12, i8 1 }, %struct.owl_gate_hw { i32 164, i8 17, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 124, i8 0, i8 10, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.120 } } }, [40 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pwm2\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.123 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.122, ptr @owl_comp_div_ops, ptr @pwm_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_pwm2 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 128, i8 12, i8 1 }, %struct.owl_gate_hw { i32 164, i8 18, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 128, i8 0, i8 10, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.123 } } }, [40 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pwm3\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.126 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.125, ptr @owl_comp_div_ops, ptr @pwm_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_pwm3 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 132, i8 12, i8 1 }, %struct.owl_gate_hw { i32 164, i8 19, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 132, i8 0, i8 10, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.126 } } }, [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pwm4\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.129 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.128, ptr @owl_comp_div_ops, ptr @pwm_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_pwm4 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 136, i8 12, i8 1 }, %struct.owl_gate_hw { i32 164, i8 20, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 136, i8 0, i8 10, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.129 } } }, [40 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pwm5\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.132 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.131, ptr @owl_comp_div_ops, ptr @pwm_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_pwm5 = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 140, i8 12, i8 1 }, %struct.owl_gate_hw { i32 164, i8 21, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 140, i8 0, i8 10, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.132 } } }, [40 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"gpu3d\00", [26 x i8] zeroinitializer }, align 32
@gpu_clk_mux_p = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.26, ptr @.str.13, ptr @.str.11, ptr @.str.137, ptr @.str.15], [44 x i8] zeroinitializer }, align 32
@.compoundliteral.135 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.134, ptr @owl_comp_fact_ops, ptr @gpu_clk_mux_p, ptr null, ptr null, i8 5, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_gpu3d = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 144, i8 4, i8 3 }, %struct.owl_gate_hw { i32 160, i8 8, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 144, i8 0, i8 3, i8 0, ptr @hde_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.135 } } }, [40 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ddr_clk\00", [24 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"i2c0\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.139 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.24], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.140 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.138, ptr @owl_gate_ops, ptr @.compoundliteral.139, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"i2c1\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.142 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.24], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.143 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.141, ptr @owl_gate_ops, ptr @.compoundliteral.142, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"i2c2\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.145 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.24], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.146 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.144, ptr @owl_gate_ops, ptr @.compoundliteral.145, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"i2c3\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.148 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.24], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.149 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.147, ptr @owl_gate_ops, ptr @.compoundliteral.148, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"spi0\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.151 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.28], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.152 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.150, ptr @owl_gate_ops, ptr @.compoundliteral.151, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"spi1\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.154 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.28], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.155 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.153, ptr @owl_gate_ops, ptr @.compoundliteral.154, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"spi2\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.157 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.28], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.158 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.156, ptr @owl_gate_ops, ptr @.compoundliteral.157, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"spi3\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.160 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.28], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.161 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.159, ptr @owl_gate_ops, ptr @.compoundliteral.160, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"usb3_480mpll0\00", [18 x i8] zeroinitializer }, align 32
@.compoundliteral.163 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.162, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"usb3_480mphy0\00", [18 x i8] zeroinitializer }, align 32
@.compoundliteral.165 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.164, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"usb3_5gphy\00", [21 x i8] zeroinitializer }, align 32
@.compoundliteral.167 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.166, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"usb3_cce\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.169 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.168, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@lcd_factor_table = internal global { [25 x %struct.clk_factor_table], [84 x i8] } { [25 x %struct.clk_factor_table] [%struct.clk_factor_table { i32 0, i32 1, i32 1 }, %struct.clk_factor_table { i32 1, i32 1, i32 2 }, %struct.clk_factor_table { i32 2, i32 1, i32 3 }, %struct.clk_factor_table { i32 3, i32 1, i32 4 }, %struct.clk_factor_table { i32 4, i32 1, i32 5 }, %struct.clk_factor_table { i32 5, i32 1, i32 6 }, %struct.clk_factor_table { i32 6, i32 1, i32 7 }, %struct.clk_factor_table { i32 7, i32 1, i32 8 }, %struct.clk_factor_table { i32 8, i32 1, i32 9 }, %struct.clk_factor_table { i32 9, i32 1, i32 10 }, %struct.clk_factor_table { i32 10, i32 1, i32 11 }, %struct.clk_factor_table { i32 11, i32 1, i32 12 }, %struct.clk_factor_table { i32 256, i32 1, i32 7 }, %struct.clk_factor_table { i32 257, i32 1, i32 14 }, %struct.clk_factor_table { i32 258, i32 1, i32 21 }, %struct.clk_factor_table { i32 259, i32 1, i32 28 }, %struct.clk_factor_table { i32 260, i32 1, i32 35 }, %struct.clk_factor_table { i32 261, i32 1, i32 42 }, %struct.clk_factor_table { i32 262, i32 1, i32 49 }, %struct.clk_factor_table { i32 263, i32 1, i32 56 }, %struct.clk_factor_table { i32 264, i32 1, i32 63 }, %struct.clk_factor_table { i32 265, i32 1, i32 70 }, %struct.clk_factor_table { i32 266, i32 1, i32 77 }, %struct.clk_factor_table { i32 267, i32 1, i32 84 }, %struct.clk_factor_table zeroinitializer], [84 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"lcd\00", [28 x i8] zeroinitializer }, align 32
@lcd_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.13, ptr @.str.26], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.171 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.170, ptr @owl_comp_fact_ops, ptr @lcd_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_lcd = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 36, i8 12, i8 2 }, %struct.owl_gate_hw { i32 160, i8 1, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 36, i8 0, i8 9, i8 0, ptr @lcd_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.171 } } }, [40 x i8] zeroinitializer }, align 32
@hdmia_div_table = internal global { [10 x %struct.clk_div_table], [48 x i8] } { [10 x %struct.clk_div_table] [%struct.clk_div_table { i32 0, i32 1 }, %struct.clk_div_table { i32 1, i32 2 }, %struct.clk_div_table { i32 2, i32 3 }, %struct.clk_div_table { i32 3, i32 4 }, %struct.clk_div_table { i32 4, i32 6 }, %struct.clk_div_table { i32 5, i32 8 }, %struct.clk_div_table { i32 6, i32 12 }, %struct.clk_div_table { i32 7, i32 16 }, %struct.clk_div_table { i32 8, i32 24 }, %struct.clk_div_table zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"hdmia\00", [26 x i8] zeroinitializer }, align 32
@i2s_clk_mux_p = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.17], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.174 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.173, ptr @owl_comp_div_ops, ptr @i2s_clk_mux_p, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_hdmi_audio = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 20, i8 24, i8 1 }, %struct.owl_gate_hw { i32 164, i8 28, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 20, i8 24, i8 4, i8 0, ptr @hdmia_div_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.174 } } }, [40 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"i2srx\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.177 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.176, ptr @owl_comp_div_ops, ptr @i2s_clk_mux_p, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_i2srx = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 20, i8 24, i8 1 }, %struct.owl_gate_hw { i32 164, i8 27, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 20, i8 20, i8 4, i8 0, ptr @hdmia_div_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.177 } } }, [40 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"i2stx\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.180 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.179, ptr @owl_comp_div_ops, ptr @i2s_clk_mux_p, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_i2stx = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 20, i8 24, i8 1 }, %struct.owl_gate_hw { i32 164, i8 26, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 20, i8 16, i8 4, i8 0, ptr @hdmia_div_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.180 } } }, [40 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"sensor0\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.183 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.54], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.184 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.182, ptr @owl_divider_ops, ptr @.compoundliteral.183, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"sensor1\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.186 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.54], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.187 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.185, ptr @owl_divider_ops, ptr @.compoundliteral.186, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"hdmi_dev\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.189 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.188, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_fixed_factor_ops = external dso_local constant %struct.clk_ops, align 4
@.str.190 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ethernet\00", [23 x i8] zeroinitializer }, align 32
@owl_comp_fix_fact_ops = external dso_local constant %struct.clk_ops, align 4
@.compoundliteral.191 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.19], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.192 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.190, ptr @owl_comp_fix_fact_ops, ptr @.compoundliteral.191, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@rmii_div_table = internal global { [2 x %struct.clk_div_table], [16 x i8] } { [2 x %struct.clk_div_table] [%struct.clk_div_table { i32 0, i32 4 }, %struct.clk_div_table { i32 1, i32 10 }], [16 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"rmii_ref\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.194 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.19], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.195 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.193, ptr @owl_divider_ops, ptr @.compoundliteral.194, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"usbh0_pllen\00", [20 x i8] zeroinitializer }, align 32
@.compoundliteral.197 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.196, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"usbh0_phy\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.199 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.198, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"usbh0_cce\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.201 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.200, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"usbh1_pllen\00", [20 x i8] zeroinitializer }, align 32
@.compoundliteral.203 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.202, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"usbh1_phy\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.205 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.204, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"usbh1_cce\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.207 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.206, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"tvout_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.209 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.208, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"thermal_sensor\00", [17 x i8] zeroinitializer }, align 32
@.compoundliteral.211 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.24], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.212 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.210, ptr @owl_comp_div_ops, ptr @.compoundliteral.211, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_thermal_sensor = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 160, i8 31, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 192, i8 20, i8 10, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.212 } } }, [40 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"irc_switch\00", [21 x i8] zeroinitializer }, align 32
@.compoundliteral.215 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.214, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pcm1\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.217 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.17], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.218 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.216, ptr @owl_comp_fix_fact_ops, ptr @.compoundliteral.217, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@s700_hw_clks = internal global { { i32, [82 x ptr] }, [84 x i8] } { { i32, [82 x ptr] } { i32 82, [82 x ptr] [ptr null, ptr getelementptr (i8, ptr @clk_core_pll, i64 24), ptr getelementptr (i8, ptr @clk_dev_pll, i64 24), ptr getelementptr (i8, ptr @clk_ddr_pll, i64 24), ptr getelementptr (i8, ptr @clk_nand_pll, i64 24), ptr getelementptr (i8, ptr @clk_display_pll, i64 24), ptr null, ptr getelementptr (i8, ptr @clk_cvbs_pll, i64 24), ptr getelementptr (i8, ptr @clk_audio_pll, i64 24), ptr getelementptr (i8, ptr @clk_ethernet_pll, i64 24), ptr getelementptr (i8, ptr @clk_cpu, i64 12), ptr getelementptr (i8, ptr @clk_dev, i64 12), ptr getelementptr (i8, ptr @clk_ahb, i64 16), ptr getelementptr (i8, ptr @clk_apb, i64 16), ptr getelementptr (i8, ptr @clk_dmac, i64 12), ptr getelementptr (i8, ptr @clk_noc0_clk_mux, i64 12), ptr getelementptr (i8, ptr @clk_noc1_clk_mux, i64 12), ptr getelementptr (i8, ptr @clk_hp_clk_mux, i64 12), ptr getelementptr (i8, ptr @clk_hp_clk_div, i64 16), ptr getelementptr (i8, ptr @clk_noc1_clk_div, i64 16), ptr getelementptr (i8, ptr @clk_noc0, i64 16), ptr getelementptr (i8, ptr @clk_noc1, i64 16), ptr getelementptr (i8, ptr @clk_sensor_src, i64 44), ptr getelementptr (i8, ptr @clk_gpio, i64 12), ptr getelementptr (i8, ptr @clk_timer, i64 12), ptr getelementptr (i8, ptr @clk_dsi, i64 12), ptr getelementptr (i8, ptr @clk_csi, i64 44), ptr getelementptr (i8, ptr @clk_si, i64 44), ptr getelementptr (i8, ptr @clk_de, i64 44), ptr getelementptr (i8, ptr @clk_hde, i64 44), ptr getelementptr (i8, ptr @clk_vde, i64 44), ptr getelementptr (i8, ptr @clk_vce, i64 44), ptr getelementptr (i8, ptr @clk_nand, i64 44), ptr getelementptr (i8, ptr @clk_sd0, i64 44), ptr getelementptr (i8, ptr @clk_sd1, i64 44), ptr getelementptr (i8, ptr @clk_sd2, i64 44), ptr getelementptr (i8, ptr @clk_uart0, i64 44), ptr getelementptr (i8, ptr @clk_uart1, i64 44), ptr getelementptr (i8, ptr @clk_uart2, i64 44), ptr getelementptr (i8, ptr @clk_uart3, i64 44), ptr getelementptr (i8, ptr @clk_uart4, i64 44), ptr getelementptr (i8, ptr @clk_uart5, i64 44), ptr getelementptr (i8, ptr @clk_uart6, i64 44), ptr getelementptr (i8, ptr @clk_pwm0, i64 44), ptr getelementptr (i8, ptr @clk_pwm1, i64 44), ptr getelementptr (i8, ptr @clk_pwm2, i64 44), ptr getelementptr (i8, ptr @clk_pwm3, i64 44), ptr getelementptr (i8, ptr @clk_pwm4, i64 44), ptr getelementptr (i8, ptr @clk_pwm5, i64 44), ptr getelementptr (i8, ptr @clk_gpu3d, i64 44), ptr getelementptr (i8, ptr @clk_i2c0, i64 12), ptr getelementptr (i8, ptr @clk_i2c1, i64 12), ptr getelementptr (i8, ptr @clk_i2c2, i64 12), ptr getelementptr (i8, ptr @clk_i2c3, i64 12), ptr getelementptr (i8, ptr @clk_spi0, i64 12), ptr getelementptr (i8, ptr @clk_spi1, i64 12), ptr getelementptr (i8, ptr @clk_spi2, i64 12), ptr getelementptr (i8, ptr @clk_spi3, i64 12), ptr getelementptr (i8, ptr @clk_usb3_480mpll0, i64 12), ptr getelementptr (i8, ptr @clk_usb3_480mphy0, i64 12), ptr getelementptr (i8, ptr @clk_usb3_5gphy, i64 12), ptr getelementptr (i8, ptr @clk_usb3_cce, i64 12), ptr null, ptr getelementptr (i8, ptr @clk_lcd, i64 44), ptr getelementptr (i8, ptr @clk_hdmi_audio, i64 44), ptr getelementptr (i8, ptr @clk_i2srx, i64 44), ptr getelementptr (i8, ptr @clk_i2stx, i64 44), ptr getelementptr (i8, ptr @clk_sensor0, i64 16), ptr getelementptr (i8, ptr @clk_sensor1, i64 16), ptr getelementptr (i8, ptr @clk_hdmi_dev, i64 12), ptr getelementptr (i8, ptr @clk_ethernet, i64 44), ptr getelementptr (i8, ptr @clk_rmii_ref, i64 16), ptr getelementptr (i8, ptr @clk_usb2h0_pllen, i64 12), ptr getelementptr (i8, ptr @clk_usb2h0_phy, i64 12), ptr getelementptr (i8, ptr @clk_usb2h0_cce, i64 12), ptr getelementptr (i8, ptr @clk_usb2h1_pllen, i64 12), ptr getelementptr (i8, ptr @clk_usb2h1_phy, i64 12), ptr getelementptr (i8, ptr @clk_usb2h1_cce, i64 12), ptr getelementptr (i8, ptr @clk_tvout, i64 12), ptr getelementptr (i8, ptr @clk_thermal_sensor, i64 44), ptr getelementptr (i8, ptr @clk_irc_switch, i64 12), ptr getelementptr (i8, ptr @clk_pcm1, i64 44)] }, [84 x i8] zeroinitializer }, align 32
@___asan_gen_.220 = private unnamed_addr constant [16 x i8] c"s700_clk_driver\00", align 1
@___asan_gen_.222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 645, i32 31 }
@___asan_gen_.225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 648, i32 11 }
@___asan_gen_.226 = private unnamed_addr constant [18 x i8] c"s700_clk_of_match\00", align 1
@___asan_gen_.228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 640, i32 34 }
@___asan_gen_.229 = private unnamed_addr constant [14 x i8] c"s700_clk_desc\00", align 1
@___asan_gen_.231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 600, i32 28 }
@___asan_gen_.232 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 635, i32 3 }
@___asan_gen_.250 = private unnamed_addr constant [10 x i8] c"s700_clks\00", align 1
@___asan_gen_.252 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 407, i32 31 }
@___asan_gen_.253 = private unnamed_addr constant [12 x i8] c"s700_resets\00", align 1
@___asan_gen_.255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 574, i32 35 }
@___asan_gen_.256 = private unnamed_addr constant [13 x i8] c"clk_core_pll\00", align 1
@___asan_gen_.259 = private unnamed_addr constant [12 x i8] c"clk_dev_pll\00", align 1
@___asan_gen_.262 = private unnamed_addr constant [12 x i8] c"clk_ddr_pll\00", align 1
@___asan_gen_.265 = private unnamed_addr constant [13 x i8] c"clk_nand_pll\00", align 1
@___asan_gen_.268 = private unnamed_addr constant [16 x i8] c"clk_display_pll\00", align 1
@___asan_gen_.271 = private unnamed_addr constant [13 x i8] c"clk_cvbs_pll\00", align 1
@___asan_gen_.274 = private unnamed_addr constant [14 x i8] c"clk_audio_pll\00", align 1
@___asan_gen_.277 = private unnamed_addr constant [17 x i8] c"clk_ethernet_pll\00", align 1
@___asan_gen_.280 = private unnamed_addr constant [8 x i8] c"clk_cpu\00", align 1
@___asan_gen_.283 = private unnamed_addr constant [8 x i8] c"clk_dev\00", align 1
@___asan_gen_.286 = private unnamed_addr constant [8 x i8] c"clk_ahb\00", align 1
@___asan_gen_.289 = private unnamed_addr constant [8 x i8] c"clk_apb\00", align 1
@___asan_gen_.292 = private unnamed_addr constant [9 x i8] c"clk_dmac\00", align 1
@___asan_gen_.295 = private unnamed_addr constant [17 x i8] c"clk_noc0_clk_mux\00", align 1
@___asan_gen_.298 = private unnamed_addr constant [17 x i8] c"clk_noc1_clk_mux\00", align 1
@___asan_gen_.301 = private unnamed_addr constant [15 x i8] c"clk_hp_clk_mux\00", align 1
@___asan_gen_.304 = private unnamed_addr constant [15 x i8] c"clk_hp_clk_div\00", align 1
@___asan_gen_.306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 171, i32 8 }
@___asan_gen_.307 = private unnamed_addr constant [17 x i8] c"clk_noc1_clk_div\00", align 1
@___asan_gen_.310 = private unnamed_addr constant [9 x i8] c"clk_noc0\00", align 1
@___asan_gen_.313 = private unnamed_addr constant [9 x i8] c"clk_noc1\00", align 1
@___asan_gen_.315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 169, i32 8 }
@___asan_gen_.316 = private unnamed_addr constant [9 x i8] c"clk_gpio\00", align 1
@___asan_gen_.319 = private unnamed_addr constant [10 x i8] c"clk_timer\00", align 1
@___asan_gen_.322 = private unnamed_addr constant [8 x i8] c"clk_dsi\00", align 1
@___asan_gen_.325 = private unnamed_addr constant [9 x i8] c"clk_i2c0\00", align 1
@___asan_gen_.328 = private unnamed_addr constant [9 x i8] c"clk_i2c1\00", align 1
@___asan_gen_.331 = private unnamed_addr constant [9 x i8] c"clk_i2c2\00", align 1
@___asan_gen_.334 = private unnamed_addr constant [9 x i8] c"clk_i2c3\00", align 1
@___asan_gen_.337 = private unnamed_addr constant [9 x i8] c"clk_spi0\00", align 1
@___asan_gen_.340 = private unnamed_addr constant [9 x i8] c"clk_spi1\00", align 1
@___asan_gen_.343 = private unnamed_addr constant [9 x i8] c"clk_spi2\00", align 1
@___asan_gen_.346 = private unnamed_addr constant [9 x i8] c"clk_spi3\00", align 1
@___asan_gen_.349 = private unnamed_addr constant [18 x i8] c"clk_usb3_480mpll0\00", align 1
@___asan_gen_.352 = private unnamed_addr constant [18 x i8] c"clk_usb3_480mphy0\00", align 1
@___asan_gen_.355 = private unnamed_addr constant [15 x i8] c"clk_usb3_5gphy\00", align 1
@___asan_gen_.358 = private unnamed_addr constant [13 x i8] c"clk_usb3_cce\00", align 1
@___asan_gen_.361 = private unnamed_addr constant [12 x i8] c"clk_sensor0\00", align 1
@___asan_gen_.364 = private unnamed_addr constant [12 x i8] c"clk_sensor1\00", align 1
@___asan_gen_.367 = private unnamed_addr constant [13 x i8] c"clk_hdmi_dev\00", align 1
@___asan_gen_.370 = private unnamed_addr constant [13 x i8] c"clk_ethernet\00", align 1
@___asan_gen_.373 = private unnamed_addr constant [13 x i8] c"clk_rmii_ref\00", align 1
@___asan_gen_.376 = private unnamed_addr constant [17 x i8] c"clk_usb2h0_pllen\00", align 1
@___asan_gen_.379 = private unnamed_addr constant [15 x i8] c"clk_usb2h0_phy\00", align 1
@___asan_gen_.382 = private unnamed_addr constant [15 x i8] c"clk_usb2h0_cce\00", align 1
@___asan_gen_.385 = private unnamed_addr constant [17 x i8] c"clk_usb2h1_pllen\00", align 1
@___asan_gen_.388 = private unnamed_addr constant [15 x i8] c"clk_usb2h1_phy\00", align 1
@___asan_gen_.391 = private unnamed_addr constant [15 x i8] c"clk_usb2h1_cce\00", align 1
@___asan_gen_.394 = private unnamed_addr constant [10 x i8] c"clk_tvout\00", align 1
@___asan_gen_.397 = private unnamed_addr constant [15 x i8] c"clk_irc_switch\00", align 1
@___asan_gen_.400 = private unnamed_addr constant [9 x i8] c"clk_pcm1\00", align 1
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 89, i32 8 }
@___asan_gen_.406 = private unnamed_addr constant [17 x i8] c".compoundliteral\00", align 1
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 90, i32 8 }
@___asan_gen_.410 = private unnamed_addr constant [19 x i8] c".compoundliteral.8\00", align 1
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 91, i32 8 }
@___asan_gen_.414 = private unnamed_addr constant [20 x i8] c".compoundliteral.10\00", align 1
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 92, i32 8 }
@___asan_gen_.418 = private unnamed_addr constant [20 x i8] c".compoundliteral.12\00", align 1
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 93, i32 8 }
@___asan_gen_.422 = private unnamed_addr constant [20 x i8] c".compoundliteral.14\00", align 1
@___asan_gen_.423 = private unnamed_addr constant [19 x i8] c"clk_cvbs_pll_table\00", align 1
@___asan_gen_.425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 79, i32 29 }
@___asan_gen_.428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 94, i32 8 }
@___asan_gen_.429 = private unnamed_addr constant [20 x i8] c".compoundliteral.16\00", align 1
@___asan_gen_.430 = private unnamed_addr constant [20 x i8] c"clk_audio_pll_table\00", align 1
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 74, i32 29 }
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 95, i32 8 }
@___asan_gen_.436 = private unnamed_addr constant [20 x i8] c".compoundliteral.18\00", align 1
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 96, i32 8 }
@___asan_gen_.440 = private unnamed_addr constant [20 x i8] c".compoundliteral.20\00", align 1
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 115, i32 8 }
@___asan_gen_.444 = private unnamed_addr constant [14 x i8] c"cpu_clk_mux_p\00", align 1
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 98, i32 20 }
@___asan_gen_.447 = private unnamed_addr constant [20 x i8] c".compoundliteral.22\00", align 1
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 98, i32 39 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 98, i32 47 }
@___asan_gen_.456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 98, i32 67 }
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 116, i32 8 }
@___asan_gen_.460 = private unnamed_addr constant [10 x i8] c"dev_clk_p\00", align 1
@___asan_gen_.462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 99, i32 20 }
@___asan_gen_.463 = private unnamed_addr constant [20 x i8] c".compoundliteral.27\00", align 1
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 172, i32 8 }
@___asan_gen_.470 = private unnamed_addr constant [20 x i8] c".compoundliteral.30\00", align 1
@___asan_gen_.471 = private unnamed_addr constant [20 x i8] c".compoundliteral.31\00", align 1
@___asan_gen_.474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 173, i32 8 }
@___asan_gen_.475 = private unnamed_addr constant [20 x i8] c".compoundliteral.33\00", align 1
@___asan_gen_.476 = private unnamed_addr constant [20 x i8] c".compoundliteral.34\00", align 1
@___asan_gen_.479 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 192, i32 8 }
@___asan_gen_.480 = private unnamed_addr constant [20 x i8] c".compoundliteral.36\00", align 1
@___asan_gen_.481 = private unnamed_addr constant [20 x i8] c".compoundliteral.37\00", align 1
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 117, i32 8 }
@___asan_gen_.485 = private unnamed_addr constant [14 x i8] c"noc_clk_mux_p\00", align 1
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 100, i32 20 }
@___asan_gen_.488 = private unnamed_addr constant [20 x i8] c".compoundliteral.39\00", align 1
@___asan_gen_.491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 118, i32 8 }
@___asan_gen_.492 = private unnamed_addr constant [20 x i8] c".compoundliteral.41\00", align 1
@___asan_gen_.495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 119, i32 8 }
@___asan_gen_.496 = private unnamed_addr constant [20 x i8] c".compoundliteral.43\00", align 1
@___asan_gen_.497 = private unnamed_addr constant [20 x i8] c".compoundliteral.44\00", align 1
@___asan_gen_.498 = private unnamed_addr constant [20 x i8] c".compoundliteral.45\00", align 1
@___asan_gen_.501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 170, i32 8 }
@___asan_gen_.502 = private unnamed_addr constant [20 x i8] c".compoundliteral.47\00", align 1
@___asan_gen_.503 = private unnamed_addr constant [20 x i8] c".compoundliteral.48\00", align 1
@___asan_gen_.506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 168, i32 8 }
@___asan_gen_.507 = private unnamed_addr constant [20 x i8] c".compoundliteral.50\00", align 1
@___asan_gen_.508 = private unnamed_addr constant [20 x i8] c".compoundliteral.51\00", align 1
@___asan_gen_.509 = private unnamed_addr constant [20 x i8] c".compoundliteral.52\00", align 1
@___asan_gen_.510 = private unnamed_addr constant [20 x i8] c".compoundliteral.53\00", align 1
@___asan_gen_.514 = private unnamed_addr constant [17 x i8] c"sensor_clk_mux_p\00", align 1
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 112, i32 20 }
@___asan_gen_.517 = private unnamed_addr constant [20 x i8] c".compoundliteral.55\00", align 1
@___asan_gen_.518 = private unnamed_addr constant [15 x i8] c"clk_sensor_src\00", align 1
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 392, i32 8 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 112, i32 51 }
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 191, i32 8 }
@___asan_gen_.527 = private unnamed_addr constant [20 x i8] c".compoundliteral.59\00", align 1
@___asan_gen_.528 = private unnamed_addr constant [20 x i8] c".compoundliteral.60\00", align 1
@___asan_gen_.531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 193, i32 8 }
@___asan_gen_.532 = private unnamed_addr constant [20 x i8] c".compoundliteral.62\00", align 1
@___asan_gen_.533 = private unnamed_addr constant [20 x i8] c".compoundliteral.63\00", align 1
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 194, i32 8 }
@___asan_gen_.537 = private unnamed_addr constant [20 x i8] c".compoundliteral.65\00", align 1
@___asan_gen_.541 = private unnamed_addr constant [14 x i8] c"csi_clk_mux_p\00", align 1
@___asan_gen_.543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 102, i32 20 }
@___asan_gen_.544 = private unnamed_addr constant [20 x i8] c".compoundliteral.67\00", align 1
@___asan_gen_.545 = private unnamed_addr constant [8 x i8] c"clk_csi\00", align 1
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 219, i32 8 }
@___asan_gen_.548 = private unnamed_addr constant [20 x i8] c".compoundliteral.69\00", align 1
@___asan_gen_.549 = private unnamed_addr constant [7 x i8] c"clk_si\00", align 1
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 225, i32 8 }
@___asan_gen_.552 = private unnamed_addr constant [16 x i8] c"de_factor_table\00", align 1
@___asan_gen_.554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 178, i32 32 }
@___asan_gen_.558 = private unnamed_addr constant [13 x i8] c"de_clk_mux_p\00", align 1
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 103, i32 20 }
@___asan_gen_.561 = private unnamed_addr constant [20 x i8] c".compoundliteral.72\00", align 1
@___asan_gen_.562 = private unnamed_addr constant [7 x i8] c"clk_de\00", align 1
@___asan_gen_.564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 231, i32 8 }
@___asan_gen_.565 = private unnamed_addr constant [17 x i8] c"hde_factor_table\00", align 1
@___asan_gen_.567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 184, i32 32 }
@___asan_gen_.571 = private unnamed_addr constant [14 x i8] c"hde_clk_mux_p\00", align 1
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 104, i32 20 }
@___asan_gen_.574 = private unnamed_addr constant [20 x i8] c".compoundliteral.75\00", align 1
@___asan_gen_.575 = private unnamed_addr constant [8 x i8] c"clk_hde\00", align 1
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 237, i32 8 }
@___asan_gen_.581 = private unnamed_addr constant [20 x i8] c".compoundliteral.78\00", align 1
@___asan_gen_.582 = private unnamed_addr constant [8 x i8] c"clk_vde\00", align 1
@___asan_gen_.584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 243, i32 8 }
@___asan_gen_.588 = private unnamed_addr constant [20 x i8] c".compoundliteral.81\00", align 1
@___asan_gen_.589 = private unnamed_addr constant [8 x i8] c"clk_vce\00", align 1
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 249, i32 8 }
@___asan_gen_.595 = private unnamed_addr constant [15 x i8] c"nand_clk_mux_p\00", align 1
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 105, i32 20 }
@___asan_gen_.598 = private unnamed_addr constant [20 x i8] c".compoundliteral.84\00", align 1
@___asan_gen_.599 = private unnamed_addr constant [9 x i8] c"clk_nand\00", align 1
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 255, i32 8 }
@___asan_gen_.602 = private unnamed_addr constant [16 x i8] c"sd_factor_table\00", align 1
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 121, i32 32 }
@___asan_gen_.608 = private unnamed_addr constant [13 x i8] c"sd_clk_mux_p\00", align 1
@___asan_gen_.610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 106, i32 20 }
@___asan_gen_.611 = private unnamed_addr constant [20 x i8] c".compoundliteral.87\00", align 1
@___asan_gen_.612 = private unnamed_addr constant [8 x i8] c"clk_sd0\00", align 1
@___asan_gen_.614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 261, i32 8 }
@___asan_gen_.618 = private unnamed_addr constant [20 x i8] c".compoundliteral.90\00", align 1
@___asan_gen_.619 = private unnamed_addr constant [8 x i8] c"clk_sd1\00", align 1
@___asan_gen_.621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 267, i32 8 }
@___asan_gen_.625 = private unnamed_addr constant [20 x i8] c".compoundliteral.93\00", align 1
@___asan_gen_.626 = private unnamed_addr constant [8 x i8] c"clk_sd2\00", align 1
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 273, i32 8 }
@___asan_gen_.632 = private unnamed_addr constant [15 x i8] c"uart_clk_mux_p\00", align 1
@___asan_gen_.634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 107, i32 20 }
@___asan_gen_.635 = private unnamed_addr constant [20 x i8] c".compoundliteral.96\00", align 1
@___asan_gen_.636 = private unnamed_addr constant [10 x i8] c"clk_uart0\00", align 1
@___asan_gen_.638 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 279, i32 8 }
@___asan_gen_.642 = private unnamed_addr constant [20 x i8] c".compoundliteral.99\00", align 1
@___asan_gen_.643 = private unnamed_addr constant [10 x i8] c"clk_uart1\00", align 1
@___asan_gen_.645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 285, i32 8 }
@___asan_gen_.649 = private unnamed_addr constant [21 x i8] c".compoundliteral.102\00", align 1
@___asan_gen_.650 = private unnamed_addr constant [10 x i8] c"clk_uart2\00", align 1
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 291, i32 8 }
@___asan_gen_.656 = private unnamed_addr constant [21 x i8] c".compoundliteral.105\00", align 1
@___asan_gen_.657 = private unnamed_addr constant [10 x i8] c"clk_uart3\00", align 1
@___asan_gen_.659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 297, i32 8 }
@___asan_gen_.663 = private unnamed_addr constant [21 x i8] c".compoundliteral.108\00", align 1
@___asan_gen_.664 = private unnamed_addr constant [10 x i8] c"clk_uart4\00", align 1
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 303, i32 8 }
@___asan_gen_.670 = private unnamed_addr constant [21 x i8] c".compoundliteral.111\00", align 1
@___asan_gen_.671 = private unnamed_addr constant [10 x i8] c"clk_uart5\00", align 1
@___asan_gen_.673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 309, i32 8 }
@___asan_gen_.677 = private unnamed_addr constant [21 x i8] c".compoundliteral.114\00", align 1
@___asan_gen_.678 = private unnamed_addr constant [10 x i8] c"clk_uart6\00", align 1
@___asan_gen_.680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 315, i32 8 }
@___asan_gen_.684 = private unnamed_addr constant [14 x i8] c"pwm_clk_mux_p\00", align 1
@___asan_gen_.686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 108, i32 20 }
@___asan_gen_.687 = private unnamed_addr constant [21 x i8] c".compoundliteral.117\00", align 1
@___asan_gen_.688 = private unnamed_addr constant [9 x i8] c"clk_pwm0\00", align 1
@___asan_gen_.690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 321, i32 8 }
@___asan_gen_.694 = private unnamed_addr constant [21 x i8] c".compoundliteral.120\00", align 1
@___asan_gen_.695 = private unnamed_addr constant [9 x i8] c"clk_pwm1\00", align 1
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 327, i32 8 }
@___asan_gen_.701 = private unnamed_addr constant [21 x i8] c".compoundliteral.123\00", align 1
@___asan_gen_.702 = private unnamed_addr constant [9 x i8] c"clk_pwm2\00", align 1
@___asan_gen_.704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 333, i32 8 }
@___asan_gen_.708 = private unnamed_addr constant [21 x i8] c".compoundliteral.126\00", align 1
@___asan_gen_.709 = private unnamed_addr constant [9 x i8] c"clk_pwm3\00", align 1
@___asan_gen_.711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 339, i32 8 }
@___asan_gen_.715 = private unnamed_addr constant [21 x i8] c".compoundliteral.129\00", align 1
@___asan_gen_.716 = private unnamed_addr constant [9 x i8] c"clk_pwm4\00", align 1
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 345, i32 8 }
@___asan_gen_.722 = private unnamed_addr constant [21 x i8] c".compoundliteral.132\00", align 1
@___asan_gen_.723 = private unnamed_addr constant [9 x i8] c"clk_pwm5\00", align 1
@___asan_gen_.725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 351, i32 8 }
@___asan_gen_.729 = private unnamed_addr constant [14 x i8] c"gpu_clk_mux_p\00", align 1
@___asan_gen_.731 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 109, i32 20 }
@___asan_gen_.732 = private unnamed_addr constant [21 x i8] c".compoundliteral.135\00", align 1
@___asan_gen_.733 = private unnamed_addr constant [10 x i8] c"clk_gpu3d\00", align 1
@___asan_gen_.735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 357, i32 8 }
@___asan_gen_.738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 109, i32 78 }
@___asan_gen_.741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 201, i32 8 }
@___asan_gen_.742 = private unnamed_addr constant [21 x i8] c".compoundliteral.139\00", align 1
@___asan_gen_.743 = private unnamed_addr constant [21 x i8] c".compoundliteral.140\00", align 1
@___asan_gen_.746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 202, i32 8 }
@___asan_gen_.747 = private unnamed_addr constant [21 x i8] c".compoundliteral.142\00", align 1
@___asan_gen_.748 = private unnamed_addr constant [21 x i8] c".compoundliteral.143\00", align 1
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 203, i32 8 }
@___asan_gen_.752 = private unnamed_addr constant [21 x i8] c".compoundliteral.145\00", align 1
@___asan_gen_.753 = private unnamed_addr constant [21 x i8] c".compoundliteral.146\00", align 1
@___asan_gen_.756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 204, i32 8 }
@___asan_gen_.757 = private unnamed_addr constant [21 x i8] c".compoundliteral.148\00", align 1
@___asan_gen_.758 = private unnamed_addr constant [21 x i8] c".compoundliteral.149\00", align 1
@___asan_gen_.761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 205, i32 8 }
@___asan_gen_.762 = private unnamed_addr constant [21 x i8] c".compoundliteral.151\00", align 1
@___asan_gen_.763 = private unnamed_addr constant [21 x i8] c".compoundliteral.152\00", align 1
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 206, i32 8 }
@___asan_gen_.767 = private unnamed_addr constant [21 x i8] c".compoundliteral.154\00", align 1
@___asan_gen_.768 = private unnamed_addr constant [21 x i8] c".compoundliteral.155\00", align 1
@___asan_gen_.771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 207, i32 8 }
@___asan_gen_.772 = private unnamed_addr constant [21 x i8] c".compoundliteral.157\00", align 1
@___asan_gen_.773 = private unnamed_addr constant [21 x i8] c".compoundliteral.158\00", align 1
@___asan_gen_.776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 208, i32 8 }
@___asan_gen_.777 = private unnamed_addr constant [21 x i8] c".compoundliteral.160\00", align 1
@___asan_gen_.778 = private unnamed_addr constant [21 x i8] c".compoundliteral.161\00", align 1
@___asan_gen_.781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 197, i32 8 }
@___asan_gen_.782 = private unnamed_addr constant [21 x i8] c".compoundliteral.163\00", align 1
@___asan_gen_.785 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 198, i32 8 }
@___asan_gen_.786 = private unnamed_addr constant [21 x i8] c".compoundliteral.165\00", align 1
@___asan_gen_.789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 199, i32 8 }
@___asan_gen_.790 = private unnamed_addr constant [21 x i8] c".compoundliteral.167\00", align 1
@___asan_gen_.793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 200, i32 8 }
@___asan_gen_.794 = private unnamed_addr constant [21 x i8] c".compoundliteral.169\00", align 1
@___asan_gen_.795 = private unnamed_addr constant [17 x i8] c"lcd_factor_table\00", align 1
@___asan_gen_.797 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 143, i32 32 }
@___asan_gen_.801 = private unnamed_addr constant [14 x i8] c"lcd_clk_mux_p\00", align 1
@___asan_gen_.803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 110, i32 20 }
@___asan_gen_.804 = private unnamed_addr constant [21 x i8] c".compoundliteral.171\00", align 1
@___asan_gen_.805 = private unnamed_addr constant [8 x i8] c"clk_lcd\00", align 1
@___asan_gen_.807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 363, i32 8 }
@___asan_gen_.808 = private unnamed_addr constant [16 x i8] c"hdmia_div_table\00", align 1
@___asan_gen_.810 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 156, i32 29 }
@___asan_gen_.814 = private unnamed_addr constant [14 x i8] c"i2s_clk_mux_p\00", align 1
@___asan_gen_.816 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 111, i32 20 }
@___asan_gen_.817 = private unnamed_addr constant [21 x i8] c".compoundliteral.174\00", align 1
@___asan_gen_.818 = private unnamed_addr constant [15 x i8] c"clk_hdmi_audio\00", align 1
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 369, i32 8 }
@___asan_gen_.824 = private unnamed_addr constant [21 x i8] c".compoundliteral.177\00", align 1
@___asan_gen_.825 = private unnamed_addr constant [10 x i8] c"clk_i2srx\00", align 1
@___asan_gen_.827 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 375, i32 8 }
@___asan_gen_.831 = private unnamed_addr constant [21 x i8] c".compoundliteral.180\00", align 1
@___asan_gen_.832 = private unnamed_addr constant [10 x i8] c"clk_i2stx\00", align 1
@___asan_gen_.834 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 381, i32 8 }
@___asan_gen_.837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 174, i32 8 }
@___asan_gen_.838 = private unnamed_addr constant [21 x i8] c".compoundliteral.183\00", align 1
@___asan_gen_.839 = private unnamed_addr constant [21 x i8] c".compoundliteral.184\00", align 1
@___asan_gen_.842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 175, i32 8 }
@___asan_gen_.843 = private unnamed_addr constant [21 x i8] c".compoundliteral.186\00", align 1
@___asan_gen_.844 = private unnamed_addr constant [21 x i8] c".compoundliteral.187\00", align 1
@___asan_gen_.847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 196, i32 8 }
@___asan_gen_.848 = private unnamed_addr constant [21 x i8] c".compoundliteral.189\00", align 1
@___asan_gen_.851 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 398, i32 8 }
@___asan_gen_.852 = private unnamed_addr constant [21 x i8] c".compoundliteral.191\00", align 1
@___asan_gen_.853 = private unnamed_addr constant [21 x i8] c".compoundliteral.192\00", align 1
@___asan_gen_.854 = private unnamed_addr constant [15 x i8] c"rmii_div_table\00", align 1
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 163, i32 29 }
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 176, i32 8 }
@___asan_gen_.860 = private unnamed_addr constant [21 x i8] c".compoundliteral.194\00", align 1
@___asan_gen_.861 = private unnamed_addr constant [21 x i8] c".compoundliteral.195\00", align 1
@___asan_gen_.864 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 209, i32 8 }
@___asan_gen_.865 = private unnamed_addr constant [21 x i8] c".compoundliteral.197\00", align 1
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 210, i32 8 }
@___asan_gen_.869 = private unnamed_addr constant [21 x i8] c".compoundliteral.199\00", align 1
@___asan_gen_.872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 211, i32 8 }
@___asan_gen_.873 = private unnamed_addr constant [21 x i8] c".compoundliteral.201\00", align 1
@___asan_gen_.876 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 212, i32 8 }
@___asan_gen_.877 = private unnamed_addr constant [21 x i8] c".compoundliteral.203\00", align 1
@___asan_gen_.880 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 213, i32 8 }
@___asan_gen_.881 = private unnamed_addr constant [21 x i8] c".compoundliteral.205\00", align 1
@___asan_gen_.884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 214, i32 8 }
@___asan_gen_.885 = private unnamed_addr constant [21 x i8] c".compoundliteral.207\00", align 1
@___asan_gen_.888 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 195, i32 8 }
@___asan_gen_.889 = private unnamed_addr constant [21 x i8] c".compoundliteral.209\00", align 1
@___asan_gen_.893 = private unnamed_addr constant [21 x i8] c".compoundliteral.211\00", align 1
@___asan_gen_.894 = private unnamed_addr constant [21 x i8] c".compoundliteral.212\00", align 1
@___asan_gen_.895 = private unnamed_addr constant [19 x i8] c"clk_thermal_sensor\00", align 1
@___asan_gen_.897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 402, i32 8 }
@___asan_gen_.900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 215, i32 8 }
@___asan_gen_.901 = private unnamed_addr constant [21 x i8] c".compoundliteral.215\00", align 1
@___asan_gen_.902 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.904 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 388, i32 8 }
@___asan_gen_.905 = private unnamed_addr constant [21 x i8] c".compoundliteral.217\00", align 1
@___asan_gen_.906 = private unnamed_addr constant [21 x i8] c".compoundliteral.218\00", align 1
@___asan_gen_.907 = private unnamed_addr constant [13 x i8] c"s700_hw_clks\00", align 1
@___asan_gen_.908 = private constant [34 x i8] c"../drivers/clk/actions/owl-s700.c\00", align 1
@___asan_gen_.909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.908, i32 489, i32 35 }
@llvm.compiler.used = appending global [300 x ptr] [ptr @__initcall__kmod_owl_s700__170_657_s700_clk_init1, ptr @s700_clk_probe._entry, ptr @s700_clk_probe._entry_ptr, ptr @s700_clk_driver, ptr @.str, ptr @s700_clk_of_match, ptr @s700_clk_desc, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @s700_clks, ptr @s700_resets, ptr @clk_core_pll, ptr @clk_dev_pll, ptr @clk_ddr_pll, ptr @clk_nand_pll, ptr @clk_display_pll, ptr @clk_cvbs_pll, ptr @clk_audio_pll, ptr @clk_ethernet_pll, ptr @clk_cpu, ptr @clk_dev, ptr @clk_ahb, ptr @clk_apb, ptr @clk_dmac, ptr @clk_noc0_clk_mux, ptr @clk_noc1_clk_mux, ptr @clk_hp_clk_mux, ptr @clk_hp_clk_div, ptr @clk_noc1_clk_div, ptr @clk_noc0, ptr @clk_noc1, ptr @clk_gpio, ptr @clk_timer, ptr @clk_dsi, ptr @clk_i2c0, ptr @clk_i2c1, ptr @clk_i2c2, ptr @clk_i2c3, ptr @clk_spi0, ptr @clk_spi1, ptr @clk_spi2, ptr @clk_spi3, ptr @clk_usb3_480mpll0, ptr @clk_usb3_480mphy0, ptr @clk_usb3_5gphy, ptr @clk_usb3_cce, ptr @clk_sensor0, ptr @clk_sensor1, ptr @clk_hdmi_dev, ptr @clk_ethernet, ptr @clk_rmii_ref, ptr @clk_usb2h0_pllen, ptr @clk_usb2h0_phy, ptr @clk_usb2h0_cce, ptr @clk_usb2h1_pllen, ptr @clk_usb2h1_phy, ptr @clk_usb2h1_cce, ptr @clk_tvout, ptr @clk_irc_switch, ptr @clk_pcm1, ptr @.str.6, ptr @.compoundliteral, ptr @.str.7, ptr @.compoundliteral.8, ptr @.str.9, ptr @.compoundliteral.10, ptr @.str.11, ptr @.compoundliteral.12, ptr @.str.13, ptr @.compoundliteral.14, ptr @clk_cvbs_pll_table, ptr @.str.15, ptr @.compoundliteral.16, ptr @clk_audio_pll_table, ptr @.str.17, ptr @.compoundliteral.18, ptr @.str.19, ptr @.compoundliteral.20, ptr @.str.21, ptr @cpu_clk_mux_p, ptr @.compoundliteral.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @dev_clk_p, ptr @.compoundliteral.27, ptr @.str.28, ptr @.str.29, ptr @.compoundliteral.30, ptr @.compoundliteral.31, ptr @.str.32, ptr @.compoundliteral.33, ptr @.compoundliteral.34, ptr @.str.35, ptr @.compoundliteral.36, ptr @.compoundliteral.37, ptr @.str.38, ptr @noc_clk_mux_p, ptr @.compoundliteral.39, ptr @.str.40, ptr @.compoundliteral.41, ptr @.str.42, ptr @.compoundliteral.43, ptr @.compoundliteral.44, ptr @.compoundliteral.45, ptr @.str.46, ptr @.compoundliteral.47, ptr @.compoundliteral.48, ptr @.str.49, ptr @.compoundliteral.50, ptr @.compoundliteral.51, ptr @.compoundliteral.52, ptr @.compoundliteral.53, ptr @.str.54, ptr @sensor_clk_mux_p, ptr @.compoundliteral.55, ptr @clk_sensor_src, ptr @.str.57, ptr @.str.58, ptr @.compoundliteral.59, ptr @.compoundliteral.60, ptr @.str.61, ptr @.compoundliteral.62, ptr @.compoundliteral.63, ptr @.str.64, ptr @.compoundliteral.65, ptr @.str.66, ptr @csi_clk_mux_p, ptr @.compoundliteral.67, ptr @clk_csi, ptr @.compoundliteral.69, ptr @clk_si, ptr @de_factor_table, ptr @.str.71, ptr @de_clk_mux_p, ptr @.compoundliteral.72, ptr @clk_de, ptr @hde_factor_table, ptr @.str.74, ptr @hde_clk_mux_p, ptr @.compoundliteral.75, ptr @clk_hde, ptr @.str.77, ptr @.compoundliteral.78, ptr @clk_vde, ptr @.str.80, ptr @.compoundliteral.81, ptr @clk_vce, ptr @.str.83, ptr @nand_clk_mux_p, ptr @.compoundliteral.84, ptr @clk_nand, ptr @sd_factor_table, ptr @.str.86, ptr @sd_clk_mux_p, ptr @.compoundliteral.87, ptr @clk_sd0, ptr @.str.89, ptr @.compoundliteral.90, ptr @clk_sd1, ptr @.str.92, ptr @.compoundliteral.93, ptr @clk_sd2, ptr @.str.95, ptr @uart_clk_mux_p, ptr @.compoundliteral.96, ptr @clk_uart0, ptr @.str.98, ptr @.compoundliteral.99, ptr @clk_uart1, ptr @.str.101, ptr @.compoundliteral.102, ptr @clk_uart2, ptr @.str.104, ptr @.compoundliteral.105, ptr @clk_uart3, ptr @.str.107, ptr @.compoundliteral.108, ptr @clk_uart4, ptr @.str.110, ptr @.compoundliteral.111, ptr @clk_uart5, ptr @.str.113, ptr @.compoundliteral.114, ptr @clk_uart6, ptr @.str.116, ptr @pwm_clk_mux_p, ptr @.compoundliteral.117, ptr @clk_pwm0, ptr @.str.119, ptr @.compoundliteral.120, ptr @clk_pwm1, ptr @.str.122, ptr @.compoundliteral.123, ptr @clk_pwm2, ptr @.str.125, ptr @.compoundliteral.126, ptr @clk_pwm3, ptr @.str.128, ptr @.compoundliteral.129, ptr @clk_pwm4, ptr @.str.131, ptr @.compoundliteral.132, ptr @clk_pwm5, ptr @.str.134, ptr @gpu_clk_mux_p, ptr @.compoundliteral.135, ptr @clk_gpu3d, ptr @.str.137, ptr @.str.138, ptr @.compoundliteral.139, ptr @.compoundliteral.140, ptr @.str.141, ptr @.compoundliteral.142, ptr @.compoundliteral.143, ptr @.str.144, ptr @.compoundliteral.145, ptr @.compoundliteral.146, ptr @.str.147, ptr @.compoundliteral.148, ptr @.compoundliteral.149, ptr @.str.150, ptr @.compoundliteral.151, ptr @.compoundliteral.152, ptr @.str.153, ptr @.compoundliteral.154, ptr @.compoundliteral.155, ptr @.str.156, ptr @.compoundliteral.157, ptr @.compoundliteral.158, ptr @.str.159, ptr @.compoundliteral.160, ptr @.compoundliteral.161, ptr @.str.162, ptr @.compoundliteral.163, ptr @.str.164, ptr @.compoundliteral.165, ptr @.str.166, ptr @.compoundliteral.167, ptr @.str.168, ptr @.compoundliteral.169, ptr @lcd_factor_table, ptr @.str.170, ptr @lcd_clk_mux_p, ptr @.compoundliteral.171, ptr @clk_lcd, ptr @hdmia_div_table, ptr @.str.173, ptr @i2s_clk_mux_p, ptr @.compoundliteral.174, ptr @clk_hdmi_audio, ptr @.str.176, ptr @.compoundliteral.177, ptr @clk_i2srx, ptr @.str.179, ptr @.compoundliteral.180, ptr @clk_i2stx, ptr @.str.182, ptr @.compoundliteral.183, ptr @.compoundliteral.184, ptr @.str.185, ptr @.compoundliteral.186, ptr @.compoundliteral.187, ptr @.str.188, ptr @.compoundliteral.189, ptr @.str.190, ptr @.compoundliteral.191, ptr @.compoundliteral.192, ptr @rmii_div_table, ptr @.str.193, ptr @.compoundliteral.194, ptr @.compoundliteral.195, ptr @.str.196, ptr @.compoundliteral.197, ptr @.str.198, ptr @.compoundliteral.199, ptr @.str.200, ptr @.compoundliteral.201, ptr @.str.202, ptr @.compoundliteral.203, ptr @.str.204, ptr @.compoundliteral.205, ptr @.str.206, ptr @.compoundliteral.207, ptr @.str.208, ptr @.compoundliteral.209, ptr @.str.210, ptr @.compoundliteral.211, ptr @.compoundliteral.212, ptr @clk_thermal_sensor, ptr @.str.214, ptr @.compoundliteral.215, ptr @.str.216, ptr @.compoundliteral.217, ptr @.compoundliteral.218, ptr @s700_hw_clks], section "llvm.metadata"
@0 = internal global [298 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s700_clk_driver to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s700_clk_of_match to i32), i32 392, i32 512, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s700_clk_desc to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s700_clk_probe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s700_clks to i32), i32 316, i32 384, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s700_resets to i32), i32 184, i32 224, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_core_pll to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_dev_pll to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_ddr_pll to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_nand_pll to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_display_pll to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_cvbs_pll to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_audio_pll to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_ethernet_pll to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_cpu to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_dev to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_ahb to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_apb to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_dmac to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_noc0_clk_mux to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_noc1_clk_mux to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_hp_clk_mux to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_hp_clk_div to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_noc1_clk_div to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_noc0 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_noc1 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_gpio to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_timer to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_dsi to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_i2c0 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_i2c1 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_i2c2 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_i2c3 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_spi0 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_spi1 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_spi2 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_spi3 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb3_480mpll0 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb3_480mphy0 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb3_5gphy to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb3_cce to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_sensor0 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_sensor1 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_hdmi_dev to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_ethernet to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_rmii_ref to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb2h0_pllen to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb2h0_phy to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb2h0_cce to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb2h1_pllen to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb2h1_phy to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_usb2h1_cce to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_tvout to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_irc_switch to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_pcm1 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.8 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.10 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.12 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.14 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_cvbs_pll_table to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.16 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_audio_pll_table to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.18 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.20 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpu_clk_mux_p to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.22 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_clk_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.27 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.30 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.31 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.33 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.34 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.36 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.37 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @noc_clk_mux_p to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.39 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.41 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.43 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.44 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.45 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.47 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.48 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.50 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.51 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.52 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.53 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sensor_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.55 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_sensor_src to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.59 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.60 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.62 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.63 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.65 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @csi_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.67 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_csi to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.69 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_si to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @de_factor_table to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @de_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.72 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_de to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hde_factor_table to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hde_clk_mux_p to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.75 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_hde to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.78 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_vde to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.81 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_vce to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_clk_mux_p to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.84 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_nand to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sd_factor_table to i32), i32 636, i32 768, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sd_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.87 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_sd0 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.90 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_sd1 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.93 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_sd2 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uart_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.96 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_uart0 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.99 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_uart1 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.102 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_uart2 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.105 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_uart3 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.108 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_uart4 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.111 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_uart5 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.114 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_uart6 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.678 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pwm_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.117 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_pwm0 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.120 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_pwm1 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.123 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_pwm2 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.126 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_pwm3 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.129 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_pwm4 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.132 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_pwm5 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gpu_clk_mux_p to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.135 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_gpu3d to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.139 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.140 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.142 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.747 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.143 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.145 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.146 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.148 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.149 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.151 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.152 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.154 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.155 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.157 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.158 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.160 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.161 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.163 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.165 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.167 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.169 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lcd_factor_table to i32), i32 300, i32 384, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lcd_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.171 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_lcd to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hdmia_div_table to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2s_clk_mux_p to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.174 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_hdmi_audio to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.177 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_i2srx to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.180 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_i2stx to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.183 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.184 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.186 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.187 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.189 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.191 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.192 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rmii_div_table to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.194 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.195 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.197 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.865 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.199 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.201 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.203 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.205 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.207 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.209 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.211 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.212 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.894 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_thermal_sensor to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.215 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.217 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.218 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.906 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s700_hw_clks to i32), i32 332, i32 416, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @s700_clk_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #6
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__platform_driver_register(ptr noundef nonnull @s700_clk_driver, ptr noundef null) #4
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__platform_driver_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @s700_clk_probe(ptr noundef %pdev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #6
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @owl_clk_regmap_init(ptr noundef %pdev, ptr noundef nonnull @s700_clk_desc) #4
  %dev = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  %call.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev, i32 noundef 52, i32 noundef 3520) #4
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #6
  br label %cleanup

if.end:                                           ; preds = %entry
  %of_node = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 27
  %0 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node, align 8
  %of_node3 = getelementptr inbounds %struct.reset_controller_dev, ptr %call.i, i32 0, i32 5
  %2 = ptrtoint ptr %of_node3 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %of_node3, align 4
  %3 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @owl_reset_ops, ptr %call.i, align 4
  %4 = load i32, ptr getelementptr inbounds (%struct.owl_clk_desc, ptr @s700_clk_desc, i32 0, i32 4), align 4
  %nr_resets = getelementptr inbounds %struct.reset_controller_dev, ptr %call.i, i32 0, i32 8
  %5 = ptrtoint ptr %nr_resets to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %nr_resets, align 4
  %6 = load ptr, ptr getelementptr inbounds (%struct.owl_clk_desc, ptr @s700_clk_desc, i32 0, i32 3), align 4
  %reset_map = getelementptr inbounds %struct.owl_reset, ptr %call.i, i32 0, i32 1
  %7 = ptrtoint ptr %reset_map to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %reset_map, align 4
  %8 = load ptr, ptr getelementptr inbounds (%struct.owl_clk_desc, ptr @s700_clk_desc, i32 0, i32 5), align 4
  %regmap6 = getelementptr inbounds %struct.owl_reset, ptr %call.i, i32 0, i32 2
  %9 = ptrtoint ptr %regmap6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %regmap6, align 4
  %call9 = tail call i32 @devm_reset_controller_register(ptr noundef %dev, ptr noundef nonnull %call.i) #4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end.if.end13_crit_edge, label %do.end

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #6
  br label %if.end13

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #6
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.1) #7
  br label %if.end13

if.end13:                                         ; preds = %do.end, %if.end.if.end13_crit_edge
  %10 = load ptr, ptr getelementptr inbounds (%struct.owl_clk_desc, ptr @s700_clk_desc, i32 0, i32 2), align 4
  %call15 = tail call i32 @owl_clk_probe(ptr noundef %dev, ptr noundef %10) #4
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.end13 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @owl_clk_regmap_init(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devm_reset_controller_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @owl_clk_probe(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kmalloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #4

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load4_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #5 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 298)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #5 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 298)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { nounwind }
attributes #5 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #6 = { nomerge }
attributes #7 = { cold nounwind }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !9, !10, !11, !12, !13, !14, !16, !18, !20, !21, !23, !24, !26, !27, !29, !30, !32, !33, !35, !36, !38, !40, !41, !43, !45, !46, !48, !49, !51, !53, !55, !57, !59, !60, !62, !64, !65, !66, !68, !69, !71, !72, !74, !75, !77, !79, !80, !82, !83, !85, !87, !88, !90, !91, !93, !95, !96, !98, !100, !102, !103, !105, !106, !108, !109, !111, !112, !114, !116, !118, !119, !121, !123, !125, !126, !128, !130, !132, !133, !135, !136, !138, !139, !141, !143, !144, !146, !148, !150, !151, !153, !154, !156, !157, !159, !161, !162, !164, !165, !167, !168, !170, !171, !173, !174, !176, !177, !179, !180, !182, !184, !185, !187, !188, !190, !191, !193, !194, !196, !197, !199, !200, !202, !204, !206, !207, !209, !210, !212, !213, !215, !216, !218, !219, !221, !222, !224, !225, !227, !228, !230, !231, !233, !234, !236, !237, !239, !240, !242, !243, !245, !247, !249, !250, !252, !254, !256, !257, !259, !260, !262, !263, !265, !266, !268, !269, !271, !272, !274, !275, !277, !279, !280, !282, !283, !285, !286, !288, !289, !291, !292, !294, !295, !297, !298, !300, !301, !303, !304, !306, !307, !309, !311}
!llvm.module.flags = !{!313, !314, !315, !316, !317, !318, !319, !320}
!llvm.ident = !{!321}

!0 = !{ptr @__initcall__kmod_owl_s700__170_657_s700_clk_init1, !1, !"__initcall__kmod_owl_s700__170_657_s700_clk_init1", i1 false, i1 false}
!1 = !{!"../drivers/clk/actions/owl-s700.c", i32 657, i32 1}
!2 = !{ptr @.str, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../drivers/clk/actions/owl-s700.c", i32 648, i32 11}
!4 = !{ptr @s700_clk_driver, !5, !"s700_clk_driver", i1 false, i1 false}
!5 = !{!"../drivers/clk/actions/owl-s700.c", i32 645, i32 31}
!6 = !{ptr @.str.1, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../drivers/clk/actions/owl-s700.c", i32 635, i32 3}
!8 = !{ptr @.str.2, !7, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @.str.3, !7, !"<string literal>", i1 false, i1 false}
!10 = !{ptr @.str.4, !7, !"<string literal>", i1 false, i1 false}
!11 = !{ptr @.str.5, !7, !"<string literal>", i1 false, i1 false}
!12 = !{ptr @s700_clk_probe._entry, !7, !"_entry", i1 false, i1 false}
!13 = !{ptr @s700_clk_probe._entry_ptr, !7, !"_entry_ptr", i1 false, i1 false}
!14 = !{ptr @s700_clk_desc, !15, !"s700_clk_desc", i1 false, i1 false}
!15 = !{!"../drivers/clk/actions/owl-s700.c", i32 600, i32 28}
!16 = !{ptr @s700_clks, !17, !"s700_clks", i1 false, i1 false}
!17 = !{!"../drivers/clk/actions/owl-s700.c", i32 407, i32 31}
!18 = !{ptr @.str.6, !19, !"<string literal>", i1 false, i1 false}
!19 = !{!"../drivers/clk/actions/owl-s700.c", i32 89, i32 8}
!20 = !{ptr @clk_core_pll, !19, !"clk_core_pll", i1 false, i1 false}
!21 = !{ptr @.str.7, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../drivers/clk/actions/owl-s700.c", i32 90, i32 8}
!23 = !{ptr @clk_dev_pll, !22, !"clk_dev_pll", i1 false, i1 false}
!24 = !{ptr @.str.9, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../drivers/clk/actions/owl-s700.c", i32 91, i32 8}
!26 = !{ptr @clk_ddr_pll, !25, !"clk_ddr_pll", i1 false, i1 false}
!27 = !{ptr @.str.11, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../drivers/clk/actions/owl-s700.c", i32 92, i32 8}
!29 = !{ptr @clk_nand_pll, !28, !"clk_nand_pll", i1 false, i1 false}
!30 = !{ptr @.str.13, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/clk/actions/owl-s700.c", i32 93, i32 8}
!32 = !{ptr @clk_display_pll, !31, !"clk_display_pll", i1 false, i1 false}
!33 = !{ptr @.str.15, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../drivers/clk/actions/owl-s700.c", i32 94, i32 8}
!35 = !{ptr @clk_cvbs_pll, !34, !"clk_cvbs_pll", i1 false, i1 false}
!36 = !{ptr @clk_cvbs_pll_table, !37, !"clk_cvbs_pll_table", i1 false, i1 false}
!37 = !{!"../drivers/clk/actions/owl-s700.c", i32 79, i32 29}
!38 = !{ptr @.str.17, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../drivers/clk/actions/owl-s700.c", i32 95, i32 8}
!40 = !{ptr @clk_audio_pll, !39, !"clk_audio_pll", i1 false, i1 false}
!41 = !{ptr @clk_audio_pll_table, !42, !"clk_audio_pll_table", i1 false, i1 false}
!42 = !{!"../drivers/clk/actions/owl-s700.c", i32 74, i32 29}
!43 = !{ptr @.str.19, !44, !"<string literal>", i1 false, i1 false}
!44 = !{!"../drivers/clk/actions/owl-s700.c", i32 96, i32 8}
!45 = !{ptr @clk_ethernet_pll, !44, !"clk_ethernet_pll", i1 false, i1 false}
!46 = !{ptr @.str.21, !47, !"<string literal>", i1 false, i1 false}
!47 = !{!"../drivers/clk/actions/owl-s700.c", i32 115, i32 8}
!48 = !{ptr @clk_cpu, !47, !"clk_cpu", i1 false, i1 false}
!49 = !{ptr @.str.23, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../drivers/clk/actions/owl-s700.c", i32 98, i32 39}
!51 = !{ptr @.str.24, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../drivers/clk/actions/owl-s700.c", i32 98, i32 47}
!53 = !{ptr @.str.25, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../drivers/clk/actions/owl-s700.c", i32 98, i32 67}
!55 = !{ptr @cpu_clk_mux_p, !56, !"cpu_clk_mux_p", i1 false, i1 false}
!56 = !{!"../drivers/clk/actions/owl-s700.c", i32 98, i32 20}
!57 = !{ptr @.str.26, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../drivers/clk/actions/owl-s700.c", i32 116, i32 8}
!59 = !{ptr @clk_dev, !58, !"clk_dev", i1 false, i1 false}
!60 = !{ptr @dev_clk_p, !61, !"dev_clk_p", i1 false, i1 false}
!61 = !{!"../drivers/clk/actions/owl-s700.c", i32 99, i32 20}
!62 = !{ptr @.str.28, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../drivers/clk/actions/owl-s700.c", i32 172, i32 8}
!64 = !{ptr @.str.29, !63, !"<string literal>", i1 false, i1 false}
!65 = !{ptr @clk_ahb, !63, !"clk_ahb", i1 false, i1 false}
!66 = !{ptr @.str.32, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../drivers/clk/actions/owl-s700.c", i32 173, i32 8}
!68 = !{ptr @clk_apb, !67, !"clk_apb", i1 false, i1 false}
!69 = !{ptr @.str.35, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../drivers/clk/actions/owl-s700.c", i32 192, i32 8}
!71 = !{ptr @clk_dmac, !70, !"clk_dmac", i1 false, i1 false}
!72 = !{ptr @.str.38, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/clk/actions/owl-s700.c", i32 117, i32 8}
!74 = !{ptr @clk_noc0_clk_mux, !73, !"clk_noc0_clk_mux", i1 false, i1 false}
!75 = !{ptr @noc_clk_mux_p, !76, !"noc_clk_mux_p", i1 false, i1 false}
!76 = !{!"../drivers/clk/actions/owl-s700.c", i32 100, i32 20}
!77 = !{ptr @.str.40, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../drivers/clk/actions/owl-s700.c", i32 118, i32 8}
!79 = !{ptr @clk_noc1_clk_mux, !78, !"clk_noc1_clk_mux", i1 false, i1 false}
!80 = !{ptr @.str.42, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../drivers/clk/actions/owl-s700.c", i32 119, i32 8}
!82 = !{ptr @clk_hp_clk_mux, !81, !"clk_hp_clk_mux", i1 false, i1 false}
!83 = !{ptr @clk_hp_clk_div, !84, !"clk_hp_clk_div", i1 false, i1 false}
!84 = !{!"../drivers/clk/actions/owl-s700.c", i32 171, i32 8}
!85 = !{ptr @.str.46, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../drivers/clk/actions/owl-s700.c", i32 170, i32 8}
!87 = !{ptr @clk_noc1_clk_div, !86, !"clk_noc1_clk_div", i1 false, i1 false}
!88 = !{ptr @.str.49, !89, !"<string literal>", i1 false, i1 false}
!89 = !{!"../drivers/clk/actions/owl-s700.c", i32 168, i32 8}
!90 = !{ptr @clk_noc0, !89, !"clk_noc0", i1 false, i1 false}
!91 = !{ptr @clk_noc1, !92, !"clk_noc1", i1 false, i1 false}
!92 = !{!"../drivers/clk/actions/owl-s700.c", i32 169, i32 8}
!93 = !{ptr @.str.54, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../drivers/clk/actions/owl-s700.c", i32 392, i32 8}
!95 = !{ptr @clk_sensor_src, !94, !"clk_sensor_src", i1 false, i1 false}
!96 = !{ptr @.str.57, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../drivers/clk/actions/owl-s700.c", i32 112, i32 51}
!98 = !{ptr @sensor_clk_mux_p, !99, !"sensor_clk_mux_p", i1 false, i1 false}
!99 = !{!"../drivers/clk/actions/owl-s700.c", i32 112, i32 20}
!100 = !{ptr @.str.58, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../drivers/clk/actions/owl-s700.c", i32 191, i32 8}
!102 = !{ptr @clk_gpio, !101, !"clk_gpio", i1 false, i1 false}
!103 = !{ptr @.str.61, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../drivers/clk/actions/owl-s700.c", i32 193, i32 8}
!105 = !{ptr @clk_timer, !104, !"clk_timer", i1 false, i1 false}
!106 = !{ptr @.str.64, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../drivers/clk/actions/owl-s700.c", i32 194, i32 8}
!108 = !{ptr @clk_dsi, !107, !"clk_dsi", i1 false, i1 false}
!109 = !{ptr @.str.66, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../drivers/clk/actions/owl-s700.c", i32 219, i32 8}
!111 = !{ptr @clk_csi, !110, !"clk_csi", i1 false, i1 false}
!112 = !{ptr @csi_clk_mux_p, !113, !"csi_clk_mux_p", i1 false, i1 false}
!113 = !{!"../drivers/clk/actions/owl-s700.c", i32 102, i32 20}
!114 = !{ptr @clk_si, !115, !"clk_si", i1 false, i1 false}
!115 = !{!"../drivers/clk/actions/owl-s700.c", i32 225, i32 8}
!116 = !{ptr @.str.71, !117, !"<string literal>", i1 false, i1 false}
!117 = !{!"../drivers/clk/actions/owl-s700.c", i32 231, i32 8}
!118 = !{ptr @clk_de, !117, !"clk_de", i1 false, i1 false}
!119 = !{ptr @de_factor_table, !120, !"de_factor_table", i1 false, i1 false}
!120 = !{!"../drivers/clk/actions/owl-s700.c", i32 178, i32 32}
!121 = !{ptr @de_clk_mux_p, !122, !"de_clk_mux_p", i1 false, i1 false}
!122 = !{!"../drivers/clk/actions/owl-s700.c", i32 103, i32 20}
!123 = !{ptr @.str.74, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../drivers/clk/actions/owl-s700.c", i32 237, i32 8}
!125 = !{ptr @clk_hde, !124, !"clk_hde", i1 false, i1 false}
!126 = !{ptr @hde_factor_table, !127, !"hde_factor_table", i1 false, i1 false}
!127 = !{!"../drivers/clk/actions/owl-s700.c", i32 184, i32 32}
!128 = !{ptr @hde_clk_mux_p, !129, !"hde_clk_mux_p", i1 false, i1 false}
!129 = !{!"../drivers/clk/actions/owl-s700.c", i32 104, i32 20}
!130 = !{ptr @.str.77, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../drivers/clk/actions/owl-s700.c", i32 243, i32 8}
!132 = !{ptr @clk_vde, !131, !"clk_vde", i1 false, i1 false}
!133 = !{ptr @.str.80, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../drivers/clk/actions/owl-s700.c", i32 249, i32 8}
!135 = !{ptr @clk_vce, !134, !"clk_vce", i1 false, i1 false}
!136 = !{ptr @.str.83, !137, !"<string literal>", i1 false, i1 false}
!137 = !{!"../drivers/clk/actions/owl-s700.c", i32 255, i32 8}
!138 = !{ptr @clk_nand, !137, !"clk_nand", i1 false, i1 false}
!139 = !{ptr @nand_clk_mux_p, !140, !"nand_clk_mux_p", i1 false, i1 false}
!140 = !{!"../drivers/clk/actions/owl-s700.c", i32 105, i32 20}
!141 = !{ptr @.str.86, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../drivers/clk/actions/owl-s700.c", i32 261, i32 8}
!143 = !{ptr @clk_sd0, !142, !"clk_sd0", i1 false, i1 false}
!144 = !{ptr @sd_factor_table, !145, !"sd_factor_table", i1 false, i1 false}
!145 = !{!"../drivers/clk/actions/owl-s700.c", i32 121, i32 32}
!146 = !{ptr @sd_clk_mux_p, !147, !"sd_clk_mux_p", i1 false, i1 false}
!147 = !{!"../drivers/clk/actions/owl-s700.c", i32 106, i32 20}
!148 = !{ptr @.str.89, !149, !"<string literal>", i1 false, i1 false}
!149 = !{!"../drivers/clk/actions/owl-s700.c", i32 267, i32 8}
!150 = !{ptr @clk_sd1, !149, !"clk_sd1", i1 false, i1 false}
!151 = !{ptr @.str.92, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../drivers/clk/actions/owl-s700.c", i32 273, i32 8}
!153 = !{ptr @clk_sd2, !152, !"clk_sd2", i1 false, i1 false}
!154 = !{ptr @.str.95, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../drivers/clk/actions/owl-s700.c", i32 279, i32 8}
!156 = !{ptr @clk_uart0, !155, !"clk_uart0", i1 false, i1 false}
!157 = !{ptr @uart_clk_mux_p, !158, !"uart_clk_mux_p", i1 false, i1 false}
!158 = !{!"../drivers/clk/actions/owl-s700.c", i32 107, i32 20}
!159 = !{ptr @.str.98, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../drivers/clk/actions/owl-s700.c", i32 285, i32 8}
!161 = !{ptr @clk_uart1, !160, !"clk_uart1", i1 false, i1 false}
!162 = !{ptr @.str.101, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../drivers/clk/actions/owl-s700.c", i32 291, i32 8}
!164 = !{ptr @clk_uart2, !163, !"clk_uart2", i1 false, i1 false}
!165 = !{ptr @.str.104, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../drivers/clk/actions/owl-s700.c", i32 297, i32 8}
!167 = !{ptr @clk_uart3, !166, !"clk_uart3", i1 false, i1 false}
!168 = !{ptr @.str.107, !169, !"<string literal>", i1 false, i1 false}
!169 = !{!"../drivers/clk/actions/owl-s700.c", i32 303, i32 8}
!170 = !{ptr @clk_uart4, !169, !"clk_uart4", i1 false, i1 false}
!171 = !{ptr @.str.110, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../drivers/clk/actions/owl-s700.c", i32 309, i32 8}
!173 = !{ptr @clk_uart5, !172, !"clk_uart5", i1 false, i1 false}
!174 = !{ptr @.str.113, !175, !"<string literal>", i1 false, i1 false}
!175 = !{!"../drivers/clk/actions/owl-s700.c", i32 315, i32 8}
!176 = !{ptr @clk_uart6, !175, !"clk_uart6", i1 false, i1 false}
!177 = !{ptr @.str.116, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../drivers/clk/actions/owl-s700.c", i32 321, i32 8}
!179 = !{ptr @clk_pwm0, !178, !"clk_pwm0", i1 false, i1 false}
!180 = !{ptr @pwm_clk_mux_p, !181, !"pwm_clk_mux_p", i1 false, i1 false}
!181 = !{!"../drivers/clk/actions/owl-s700.c", i32 108, i32 20}
!182 = !{ptr @.str.119, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/clk/actions/owl-s700.c", i32 327, i32 8}
!184 = !{ptr @clk_pwm1, !183, !"clk_pwm1", i1 false, i1 false}
!185 = !{ptr @.str.122, !186, !"<string literal>", i1 false, i1 false}
!186 = !{!"../drivers/clk/actions/owl-s700.c", i32 333, i32 8}
!187 = !{ptr @clk_pwm2, !186, !"clk_pwm2", i1 false, i1 false}
!188 = !{ptr @.str.125, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../drivers/clk/actions/owl-s700.c", i32 339, i32 8}
!190 = !{ptr @clk_pwm3, !189, !"clk_pwm3", i1 false, i1 false}
!191 = !{ptr @.str.128, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../drivers/clk/actions/owl-s700.c", i32 345, i32 8}
!193 = !{ptr @clk_pwm4, !192, !"clk_pwm4", i1 false, i1 false}
!194 = !{ptr @.str.131, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../drivers/clk/actions/owl-s700.c", i32 351, i32 8}
!196 = !{ptr @clk_pwm5, !195, !"clk_pwm5", i1 false, i1 false}
!197 = !{ptr @.str.134, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../drivers/clk/actions/owl-s700.c", i32 357, i32 8}
!199 = !{ptr @clk_gpu3d, !198, !"clk_gpu3d", i1 false, i1 false}
!200 = !{ptr @.str.137, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../drivers/clk/actions/owl-s700.c", i32 109, i32 78}
!202 = !{ptr @gpu_clk_mux_p, !203, !"gpu_clk_mux_p", i1 false, i1 false}
!203 = !{!"../drivers/clk/actions/owl-s700.c", i32 109, i32 20}
!204 = !{ptr @.str.138, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../drivers/clk/actions/owl-s700.c", i32 201, i32 8}
!206 = !{ptr @clk_i2c0, !205, !"clk_i2c0", i1 false, i1 false}
!207 = !{ptr @.str.141, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../drivers/clk/actions/owl-s700.c", i32 202, i32 8}
!209 = !{ptr @clk_i2c1, !208, !"clk_i2c1", i1 false, i1 false}
!210 = !{ptr @.str.144, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../drivers/clk/actions/owl-s700.c", i32 203, i32 8}
!212 = !{ptr @clk_i2c2, !211, !"clk_i2c2", i1 false, i1 false}
!213 = !{ptr @.str.147, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../drivers/clk/actions/owl-s700.c", i32 204, i32 8}
!215 = !{ptr @clk_i2c3, !214, !"clk_i2c3", i1 false, i1 false}
!216 = !{ptr @.str.150, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../drivers/clk/actions/owl-s700.c", i32 205, i32 8}
!218 = !{ptr @clk_spi0, !217, !"clk_spi0", i1 false, i1 false}
!219 = !{ptr @.str.153, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../drivers/clk/actions/owl-s700.c", i32 206, i32 8}
!221 = !{ptr @clk_spi1, !220, !"clk_spi1", i1 false, i1 false}
!222 = !{ptr @.str.156, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../drivers/clk/actions/owl-s700.c", i32 207, i32 8}
!224 = !{ptr @clk_spi2, !223, !"clk_spi2", i1 false, i1 false}
!225 = !{ptr @.str.159, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../drivers/clk/actions/owl-s700.c", i32 208, i32 8}
!227 = !{ptr @clk_spi3, !226, !"clk_spi3", i1 false, i1 false}
!228 = !{ptr @.str.162, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../drivers/clk/actions/owl-s700.c", i32 197, i32 8}
!230 = !{ptr @clk_usb3_480mpll0, !229, !"clk_usb3_480mpll0", i1 false, i1 false}
!231 = !{ptr @.str.164, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../drivers/clk/actions/owl-s700.c", i32 198, i32 8}
!233 = !{ptr @clk_usb3_480mphy0, !232, !"clk_usb3_480mphy0", i1 false, i1 false}
!234 = !{ptr @.str.166, !235, !"<string literal>", i1 false, i1 false}
!235 = !{!"../drivers/clk/actions/owl-s700.c", i32 199, i32 8}
!236 = !{ptr @clk_usb3_5gphy, !235, !"clk_usb3_5gphy", i1 false, i1 false}
!237 = !{ptr @.str.168, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/clk/actions/owl-s700.c", i32 200, i32 8}
!239 = !{ptr @clk_usb3_cce, !238, !"clk_usb3_cce", i1 false, i1 false}
!240 = !{ptr @.str.170, !241, !"<string literal>", i1 false, i1 false}
!241 = !{!"../drivers/clk/actions/owl-s700.c", i32 363, i32 8}
!242 = !{ptr @clk_lcd, !241, !"clk_lcd", i1 false, i1 false}
!243 = !{ptr @lcd_factor_table, !244, !"lcd_factor_table", i1 false, i1 false}
!244 = !{!"../drivers/clk/actions/owl-s700.c", i32 143, i32 32}
!245 = !{ptr @lcd_clk_mux_p, !246, !"lcd_clk_mux_p", i1 false, i1 false}
!246 = !{!"../drivers/clk/actions/owl-s700.c", i32 110, i32 20}
!247 = !{ptr @.str.173, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/clk/actions/owl-s700.c", i32 369, i32 8}
!249 = !{ptr @clk_hdmi_audio, !248, !"clk_hdmi_audio", i1 false, i1 false}
!250 = !{ptr @hdmia_div_table, !251, !"hdmia_div_table", i1 false, i1 false}
!251 = !{!"../drivers/clk/actions/owl-s700.c", i32 156, i32 29}
!252 = !{ptr @i2s_clk_mux_p, !253, !"i2s_clk_mux_p", i1 false, i1 false}
!253 = !{!"../drivers/clk/actions/owl-s700.c", i32 111, i32 20}
!254 = !{ptr @.str.176, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../drivers/clk/actions/owl-s700.c", i32 375, i32 8}
!256 = !{ptr @clk_i2srx, !255, !"clk_i2srx", i1 false, i1 false}
!257 = !{ptr @.str.179, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../drivers/clk/actions/owl-s700.c", i32 381, i32 8}
!259 = !{ptr @clk_i2stx, !258, !"clk_i2stx", i1 false, i1 false}
!260 = !{ptr @.str.182, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../drivers/clk/actions/owl-s700.c", i32 174, i32 8}
!262 = !{ptr @clk_sensor0, !261, !"clk_sensor0", i1 false, i1 false}
!263 = !{ptr @.str.185, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../drivers/clk/actions/owl-s700.c", i32 175, i32 8}
!265 = !{ptr @clk_sensor1, !264, !"clk_sensor1", i1 false, i1 false}
!266 = !{ptr @.str.188, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../drivers/clk/actions/owl-s700.c", i32 196, i32 8}
!268 = !{ptr @clk_hdmi_dev, !267, !"clk_hdmi_dev", i1 false, i1 false}
!269 = !{ptr @.str.190, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../drivers/clk/actions/owl-s700.c", i32 398, i32 8}
!271 = !{ptr @clk_ethernet, !270, !"clk_ethernet", i1 false, i1 false}
!272 = !{ptr @.str.193, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../drivers/clk/actions/owl-s700.c", i32 176, i32 8}
!274 = !{ptr @clk_rmii_ref, !273, !"clk_rmii_ref", i1 false, i1 false}
!275 = !{ptr @rmii_div_table, !276, !"rmii_div_table", i1 false, i1 false}
!276 = !{!"../drivers/clk/actions/owl-s700.c", i32 163, i32 29}
!277 = !{ptr @.str.196, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../drivers/clk/actions/owl-s700.c", i32 209, i32 8}
!279 = !{ptr @clk_usb2h0_pllen, !278, !"clk_usb2h0_pllen", i1 false, i1 false}
!280 = !{ptr @.str.198, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../drivers/clk/actions/owl-s700.c", i32 210, i32 8}
!282 = !{ptr @clk_usb2h0_phy, !281, !"clk_usb2h0_phy", i1 false, i1 false}
!283 = !{ptr @.str.200, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../drivers/clk/actions/owl-s700.c", i32 211, i32 8}
!285 = !{ptr @clk_usb2h0_cce, !284, !"clk_usb2h0_cce", i1 false, i1 false}
!286 = !{ptr @.str.202, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../drivers/clk/actions/owl-s700.c", i32 212, i32 8}
!288 = !{ptr @clk_usb2h1_pllen, !287, !"clk_usb2h1_pllen", i1 false, i1 false}
!289 = !{ptr @.str.204, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../drivers/clk/actions/owl-s700.c", i32 213, i32 8}
!291 = !{ptr @clk_usb2h1_phy, !290, !"clk_usb2h1_phy", i1 false, i1 false}
!292 = !{ptr @.str.206, !293, !"<string literal>", i1 false, i1 false}
!293 = !{!"../drivers/clk/actions/owl-s700.c", i32 214, i32 8}
!294 = !{ptr @clk_usb2h1_cce, !293, !"clk_usb2h1_cce", i1 false, i1 false}
!295 = !{ptr @.str.208, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../drivers/clk/actions/owl-s700.c", i32 195, i32 8}
!297 = !{ptr @clk_tvout, !296, !"clk_tvout", i1 false, i1 false}
!298 = !{ptr @.str.210, !299, !"<string literal>", i1 false, i1 false}
!299 = !{!"../drivers/clk/actions/owl-s700.c", i32 402, i32 8}
!300 = !{ptr @clk_thermal_sensor, !299, !"clk_thermal_sensor", i1 false, i1 false}
!301 = !{ptr @.str.214, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../drivers/clk/actions/owl-s700.c", i32 215, i32 8}
!303 = !{ptr @clk_irc_switch, !302, !"clk_irc_switch", i1 false, i1 false}
!304 = !{ptr @.str.216, !305, !"<string literal>", i1 false, i1 false}
!305 = !{!"../drivers/clk/actions/owl-s700.c", i32 388, i32 8}
!306 = !{ptr @clk_pcm1, !305, !"clk_pcm1", i1 false, i1 false}
!307 = !{ptr @s700_hw_clks, !308, !"s700_hw_clks", i1 false, i1 false}
!308 = !{!"../drivers/clk/actions/owl-s700.c", i32 489, i32 35}
!309 = !{ptr @s700_resets, !310, !"s700_resets", i1 false, i1 false}
!310 = !{!"../drivers/clk/actions/owl-s700.c", i32 574, i32 35}
!311 = !{ptr @s700_clk_of_match, !312, !"s700_clk_of_match", i1 false, i1 false}
!312 = !{!"../drivers/clk/actions/owl-s700.c", i32 640, i32 34}
!313 = !{i32 1, !"wchar_size", i32 2}
!314 = !{i32 1, !"min_enum_size", i32 4}
!315 = !{i32 8, !"branch-target-enforcement", i32 0}
!316 = !{i32 8, !"sign-return-address", i32 0}
!317 = !{i32 8, !"sign-return-address-all", i32 0}
!318 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!319 = !{i32 7, !"uwtable", i32 1}
!320 = !{i32 7, !"frame-pointer", i32 2}
!321 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
