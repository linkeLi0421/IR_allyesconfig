; ModuleID = '/llk/IR_all_yes/drivers/clk/actions/owl-s900.c_pt.bc'
source_filename = "../drivers/clk/actions/owl-s900.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.platform_driver = type { ptr, ptr, ptr, ptr, ptr, %struct.device_driver, ptr, i8 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], ptr }
%struct.owl_clk_desc = type { ptr, i32, ptr, ptr, i32, ptr }
%struct.reset_control_ops = type { ptr, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.owl_reset_map = type { i32, i32 }
%struct.owl_pll = type { %struct.owl_pll_hw, %struct.owl_clk_common }
%struct.owl_pll_hw = type { i32, i32, i8, i8, i8, i8, i8, i8, ptr }
%struct.owl_clk_common = type { ptr, %struct.clk_hw }
%struct.clk_hw = type { ptr, ptr, ptr }
%struct.owl_mux = type { %struct.owl_mux_hw, %struct.owl_clk_common }
%struct.owl_mux_hw = type { i32, i8, i8 }
%struct.owl_divider = type { %struct.owl_divider_hw, %struct.owl_clk_common }
%struct.owl_divider_hw = type { i32, i8, i8, i8, ptr }
%struct.owl_factor = type { %struct.owl_factor_hw, %struct.owl_clk_common }
%struct.owl_factor_hw = type { i32, i8, i8, i8, ptr }
%struct.owl_gate = type { %struct.owl_gate_hw, %struct.owl_clk_common }
%struct.owl_gate_hw = type { i32, i8, i8 }
%struct.owl_composite = type { %struct.owl_mux_hw, %struct.owl_gate_hw, %union.owl_rate, ptr, %struct.owl_clk_common }
%union.owl_rate = type { %struct.clk_fixed_factor }
%struct.clk_fixed_factor = type { %struct.clk_hw, i32, i32 }
%struct.clk_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.clk_init_data = type { ptr, ptr, ptr, ptr, ptr, i8, i32 }
%struct.clk_pll_table = type { i32, i32 }
%struct.clk_div_table = type { i32, i32 }
%struct.clk_factor_table = type { i32, i32, i32 }
%struct.platform_device = type { ptr, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, ptr, ptr, ptr, ptr, %struct.pdev_archdata }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.list_head = type { ptr, ptr }
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.pdev_archdata = type { ptr }
%struct.reset_controller_dev = type { ptr, ptr, %struct.list_head, %struct.list_head, ptr, ptr, i32, ptr, i32 }
%struct.owl_reset = type { %struct.reset_controller_dev, ptr, ptr }

@__initcall__kmod_owl_s900__170_803_s900_clk_init1 = internal global ptr @s900_clk_init, section ".initcall1.init", align 4
@s900_clk_driver = internal global { %struct.platform_driver, [56 x i8] } { %struct.platform_driver { ptr @s900_clk_probe, ptr null, ptr null, ptr null, ptr null, %struct.device_driver { ptr @.str, ptr null, ptr null, ptr null, i8 0, i32 0, ptr @s900_clk_of_match, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, ptr null, i8 0 }, [56 x i8] zeroinitializer }, align 32
@.str = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"s900-cmu\00", [23 x i8] zeroinitializer }, align 32
@s900_clk_of_match = internal constant { [2 x %struct.of_device_id], [120 x i8] } { [2 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"actions,s900-cmu\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null }, %struct.of_device_id zeroinitializer], [120 x i8] zeroinitializer }, align 32
@s900_clk_desc = internal global { %struct.owl_clk_desc, [40 x i8] } { %struct.owl_clk_desc { ptr @s900_clks, i32 89, ptr @s900_hw_clks, ptr @s900_resets, i32 54, ptr null }, [40 x i8] zeroinitializer }, align 32
@owl_reset_ops = external dso_local constant %struct.reset_control_ops, align 4
@s900_clk_probe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str.3, i32 781, ptr @.str.4, ptr @.str.5 }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Failed to register reset controller\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"s900_clk_probe\00", [17 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"drivers/clk/actions/owl-s900.c\00", [33 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@s900_clk_probe._entry_ptr = internal global ptr @s900_clk_probe._entry, section ".printk_index", align 4
@s900_clks = internal global { [89 x ptr], [92 x i8] } { [89 x ptr] [ptr getelementptr (i8, ptr @core_pll_clk, i64 20), ptr getelementptr (i8, ptr @dev_pll_clk, i64 20), ptr getelementptr (i8, ptr @ddr_pll_clk, i64 20), ptr getelementptr (i8, ptr @nand_pll_clk, i64 20), ptr getelementptr (i8, ptr @display_pll_clk, i64 20), ptr getelementptr (i8, ptr @assist_pll_clk, i64 20), ptr getelementptr (i8, ptr @audio_pll_clk, i64 20), ptr getelementptr (i8, ptr @edp_pll_clk, i64 20), ptr getelementptr (i8, ptr @cpu_clk, i64 8), ptr getelementptr (i8, ptr @dev_clk, i64 8), ptr getelementptr (i8, ptr @noc_clk_mux, i64 8), ptr getelementptr (i8, ptr @noc_clk_div, i64 12), ptr getelementptr (i8, ptr @ahb_clk, i64 12), ptr getelementptr (i8, ptr @apb_clk, i64 12), ptr getelementptr (i8, ptr @usb3_mac_clk, i64 12), ptr getelementptr (i8, ptr @rmii_ref_clk, i64 12), ptr getelementptr (i8, ptr @noc_clk, i64 12), ptr getelementptr (i8, ptr @de_clk1, i64 12), ptr getelementptr (i8, ptr @de_clk2, i64 12), ptr getelementptr (i8, ptr @de_clk3, i64 12), ptr getelementptr (i8, ptr @gpio_clk, i64 8), ptr getelementptr (i8, ptr @gpu_clk, i64 8), ptr getelementptr (i8, ptr @dmac_clk, i64 8), ptr getelementptr (i8, ptr @timer_clk, i64 8), ptr getelementptr (i8, ptr @dsi_clk, i64 8), ptr getelementptr (i8, ptr @ddr0_clk, i64 8), ptr getelementptr (i8, ptr @ddr1_clk, i64 8), ptr getelementptr (i8, ptr @usb3_480mpll0_clk, i64 8), ptr getelementptr (i8, ptr @usb3_480mphy0_clk, i64 8), ptr getelementptr (i8, ptr @usb3_5gphy_clk, i64 8), ptr getelementptr (i8, ptr @usb3_cce_clk, i64 8), ptr getelementptr (i8, ptr @edp24M_clk, i64 8), ptr getelementptr (i8, ptr @edp_link_clk, i64 8), ptr getelementptr (i8, ptr @usbh0_pllen_clk, i64 8), ptr getelementptr (i8, ptr @usbh0_phy_clk, i64 8), ptr getelementptr (i8, ptr @usbh0_cce_clk, i64 8), ptr getelementptr (i8, ptr @usbh1_pllen_clk, i64 8), ptr getelementptr (i8, ptr @usbh1_phy_clk, i64 8), ptr getelementptr (i8, ptr @usbh1_cce_clk, i64 8), ptr getelementptr (i8, ptr @i2c0_clk, i64 40), ptr getelementptr (i8, ptr @i2c1_clk, i64 40), ptr getelementptr (i8, ptr @i2c2_clk, i64 40), ptr getelementptr (i8, ptr @i2c3_clk, i64 40), ptr getelementptr (i8, ptr @i2c4_clk, i64 40), ptr getelementptr (i8, ptr @i2c5_clk, i64 40), ptr getelementptr (i8, ptr @spi0_clk, i64 8), ptr getelementptr (i8, ptr @spi1_clk, i64 8), ptr getelementptr (i8, ptr @spi2_clk, i64 8), ptr getelementptr (i8, ptr @spi3_clk, i64 8), ptr getelementptr (i8, ptr @bisp_clk, i64 40), ptr getelementptr (i8, ptr @csi0_clk, i64 40), ptr getelementptr (i8, ptr @csi1_clk, i64 40), ptr getelementptr (i8, ptr @de_clk, i64 40), ptr getelementptr (i8, ptr @dmm_clk, i64 40), ptr getelementptr (i8, ptr @edp_clk, i64 40), ptr getelementptr (i8, ptr @eth_mac_clk, i64 40), ptr getelementptr (i8, ptr @gpu_core_clk, i64 40), ptr getelementptr (i8, ptr @gpu_mem_clk, i64 40), ptr getelementptr (i8, ptr @gpu_sys_clk, i64 40), ptr getelementptr (i8, ptr @hde_clk, i64 40), ptr getelementptr (i8, ptr @hdmia_clk, i64 40), ptr getelementptr (i8, ptr @i2srx_clk, i64 40), ptr getelementptr (i8, ptr @i2stx_clk, i64 40), ptr getelementptr (i8, ptr @imx_clk, i64 40), ptr getelementptr (i8, ptr @lcd_clk, i64 40), ptr getelementptr (i8, ptr @nand0_clk, i64 40), ptr getelementptr (i8, ptr @nand1_clk, i64 40), ptr getelementptr (i8, ptr @pwm0_clk, i64 40), ptr getelementptr (i8, ptr @pwm1_clk, i64 40), ptr getelementptr (i8, ptr @pwm2_clk, i64 40), ptr getelementptr (i8, ptr @pwm3_clk, i64 40), ptr getelementptr (i8, ptr @pwm4_clk, i64 40), ptr getelementptr (i8, ptr @pwm5_clk, i64 40), ptr getelementptr (i8, ptr @sd0_clk, i64 40), ptr getelementptr (i8, ptr @sd1_clk, i64 40), ptr getelementptr (i8, ptr @sd2_clk, i64 40), ptr getelementptr (i8, ptr @sd3_clk, i64 40), ptr getelementptr (i8, ptr @sensor_clk, i64 40), ptr getelementptr (i8, ptr @speed_sensor_clk, i64 40), ptr getelementptr (i8, ptr @thermal_sensor_clk, i64 40), ptr getelementptr (i8, ptr @uart0_clk, i64 40), ptr getelementptr (i8, ptr @uart1_clk, i64 40), ptr getelementptr (i8, ptr @uart2_clk, i64 40), ptr getelementptr (i8, ptr @uart3_clk, i64 40), ptr getelementptr (i8, ptr @uart4_clk, i64 40), ptr getelementptr (i8, ptr @uart5_clk, i64 40), ptr getelementptr (i8, ptr @uart6_clk, i64 40), ptr getelementptr (i8, ptr @vce_clk, i64 40), ptr getelementptr (i8, ptr @vde_clk, i64 40)], [92 x i8] zeroinitializer }, align 32
@s900_resets = internal constant { [54 x %struct.owl_reset_map], [112 x i8] } { [54 x %struct.owl_reset_map] [%struct.owl_reset_map { i32 172, i32 2097152 }, %struct.owl_reset_map { i32 172, i32 1073741824 }, %struct.owl_reset_map { i32 168, i32 2 }, %struct.owl_reset_map { i32 168, i32 4 }, %struct.owl_reset_map { i32 168, i32 1 }, %struct.owl_reset_map { i32 168, i32 32768 }, %struct.owl_reset_map { i32 168, i32 4096 }, %struct.owl_reset_map { i32 168, i32 2048 }, %struct.owl_reset_map { i32 168, i32 8192 }, %struct.owl_reset_map { i32 168, i32 128 }, %struct.owl_reset_map { i32 168, i32 1024 }, %struct.owl_reset_map { i32 168, i32 4194304 }, %struct.owl_reset_map { i32 168, i32 268435456 }, %struct.owl_reset_map { i32 168, i32 2097152 }, %struct.owl_reset_map { i32 172, i32 4096 }, %struct.owl_reset_map { i32 172, i32 8192 }, %struct.owl_reset_map { i32 172, i32 262144 }, %struct.owl_reset_map { i32 172, i32 524288 }, %struct.owl_reset_map { i32 172, i32 4194304 }, %struct.owl_reset_map { i32 172, i32 8388608 }, %struct.owl_reset_map { i32 168, i32 8388608 }, %struct.owl_reset_map { i32 168, i32 8 }, %struct.owl_reset_map { i32 168, i32 33554432 }, %struct.owl_reset_map { i32 168, i32 16 }, %struct.owl_reset_map { i32 168, i32 32 }, %struct.owl_reset_map { i32 168, i32 512 }, %struct.owl_reset_map { i32 168, i32 67108864 }, %struct.owl_reset_map { i32 172, i32 256 }, %struct.owl_reset_map { i32 172, i32 512 }, %struct.owl_reset_map { i32 172, i32 1024 }, %struct.owl_reset_map { i32 172, i32 2048 }, %struct.owl_reset_map { i32 172, i32 32 }, %struct.owl_reset_map { i32 172, i32 64 }, %struct.owl_reset_map { i32 172, i32 128 }, %struct.owl_reset_map { i32 172, i32 32768 }, %struct.owl_reset_map { i32 172, i32 65536 }, %struct.owl_reset_map { i32 172, i32 131072 }, %struct.owl_reset_map { i32 172, i32 16 }, %struct.owl_reset_map { i32 172, i32 4 }, %struct.owl_reset_map { i32 168, i32 256 }, %struct.owl_reset_map { i32 168, i32 65536 }, %struct.owl_reset_map { i32 172, i32 1 }, %struct.owl_reset_map { i32 172, i32 2 }, %struct.owl_reset_map { i32 172, i32 16384 }, %struct.owl_reset_map { i32 168, i32 64 }, %struct.owl_reset_map { i32 168, i32 131072 }, %struct.owl_reset_map { i32 168, i32 262144 }, %struct.owl_reset_map { i32 168, i32 16777216 }, %struct.owl_reset_map { i32 168, i32 134217728 }, %struct.owl_reset_map { i32 168, i32 536870912 }, %struct.owl_reset_map { i32 168, i32 1073741824 }, %struct.owl_reset_map { i32 168, i32 -2147483648 }, %struct.owl_reset_map { i32 172, i32 8 }, %struct.owl_reset_map { i32 172, i32 1048576 }], [112 x i8] zeroinitializer }, align 32
@core_pll_clk = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 0, i32 24000000, i8 9, i8 0, i8 8, i8 5, i8 107, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral } } }, [60 x i8] zeroinitializer }, align 32
@dev_pll_clk = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 4, i32 6000000, i8 8, i8 0, i8 8, i8 20, i8 -76, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.8 } } }, [60 x i8] zeroinitializer }, align 32
@ddr_pll_clk = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 8, i32 24000000, i8 8, i8 0, i8 8, i8 5, i8 45, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.10 } } }, [60 x i8] zeroinitializer }, align 32
@nand_pll_clk = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 12, i32 6000000, i8 8, i8 0, i8 8, i8 4, i8 100, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.12 } } }, [60 x i8] zeroinitializer }, align 32
@display_pll_clk = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 16, i32 6000000, i8 8, i8 0, i8 8, i8 20, i8 -76, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.14 } } }, [60 x i8] zeroinitializer }, align 32
@assist_pll_clk = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 132, i32 500000000, i8 0, i8 0, i8 0, i8 0, i8 0, i8 50, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.16 } } }, [60 x i8] zeroinitializer }, align 32
@audio_pll_clk = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 20, i32 0, i8 4, i8 0, i8 1, i8 0, i8 0, i8 50, ptr @clk_audio_pll_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.18 } } }, [60 x i8] zeroinitializer }, align 32
@edp_pll_clk = internal global { %struct.owl_pll, [60 x i8] } { %struct.owl_pll { %struct.owl_pll_hw { i32 136, i32 0, i8 9, i8 0, i8 2, i8 0, i8 0, i8 50, ptr @clk_edp_pll_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.22 } } }, [60 x i8] zeroinitializer }, align 32
@cpu_clk = internal global { %struct.owl_mux, [40 x i8] } { %struct.owl_mux { %struct.owl_mux_hw { i32 28, i8 0, i8 2 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.24 } } }, [40 x i8] zeroinitializer }, align 32
@dev_clk = internal global { %struct.owl_mux, [40 x i8] } { %struct.owl_mux { %struct.owl_mux_hw { i32 4, i8 12, i8 1 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.28 } } }, [40 x i8] zeroinitializer }, align 32
@noc_clk_mux = internal global { %struct.owl_mux, [40 x i8] } { %struct.owl_mux { %struct.owl_mux_hw { i32 28, i8 7, i8 1 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.30 } } }, [40 x i8] zeroinitializer }, align 32
@noc_clk_div = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 28, i8 19, i8 1, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.34 } } }, [36 x i8] zeroinitializer }, align 32
@ahb_clk = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 28, i8 4, i8 1, i8 0, ptr null }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.37 } } }, [36 x i8] zeroinitializer }, align 32
@apb_clk = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 28, i8 8, i8 2, i8 0, ptr @apb_div_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.40 } } }, [36 x i8] zeroinitializer }, align 32
@usb3_mac_clk = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 132, i8 12, i8 2, i8 0, ptr @usb3_mac_div_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.43 } } }, [36 x i8] zeroinitializer }, align 32
@rmii_ref_clk = internal global { %struct.owl_divider, [36 x i8] } { %struct.owl_divider { %struct.owl_divider_hw { i32 132, i8 8, i8 1, i8 0, ptr @rmii_ref_div_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.46 } } }, [36 x i8] zeroinitializer }, align 32
@noc_clk = internal global { %struct.owl_factor, [36 x i8] } { %struct.owl_factor { %struct.owl_factor_hw { i32 28, i8 16, i8 3, i8 0, ptr @noc_factor_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.48 } } }, [36 x i8] zeroinitializer }, align 32
@de_clk1 = internal global { %struct.owl_factor, [36 x i8] } { %struct.owl_factor { %struct.owl_factor_hw { i32 48, i8 0, i8 3, i8 0, ptr @bisp_factor_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.52 } } }, [36 x i8] zeroinitializer }, align 32
@de_clk2 = internal global { %struct.owl_factor, [36 x i8] } { %struct.owl_factor { %struct.owl_factor_hw { i32 48, i8 4, i8 3, i8 0, ptr @bisp_factor_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.55 } } }, [36 x i8] zeroinitializer }, align 32
@de_clk3 = internal global { %struct.owl_factor, [36 x i8] } { %struct.owl_factor { %struct.owl_factor_hw { i32 48, i8 8, i8 3, i8 0, ptr @bisp_factor_table }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.58 } } }, [36 x i8] zeroinitializer }, align 32
@gpio_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 18, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.61 } } }, [40 x i8] zeroinitializer }, align 32
@gpu_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 30, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.63 } } }, [40 x i8] zeroinitializer }, align 32
@dmac_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 1, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.66 } } }, [40 x i8] zeroinitializer }, align 32
@timer_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 27, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.69 } } }, [40 x i8] zeroinitializer }, align 32
@dsi_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 12, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.71 } } }, [40 x i8] zeroinitializer }, align 32
@ddr0_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 31, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.74 } } }, [40 x i8] zeroinitializer }, align 32
@ddr1_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 29, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.77 } } }, [40 x i8] zeroinitializer }, align 32
@usb3_480mpll0_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 3, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.79 } } }, [40 x i8] zeroinitializer }, align 32
@usb3_480mphy0_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 2, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.81 } } }, [40 x i8] zeroinitializer }, align 32
@usb3_5gphy_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 1, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.83 } } }, [40 x i8] zeroinitializer }, align 32
@usb3_cce_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 0, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.85 } } }, [40 x i8] zeroinitializer }, align 32
@edp24M_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 136, i8 8, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.88 } } }, [40 x i8] zeroinitializer }, align 32
@edp_link_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 160, i8 10, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.91 } } }, [40 x i8] zeroinitializer }, align 32
@usbh0_pllen_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 12, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.93 } } }, [40 x i8] zeroinitializer }, align 32
@usbh0_phy_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 10, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.95 } } }, [40 x i8] zeroinitializer }, align 32
@usbh0_cce_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 8, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.97 } } }, [40 x i8] zeroinitializer }, align 32
@usbh1_pllen_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 13, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.99 } } }, [40 x i8] zeroinitializer }, align 32
@usbh1_phy_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 11, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.101 } } }, [40 x i8] zeroinitializer }, align 32
@usbh1_cce_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 128, i8 9, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.103 } } }, [40 x i8] zeroinitializer }, align 32
@i2c0_clk = internal global { %struct.owl_composite, [40 x i8] } { %struct.owl_composite { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 14, i8 0 }, %union.owl_rate { %struct.clk_fixed_factor { %struct.clk_hw zeroinitializer, i32 1, i32 5 } }, ptr @clk_fixed_factor_ops, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.106 } } }, [40 x i8] zeroinitializer }, align 32
@i2c1_clk = internal global { %struct.owl_composite, [40 x i8] } { %struct.owl_composite { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 15, i8 0 }, %union.owl_rate { %struct.clk_fixed_factor { %struct.clk_hw zeroinitializer, i32 1, i32 5 } }, ptr @clk_fixed_factor_ops, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.109 } } }, [40 x i8] zeroinitializer }, align 32
@i2c2_clk = internal global { %struct.owl_composite, [40 x i8] } { %struct.owl_composite { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 30, i8 0 }, %union.owl_rate { %struct.clk_fixed_factor { %struct.clk_hw zeroinitializer, i32 1, i32 5 } }, ptr @clk_fixed_factor_ops, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.112 } } }, [40 x i8] zeroinitializer }, align 32
@i2c3_clk = internal global { %struct.owl_composite, [40 x i8] } { %struct.owl_composite { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 31, i8 0 }, %union.owl_rate { %struct.clk_fixed_factor { %struct.clk_hw zeroinitializer, i32 1, i32 5 } }, ptr @clk_fixed_factor_ops, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.115 } } }, [40 x i8] zeroinitializer }, align 32
@i2c4_clk = internal global { %struct.owl_composite, [40 x i8] } { %struct.owl_composite { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 160, i8 17, i8 0 }, %union.owl_rate { %struct.clk_fixed_factor { %struct.clk_hw zeroinitializer, i32 1, i32 5 } }, ptr @clk_fixed_factor_ops, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.118 } } }, [40 x i8] zeroinitializer }, align 32
@i2c5_clk = internal global { %struct.owl_composite, [40 x i8] } { %struct.owl_composite { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 1, i8 0 }, %union.owl_rate { %struct.clk_fixed_factor { %struct.clk_hw zeroinitializer, i32 1, i32 5 } }, ptr @clk_fixed_factor_ops, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.121 } } }, [40 x i8] zeroinitializer }, align 32
@spi0_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 10, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.124 } } }, [40 x i8] zeroinitializer }, align 32
@spi1_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 11, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.127 } } }, [40 x i8] zeroinitializer }, align 32
@spi2_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 12, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.130 } } }, [40 x i8] zeroinitializer }, align 32
@spi3_clk = internal global { %struct.owl_gate, [40 x i8] } { %struct.owl_gate { %struct.owl_gate_hw { i32 164, i8 13, i8 0 }, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.133 } } }, [40 x i8] zeroinitializer }, align 32
@de_clk = internal global { %struct.owl_composite, [40 x i8] } { %struct.owl_composite { %struct.owl_mux_hw { i32 48, i8 12, i8 1 }, %struct.owl_gate_hw { i32 160, i8 8, i8 0 }, %union.owl_rate zeroinitializer, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.143 } } }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"core_pll_clk\00", [19 x i8] zeroinitializer }, align 32
@owl_pll_ops = external dso_local constant %struct.clk_ops, align 4
@.compoundliteral = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.6, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"dev_pll_clk\00", [20 x i8] zeroinitializer }, align 32
@.compoundliteral.8 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.7, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ddr_pll_clk\00", [20 x i8] zeroinitializer }, align 32
@.compoundliteral.10 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.9, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nand_pll_clk\00", [19 x i8] zeroinitializer }, align 32
@.compoundliteral.12 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.11, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"display_pll_clk\00", [16 x i8] zeroinitializer }, align 32
@.compoundliteral.14 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.13, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"assist_pll_clk\00", [17 x i8] zeroinitializer }, align 32
@.compoundliteral.16 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.15, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@clk_audio_pll_table = internal global { [3 x %struct.clk_pll_table], [40 x i8] } { [3 x %struct.clk_pll_table] [%struct.clk_pll_table { i32 0, i32 45158400 }, %struct.clk_pll_table { i32 1, i32 49152000 }, %struct.clk_pll_table zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"audio_pll_clk\00", [18 x i8] zeroinitializer }, align 32
@.compoundliteral.18 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.17, ptr @owl_pll_ops, ptr null, ptr null, ptr null, i8 0, i32 8 }, [36 x i8] zeroinitializer }, align 32
@clk_edp_pll_table = internal global { [4 x %struct.clk_pll_table], [32 x i8] } { [4 x %struct.clk_pll_table] [%struct.clk_pll_table { i32 0, i32 810000000 }, %struct.clk_pll_table { i32 1, i32 135000000 }, %struct.clk_pll_table { i32 2, i32 270000000 }, %struct.clk_pll_table zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"edp_pll_clk\00", [20 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"edp24M_clk\00", [21 x i8] zeroinitializer }, align 32
@.compoundliteral.21 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.20], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.22 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.19, ptr @owl_pll_ops, ptr @.compoundliteral.21, ptr null, ptr null, i8 1, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"cpu_clk\00", [24 x i8] zeroinitializer }, align 32
@owl_mux_ops = external dso_local constant %struct.clk_ops, align 4
@cpu_clk_mux_p = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.25, ptr @.str.26, ptr @.str.6], [20 x i8] zeroinitializer }, align 32
@.compoundliteral.24 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.23, ptr @owl_mux_ops, ptr @cpu_clk_mux_p, ptr null, ptr null, i8 3, i32 4 }, [36 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"losc\00", [27 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"hosc\00", [27 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dev_clk\00", [24 x i8] zeroinitializer }, align 32
@dev_clk_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.26, ptr @.str.7], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.28 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.27, ptr @owl_mux_ops, ptr @dev_clk_p, ptr null, ptr null, i8 2, i32 4 }, [36 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"noc_clk_mux\00", [20 x i8] zeroinitializer }, align 32
@noc_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.27, ptr @.str.15], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.30 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.29, ptr @owl_mux_ops, ptr @noc_clk_mux_p, ptr null, ptr null, i8 2, i32 4 }, [36 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"noc_clk_div\00", [20 x i8] zeroinitializer }, align 32
@owl_divider_ops = external dso_local constant %struct.clk_ops, align 4
@.str.32 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"noc_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.33 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.32], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.34 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.31, ptr @owl_divider_ops, ptr @.compoundliteral.33, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ahb_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.36 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.31], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.37 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.35, ptr @owl_divider_ops, ptr @.compoundliteral.36, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@apb_div_table = internal global { [4 x %struct.clk_div_table], [32 x i8] } { [4 x %struct.clk_div_table] [%struct.clk_div_table { i32 1, i32 2 }, %struct.clk_div_table { i32 2, i32 3 }, %struct.clk_div_table { i32 3, i32 4 }, %struct.clk_div_table zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"apb_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.39 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.35], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.40 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.38, ptr @owl_divider_ops, ptr @.compoundliteral.39, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@usb3_mac_div_table = internal global { [4 x %struct.clk_div_table], [32 x i8] } { [4 x %struct.clk_div_table] [%struct.clk_div_table { i32 1, i32 2 }, %struct.clk_div_table { i32 2, i32 3 }, %struct.clk_div_table { i32 3, i32 4 }, %struct.clk_div_table { i32 0, i32 8 }], [32 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"usb3_mac_clk\00", [19 x i8] zeroinitializer }, align 32
@.compoundliteral.42 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.15], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.43 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.41, ptr @owl_divider_ops, ptr @.compoundliteral.42, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@rmii_ref_div_table = internal global { [3 x %struct.clk_div_table], [40 x i8] } { [3 x %struct.clk_div_table] [%struct.clk_div_table { i32 0, i32 4 }, %struct.clk_div_table { i32 1, i32 10 }, %struct.clk_div_table zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rmii_ref_clk\00", [19 x i8] zeroinitializer }, align 32
@.compoundliteral.45 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.15], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.46 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.44, ptr @owl_divider_ops, ptr @.compoundliteral.45, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@noc_factor_table = internal global { [6 x %struct.clk_factor_table], [56 x i8] } { [6 x %struct.clk_factor_table] [%struct.clk_factor_table { i32 0, i32 1, i32 1 }, %struct.clk_factor_table { i32 1, i32 2, i32 3 }, %struct.clk_factor_table { i32 2, i32 1, i32 2 }, %struct.clk_factor_table { i32 3, i32 1, i32 3 }, %struct.clk_factor_table { i32 4, i32 1, i32 4 }, %struct.clk_factor_table zeroinitializer], [56 x i8] zeroinitializer }, align 32
@owl_factor_ops = external dso_local constant %struct.clk_ops, align 4
@.compoundliteral.47 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.29], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.48 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.32, ptr @owl_factor_ops, ptr @.compoundliteral.47, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@bisp_factor_table = internal global { [9 x %struct.clk_factor_table], [52 x i8] } { [9 x %struct.clk_factor_table] [%struct.clk_factor_table { i32 0, i32 1, i32 1 }, %struct.clk_factor_table { i32 1, i32 2, i32 3 }, %struct.clk_factor_table { i32 2, i32 1, i32 2 }, %struct.clk_factor_table { i32 3, i32 2, i32 5 }, %struct.clk_factor_table { i32 4, i32 1, i32 3 }, %struct.clk_factor_table { i32 5, i32 1, i32 4 }, %struct.clk_factor_table { i32 6, i32 1, i32 6 }, %struct.clk_factor_table { i32 7, i32 1, i32 8 }, %struct.clk_factor_table zeroinitializer], [52 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"de_clk1\00", [24 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"de_clk\00", [25 x i8] zeroinitializer }, align 32
@.compoundliteral.51 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.50], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.52 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.49, ptr @owl_factor_ops, ptr @.compoundliteral.51, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"de_clk2\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.54 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.50], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.55 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.53, ptr @owl_factor_ops, ptr @.compoundliteral.54, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"de_clk3\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.57 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.50], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.58 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.56, ptr @owl_factor_ops, ptr @.compoundliteral.57, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"gpio_clk\00", [23 x i8] zeroinitializer }, align 32
@owl_gate_ops = external dso_local constant %struct.clk_ops, align 4
@.compoundliteral.60 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.38], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.61 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.59, ptr @owl_gate_ops, ptr @.compoundliteral.60, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"gpu_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.63 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.62, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"dmac_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.65 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.31], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.66 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.64, ptr @owl_gate_ops, ptr @.compoundliteral.65, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"timer_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.68 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.26], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.69 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.67, ptr @owl_gate_ops, ptr @.compoundliteral.68, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dsi_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.71 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.70, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ddr0_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.73 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.9], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.74 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.72, ptr @owl_gate_ops, ptr @.compoundliteral.73, ptr null, ptr null, i8 1, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ddr1_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.76 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.9], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.77 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.75, ptr @owl_gate_ops, ptr @.compoundliteral.76, ptr null, ptr null, i8 1, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"usb3_480mpll0_clk\00", [46 x i8] zeroinitializer }, align 32
@.compoundliteral.79 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.78, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"usb3_480mphy0_clk\00", [46 x i8] zeroinitializer }, align 32
@.compoundliteral.81 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.80, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"usb3_5gphy_clk\00", [17 x i8] zeroinitializer }, align 32
@.compoundliteral.83 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.82, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"usb3_cce_clk\00", [19 x i8] zeroinitializer }, align 32
@.compoundliteral.85 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.84, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"diff24M\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.87 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.86], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.88 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.20, ptr @owl_gate_ops, ptr @.compoundliteral.87, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"edp_link_clk\00", [19 x i8] zeroinitializer }, align 32
@.compoundliteral.90 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.19], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.91 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.89, ptr @owl_gate_ops, ptr @.compoundliteral.90, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"usbh0_pllen_clk\00", [16 x i8] zeroinitializer }, align 32
@.compoundliteral.93 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.92, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"usbh0_phy_clk\00", [18 x i8] zeroinitializer }, align 32
@.compoundliteral.95 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.94, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"usbh0_cce_clk\00", [18 x i8] zeroinitializer }, align 32
@.compoundliteral.97 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.96, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"usbh1_pllen_clk\00", [16 x i8] zeroinitializer }, align 32
@.compoundliteral.99 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.98, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"usbh1_phy_clk\00", [18 x i8] zeroinitializer }, align 32
@.compoundliteral.101 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.100, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"usbh1_cce_clk\00", [18 x i8] zeroinitializer }, align 32
@.compoundliteral.103 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.102, ptr @owl_gate_ops, ptr null, ptr null, ptr null, i8 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@clk_fixed_factor_ops = external dso_local constant %struct.clk_ops, align 4
@.str.104 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"i2c0_clk\00", [23 x i8] zeroinitializer }, align 32
@owl_comp_fix_fact_ops = external dso_local constant %struct.clk_ops, align 4
@.compoundliteral.105 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.15], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.106 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.104, ptr @owl_comp_fix_fact_ops, ptr @.compoundliteral.105, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"i2c1_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.108 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.15], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.109 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.107, ptr @owl_comp_fix_fact_ops, ptr @.compoundliteral.108, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"i2c2_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.111 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.15], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.112 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.110, ptr @owl_comp_fix_fact_ops, ptr @.compoundliteral.111, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"i2c3_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.114 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.15], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.115 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.113, ptr @owl_comp_fix_fact_ops, ptr @.compoundliteral.114, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"i2c4_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.117 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.15], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.118 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.116, ptr @owl_comp_fix_fact_ops, ptr @.compoundliteral.117, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"i2c5_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.120 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.15], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.121 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.119, ptr @owl_comp_fix_fact_ops, ptr @.compoundliteral.120, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"spi0_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.123 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.35], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.124 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.122, ptr @owl_gate_ops, ptr @.compoundliteral.123, ptr null, ptr null, i8 1, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"spi1_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.126 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.35], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.127 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.125, ptr @owl_gate_ops, ptr @.compoundliteral.126, ptr null, ptr null, i8 1, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"spi2_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.129 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.35], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.130 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.128, ptr @owl_gate_ops, ptr @.compoundliteral.129, ptr null, ptr null, i8 1, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"spi3_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.132 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.35], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.133 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.131, ptr @owl_gate_ops, ptr @.compoundliteral.132, ptr null, ptr null, i8 1, i32 8 }, [36 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bisp_clk\00", [23 x i8] zeroinitializer }, align 32
@owl_comp_fact_ops = external dso_local constant %struct.clk_ops, align 4
@bisp_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.15, ptr @.str.27], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.135 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.134, ptr @owl_comp_fact_ops, ptr @bisp_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@bisp_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 52, i8 4, i8 1 }, %struct.owl_gate_hw { i32 160, i8 14, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 52, i8 0, i8 3, i8 0, ptr @bisp_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.135 } } }, [40 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"csi0_clk\00", [23 x i8] zeroinitializer }, align 32
@owl_comp_div_ops = external dso_local constant %struct.clk_ops, align 4
@csi_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.13, ptr @.str.27], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.138 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.137, ptr @owl_comp_div_ops, ptr @csi_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@csi0_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 44, i8 4, i8 1 }, %struct.owl_gate_hw { i32 160, i8 13, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 44, i8 0, i8 4, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.138 } } }, [40 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"csi1_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.141 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.140, ptr @owl_comp_div_ops, ptr @csi_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@csi1_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 44, i8 20, i8 1 }, %struct.owl_gate_hw { i32 160, i8 15, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 44, i8 16, i8 4, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.141 } } }, [40 x i8] zeroinitializer }, align 32
@owl_comp_pass_ops = external dso_local constant %struct.clk_ops, align 4
@de_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.15, ptr @.str.27], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.143 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.50, ptr @owl_comp_pass_ops, ptr @de_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@dmm_factor_table = internal global { [6 x %struct.clk_factor_table], [56 x i8] } { [6 x %struct.clk_factor_table] [%struct.clk_factor_table { i32 0, i32 1, i32 1 }, %struct.clk_factor_table { i32 1, i32 2, i32 3 }, %struct.clk_factor_table { i32 2, i32 1, i32 2 }, %struct.clk_factor_table { i32 3, i32 1, i32 3 }, %struct.clk_factor_table { i32 4, i32 1, i32 4 }, %struct.clk_factor_table zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dmm_clk\00", [24 x i8] zeroinitializer }, align 32
@dmm_clk_mux_p = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.27, ptr @.str.11, ptr @.str.15, ptr @.str.147], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.145 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.144, ptr @owl_comp_fact_ops, ptr @dmm_clk_mux_p, ptr null, ptr null, i8 4, i32 8 }, [36 x i8] zeroinitializer }, align 32
@dmm_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 28, i8 10, i8 2 }, %struct.owl_gate_hw { i32 160, i8 19, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 28, i8 12, i8 3, i8 0, ptr @dmm_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.145 } } }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ddr_clk_src\00", [20 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"edp_clk\00", [24 x i8] zeroinitializer }, align 32
@edp_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.15, ptr @.str.13], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.149 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.148, ptr @owl_comp_fact_ops, ptr @edp_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@edp_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 136, i8 19, i8 1 }, %struct.owl_gate_hw { i32 160, i8 10, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 136, i8 16, i8 3, i8 0, ptr @bisp_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.149 } } }, [40 x i8] zeroinitializer }, align 32
@eth_mac_div_table = internal global { [3 x %struct.clk_div_table], [40 x i8] } { [3 x %struct.clk_div_table] [%struct.clk_div_table { i32 0, i32 2 }, %struct.clk_div_table { i32 1, i32 4 }, %struct.clk_div_table zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"eth_mac_clk\00", [20 x i8] zeroinitializer }, align 32
@.compoundliteral.152 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.15], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.153 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.151, ptr @owl_comp_div_ops, ptr @.compoundliteral.152, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@eth_mac_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 22, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 132, i8 10, i8 1, i8 0, ptr @eth_mac_div_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.153 } } }, [40 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"gpu_core_clk\00", [19 x i8] zeroinitializer }, align 32
@gpu_clk_mux_p = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.27, ptr @.str.13, ptr @.str.147], [20 x i8] zeroinitializer }, align 32
@.compoundliteral.156 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.155, ptr @owl_comp_fact_ops, ptr @gpu_clk_mux_p, ptr null, ptr null, i8 3, i32 0 }, [36 x i8] zeroinitializer }, align 32
@gpu_core_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 144, i8 4, i8 2 }, %struct.owl_gate_hw { i32 144, i8 15, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 144, i8 0, i8 3, i8 0, ptr @bisp_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.156 } } }, [40 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"gpu_mem_clk\00", [20 x i8] zeroinitializer }, align 32
@.compoundliteral.159 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.158, ptr @owl_comp_fact_ops, ptr @gpu_clk_mux_p, ptr null, ptr null, i8 3, i32 0 }, [36 x i8] zeroinitializer }, align 32
@gpu_mem_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 144, i8 20, i8 2 }, %struct.owl_gate_hw { i32 144, i8 14, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 144, i8 16, i8 3, i8 0, ptr @bisp_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.159 } } }, [40 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"gpu_sys_clk\00", [20 x i8] zeroinitializer }, align 32
@.compoundliteral.162 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.161, ptr @owl_comp_fact_ops, ptr @gpu_clk_mux_p, ptr null, ptr null, i8 3, i32 0 }, [36 x i8] zeroinitializer }, align 32
@gpu_sys_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 144, i8 28, i8 2 }, %struct.owl_gate_hw { i32 144, i8 13, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 144, i8 24, i8 3, i8 0, ptr @bisp_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.162 } } }, [40 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"hde_clk\00", [24 x i8] zeroinitializer }, align 32
@hde_clk_mux_p = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.27, ptr @.str.13, ptr @.str.147], [20 x i8] zeroinitializer }, align 32
@.compoundliteral.165 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.164, ptr @owl_comp_fact_ops, ptr @hde_clk_mux_p, ptr null, ptr null, i8 3, i32 0 }, [36 x i8] zeroinitializer }, align 32
@hde_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 60, i8 4, i8 2 }, %struct.owl_gate_hw { i32 160, i8 27, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 60, i8 0, i8 3, i8 0, ptr @bisp_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.165 } } }, [40 x i8] zeroinitializer }, align 32
@hdmia_div_table = internal global { [10 x %struct.clk_div_table], [48 x i8] } { [10 x %struct.clk_div_table] [%struct.clk_div_table { i32 0, i32 1 }, %struct.clk_div_table { i32 1, i32 2 }, %struct.clk_div_table { i32 2, i32 3 }, %struct.clk_div_table { i32 3, i32 4 }, %struct.clk_div_table { i32 4, i32 6 }, %struct.clk_div_table { i32 5, i32 8 }, %struct.clk_div_table { i32 6, i32 12 }, %struct.clk_div_table { i32 7, i32 16 }, %struct.clk_div_table { i32 8, i32 24 }, %struct.clk_div_table zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"hdmia_clk\00", [22 x i8] zeroinitializer }, align 32
@i2s_clk_mux_p = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.17], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.168 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.167, ptr @owl_comp_div_ops, ptr @i2s_clk_mux_p, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@hdmia_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 20, i8 24, i8 1 }, %struct.owl_gate_hw { i32 160, i8 22, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 20, i8 24, i8 4, i8 0, ptr @hdmia_div_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.168 } } }, [40 x i8] zeroinitializer }, align 32
@i2s_div_table = internal global { [10 x %struct.clk_div_table], [48 x i8] } { [10 x %struct.clk_div_table] [%struct.clk_div_table { i32 0, i32 1 }, %struct.clk_div_table { i32 1, i32 2 }, %struct.clk_div_table { i32 2, i32 3 }, %struct.clk_div_table { i32 3, i32 4 }, %struct.clk_div_table { i32 4, i32 6 }, %struct.clk_div_table { i32 5, i32 8 }, %struct.clk_div_table { i32 6, i32 12 }, %struct.clk_div_table { i32 7, i32 16 }, %struct.clk_div_table { i32 8, i32 24 }, %struct.clk_div_table zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"i2srx_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.171 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.170, ptr @owl_comp_div_ops, ptr @i2s_clk_mux_p, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@i2srx_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 20, i8 24, i8 1 }, %struct.owl_gate_hw { i32 160, i8 21, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 20, i8 20, i8 4, i8 0, ptr @i2s_div_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.171 } } }, [40 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"i2stx_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.174 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.173, ptr @owl_comp_div_ops, ptr @i2s_clk_mux_p, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@i2stx_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 20, i8 24, i8 1 }, %struct.owl_gate_hw { i32 160, i8 20, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 20, i8 16, i8 4, i8 0, ptr @i2s_div_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.174 } } }, [40 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"imx_clk\00", [24 x i8] zeroinitializer }, align 32
@imx_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.15, ptr @.str.27], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.177 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.176, ptr @owl_comp_fact_ops, ptr @imx_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@imx_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 56, i8 4, i8 1 }, %struct.owl_gate_hw { i32 164, i8 17, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 56, i8 0, i8 3, i8 0, ptr @bisp_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.177 } } }, [40 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"lcd_clk\00", [24 x i8] zeroinitializer }, align 32
@lcd_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.13, ptr @.str.11], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.180 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.179, ptr @owl_comp_div_ops, ptr @lcd_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@lcd_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 36, i8 12, i8 2 }, %struct.owl_gate_hw { i32 160, i8 9, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 36, i8 0, i8 5, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.180 } } }, [40 x i8] zeroinitializer }, align 32
@nand_div_table = internal global { [17 x %struct.clk_div_table], [56 x i8] } { [17 x %struct.clk_div_table] [%struct.clk_div_table { i32 0, i32 1 }, %struct.clk_div_table { i32 1, i32 2 }, %struct.clk_div_table { i32 2, i32 4 }, %struct.clk_div_table { i32 3, i32 6 }, %struct.clk_div_table { i32 4, i32 8 }, %struct.clk_div_table { i32 5, i32 10 }, %struct.clk_div_table { i32 6, i32 12 }, %struct.clk_div_table { i32 7, i32 14 }, %struct.clk_div_table { i32 8, i32 16 }, %struct.clk_div_table { i32 9, i32 18 }, %struct.clk_div_table { i32 10, i32 20 }, %struct.clk_div_table { i32 11, i32 22 }, %struct.clk_div_table { i32 12, i32 24 }, %struct.clk_div_table { i32 13, i32 26 }, %struct.clk_div_table { i32 14, i32 28 }, %struct.clk_div_table { i32 15, i32 30 }, %struct.clk_div_table zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nand0_clk\00", [22 x i8] zeroinitializer }, align 32
@nand_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.27, ptr @.str.11], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.183 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.182, ptr @owl_comp_div_ops, ptr @nand_clk_mux_p, ptr null, ptr null, i8 2, i32 4 }, [36 x i8] zeroinitializer }, align 32
@nand0_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 76, i8 8, i8 1 }, %struct.owl_gate_hw { i32 160, i8 4, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 76, i8 0, i8 4, i8 0, ptr @nand_div_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.183 } } }, [40 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nand1_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.186 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.185, ptr @owl_comp_div_ops, ptr @nand_clk_mux_p, ptr null, ptr null, i8 2, i32 4 }, [36 x i8] zeroinitializer }, align 32
@nand1_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 76, i8 24, i8 1 }, %struct.owl_gate_hw { i32 160, i8 11, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 76, i8 16, i8 4, i8 0, ptr @nand_div_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.186 } } }, [40 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pwm0_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.189 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.26], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.190 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.188, ptr @owl_comp_div_ops, ptr @.compoundliteral.189, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@pwm0_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 23, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 112, i8 0, i8 6, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.190 } } }, [40 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pwm1_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.193 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.26], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.194 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.192, ptr @owl_comp_div_ops, ptr @.compoundliteral.193, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@pwm1_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 24, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 116, i8 0, i8 6, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.194 } } }, [40 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pwm2_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.197 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.26], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.198 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.196, ptr @owl_comp_div_ops, ptr @.compoundliteral.197, ptr null, ptr null, i8 1, i32 8 }, [36 x i8] zeroinitializer }, align 32
@pwm2_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 25, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 120, i8 0, i8 6, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.198 } } }, [40 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pwm3_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.201 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.26], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.202 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.200, ptr @owl_comp_div_ops, ptr @.compoundliteral.201, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@pwm3_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 26, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 124, i8 0, i8 6, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.202 } } }, [40 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pwm4_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.205 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.26], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.206 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.204, ptr @owl_comp_div_ops, ptr @.compoundliteral.205, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@pwm4_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 4, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 200, i8 0, i8 6, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.206 } } }, [40 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pwm5_clk\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.209 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.26], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.210 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.208, ptr @owl_comp_div_ops, ptr @.compoundliteral.209, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@pwm5_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 5, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 204, i8 0, i8 6, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.210 } } }, [40 x i8] zeroinitializer }, align 32
@sd_factor_table = internal global { [65 x %struct.clk_factor_table], [212 x i8] } { [65 x %struct.clk_factor_table] [%struct.clk_factor_table { i32 0, i32 1, i32 1 }, %struct.clk_factor_table { i32 1, i32 1, i32 2 }, %struct.clk_factor_table { i32 2, i32 1, i32 3 }, %struct.clk_factor_table { i32 3, i32 1, i32 4 }, %struct.clk_factor_table { i32 4, i32 1, i32 5 }, %struct.clk_factor_table { i32 5, i32 1, i32 6 }, %struct.clk_factor_table { i32 6, i32 1, i32 7 }, %struct.clk_factor_table { i32 7, i32 1, i32 8 }, %struct.clk_factor_table { i32 8, i32 1, i32 9 }, %struct.clk_factor_table { i32 9, i32 1, i32 10 }, %struct.clk_factor_table { i32 10, i32 1, i32 11 }, %struct.clk_factor_table { i32 11, i32 1, i32 12 }, %struct.clk_factor_table { i32 12, i32 1, i32 13 }, %struct.clk_factor_table { i32 13, i32 1, i32 14 }, %struct.clk_factor_table { i32 14, i32 1, i32 15 }, %struct.clk_factor_table { i32 15, i32 1, i32 16 }, %struct.clk_factor_table { i32 16, i32 1, i32 17 }, %struct.clk_factor_table { i32 17, i32 1, i32 18 }, %struct.clk_factor_table { i32 18, i32 1, i32 19 }, %struct.clk_factor_table { i32 19, i32 1, i32 20 }, %struct.clk_factor_table { i32 20, i32 1, i32 21 }, %struct.clk_factor_table { i32 21, i32 1, i32 22 }, %struct.clk_factor_table { i32 22, i32 1, i32 23 }, %struct.clk_factor_table { i32 23, i32 1, i32 24 }, %struct.clk_factor_table { i32 24, i32 1, i32 25 }, %struct.clk_factor_table { i32 25, i32 1, i32 26 }, %struct.clk_factor_table { i32 26, i32 1, i32 27 }, %struct.clk_factor_table { i32 27, i32 1, i32 28 }, %struct.clk_factor_table { i32 28, i32 1, i32 29 }, %struct.clk_factor_table { i32 29, i32 1, i32 30 }, %struct.clk_factor_table { i32 30, i32 1, i32 31 }, %struct.clk_factor_table { i32 31, i32 1, i32 32 }, %struct.clk_factor_table { i32 256, i32 1, i32 128 }, %struct.clk_factor_table { i32 257, i32 1, i32 256 }, %struct.clk_factor_table { i32 258, i32 1, i32 384 }, %struct.clk_factor_table { i32 259, i32 1, i32 512 }, %struct.clk_factor_table { i32 260, i32 1, i32 640 }, %struct.clk_factor_table { i32 261, i32 1, i32 768 }, %struct.clk_factor_table { i32 262, i32 1, i32 896 }, %struct.clk_factor_table { i32 263, i32 1, i32 1024 }, %struct.clk_factor_table { i32 264, i32 1, i32 1152 }, %struct.clk_factor_table { i32 265, i32 1, i32 1280 }, %struct.clk_factor_table { i32 266, i32 1, i32 1408 }, %struct.clk_factor_table { i32 267, i32 1, i32 1536 }, %struct.clk_factor_table { i32 268, i32 1, i32 1664 }, %struct.clk_factor_table { i32 269, i32 1, i32 1792 }, %struct.clk_factor_table { i32 270, i32 1, i32 1920 }, %struct.clk_factor_table { i32 271, i32 1, i32 2048 }, %struct.clk_factor_table { i32 272, i32 1, i32 2176 }, %struct.clk_factor_table { i32 273, i32 1, i32 2304 }, %struct.clk_factor_table { i32 274, i32 1, i32 2432 }, %struct.clk_factor_table { i32 275, i32 1, i32 2560 }, %struct.clk_factor_table { i32 276, i32 1, i32 2688 }, %struct.clk_factor_table { i32 277, i32 1, i32 2816 }, %struct.clk_factor_table { i32 278, i32 1, i32 2944 }, %struct.clk_factor_table { i32 279, i32 1, i32 3072 }, %struct.clk_factor_table { i32 280, i32 1, i32 3200 }, %struct.clk_factor_table { i32 281, i32 1, i32 3328 }, %struct.clk_factor_table { i32 282, i32 1, i32 3456 }, %struct.clk_factor_table { i32 283, i32 1, i32 3584 }, %struct.clk_factor_table { i32 284, i32 1, i32 3712 }, %struct.clk_factor_table { i32 285, i32 1, i32 3840 }, %struct.clk_factor_table { i32 286, i32 1, i32 3968 }, %struct.clk_factor_table { i32 287, i32 1, i32 4096 }, %struct.clk_factor_table zeroinitializer], [212 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"sd0_clk\00", [24 x i8] zeroinitializer }, align 32
@sd_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.27, ptr @.str.11], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.213 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.212, ptr @owl_comp_fact_ops, ptr @sd_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@sd0_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 80, i8 9, i8 1 }, %struct.owl_gate_hw { i32 160, i8 5, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 80, i8 0, i8 9, i8 0, ptr @sd_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.213 } } }, [40 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"sd1_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.216 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.215, ptr @owl_comp_fact_ops, ptr @sd_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@sd1_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 84, i8 9, i8 1 }, %struct.owl_gate_hw { i32 160, i8 6, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 84, i8 0, i8 9, i8 0, ptr @sd_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.216 } } }, [40 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"sd2_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.219 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.218, ptr @owl_comp_fact_ops, ptr @sd_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@sd2_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 88, i8 9, i8 1 }, %struct.owl_gate_hw { i32 160, i8 7, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 88, i8 0, i8 9, i8 0, ptr @sd_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.219 } } }, [40 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"sd3_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.222 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.221, ptr @owl_comp_fact_ops, ptr @sd_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@sd3_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 196, i8 9, i8 1 }, %struct.owl_gate_hw { i32 160, i8 16, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 196, i8 0, i8 9, i8 0, ptr @sd_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.222 } } }, [40 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sensor_clk\00", [21 x i8] zeroinitializer }, align 32
@sensor_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.26, ptr @.str.134], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.225 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.224, ptr @owl_comp_div_ops, ptr @sensor_clk_mux_p, ptr null, ptr null, i8 2, i32 0 }, [36 x i8] zeroinitializer }, align 32
@sensor_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 32, i8 4, i8 1 }, %struct.owl_gate_hw { i32 160, i8 14, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 32, i8 0, i8 4, i8 0, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.225 } } }, [40 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"speed_sensor_clk\00", [47 x i8] zeroinitializer }, align 32
@.compoundliteral.228 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.26], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.229 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.227, ptr @owl_comp_div_ops, ptr @.compoundliteral.228, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@speed_sensor_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 0, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 192, i8 0, i8 4, i8 2, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.229 } } }, [40 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"thermal_sensor_clk\00", [45 x i8] zeroinitializer }, align 32
@.compoundliteral.232 = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.26], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.233 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.231, ptr @owl_comp_div_ops, ptr @.compoundliteral.232, ptr null, ptr null, i8 1, i32 0 }, [36 x i8] zeroinitializer }, align 32
@thermal_sensor_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw zeroinitializer, %struct.owl_gate_hw { i32 164, i8 2, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 192, i8 8, i8 4, i8 2, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.233 } } }, [40 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"uart0_clk\00", [22 x i8] zeroinitializer }, align 32
@uart_clk_mux_p = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.26, ptr @.str.7], [24 x i8] zeroinitializer }, align 32
@.compoundliteral.236 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.235, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 8 }, [36 x i8] zeroinitializer }, align 32
@uart0_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 92, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 6, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 92, i8 0, i8 8, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.236 } } }, [40 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"uart1_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.239 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.238, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 8 }, [36 x i8] zeroinitializer }, align 32
@uart1_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 96, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 7, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 96, i8 1, i8 8, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.239 } } }, [40 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"uart2_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.242 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.241, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 8 }, [36 x i8] zeroinitializer }, align 32
@uart2_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 100, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 8, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 100, i8 0, i8 8, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.242 } } }, [40 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"uart3_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.245 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.244, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 8 }, [36 x i8] zeroinitializer }, align 32
@uart3_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 176, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 19, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 176, i8 0, i8 8, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.245 } } }, [40 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"uart4_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.248 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.247, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 8 }, [36 x i8] zeroinitializer }, align 32
@uart4_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 180, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 20, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 180, i8 0, i8 8, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.248 } } }, [40 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"uart5_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.251 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.250, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 8 }, [36 x i8] zeroinitializer }, align 32
@uart5_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 184, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 21, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 184, i8 0, i8 8, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.251 } } }, [40 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"uart6_clk\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.254 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.253, ptr @owl_comp_div_ops, ptr @uart_clk_mux_p, ptr null, ptr null, i8 2, i32 8 }, [36 x i8] zeroinitializer }, align 32
@uart6_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_divider_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 188, i8 16, i8 1 }, %struct.owl_gate_hw { i32 164, i8 18, i8 0 }, { %struct.owl_divider_hw, [8 x i8] } { %struct.owl_divider_hw { i32 188, i8 0, i8 8, i8 16, ptr null }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.254 } } }, [40 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"vce_clk\00", [24 x i8] zeroinitializer }, align 32
@vce_clk_mux_p = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.27, ptr @.str.13, ptr @.str.15, ptr @.str.147], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.257 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.256, ptr @owl_comp_fact_ops, ptr @vce_clk_mux_p, ptr null, ptr null, i8 4, i32 0 }, [36 x i8] zeroinitializer }, align 32
@vce_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 68, i8 4, i8 2 }, %struct.owl_gate_hw { i32 160, i8 26, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 68, i8 0, i8 3, i8 0, ptr @bisp_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.257 } } }, [40 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"vde_clk\00", [24 x i8] zeroinitializer }, align 32
@.compoundliteral.260 = internal global { %struct.clk_init_data, [36 x i8] } { %struct.clk_init_data { ptr @.str.259, ptr @owl_comp_fact_ops, ptr @hde_clk_mux_p, ptr null, ptr null, i8 3, i32 0 }, [36 x i8] zeroinitializer }, align 32
@vde_clk = internal global { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common }, [40 x i8] } { { %struct.owl_mux_hw, %struct.owl_gate_hw, { %struct.owl_factor_hw, [8 x i8] }, ptr, %struct.owl_clk_common } { %struct.owl_mux_hw { i32 64, i8 4, i8 2 }, %struct.owl_gate_hw { i32 160, i8 25, i8 0 }, { %struct.owl_factor_hw, [8 x i8] } { %struct.owl_factor_hw { i32 64, i8 0, i8 3, i8 0, ptr @bisp_factor_table }, [8 x i8] undef }, ptr null, %struct.owl_clk_common { ptr null, %struct.clk_hw { ptr null, ptr null, ptr @.compoundliteral.260 } } }, [40 x i8] zeroinitializer }, align 32
@s900_hw_clks = internal global { { i32, [101 x ptr] }, [104 x i8] } { { i32, [101 x ptr] } { i32 101, [101 x ptr] [ptr null, ptr null, ptr null, ptr getelementptr (i8, ptr @core_pll_clk, i64 24), ptr getelementptr (i8, ptr @dev_pll_clk, i64 24), ptr getelementptr (i8, ptr @ddr_pll_clk, i64 24), ptr getelementptr (i8, ptr @nand_pll_clk, i64 24), ptr getelementptr (i8, ptr @display_pll_clk, i64 24), ptr null, ptr getelementptr (i8, ptr @assist_pll_clk, i64 24), ptr getelementptr (i8, ptr @audio_pll_clk, i64 24), ptr null, ptr null, ptr null, ptr null, ptr getelementptr (i8, ptr @cpu_clk, i64 12), ptr getelementptr (i8, ptr @dev_clk, i64 12), ptr getelementptr (i8, ptr @noc_clk, i64 16), ptr getelementptr (i8, ptr @noc_clk_mux, i64 12), ptr getelementptr (i8, ptr @noc_clk_div, i64 16), ptr getelementptr (i8, ptr @ahb_clk, i64 16), ptr getelementptr (i8, ptr @apb_clk, i64 16), ptr getelementptr (i8, ptr @dmac_clk, i64 12), ptr getelementptr (i8, ptr @gpio_clk, i64 12), ptr getelementptr (i8, ptr @bisp_clk, i64 44), ptr getelementptr (i8, ptr @csi0_clk, i64 44), ptr getelementptr (i8, ptr @csi1_clk, i64 44), ptr getelementptr (i8, ptr @de_clk, i64 44), ptr getelementptr (i8, ptr @de_clk1, i64 16), ptr getelementptr (i8, ptr @de_clk2, i64 16), ptr getelementptr (i8, ptr @de_clk3, i64 16), ptr null, ptr getelementptr (i8, ptr @dsi_clk, i64 12), ptr getelementptr (i8, ptr @gpu_clk, i64 12), ptr getelementptr (i8, ptr @gpu_core_clk, i64 44), ptr getelementptr (i8, ptr @gpu_mem_clk, i64 44), ptr getelementptr (i8, ptr @gpu_sys_clk, i64 44), ptr getelementptr (i8, ptr @hde_clk, i64 44), ptr getelementptr (i8, ptr @i2c0_clk, i64 44), ptr getelementptr (i8, ptr @i2c1_clk, i64 44), ptr getelementptr (i8, ptr @i2c2_clk, i64 44), ptr getelementptr (i8, ptr @i2c3_clk, i64 44), ptr getelementptr (i8, ptr @i2c4_clk, i64 44), ptr getelementptr (i8, ptr @i2c5_clk, i64 44), ptr getelementptr (i8, ptr @i2srx_clk, i64 44), ptr getelementptr (i8, ptr @i2stx_clk, i64 44), ptr getelementptr (i8, ptr @imx_clk, i64 44), ptr getelementptr (i8, ptr @lcd_clk, i64 44), ptr getelementptr (i8, ptr @nand0_clk, i64 44), ptr getelementptr (i8, ptr @nand1_clk, i64 44), ptr getelementptr (i8, ptr @pwm0_clk, i64 44), ptr getelementptr (i8, ptr @pwm1_clk, i64 44), ptr getelementptr (i8, ptr @pwm2_clk, i64 44), ptr getelementptr (i8, ptr @pwm3_clk, i64 44), ptr getelementptr (i8, ptr @pwm4_clk, i64 44), ptr getelementptr (i8, ptr @pwm5_clk, i64 44), ptr getelementptr (i8, ptr @sd0_clk, i64 44), ptr getelementptr (i8, ptr @sd1_clk, i64 44), ptr getelementptr (i8, ptr @sd2_clk, i64 44), ptr getelementptr (i8, ptr @sd3_clk, i64 44), ptr getelementptr (i8, ptr @sensor_clk, i64 44), ptr getelementptr (i8, ptr @speed_sensor_clk, i64 44), ptr getelementptr (i8, ptr @spi0_clk, i64 12), ptr getelementptr (i8, ptr @spi1_clk, i64 12), ptr getelementptr (i8, ptr @spi2_clk, i64 12), ptr getelementptr (i8, ptr @spi3_clk, i64 12), ptr getelementptr (i8, ptr @thermal_sensor_clk, i64 44), ptr getelementptr (i8, ptr @uart0_clk, i64 44), ptr getelementptr (i8, ptr @uart1_clk, i64 44), ptr getelementptr (i8, ptr @uart2_clk, i64 44), ptr getelementptr (i8, ptr @uart3_clk, i64 44), ptr getelementptr (i8, ptr @uart4_clk, i64 44), ptr getelementptr (i8, ptr @uart5_clk, i64 44), ptr getelementptr (i8, ptr @uart6_clk, i64 44), ptr getelementptr (i8, ptr @vce_clk, i64 44), ptr getelementptr (i8, ptr @vde_clk, i64 44), ptr getelementptr (i8, ptr @usb3_480mpll0_clk, i64 12), ptr getelementptr (i8, ptr @usb3_480mphy0_clk, i64 12), ptr getelementptr (i8, ptr @usb3_5gphy_clk, i64 12), ptr getelementptr (i8, ptr @usb3_cce_clk, i64 12), ptr getelementptr (i8, ptr @usb3_mac_clk, i64 16), ptr null, ptr null, ptr getelementptr (i8, ptr @timer_clk, i64 12), ptr getelementptr (i8, ptr @hdmia_clk, i64 44), ptr null, ptr getelementptr (i8, ptr @edp_clk, i64 44), ptr getelementptr (i8, ptr @edp24M_clk, i64 12), ptr getelementptr (i8, ptr @edp_pll_clk, i64 24), ptr getelementptr (i8, ptr @edp_link_clk, i64 12), ptr getelementptr (i8, ptr @usbh0_pllen_clk, i64 12), ptr getelementptr (i8, ptr @usbh0_phy_clk, i64 12), ptr getelementptr (i8, ptr @usbh0_cce_clk, i64 12), ptr getelementptr (i8, ptr @usbh1_pllen_clk, i64 12), ptr getelementptr (i8, ptr @usbh1_phy_clk, i64 12), ptr getelementptr (i8, ptr @usbh1_cce_clk, i64 12), ptr getelementptr (i8, ptr @ddr0_clk, i64 12), ptr getelementptr (i8, ptr @ddr1_clk, i64 12), ptr getelementptr (i8, ptr @dmm_clk, i64 44), ptr getelementptr (i8, ptr @eth_mac_clk, i64 44), ptr getelementptr (i8, ptr @rmii_ref_clk, i64 16)] }, [104 x i8] zeroinitializer }, align 32
@___asan_gen_.263 = private unnamed_addr constant [16 x i8] c"s900_clk_driver\00", align 1
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 791, i32 31 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 794, i32 11 }
@___asan_gen_.269 = private unnamed_addr constant [18 x i8] c"s900_clk_of_match\00", align 1
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 786, i32 34 }
@___asan_gen_.272 = private unnamed_addr constant [14 x i8] c"s900_clk_desc\00", align 1
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 746, i32 28 }
@___asan_gen_.275 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 781, i32 3 }
@___asan_gen_.293 = private unnamed_addr constant [10 x i8] c"s900_clks\00", align 1
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 502, i32 31 }
@___asan_gen_.296 = private unnamed_addr constant [12 x i8] c"s900_resets\00", align 1
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 689, i32 35 }
@___asan_gen_.299 = private unnamed_addr constant [13 x i8] c"core_pll_clk\00", align 1
@___asan_gen_.302 = private unnamed_addr constant [12 x i8] c"dev_pll_clk\00", align 1
@___asan_gen_.305 = private unnamed_addr constant [12 x i8] c"ddr_pll_clk\00", align 1
@___asan_gen_.308 = private unnamed_addr constant [13 x i8] c"nand_pll_clk\00", align 1
@___asan_gen_.311 = private unnamed_addr constant [16 x i8] c"display_pll_clk\00", align 1
@___asan_gen_.314 = private unnamed_addr constant [15 x i8] c"assist_pll_clk\00", align 1
@___asan_gen_.317 = private unnamed_addr constant [14 x i8] c"audio_pll_clk\00", align 1
@___asan_gen_.320 = private unnamed_addr constant [12 x i8] c"edp_pll_clk\00", align 1
@___asan_gen_.323 = private unnamed_addr constant [8 x i8] c"cpu_clk\00", align 1
@___asan_gen_.326 = private unnamed_addr constant [8 x i8] c"dev_clk\00", align 1
@___asan_gen_.329 = private unnamed_addr constant [12 x i8] c"noc_clk_mux\00", align 1
@___asan_gen_.332 = private unnamed_addr constant [12 x i8] c"noc_clk_div\00", align 1
@___asan_gen_.335 = private unnamed_addr constant [8 x i8] c"ahb_clk\00", align 1
@___asan_gen_.338 = private unnamed_addr constant [8 x i8] c"apb_clk\00", align 1
@___asan_gen_.341 = private unnamed_addr constant [13 x i8] c"usb3_mac_clk\00", align 1
@___asan_gen_.344 = private unnamed_addr constant [13 x i8] c"rmii_ref_clk\00", align 1
@___asan_gen_.347 = private unnamed_addr constant [8 x i8] c"noc_clk\00", align 1
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 209, i32 8 }
@___asan_gen_.350 = private unnamed_addr constant [8 x i8] c"de_clk1\00", align 1
@___asan_gen_.353 = private unnamed_addr constant [8 x i8] c"de_clk2\00", align 1
@___asan_gen_.356 = private unnamed_addr constant [8 x i8] c"de_clk3\00", align 1
@___asan_gen_.359 = private unnamed_addr constant [9 x i8] c"gpio_clk\00", align 1
@___asan_gen_.362 = private unnamed_addr constant [8 x i8] c"gpu_clk\00", align 1
@___asan_gen_.365 = private unnamed_addr constant [9 x i8] c"dmac_clk\00", align 1
@___asan_gen_.368 = private unnamed_addr constant [10 x i8] c"timer_clk\00", align 1
@___asan_gen_.371 = private unnamed_addr constant [8 x i8] c"dsi_clk\00", align 1
@___asan_gen_.374 = private unnamed_addr constant [9 x i8] c"ddr0_clk\00", align 1
@___asan_gen_.377 = private unnamed_addr constant [9 x i8] c"ddr1_clk\00", align 1
@___asan_gen_.380 = private unnamed_addr constant [18 x i8] c"usb3_480mpll0_clk\00", align 1
@___asan_gen_.383 = private unnamed_addr constant [18 x i8] c"usb3_480mphy0_clk\00", align 1
@___asan_gen_.386 = private unnamed_addr constant [15 x i8] c"usb3_5gphy_clk\00", align 1
@___asan_gen_.389 = private unnamed_addr constant [13 x i8] c"usb3_cce_clk\00", align 1
@___asan_gen_.392 = private unnamed_addr constant [11 x i8] c"edp24M_clk\00", align 1
@___asan_gen_.395 = private unnamed_addr constant [13 x i8] c"edp_link_clk\00", align 1
@___asan_gen_.398 = private unnamed_addr constant [16 x i8] c"usbh0_pllen_clk\00", align 1
@___asan_gen_.401 = private unnamed_addr constant [14 x i8] c"usbh0_phy_clk\00", align 1
@___asan_gen_.404 = private unnamed_addr constant [14 x i8] c"usbh0_cce_clk\00", align 1
@___asan_gen_.407 = private unnamed_addr constant [16 x i8] c"usbh1_pllen_clk\00", align 1
@___asan_gen_.410 = private unnamed_addr constant [14 x i8] c"usbh1_phy_clk\00", align 1
@___asan_gen_.413 = private unnamed_addr constant [14 x i8] c"usbh1_cce_clk\00", align 1
@___asan_gen_.416 = private unnamed_addr constant [9 x i8] c"i2c0_clk\00", align 1
@___asan_gen_.419 = private unnamed_addr constant [9 x i8] c"i2c1_clk\00", align 1
@___asan_gen_.422 = private unnamed_addr constant [9 x i8] c"i2c2_clk\00", align 1
@___asan_gen_.425 = private unnamed_addr constant [9 x i8] c"i2c3_clk\00", align 1
@___asan_gen_.428 = private unnamed_addr constant [9 x i8] c"i2c4_clk\00", align 1
@___asan_gen_.431 = private unnamed_addr constant [9 x i8] c"i2c5_clk\00", align 1
@___asan_gen_.434 = private unnamed_addr constant [9 x i8] c"spi0_clk\00", align 1
@___asan_gen_.437 = private unnamed_addr constant [9 x i8] c"spi1_clk\00", align 1
@___asan_gen_.440 = private unnamed_addr constant [9 x i8] c"spi2_clk\00", align 1
@___asan_gen_.443 = private unnamed_addr constant [9 x i8] c"spi3_clk\00", align 1
@___asan_gen_.446 = private unnamed_addr constant [7 x i8] c"de_clk\00", align 1
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 258, i32 8 }
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 85, i32 8 }
@___asan_gen_.452 = private unnamed_addr constant [17 x i8] c".compoundliteral\00", align 1
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 86, i32 8 }
@___asan_gen_.456 = private unnamed_addr constant [19 x i8] c".compoundliteral.8\00", align 1
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 87, i32 8 }
@___asan_gen_.460 = private unnamed_addr constant [20 x i8] c".compoundliteral.10\00", align 1
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 88, i32 8 }
@___asan_gen_.464 = private unnamed_addr constant [20 x i8] c".compoundliteral.12\00", align 1
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 89, i32 8 }
@___asan_gen_.468 = private unnamed_addr constant [20 x i8] c".compoundliteral.14\00", align 1
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 90, i32 8 }
@___asan_gen_.472 = private unnamed_addr constant [20 x i8] c".compoundliteral.16\00", align 1
@___asan_gen_.473 = private unnamed_addr constant [20 x i8] c"clk_audio_pll_table\00", align 1
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 74, i32 29 }
@___asan_gen_.478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 91, i32 8 }
@___asan_gen_.479 = private unnamed_addr constant [20 x i8] c".compoundliteral.18\00", align 1
@___asan_gen_.480 = private unnamed_addr constant [18 x i8] c"clk_edp_pll_table\00", align 1
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 79, i32 29 }
@___asan_gen_.488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 92, i32 8 }
@___asan_gen_.489 = private unnamed_addr constant [20 x i8] c".compoundliteral.21\00", align 1
@___asan_gen_.490 = private unnamed_addr constant [20 x i8] c".compoundliteral.22\00", align 1
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 114, i32 8 }
@___asan_gen_.494 = private unnamed_addr constant [14 x i8] c"cpu_clk_mux_p\00", align 1
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 94, i32 20 }
@___asan_gen_.497 = private unnamed_addr constant [20 x i8] c".compoundliteral.24\00", align 1
@___asan_gen_.500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 94, i32 40 }
@___asan_gen_.503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 94, i32 48 }
@___asan_gen_.506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 115, i32 8 }
@___asan_gen_.507 = private unnamed_addr constant [10 x i8] c"dev_clk_p\00", align 1
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 95, i32 20 }
@___asan_gen_.510 = private unnamed_addr constant [20 x i8] c".compoundliteral.28\00", align 1
@___asan_gen_.513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 116, i32 8 }
@___asan_gen_.514 = private unnamed_addr constant [14 x i8] c"noc_clk_mux_p\00", align 1
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 96, i32 20 }
@___asan_gen_.517 = private unnamed_addr constant [20 x i8] c".compoundliteral.30\00", align 1
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 161, i32 8 }
@___asan_gen_.524 = private unnamed_addr constant [20 x i8] c".compoundliteral.33\00", align 1
@___asan_gen_.525 = private unnamed_addr constant [20 x i8] c".compoundliteral.34\00", align 1
@___asan_gen_.528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 162, i32 8 }
@___asan_gen_.529 = private unnamed_addr constant [20 x i8] c".compoundliteral.36\00", align 1
@___asan_gen_.530 = private unnamed_addr constant [20 x i8] c".compoundliteral.37\00", align 1
@___asan_gen_.531 = private unnamed_addr constant [14 x i8] c"apb_div_table\00", align 1
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 126, i32 29 }
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 163, i32 8 }
@___asan_gen_.537 = private unnamed_addr constant [20 x i8] c".compoundliteral.39\00", align 1
@___asan_gen_.538 = private unnamed_addr constant [20 x i8] c".compoundliteral.40\00", align 1
@___asan_gen_.539 = private unnamed_addr constant [19 x i8] c"usb3_mac_div_table\00", align 1
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 141, i32 29 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 164, i32 8 }
@___asan_gen_.545 = private unnamed_addr constant [20 x i8] c".compoundliteral.42\00", align 1
@___asan_gen_.546 = private unnamed_addr constant [20 x i8] c".compoundliteral.43\00", align 1
@___asan_gen_.547 = private unnamed_addr constant [19 x i8] c"rmii_ref_div_table\00", align 1
@___asan_gen_.549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 136, i32 29 }
@___asan_gen_.552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 165, i32 8 }
@___asan_gen_.553 = private unnamed_addr constant [20 x i8] c".compoundliteral.45\00", align 1
@___asan_gen_.554 = private unnamed_addr constant [20 x i8] c".compoundliteral.46\00", align 1
@___asan_gen_.555 = private unnamed_addr constant [17 x i8] c"noc_factor_table\00", align 1
@___asan_gen_.557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 197, i32 32 }
@___asan_gen_.558 = private unnamed_addr constant [20 x i8] c".compoundliteral.47\00", align 1
@___asan_gen_.559 = private unnamed_addr constant [20 x i8] c".compoundliteral.48\00", align 1
@___asan_gen_.560 = private unnamed_addr constant [18 x i8] c"bisp_factor_table\00", align 1
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 202, i32 32 }
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 210, i32 8 }
@___asan_gen_.569 = private unnamed_addr constant [20 x i8] c".compoundliteral.51\00", align 1
@___asan_gen_.570 = private unnamed_addr constant [20 x i8] c".compoundliteral.52\00", align 1
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 211, i32 8 }
@___asan_gen_.574 = private unnamed_addr constant [20 x i8] c".compoundliteral.54\00", align 1
@___asan_gen_.575 = private unnamed_addr constant [20 x i8] c".compoundliteral.55\00", align 1
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 212, i32 8 }
@___asan_gen_.579 = private unnamed_addr constant [20 x i8] c".compoundliteral.57\00", align 1
@___asan_gen_.580 = private unnamed_addr constant [20 x i8] c".compoundliteral.58\00", align 1
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 215, i32 8 }
@___asan_gen_.584 = private unnamed_addr constant [20 x i8] c".compoundliteral.60\00", align 1
@___asan_gen_.585 = private unnamed_addr constant [20 x i8] c".compoundliteral.61\00", align 1
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 216, i32 8 }
@___asan_gen_.589 = private unnamed_addr constant [20 x i8] c".compoundliteral.63\00", align 1
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 217, i32 8 }
@___asan_gen_.593 = private unnamed_addr constant [20 x i8] c".compoundliteral.65\00", align 1
@___asan_gen_.594 = private unnamed_addr constant [20 x i8] c".compoundliteral.66\00", align 1
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 218, i32 8 }
@___asan_gen_.598 = private unnamed_addr constant [20 x i8] c".compoundliteral.68\00", align 1
@___asan_gen_.599 = private unnamed_addr constant [20 x i8] c".compoundliteral.69\00", align 1
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 219, i32 8 }
@___asan_gen_.603 = private unnamed_addr constant [20 x i8] c".compoundliteral.71\00", align 1
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 220, i32 8 }
@___asan_gen_.607 = private unnamed_addr constant [20 x i8] c".compoundliteral.73\00", align 1
@___asan_gen_.608 = private unnamed_addr constant [20 x i8] c".compoundliteral.74\00", align 1
@___asan_gen_.611 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 221, i32 8 }
@___asan_gen_.612 = private unnamed_addr constant [20 x i8] c".compoundliteral.76\00", align 1
@___asan_gen_.613 = private unnamed_addr constant [20 x i8] c".compoundliteral.77\00", align 1
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 222, i32 8 }
@___asan_gen_.617 = private unnamed_addr constant [20 x i8] c".compoundliteral.79\00", align 1
@___asan_gen_.620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 223, i32 8 }
@___asan_gen_.621 = private unnamed_addr constant [20 x i8] c".compoundliteral.81\00", align 1
@___asan_gen_.624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 224, i32 8 }
@___asan_gen_.625 = private unnamed_addr constant [20 x i8] c".compoundliteral.83\00", align 1
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 225, i32 8 }
@___asan_gen_.629 = private unnamed_addr constant [20 x i8] c".compoundliteral.85\00", align 1
@___asan_gen_.632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 226, i32 8 }
@___asan_gen_.633 = private unnamed_addr constant [20 x i8] c".compoundliteral.87\00", align 1
@___asan_gen_.634 = private unnamed_addr constant [20 x i8] c".compoundliteral.88\00", align 1
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 227, i32 8 }
@___asan_gen_.638 = private unnamed_addr constant [20 x i8] c".compoundliteral.90\00", align 1
@___asan_gen_.639 = private unnamed_addr constant [20 x i8] c".compoundliteral.91\00", align 1
@___asan_gen_.642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 228, i32 8 }
@___asan_gen_.643 = private unnamed_addr constant [20 x i8] c".compoundliteral.93\00", align 1
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 229, i32 8 }
@___asan_gen_.647 = private unnamed_addr constant [20 x i8] c".compoundliteral.95\00", align 1
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 230, i32 8 }
@___asan_gen_.651 = private unnamed_addr constant [20 x i8] c".compoundliteral.97\00", align 1
@___asan_gen_.654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 231, i32 8 }
@___asan_gen_.655 = private unnamed_addr constant [20 x i8] c".compoundliteral.99\00", align 1
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 232, i32 8 }
@___asan_gen_.659 = private unnamed_addr constant [21 x i8] c".compoundliteral.101\00", align 1
@___asan_gen_.662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 233, i32 8 }
@___asan_gen_.663 = private unnamed_addr constant [21 x i8] c".compoundliteral.103\00", align 1
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 310, i32 8 }
@___asan_gen_.667 = private unnamed_addr constant [21 x i8] c".compoundliteral.105\00", align 1
@___asan_gen_.668 = private unnamed_addr constant [21 x i8] c".compoundliteral.106\00", align 1
@___asan_gen_.671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 314, i32 8 }
@___asan_gen_.672 = private unnamed_addr constant [21 x i8] c".compoundliteral.108\00", align 1
@___asan_gen_.673 = private unnamed_addr constant [21 x i8] c".compoundliteral.109\00", align 1
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 318, i32 8 }
@___asan_gen_.677 = private unnamed_addr constant [21 x i8] c".compoundliteral.111\00", align 1
@___asan_gen_.678 = private unnamed_addr constant [21 x i8] c".compoundliteral.112\00", align 1
@___asan_gen_.681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 322, i32 8 }
@___asan_gen_.682 = private unnamed_addr constant [21 x i8] c".compoundliteral.114\00", align 1
@___asan_gen_.683 = private unnamed_addr constant [21 x i8] c".compoundliteral.115\00", align 1
@___asan_gen_.686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 326, i32 8 }
@___asan_gen_.687 = private unnamed_addr constant [21 x i8] c".compoundliteral.117\00", align 1
@___asan_gen_.688 = private unnamed_addr constant [21 x i8] c".compoundliteral.118\00", align 1
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 330, i32 8 }
@___asan_gen_.692 = private unnamed_addr constant [21 x i8] c".compoundliteral.120\00", align 1
@___asan_gen_.693 = private unnamed_addr constant [21 x i8] c".compoundliteral.121\00", align 1
@___asan_gen_.696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 234, i32 8 }
@___asan_gen_.697 = private unnamed_addr constant [21 x i8] c".compoundliteral.123\00", align 1
@___asan_gen_.698 = private unnamed_addr constant [21 x i8] c".compoundliteral.124\00", align 1
@___asan_gen_.701 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 235, i32 8 }
@___asan_gen_.702 = private unnamed_addr constant [21 x i8] c".compoundliteral.126\00", align 1
@___asan_gen_.703 = private unnamed_addr constant [21 x i8] c".compoundliteral.127\00", align 1
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 236, i32 8 }
@___asan_gen_.707 = private unnamed_addr constant [21 x i8] c".compoundliteral.129\00", align 1
@___asan_gen_.708 = private unnamed_addr constant [21 x i8] c".compoundliteral.130\00", align 1
@___asan_gen_.711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 237, i32 8 }
@___asan_gen_.712 = private unnamed_addr constant [21 x i8] c".compoundliteral.132\00", align 1
@___asan_gen_.713 = private unnamed_addr constant [21 x i8] c".compoundliteral.133\00", align 1
@___asan_gen_.717 = private unnamed_addr constant [15 x i8] c"bisp_clk_mux_p\00", align 1
@___asan_gen_.719 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 98, i32 20 }
@___asan_gen_.720 = private unnamed_addr constant [21 x i8] c".compoundliteral.135\00", align 1
@___asan_gen_.721 = private unnamed_addr constant [9 x i8] c"bisp_clk\00", align 1
@___asan_gen_.723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 240, i32 8 }
@___asan_gen_.727 = private unnamed_addr constant [14 x i8] c"csi_clk_mux_p\00", align 1
@___asan_gen_.729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 99, i32 20 }
@___asan_gen_.730 = private unnamed_addr constant [21 x i8] c".compoundliteral.138\00", align 1
@___asan_gen_.731 = private unnamed_addr constant [9 x i8] c"csi0_clk\00", align 1
@___asan_gen_.733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 246, i32 8 }
@___asan_gen_.737 = private unnamed_addr constant [21 x i8] c".compoundliteral.141\00", align 1
@___asan_gen_.738 = private unnamed_addr constant [9 x i8] c"csi1_clk\00", align 1
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 252, i32 8 }
@___asan_gen_.741 = private unnamed_addr constant [13 x i8] c"de_clk_mux_p\00", align 1
@___asan_gen_.743 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 100, i32 20 }
@___asan_gen_.744 = private unnamed_addr constant [21 x i8] c".compoundliteral.143\00", align 1
@___asan_gen_.745 = private unnamed_addr constant [17 x i8] c"dmm_factor_table\00", align 1
@___asan_gen_.747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 191, i32 32 }
@___asan_gen_.751 = private unnamed_addr constant [14 x i8] c"dmm_clk_mux_p\00", align 1
@___asan_gen_.753 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 97, i32 20 }
@___asan_gen_.754 = private unnamed_addr constant [21 x i8] c".compoundliteral.145\00", align 1
@___asan_gen_.755 = private unnamed_addr constant [8 x i8] c"dmm_clk\00", align 1
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 263, i32 8 }
@___asan_gen_.760 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 97, i32 85 }
@___asan_gen_.764 = private unnamed_addr constant [14 x i8] c"edp_clk_mux_p\00", align 1
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 111, i32 20 }
@___asan_gen_.767 = private unnamed_addr constant [21 x i8] c".compoundliteral.149\00", align 1
@___asan_gen_.768 = private unnamed_addr constant [8 x i8] c"edp_clk\00", align 1
@___asan_gen_.770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 269, i32 8 }
@___asan_gen_.771 = private unnamed_addr constant [18 x i8] c"eth_mac_div_table\00", align 1
@___asan_gen_.773 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 131, i32 29 }
@___asan_gen_.777 = private unnamed_addr constant [21 x i8] c".compoundliteral.152\00", align 1
@___asan_gen_.778 = private unnamed_addr constant [21 x i8] c".compoundliteral.153\00", align 1
@___asan_gen_.779 = private unnamed_addr constant [12 x i8] c"eth_mac_clk\00", align 1
@___asan_gen_.781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 275, i32 8 }
@___asan_gen_.785 = private unnamed_addr constant [14 x i8] c"gpu_clk_mux_p\00", align 1
@___asan_gen_.787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 101, i32 20 }
@___asan_gen_.788 = private unnamed_addr constant [21 x i8] c".compoundliteral.156\00", align 1
@___asan_gen_.789 = private unnamed_addr constant [13 x i8] c"gpu_core_clk\00", align 1
@___asan_gen_.791 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 280, i32 8 }
@___asan_gen_.795 = private unnamed_addr constant [21 x i8] c".compoundliteral.159\00", align 1
@___asan_gen_.796 = private unnamed_addr constant [12 x i8] c"gpu_mem_clk\00", align 1
@___asan_gen_.798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 286, i32 8 }
@___asan_gen_.802 = private unnamed_addr constant [21 x i8] c".compoundliteral.162\00", align 1
@___asan_gen_.803 = private unnamed_addr constant [12 x i8] c"gpu_sys_clk\00", align 1
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 292, i32 8 }
@___asan_gen_.809 = private unnamed_addr constant [14 x i8] c"hde_clk_mux_p\00", align 1
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 102, i32 20 }
@___asan_gen_.812 = private unnamed_addr constant [21 x i8] c".compoundliteral.165\00", align 1
@___asan_gen_.813 = private unnamed_addr constant [8 x i8] c"hde_clk\00", align 1
@___asan_gen_.815 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 298, i32 8 }
@___asan_gen_.816 = private unnamed_addr constant [16 x i8] c"hdmia_div_table\00", align 1
@___asan_gen_.818 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 153, i32 29 }
@___asan_gen_.822 = private unnamed_addr constant [14 x i8] c"i2s_clk_mux_p\00", align 1
@___asan_gen_.824 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 110, i32 20 }
@___asan_gen_.825 = private unnamed_addr constant [21 x i8] c".compoundliteral.168\00", align 1
@___asan_gen_.826 = private unnamed_addr constant [10 x i8] c"hdmia_clk\00", align 1
@___asan_gen_.828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 304, i32 8 }
@___asan_gen_.829 = private unnamed_addr constant [14 x i8] c"i2s_div_table\00", align 1
@___asan_gen_.831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 146, i32 29 }
@___asan_gen_.835 = private unnamed_addr constant [21 x i8] c".compoundliteral.171\00", align 1
@___asan_gen_.836 = private unnamed_addr constant [10 x i8] c"i2srx_clk\00", align 1
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 334, i32 8 }
@___asan_gen_.842 = private unnamed_addr constant [21 x i8] c".compoundliteral.174\00", align 1
@___asan_gen_.843 = private unnamed_addr constant [10 x i8] c"i2stx_clk\00", align 1
@___asan_gen_.845 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 340, i32 8 }
@___asan_gen_.849 = private unnamed_addr constant [14 x i8] c"imx_clk_mux_p\00", align 1
@___asan_gen_.851 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 103, i32 20 }
@___asan_gen_.852 = private unnamed_addr constant [21 x i8] c".compoundliteral.177\00", align 1
@___asan_gen_.853 = private unnamed_addr constant [8 x i8] c"imx_clk\00", align 1
@___asan_gen_.855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 346, i32 8 }
@___asan_gen_.859 = private unnamed_addr constant [14 x i8] c"lcd_clk_mux_p\00", align 1
@___asan_gen_.861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 104, i32 20 }
@___asan_gen_.862 = private unnamed_addr constant [21 x i8] c".compoundliteral.180\00", align 1
@___asan_gen_.863 = private unnamed_addr constant [8 x i8] c"lcd_clk\00", align 1
@___asan_gen_.865 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 352, i32 8 }
@___asan_gen_.866 = private unnamed_addr constant [15 x i8] c"nand_div_table\00", align 1
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 118, i32 29 }
@___asan_gen_.872 = private unnamed_addr constant [15 x i8] c"nand_clk_mux_p\00", align 1
@___asan_gen_.874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 105, i32 20 }
@___asan_gen_.875 = private unnamed_addr constant [21 x i8] c".compoundliteral.183\00", align 1
@___asan_gen_.876 = private unnamed_addr constant [10 x i8] c"nand0_clk\00", align 1
@___asan_gen_.878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 358, i32 8 }
@___asan_gen_.882 = private unnamed_addr constant [21 x i8] c".compoundliteral.186\00", align 1
@___asan_gen_.883 = private unnamed_addr constant [10 x i8] c"nand1_clk\00", align 1
@___asan_gen_.885 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 364, i32 8 }
@___asan_gen_.889 = private unnamed_addr constant [21 x i8] c".compoundliteral.189\00", align 1
@___asan_gen_.890 = private unnamed_addr constant [21 x i8] c".compoundliteral.190\00", align 1
@___asan_gen_.891 = private unnamed_addr constant [9 x i8] c"pwm0_clk\00", align 1
@___asan_gen_.893 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 370, i32 8 }
@___asan_gen_.897 = private unnamed_addr constant [21 x i8] c".compoundliteral.193\00", align 1
@___asan_gen_.898 = private unnamed_addr constant [21 x i8] c".compoundliteral.194\00", align 1
@___asan_gen_.899 = private unnamed_addr constant [9 x i8] c"pwm1_clk\00", align 1
@___asan_gen_.901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 375, i32 8 }
@___asan_gen_.905 = private unnamed_addr constant [21 x i8] c".compoundliteral.197\00", align 1
@___asan_gen_.906 = private unnamed_addr constant [21 x i8] c".compoundliteral.198\00", align 1
@___asan_gen_.907 = private unnamed_addr constant [9 x i8] c"pwm2_clk\00", align 1
@___asan_gen_.909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 386, i32 8 }
@___asan_gen_.913 = private unnamed_addr constant [21 x i8] c".compoundliteral.201\00", align 1
@___asan_gen_.914 = private unnamed_addr constant [21 x i8] c".compoundliteral.202\00", align 1
@___asan_gen_.915 = private unnamed_addr constant [9 x i8] c"pwm3_clk\00", align 1
@___asan_gen_.917 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 391, i32 8 }
@___asan_gen_.921 = private unnamed_addr constant [21 x i8] c".compoundliteral.205\00", align 1
@___asan_gen_.922 = private unnamed_addr constant [21 x i8] c".compoundliteral.206\00", align 1
@___asan_gen_.923 = private unnamed_addr constant [9 x i8] c"pwm4_clk\00", align 1
@___asan_gen_.925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 396, i32 8 }
@___asan_gen_.929 = private unnamed_addr constant [21 x i8] c".compoundliteral.209\00", align 1
@___asan_gen_.930 = private unnamed_addr constant [21 x i8] c".compoundliteral.210\00", align 1
@___asan_gen_.931 = private unnamed_addr constant [9 x i8] c"pwm5_clk\00", align 1
@___asan_gen_.933 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 401, i32 8 }
@___asan_gen_.934 = private unnamed_addr constant [16 x i8] c"sd_factor_table\00", align 1
@___asan_gen_.936 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 167, i32 32 }
@___asan_gen_.940 = private unnamed_addr constant [13 x i8] c"sd_clk_mux_p\00", align 1
@___asan_gen_.942 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 106, i32 20 }
@___asan_gen_.943 = private unnamed_addr constant [21 x i8] c".compoundliteral.213\00", align 1
@___asan_gen_.944 = private unnamed_addr constant [8 x i8] c"sd0_clk\00", align 1
@___asan_gen_.946 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 406, i32 8 }
@___asan_gen_.950 = private unnamed_addr constant [21 x i8] c".compoundliteral.216\00", align 1
@___asan_gen_.951 = private unnamed_addr constant [8 x i8] c"sd1_clk\00", align 1
@___asan_gen_.953 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 412, i32 8 }
@___asan_gen_.957 = private unnamed_addr constant [21 x i8] c".compoundliteral.219\00", align 1
@___asan_gen_.958 = private unnamed_addr constant [8 x i8] c"sd2_clk\00", align 1
@___asan_gen_.960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 418, i32 8 }
@___asan_gen_.964 = private unnamed_addr constant [21 x i8] c".compoundliteral.222\00", align 1
@___asan_gen_.965 = private unnamed_addr constant [8 x i8] c"sd3_clk\00", align 1
@___asan_gen_.967 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 424, i32 8 }
@___asan_gen_.971 = private unnamed_addr constant [17 x i8] c"sensor_clk_mux_p\00", align 1
@___asan_gen_.973 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 107, i32 20 }
@___asan_gen_.974 = private unnamed_addr constant [21 x i8] c".compoundliteral.225\00", align 1
@___asan_gen_.975 = private unnamed_addr constant [11 x i8] c"sensor_clk\00", align 1
@___asan_gen_.977 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 430, i32 8 }
@___asan_gen_.981 = private unnamed_addr constant [21 x i8] c".compoundliteral.228\00", align 1
@___asan_gen_.982 = private unnamed_addr constant [21 x i8] c".compoundliteral.229\00", align 1
@___asan_gen_.983 = private unnamed_addr constant [17 x i8] c"speed_sensor_clk\00", align 1
@___asan_gen_.985 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 436, i32 8 }
@___asan_gen_.989 = private unnamed_addr constant [21 x i8] c".compoundliteral.232\00", align 1
@___asan_gen_.990 = private unnamed_addr constant [21 x i8] c".compoundliteral.233\00", align 1
@___asan_gen_.991 = private unnamed_addr constant [19 x i8] c"thermal_sensor_clk\00", align 1
@___asan_gen_.993 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 442, i32 8 }
@___asan_gen_.997 = private unnamed_addr constant [15 x i8] c"uart_clk_mux_p\00", align 1
@___asan_gen_.999 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 108, i32 20 }
@___asan_gen_.1000 = private unnamed_addr constant [21 x i8] c".compoundliteral.236\00", align 1
@___asan_gen_.1001 = private unnamed_addr constant [10 x i8] c"uart0_clk\00", align 1
@___asan_gen_.1003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 448, i32 8 }
@___asan_gen_.1007 = private unnamed_addr constant [21 x i8] c".compoundliteral.239\00", align 1
@___asan_gen_.1008 = private unnamed_addr constant [10 x i8] c"uart1_clk\00", align 1
@___asan_gen_.1010 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 454, i32 8 }
@___asan_gen_.1014 = private unnamed_addr constant [21 x i8] c".compoundliteral.242\00", align 1
@___asan_gen_.1015 = private unnamed_addr constant [10 x i8] c"uart2_clk\00", align 1
@___asan_gen_.1017 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 460, i32 8 }
@___asan_gen_.1021 = private unnamed_addr constant [21 x i8] c".compoundliteral.245\00", align 1
@___asan_gen_.1022 = private unnamed_addr constant [10 x i8] c"uart3_clk\00", align 1
@___asan_gen_.1024 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 466, i32 8 }
@___asan_gen_.1028 = private unnamed_addr constant [21 x i8] c".compoundliteral.248\00", align 1
@___asan_gen_.1029 = private unnamed_addr constant [10 x i8] c"uart4_clk\00", align 1
@___asan_gen_.1031 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 472, i32 8 }
@___asan_gen_.1035 = private unnamed_addr constant [21 x i8] c".compoundliteral.251\00", align 1
@___asan_gen_.1036 = private unnamed_addr constant [10 x i8] c"uart5_clk\00", align 1
@___asan_gen_.1038 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 478, i32 8 }
@___asan_gen_.1042 = private unnamed_addr constant [21 x i8] c".compoundliteral.254\00", align 1
@___asan_gen_.1043 = private unnamed_addr constant [10 x i8] c"uart6_clk\00", align 1
@___asan_gen_.1045 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 484, i32 8 }
@___asan_gen_.1049 = private unnamed_addr constant [14 x i8] c"vce_clk_mux_p\00", align 1
@___asan_gen_.1051 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 109, i32 20 }
@___asan_gen_.1052 = private unnamed_addr constant [21 x i8] c".compoundliteral.257\00", align 1
@___asan_gen_.1053 = private unnamed_addr constant [8 x i8] c"vce_clk\00", align 1
@___asan_gen_.1055 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 490, i32 8 }
@___asan_gen_.1056 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1059 = private unnamed_addr constant [21 x i8] c".compoundliteral.260\00", align 1
@___asan_gen_.1060 = private unnamed_addr constant [8 x i8] c"vde_clk\00", align 1
@___asan_gen_.1062 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 496, i32 8 }
@___asan_gen_.1063 = private unnamed_addr constant [13 x i8] c"s900_hw_clks\00", align 1
@___asan_gen_.1064 = private constant [34 x i8] c"../drivers/clk/actions/owl-s900.c\00", align 1
@___asan_gen_.1065 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1064, i32 594, i32 35 }
@llvm.compiler.used = appending global [353 x ptr] [ptr @__initcall__kmod_owl_s900__170_803_s900_clk_init1, ptr @s900_clk_probe._entry, ptr @s900_clk_probe._entry_ptr, ptr @s900_clk_driver, ptr @.str, ptr @s900_clk_of_match, ptr @s900_clk_desc, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @s900_clks, ptr @s900_resets, ptr @core_pll_clk, ptr @dev_pll_clk, ptr @ddr_pll_clk, ptr @nand_pll_clk, ptr @display_pll_clk, ptr @assist_pll_clk, ptr @audio_pll_clk, ptr @edp_pll_clk, ptr @cpu_clk, ptr @dev_clk, ptr @noc_clk_mux, ptr @noc_clk_div, ptr @ahb_clk, ptr @apb_clk, ptr @usb3_mac_clk, ptr @rmii_ref_clk, ptr @noc_clk, ptr @de_clk1, ptr @de_clk2, ptr @de_clk3, ptr @gpio_clk, ptr @gpu_clk, ptr @dmac_clk, ptr @timer_clk, ptr @dsi_clk, ptr @ddr0_clk, ptr @ddr1_clk, ptr @usb3_480mpll0_clk, ptr @usb3_480mphy0_clk, ptr @usb3_5gphy_clk, ptr @usb3_cce_clk, ptr @edp24M_clk, ptr @edp_link_clk, ptr @usbh0_pllen_clk, ptr @usbh0_phy_clk, ptr @usbh0_cce_clk, ptr @usbh1_pllen_clk, ptr @usbh1_phy_clk, ptr @usbh1_cce_clk, ptr @i2c0_clk, ptr @i2c1_clk, ptr @i2c2_clk, ptr @i2c3_clk, ptr @i2c4_clk, ptr @i2c5_clk, ptr @spi0_clk, ptr @spi1_clk, ptr @spi2_clk, ptr @spi3_clk, ptr @de_clk, ptr @.str.6, ptr @.compoundliteral, ptr @.str.7, ptr @.compoundliteral.8, ptr @.str.9, ptr @.compoundliteral.10, ptr @.str.11, ptr @.compoundliteral.12, ptr @.str.13, ptr @.compoundliteral.14, ptr @.str.15, ptr @.compoundliteral.16, ptr @clk_audio_pll_table, ptr @.str.17, ptr @.compoundliteral.18, ptr @clk_edp_pll_table, ptr @.str.19, ptr @.str.20, ptr @.compoundliteral.21, ptr @.compoundliteral.22, ptr @.str.23, ptr @cpu_clk_mux_p, ptr @.compoundliteral.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @dev_clk_p, ptr @.compoundliteral.28, ptr @.str.29, ptr @noc_clk_mux_p, ptr @.compoundliteral.30, ptr @.str.31, ptr @.str.32, ptr @.compoundliteral.33, ptr @.compoundliteral.34, ptr @.str.35, ptr @.compoundliteral.36, ptr @.compoundliteral.37, ptr @apb_div_table, ptr @.str.38, ptr @.compoundliteral.39, ptr @.compoundliteral.40, ptr @usb3_mac_div_table, ptr @.str.41, ptr @.compoundliteral.42, ptr @.compoundliteral.43, ptr @rmii_ref_div_table, ptr @.str.44, ptr @.compoundliteral.45, ptr @.compoundliteral.46, ptr @noc_factor_table, ptr @.compoundliteral.47, ptr @.compoundliteral.48, ptr @bisp_factor_table, ptr @.str.49, ptr @.str.50, ptr @.compoundliteral.51, ptr @.compoundliteral.52, ptr @.str.53, ptr @.compoundliteral.54, ptr @.compoundliteral.55, ptr @.str.56, ptr @.compoundliteral.57, ptr @.compoundliteral.58, ptr @.str.59, ptr @.compoundliteral.60, ptr @.compoundliteral.61, ptr @.str.62, ptr @.compoundliteral.63, ptr @.str.64, ptr @.compoundliteral.65, ptr @.compoundliteral.66, ptr @.str.67, ptr @.compoundliteral.68, ptr @.compoundliteral.69, ptr @.str.70, ptr @.compoundliteral.71, ptr @.str.72, ptr @.compoundliteral.73, ptr @.compoundliteral.74, ptr @.str.75, ptr @.compoundliteral.76, ptr @.compoundliteral.77, ptr @.str.78, ptr @.compoundliteral.79, ptr @.str.80, ptr @.compoundliteral.81, ptr @.str.82, ptr @.compoundliteral.83, ptr @.str.84, ptr @.compoundliteral.85, ptr @.str.86, ptr @.compoundliteral.87, ptr @.compoundliteral.88, ptr @.str.89, ptr @.compoundliteral.90, ptr @.compoundliteral.91, ptr @.str.92, ptr @.compoundliteral.93, ptr @.str.94, ptr @.compoundliteral.95, ptr @.str.96, ptr @.compoundliteral.97, ptr @.str.98, ptr @.compoundliteral.99, ptr @.str.100, ptr @.compoundliteral.101, ptr @.str.102, ptr @.compoundliteral.103, ptr @.str.104, ptr @.compoundliteral.105, ptr @.compoundliteral.106, ptr @.str.107, ptr @.compoundliteral.108, ptr @.compoundliteral.109, ptr @.str.110, ptr @.compoundliteral.111, ptr @.compoundliteral.112, ptr @.str.113, ptr @.compoundliteral.114, ptr @.compoundliteral.115, ptr @.str.116, ptr @.compoundliteral.117, ptr @.compoundliteral.118, ptr @.str.119, ptr @.compoundliteral.120, ptr @.compoundliteral.121, ptr @.str.122, ptr @.compoundliteral.123, ptr @.compoundliteral.124, ptr @.str.125, ptr @.compoundliteral.126, ptr @.compoundliteral.127, ptr @.str.128, ptr @.compoundliteral.129, ptr @.compoundliteral.130, ptr @.str.131, ptr @.compoundliteral.132, ptr @.compoundliteral.133, ptr @.str.134, ptr @bisp_clk_mux_p, ptr @.compoundliteral.135, ptr @bisp_clk, ptr @.str.137, ptr @csi_clk_mux_p, ptr @.compoundliteral.138, ptr @csi0_clk, ptr @.str.140, ptr @.compoundliteral.141, ptr @csi1_clk, ptr @de_clk_mux_p, ptr @.compoundliteral.143, ptr @dmm_factor_table, ptr @.str.144, ptr @dmm_clk_mux_p, ptr @.compoundliteral.145, ptr @dmm_clk, ptr @.str.147, ptr @.str.148, ptr @edp_clk_mux_p, ptr @.compoundliteral.149, ptr @edp_clk, ptr @eth_mac_div_table, ptr @.str.151, ptr @.compoundliteral.152, ptr @.compoundliteral.153, ptr @eth_mac_clk, ptr @.str.155, ptr @gpu_clk_mux_p, ptr @.compoundliteral.156, ptr @gpu_core_clk, ptr @.str.158, ptr @.compoundliteral.159, ptr @gpu_mem_clk, ptr @.str.161, ptr @.compoundliteral.162, ptr @gpu_sys_clk, ptr @.str.164, ptr @hde_clk_mux_p, ptr @.compoundliteral.165, ptr @hde_clk, ptr @hdmia_div_table, ptr @.str.167, ptr @i2s_clk_mux_p, ptr @.compoundliteral.168, ptr @hdmia_clk, ptr @i2s_div_table, ptr @.str.170, ptr @.compoundliteral.171, ptr @i2srx_clk, ptr @.str.173, ptr @.compoundliteral.174, ptr @i2stx_clk, ptr @.str.176, ptr @imx_clk_mux_p, ptr @.compoundliteral.177, ptr @imx_clk, ptr @.str.179, ptr @lcd_clk_mux_p, ptr @.compoundliteral.180, ptr @lcd_clk, ptr @nand_div_table, ptr @.str.182, ptr @nand_clk_mux_p, ptr @.compoundliteral.183, ptr @nand0_clk, ptr @.str.185, ptr @.compoundliteral.186, ptr @nand1_clk, ptr @.str.188, ptr @.compoundliteral.189, ptr @.compoundliteral.190, ptr @pwm0_clk, ptr @.str.192, ptr @.compoundliteral.193, ptr @.compoundliteral.194, ptr @pwm1_clk, ptr @.str.196, ptr @.compoundliteral.197, ptr @.compoundliteral.198, ptr @pwm2_clk, ptr @.str.200, ptr @.compoundliteral.201, ptr @.compoundliteral.202, ptr @pwm3_clk, ptr @.str.204, ptr @.compoundliteral.205, ptr @.compoundliteral.206, ptr @pwm4_clk, ptr @.str.208, ptr @.compoundliteral.209, ptr @.compoundliteral.210, ptr @pwm5_clk, ptr @sd_factor_table, ptr @.str.212, ptr @sd_clk_mux_p, ptr @.compoundliteral.213, ptr @sd0_clk, ptr @.str.215, ptr @.compoundliteral.216, ptr @sd1_clk, ptr @.str.218, ptr @.compoundliteral.219, ptr @sd2_clk, ptr @.str.221, ptr @.compoundliteral.222, ptr @sd3_clk, ptr @.str.224, ptr @sensor_clk_mux_p, ptr @.compoundliteral.225, ptr @sensor_clk, ptr @.str.227, ptr @.compoundliteral.228, ptr @.compoundliteral.229, ptr @speed_sensor_clk, ptr @.str.231, ptr @.compoundliteral.232, ptr @.compoundliteral.233, ptr @thermal_sensor_clk, ptr @.str.235, ptr @uart_clk_mux_p, ptr @.compoundliteral.236, ptr @uart0_clk, ptr @.str.238, ptr @.compoundliteral.239, ptr @uart1_clk, ptr @.str.241, ptr @.compoundliteral.242, ptr @uart2_clk, ptr @.str.244, ptr @.compoundliteral.245, ptr @uart3_clk, ptr @.str.247, ptr @.compoundliteral.248, ptr @uart4_clk, ptr @.str.250, ptr @.compoundliteral.251, ptr @uart5_clk, ptr @.str.253, ptr @.compoundliteral.254, ptr @uart6_clk, ptr @.str.256, ptr @vce_clk_mux_p, ptr @.compoundliteral.257, ptr @vce_clk, ptr @.str.259, ptr @.compoundliteral.260, ptr @vde_clk, ptr @s900_hw_clks], section "llvm.metadata"
@0 = internal global [351 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s900_clk_driver to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s900_clk_of_match to i32), i32 392, i32 512, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s900_clk_desc to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s900_clk_probe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s900_clks to i32), i32 356, i32 448, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s900_resets to i32), i32 432, i32 544, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @core_pll_clk to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_pll_clk to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ddr_pll_clk to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_pll_clk to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @display_pll_clk to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assist_pll_clk to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @audio_pll_clk to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @edp_pll_clk to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpu_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @noc_clk_mux to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @noc_clk_div to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ahb_clk to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @apb_clk to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb3_mac_clk to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rmii_ref_clk to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @noc_clk to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @de_clk1 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @de_clk2 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @de_clk3 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gpio_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gpu_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dmac_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @timer_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dsi_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ddr0_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ddr1_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb3_480mpll0_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb3_480mphy0_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb3_5gphy_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb3_cce_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @edp24M_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @edp_link_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usbh0_pllen_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usbh0_phy_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usbh0_cce_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usbh1_pllen_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usbh1_phy_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usbh1_cce_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2c0_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2c1_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2c2_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2c3_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2c4_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2c5_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi0_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi1_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi2_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi3_clk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @de_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.8 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.10 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.12 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.14 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.16 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_audio_pll_table to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.18 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_edp_pll_table to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.21 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.22 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpu_clk_mux_p to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.24 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_clk_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.28 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @noc_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.30 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.33 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.34 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.36 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.37 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @apb_div_table to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.39 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.40 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb3_mac_div_table to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.42 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.43 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.546 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rmii_ref_div_table to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.45 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.46 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @noc_factor_table to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.47 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.48 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bisp_factor_table to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.51 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.52 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.54 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.55 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.57 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.58 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.60 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.61 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.63 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.65 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.66 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.68 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.69 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.71 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.73 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.74 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.76 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.77 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.79 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.81 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.83 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.85 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.87 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.88 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.90 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.91 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.93 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.95 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.97 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.99 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.101 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.103 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.105 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.106 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.108 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.109 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.111 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.112 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.678 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.114 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.115 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.683 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.117 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.118 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.120 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.121 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.123 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.124 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.126 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.127 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.129 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.130 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.132 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.133 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bisp_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.717 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.135 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.720 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bisp_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @csi_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.138 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @csi0_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.141 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @csi1_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @de_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.143 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dmm_factor_table to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dmm_clk_mux_p to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.145 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dmm_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.760 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @edp_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.149 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @edp_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @eth_mac_div_table to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.771 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.152 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.153 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @eth_mac_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gpu_clk_mux_p to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.156 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gpu_core_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.159 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gpu_mem_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.162 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gpu_sys_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hde_clk_mux_p to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.165 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hde_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hdmia_div_table to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2s_clk_mux_p to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.168 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hdmia_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2s_div_table to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.171 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2srx_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.174 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i2stx_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @imx_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.177 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @imx_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.865 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lcd_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.180 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lcd_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.865 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_div_table to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.183 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand0_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.186 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand1_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.189 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.190 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pwm0_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.193 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.194 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pwm1_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.197 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.198 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.906 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pwm2_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.201 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.202 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pwm3_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.205 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.206 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.922 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pwm4_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.209 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.210 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pwm5_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sd_factor_table to i32), i32 780, i32 992, i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sd_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.213 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sd0_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.216 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sd1_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.219 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sd2_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.222 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sd3_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sensor_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.971 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.973 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.225 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sensor_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.228 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.981 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.229 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @speed_sensor_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.232 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.989 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.233 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @thermal_sensor_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uart_clk_mux_p to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.236 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uart0_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.239 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1007 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uart1_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.242 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uart2_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.245 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uart3_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.248 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uart4_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.251 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uart5_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1036 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.254 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uart6_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vce_clk_mux_p to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.257 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vce_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.260 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1059 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vde_clk to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @s900_hw_clks to i32), i32 408, i32 512, i32 ptrtoint (ptr @___asan_gen_.1063 to i32), i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @s900_clk_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #6
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__platform_driver_register(ptr noundef nonnull @s900_clk_driver, ptr noundef null) #4
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__platform_driver_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @s900_clk_probe(ptr noundef %pdev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #6
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @owl_clk_regmap_init(ptr noundef %pdev, ptr noundef nonnull @s900_clk_desc) #4
  %dev = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  %call.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev, i32 noundef 52, i32 noundef 3520) #4
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #6
  br label %cleanup

if.end:                                           ; preds = %entry
  %of_node = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 27
  %0 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node, align 8
  %of_node3 = getelementptr inbounds %struct.reset_controller_dev, ptr %call.i, i32 0, i32 5
  %2 = ptrtoint ptr %of_node3 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %of_node3, align 4
  %3 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @owl_reset_ops, ptr %call.i, align 4
  %4 = load i32, ptr getelementptr inbounds (%struct.owl_clk_desc, ptr @s900_clk_desc, i32 0, i32 4), align 4
  %nr_resets = getelementptr inbounds %struct.reset_controller_dev, ptr %call.i, i32 0, i32 8
  %5 = ptrtoint ptr %nr_resets to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %nr_resets, align 4
  %6 = load ptr, ptr getelementptr inbounds (%struct.owl_clk_desc, ptr @s900_clk_desc, i32 0, i32 3), align 4
  %reset_map = getelementptr inbounds %struct.owl_reset, ptr %call.i, i32 0, i32 1
  %7 = ptrtoint ptr %reset_map to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %reset_map, align 4
  %8 = load ptr, ptr getelementptr inbounds (%struct.owl_clk_desc, ptr @s900_clk_desc, i32 0, i32 5), align 4
  %regmap6 = getelementptr inbounds %struct.owl_reset, ptr %call.i, i32 0, i32 2
  %9 = ptrtoint ptr %regmap6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %regmap6, align 4
  %call9 = tail call i32 @devm_reset_controller_register(ptr noundef %dev, ptr noundef nonnull %call.i) #4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end.if.end13_crit_edge, label %do.end

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #6
  br label %if.end13

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #6
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.1) #7
  br label %if.end13

if.end13:                                         ; preds = %do.end, %if.end.if.end13_crit_edge
  %10 = load ptr, ptr getelementptr inbounds (%struct.owl_clk_desc, ptr @s900_clk_desc, i32 0, i32 2), align 4
  %call15 = tail call i32 @owl_clk_probe(ptr noundef %dev, ptr noundef %10) #4
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.end13 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @owl_clk_regmap_init(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devm_reset_controller_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @owl_clk_probe(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kmalloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #4

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load4_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #5 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 351)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #5 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 351)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { nounwind }
attributes #5 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #6 = { nomerge }
attributes #7 = { cold nounwind }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !9, !10, !11, !12, !13, !14, !16, !18, !20, !21, !23, !24, !26, !27, !29, !30, !32, !33, !35, !36, !38, !39, !41, !43, !44, !45, !47, !49, !50, !52, !54, !56, !58, !59, !61, !63, !64, !66, !68, !69, !70, !72, !73, !75, !76, !78, !80, !81, !83, !85, !86, !88, !90, !92, !94, !95, !96, !98, !100, !101, !103, !104, !106, !107, !109, !110, !112, !113, !115, !116, !118, !119, !121, !122, !124, !125, !127, !128, !130, !131, !133, !134, !136, !137, !139, !140, !142, !143, !145, !146, !148, !149, !151, !152, !154, !155, !157, !158, !160, !161, !163, !164, !166, !167, !169, !170, !172, !173, !175, !176, !178, !179, !181, !182, !184, !185, !187, !188, !190, !191, !193, !194, !196, !198, !199, !201, !203, !204, !206, !208, !210, !211, !213, !215, !217, !219, !220, !222, !224, !225, !227, !229, !230, !232, !234, !235, !237, !238, !240, !241, !243, !245, !246, !248, !250, !252, !253, !255, !257, !258, !260, !261, !263, !265, !266, !268, !270, !271, !273, !275, !277, !278, !280, !281, !283, !284, !286, !287, !289, !290, !292, !293, !295, !296, !298, !299, !301, !303, !305, !306, !308, !309, !311, !312, !314, !315, !317, !319, !320, !322, !323, !325, !326, !328, !330, !331, !333, !334, !336, !337, !339, !340, !342, !343, !345, !346, !348, !349, !351, !353, !354, !356, !358}
!llvm.module.flags = !{!360, !361, !362, !363, !364, !365, !366, !367}
!llvm.ident = !{!368}

!0 = !{ptr @__initcall__kmod_owl_s900__170_803_s900_clk_init1, !1, !"__initcall__kmod_owl_s900__170_803_s900_clk_init1", i1 false, i1 false}
!1 = !{!"../drivers/clk/actions/owl-s900.c", i32 803, i32 1}
!2 = !{ptr @.str, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../drivers/clk/actions/owl-s900.c", i32 794, i32 11}
!4 = !{ptr @s900_clk_driver, !5, !"s900_clk_driver", i1 false, i1 false}
!5 = !{!"../drivers/clk/actions/owl-s900.c", i32 791, i32 31}
!6 = !{ptr @.str.1, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../drivers/clk/actions/owl-s900.c", i32 781, i32 3}
!8 = !{ptr @.str.2, !7, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @.str.3, !7, !"<string literal>", i1 false, i1 false}
!10 = !{ptr @.str.4, !7, !"<string literal>", i1 false, i1 false}
!11 = !{ptr @.str.5, !7, !"<string literal>", i1 false, i1 false}
!12 = !{ptr @s900_clk_probe._entry, !7, !"_entry", i1 false, i1 false}
!13 = !{ptr @s900_clk_probe._entry_ptr, !7, !"_entry_ptr", i1 false, i1 false}
!14 = !{ptr @s900_clk_desc, !15, !"s900_clk_desc", i1 false, i1 false}
!15 = !{!"../drivers/clk/actions/owl-s900.c", i32 746, i32 28}
!16 = !{ptr @s900_clks, !17, !"s900_clks", i1 false, i1 false}
!17 = !{!"../drivers/clk/actions/owl-s900.c", i32 502, i32 31}
!18 = !{ptr @.str.6, !19, !"<string literal>", i1 false, i1 false}
!19 = !{!"../drivers/clk/actions/owl-s900.c", i32 85, i32 8}
!20 = !{ptr @core_pll_clk, !19, !"core_pll_clk", i1 false, i1 false}
!21 = !{ptr @.str.7, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../drivers/clk/actions/owl-s900.c", i32 86, i32 8}
!23 = !{ptr @dev_pll_clk, !22, !"dev_pll_clk", i1 false, i1 false}
!24 = !{ptr @.str.9, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../drivers/clk/actions/owl-s900.c", i32 87, i32 8}
!26 = !{ptr @ddr_pll_clk, !25, !"ddr_pll_clk", i1 false, i1 false}
!27 = !{ptr @.str.11, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../drivers/clk/actions/owl-s900.c", i32 88, i32 8}
!29 = !{ptr @nand_pll_clk, !28, !"nand_pll_clk", i1 false, i1 false}
!30 = !{ptr @.str.13, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/clk/actions/owl-s900.c", i32 89, i32 8}
!32 = !{ptr @display_pll_clk, !31, !"display_pll_clk", i1 false, i1 false}
!33 = !{ptr @.str.15, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../drivers/clk/actions/owl-s900.c", i32 90, i32 8}
!35 = !{ptr @assist_pll_clk, !34, !"assist_pll_clk", i1 false, i1 false}
!36 = !{ptr @.str.17, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../drivers/clk/actions/owl-s900.c", i32 91, i32 8}
!38 = !{ptr @audio_pll_clk, !37, !"audio_pll_clk", i1 false, i1 false}
!39 = !{ptr @clk_audio_pll_table, !40, !"clk_audio_pll_table", i1 false, i1 false}
!40 = !{!"../drivers/clk/actions/owl-s900.c", i32 74, i32 29}
!41 = !{ptr @.str.19, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../drivers/clk/actions/owl-s900.c", i32 92, i32 8}
!43 = !{ptr @.str.20, !42, !"<string literal>", i1 false, i1 false}
!44 = !{ptr @edp_pll_clk, !42, !"edp_pll_clk", i1 false, i1 false}
!45 = !{ptr @clk_edp_pll_table, !46, !"clk_edp_pll_table", i1 false, i1 false}
!46 = !{!"../drivers/clk/actions/owl-s900.c", i32 79, i32 29}
!47 = !{ptr @.str.23, !48, !"<string literal>", i1 false, i1 false}
!48 = !{!"../drivers/clk/actions/owl-s900.c", i32 114, i32 8}
!49 = !{ptr @cpu_clk, !48, !"cpu_clk", i1 false, i1 false}
!50 = !{ptr @.str.25, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/clk/actions/owl-s900.c", i32 94, i32 40}
!52 = !{ptr @.str.26, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../drivers/clk/actions/owl-s900.c", i32 94, i32 48}
!54 = !{ptr @cpu_clk_mux_p, !55, !"cpu_clk_mux_p", i1 false, i1 false}
!55 = !{!"../drivers/clk/actions/owl-s900.c", i32 94, i32 20}
!56 = !{ptr @.str.27, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../drivers/clk/actions/owl-s900.c", i32 115, i32 8}
!58 = !{ptr @dev_clk, !57, !"dev_clk", i1 false, i1 false}
!59 = !{ptr @dev_clk_p, !60, !"dev_clk_p", i1 false, i1 false}
!60 = !{!"../drivers/clk/actions/owl-s900.c", i32 95, i32 20}
!61 = !{ptr @.str.29, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../drivers/clk/actions/owl-s900.c", i32 116, i32 8}
!63 = !{ptr @noc_clk_mux, !62, !"noc_clk_mux", i1 false, i1 false}
!64 = !{ptr @noc_clk_mux_p, !65, !"noc_clk_mux_p", i1 false, i1 false}
!65 = !{!"../drivers/clk/actions/owl-s900.c", i32 96, i32 20}
!66 = !{ptr @.str.31, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../drivers/clk/actions/owl-s900.c", i32 161, i32 8}
!68 = !{ptr @.str.32, !67, !"<string literal>", i1 false, i1 false}
!69 = !{ptr @noc_clk_div, !67, !"noc_clk_div", i1 false, i1 false}
!70 = !{ptr @.str.35, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../drivers/clk/actions/owl-s900.c", i32 162, i32 8}
!72 = !{ptr @ahb_clk, !71, !"ahb_clk", i1 false, i1 false}
!73 = !{ptr @.str.38, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../drivers/clk/actions/owl-s900.c", i32 163, i32 8}
!75 = !{ptr @apb_clk, !74, !"apb_clk", i1 false, i1 false}
!76 = !{ptr @apb_div_table, !77, !"apb_div_table", i1 false, i1 false}
!77 = !{!"../drivers/clk/actions/owl-s900.c", i32 126, i32 29}
!78 = !{ptr @.str.41, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../drivers/clk/actions/owl-s900.c", i32 164, i32 8}
!80 = !{ptr @usb3_mac_clk, !79, !"usb3_mac_clk", i1 false, i1 false}
!81 = !{ptr @usb3_mac_div_table, !82, !"usb3_mac_div_table", i1 false, i1 false}
!82 = !{!"../drivers/clk/actions/owl-s900.c", i32 141, i32 29}
!83 = !{ptr @.str.44, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/clk/actions/owl-s900.c", i32 165, i32 8}
!85 = !{ptr @rmii_ref_clk, !84, !"rmii_ref_clk", i1 false, i1 false}
!86 = !{ptr @rmii_ref_div_table, !87, !"rmii_ref_div_table", i1 false, i1 false}
!87 = !{!"../drivers/clk/actions/owl-s900.c", i32 136, i32 29}
!88 = !{ptr @noc_clk, !89, !"noc_clk", i1 false, i1 false}
!89 = !{!"../drivers/clk/actions/owl-s900.c", i32 209, i32 8}
!90 = !{ptr @noc_factor_table, !91, !"noc_factor_table", i1 false, i1 false}
!91 = !{!"../drivers/clk/actions/owl-s900.c", i32 197, i32 32}
!92 = !{ptr @.str.49, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../drivers/clk/actions/owl-s900.c", i32 210, i32 8}
!94 = !{ptr @.str.50, !93, !"<string literal>", i1 false, i1 false}
!95 = !{ptr @de_clk1, !93, !"de_clk1", i1 false, i1 false}
!96 = !{ptr @bisp_factor_table, !97, !"bisp_factor_table", i1 false, i1 false}
!97 = !{!"../drivers/clk/actions/owl-s900.c", i32 202, i32 32}
!98 = !{ptr @.str.53, !99, !"<string literal>", i1 false, i1 false}
!99 = !{!"../drivers/clk/actions/owl-s900.c", i32 211, i32 8}
!100 = !{ptr @de_clk2, !99, !"de_clk2", i1 false, i1 false}
!101 = !{ptr @.str.56, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../drivers/clk/actions/owl-s900.c", i32 212, i32 8}
!103 = !{ptr @de_clk3, !102, !"de_clk3", i1 false, i1 false}
!104 = !{ptr @.str.59, !105, !"<string literal>", i1 false, i1 false}
!105 = !{!"../drivers/clk/actions/owl-s900.c", i32 215, i32 8}
!106 = !{ptr @gpio_clk, !105, !"gpio_clk", i1 false, i1 false}
!107 = !{ptr @.str.62, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../drivers/clk/actions/owl-s900.c", i32 216, i32 8}
!109 = !{ptr @gpu_clk, !108, !"gpu_clk", i1 false, i1 false}
!110 = !{ptr @.str.64, !111, !"<string literal>", i1 false, i1 false}
!111 = !{!"../drivers/clk/actions/owl-s900.c", i32 217, i32 8}
!112 = !{ptr @dmac_clk, !111, !"dmac_clk", i1 false, i1 false}
!113 = !{ptr @.str.67, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/clk/actions/owl-s900.c", i32 218, i32 8}
!115 = !{ptr @timer_clk, !114, !"timer_clk", i1 false, i1 false}
!116 = !{ptr @.str.70, !117, !"<string literal>", i1 false, i1 false}
!117 = !{!"../drivers/clk/actions/owl-s900.c", i32 219, i32 8}
!118 = !{ptr @dsi_clk, !117, !"dsi_clk", i1 false, i1 false}
!119 = !{ptr @.str.72, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../drivers/clk/actions/owl-s900.c", i32 220, i32 8}
!121 = !{ptr @ddr0_clk, !120, !"ddr0_clk", i1 false, i1 false}
!122 = !{ptr @.str.75, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../drivers/clk/actions/owl-s900.c", i32 221, i32 8}
!124 = !{ptr @ddr1_clk, !123, !"ddr1_clk", i1 false, i1 false}
!125 = !{ptr @.str.78, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../drivers/clk/actions/owl-s900.c", i32 222, i32 8}
!127 = !{ptr @usb3_480mpll0_clk, !126, !"usb3_480mpll0_clk", i1 false, i1 false}
!128 = !{ptr @.str.80, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../drivers/clk/actions/owl-s900.c", i32 223, i32 8}
!130 = !{ptr @usb3_480mphy0_clk, !129, !"usb3_480mphy0_clk", i1 false, i1 false}
!131 = !{ptr @.str.82, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../drivers/clk/actions/owl-s900.c", i32 224, i32 8}
!133 = !{ptr @usb3_5gphy_clk, !132, !"usb3_5gphy_clk", i1 false, i1 false}
!134 = !{ptr @.str.84, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/clk/actions/owl-s900.c", i32 225, i32 8}
!136 = !{ptr @usb3_cce_clk, !135, !"usb3_cce_clk", i1 false, i1 false}
!137 = !{ptr @.str.86, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../drivers/clk/actions/owl-s900.c", i32 226, i32 8}
!139 = !{ptr @edp24M_clk, !138, !"edp24M_clk", i1 false, i1 false}
!140 = !{ptr @.str.89, !141, !"<string literal>", i1 false, i1 false}
!141 = !{!"../drivers/clk/actions/owl-s900.c", i32 227, i32 8}
!142 = !{ptr @edp_link_clk, !141, !"edp_link_clk", i1 false, i1 false}
!143 = !{ptr @.str.92, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../drivers/clk/actions/owl-s900.c", i32 228, i32 8}
!145 = !{ptr @usbh0_pllen_clk, !144, !"usbh0_pllen_clk", i1 false, i1 false}
!146 = !{ptr @.str.94, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../drivers/clk/actions/owl-s900.c", i32 229, i32 8}
!148 = !{ptr @usbh0_phy_clk, !147, !"usbh0_phy_clk", i1 false, i1 false}
!149 = !{ptr @.str.96, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../drivers/clk/actions/owl-s900.c", i32 230, i32 8}
!151 = !{ptr @usbh0_cce_clk, !150, !"usbh0_cce_clk", i1 false, i1 false}
!152 = !{ptr @.str.98, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../drivers/clk/actions/owl-s900.c", i32 231, i32 8}
!154 = !{ptr @usbh1_pllen_clk, !153, !"usbh1_pllen_clk", i1 false, i1 false}
!155 = !{ptr @.str.100, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../drivers/clk/actions/owl-s900.c", i32 232, i32 8}
!157 = !{ptr @usbh1_phy_clk, !156, !"usbh1_phy_clk", i1 false, i1 false}
!158 = !{ptr @.str.102, !159, !"<string literal>", i1 false, i1 false}
!159 = !{!"../drivers/clk/actions/owl-s900.c", i32 233, i32 8}
!160 = !{ptr @usbh1_cce_clk, !159, !"usbh1_cce_clk", i1 false, i1 false}
!161 = !{ptr @.str.104, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../drivers/clk/actions/owl-s900.c", i32 310, i32 8}
!163 = !{ptr @i2c0_clk, !162, !"i2c0_clk", i1 false, i1 false}
!164 = !{ptr @.str.107, !165, !"<string literal>", i1 false, i1 false}
!165 = !{!"../drivers/clk/actions/owl-s900.c", i32 314, i32 8}
!166 = !{ptr @i2c1_clk, !165, !"i2c1_clk", i1 false, i1 false}
!167 = !{ptr @.str.110, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../drivers/clk/actions/owl-s900.c", i32 318, i32 8}
!169 = !{ptr @i2c2_clk, !168, !"i2c2_clk", i1 false, i1 false}
!170 = !{ptr @.str.113, !171, !"<string literal>", i1 false, i1 false}
!171 = !{!"../drivers/clk/actions/owl-s900.c", i32 322, i32 8}
!172 = !{ptr @i2c3_clk, !171, !"i2c3_clk", i1 false, i1 false}
!173 = !{ptr @.str.116, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../drivers/clk/actions/owl-s900.c", i32 326, i32 8}
!175 = !{ptr @i2c4_clk, !174, !"i2c4_clk", i1 false, i1 false}
!176 = !{ptr @.str.119, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../drivers/clk/actions/owl-s900.c", i32 330, i32 8}
!178 = !{ptr @i2c5_clk, !177, !"i2c5_clk", i1 false, i1 false}
!179 = !{ptr @.str.122, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../drivers/clk/actions/owl-s900.c", i32 234, i32 8}
!181 = !{ptr @spi0_clk, !180, !"spi0_clk", i1 false, i1 false}
!182 = !{ptr @.str.125, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/clk/actions/owl-s900.c", i32 235, i32 8}
!184 = !{ptr @spi1_clk, !183, !"spi1_clk", i1 false, i1 false}
!185 = !{ptr @.str.128, !186, !"<string literal>", i1 false, i1 false}
!186 = !{!"../drivers/clk/actions/owl-s900.c", i32 236, i32 8}
!187 = !{ptr @spi2_clk, !186, !"spi2_clk", i1 false, i1 false}
!188 = !{ptr @.str.131, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../drivers/clk/actions/owl-s900.c", i32 237, i32 8}
!190 = !{ptr @spi3_clk, !189, !"spi3_clk", i1 false, i1 false}
!191 = !{ptr @.str.134, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../drivers/clk/actions/owl-s900.c", i32 240, i32 8}
!193 = !{ptr @bisp_clk, !192, !"bisp_clk", i1 false, i1 false}
!194 = !{ptr @bisp_clk_mux_p, !195, !"bisp_clk_mux_p", i1 false, i1 false}
!195 = !{!"../drivers/clk/actions/owl-s900.c", i32 98, i32 20}
!196 = !{ptr @.str.137, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/clk/actions/owl-s900.c", i32 246, i32 8}
!198 = !{ptr @csi0_clk, !197, !"csi0_clk", i1 false, i1 false}
!199 = !{ptr @csi_clk_mux_p, !200, !"csi_clk_mux_p", i1 false, i1 false}
!200 = !{!"../drivers/clk/actions/owl-s900.c", i32 99, i32 20}
!201 = !{ptr @.str.140, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../drivers/clk/actions/owl-s900.c", i32 252, i32 8}
!203 = !{ptr @csi1_clk, !202, !"csi1_clk", i1 false, i1 false}
!204 = !{ptr @de_clk, !205, !"de_clk", i1 false, i1 false}
!205 = !{!"../drivers/clk/actions/owl-s900.c", i32 258, i32 8}
!206 = !{ptr @de_clk_mux_p, !207, !"de_clk_mux_p", i1 false, i1 false}
!207 = !{!"../drivers/clk/actions/owl-s900.c", i32 100, i32 20}
!208 = !{ptr @.str.144, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../drivers/clk/actions/owl-s900.c", i32 263, i32 8}
!210 = !{ptr @dmm_clk, !209, !"dmm_clk", i1 false, i1 false}
!211 = !{ptr @dmm_factor_table, !212, !"dmm_factor_table", i1 false, i1 false}
!212 = !{!"../drivers/clk/actions/owl-s900.c", i32 191, i32 32}
!213 = !{ptr @.str.147, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../drivers/clk/actions/owl-s900.c", i32 97, i32 85}
!215 = !{ptr @dmm_clk_mux_p, !216, !"dmm_clk_mux_p", i1 false, i1 false}
!216 = !{!"../drivers/clk/actions/owl-s900.c", i32 97, i32 20}
!217 = !{ptr @.str.148, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../drivers/clk/actions/owl-s900.c", i32 269, i32 8}
!219 = !{ptr @edp_clk, !218, !"edp_clk", i1 false, i1 false}
!220 = !{ptr @edp_clk_mux_p, !221, !"edp_clk_mux_p", i1 false, i1 false}
!221 = !{!"../drivers/clk/actions/owl-s900.c", i32 111, i32 20}
!222 = !{ptr @.str.151, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../drivers/clk/actions/owl-s900.c", i32 275, i32 8}
!224 = !{ptr @eth_mac_clk, !223, !"eth_mac_clk", i1 false, i1 false}
!225 = !{ptr @eth_mac_div_table, !226, !"eth_mac_div_table", i1 false, i1 false}
!226 = !{!"../drivers/clk/actions/owl-s900.c", i32 131, i32 29}
!227 = !{ptr @.str.155, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../drivers/clk/actions/owl-s900.c", i32 280, i32 8}
!229 = !{ptr @gpu_core_clk, !228, !"gpu_core_clk", i1 false, i1 false}
!230 = !{ptr @gpu_clk_mux_p, !231, !"gpu_clk_mux_p", i1 false, i1 false}
!231 = !{!"../drivers/clk/actions/owl-s900.c", i32 101, i32 20}
!232 = !{ptr @.str.158, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../drivers/clk/actions/owl-s900.c", i32 286, i32 8}
!234 = !{ptr @gpu_mem_clk, !233, !"gpu_mem_clk", i1 false, i1 false}
!235 = !{ptr @.str.161, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../drivers/clk/actions/owl-s900.c", i32 292, i32 8}
!237 = !{ptr @gpu_sys_clk, !236, !"gpu_sys_clk", i1 false, i1 false}
!238 = !{ptr @.str.164, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../drivers/clk/actions/owl-s900.c", i32 298, i32 8}
!240 = !{ptr @hde_clk, !239, !"hde_clk", i1 false, i1 false}
!241 = !{ptr @hde_clk_mux_p, !242, !"hde_clk_mux_p", i1 false, i1 false}
!242 = !{!"../drivers/clk/actions/owl-s900.c", i32 102, i32 20}
!243 = !{ptr @.str.167, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../drivers/clk/actions/owl-s900.c", i32 304, i32 8}
!245 = !{ptr @hdmia_clk, !244, !"hdmia_clk", i1 false, i1 false}
!246 = !{ptr @hdmia_div_table, !247, !"hdmia_div_table", i1 false, i1 false}
!247 = !{!"../drivers/clk/actions/owl-s900.c", i32 153, i32 29}
!248 = !{ptr @i2s_clk_mux_p, !249, !"i2s_clk_mux_p", i1 false, i1 false}
!249 = !{!"../drivers/clk/actions/owl-s900.c", i32 110, i32 20}
!250 = !{ptr @.str.170, !251, !"<string literal>", i1 false, i1 false}
!251 = !{!"../drivers/clk/actions/owl-s900.c", i32 334, i32 8}
!252 = !{ptr @i2srx_clk, !251, !"i2srx_clk", i1 false, i1 false}
!253 = !{ptr @i2s_div_table, !254, !"i2s_div_table", i1 false, i1 false}
!254 = !{!"../drivers/clk/actions/owl-s900.c", i32 146, i32 29}
!255 = !{ptr @.str.173, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../drivers/clk/actions/owl-s900.c", i32 340, i32 8}
!257 = !{ptr @i2stx_clk, !256, !"i2stx_clk", i1 false, i1 false}
!258 = !{ptr @.str.176, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../drivers/clk/actions/owl-s900.c", i32 346, i32 8}
!260 = !{ptr @imx_clk, !259, !"imx_clk", i1 false, i1 false}
!261 = !{ptr @imx_clk_mux_p, !262, !"imx_clk_mux_p", i1 false, i1 false}
!262 = !{!"../drivers/clk/actions/owl-s900.c", i32 103, i32 20}
!263 = !{ptr @.str.179, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../drivers/clk/actions/owl-s900.c", i32 352, i32 8}
!265 = !{ptr @lcd_clk, !264, !"lcd_clk", i1 false, i1 false}
!266 = !{ptr @lcd_clk_mux_p, !267, !"lcd_clk_mux_p", i1 false, i1 false}
!267 = !{!"../drivers/clk/actions/owl-s900.c", i32 104, i32 20}
!268 = !{ptr @.str.182, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../drivers/clk/actions/owl-s900.c", i32 358, i32 8}
!270 = !{ptr @nand0_clk, !269, !"nand0_clk", i1 false, i1 false}
!271 = !{ptr @nand_div_table, !272, !"nand_div_table", i1 false, i1 false}
!272 = !{!"../drivers/clk/actions/owl-s900.c", i32 118, i32 29}
!273 = !{ptr @nand_clk_mux_p, !274, !"nand_clk_mux_p", i1 false, i1 false}
!274 = !{!"../drivers/clk/actions/owl-s900.c", i32 105, i32 20}
!275 = !{ptr @.str.185, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../drivers/clk/actions/owl-s900.c", i32 364, i32 8}
!277 = !{ptr @nand1_clk, !276, !"nand1_clk", i1 false, i1 false}
!278 = !{ptr @.str.188, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../drivers/clk/actions/owl-s900.c", i32 370, i32 8}
!280 = !{ptr @pwm0_clk, !279, !"pwm0_clk", i1 false, i1 false}
!281 = !{ptr @.str.192, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/clk/actions/owl-s900.c", i32 375, i32 8}
!283 = !{ptr @pwm1_clk, !282, !"pwm1_clk", i1 false, i1 false}
!284 = !{ptr @.str.196, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../drivers/clk/actions/owl-s900.c", i32 386, i32 8}
!286 = !{ptr @pwm2_clk, !285, !"pwm2_clk", i1 false, i1 false}
!287 = !{ptr @.str.200, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../drivers/clk/actions/owl-s900.c", i32 391, i32 8}
!289 = !{ptr @pwm3_clk, !288, !"pwm3_clk", i1 false, i1 false}
!290 = !{ptr @.str.204, !291, !"<string literal>", i1 false, i1 false}
!291 = !{!"../drivers/clk/actions/owl-s900.c", i32 396, i32 8}
!292 = !{ptr @pwm4_clk, !291, !"pwm4_clk", i1 false, i1 false}
!293 = !{ptr @.str.208, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../drivers/clk/actions/owl-s900.c", i32 401, i32 8}
!295 = !{ptr @pwm5_clk, !294, !"pwm5_clk", i1 false, i1 false}
!296 = !{ptr @.str.212, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../drivers/clk/actions/owl-s900.c", i32 406, i32 8}
!298 = !{ptr @sd0_clk, !297, !"sd0_clk", i1 false, i1 false}
!299 = !{ptr @sd_factor_table, !300, !"sd_factor_table", i1 false, i1 false}
!300 = !{!"../drivers/clk/actions/owl-s900.c", i32 167, i32 32}
!301 = !{ptr @sd_clk_mux_p, !302, !"sd_clk_mux_p", i1 false, i1 false}
!302 = !{!"../drivers/clk/actions/owl-s900.c", i32 106, i32 20}
!303 = !{ptr @.str.215, !304, !"<string literal>", i1 false, i1 false}
!304 = !{!"../drivers/clk/actions/owl-s900.c", i32 412, i32 8}
!305 = !{ptr @sd1_clk, !304, !"sd1_clk", i1 false, i1 false}
!306 = !{ptr @.str.218, !307, !"<string literal>", i1 false, i1 false}
!307 = !{!"../drivers/clk/actions/owl-s900.c", i32 418, i32 8}
!308 = !{ptr @sd2_clk, !307, !"sd2_clk", i1 false, i1 false}
!309 = !{ptr @.str.221, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../drivers/clk/actions/owl-s900.c", i32 424, i32 8}
!311 = !{ptr @sd3_clk, !310, !"sd3_clk", i1 false, i1 false}
!312 = !{ptr @.str.224, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../drivers/clk/actions/owl-s900.c", i32 430, i32 8}
!314 = !{ptr @sensor_clk, !313, !"sensor_clk", i1 false, i1 false}
!315 = !{ptr @sensor_clk_mux_p, !316, !"sensor_clk_mux_p", i1 false, i1 false}
!316 = !{!"../drivers/clk/actions/owl-s900.c", i32 107, i32 20}
!317 = !{ptr @.str.227, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../drivers/clk/actions/owl-s900.c", i32 436, i32 8}
!319 = !{ptr @speed_sensor_clk, !318, !"speed_sensor_clk", i1 false, i1 false}
!320 = !{ptr @.str.231, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../drivers/clk/actions/owl-s900.c", i32 442, i32 8}
!322 = !{ptr @thermal_sensor_clk, !321, !"thermal_sensor_clk", i1 false, i1 false}
!323 = !{ptr @.str.235, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../drivers/clk/actions/owl-s900.c", i32 448, i32 8}
!325 = !{ptr @uart0_clk, !324, !"uart0_clk", i1 false, i1 false}
!326 = !{ptr @uart_clk_mux_p, !327, !"uart_clk_mux_p", i1 false, i1 false}
!327 = !{!"../drivers/clk/actions/owl-s900.c", i32 108, i32 20}
!328 = !{ptr @.str.238, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../drivers/clk/actions/owl-s900.c", i32 454, i32 8}
!330 = !{ptr @uart1_clk, !329, !"uart1_clk", i1 false, i1 false}
!331 = !{ptr @.str.241, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../drivers/clk/actions/owl-s900.c", i32 460, i32 8}
!333 = !{ptr @uart2_clk, !332, !"uart2_clk", i1 false, i1 false}
!334 = !{ptr @.str.244, !335, !"<string literal>", i1 false, i1 false}
!335 = !{!"../drivers/clk/actions/owl-s900.c", i32 466, i32 8}
!336 = !{ptr @uart3_clk, !335, !"uart3_clk", i1 false, i1 false}
!337 = !{ptr @.str.247, !338, !"<string literal>", i1 false, i1 false}
!338 = !{!"../drivers/clk/actions/owl-s900.c", i32 472, i32 8}
!339 = !{ptr @uart4_clk, !338, !"uart4_clk", i1 false, i1 false}
!340 = !{ptr @.str.250, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../drivers/clk/actions/owl-s900.c", i32 478, i32 8}
!342 = !{ptr @uart5_clk, !341, !"uart5_clk", i1 false, i1 false}
!343 = !{ptr @.str.253, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../drivers/clk/actions/owl-s900.c", i32 484, i32 8}
!345 = !{ptr @uart6_clk, !344, !"uart6_clk", i1 false, i1 false}
!346 = !{ptr @.str.256, !347, !"<string literal>", i1 false, i1 false}
!347 = !{!"../drivers/clk/actions/owl-s900.c", i32 490, i32 8}
!348 = !{ptr @vce_clk, !347, !"vce_clk", i1 false, i1 false}
!349 = !{ptr @vce_clk_mux_p, !350, !"vce_clk_mux_p", i1 false, i1 false}
!350 = !{!"../drivers/clk/actions/owl-s900.c", i32 109, i32 20}
!351 = !{ptr @.str.259, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../drivers/clk/actions/owl-s900.c", i32 496, i32 8}
!353 = !{ptr @vde_clk, !352, !"vde_clk", i1 false, i1 false}
!354 = !{ptr @s900_hw_clks, !355, !"s900_hw_clks", i1 false, i1 false}
!355 = !{!"../drivers/clk/actions/owl-s900.c", i32 594, i32 35}
!356 = !{ptr @s900_resets, !357, !"s900_resets", i1 false, i1 false}
!357 = !{!"../drivers/clk/actions/owl-s900.c", i32 689, i32 35}
!358 = !{ptr @s900_clk_of_match, !359, !"s900_clk_of_match", i1 false, i1 false}
!359 = !{!"../drivers/clk/actions/owl-s900.c", i32 786, i32 34}
!360 = !{i32 1, !"wchar_size", i32 2}
!361 = !{i32 1, !"min_enum_size", i32 4}
!362 = !{i32 8, !"branch-target-enforcement", i32 0}
!363 = !{i32 8, !"sign-return-address", i32 0}
!364 = !{i32 8, !"sign-return-address-all", i32 0}
!365 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!366 = !{i32 7, !"uwtable", i32 1}
!367 = !{i32 7, !"frame-pointer", i32 2}
!368 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
