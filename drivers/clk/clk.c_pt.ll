; ModuleID = '/llk/IR_all_yes/drivers/clk/clk.c_pt.bc'
source_filename = "../drivers/clk/clk.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+__clk_get_name\22, \22a\22\09"
module asm "\09.weak\09__crc___clk_get_name\09\09\09\09"
module asm "\09.long\09__crc___clk_get_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___clk_get_name:\09\09\09\09\09"
module asm "\09.asciz \09\22__clk_get_name\22\09\09\09\09\09"
module asm "__kstrtabns___clk_get_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_get_name\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_get_name\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_get_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_get_name:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_get_name\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_get_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__clk_get_hw\22, \22a\22\09"
module asm "\09.weak\09__crc___clk_get_hw\09\09\09\09"
module asm "\09.long\09__crc___clk_get_hw\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___clk_get_hw:\09\09\09\09\09"
module asm "\09.asciz \09\22__clk_get_hw\22\09\09\09\09\09"
module asm "__kstrtabns___clk_get_hw:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_get_num_parents\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_get_num_parents\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_get_num_parents\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_get_num_parents:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_get_num_parents\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_get_num_parents:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_get_parent\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_get_parent\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_get_parent\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_get_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_get_parent\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_get_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_get_parent_by_index\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_get_parent_by_index\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_get_parent_by_index\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_get_parent_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_get_parent_by_index\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_get_parent_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_get_rate\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_get_rate\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_get_rate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_get_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_get_rate\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_get_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_get_flags\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_get_flags\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_get_flags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_get_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_get_flags\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_get_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_is_prepared\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_is_prepared\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_is_prepared\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_is_prepared:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_is_prepared\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_is_prepared:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_rate_is_protected\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_rate_is_protected\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_rate_is_protected\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_rate_is_protected:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_rate_is_protected\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_rate_is_protected:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_is_enabled\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_is_enabled\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_is_enabled\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_is_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_is_enabled\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_is_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__clk_is_enabled\22, \22a\22\09"
module asm "\09.weak\09__crc___clk_is_enabled\09\09\09\09"
module asm "\09.long\09__crc___clk_is_enabled\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___clk_is_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22__clk_is_enabled\22\09\09\09\09\09"
module asm "__kstrtabns___clk_is_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_mux_determine_rate_flags\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_mux_determine_rate_flags\09\09\09\09"
module asm "\09.long\09__crc_clk_mux_determine_rate_flags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_mux_determine_rate_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_mux_determine_rate_flags\22\09\09\09\09\09"
module asm "__kstrtabns_clk_mux_determine_rate_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_set_rate_range\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_set_rate_range\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_set_rate_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_set_rate_range:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_set_rate_range\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_set_rate_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__clk_mux_determine_rate\22, \22a\22\09"
module asm "\09.weak\09__crc___clk_mux_determine_rate\09\09\09\09"
module asm "\09.long\09__crc___clk_mux_determine_rate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___clk_mux_determine_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22__clk_mux_determine_rate\22\09\09\09\09\09"
module asm "__kstrtabns___clk_mux_determine_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__clk_mux_determine_rate_closest\22, \22a\22\09"
module asm "\09.weak\09__crc___clk_mux_determine_rate_closest\09\09\09\09"
module asm "\09.long\09__crc___clk_mux_determine_rate_closest\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___clk_mux_determine_rate_closest:\09\09\09\09\09"
module asm "\09.asciz \09\22__clk_mux_determine_rate_closest\22\09\09\09\09\09"
module asm "__kstrtabns___clk_mux_determine_rate_closest:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_rate_exclusive_put\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_rate_exclusive_put\09\09\09\09"
module asm "\09.long\09__crc_clk_rate_exclusive_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_rate_exclusive_put:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_rate_exclusive_put\22\09\09\09\09\09"
module asm "__kstrtabns_clk_rate_exclusive_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_rate_exclusive_get\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_rate_exclusive_get\09\09\09\09"
module asm "\09.long\09__crc_clk_rate_exclusive_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_rate_exclusive_get:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_rate_exclusive_get\22\09\09\09\09\09"
module asm "__kstrtabns_clk_rate_exclusive_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_unprepare\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_unprepare\09\09\09\09"
module asm "\09.long\09__crc_clk_unprepare\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_unprepare:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_unprepare\22\09\09\09\09\09"
module asm "__kstrtabns_clk_unprepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_prepare\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_prepare\09\09\09\09"
module asm "\09.long\09__crc_clk_prepare\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_prepare\22\09\09\09\09\09"
module asm "__kstrtabns_clk_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_disable\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_disable\09\09\09\09"
module asm "\09.long\09__crc_clk_disable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_disable\22\09\09\09\09\09"
module asm "__kstrtabns_clk_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_gate_restore_context\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_gate_restore_context\09\09\09\09"
module asm "\09.long\09__crc_clk_gate_restore_context\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_gate_restore_context:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_gate_restore_context\22\09\09\09\09\09"
module asm "__kstrtabns_clk_gate_restore_context:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_save_context\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_save_context\09\09\09\09"
module asm "\09.long\09__crc_clk_save_context\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_save_context:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_save_context\22\09\09\09\09\09"
module asm "__kstrtabns_clk_save_context:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_restore_context\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_restore_context\09\09\09\09"
module asm "\09.long\09__crc_clk_restore_context\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_restore_context:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_restore_context\22\09\09\09\09\09"
module asm "__kstrtabns_clk_restore_context:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_enable\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_enable\09\09\09\09"
module asm "\09.long\09__crc_clk_enable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_enable\22\09\09\09\09\09"
module asm "__kstrtabns_clk_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_is_enabled_when_prepared\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_is_enabled_when_prepared\09\09\09\09"
module asm "\09.long\09__crc_clk_is_enabled_when_prepared\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_is_enabled_when_prepared:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_is_enabled_when_prepared\22\09\09\09\09\09"
module asm "__kstrtabns_clk_is_enabled_when_prepared:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__clk_determine_rate\22, \22a\22\09"
module asm "\09.weak\09__crc___clk_determine_rate\09\09\09\09"
module asm "\09.long\09__crc___clk_determine_rate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___clk_determine_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22__clk_determine_rate\22\09\09\09\09\09"
module asm "__kstrtabns___clk_determine_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_round_rate\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_round_rate\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_round_rate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_round_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_round_rate\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_round_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_round_rate\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_round_rate\09\09\09\09"
module asm "\09.long\09__crc_clk_round_rate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_round_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_round_rate\22\09\09\09\09\09"
module asm "__kstrtabns_clk_round_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_get_accuracy\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_get_accuracy\09\09\09\09"
module asm "\09.long\09__crc_clk_get_accuracy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_get_accuracy:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_get_accuracy\22\09\09\09\09\09"
module asm "__kstrtabns_clk_get_accuracy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_get_rate\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_get_rate\09\09\09\09"
module asm "\09.long\09__crc_clk_get_rate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_get_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_get_rate\22\09\09\09\09\09"
module asm "__kstrtabns_clk_get_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_get_parent_index\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_get_parent_index\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_get_parent_index\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_get_parent_index:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_get_parent_index\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_get_parent_index:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_set_rate\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_set_rate\09\09\09\09"
module asm "\09.long\09__crc_clk_set_rate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_set_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_set_rate\22\09\09\09\09\09"
module asm "__kstrtabns_clk_set_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_set_rate_exclusive\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_set_rate_exclusive\09\09\09\09"
module asm "\09.long\09__crc_clk_set_rate_exclusive\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_set_rate_exclusive:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_set_rate_exclusive\22\09\09\09\09\09"
module asm "__kstrtabns_clk_set_rate_exclusive:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_set_rate_range\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_set_rate_range\09\09\09\09"
module asm "\09.long\09__crc_clk_set_rate_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_set_rate_range:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_set_rate_range\22\09\09\09\09\09"
module asm "__kstrtabns_clk_set_rate_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_set_min_rate\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_set_min_rate\09\09\09\09"
module asm "\09.long\09__crc_clk_set_min_rate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_set_min_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_set_min_rate\22\09\09\09\09\09"
module asm "__kstrtabns_clk_set_min_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_set_max_rate\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_set_max_rate\09\09\09\09"
module asm "\09.long\09__crc_clk_set_max_rate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_set_max_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_set_max_rate\22\09\09\09\09\09"
module asm "__kstrtabns_clk_set_max_rate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_get_parent\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_get_parent\09\09\09\09"
module asm "\09.long\09__crc_clk_get_parent\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_get_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_get_parent\22\09\09\09\09\09"
module asm "__kstrtabns_clk_get_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_has_parent\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_has_parent\09\09\09\09"
module asm "\09.long\09__crc_clk_has_parent\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_has_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_has_parent\22\09\09\09\09\09"
module asm "__kstrtabns_clk_has_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_set_parent\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_set_parent\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_set_parent\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_set_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_set_parent\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_set_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_set_parent\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_set_parent\09\09\09\09"
module asm "\09.long\09__crc_clk_set_parent\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_set_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_set_parent\22\09\09\09\09\09"
module asm "__kstrtabns_clk_set_parent:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_set_phase\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_set_phase\09\09\09\09"
module asm "\09.long\09__crc_clk_set_phase\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_set_phase:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_set_phase\22\09\09\09\09\09"
module asm "__kstrtabns_clk_set_phase:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_get_phase\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_get_phase\09\09\09\09"
module asm "\09.long\09__crc_clk_get_phase\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_get_phase:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_get_phase\22\09\09\09\09\09"
module asm "__kstrtabns_clk_get_phase:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_set_duty_cycle\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_set_duty_cycle\09\09\09\09"
module asm "\09.long\09__crc_clk_set_duty_cycle\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_set_duty_cycle:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_set_duty_cycle\22\09\09\09\09\09"
module asm "__kstrtabns_clk_set_duty_cycle:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_get_scaled_duty_cycle\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_get_scaled_duty_cycle\09\09\09\09"
module asm "\09.long\09__crc_clk_get_scaled_duty_cycle\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_get_scaled_duty_cycle:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_get_scaled_duty_cycle\22\09\09\09\09\09"
module asm "__kstrtabns_clk_get_scaled_duty_cycle:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_is_match\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_is_match\09\09\09\09"
module asm "\09.long\09__crc_clk_is_match\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_is_match:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_is_match\22\09\09\09\09\09"
module asm "__kstrtabns_clk_is_match:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+clk_hw_get_clk\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_get_clk\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_get_clk\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_get_clk:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_get_clk\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_get_clk:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_register\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_register\09\09\09\09"
module asm "\09.long\09__crc_clk_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_register:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_register\22\09\09\09\09\09"
module asm "__kstrtabns_clk_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_register\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_register\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_register:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_register\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_hw_register\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_hw_register\09\09\09\09"
module asm "\09.long\09__crc_of_clk_hw_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_hw_register:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_hw_register\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_hw_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_unregister\09\09\09\09"
module asm "\09.long\09__crc_clk_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_clk_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_hw_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_hw_unregister\09\09\09\09"
module asm "\09.long\09__crc_clk_hw_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_hw_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_hw_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_clk_hw_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_clk_register\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_clk_register\09\09\09\09"
module asm "\09.long\09__crc_devm_clk_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_clk_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_clk_register\22\09\09\09\09\09"
module asm "__kstrtabns_devm_clk_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_clk_hw_register\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_clk_hw_register\09\09\09\09"
module asm "\09.long\09__crc_devm_clk_hw_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_clk_hw_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_clk_hw_register\22\09\09\09\09\09"
module asm "__kstrtabns_devm_clk_hw_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_clk_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_clk_unregister\09\09\09\09"
module asm "\09.long\09__crc_devm_clk_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_clk_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_clk_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devm_clk_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_clk_hw_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_clk_hw_unregister\09\09\09\09"
module asm "\09.long\09__crc_devm_clk_hw_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_clk_hw_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_clk_hw_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devm_clk_hw_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_clk_hw_get_clk\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_clk_hw_get_clk\09\09\09\09"
module asm "\09.long\09__crc_devm_clk_hw_get_clk\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_clk_hw_get_clk:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_clk_hw_get_clk\22\09\09\09\09\09"
module asm "__kstrtabns_devm_clk_hw_get_clk:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_notifier_register\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_notifier_register\09\09\09\09"
module asm "\09.long\09__crc_clk_notifier_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_notifier_register:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_notifier_register\22\09\09\09\09\09"
module asm "__kstrtabns_clk_notifier_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clk_notifier_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_clk_notifier_unregister\09\09\09\09"
module asm "\09.long\09__crc_clk_notifier_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clk_notifier_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22clk_notifier_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_clk_notifier_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_clk_notifier_register\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_clk_notifier_register\09\09\09\09"
module asm "\09.long\09__crc_devm_clk_notifier_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_clk_notifier_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_clk_notifier_register\22\09\09\09\09\09"
module asm "__kstrtabns_devm_clk_notifier_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_src_simple_get\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_src_simple_get\09\09\09\09"
module asm "\09.long\09__crc_of_clk_src_simple_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_src_simple_get:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_src_simple_get\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_src_simple_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_hw_simple_get\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_hw_simple_get\09\09\09\09"
module asm "\09.long\09__crc_of_clk_hw_simple_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_hw_simple_get:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_hw_simple_get\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_hw_simple_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_src_onecell_get\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_src_onecell_get\09\09\09\09"
module asm "\09.long\09__crc_of_clk_src_onecell_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_src_onecell_get:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_src_onecell_get\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_src_onecell_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_hw_onecell_get\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_hw_onecell_get\09\09\09\09"
module asm "\09.long\09__crc_of_clk_hw_onecell_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_hw_onecell_get:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_hw_onecell_get\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_hw_onecell_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_add_provider\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_add_provider\09\09\09\09"
module asm "\09.long\09__crc_of_clk_add_provider\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_add_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_add_provider\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_add_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_add_hw_provider\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_add_hw_provider\09\09\09\09"
module asm "\09.long\09__crc_of_clk_add_hw_provider\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_add_hw_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_add_hw_provider\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_add_hw_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_of_clk_add_hw_provider\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_of_clk_add_hw_provider\09\09\09\09"
module asm "\09.long\09__crc_devm_of_clk_add_hw_provider\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_of_clk_add_hw_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_of_clk_add_hw_provider\22\09\09\09\09\09"
module asm "__kstrtabns_devm_of_clk_add_hw_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_del_provider\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_del_provider\09\09\09\09"
module asm "\09.long\09__crc_of_clk_del_provider\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_del_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_del_provider\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_del_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+devm_of_clk_del_provider\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_of_clk_del_provider\09\09\09\09"
module asm "\09.long\09__crc_devm_of_clk_del_provider\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_of_clk_del_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_of_clk_del_provider\22\09\09\09\09\09"
module asm "__kstrtabns_devm_of_clk_del_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_get_from_provider\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_get_from_provider\09\09\09\09"
module asm "\09.long\09__crc_of_clk_get_from_provider\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_get_from_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_get_from_provider\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_get_from_provider:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+of_clk_get\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_get\09\09\09\09"
module asm "\09.long\09__crc_of_clk_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_get:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_get\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+of_clk_get_by_name\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_get_by_name\09\09\09\09"
module asm "\09.long\09__crc_of_clk_get_by_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_get_by_name\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_get_parent_count\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_get_parent_count\09\09\09\09"
module asm "\09.long\09__crc_of_clk_get_parent_count\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_get_parent_count:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_get_parent_count\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_get_parent_count:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_get_parent_name\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_get_parent_name\09\09\09\09"
module asm "\09.long\09__crc_of_clk_get_parent_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_get_parent_name:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_get_parent_name\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_get_parent_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_clk_parent_fill\22, \22a\22\09"
module asm "\09.weak\09__crc_of_clk_parent_fill\09\09\09\09"
module asm "\09.long\09__crc_of_clk_parent_fill\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_clk_parent_fill:\09\09\09\09\09"
module asm "\09.asciz \09\22of_clk_parent_fill\22\09\09\09\09\09"
module asm "__kstrtabns_of_clk_parent_fill:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.95 }
%union.anon.95 = type { %struct.anon.96 }
%struct.anon.96 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.97, %struct.trace_event, ptr, ptr, %union.anon.98, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.97 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.98 = type { ptr }
%union.anon.99 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.100 = type { %struct.bpf_raw_event_map }
%union.anon.101 = type { %struct.bpf_raw_event_map }
%union.anon.102 = type { %struct.bpf_raw_event_map }
%union.anon.103 = type { %struct.bpf_raw_event_map }
%union.anon.104 = type { %struct.bpf_raw_event_map }
%union.anon.105 = type { %struct.bpf_raw_event_map }
%union.anon.106 = type { %struct.bpf_raw_event_map }
%union.anon.107 = type { %struct.bpf_raw_event_map }
%union.anon.108 = type { %struct.bpf_raw_event_map }
%union.anon.109 = type { %struct.bpf_raw_event_map }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%union.anon.111 = type { %struct.bpf_raw_event_map }
%union.anon.112 = type { %struct.bpf_raw_event_map }
%union.anon.113 = type { %struct.bpf_raw_event_map }
%union.anon.114 = type { %struct.bpf_raw_event_map }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%union.anon.116 = type { %struct.bpf_raw_event_map }
%union.anon.117 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.hlist_head = type { ptr }
%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.clk_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], ptr }
%struct.cpumask = type { [1 x i32] }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.srcu_struct = type { [3 x %struct.srcu_node], [3 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.anon.119 = type { i32, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_clk = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_clk_rate = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_clk_rate_range = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_clk_parent = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_clk_phase = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_clk_duty_cycle = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.clk_duty = type { i32, i32 }
%struct.clk_core = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i32, i32, i32, ptr, ptr, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, %struct.clk_duty, %struct.hlist_head, %struct.hlist_node, %struct.hlist_head, i32, ptr, %struct.hlist_node, %struct.kref }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.clk_parent_map = type { ptr, ptr, ptr, ptr, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.clk_rate_request = type { i32, i32, i32, i32, ptr }
%struct.clk_hw = type { ptr, ptr, ptr }
%struct.clk = type { ptr, ptr, ptr, ptr, i32, i32, i32, %struct.hlist_node }
%struct.clk_init_data = type { ptr, ptr, ptr, ptr, ptr, i8, i32 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.clk_parent_data = type { ptr, ptr, ptr, i32 }
%struct.clk_notifier = type { ptr, %struct.srcu_notifier_head, %struct.list_head }
%struct.srcu_notifier_head = type { %struct.mutex, %struct.srcu_struct, ptr }
%struct.clk_notifier_devres = type { ptr, ptr }
%struct.of_phandle_args = type { ptr, i32, [16 x i32] }
%struct.clk_onecell_data = type { ptr, i32 }
%struct.clk_hw_onecell_data = type { i32, [0 x ptr] }
%struct.of_clk_provider = type { %struct.list_head, ptr, ptr, ptr, ptr }
%struct.device_node = type { ptr, i32, ptr, %struct.fwnode_handle, ptr, ptr, ptr, ptr, ptr, %struct.kobject, i32, ptr }
%struct.fwnode_handle = type { ptr, ptr, ptr, %struct.list_head, %struct.list_head, i8 }
%struct.clock_provider = type { ptr, ptr, %struct.list_head }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.clk_notifier_data = type { ptr, i32, i32 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.63, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.64, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.65, ptr, %struct.address_space, %struct.list_head, %union.anon.66, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.63 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%union.anon.64 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.atomic64_t = type { i64 }
%union.anon.65 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%union.anon.66 = type { ptr }
%struct.seq_file = type { ptr, i32, i32, i32, i32, i64, i64, %struct.mutex, ptr, i32, ptr, ptr }

@__tpstrtab_clk_enable = internal constant [11 x i8] c"clk_enable\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_enable = dso_local global %struct.static_call_key { ptr @__traceiter_clk_enable }, align 4
@__tracepoint_clk_enable = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_enable, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_enable, ptr null, ptr @__traceiter_clk_enable, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_enable = internal constant ptr @__tracepoint_clk_enable, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_enable_complete = internal constant [20 x i8] c"clk_enable_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_enable_complete = dso_local global %struct.static_call_key { ptr @__traceiter_clk_enable_complete }, align 4
@__tracepoint_clk_enable_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_enable_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_enable_complete, ptr null, ptr @__traceiter_clk_enable_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_enable_complete = internal constant ptr @__tracepoint_clk_enable_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_disable = internal constant [12 x i8] c"clk_disable\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_disable = dso_local global %struct.static_call_key { ptr @__traceiter_clk_disable }, align 4
@__tracepoint_clk_disable = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_disable, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_disable, ptr null, ptr @__traceiter_clk_disable, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_disable = internal constant ptr @__tracepoint_clk_disable, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_disable_complete = internal constant [21 x i8] c"clk_disable_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_disable_complete = dso_local global %struct.static_call_key { ptr @__traceiter_clk_disable_complete }, align 4
@__tracepoint_clk_disable_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_disable_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_disable_complete, ptr null, ptr @__traceiter_clk_disable_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_disable_complete = internal constant ptr @__tracepoint_clk_disable_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_prepare = internal constant [12 x i8] c"clk_prepare\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_prepare = dso_local global %struct.static_call_key { ptr @__traceiter_clk_prepare }, align 4
@__tracepoint_clk_prepare = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_prepare, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_prepare, ptr null, ptr @__traceiter_clk_prepare, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_prepare = internal constant ptr @__tracepoint_clk_prepare, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_prepare_complete = internal constant [21 x i8] c"clk_prepare_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_prepare_complete = dso_local global %struct.static_call_key { ptr @__traceiter_clk_prepare_complete }, align 4
@__tracepoint_clk_prepare_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_prepare_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_prepare_complete, ptr null, ptr @__traceiter_clk_prepare_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_prepare_complete = internal constant ptr @__tracepoint_clk_prepare_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_unprepare = internal constant [14 x i8] c"clk_unprepare\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_unprepare = dso_local global %struct.static_call_key { ptr @__traceiter_clk_unprepare }, align 4
@__tracepoint_clk_unprepare = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_unprepare, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_unprepare, ptr null, ptr @__traceiter_clk_unprepare, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_unprepare = internal constant ptr @__tracepoint_clk_unprepare, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_unprepare_complete = internal constant [23 x i8] c"clk_unprepare_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_unprepare_complete = dso_local global %struct.static_call_key { ptr @__traceiter_clk_unprepare_complete }, align 4
@__tracepoint_clk_unprepare_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_unprepare_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_unprepare_complete, ptr null, ptr @__traceiter_clk_unprepare_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_unprepare_complete = internal constant ptr @__tracepoint_clk_unprepare_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_rate = internal constant [13 x i8] c"clk_set_rate\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_rate = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_rate }, align 4
@__tracepoint_clk_set_rate = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_rate, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_rate, ptr null, ptr @__traceiter_clk_set_rate, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_rate = internal constant ptr @__tracepoint_clk_set_rate, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_rate_complete = internal constant [22 x i8] c"clk_set_rate_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_rate_complete = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_rate_complete }, align 4
@__tracepoint_clk_set_rate_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_rate_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_rate_complete, ptr null, ptr @__traceiter_clk_set_rate_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_rate_complete = internal constant ptr @__tracepoint_clk_set_rate_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_min_rate = internal constant [17 x i8] c"clk_set_min_rate\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_min_rate = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_min_rate }, align 4
@__tracepoint_clk_set_min_rate = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_min_rate, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_min_rate, ptr null, ptr @__traceiter_clk_set_min_rate, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_min_rate = internal constant ptr @__tracepoint_clk_set_min_rate, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_max_rate = internal constant [17 x i8] c"clk_set_max_rate\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_max_rate = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_max_rate }, align 4
@__tracepoint_clk_set_max_rate = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_max_rate, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_max_rate, ptr null, ptr @__traceiter_clk_set_max_rate, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_max_rate = internal constant ptr @__tracepoint_clk_set_max_rate, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_rate_range = internal constant [19 x i8] c"clk_set_rate_range\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_rate_range = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_rate_range }, align 4
@__tracepoint_clk_set_rate_range = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_rate_range, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_rate_range, ptr null, ptr @__traceiter_clk_set_rate_range, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_rate_range = internal constant ptr @__tracepoint_clk_set_rate_range, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_parent = internal constant [15 x i8] c"clk_set_parent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_parent = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_parent }, align 4
@__tracepoint_clk_set_parent = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_parent, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_parent, ptr null, ptr @__traceiter_clk_set_parent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_parent = internal constant ptr @__tracepoint_clk_set_parent, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_parent_complete = internal constant [24 x i8] c"clk_set_parent_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_parent_complete = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_parent_complete }, align 4
@__tracepoint_clk_set_parent_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_parent_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_parent_complete, ptr null, ptr @__traceiter_clk_set_parent_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_parent_complete = internal constant ptr @__tracepoint_clk_set_parent_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_phase = internal constant [14 x i8] c"clk_set_phase\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_phase = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_phase }, align 4
@__tracepoint_clk_set_phase = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_phase, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_phase, ptr null, ptr @__traceiter_clk_set_phase, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_phase = internal constant ptr @__tracepoint_clk_set_phase, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_phase_complete = internal constant [23 x i8] c"clk_set_phase_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_phase_complete = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_phase_complete }, align 4
@__tracepoint_clk_set_phase_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_phase_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_phase_complete, ptr null, ptr @__traceiter_clk_set_phase_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_phase_complete = internal constant ptr @__tracepoint_clk_set_phase_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_duty_cycle = internal constant [19 x i8] c"clk_set_duty_cycle\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_duty_cycle = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_duty_cycle }, align 4
@__tracepoint_clk_set_duty_cycle = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_duty_cycle, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_duty_cycle, ptr null, ptr @__traceiter_clk_set_duty_cycle, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_duty_cycle = internal constant ptr @__tracepoint_clk_set_duty_cycle, section "__tracepoints_ptrs", align 4
@__tpstrtab_clk_set_duty_cycle_complete = internal constant [28 x i8] c"clk_set_duty_cycle_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_clk_set_duty_cycle_complete = dso_local global %struct.static_call_key { ptr @__traceiter_clk_set_duty_cycle_complete }, align 4
@__tracepoint_clk_set_duty_cycle_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_clk_set_duty_cycle_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_clk_set_duty_cycle_complete, ptr null, ptr @__traceiter_clk_set_duty_cycle_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_clk_set_duty_cycle_complete = internal constant ptr @__tracepoint_clk_set_duty_cycle_complete, section "__tracepoints_ptrs", align 4
@str__clk__trace_system_name = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"clk\00", [28 x i8] zeroinitializer }, align 32
@trace_event_fields_clk = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.95 { %struct.anon.96 { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_clk = internal global %struct.trace_event_class { ptr @str__clk__trace_system_name, ptr @trace_event_raw_event_clk, ptr @perf_trace_clk, ptr @trace_event_reg, ptr @trace_event_fields_clk, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_clk, i64 24), ptr getelementptr (i8, ptr @event_class_clk, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_clk = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_clk, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_clk = internal global { [22 x i8], [42 x i8] } { [22 x i8] c"\22%s\22, __get_str(name)\00", [42 x i8] zeroinitializer }, align 32
@event_clk_enable = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk, %union.anon.97 { ptr @__tracepoint_clk_enable }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk }, ptr @print_fmt_clk, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_enable = internal global ptr @event_clk_enable, section "_ftrace_events", align 4
@event_clk_enable_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk, %union.anon.97 { ptr @__tracepoint_clk_enable_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk }, ptr @print_fmt_clk, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_enable_complete = internal global ptr @event_clk_enable_complete, section "_ftrace_events", align 4
@event_clk_disable = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk, %union.anon.97 { ptr @__tracepoint_clk_disable }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk }, ptr @print_fmt_clk, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_disable = internal global ptr @event_clk_disable, section "_ftrace_events", align 4
@event_clk_disable_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk, %union.anon.97 { ptr @__tracepoint_clk_disable_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk }, ptr @print_fmt_clk, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_disable_complete = internal global ptr @event_clk_disable_complete, section "_ftrace_events", align 4
@event_clk_prepare = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk, %union.anon.97 { ptr @__tracepoint_clk_prepare }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk }, ptr @print_fmt_clk, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_prepare = internal global ptr @event_clk_prepare, section "_ftrace_events", align 4
@event_clk_prepare_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk, %union.anon.97 { ptr @__tracepoint_clk_prepare_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk }, ptr @print_fmt_clk, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_prepare_complete = internal global ptr @event_clk_prepare_complete, section "_ftrace_events", align 4
@event_clk_unprepare = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk, %union.anon.97 { ptr @__tracepoint_clk_unprepare }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk }, ptr @print_fmt_clk, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_unprepare = internal global ptr @event_clk_unprepare, section "_ftrace_events", align 4
@event_clk_unprepare_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk, %union.anon.97 { ptr @__tracepoint_clk_unprepare_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk }, ptr @print_fmt_clk, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_unprepare_complete = internal global ptr @event_clk_unprepare_complete, section "_ftrace_events", align 4
@trace_event_fields_clk_rate = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.95 { %struct.anon.96 { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.95 { %struct.anon.96 { ptr @.str.35, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_clk_rate = internal global %struct.trace_event_class { ptr @str__clk__trace_system_name, ptr @trace_event_raw_event_clk_rate, ptr @perf_trace_clk_rate, ptr @trace_event_reg, ptr @trace_event_fields_clk_rate, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_clk_rate, i64 24), ptr getelementptr (i8, ptr @event_class_clk_rate, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_clk_rate = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_clk_rate, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_clk_rate = internal global { [52 x i8], [44 x i8] } { [52 x i8] c"\22%s %lu\22, __get_str(name), (unsigned long)REC->rate\00", [44 x i8] zeroinitializer }, align 32
@event_clk_set_rate = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_rate, %union.anon.97 { ptr @__tracepoint_clk_set_rate }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_rate }, ptr @print_fmt_clk_rate, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_rate = internal global ptr @event_clk_set_rate, section "_ftrace_events", align 4
@event_clk_set_rate_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_rate, %union.anon.97 { ptr @__tracepoint_clk_set_rate_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_rate }, ptr @print_fmt_clk_rate, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_rate_complete = internal global ptr @event_clk_set_rate_complete, section "_ftrace_events", align 4
@event_clk_set_min_rate = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_rate, %union.anon.97 { ptr @__tracepoint_clk_set_min_rate }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_rate }, ptr @print_fmt_clk_rate, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_min_rate = internal global ptr @event_clk_set_min_rate, section "_ftrace_events", align 4
@event_clk_set_max_rate = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_rate, %union.anon.97 { ptr @__tracepoint_clk_set_max_rate }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_rate }, ptr @print_fmt_clk_rate, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_max_rate = internal global ptr @event_clk_set_max_rate, section "_ftrace_events", align 4
@trace_event_fields_clk_rate_range = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.95 { %struct.anon.96 { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.95 { %struct.anon.96 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.95 { %struct.anon.96 { ptr @.str.38, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_clk_rate_range = internal global %struct.trace_event_class { ptr @str__clk__trace_system_name, ptr @trace_event_raw_event_clk_rate_range, ptr @perf_trace_clk_rate_range, ptr @trace_event_reg, ptr @trace_event_fields_clk_rate_range, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_clk_rate_range, i64 24), ptr getelementptr (i8, ptr @event_class_clk_rate_range, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_clk_rate_range = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_clk_rate_range, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_clk_rate_range = internal global { [88 x i8], [40 x i8] } { [88 x i8] c"\22%s min %lu max %lu\22, __get_str(name), (unsigned long)REC->min, (unsigned long)REC->max\00", [40 x i8] zeroinitializer }, align 32
@event_clk_set_rate_range = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_rate_range, %union.anon.97 { ptr @__tracepoint_clk_set_rate_range }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_rate_range }, ptr @print_fmt_clk_rate_range, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_rate_range = internal global ptr @event_clk_set_rate_range, section "_ftrace_events", align 4
@trace_event_fields_clk_parent = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.95 { %struct.anon.96 { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.95 { %struct.anon.96 { ptr @.str.41, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_clk_parent = internal global %struct.trace_event_class { ptr @str__clk__trace_system_name, ptr @trace_event_raw_event_clk_parent, ptr @perf_trace_clk_parent, ptr @trace_event_reg, ptr @trace_event_fields_clk_parent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_clk_parent, i64 24), ptr getelementptr (i8, ptr @event_class_clk_parent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_clk_parent = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_clk_parent, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_clk_parent = internal global { [43 x i8], [53 x i8] } { [43 x i8] c"\22%s %s\22, __get_str(name), __get_str(pname)\00", [53 x i8] zeroinitializer }, align 32
@event_clk_set_parent = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_parent, %union.anon.97 { ptr @__tracepoint_clk_set_parent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_parent }, ptr @print_fmt_clk_parent, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_parent = internal global ptr @event_clk_set_parent, section "_ftrace_events", align 4
@event_clk_set_parent_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_parent, %union.anon.97 { ptr @__tracepoint_clk_set_parent_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_parent }, ptr @print_fmt_clk_parent, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_parent_complete = internal global ptr @event_clk_set_parent_complete, section "_ftrace_events", align 4
@trace_event_fields_clk_phase = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.95 { %struct.anon.96 { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.95 { %struct.anon.96 { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_clk_phase = internal global %struct.trace_event_class { ptr @str__clk__trace_system_name, ptr @trace_event_raw_event_clk_phase, ptr @perf_trace_clk_phase, ptr @trace_event_reg, ptr @trace_event_fields_clk_phase, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_clk_phase, i64 24), ptr getelementptr (i8, ptr @event_class_clk_phase, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_clk_phase = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_clk_phase, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_clk_phase = internal global { [42 x i8], [54 x i8] } { [42 x i8] c"\22%s %d\22, __get_str(name), (int)REC->phase\00", [54 x i8] zeroinitializer }, align 32
@event_clk_set_phase = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_phase, %union.anon.97 { ptr @__tracepoint_clk_set_phase }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_phase }, ptr @print_fmt_clk_phase, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_phase = internal global ptr @event_clk_set_phase, section "_ftrace_events", align 4
@event_clk_set_phase_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_phase, %union.anon.97 { ptr @__tracepoint_clk_set_phase_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_phase }, ptr @print_fmt_clk_phase, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_phase_complete = internal global ptr @event_clk_set_phase_complete, section "_ftrace_events", align 4
@trace_event_fields_clk_duty_cycle = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.95 { %struct.anon.96 { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.95 { %struct.anon.96 { ptr @.str.47, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.95 { %struct.anon.96 { ptr @.str.48, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_clk_duty_cycle = internal global %struct.trace_event_class { ptr @str__clk__trace_system_name, ptr @trace_event_raw_event_clk_duty_cycle, ptr @perf_trace_clk_duty_cycle, ptr @trace_event_reg, ptr @trace_event_fields_clk_duty_cycle, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_clk_duty_cycle, i64 24), ptr getelementptr (i8, ptr @event_class_clk_duty_cycle, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_clk_duty_cycle = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_clk_duty_cycle, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_clk_duty_cycle = internal global { [76 x i8], [52 x i8] } { [76 x i8] c"\22%s %u/%u\22, __get_str(name), (unsigned int)REC->num, (unsigned int)REC->den\00", [52 x i8] zeroinitializer }, align 32
@event_clk_set_duty_cycle = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_duty_cycle, %union.anon.97 { ptr @__tracepoint_clk_set_duty_cycle }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_duty_cycle }, ptr @print_fmt_clk_duty_cycle, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_duty_cycle = internal global ptr @event_clk_set_duty_cycle, section "_ftrace_events", align 4
@event_clk_set_duty_cycle_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_clk_duty_cycle, %union.anon.97 { ptr @__tracepoint_clk_set_duty_cycle_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_clk_duty_cycle }, ptr @print_fmt_clk_duty_cycle, ptr null, %union.anon.98 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_clk_set_duty_cycle_complete = internal global ptr @event_clk_set_duty_cycle_complete, section "_ftrace_events", align 4
@__bpf_trace_tp_map_clk_enable = internal global %union.anon.99 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_enable, ptr @__bpf_trace_clk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_enable_complete = internal global %union.anon.100 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_enable_complete, ptr @__bpf_trace_clk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_disable = internal global %union.anon.101 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_disable, ptr @__bpf_trace_clk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_disable_complete = internal global %union.anon.102 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_disable_complete, ptr @__bpf_trace_clk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_prepare = internal global %union.anon.103 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_prepare, ptr @__bpf_trace_clk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_prepare_complete = internal global %union.anon.104 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_prepare_complete, ptr @__bpf_trace_clk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_unprepare = internal global %union.anon.105 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_unprepare, ptr @__bpf_trace_clk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_unprepare_complete = internal global %union.anon.106 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_unprepare_complete, ptr @__bpf_trace_clk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_rate = internal global %union.anon.107 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_rate, ptr @__bpf_trace_clk_rate, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_rate_complete = internal global %union.anon.108 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_rate_complete, ptr @__bpf_trace_clk_rate, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_min_rate = internal global %union.anon.109 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_min_rate, ptr @__bpf_trace_clk_rate, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_max_rate = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_max_rate, ptr @__bpf_trace_clk_rate, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_rate_range = internal global %union.anon.111 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_rate_range, ptr @__bpf_trace_clk_rate_range, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_parent = internal global %union.anon.112 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_parent, ptr @__bpf_trace_clk_parent, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_parent_complete = internal global %union.anon.113 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_parent_complete, ptr @__bpf_trace_clk_parent, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_phase = internal global %union.anon.114 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_phase, ptr @__bpf_trace_clk_phase, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_phase_complete = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_phase_complete, ptr @__bpf_trace_clk_phase, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_duty_cycle = internal global %union.anon.116 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_duty_cycle, ptr @__bpf_trace_clk_duty_cycle, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_clk_set_duty_cycle_complete = internal global %union.anon.117 { %struct.bpf_raw_event_map { ptr @__tracepoint_clk_set_duty_cycle_complete, ptr @__bpf_trace_clk_duty_cycle, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__kstrtab___clk_get_name = external dso_local constant [0 x i8], align 1
@__kstrtabns___clk_get_name = external dso_local constant [0 x i8], align 1
@__ksymtab___clk_get_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__clk_get_name to i32), ptr @__kstrtab___clk_get_name, ptr @__kstrtabns___clk_get_name }, section "___ksymtab_gpl+__clk_get_name", align 4
@__kstrtab_clk_hw_get_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_get_name = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_get_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_get_name to i32), ptr @__kstrtab_clk_hw_get_name, ptr @__kstrtabns_clk_hw_get_name }, section "___ksymtab_gpl+clk_hw_get_name", align 4
@__kstrtab___clk_get_hw = external dso_local constant [0 x i8], align 1
@__kstrtabns___clk_get_hw = external dso_local constant [0 x i8], align 1
@__ksymtab___clk_get_hw = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__clk_get_hw to i32), ptr @__kstrtab___clk_get_hw, ptr @__kstrtabns___clk_get_hw }, section "___ksymtab_gpl+__clk_get_hw", align 4
@__kstrtab_clk_hw_get_num_parents = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_get_num_parents = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_get_num_parents = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_get_num_parents to i32), ptr @__kstrtab_clk_hw_get_num_parents, ptr @__kstrtabns_clk_hw_get_num_parents }, section "___ksymtab_gpl+clk_hw_get_num_parents", align 4
@__kstrtab_clk_hw_get_parent = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_get_parent = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_get_parent = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_get_parent to i32), ptr @__kstrtab_clk_hw_get_parent, ptr @__kstrtabns_clk_hw_get_parent }, section "___ksymtab_gpl+clk_hw_get_parent", align 4
@__kstrtab_clk_hw_get_parent_by_index = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_get_parent_by_index = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_get_parent_by_index = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_get_parent_by_index to i32), ptr @__kstrtab_clk_hw_get_parent_by_index, ptr @__kstrtabns_clk_hw_get_parent_by_index }, section "___ksymtab_gpl+clk_hw_get_parent_by_index", align 4
@__kstrtab_clk_hw_get_rate = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_get_rate = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_get_rate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_get_rate to i32), ptr @__kstrtab_clk_hw_get_rate, ptr @__kstrtabns_clk_hw_get_rate }, section "___ksymtab_gpl+clk_hw_get_rate", align 4
@__kstrtab_clk_hw_get_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_get_flags = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_get_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_get_flags to i32), ptr @__kstrtab_clk_hw_get_flags, ptr @__kstrtabns_clk_hw_get_flags }, section "___ksymtab_gpl+clk_hw_get_flags", align 4
@__kstrtab_clk_hw_is_prepared = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_is_prepared = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_is_prepared = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_is_prepared to i32), ptr @__kstrtab_clk_hw_is_prepared, ptr @__kstrtabns_clk_hw_is_prepared }, section "___ksymtab_gpl+clk_hw_is_prepared", align 4
@__kstrtab_clk_hw_rate_is_protected = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_rate_is_protected = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_rate_is_protected = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_rate_is_protected to i32), ptr @__kstrtab_clk_hw_rate_is_protected, ptr @__kstrtabns_clk_hw_rate_is_protected }, section "___ksymtab_gpl+clk_hw_rate_is_protected", align 4
@__kstrtab_clk_hw_is_enabled = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_is_enabled = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_is_enabled = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_is_enabled to i32), ptr @__kstrtab_clk_hw_is_enabled, ptr @__kstrtabns_clk_hw_is_enabled }, section "___ksymtab_gpl+clk_hw_is_enabled", align 4
@__kstrtab___clk_is_enabled = external dso_local constant [0 x i8], align 1
@__kstrtabns___clk_is_enabled = external dso_local constant [0 x i8], align 1
@__ksymtab___clk_is_enabled = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__clk_is_enabled to i32), ptr @__kstrtab___clk_is_enabled, ptr @__kstrtabns___clk_is_enabled }, section "___ksymtab_gpl+__clk_is_enabled", align 4
@__kstrtab_clk_mux_determine_rate_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_mux_determine_rate_flags = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_mux_determine_rate_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_mux_determine_rate_flags to i32), ptr @__kstrtab_clk_mux_determine_rate_flags, ptr @__kstrtabns_clk_mux_determine_rate_flags }, section "___ksymtab_gpl+clk_mux_determine_rate_flags", align 4
@__kstrtab_clk_hw_set_rate_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_set_rate_range = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_set_rate_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_set_rate_range to i32), ptr @__kstrtab_clk_hw_set_rate_range, ptr @__kstrtabns_clk_hw_set_rate_range }, section "___ksymtab_gpl+clk_hw_set_rate_range", align 4
@__kstrtab___clk_mux_determine_rate = external dso_local constant [0 x i8], align 1
@__kstrtabns___clk_mux_determine_rate = external dso_local constant [0 x i8], align 1
@__ksymtab___clk_mux_determine_rate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__clk_mux_determine_rate to i32), ptr @__kstrtab___clk_mux_determine_rate, ptr @__kstrtabns___clk_mux_determine_rate }, section "___ksymtab_gpl+__clk_mux_determine_rate", align 4
@__kstrtab___clk_mux_determine_rate_closest = external dso_local constant [0 x i8], align 1
@__kstrtabns___clk_mux_determine_rate_closest = external dso_local constant [0 x i8], align 1
@__ksymtab___clk_mux_determine_rate_closest = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__clk_mux_determine_rate_closest to i32), ptr @__kstrtab___clk_mux_determine_rate_closest, ptr @__kstrtabns___clk_mux_determine_rate_closest }, section "___ksymtab_gpl+__clk_mux_determine_rate_closest", align 4
@.str = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"drivers/clk/clk.c\00", [46 x i8] zeroinitializer }, align 32
@__kstrtab_clk_rate_exclusive_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_rate_exclusive_put = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_rate_exclusive_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_rate_exclusive_put to i32), ptr @__kstrtab_clk_rate_exclusive_put, ptr @__kstrtabns_clk_rate_exclusive_put }, section "___ksymtab_gpl+clk_rate_exclusive_put", align 4
@__kstrtab_clk_rate_exclusive_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_rate_exclusive_get = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_rate_exclusive_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_rate_exclusive_get to i32), ptr @__kstrtab_clk_rate_exclusive_get, ptr @__kstrtabns_clk_rate_exclusive_get }, section "___ksymtab_gpl+clk_rate_exclusive_get", align 4
@__kstrtab_clk_unprepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_unprepare = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_unprepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_unprepare to i32), ptr @__kstrtab_clk_unprepare, ptr @__kstrtabns_clk_unprepare }, section "___ksymtab_gpl+clk_unprepare", align 4
@__kstrtab_clk_prepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_prepare = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_prepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_prepare to i32), ptr @__kstrtab_clk_prepare, ptr @__kstrtabns_clk_prepare }, section "___ksymtab_gpl+clk_prepare", align 4
@__kstrtab_clk_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_disable to i32), ptr @__kstrtab_clk_disable, ptr @__kstrtabns_clk_disable }, section "___ksymtab_gpl+clk_disable", align 4
@__kstrtab_clk_gate_restore_context = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_gate_restore_context = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_gate_restore_context = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_gate_restore_context to i32), ptr @__kstrtab_clk_gate_restore_context, ptr @__kstrtabns_clk_gate_restore_context }, section "___ksymtab_gpl+clk_gate_restore_context", align 4
@clk_root_list = internal global { %struct.hlist_head, [28 x i8] } zeroinitializer, align 32
@clk_orphan_list = internal global { %struct.hlist_head, [28 x i8] } zeroinitializer, align 32
@__kstrtab_clk_save_context = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_save_context = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_save_context = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_save_context to i32), ptr @__kstrtab_clk_save_context, ptr @__kstrtabns_clk_save_context }, section "___ksymtab_gpl+clk_save_context", align 4
@__kstrtab_clk_restore_context = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_restore_context = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_restore_context = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_restore_context to i32), ptr @__kstrtab_clk_restore_context, ptr @__kstrtabns_clk_restore_context }, section "___ksymtab_gpl+clk_restore_context", align 4
@__kstrtab_clk_enable = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_enable = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_enable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_enable to i32), ptr @__kstrtab_clk_enable, ptr @__kstrtabns_clk_enable }, section "___ksymtab_gpl+clk_enable", align 4
@__kstrtab_clk_is_enabled_when_prepared = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_is_enabled_when_prepared = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_is_enabled_when_prepared = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_is_enabled_when_prepared to i32), ptr @__kstrtab_clk_is_enabled_when_prepared, ptr @__kstrtabns_clk_is_enabled_when_prepared }, section "___ksymtab_gpl+clk_is_enabled_when_prepared", align 4
@__setup_str_clk_ignore_unused_setup = internal constant [18 x i8] c"clk_ignore_unused\00", section ".init.rodata", align 1
@__setup_clk_ignore_unused_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_clk_ignore_unused_setup, ptr @clk_ignore_unused_setup, i32 0 }, section ".init.setup", align 4
@__initcall__kmod_clk__353_1321_clk_disable_unused7s = internal global ptr @clk_disable_unused, section ".initcall7s.init", align 4
@__kstrtab___clk_determine_rate = external dso_local constant [0 x i8], align 1
@__kstrtabns___clk_determine_rate = external dso_local constant [0 x i8], align 1
@__ksymtab___clk_determine_rate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__clk_determine_rate to i32), ptr @__kstrtab___clk_determine_rate, ptr @__kstrtabns___clk_determine_rate }, section "___ksymtab_gpl+__clk_determine_rate", align 4
@__kstrtab_clk_hw_round_rate = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_round_rate = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_round_rate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_round_rate to i32), ptr @__kstrtab_clk_hw_round_rate, ptr @__kstrtabns_clk_hw_round_rate }, section "___ksymtab_gpl+clk_hw_round_rate", align 4
@__kstrtab_clk_round_rate = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_round_rate = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_round_rate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_round_rate to i32), ptr @__kstrtab_clk_round_rate, ptr @__kstrtabns_clk_round_rate }, section "___ksymtab_gpl+clk_round_rate", align 4
@__kstrtab_clk_get_accuracy = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_get_accuracy = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_get_accuracy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_get_accuracy to i32), ptr @__kstrtab_clk_get_accuracy, ptr @__kstrtabns_clk_get_accuracy }, section "___ksymtab_gpl+clk_get_accuracy", align 4
@__kstrtab_clk_get_rate = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_get_rate = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_get_rate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_get_rate to i32), ptr @__kstrtab_clk_get_rate, ptr @__kstrtabns_clk_get_rate }, section "___ksymtab_gpl+clk_get_rate", align 4
@__kstrtab_clk_hw_get_parent_index = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_get_parent_index = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_get_parent_index = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_get_parent_index to i32), ptr @__kstrtab_clk_hw_get_parent_index, ptr @__kstrtabns_clk_hw_get_parent_index }, section "___ksymtab_gpl+clk_hw_get_parent_index", align 4
@__kstrtab_clk_set_rate = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_set_rate = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_set_rate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_set_rate to i32), ptr @__kstrtab_clk_set_rate, ptr @__kstrtabns_clk_set_rate }, section "___ksymtab_gpl+clk_set_rate", align 4
@__kstrtab_clk_set_rate_exclusive = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_set_rate_exclusive = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_set_rate_exclusive = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_set_rate_exclusive to i32), ptr @__kstrtab_clk_set_rate_exclusive, ptr @__kstrtabns_clk_set_rate_exclusive }, section "___ksymtab_gpl+clk_set_rate_exclusive", align 4
@clk_set_rate_range._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str, i32 2336, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013%s: clk %s dev %s con %s: invalid range [%lu, %lu]\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"clk_set_rate_range\00", [45 x i8] zeroinitializer }, align 32
@clk_set_rate_range._entry_ptr = internal global ptr @clk_set_rate_range._entry, section ".printk_index", align 4
@__kstrtab_clk_set_rate_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_set_rate_range = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_set_rate_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_set_rate_range to i32), ptr @__kstrtab_clk_set_rate_range, ptr @__kstrtabns_clk_set_rate_range }, section "___ksymtab_gpl+clk_set_rate_range", align 4
@__kstrtab_clk_set_min_rate = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_set_min_rate = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_set_min_rate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_set_min_rate to i32), ptr @__kstrtab_clk_set_min_rate, ptr @__kstrtabns_clk_set_min_rate }, section "___ksymtab_gpl+clk_set_min_rate", align 4
@__kstrtab_clk_set_max_rate = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_set_max_rate = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_set_max_rate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_set_max_rate to i32), ptr @__kstrtab_clk_set_max_rate, ptr @__kstrtabns_clk_set_max_rate }, section "___ksymtab_gpl+clk_set_max_rate", align 4
@__kstrtab_clk_get_parent = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_get_parent = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_get_parent = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_get_parent to i32), ptr @__kstrtab_clk_get_parent, ptr @__kstrtabns_clk_get_parent }, section "___ksymtab_gpl+clk_get_parent", align 4
@__kstrtab_clk_has_parent = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_has_parent = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_has_parent = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_has_parent to i32), ptr @__kstrtab_clk_has_parent, ptr @__kstrtabns_clk_has_parent }, section "___ksymtab_gpl+clk_has_parent", align 4
@__kstrtab_clk_hw_set_parent = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_set_parent = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_set_parent = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_set_parent to i32), ptr @__kstrtab_clk_hw_set_parent, ptr @__kstrtabns_clk_hw_set_parent }, section "___ksymtab_gpl+clk_hw_set_parent", align 4
@__kstrtab_clk_set_parent = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_set_parent = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_set_parent = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_set_parent to i32), ptr @__kstrtab_clk_set_parent, ptr @__kstrtabns_clk_set_parent }, section "___ksymtab_gpl+clk_set_parent", align 4
@__kstrtab_clk_set_phase = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_set_phase = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_set_phase = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_set_phase to i32), ptr @__kstrtab_clk_set_phase, ptr @__kstrtabns_clk_set_phase }, section "___ksymtab_gpl+clk_set_phase", align 4
@__kstrtab_clk_get_phase = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_get_phase = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_get_phase = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_get_phase to i32), ptr @__kstrtab_clk_get_phase, ptr @__kstrtabns_clk_get_phase }, section "___ksymtab_gpl+clk_get_phase", align 4
@__kstrtab_clk_set_duty_cycle = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_set_duty_cycle = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_set_duty_cycle = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_set_duty_cycle to i32), ptr @__kstrtab_clk_set_duty_cycle, ptr @__kstrtabns_clk_set_duty_cycle }, section "___ksymtab_gpl+clk_set_duty_cycle", align 4
@__kstrtab_clk_get_scaled_duty_cycle = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_get_scaled_duty_cycle = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_get_scaled_duty_cycle = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_get_scaled_duty_cycle to i32), ptr @__kstrtab_clk_get_scaled_duty_cycle, ptr @__kstrtabns_clk_get_scaled_duty_cycle }, section "___ksymtab_gpl+clk_get_scaled_duty_cycle", align 4
@__kstrtab_clk_is_match = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_is_match = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_is_match = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_is_match to i32), ptr @__kstrtab_clk_is_match, ptr @__kstrtabns_clk_is_match }, section "___ksymtab_gpl+clk_is_match", align 4
@__initcall__kmod_clk__359_3427_clk_debug_init7 = internal global ptr @clk_debug_init, section ".initcall7.init", align 4
@__kstrtab_clk_hw_get_clk = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_get_clk = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_get_clk = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_get_clk to i32), ptr @__kstrtab_clk_hw_get_clk, ptr @__kstrtabns_clk_hw_get_clk }, section "___ksymtab+clk_hw_get_clk", align 4
@__kstrtab_clk_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_register = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_register to i32), ptr @__kstrtab_clk_register, ptr @__kstrtabns_clk_register }, section "___ksymtab_gpl+clk_register", align 4
@__kstrtab_clk_hw_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_register = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_register to i32), ptr @__kstrtab_clk_hw_register, ptr @__kstrtabns_clk_hw_register }, section "___ksymtab_gpl+clk_hw_register", align 4
@__kstrtab_of_clk_hw_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_hw_register = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_hw_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_hw_register to i32), ptr @__kstrtab_of_clk_hw_register, ptr @__kstrtabns_of_clk_hw_register }, section "___ksymtab_gpl+of_clk_hw_register", align 4
@clk_unregister.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@clk_nodrv_ops = internal constant { %struct.clk_ops, [60 x i8] } { %struct.clk_ops { ptr @clk_nodrv_prepare_enable, ptr @clk_nodrv_disable_unprepare, ptr null, ptr null, ptr @clk_nodrv_prepare_enable, ptr @clk_nodrv_disable_unprepare, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @clk_nodrv_set_parent, ptr null, ptr @clk_nodrv_set_rate, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [60 x i8] zeroinitializer }, align 32
@clk_unregister._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.3, ptr @.str.4, ptr @.str, i32 4128, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\013%s: unregistered clock: %s\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"clk_unregister\00", [17 x i8] zeroinitializer }, align 32
@clk_unregister._entry_ptr = internal global ptr @clk_unregister._entry, section ".printk_index", align 4
@clk_unregister._entry.5 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.6, ptr @.str.4, ptr @.str, i32 4158, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\014%s: unregistering prepared clock: %s\0A\00", [56 x i8] zeroinitializer }, align 32
@clk_unregister._entry_ptr.7 = internal global ptr @clk_unregister._entry.5, section ".printk_index", align 4
@clk_unregister._entry.8 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.4, ptr @.str, i32 4162, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014%s: unregistering protected clock: %s\0A\00", [55 x i8] zeroinitializer }, align 32
@clk_unregister._entry_ptr.10 = internal global ptr @clk_unregister._entry.8, section ".printk_index", align 4
@__kstrtab_clk_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_unregister to i32), ptr @__kstrtab_clk_unregister, ptr @__kstrtabns_clk_unregister }, section "___ksymtab_gpl+clk_unregister", align 4
@__kstrtab_clk_hw_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_hw_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_hw_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_hw_unregister to i32), ptr @__kstrtab_clk_hw_unregister, ptr @__kstrtabns_clk_hw_unregister }, section "___ksymtab_gpl+clk_hw_unregister", align 4
@.str.11 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"devm_clk_unregister_cb\00", [41 x i8] zeroinitializer }, align 32
@__kstrtab_devm_clk_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_clk_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_clk_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_clk_register to i32), ptr @__kstrtab_devm_clk_register, ptr @__kstrtabns_devm_clk_register }, section "___ksymtab_gpl+devm_clk_register", align 4
@.str.12 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"devm_clk_hw_unregister_cb\00", [38 x i8] zeroinitializer }, align 32
@__kstrtab_devm_clk_hw_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_clk_hw_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_clk_hw_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_clk_hw_register to i32), ptr @__kstrtab_devm_clk_hw_register, ptr @__kstrtabns_devm_clk_hw_register }, section "___ksymtab_gpl+devm_clk_hw_register", align 4
@__kstrtab_devm_clk_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_clk_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_clk_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_clk_unregister to i32), ptr @__kstrtab_devm_clk_unregister, ptr @__kstrtabns_devm_clk_unregister }, section "___ksymtab_gpl+devm_clk_unregister", align 4
@__kstrtab_devm_clk_hw_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_clk_hw_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_clk_hw_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_clk_hw_unregister to i32), ptr @__kstrtab_devm_clk_hw_unregister, ptr @__kstrtabns_devm_clk_hw_unregister }, section "___ksymtab_gpl+devm_clk_hw_unregister", align 4
@devm_clk_hw_get_clk.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.13 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"devm_clk_release\00", [47 x i8] zeroinitializer }, align 32
@__kstrtab_devm_clk_hw_get_clk = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_clk_hw_get_clk = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_clk_hw_get_clk = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_clk_hw_get_clk to i32), ptr @__kstrtab_devm_clk_hw_get_clk, ptr @__kstrtabns_devm_clk_hw_get_clk }, section "___ksymtab_gpl+devm_clk_hw_get_clk", align 4
@__clk_put.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@clk_notifier_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @clk_notifier_list, ptr @clk_notifier_list }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_clk_notifier_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_notifier_register = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_notifier_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_notifier_register to i32), ptr @__kstrtab_clk_notifier_register, ptr @__kstrtabns_clk_notifier_register }, section "___ksymtab_gpl+clk_notifier_register", align 4
@__kstrtab_clk_notifier_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_clk_notifier_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_clk_notifier_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clk_notifier_unregister to i32), ptr @__kstrtab_clk_notifier_unregister, ptr @__kstrtabns_clk_notifier_unregister }, section "___ksymtab_gpl+clk_notifier_unregister", align 4
@.str.14 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"devm_clk_notifier_release\00", [38 x i8] zeroinitializer }, align 32
@__kstrtab_devm_clk_notifier_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_clk_notifier_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_clk_notifier_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_clk_notifier_register to i32), ptr @__kstrtab_devm_clk_notifier_register, ptr @__kstrtabns_devm_clk_notifier_register }, section "___ksymtab_gpl+devm_clk_notifier_register", align 4
@__kstrtab_of_clk_src_simple_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_src_simple_get = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_src_simple_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_src_simple_get to i32), ptr @__kstrtab_of_clk_src_simple_get, ptr @__kstrtabns_of_clk_src_simple_get }, section "___ksymtab_gpl+of_clk_src_simple_get", align 4
@__kstrtab_of_clk_hw_simple_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_hw_simple_get = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_hw_simple_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_hw_simple_get to i32), ptr @__kstrtab_of_clk_hw_simple_get, ptr @__kstrtabns_of_clk_hw_simple_get }, section "___ksymtab_gpl+of_clk_hw_simple_get", align 4
@of_clk_src_onecell_get._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.16, ptr @.str, i32 4574, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\013%s: invalid clock index %u\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"of_clk_src_onecell_get\00", [41 x i8] zeroinitializer }, align 32
@of_clk_src_onecell_get._entry_ptr = internal global ptr @of_clk_src_onecell_get._entry, section ".printk_index", align 4
@__kstrtab_of_clk_src_onecell_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_src_onecell_get = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_src_onecell_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_src_onecell_get to i32), ptr @__kstrtab_of_clk_src_onecell_get, ptr @__kstrtabns_of_clk_src_onecell_get }, section "___ksymtab_gpl+of_clk_src_onecell_get", align 4
@of_clk_hw_onecell_get._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.18, ptr @.str, i32 4589, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\013%s: invalid index %u\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"of_clk_hw_onecell_get\00", [42 x i8] zeroinitializer }, align 32
@of_clk_hw_onecell_get._entry_ptr = internal global ptr @of_clk_hw_onecell_get._entry, section ".printk_index", align 4
@__kstrtab_of_clk_hw_onecell_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_hw_onecell_get = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_hw_onecell_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_hw_onecell_get to i32), ptr @__kstrtab_of_clk_hw_onecell_get, ptr @__kstrtabns_of_clk_hw_onecell_get }, section "___ksymtab_gpl+of_clk_hw_onecell_get", align 4
@of_clk_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.157, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @of_clk_mutex, i64 52), ptr getelementptr (i8, ptr @of_clk_mutex, i64 52) }, ptr @of_clk_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.158, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@of_clk_providers = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @of_clk_providers, ptr @of_clk_providers }, [24 x i8] zeroinitializer }, align 32
@of_clk_add_provider.__UNIQUE_ID_ddebug361 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.20, ptr @.str, ptr @.str.21, i8 4, i8 -124, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.19 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"clk\00", [28 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"of_clk_add_provider\00", [44 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Added clock from %pOF\0A\00", [41 x i8] zeroinitializer }, align 32
@__kstrtab_of_clk_add_provider = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_add_provider = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_add_provider = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_add_provider to i32), ptr @__kstrtab_of_clk_add_provider, ptr @__kstrtabns_of_clk_add_provider }, section "___ksymtab_gpl+of_clk_add_provider", align 4
@of_clk_add_hw_provider.__UNIQUE_ID_ddebug362 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.22, ptr @.str, ptr @.str.23, i8 4, i8 -113, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.22 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"of_clk_add_hw_provider\00", [41 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Added clk_hw provider from %pOF\0A\00", [63 x i8] zeroinitializer }, align 32
@__kstrtab_of_clk_add_hw_provider = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_add_hw_provider = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_add_hw_provider = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_add_hw_provider to i32), ptr @__kstrtab_of_clk_add_hw_provider, ptr @__kstrtabns_of_clk_add_hw_provider }, section "___ksymtab_gpl+of_clk_add_hw_provider", align 4
@.str.24 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"devm_of_clk_release_provider\00", [35 x i8] zeroinitializer }, align 32
@__kstrtab_devm_of_clk_add_hw_provider = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_of_clk_add_hw_provider = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_of_clk_add_hw_provider = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_of_clk_add_hw_provider to i32), ptr @__kstrtab_devm_of_clk_add_hw_provider, ptr @__kstrtabns_devm_of_clk_add_hw_provider }, section "___ksymtab_gpl+devm_of_clk_add_hw_provider", align 4
@__kstrtab_of_clk_del_provider = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_del_provider = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_del_provider = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_del_provider to i32), ptr @__kstrtab_of_clk_del_provider, ptr @__kstrtabns_of_clk_del_provider }, section "___ksymtab_gpl+of_clk_del_provider", align 4
@__kstrtab_devm_of_clk_del_provider = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_of_clk_del_provider = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_of_clk_del_provider = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_of_clk_del_provider to i32), ptr @__kstrtab_devm_of_clk_del_provider, ptr @__kstrtabns_devm_of_clk_del_provider }, section "___ksymtab+devm_of_clk_del_provider", align 4
@__func__.of_clk_get_from_provider = private unnamed_addr constant [25 x i8] c"of_clk_get_from_provider\00", align 1
@__kstrtab_of_clk_get_from_provider = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_get_from_provider = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_get_from_provider = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_get_from_provider to i32), ptr @__kstrtab_of_clk_get_from_provider, ptr @__kstrtabns_of_clk_get_from_provider }, section "___ksymtab_gpl+of_clk_get_from_provider", align 4
@__kstrtab_of_clk_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_get = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_get to i32), ptr @__kstrtab_of_clk_get, ptr @__kstrtabns_of_clk_get }, section "___ksymtab+of_clk_get", align 4
@__kstrtab_of_clk_get_by_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_get_by_name = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_get_by_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_get_by_name to i32), ptr @__kstrtab_of_clk_get_by_name, ptr @__kstrtabns_of_clk_get_by_name }, section "___ksymtab+of_clk_get_by_name", align 4
@.str.25 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"clocks\00", [25 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"#clock-cells\00", [19 x i8] zeroinitializer }, align 32
@__kstrtab_of_clk_get_parent_count = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_get_parent_count = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_get_parent_count = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_get_parent_count to i32), ptr @__kstrtab_of_clk_get_parent_count, ptr @__kstrtabns_of_clk_get_parent_count }, section "___ksymtab_gpl+of_clk_get_parent_count", align 4
@.str.27 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-indices\00", [18 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"clock-output-names\00", [45 x i8] zeroinitializer }, align 32
@__kstrtab_of_clk_get_parent_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_get_parent_name = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_get_parent_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_get_parent_name to i32), ptr @__kstrtab_of_clk_get_parent_name, ptr @__kstrtabns_of_clk_get_parent_name }, section "___ksymtab_gpl+of_clk_get_parent_name", align 4
@__kstrtab_of_clk_parent_fill = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_clk_parent_fill = external dso_local constant [0 x i8], align 1
@__ksymtab_of_clk_parent_fill = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_clk_parent_fill to i32), ptr @__kstrtab_of_clk_parent_fill, ptr @__kstrtabns_of_clk_parent_fill }, section "___ksymtab_gpl+of_clk_parent_fill", align 4
@.str.29 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"clock-critical\00", [17 x i8] zeroinitializer }, align 32
@__clk_of_table = external dso_local global %struct.of_device_id, align 4
@__clk_of_table_sentinel = internal constant %struct.of_device_id zeroinitializer, section "__clk_of_table_end", align 4
@.str.30 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"rate\00", [27 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %lu\0A\00", [24 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"min\00", [28 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"max\00", [28 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s min %lu max %lu\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"pname\00", [26 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%s %s\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"phase\00", [26 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%s %d\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"num\00", [28 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"den\00", [28 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"%s %u/%u\0A\00", [22 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@prepare_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.51, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @prepare_lock, i64 52), ptr getelementptr (i8, ptr @prepare_lock, i64 52) }, ptr @prepare_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.52, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@prepare_owner = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@prepare_refcnt = internal global { i32, [28 x i8] } zeroinitializer, align 32
@clk_prepare_lock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@clk_prepare_lock.__already_done.50 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.51 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"prepare_lock.wait_lock\00", [41 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"prepare_lock\00", [19 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.53 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s already unprotected\0A\00", [40 x i8] zeroinitializer }, align 32
@clk_prepare_unlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@clk_prepare_unlock.__already_done.54 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.55 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s already unprepared\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Unpreparing critical %s\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Unpreparing enabled %s\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/clk.h\00", [37 x i8] zeroinitializer }, align 32
@trace_clk_unprepare.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.59 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.60 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@trace_clk_unprepare_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_prepare.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_prepare_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@enable_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.1 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.63, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%s already disabled\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Disabling critical %s\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"enable_lock\00", [20 x i8] zeroinitializer }, align 32
@trace_clk_disable_rcuidle.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@tracepoint_srcu = external dso_local global %struct.srcu_struct, align 4
@trace_clk_disable_complete_rcuidle.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.64 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Enabling unprepared %s\0A\00", [40 x i8] zeroinitializer }, align 32
@trace_clk_enable_rcuidle.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_clk_enable_complete_rcuidle.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@clk_ignore_unused = internal unnamed_addr global i1 false, section ".init.data", align 1
@clk_disable_unused._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.66, ptr @.str, i32 1299, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014clk: Not disabling unused clocks\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"clk_disable_unused\00", [45 x i8] zeroinitializer }, align 32
@clk_disable_unused._entry_ptr = internal global ptr @clk_disable_unused._entry, section ".printk_index", align 4
@trace_clk_disable.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_disable_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@clk_core_set_rate_nolock.__UNIQUE_ID_ddebug357 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.67, ptr @.str, ptr @.str.68, i8 2, i8 39, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.67 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"clk_core_set_rate_nolock\00", [39 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: failed to set %s rate\0A\00", [37 x i8] zeroinitializer }, align 32
@clk_calc_new_rates.__UNIQUE_ID_ddebug355 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.69, ptr @.str, ptr @.str.70, i8 1, i8 -15, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.69 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"clk_calc_new_rates\00", [45 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s: %s not gated but wants to reparent\0A\00", [56 x i8] zeroinitializer }, align 32
@clk_calc_new_rates.__UNIQUE_ID_ddebug356 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.69, ptr @.str, ptr @.str.71, i8 1, i8 -12, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.71 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s: clk %s can not be parent of clk %s\0A\00", [56 x i8] zeroinitializer }, align 32
@trace_clk_set_parent.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_set_parent_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_set_rate.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_set_rate_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_set_rate_range.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_set_min_rate.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_set_max_rate.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@clk_core_set_parent_nolock.__UNIQUE_ID_ddebug358 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.72, ptr @.str, ptr @.str.71, i8 2, i8 122, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.72 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"clk_core_set_parent_nolock\00", [37 x i8] zeroinitializer }, align 32
@__clk_speculate_rates.__UNIQUE_ID_ddebug354 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.73, ptr @.str, ptr @.str.74, i8 1, i8 -38, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.73 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"__clk_speculate_rates\00", [42 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"%s: clk notifier callback for clock %s aborted with error %d\0A\00", [34 x i8] zeroinitializer }, align 32
@trace_clk_set_phase.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_set_phase_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_set_duty_cycle.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_clk_set_duty_cycle_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rootdir = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.75 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"clk_summary\00", [20 x i8] zeroinitializer }, align 32
@all_lists = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @clk_root_list, ptr @clk_orphan_list, ptr null], [20 x i8] zeroinitializer }, align 32
@clk_summary_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @clk_summary_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"clk_dump\00", [23 x i8] zeroinitializer }, align 32
@clk_dump_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @clk_dump_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"clk_orphan_summary\00", [45 x i8] zeroinitializer }, align 32
@orphan_list = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @clk_orphan_list, ptr null], [24 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clk_orphan_dump\00", [16 x i8] zeroinitializer }, align 32
@clk_debug_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.99, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @clk_debug_lock, i64 52), ptr getelementptr (i8, ptr @clk_debug_lock, i64 52) }, ptr @clk_debug_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.100, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@clk_debug_list = internal global { %struct.hlist_head, [28 x i8] } zeroinitializer, align 32
@inited = internal global { i1, [31 x i8] } zeroinitializer, align 32
@.str.79 = internal constant { [105 x i8], [55 x i8] } { [105 x i8] c"                                 enable  prepare  protect                                duty  hardware\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [105 x i8], [55 x i8] } { [105 x i8] c"   clock                          count    count    count        rate   accuracy phase  cycle    enable\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [105 x i8], [55 x i8] } { [105 x i8] c"-------------------------------------------------------------------------------------------------------\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%*s%-*s %7d %8d %8d %11lu %10lu \00", [63 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.84 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%5d\00", [28 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"-----\00", [26 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c" %6d\00", [27 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c" %9c\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"}\0A\00", [29 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"\22%s\22: { \00", [23 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\22enable_count\22: %d,\00", [44 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\22prepare_count\22: %d,\00", [43 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\22protect_count\22: %d,\00", [43 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"\22rate\22: %lu,\00", [19 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"\22min_rate\22: %lu,\00", [47 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"\22max_rate\22: %lu,\00", [47 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"\22accuracy\22: %lu,\00", [47 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"\22phase\22: %d,\00", [19 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"\22duty_cycle\22: %u\00", [47 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"clk_debug_lock.wait_lock\00", [39 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"clk_debug_lock\00", [17 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"clk_rate\00", [23 x i8] zeroinitializer }, align 32
@clk_rate_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @no_llseek, ptr @debugfs_attr_read, ptr @debugfs_attr_write, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @clk_rate_fops_open, ptr null, ptr @simple_attr_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clk_min_rate\00", [19 x i8] zeroinitializer }, align 32
@clk_min_rate_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @clk_min_rate_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clk_max_rate\00", [19 x i8] zeroinitializer }, align 32
@clk_max_rate_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @clk_max_rate_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clk_accuracy\00", [19 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"clk_phase\00", [22 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"clk_flags\00", [22 x i8] zeroinitializer }, align 32
@clk_flags_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @clk_flags_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"clk_prepare_count\00", [46 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"clk_enable_count\00", [47 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"clk_protect_count\00", [46 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"clk_notifier_count\00", [45 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"clk_duty_cycle\00", [17 x i8] zeroinitializer }, align 32
@clk_duty_cycle_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @clk_duty_cycle_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"clk_parent\00", [21 x i8] zeroinitializer }, align 32
@current_parent_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @current_parent_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"clk_possible_parents\00", [43 x i8] zeroinitializer }, align 32
@possible_parents_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @possible_parents_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%llu\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%lu\0A\00", [27 x i8] zeroinitializer }, align 32
@clk_flags = internal constant { [12 x %struct.anon.119], [32 x i8] } { [12 x %struct.anon.119] [%struct.anon.119 { i32 1, ptr @.str.117 }, %struct.anon.119 { i32 2, ptr @.str.118 }, %struct.anon.119 { i32 4, ptr @.str.119 }, %struct.anon.119 { i32 8, ptr @.str.120 }, %struct.anon.119 { i32 64, ptr @.str.121 }, %struct.anon.119 { i32 128, ptr @.str.122 }, %struct.anon.119 { i32 256, ptr @.str.123 }, %struct.anon.119 { i32 512, ptr @.str.124 }, %struct.anon.119 { i32 1024, ptr @.str.125 }, %struct.anon.119 { i32 2048, ptr @.str.126 }, %struct.anon.119 { i32 4096, ptr @.str.127 }, %struct.anon.119 { i32 8192, ptr @.str.128 }], [32 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"0x%lx\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"CLK_SET_RATE_GATE\00", [46 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"CLK_SET_PARENT_GATE\00", [44 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"CLK_SET_RATE_PARENT\00", [44 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"CLK_IGNORE_UNUSED\00", [46 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"CLK_GET_RATE_NOCACHE\00", [43 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"CLK_SET_RATE_NO_REPARENT\00", [39 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"CLK_GET_ACCURACY_NOCACHE\00", [39 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"CLK_RECALC_NEW_RATES\00", [43 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"CLK_SET_RATE_UNGATE\00", [44 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"CLK_IS_CRITICAL\00", [16 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"CLK_OPS_PARENT_ENABLE\00", [42 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"CLK_DUTY_CYCLE_PARENT\00", [42 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%u/%u\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"<%s>(fw)\00", [23 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"(missing)\00", [22 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s: invalid NULL in %s's .parent_names\0A\00", [56 x i8] zeroinitializer }, align 32
@__func__.clk_core_populate_parent_map = private unnamed_addr constant [29 x i8] c"clk_core_populate_parent_map\00", align 1
@.str.133 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Must specify parents if num_parents > 0\0A\00", [55 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@__clk_core_init.__UNIQUE_ID_ddebug360 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.134, ptr @.str, ptr @.str.135, i8 3, i8 105, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.134 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"__clk_core_init\00", [16 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: clk %s already initialized\0A\00", [32 x i8] zeroinitializer }, align 32
@__clk_core_init._entry = internal constant %struct.pi_entry { ptr @.str.136, ptr @.str.134, ptr @.str, i32 3504, ptr null, ptr null }, align 1
@.str.136 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"\013%s: %s must implement .round_rate or .determine_rate in addition to .recalc_rate\0A\00", [44 x i8] zeroinitializer }, align 32
@__clk_core_init._entry_ptr = internal global ptr @__clk_core_init._entry, section ".printk_index", align 4
@__clk_core_init._entry.137 = internal constant %struct.pi_entry { ptr @.str.138, ptr @.str.134, ptr @.str, i32 3511, ptr null, ptr null }, align 1
@.str.138 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\013%s: %s must implement .get_parent & .set_parent\0A\00", [45 x i8] zeroinitializer }, align 32
@__clk_core_init._entry_ptr.139 = internal global ptr @__clk_core_init._entry.137, section ".printk_index", align 4
@__clk_core_init._entry.140 = internal constant %struct.pi_entry { ptr @.str.141, ptr @.str.134, ptr @.str, i32 3518, ptr null, ptr null }, align 1
@.str.141 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013%s: %s must implement .get_parent as it has multi parents\0A\00", [35 x i8] zeroinitializer }, align 32
@__clk_core_init._entry_ptr.142 = internal global ptr @__clk_core_init._entry.140, section ".printk_index", align 4
@__clk_core_init._entry.143 = internal constant %struct.pi_entry { ptr @.str.144, ptr @.str.134, ptr @.str, i32 3526, ptr null, ptr null }, align 1
@.str.144 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013%s: %s must implement .set_parent & .set_rate\0A\00", [47 x i8] zeroinitializer }, align 32
@__clk_core_init._entry_ptr.145 = internal global ptr @__clk_core_init._entry.143, section ".printk_index", align 4
@__clk_core_init._entry.146 = internal constant %struct.pi_entry { ptr @.str.147, ptr @.str.134, ptr @.str, i32 3598, ptr null, ptr null }, align 1
@.str.147 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\014%s: Failed to get phase for clk '%s'\0A\00", [56 x i8] zeroinitializer }, align 32
@__clk_core_init._entry_ptr.148 = internal global ptr @__clk_core_init._entry.146, section ".printk_index", align 4
@__clk_core_init._entry.149 = internal constant %struct.pi_entry { ptr @.str.150, ptr @.str.134, ptr @.str, i32 3631, ptr null, ptr null }, align 1
@.str.150 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\014%s: critical clk '%s' failed to prepare\0A\00", [53 x i8] zeroinitializer }, align 32
@__clk_core_init._entry_ptr.151 = internal global ptr @__clk_core_init._entry.149, section ".printk_index", align 4
@__clk_core_init._entry.152 = internal constant %struct.pi_entry { ptr @.str.153, ptr @.str.134, ptr @.str, i32 3638, ptr null, ptr null }, align 1
@.str.153 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014%s: critical clk '%s' failed to enable\0A\00", [54 x i8] zeroinitializer }, align 32
@__clk_core_init._entry_ptr.154 = internal global ptr @__clk_core_init._entry.152, section ".printk_index", align 4
@clk_nodrv_disable_unprepare.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@enable_owner = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@enable_refcnt = internal global { i32, [28 x i8] } zeroinitializer, align 32
@clk_enable_lock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@clk_enable_lock.__already_done.155 = internal unnamed_addr global i1 false, section ".data.once", align 1
@clk_enable_unlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@clk_enable_unlock.__already_done.156 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.157 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"of_clk_mutex.wait_lock\00", [41 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"of_clk_mutex\00", [19 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"clock-names\00", [20 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-ranges\00", [19 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.161 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@___asan_gen_.162 = private unnamed_addr constant [28 x i8] c"str__clk__trace_system_name\00", align 1
@___asan_gen_.163 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 36, i32 1 }
@___asan_gen_.165 = private unnamed_addr constant [23 x i8] c"trace_event_fields_clk\00", align 1
@___asan_gen_.168 = private unnamed_addr constant [27 x i8] c"trace_event_type_funcs_clk\00", align 1
@___asan_gen_.171 = private unnamed_addr constant [14 x i8] c"print_fmt_clk\00", align 1
@___asan_gen_.174 = private unnamed_addr constant [17 x i8] c"event_clk_enable\00", align 1
@___asan_gen_.176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 32, i32 1 }
@___asan_gen_.177 = private unnamed_addr constant [26 x i8] c"event_clk_enable_complete\00", align 1
@___asan_gen_.179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 39, i32 1 }
@___asan_gen_.180 = private unnamed_addr constant [18 x i8] c"event_clk_disable\00", align 1
@___asan_gen_.182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 46, i32 1 }
@___asan_gen_.183 = private unnamed_addr constant [27 x i8] c"event_clk_disable_complete\00", align 1
@___asan_gen_.185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 53, i32 1 }
@___asan_gen_.186 = private unnamed_addr constant [18 x i8] c"event_clk_prepare\00", align 1
@___asan_gen_.188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 60, i32 1 }
@___asan_gen_.189 = private unnamed_addr constant [27 x i8] c"event_clk_prepare_complete\00", align 1
@___asan_gen_.191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 67, i32 1 }
@___asan_gen_.192 = private unnamed_addr constant [20 x i8] c"event_clk_unprepare\00", align 1
@___asan_gen_.195 = private unnamed_addr constant [29 x i8] c"event_clk_unprepare_complete\00", align 1
@___asan_gen_.197 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 81, i32 1 }
@___asan_gen_.198 = private unnamed_addr constant [28 x i8] c"trace_event_fields_clk_rate\00", align 1
@___asan_gen_.201 = private unnamed_addr constant [32 x i8] c"trace_event_type_funcs_clk_rate\00", align 1
@___asan_gen_.204 = private unnamed_addr constant [19 x i8] c"print_fmt_clk_rate\00", align 1
@___asan_gen_.207 = private unnamed_addr constant [19 x i8] c"event_clk_set_rate\00", align 1
@___asan_gen_.209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 107, i32 1 }
@___asan_gen_.210 = private unnamed_addr constant [28 x i8] c"event_clk_set_rate_complete\00", align 1
@___asan_gen_.212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 114, i32 1 }
@___asan_gen_.213 = private unnamed_addr constant [23 x i8] c"event_clk_set_min_rate\00", align 1
@___asan_gen_.215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 121, i32 1 }
@___asan_gen_.216 = private unnamed_addr constant [23 x i8] c"event_clk_set_max_rate\00", align 1
@___asan_gen_.218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 128, i32 1 }
@___asan_gen_.219 = private unnamed_addr constant [34 x i8] c"trace_event_fields_clk_rate_range\00", align 1
@___asan_gen_.222 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_clk_rate_range\00", align 1
@___asan_gen_.225 = private unnamed_addr constant [25 x i8] c"print_fmt_clk_rate_range\00", align 1
@___asan_gen_.228 = private unnamed_addr constant [25 x i8] c"event_clk_set_rate_range\00", align 1
@___asan_gen_.230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 158, i32 1 }
@___asan_gen_.231 = private unnamed_addr constant [30 x i8] c"trace_event_fields_clk_parent\00", align 1
@___asan_gen_.234 = private unnamed_addr constant [34 x i8] c"trace_event_type_funcs_clk_parent\00", align 1
@___asan_gen_.237 = private unnamed_addr constant [21 x i8] c"print_fmt_clk_parent\00", align 1
@___asan_gen_.240 = private unnamed_addr constant [21 x i8] c"event_clk_set_parent\00", align 1
@___asan_gen_.242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 184, i32 1 }
@___asan_gen_.243 = private unnamed_addr constant [30 x i8] c"event_clk_set_parent_complete\00", align 1
@___asan_gen_.245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 191, i32 1 }
@___asan_gen_.246 = private unnamed_addr constant [29 x i8] c"trace_event_fields_clk_phase\00", align 1
@___asan_gen_.249 = private unnamed_addr constant [33 x i8] c"trace_event_type_funcs_clk_phase\00", align 1
@___asan_gen_.252 = private unnamed_addr constant [20 x i8] c"print_fmt_clk_phase\00", align 1
@___asan_gen_.255 = private unnamed_addr constant [20 x i8] c"event_clk_set_phase\00", align 1
@___asan_gen_.257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 217, i32 1 }
@___asan_gen_.258 = private unnamed_addr constant [29 x i8] c"event_clk_set_phase_complete\00", align 1
@___asan_gen_.260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 224, i32 1 }
@___asan_gen_.261 = private unnamed_addr constant [34 x i8] c"trace_event_fields_clk_duty_cycle\00", align 1
@___asan_gen_.264 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_clk_duty_cycle\00", align 1
@___asan_gen_.267 = private unnamed_addr constant [25 x i8] c"print_fmt_clk_duty_cycle\00", align 1
@___asan_gen_.270 = private unnamed_addr constant [25 x i8] c"event_clk_set_duty_cycle\00", align 1
@___asan_gen_.272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 253, i32 1 }
@___asan_gen_.273 = private unnamed_addr constant [34 x i8] c"event_clk_set_duty_cycle_complete\00", align 1
@___asan_gen_.275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 260, i32 1 }
@___asan_gen_.278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 735, i32 6 }
@___asan_gen_.279 = private unnamed_addr constant [14 x i8] c"clk_root_list\00", align 1
@___asan_gen_.281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 36, i32 8 }
@___asan_gen_.282 = private unnamed_addr constant [16 x i8] c"clk_orphan_list\00", align 1
@___asan_gen_.284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 37, i32 8 }
@___asan_gen_.293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2334, i32 3 }
@___asan_gen_.294 = private unnamed_addr constant [14 x i8] c"clk_nodrv_ops\00", align 1
@___asan_gen_.296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4072, i32 29 }
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4127, i32 3 }
@___asan_gen_.311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4157, i32 3 }
@___asan_gen_.317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4161, i32 3 }
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4206, i32 9 }
@___asan_gen_.323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4236, i32 8 }
@___asan_gen_.326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4327, i32 9 }
@___asan_gen_.327 = private unnamed_addr constant [18 x i8] c"clk_notifier_list\00", align 1
@___asan_gen_.329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 38, i32 8 }
@___asan_gen_.332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4503, i32 11 }
@___asan_gen_.341 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4574, i32 3 }
@___asan_gen_.350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4589, i32 3 }
@___asan_gen_.351 = private unnamed_addr constant [13 x i8] c"of_clk_mutex\00", align 1
@___asan_gen_.354 = private unnamed_addr constant [17 x i8] c"of_clk_providers\00", align 1
@___asan_gen_.356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4552, i32 8 }
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4627, i32 2 }
@___asan_gen_.371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4669, i32 2 }
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4729, i32 8 }
@___asan_gen_.377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4985, i32 41 }
@___asan_gen_.380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4985, i32 51 }
@___asan_gen_.383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 5015, i32 2 }
@___asan_gen_.386 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 5026, i32 48 }
@___asan_gen_.389 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 5143, i32 2 }
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 15, i32 1 }
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 88, i32 1 }
@___asan_gen_.419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 135, i32 1 }
@___asan_gen_.428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 165, i32 1 }
@___asan_gen_.437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 198, i32 1 }
@___asan_gen_.449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 231, i32 1 }
@___asan_gen_.450 = private unnamed_addr constant [13 x i8] c"prepare_lock\00", align 1
@___asan_gen_.453 = private unnamed_addr constant [14 x i8] c"prepare_owner\00", align 1
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 30, i32 28 }
@___asan_gen_.456 = private unnamed_addr constant [15 x i8] c"prepare_refcnt\00", align 1
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 33, i32 12 }
@___asan_gen_.464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 28, i32 8 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 677, i32 6 }
@___asan_gen_.470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 811, i32 6 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 815, i32 6 }
@___asan_gen_.476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 825, i32 2 }
@___asan_gen_.481 = private unnamed_addr constant [30 x i8] c"../include/trace/events/clk.h\00", align 1
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 74, i32 1 }
@___asan_gen_.484 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.484, i32 108, i32 2 }
@___asan_gen_.486 = private unnamed_addr constant [12 x i8] c"enable_lock\00", align 1
@___asan_gen_.491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 953, i32 6 }
@___asan_gen_.494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 956, i32 6 }
@___asan_gen_.497 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 27, i32 8 }
@___asan_gen_.500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 1012, i32 6 }
@___asan_gen_.501 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 1299, i32 3 }
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2206, i32 3 }
@___asan_gen_.521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 1990, i32 3 }
@___asan_gen_.524 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 1999, i32 4 }
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2536, i32 4 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 1895, i32 3 }
@___asan_gen_.534 = private unnamed_addr constant [8 x i8] c"rootdir\00", align 1
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2926, i32 23 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3409, i32 22 }
@___asan_gen_.540 = private unnamed_addr constant [10 x i8] c"all_lists\00", align 1
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 40, i32 27 }
@___asan_gen_.543 = private unnamed_addr constant [17 x i8] c"clk_summary_fops\00", align 1
@___asan_gen_.545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2996, i32 1 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3411, i32 22 }
@___asan_gen_.549 = private unnamed_addr constant [14 x i8] c"clk_dump_fops\00", align 1
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3058, i32 1 }
@___asan_gen_.554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3413, i32 22 }
@___asan_gen_.555 = private unnamed_addr constant [12 x i8] c"orphan_list\00", align 1
@___asan_gen_.557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2931, i32 27 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3415, i32 22 }
@___asan_gen_.561 = private unnamed_addr constant [15 x i8] c"clk_debug_lock\00", align 1
@___asan_gen_.564 = private unnamed_addr constant [15 x i8] c"clk_debug_list\00", align 1
@___asan_gen_.566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2929, i32 8 }
@___asan_gen_.567 = private unnamed_addr constant [7 x i8] c"inited\00", align 1
@___asan_gen_.570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2982, i32 14 }
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2983, i32 14 }
@___asan_gen_.576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2984, i32 14 }
@___asan_gen_.579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2941, i32 16 }
@___asan_gen_.582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2942, i32 21 }
@___asan_gen_.585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2950, i32 17 }
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2952, i32 15 }
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2954, i32 16 }
@___asan_gen_.594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2957, i32 17 }
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3055, i32 14 }
@___asan_gen_.600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3006, i32 16 }
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3007, i32 16 }
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3008, i32 16 }
@___asan_gen_.609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3009, i32 16 }
@___asan_gen_.612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3010, i32 16 }
@___asan_gen_.615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3011, i32 16 }
@___asan_gen_.618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3012, i32 16 }
@___asan_gen_.621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3013, i32 16 }
@___asan_gen_.624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3016, i32 17 }
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3017, i32 16 }
@___asan_gen_.633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 2928, i32 8 }
@___asan_gen_.636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3308, i32 22 }
@___asan_gen_.637 = private unnamed_addr constant [14 x i8] c"clk_rate_fops\00", align 1
@___asan_gen_.642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3310, i32 22 }
@___asan_gen_.643 = private unnamed_addr constant [18 x i8] c"clk_min_rate_fops\00", align 1
@___asan_gen_.645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3282, i32 1 }
@___asan_gen_.648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3311, i32 22 }
@___asan_gen_.649 = private unnamed_addr constant [18 x i8] c"clk_max_rate_fops\00", align 1
@___asan_gen_.651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3296, i32 1 }
@___asan_gen_.654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3312, i32 23 }
@___asan_gen_.657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3313, i32 21 }
@___asan_gen_.660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3314, i32 22 }
@___asan_gen_.661 = private unnamed_addr constant [15 x i8] c"clk_flags_fops\00", align 1
@___asan_gen_.663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3162, i32 1 }
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3315, i32 21 }
@___asan_gen_.669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3316, i32 21 }
@___asan_gen_.672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3317, i32 21 }
@___asan_gen_.675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3318, i32 21 }
@___asan_gen_.678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3319, i32 22 }
@___asan_gen_.679 = private unnamed_addr constant [20 x i8] c"clk_duty_cycle_fops\00", align 1
@___asan_gen_.681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3268, i32 1 }
@___asan_gen_.684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3331, i32 23 }
@___asan_gen_.685 = private unnamed_addr constant [20 x i8] c"current_parent_fops\00", align 1
@___asan_gen_.687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3221, i32 1 }
@___asan_gen_.690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3335, i32 23 }
@___asan_gen_.691 = private unnamed_addr constant [22 x i8] c"possible_parents_fops\00", align 1
@___asan_gen_.693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3210, i32 1 }
@___asan_gen_.696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3121, i32 1 }
@___asan_gen_.699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3278, i32 16 }
@___asan_gen_.700 = private unnamed_addr constant [10 x i8] c"clk_flags\00", align 1
@___asan_gen_.702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3126, i32 3 }
@___asan_gen_.705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3157, i32 17 }
@___asan_gen_.708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3128, i32 2 }
@___asan_gen_.711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3129, i32 2 }
@___asan_gen_.714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3130, i32 2 }
@___asan_gen_.717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3131, i32 2 }
@___asan_gen_.720 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3132, i32 2 }
@___asan_gen_.723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3133, i32 2 }
@___asan_gen_.726 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3134, i32 2 }
@___asan_gen_.729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3135, i32 2 }
@___asan_gen_.732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3136, i32 2 }
@___asan_gen_.735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3137, i32 2 }
@___asan_gen_.738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3138, i32 2 }
@___asan_gen_.741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3139, i32 2 }
@___asan_gen_.744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3264, i32 16 }
@___asan_gen_.747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3187, i32 17 }
@___asan_gen_.750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3193, i32 15 }
@___asan_gen_.753 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3825, i32 4 }
@___asan_gen_.756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3843, i32 4 }
@___asan_gen_.762 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3493, i32 3 }
@___asan_gen_.765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3503, i32 3 }
@___asan_gen_.768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3510, i32 3 }
@___asan_gen_.771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3517, i32 3 }
@___asan_gen_.774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3525, i32 3 }
@___asan_gen_.777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3597, i32 3 }
@___asan_gen_.780 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3630, i32 4 }
@___asan_gen_.783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 3637, i32 4 }
@___asan_gen_.784 = private unnamed_addr constant [13 x i8] c"enable_owner\00", align 1
@___asan_gen_.786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 31, i32 28 }
@___asan_gen_.787 = private unnamed_addr constant [14 x i8] c"enable_refcnt\00", align 1
@___asan_gen_.789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 34, i32 12 }
@___asan_gen_.795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4553, i32 8 }
@___asan_gen_.798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4850, i32 41 }
@___asan_gen_.799 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.800 = private constant [21 x i8] c"../drivers/clk/clk.c\00", align 1
@___asan_gen_.801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.800, i32 4864, i32 34 }
@llvm.compiler.used = appending global [396 x ptr] [ptr @__bpf_trace_tp_map_clk_disable, ptr @__bpf_trace_tp_map_clk_disable_complete, ptr @__bpf_trace_tp_map_clk_enable, ptr @__bpf_trace_tp_map_clk_enable_complete, ptr @__bpf_trace_tp_map_clk_prepare, ptr @__bpf_trace_tp_map_clk_prepare_complete, ptr @__bpf_trace_tp_map_clk_set_duty_cycle, ptr @__bpf_trace_tp_map_clk_set_duty_cycle_complete, ptr @__bpf_trace_tp_map_clk_set_max_rate, ptr @__bpf_trace_tp_map_clk_set_min_rate, ptr @__bpf_trace_tp_map_clk_set_parent, ptr @__bpf_trace_tp_map_clk_set_parent_complete, ptr @__bpf_trace_tp_map_clk_set_phase, ptr @__bpf_trace_tp_map_clk_set_phase_complete, ptr @__bpf_trace_tp_map_clk_set_rate, ptr @__bpf_trace_tp_map_clk_set_rate_complete, ptr @__bpf_trace_tp_map_clk_set_rate_range, ptr @__bpf_trace_tp_map_clk_unprepare, ptr @__bpf_trace_tp_map_clk_unprepare_complete, ptr @__clk_core_init._entry, ptr @__clk_core_init._entry.137, ptr @__clk_core_init._entry.140, ptr @__clk_core_init._entry.143, ptr @__clk_core_init._entry.146, ptr @__clk_core_init._entry.149, ptr @__clk_core_init._entry.152, ptr @__clk_core_init._entry_ptr, ptr @__clk_core_init._entry_ptr.139, ptr @__clk_core_init._entry_ptr.142, ptr @__clk_core_init._entry_ptr.145, ptr @__clk_core_init._entry_ptr.148, ptr @__clk_core_init._entry_ptr.151, ptr @__clk_core_init._entry_ptr.154, ptr @__clk_of_table_sentinel, ptr @__event_clk_disable, ptr @__event_clk_disable_complete, ptr @__event_clk_enable, ptr @__event_clk_enable_complete, ptr @__event_clk_prepare, ptr @__event_clk_prepare_complete, ptr @__event_clk_set_duty_cycle, ptr @__event_clk_set_duty_cycle_complete, ptr @__event_clk_set_max_rate, ptr @__event_clk_set_min_rate, ptr @__event_clk_set_parent, ptr @__event_clk_set_parent_complete, ptr @__event_clk_set_phase, ptr @__event_clk_set_phase_complete, ptr @__event_clk_set_rate, ptr @__event_clk_set_rate_complete, ptr @__event_clk_set_rate_range, ptr @__event_clk_unprepare, ptr @__event_clk_unprepare_complete, ptr @__initcall__kmod_clk__353_1321_clk_disable_unused7s, ptr @__initcall__kmod_clk__359_3427_clk_debug_init7, ptr @__ksymtab___clk_determine_rate, ptr @__ksymtab___clk_get_hw, ptr @__ksymtab___clk_get_name, ptr @__ksymtab___clk_is_enabled, ptr @__ksymtab___clk_mux_determine_rate, ptr @__ksymtab___clk_mux_determine_rate_closest, ptr @__ksymtab_clk_disable, ptr @__ksymtab_clk_enable, ptr @__ksymtab_clk_gate_restore_context, ptr @__ksymtab_clk_get_accuracy, ptr @__ksymtab_clk_get_parent, ptr @__ksymtab_clk_get_phase, ptr @__ksymtab_clk_get_rate, ptr @__ksymtab_clk_get_scaled_duty_cycle, ptr @__ksymtab_clk_has_parent, ptr @__ksymtab_clk_hw_get_clk, ptr @__ksymtab_clk_hw_get_flags, ptr @__ksymtab_clk_hw_get_name, ptr @__ksymtab_clk_hw_get_num_parents, ptr @__ksymtab_clk_hw_get_parent, ptr @__ksymtab_clk_hw_get_parent_by_index, ptr @__ksymtab_clk_hw_get_parent_index, ptr @__ksymtab_clk_hw_get_rate, ptr @__ksymtab_clk_hw_is_enabled, ptr @__ksymtab_clk_hw_is_prepared, ptr @__ksymtab_clk_hw_rate_is_protected, ptr @__ksymtab_clk_hw_register, ptr @__ksymtab_clk_hw_round_rate, ptr @__ksymtab_clk_hw_set_parent, ptr @__ksymtab_clk_hw_set_rate_range, ptr @__ksymtab_clk_hw_unregister, ptr @__ksymtab_clk_is_enabled_when_prepared, ptr @__ksymtab_clk_is_match, ptr @__ksymtab_clk_mux_determine_rate_flags, ptr @__ksymtab_clk_notifier_register, ptr @__ksymtab_clk_notifier_unregister, ptr @__ksymtab_clk_prepare, ptr @__ksymtab_clk_rate_exclusive_get, ptr @__ksymtab_clk_rate_exclusive_put, ptr @__ksymtab_clk_register, ptr @__ksymtab_clk_restore_context, ptr @__ksymtab_clk_round_rate, ptr @__ksymtab_clk_save_context, ptr @__ksymtab_clk_set_duty_cycle, ptr @__ksymtab_clk_set_max_rate, ptr @__ksymtab_clk_set_min_rate, ptr @__ksymtab_clk_set_parent, ptr @__ksymtab_clk_set_phase, ptr @__ksymtab_clk_set_rate, ptr @__ksymtab_clk_set_rate_exclusive, ptr @__ksymtab_clk_set_rate_range, ptr @__ksymtab_clk_unprepare, ptr @__ksymtab_clk_unregister, ptr @__ksymtab_devm_clk_hw_get_clk, ptr @__ksymtab_devm_clk_hw_register, ptr @__ksymtab_devm_clk_hw_unregister, ptr @__ksymtab_devm_clk_notifier_register, ptr @__ksymtab_devm_clk_register, ptr @__ksymtab_devm_clk_unregister, ptr @__ksymtab_devm_of_clk_add_hw_provider, ptr @__ksymtab_devm_of_clk_del_provider, ptr @__ksymtab_of_clk_add_hw_provider, ptr @__ksymtab_of_clk_add_provider, ptr @__ksymtab_of_clk_del_provider, ptr @__ksymtab_of_clk_get, ptr @__ksymtab_of_clk_get_by_name, ptr @__ksymtab_of_clk_get_from_provider, ptr @__ksymtab_of_clk_get_parent_count, ptr @__ksymtab_of_clk_get_parent_name, ptr @__ksymtab_of_clk_hw_onecell_get, ptr @__ksymtab_of_clk_hw_register, ptr @__ksymtab_of_clk_hw_simple_get, ptr @__ksymtab_of_clk_parent_fill, ptr @__ksymtab_of_clk_src_onecell_get, ptr @__ksymtab_of_clk_src_simple_get, ptr @__setup_clk_ignore_unused_setup, ptr @__tracepoint_clk_disable, ptr @__tracepoint_clk_disable_complete, ptr @__tracepoint_clk_enable, ptr @__tracepoint_clk_enable_complete, ptr @__tracepoint_clk_prepare, ptr @__tracepoint_clk_prepare_complete, ptr @__tracepoint_clk_set_duty_cycle, ptr @__tracepoint_clk_set_duty_cycle_complete, ptr @__tracepoint_clk_set_max_rate, ptr @__tracepoint_clk_set_min_rate, ptr @__tracepoint_clk_set_parent, ptr @__tracepoint_clk_set_parent_complete, ptr @__tracepoint_clk_set_phase, ptr @__tracepoint_clk_set_phase_complete, ptr @__tracepoint_clk_set_rate, ptr @__tracepoint_clk_set_rate_complete, ptr @__tracepoint_clk_set_rate_range, ptr @__tracepoint_clk_unprepare, ptr @__tracepoint_clk_unprepare_complete, ptr @__tracepoint_ptr_clk_disable, ptr @__tracepoint_ptr_clk_disable_complete, ptr @__tracepoint_ptr_clk_enable, ptr @__tracepoint_ptr_clk_enable_complete, ptr @__tracepoint_ptr_clk_prepare, ptr @__tracepoint_ptr_clk_prepare_complete, ptr @__tracepoint_ptr_clk_set_duty_cycle, ptr @__tracepoint_ptr_clk_set_duty_cycle_complete, ptr @__tracepoint_ptr_clk_set_max_rate, ptr @__tracepoint_ptr_clk_set_min_rate, ptr @__tracepoint_ptr_clk_set_parent, ptr @__tracepoint_ptr_clk_set_parent_complete, ptr @__tracepoint_ptr_clk_set_phase, ptr @__tracepoint_ptr_clk_set_phase_complete, ptr @__tracepoint_ptr_clk_set_rate, ptr @__tracepoint_ptr_clk_set_rate_complete, ptr @__tracepoint_ptr_clk_set_rate_range, ptr @__tracepoint_ptr_clk_unprepare, ptr @__tracepoint_ptr_clk_unprepare_complete, ptr @clk_disable_unused._entry, ptr @clk_disable_unused._entry_ptr, ptr @clk_set_rate_range._entry, ptr @clk_set_rate_range._entry_ptr, ptr @clk_unregister._entry, ptr @clk_unregister._entry.5, ptr @clk_unregister._entry.8, ptr @clk_unregister._entry_ptr, ptr @clk_unregister._entry_ptr.10, ptr @clk_unregister._entry_ptr.7, ptr @event_class_clk, ptr @event_class_clk_duty_cycle, ptr @event_class_clk_parent, ptr @event_class_clk_phase, ptr @event_class_clk_rate, ptr @event_class_clk_rate_range, ptr @event_clk_disable, ptr @event_clk_disable_complete, ptr @event_clk_enable, ptr @event_clk_enable_complete, ptr @event_clk_prepare, ptr @event_clk_prepare_complete, ptr @event_clk_set_duty_cycle, ptr @event_clk_set_duty_cycle_complete, ptr @event_clk_set_max_rate, ptr @event_clk_set_min_rate, ptr @event_clk_set_parent, ptr @event_clk_set_parent_complete, ptr @event_clk_set_phase, ptr @event_clk_set_phase_complete, ptr @event_clk_set_rate, ptr @event_clk_set_rate_complete, ptr @event_clk_set_rate_range, ptr @event_clk_unprepare, ptr @event_clk_unprepare_complete, ptr @of_clk_hw_onecell_get._entry, ptr @of_clk_hw_onecell_get._entry_ptr, ptr @of_clk_src_onecell_get._entry, ptr @of_clk_src_onecell_get._entry_ptr, ptr @str__clk__trace_system_name, ptr @trace_event_fields_clk, ptr @trace_event_type_funcs_clk, ptr @print_fmt_clk, ptr @trace_event_fields_clk_rate, ptr @trace_event_type_funcs_clk_rate, ptr @print_fmt_clk_rate, ptr @trace_event_fields_clk_rate_range, ptr @trace_event_type_funcs_clk_rate_range, ptr @print_fmt_clk_rate_range, ptr @trace_event_fields_clk_parent, ptr @trace_event_type_funcs_clk_parent, ptr @print_fmt_clk_parent, ptr @trace_event_fields_clk_phase, ptr @trace_event_type_funcs_clk_phase, ptr @print_fmt_clk_phase, ptr @trace_event_fields_clk_duty_cycle, ptr @trace_event_type_funcs_clk_duty_cycle, ptr @print_fmt_clk_duty_cycle, ptr @.str, ptr @clk_root_list, ptr @clk_orphan_list, ptr @.str.1, ptr @.str.2, ptr @clk_nodrv_ops, ptr @.str.3, ptr @.str.4, ptr @.str.6, ptr @.str.9, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @clk_notifier_list, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @of_clk_mutex, ptr @of_clk_providers, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @prepare_lock, ptr @prepare_owner, ptr @prepare_refcnt, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @enable_lock, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @rootdir, ptr @.str.75, ptr @all_lists, ptr @clk_summary_fops, ptr @.str.76, ptr @clk_dump_fops, ptr @.str.77, ptr @orphan_list, ptr @.str.78, ptr @clk_debug_lock, ptr @clk_debug_list, ptr @inited, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @clk_rate_fops, ptr @.str.102, ptr @clk_min_rate_fops, ptr @.str.103, ptr @clk_max_rate_fops, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @clk_flags_fops, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @clk_duty_cycle_fops, ptr @.str.112, ptr @current_parent_fops, ptr @.str.113, ptr @possible_parents_fops, ptr @.str.114, ptr @.str.115, ptr @clk_flags, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.138, ptr @.str.141, ptr @.str.144, ptr @.str.147, ptr @.str.150, ptr @.str.153, ptr @enable_owner, ptr @enable_refcnt, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160], section "llvm.metadata"
@0 = internal global [214 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__clk__trace_system_name to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_clk to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.165 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_clk to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.168 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_clk to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.171 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_enable to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_enable_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_disable to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_disable_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_prepare to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_prepare_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_unprepare to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_unprepare_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_clk_rate to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_clk_rate to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_clk_rate to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_rate to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_rate_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_min_rate to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_max_rate to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_clk_rate_range to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_clk_rate_range to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_clk_rate_range to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_rate_range to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_clk_parent to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_clk_parent to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_clk_parent to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_parent to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_parent_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_clk_phase to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.246 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_clk_phase to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_clk_phase to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_phase to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_phase_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_clk_duty_cycle to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_clk_duty_cycle to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_clk_duty_cycle to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_duty_cycle to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_clk_set_duty_cycle_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_root_list to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_orphan_list to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_set_rate_range._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_nodrv_ops to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_unregister._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_unregister._entry.5 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_unregister._entry.8 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_notifier_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_clk_src_onecell_get._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_clk_hw_onecell_get._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_clk_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_clk_providers to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @prepare_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @prepare_owner to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @prepare_refcnt to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @enable_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_disable_unused._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rootdir to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @all_lists to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_summary_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_dump_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @orphan_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_debug_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_debug_list to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @inited to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 105, i32 160, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 105, i32 160, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 105, i32 160, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_rate_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_min_rate_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_max_rate_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_flags_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_duty_cycle_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @current_parent_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @possible_parents_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clk_flags to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @enable_owner to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @enable_refcnt to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_enable(ptr nocapture readnone %__data, ptr noundef %core) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_enable, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_enable_complete(ptr nocapture readnone %__data, ptr noundef %core) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_enable_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_disable(ptr nocapture readnone %__data, ptr noundef %core) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_disable_complete(ptr nocapture readnone %__data, ptr noundef %core) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_prepare(ptr nocapture readnone %__data, ptr noundef %core) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_prepare, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_prepare_complete(ptr nocapture readnone %__data, ptr noundef %core) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_prepare_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_unprepare(ptr nocapture readnone %__data, ptr noundef %core) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_unprepare, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_unprepare_complete(ptr nocapture readnone %__data, ptr noundef %core) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_unprepare_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_rate(ptr nocapture readnone %__data, ptr noundef %core, i32 noundef %rate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, i32 noundef %rate) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_rate_complete(ptr nocapture readnone %__data, ptr noundef %core, i32 noundef %rate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, i32 noundef %rate) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_min_rate(ptr nocapture readnone %__data, ptr noundef %core, i32 noundef %rate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_min_rate, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, i32 noundef %rate) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_max_rate(ptr nocapture readnone %__data, ptr noundef %core, i32 noundef %rate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_max_rate, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, i32 noundef %rate) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_rate_range(ptr nocapture readnone %__data, ptr noundef %core, i32 noundef %min, i32 noundef %max) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate_range, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, i32 noundef %min, i32 noundef %max) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_parent(ptr nocapture readnone %__data, ptr noundef %core, ptr noundef %parent) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_parent, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, ptr noundef %parent) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_parent_complete(ptr nocapture readnone %__data, ptr noundef %core, ptr noundef %parent) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_parent_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, ptr noundef %parent) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_phase(ptr nocapture readnone %__data, ptr noundef %core, i32 noundef %phase) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_phase, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, i32 noundef %phase) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_phase_complete(ptr nocapture readnone %__data, ptr noundef %core, i32 noundef %phase) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_phase_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, i32 noundef %phase) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_duty_cycle(ptr nocapture readnone %__data, ptr noundef %core, ptr noundef %duty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_duty_cycle, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, ptr noundef %duty) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_clk_set_duty_cycle_complete(ptr nocapture readnone %__data, ptr noundef %core, ptr noundef %duty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_duty_cycle_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %core, ptr noundef %duty) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_clk(ptr noundef %__data, ptr nocapture noundef readonly %core) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !753

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !754

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %3 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %core, align 4
  %tobool.not.i21 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i21, ptr @.str.30, ptr %4
  %call.i22 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add = add i32 %call.i22, 13
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %add.i = shl i32 %call.i22, 16
  %or.i = add i32 %add.i, 65548
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 12
  %6 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %core, align 4
  %tobool8.not = icmp eq ptr %7, null
  %spec.select = select i1 %tobool8.not, ptr @.str.30, ptr %7
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_clk(ptr noundef %__data, ptr nocapture noundef readonly %core) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !755
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !755
  %2 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %core, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.30, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65548
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i45.not = icmp eq ptr %17, null
  br i1 %tobool.not.i45.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 24
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #21
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !743) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 12
  %30 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %core, align 4
  %tobool20.not = icmp eq ptr %31, null
  %spec.select = select i1 %tobool20.not, ptr @.str.30, ptr %31
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %13, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_clk_rate(ptr noundef %__data, ptr nocapture noundef readonly %core, i32 noundef %rate) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !753

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !754

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %3 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %core, align 4
  %tobool.not.i24 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i24, ptr @.str.30, ptr %4
  %call.i25 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add = add i32 %call.i25, 17
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %add.i = shl i32 %call.i25, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_rate, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %6 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %core, align 4
  %tobool8.not = icmp eq ptr %7, null
  %spec.select = select i1 %tobool8.not, ptr @.str.30, ptr %7
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %rate11 = getelementptr inbounds %struct.trace_event_raw_clk_rate, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %rate11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %rate, ptr %rate11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_clk_rate(ptr noundef %__data, ptr nocapture noundef readonly %core, i32 noundef %rate) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !755
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !755
  %2 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %core, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.30, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65552
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i48.not = icmp eq ptr %17, null
  br i1 %tobool.not.i48.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 28
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #21
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !743) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_rate, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %30 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %core, align 4
  %tobool20.not = icmp eq ptr %31, null
  %spec.select = select i1 %tobool20.not, ptr @.str.30, ptr %31
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %rate23 = getelementptr inbounds %struct.trace_event_raw_clk_rate, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %rate23 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %rate, ptr %rate23, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %13, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_clk_rate_range(ptr noundef %__data, ptr nocapture noundef readonly %core, i32 noundef %min, i32 noundef %max) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !753

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !754

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %3 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %core, align 4
  %tobool.not.i27 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i27, ptr @.str.30, ptr %4
  %call.i28 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add = add i32 %call.i28, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %add.i = shl i32 %call.i28, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_rate_range, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %6 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %core, align 4
  %tobool8.not = icmp eq ptr %7, null
  %spec.select = select i1 %tobool8.not, ptr @.str.30, ptr %7
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %min11 = getelementptr inbounds %struct.trace_event_raw_clk_rate_range, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %min11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %min, ptr %min11, align 4
  %max12 = getelementptr inbounds %struct.trace_event_raw_clk_rate_range, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %max12 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %max, ptr %max12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_clk_rate_range(ptr noundef %__data, ptr nocapture noundef readonly %core, i32 noundef %min, i32 noundef %max) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !755
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !755
  %2 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %core, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.30, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i51.not = icmp eq ptr %17, null
  br i1 %tobool.not.i51.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #21
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !743) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_rate_range, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %30 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %core, align 4
  %tobool20.not = icmp eq ptr %31, null
  %spec.select = select i1 %tobool20.not, ptr @.str.30, ptr %31
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %min23 = getelementptr inbounds %struct.trace_event_raw_clk_rate_range, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %min23 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %min, ptr %min23, align 4
  %max24 = getelementptr inbounds %struct.trace_event_raw_clk_rate_range, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %max24 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %max, ptr %max24, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %13, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_clk_parent(ptr noundef %__data, ptr nocapture noundef readonly %core, ptr noundef readonly %parent) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !753

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !754

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %3 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %core, align 4
  %tobool.not.i47 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i47, ptr @.str.30, ptr %4
  %call.i48 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add.i = shl i32 %call.i48, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 16
  %tobool7.not.i = icmp eq ptr %parent, null
  br i1 %tobool7.not.i, label %if.end.trace_event_get_offsets_clk_parent.exit_crit_edge, label %cond.true8.i

if.end.trace_event_get_offsets_clk_parent.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %trace_event_get_offsets_clk_parent.exit

cond.true8.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %5 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent, align 4
  %tobool10.not.i = icmp eq ptr %6, null
  %spec.select44.i = select i1 %tobool10.not.i, ptr @.str.30, ptr %6
  br label %trace_event_get_offsets_clk_parent.exit

trace_event_get_offsets_clk_parent.exit:          ; preds = %cond.true8.i, %if.end.trace_event_get_offsets_clk_parent.exit_crit_edge
  %cond21.i = phi ptr [ @.str.40, %if.end.trace_event_get_offsets_clk_parent.exit_crit_edge ], [ %spec.select44.i, %cond.true8.i ]
  %call22.i = tail call i32 @strlen(ptr noundef nonnull %cond21.i) #24
  %add23.i = add i32 %call22.i, 1
  %add29.i = add i32 %call.i48, 17
  %add = add i32 %add29.i, %add23.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_clk_parent.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_clk_parent.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_clk_parent.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_clk_parent.exit
  %shl26.i = shl i32 %add23.i, 16
  %or28.i = or i32 %shl26.i, %add29.i
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_parent, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %__data_loc_pname = getelementptr inbounds %struct.trace_event_raw_clk_parent, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %__data_loc_pname to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or28.i, ptr %__data_loc_pname, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %9 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %core, align 4
  %tobool8.not = icmp eq ptr %10, null
  %spec.select = select i1 %tobool8.not, ptr @.str.30, ptr %10
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %and12 = and i32 %add29.i, 65535
  %add.ptr13 = getelementptr i8, ptr %call3, i32 %and12
  br i1 %tobool7.not.i, label %if.end5.cond.end27_crit_edge, label %cond.true15

if.end5.cond.end27_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end27

cond.true15:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %parent, align 4
  %tobool17.not = icmp eq ptr %12, null
  %spec.select50 = select i1 %tobool17.not, ptr @.str.30, ptr %12
  br label %cond.end27

cond.end27:                                       ; preds = %cond.true15, %if.end5.cond.end27_crit_edge
  %cond28 = phi ptr [ @.str.40, %if.end5.cond.end27_crit_edge ], [ %spec.select50, %cond.true15 ]
  %call29 = call ptr @strcpy(ptr noundef %add.ptr13, ptr noundef nonnull %cond28) #25
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %cond.end27, %trace_event_get_offsets_clk_parent.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_clk_parent(ptr noundef %__data, ptr nocapture noundef readonly %core, ptr noundef readonly %parent) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !755
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !755
  %2 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %core, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.30, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 16
  %tobool7.not.i = icmp eq ptr %parent, null
  br i1 %tobool7.not.i, label %entry.trace_event_get_offsets_clk_parent.exit_crit_edge, label %cond.true8.i

entry.trace_event_get_offsets_clk_parent.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %trace_event_get_offsets_clk_parent.exit

cond.true8.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 4
  %tobool10.not.i = icmp eq ptr %5, null
  %spec.select44.i = select i1 %tobool10.not.i, ptr @.str.30, ptr %5
  br label %trace_event_get_offsets_clk_parent.exit

trace_event_get_offsets_clk_parent.exit:          ; preds = %cond.true8.i, %entry.trace_event_get_offsets_clk_parent.exit_crit_edge
  %cond21.i = phi ptr [ @.str.40, %entry.trace_event_get_offsets_clk_parent.exit_crit_edge ], [ %spec.select44.i, %cond.true8.i ]
  %call22.i = tail call i32 @strlen(ptr noundef nonnull %cond21.i) #24
  %add23.i = add i32 %call22.i, 1
  %add25.i = add i32 %call.i, 17
  %shl26.i = shl i32 %add23.i, 16
  %or28.i = or i32 %shl26.i, %add25.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_clk_parent.exit.if.end_crit_edge

trace_event_get_offsets_clk_parent.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_clk_parent.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_clk_parent.exit
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i71.not = icmp eq ptr %19, null
  br i1 %tobool.not.i71.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_clk_parent.exit.if.end_crit_edge
  %add29.i = add i32 %call.i, 28
  %add12 = add i32 %add29.i, %add23.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #21
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !743) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_parent, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %__data_loc_pname = getelementptr inbounds %struct.trace_event_raw_clk_parent, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %__data_loc_pname to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or28.i, ptr %__data_loc_pname, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %33 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %core, align 4
  %tobool20.not = icmp eq ptr %34, null
  %spec.select = select i1 %tobool20.not, ptr @.str.30, ptr %34
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %and24 = and i32 %add25.i, 65535
  %add.ptr25 = getelementptr i8, ptr %call13, i32 %and24
  br i1 %tobool7.not.i, label %if.end16.cond.end39_crit_edge, label %cond.true27

if.end16.cond.end39_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end39

cond.true27:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %parent, align 4
  %tobool29.not = icmp eq ptr %36, null
  %spec.select72 = select i1 %tobool29.not, ptr @.str.30, ptr %36
  br label %cond.end39

cond.end39:                                       ; preds = %cond.true27, %if.end16.cond.end39_crit_edge
  %cond40 = phi ptr [ @.str.40, %if.end16.cond.end39_crit_edge ], [ %spec.select72, %cond.true27 ]
  %call41 = call ptr @strcpy(ptr noundef %add.ptr25, ptr noundef nonnull %cond40) #25
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %15, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %cond.end39, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_clk_phase(ptr noundef %__data, ptr nocapture noundef readonly %core, i32 noundef %phase) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !753

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !754

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %3 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %core, align 4
  %tobool.not.i24 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i24, ptr @.str.30, ptr %4
  %call.i25 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add = add i32 %call.i25, 17
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %add.i = shl i32 %call.i25, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_phase, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %6 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %core, align 4
  %tobool8.not = icmp eq ptr %7, null
  %spec.select = select i1 %tobool8.not, ptr @.str.30, ptr %7
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %phase11 = getelementptr inbounds %struct.trace_event_raw_clk_phase, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %phase11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %phase, ptr %phase11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_clk_phase(ptr noundef %__data, ptr nocapture noundef readonly %core, i32 noundef %phase) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !755
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !755
  %2 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %core, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.30, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65552
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i48.not = icmp eq ptr %17, null
  br i1 %tobool.not.i48.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 28
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #21
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !743) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_phase, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %30 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %core, align 4
  %tobool20.not = icmp eq ptr %31, null
  %spec.select = select i1 %tobool20.not, ptr @.str.30, ptr %31
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %phase23 = getelementptr inbounds %struct.trace_event_raw_clk_phase, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %phase23 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %phase, ptr %phase23, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %13, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_clk_duty_cycle(ptr noundef %__data, ptr nocapture noundef readonly %core, ptr nocapture noundef readonly %duty) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !753

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !754

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %3 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %core, align 4
  %tobool.not.i27 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i27, ptr @.str.30, ptr %4
  %call.i28 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add = add i32 %call.i28, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %add.i = shl i32 %call.i28, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_duty_cycle, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %6 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %core, align 4
  %tobool8.not = icmp eq ptr %7, null
  %spec.select = select i1 %tobool8.not, ptr @.str.30, ptr %7
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %8 = ptrtoint ptr %duty to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %duty, align 4
  %num11 = getelementptr inbounds %struct.trace_event_raw_clk_duty_cycle, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %num11 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %num11, align 4
  %den = getelementptr inbounds %struct.clk_duty, ptr %duty, i32 0, i32 1
  %11 = ptrtoint ptr %den to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %den, align 4
  %den12 = getelementptr inbounds %struct.trace_event_raw_clk_duty_cycle, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %den12 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %den12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_clk_duty_cycle(ptr noundef %__data, ptr nocapture noundef readonly %core, ptr nocapture noundef readonly %duty) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !755
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !755
  %2 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %core, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.30, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #24
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i51.not = icmp eq ptr %17, null
  br i1 %tobool.not.i51.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #21
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !743) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_duty_cycle, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %30 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %core, align 4
  %tobool20.not = icmp eq ptr %31, null
  %spec.select = select i1 %tobool20.not, ptr @.str.30, ptr %31
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %32 = ptrtoint ptr %duty to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %duty, align 4
  %num23 = getelementptr inbounds %struct.trace_event_raw_clk_duty_cycle, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %num23 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %num23, align 4
  %den = getelementptr inbounds %struct.clk_duty, ptr %duty, i32 0, i32 1
  %35 = ptrtoint ptr %den to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %den, align 4
  %den24 = getelementptr inbounds %struct.trace_event_raw_clk_duty_cycle, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %den24 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %den24, align 4
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %13, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_clk(ptr noundef %__data, ptr noundef %core) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %core to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_clk_rate(ptr noundef %__data, ptr noundef %core, i32 noundef %rate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %core to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %rate to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_clk_rate_range(ptr noundef %__data, ptr noundef %core, i32 noundef %min, i32 noundef %max) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %core to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %min to i64
  %conv8 = zext i32 %max to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_clk_parent(ptr noundef %__data, ptr noundef %core, ptr noundef %parent) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %core to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %parent to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_clk_phase(ptr noundef %__data, ptr noundef %core, i32 noundef %phase) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %core to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %phase to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_clk_duty_cycle(ptr noundef %__data, ptr noundef %core, ptr noundef %duty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %core to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %duty to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #21
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @__clk_get_name(ptr noundef readonly %clk) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.false

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %cond = phi ptr [ %3, %cond.false ], [ null, %entry.cond.end_crit_edge ]
  ret ptr %cond
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @clk_hw_get_name(ptr nocapture noundef readonly %hw) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @__clk_get_hw(ptr noundef readonly %clk) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.false

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %hw = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %cond = phi ptr [ %3, %cond.false ], [ null, %entry.cond.end_crit_edge ]
  ret ptr %cond
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @clk_hw_get_num_parents(ptr nocapture noundef readonly %hw) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %num_parents, align 4
  %conv = zext i8 %3 to i32
  ret i32 %conv
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @clk_hw_get_parent(ptr nocapture noundef readonly %hw) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %parent = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %hw3 = getelementptr inbounds %struct.clk_core, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %hw3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw3, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi ptr [ %5, %cond.true ], [ null, %entry.cond.end_crit_edge ]
  ret ptr %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @clk_hw_get_parent_by_index(ptr nocapture noundef readonly %hw, i32 noundef %index) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %conv = trunc i32 %index to i8
  %call = tail call fastcc ptr @clk_core_get_parent_by_index(ptr noundef %1, i8 noundef zeroext %conv)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.false

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %hw1 = getelementptr inbounds %struct.clk_core, ptr %call, i32 0, i32 2
  %2 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw1, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %cond = phi ptr [ %3, %cond.false ], [ null, %entry.cond.end_crit_edge ]
  ret ptr %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @clk_core_get_parent_by_index(ptr noundef readonly %core, i8 noundef zeroext %index) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %core, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %conv = zext i8 %index to i32
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 8
  %0 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %1, i8 %index)
  %cmp.not = icmp ugt i8 %1, %index
  br i1 %cmp.not, label %lor.lhs.false3, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 7
  %2 = ptrtoint ptr %parents to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parents, align 4
  %tobool4.not = icmp eq ptr %3, null
  br i1 %tobool4.not, label %lor.lhs.false3.return_crit_edge, label %if.end

lor.lhs.false3.return_crit_edge:                  ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %lor.lhs.false3
  %core6 = getelementptr %struct.clk_parent_map, ptr %3, i32 %conv, i32 1
  %4 = ptrtoint ptr %core6 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %core6, align 4
  %tobool7.not = icmp eq ptr %5, null
  br i1 %tobool7.not, label %if.then8, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then8:                                         ; preds = %if.end
  %arrayidx.i = getelementptr %struct.clk_parent_map, ptr %3, i32 %conv
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  br label %if.end9.i

if.else.i:                                        ; preds = %if.then8
  %call.i = tail call fastcc ptr @clk_core_get(ptr noundef nonnull %core, i8 noundef zeroext %index) #21
  %cmp.i = icmp eq ptr %call.i, inttoptr (i32 -2 to ptr)
  br i1 %cmp.i, label %land.lhs.true.i, label %if.else.i.if.end9.i_crit_edge

if.else.i.if.end9.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i

land.lhs.true.i:                                  ; preds = %if.else.i
  %name.i = getelementptr %struct.clk_parent_map, ptr %3, i32 %conv, i32 3
  %10 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %name.i, align 4
  %tobool5.not.i = icmp eq ptr %11, null
  br i1 %tobool5.not.i, label %land.lhs.true.i.if.end9_crit_edge, label %if.end.i.i

land.lhs.true.i.if.end9_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.end.i.i:                                       ; preds = %land.lhs.true.i
  %12 = load ptr, ptr @clk_root_list, align 4
  %tobool1.not.i.i = icmp eq ptr %12, null
  %add.ptr.i.i = getelementptr i8, ptr %12, i32 -104
  %tobool3.not7683.i.i = icmp eq ptr %add.ptr.i.i, null
  %tobool3.not76.i.i = or i1 %tobool1.not.i.i, %tobool3.not7683.i.i
  br i1 %tobool3.not76.i.i, label %if.end.i.i.for.end.i.i_crit_edge, label %if.end.i.i.for.body.i.i_crit_edge

if.end.i.i.for.body.i.i_crit_edge:                ; preds = %if.end.i.i
  br label %for.body.i.i

if.end.i.i.for.end.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.end.i.i.for.body.i.i_crit_edge
  %root_clk.077.i.i = phi ptr [ %add.ptr13.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %add.ptr.i.i, %if.end.i.i.for.body.i.i_crit_edge ]
  %call.i.i = tail call fastcc ptr @__clk_lookup_subtree(ptr noundef nonnull %11, ptr noundef nonnull %root_clk.077.i.i) #21
  %tobool4.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool4.not.i.i, label %for.inc.i.i, label %for.body.i.i.if.end13.i_crit_edge

for.body.i.i.if.end13.i_crit_edge:                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end13.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %child_node.i.i = getelementptr inbounds %struct.clk_core, ptr %root_clk.077.i.i, i32 0, i32 27
  %13 = ptrtoint ptr %child_node.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %child_node.i.i, align 4
  %tobool9.not.i.i = icmp eq ptr %14, null
  %add.ptr13.i.i = getelementptr i8, ptr %14, i32 -104
  %tobool3.not87.i.i = icmp eq ptr %add.ptr13.i.i, null
  %tobool3.not.i.i = or i1 %tobool9.not.i.i, %tobool3.not87.i.i
  br i1 %tobool3.not.i.i, label %for.inc.i.i.for.end.i.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.inc.i.i.for.end.i.i_crit_edge:                ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i.for.end.i.i_crit_edge, %if.end.i.i.for.end.i.i_crit_edge
  %15 = load ptr, ptr @clk_orphan_list, align 4
  %tobool19.not.i.i = icmp eq ptr %15, null
  %add.ptr23.i.i = getelementptr i8, ptr %15, i32 -104
  %tobool28.not7884.i.i = icmp eq ptr %add.ptr23.i.i, null
  %tobool28.not78.i.i = or i1 %tobool19.not.i.i, %tobool28.not7884.i.i
  br i1 %tobool28.not78.i.i, label %for.end.i.i.if.end9_crit_edge, label %for.end.i.i.for.body29.i.i_crit_edge

for.end.i.i.for.body29.i.i_crit_edge:             ; preds = %for.end.i.i
  br label %for.body29.i.i

for.end.i.i.if.end9_crit_edge:                    ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

for.body29.i.i:                                   ; preds = %for.inc34.i.i.for.body29.i.i_crit_edge, %for.end.i.i.for.body29.i.i_crit_edge
  %root_clk.179.i.i = phi ptr [ %add.ptr43.i.i, %for.inc34.i.i.for.body29.i.i_crit_edge ], [ %add.ptr23.i.i, %for.end.i.i.for.body29.i.i_crit_edge ]
  %call30.i.i = tail call fastcc ptr @__clk_lookup_subtree(ptr noundef nonnull %11, ptr noundef nonnull %root_clk.179.i.i) #21
  %tobool31.not.i.i = icmp eq ptr %call30.i.i, null
  br i1 %tobool31.not.i.i, label %for.inc34.i.i, label %for.body29.i.i.if.end13.i_crit_edge

for.body29.i.i.if.end13.i_crit_edge:              ; preds = %for.body29.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end13.i

for.inc34.i.i:                                    ; preds = %for.body29.i.i
  %child_node36.i.i = getelementptr inbounds %struct.clk_core, ptr %root_clk.179.i.i, i32 0, i32 27
  %16 = ptrtoint ptr %child_node36.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %child_node36.i.i, align 4
  %tobool39.not.i.i = icmp eq ptr %17, null
  %add.ptr43.i.i = getelementptr i8, ptr %17, i32 -104
  %tobool28.not88.i.i = icmp eq ptr %add.ptr43.i.i, null
  %tobool28.not.i.i = or i1 %tobool39.not.i.i, %tobool28.not88.i.i
  br i1 %tobool28.not.i.i, label %for.inc34.i.i.if.end9_crit_edge, label %for.inc34.i.i.for.body29.i.i_crit_edge

for.inc34.i.i.for.body29.i.i_crit_edge:           ; preds = %for.inc34.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body29.i.i

for.inc34.i.i.if.end9_crit_edge:                  ; preds = %for.inc34.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.end9.i:                                        ; preds = %if.else.i.if.end9.i_crit_edge, %if.then.i
  %parent.0.i = phi ptr [ %9, %if.then.i ], [ %call.i, %if.else.i.if.end9.i_crit_edge ]
  %tobool10.not.i = icmp eq ptr %parent.0.i, null
  br i1 %tobool10.not.i, label %if.end9.i.if.end9_crit_edge, label %if.end9.i.if.end13.i_crit_edge

if.end9.i.if.end13.i_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end13.i

if.end9.i.if.end9_crit_edge:                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.end13.i:                                       ; preds = %if.end9.i.if.end13.i_crit_edge, %for.body29.i.i.if.end13.i_crit_edge, %for.body.i.i.if.end13.i_crit_edge
  %parent.1.i = phi ptr [ %parent.0.i, %if.end9.i.if.end13.i_crit_edge ], [ %call30.i.i, %for.body29.i.i.if.end13.i_crit_edge ], [ %call.i.i, %for.body.i.i.if.end13.i_crit_edge ]
  %cmp.i.i = icmp ugt ptr %parent.1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end13.i.if.end9_crit_edge, label %if.then15.i

if.end13.i.if.end9_crit_edge:                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then15.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %core6 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %parent.1.i, ptr %core6, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then15.i, %if.end13.i.if.end9_crit_edge, %if.end9.i.if.end9_crit_edge, %for.inc34.i.i.if.end9_crit_edge, %for.end.i.i.if.end9_crit_edge, %land.lhs.true.i.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %19 = ptrtoint ptr %parents to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %parents, align 4
  %core13 = getelementptr %struct.clk_parent_map, ptr %20, i32 %conv, i32 1
  %21 = ptrtoint ptr %core13 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %core13, align 4
  br label %return

return:                                           ; preds = %if.end9, %lor.lhs.false3.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi ptr [ %22, %if.end9 ], [ null, %lor.lhs.false3.return_crit_edge ], [ null, %lor.lhs.false.return_crit_edge ], [ null, %entry.return_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @__clk_get_enable_count(ptr noundef readonly %clk) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.false

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %enable_count = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %enable_count, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %cond = phi i32 [ %3, %cond.false ], [ 0, %entry.cond.end_crit_edge ]
  ret i32 %cond
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @clk_hw_get_rate(ptr nocapture noundef readonly %hw) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.clk_core_get_rate_nolock.exit_crit_edge, label %if.end.i

entry.clk_core_get_rate_nolock.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_nolock.exit

if.end.i:                                         ; preds = %entry
  %num_parents.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %num_parents.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %num_parents.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not.i = icmp eq i8 %3, 0
  br i1 %tobool1.not.i, label %if.end.i.if.then3.i_crit_edge, label %lor.lhs.false.i

if.end.i.if.then3.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge, label %lor.lhs.false.i.if.then3.i_crit_edge

lor.lhs.false.i.if.then3.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_nolock.exit

if.then3.i:                                       ; preds = %lor.lhs.false.i.if.then3.i_crit_edge, %if.end.i.if.then3.i_crit_edge
  %rate.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 10
  %6 = ptrtoint ptr %rate.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rate.i, align 4
  br label %clk_core_get_rate_nolock.exit

clk_core_get_rate_nolock.exit:                    ; preds = %if.then3.i, %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge, %entry.clk_core_get_rate_nolock.exit_crit_edge
  %retval.0.i = phi i32 [ %7, %if.then3.i ], [ 0, %entry.clk_core_get_rate_nolock.exit_crit_edge ], [ 0, %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @clk_hw_get_flags(ptr nocapture noundef readonly %hw) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %flags = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  ret i32 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @clk_hw_is_prepared(ptr nocapture noundef readonly %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %call = tail call fastcc zeroext i1 @clk_core_is_prepared(ptr noundef %1)
  ret i1 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @clk_core_is_prepared(ptr nocapture noundef readonly %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %0 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops, align 4
  %is_prepared = getelementptr inbounds %struct.clk_ops, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %is_prepared to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %is_prepared, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 19
  %4 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool1 = icmp ne i32 %5, 0
  br label %cleanup

if.end:                                           ; preds = %entry
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %6 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.i = icmp eq i8 %7, 0
  br i1 %tobool.not.i, label %if.end.if.then3_crit_edge, label %if.end.i

if.end.if.then3_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3

if.end.i:                                         ; preds = %if.end
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %8 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_resume(ptr noundef %9, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.then1.i, label %if.end.i.if.then3_crit_edge

if.end.i.if.then3_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3

if.then1.i:                                       ; preds = %if.end.i
  %10 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %11, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !757
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !758
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.then1.i.cleanup_crit_edge, label %do.end11.i.i.i.i.i

if.then1.i.cleanup_crit_edge:                     ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end11.i.i.i.i.i:                               ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !759
  br label %cleanup

if.then3:                                         ; preds = %if.end.i.if.then3_crit_edge, %if.end.if.then3_crit_edge
  %13 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops, align 4
  %is_prepared5 = getelementptr inbounds %struct.clk_ops, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %is_prepared5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %is_prepared5, align 4
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %call6 = tail call i32 %16(ptr noundef %18) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7 = icmp ne i32 %call6, 0
  %19 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.i16 = icmp eq i8 %20, 0
  br i1 %tobool.not.i16, label %if.then3.cleanup_crit_edge, label %if.end.i19

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i19:                                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i17 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %21 = ptrtoint ptr %dev.i17 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev.i17, align 4
  %call.i.i18 = tail call i32 @__pm_runtime_idle(ptr noundef %22, i32 noundef 4) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end.i19, %if.then3.cleanup_crit_edge, %do.end11.i.i.i.i.i, %if.then1.i.cleanup_crit_edge, %if.then
  %retval.0 = phi i1 [ %tobool1, %if.then ], [ false, %if.then1.i.cleanup_crit_edge ], [ false, %do.end11.i.i.i.i.i ], [ %tobool7, %if.then3.cleanup_crit_edge ], [ %tobool7, %if.end.i19 ]
  ret i1 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @clk_hw_rate_is_protected(ptr nocapture noundef readonly %hw) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 20
  %2 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i = icmp ne i32 %3, 0
  ret i1 %tobool.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @clk_hw_is_enabled(ptr nocapture noundef readonly %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %ops.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.clk_ops, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %is_enabled.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %enable_count.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 18
  %6 = ptrtoint ptr %enable_count.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %enable_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool1.i = icmp ne i32 %7, 0
  br label %clk_core_is_enabled.exit

if.end.i:                                         ; preds = %entry
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 17
  %8 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool2.not.i = icmp eq i8 %9, 0
  br i1 %tobool2.not.i, label %if.end.i.if.end7.i_crit_edge, label %if.then3.i

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.then3.i:                                       ; preds = %if.end.i
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %11, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !760
  %13 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev.i, align 4
  %runtime_status.i.i = getelementptr inbounds %struct.device, ptr %14, i32 0, i32 12, i32 18
  %15 = ptrtoint ptr %runtime_status.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %runtime_status.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.i.i = icmp eq i32 %16, 0
  br i1 %cmp.i.i, label %if.then3.i.if.end7.i_crit_edge, label %pm_runtime_active.exit.i

if.then3.i.if.end7.i_crit_edge:                   ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

pm_runtime_active.exit.i:                         ; preds = %if.then3.i
  %disable_depth.i.i = getelementptr inbounds %struct.device, ptr %14, i32 0, i32 12, i32 15
  %17 = ptrtoint ptr %disable_depth.i.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %bf.load.i.i = load i16, ptr %disable_depth.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8191, i16 %bf.load.i.i)
  %tobool.i.i = icmp ugt i16 %bf.load.i.i, 8191
  br i1 %tobool.i.i, label %pm_runtime_active.exit.i.if.end7.i_crit_edge, label %pm_runtime_active.exit.i.done.i_crit_edge

pm_runtime_active.exit.i.done.i_crit_edge:        ; preds = %pm_runtime_active.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %done.i

pm_runtime_active.exit.i.if.end7.i_crit_edge:     ; preds = %pm_runtime_active.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.end7.i:                                        ; preds = %pm_runtime_active.exit.i.if.end7.i_crit_edge, %if.then3.i.if.end7.i_crit_edge, %if.end.i.if.end7.i_crit_edge
  %18 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ops.i, align 4
  %is_enabled9.i = getelementptr inbounds %struct.clk_ops, ptr %19, i32 0, i32 6
  %20 = ptrtoint ptr %is_enabled9.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %is_enabled9.i, align 4
  %hw.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 2
  %22 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hw.i, align 4
  %call10.i = tail call i32 %21(ptr noundef %23) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.i = icmp ne i32 %call10.i, 0
  br label %done.i

done.i:                                           ; preds = %if.end7.i, %pm_runtime_active.exit.i.done.i_crit_edge
  %ret.0.off0.i = phi i1 [ %tobool11.i, %if.end7.i ], [ false, %pm_runtime_active.exit.i.done.i_crit_edge ]
  %24 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool13.not.i = icmp eq i8 %25, 0
  br i1 %tobool13.not.i, label %done.i.clk_core_is_enabled.exit_crit_edge, label %if.then14.i

done.i.clk_core_is_enabled.exit_crit_edge:        ; preds = %done.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_is_enabled.exit

if.then14.i:                                      ; preds = %done.i
  call void @__sanitizer_cov_trace_pc() #23
  %dev15.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 4
  %26 = ptrtoint ptr %dev15.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev15.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_idle(ptr noundef %27, i32 noundef 5) #21
  br label %clk_core_is_enabled.exit

clk_core_is_enabled.exit:                         ; preds = %if.then14.i, %done.i.clk_core_is_enabled.exit_crit_edge, %if.then.i
  %retval.0.i = phi i1 [ %tobool1.i, %if.then.i ], [ %ret.0.off0.i, %if.then14.i ], [ %ret.0.off0.i, %done.i.clk_core_is_enabled.exit_crit_edge ]
  ret i1 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @__clk_is_enabled(ptr noundef readonly %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %ops.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.clk_ops, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %is_enabled.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %enable_count.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 18
  %6 = ptrtoint ptr %enable_count.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %enable_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool1.i = icmp ne i32 %7, 0
  br label %return

if.end.i:                                         ; preds = %if.end
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 17
  %8 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool2.not.i = icmp eq i8 %9, 0
  br i1 %tobool2.not.i, label %if.end.i.if.end7.i_crit_edge, label %if.then3.i

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.then3.i:                                       ; preds = %if.end.i
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %11, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !760
  %13 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev.i, align 4
  %runtime_status.i.i = getelementptr inbounds %struct.device, ptr %14, i32 0, i32 12, i32 18
  %15 = ptrtoint ptr %runtime_status.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %runtime_status.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.i.i = icmp eq i32 %16, 0
  br i1 %cmp.i.i, label %if.then3.i.if.end7.i_crit_edge, label %pm_runtime_active.exit.i

if.then3.i.if.end7.i_crit_edge:                   ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

pm_runtime_active.exit.i:                         ; preds = %if.then3.i
  %disable_depth.i.i = getelementptr inbounds %struct.device, ptr %14, i32 0, i32 12, i32 15
  %17 = ptrtoint ptr %disable_depth.i.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %bf.load.i.i = load i16, ptr %disable_depth.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8191, i16 %bf.load.i.i)
  %tobool.i.i = icmp ugt i16 %bf.load.i.i, 8191
  br i1 %tobool.i.i, label %pm_runtime_active.exit.i.if.end7.i_crit_edge, label %pm_runtime_active.exit.i.done.i_crit_edge

pm_runtime_active.exit.i.done.i_crit_edge:        ; preds = %pm_runtime_active.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %done.i

pm_runtime_active.exit.i.if.end7.i_crit_edge:     ; preds = %pm_runtime_active.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.end7.i:                                        ; preds = %pm_runtime_active.exit.i.if.end7.i_crit_edge, %if.then3.i.if.end7.i_crit_edge, %if.end.i.if.end7.i_crit_edge
  %18 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ops.i, align 4
  %is_enabled9.i = getelementptr inbounds %struct.clk_ops, ptr %19, i32 0, i32 6
  %20 = ptrtoint ptr %is_enabled9.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %is_enabled9.i, align 4
  %hw.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 2
  %22 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hw.i, align 4
  %call10.i = tail call i32 %21(ptr noundef %23) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.i = icmp ne i32 %call10.i, 0
  br label %done.i

done.i:                                           ; preds = %if.end7.i, %pm_runtime_active.exit.i.done.i_crit_edge
  %ret.0.off0.i = phi i1 [ %tobool11.i, %if.end7.i ], [ false, %pm_runtime_active.exit.i.done.i_crit_edge ]
  %24 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool13.not.i = icmp eq i8 %25, 0
  br i1 %tobool13.not.i, label %done.i.return_crit_edge, label %if.then14.i

done.i.return_crit_edge:                          ; preds = %done.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.then14.i:                                      ; preds = %done.i
  call void @__sanitizer_cov_trace_pc() #23
  %dev15.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 4
  %26 = ptrtoint ptr %dev15.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev15.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_idle(ptr noundef %27, i32 noundef 5) #21
  br label %return

return:                                           ; preds = %if.then14.i, %done.i.return_crit_edge, %if.then.i, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %entry.return_crit_edge ], [ %tobool1.i, %if.then.i ], [ %ret.0.off0.i, %if.then14.i ], [ %ret.0.off0.i, %done.i.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_mux_determine_rate_flags(ptr nocapture noundef readonly %hw, ptr nocapture noundef %req, i32 noundef %flags) #0 align 64 {
entry:
  %parent_req = alloca %struct.clk_rate_request, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %parent_req) #21
  %2 = call ptr @memcpy(ptr %parent_req, ptr %req, i32 20)
  %flags2 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 15
  %3 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags2, align 4
  %and = and i32 %4, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end19, label %if.then

if.then:                                          ; preds = %entry
  %parent3 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 6
  %5 = ptrtoint ptr %parent3 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent3, align 4
  %and5 = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  %tobool12.not = icmp eq ptr %6, null
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.then
  br i1 %tobool12.not, label %if.then7.__clk_determine_rate.exit.thread_crit_edge, label %cond.end

if.then7.__clk_determine_rate.exit.thread_crit_edge: ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_determine_rate.exit.thread

cond.end:                                         ; preds = %if.then7
  %hw9 = getelementptr inbounds %struct.clk_core, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %hw9 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw9, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %cond.end.__clk_determine_rate.exit.thread_crit_edge, label %__clk_determine_rate.exit

cond.end.__clk_determine_rate.exit.thread_crit_edge: ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_determine_rate.exit.thread

__clk_determine_rate.exit.thread:                 ; preds = %cond.end.__clk_determine_rate.exit.thread_crit_edge, %if.then7.__clk_determine_rate.exit.thread_crit_edge
  %9 = ptrtoint ptr %parent_req to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %parent_req, align 4
  br label %if.end

__clk_determine_rate.exit:                        ; preds = %cond.end
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %8, align 4
  %call.i = call fastcc i32 @clk_core_round_rate_nolock(ptr noundef %11, ptr noundef nonnull %parent_req) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool10.not = icmp eq i32 %call.i, 0
  br i1 %tobool10.not, label %__clk_determine_rate.exit.if.end_crit_edge, label %__clk_determine_rate.exit.cleanup_crit_edge

__clk_determine_rate.exit.cleanup_crit_edge:      ; preds = %__clk_determine_rate.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

__clk_determine_rate.exit.if.end_crit_edge:       ; preds = %__clk_determine_rate.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %__clk_determine_rate.exit.if.end_crit_edge, %__clk_determine_rate.exit.thread
  %12 = ptrtoint ptr %parent_req to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %parent_req, align 4
  br label %if.end52

if.else:                                          ; preds = %if.then
  br i1 %tobool12.not, label %if.else15, label %if.end.i88

if.end.i88:                                       ; preds = %if.else
  %num_parents.i = getelementptr inbounds %struct.clk_core, ptr %6, i32 0, i32 8
  %14 = ptrtoint ptr %num_parents.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %num_parents.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool1.not.i = icmp eq i8 %15, 0
  br i1 %tobool1.not.i, label %if.end.i88.if.then3.i_crit_edge, label %lor.lhs.false.i

if.end.i88.if.then3.i_crit_edge:                  ; preds = %if.end.i88
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i:                                  ; preds = %if.end.i88
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %6, i32 0, i32 6
  %16 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %parent.i, align 4
  %tobool2.not.i = icmp eq ptr %17, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end52_crit_edge, label %lor.lhs.false.i.if.then3.i_crit_edge

lor.lhs.false.i.if.then3.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i.if.end52_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end52

if.then3.i:                                       ; preds = %lor.lhs.false.i.if.then3.i_crit_edge, %if.end.i88.if.then3.i_crit_edge
  %rate.i = getelementptr inbounds %struct.clk_core, ptr %6, i32 0, i32 10
  %18 = ptrtoint ptr %rate.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rate.i, align 4
  br label %if.end52

if.else15:                                        ; preds = %if.else
  %tobool.not.i90 = icmp eq ptr %1, null
  br i1 %tobool.not.i90, label %if.else15.if.end52_crit_edge, label %if.end.i93

if.else15.if.end52_crit_edge:                     ; preds = %if.else15
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end52

if.end.i93:                                       ; preds = %if.else15
  %num_parents.i91 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 8
  %20 = ptrtoint ptr %num_parents.i91 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %num_parents.i91, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool1.not.i92 = icmp eq i8 %21, 0
  br i1 %tobool1.not.i92, label %if.then3.i98, label %if.end.i93.if.end52_crit_edge

if.end.i93.if.end52_crit_edge:                    ; preds = %if.end.i93
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end52

if.then3.i98:                                     ; preds = %if.end.i93
  call void @__sanitizer_cov_trace_pc() #23
  %rate.i97 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 10
  %22 = ptrtoint ptr %rate.i97 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %rate.i97, align 4
  br label %if.end52

if.end19:                                         ; preds = %entry
  %num_parents20 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 8
  %24 = ptrtoint ptr %num_parents20 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %num_parents20, align 4
  %conv = zext i8 %25 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %cmp132.not = icmp eq i8 %25, 0
  br i1 %cmp132.not, label %if.end19.cleanup_crit_edge, label %for.body.lr.ph

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end19
  %and.i = and i32 %flags, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i118 = icmp eq i32 %and.i, 0
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %best.0135 = phi i32 [ 0, %for.body.lr.ph ], [ %best.1, %for.inc.for.body_crit_edge ]
  %i.0134 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %best_parent.0133 = phi ptr [ null, %for.body.lr.ph ], [ %best_parent.1, %for.inc.for.body_crit_edge ]
  %conv22 = trunc i32 %i.0134 to i8
  %call23 = call fastcc ptr @clk_core_get_parent_by_index(ptr noundef %1, i8 noundef zeroext %conv22)
  %tobool24.not = icmp eq ptr %call23, null
  br i1 %tobool24.not, label %for.body.for.inc_crit_edge, label %if.end26

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end26:                                         ; preds = %for.body
  %26 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags2, align 4
  %and28 = and i32 %27, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %if.end.i110, label %if.then30

if.then30:                                        ; preds = %if.end26
  %28 = call ptr @memcpy(ptr %parent_req, ptr %req, i32 20)
  %hw31 = getelementptr inbounds %struct.clk_core, ptr %call23, i32 0, i32 2
  %29 = ptrtoint ptr %hw31 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hw31, align 4
  %tobool.not.i101 = icmp eq ptr %30, null
  br i1 %tobool.not.i101, label %__clk_determine_rate.exit106.thread, label %__clk_determine_rate.exit106

__clk_determine_rate.exit106.thread:              ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #23
  %31 = ptrtoint ptr %parent_req to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %parent_req, align 4
  br label %if.end39

__clk_determine_rate.exit106:                     ; preds = %if.then30
  %32 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %30, align 4
  %call.i103 = call fastcc i32 @clk_core_round_rate_nolock(ptr noundef %33, ptr noundef nonnull %parent_req) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i103)
  %tobool33.not = icmp eq i32 %call.i103, 0
  br i1 %tobool33.not, label %__clk_determine_rate.exit106.if.end39_crit_edge, label %__clk_determine_rate.exit106.for.inc_crit_edge

__clk_determine_rate.exit106.for.inc_crit_edge:   ; preds = %__clk_determine_rate.exit106
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

__clk_determine_rate.exit106.if.end39_crit_edge:  ; preds = %__clk_determine_rate.exit106
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end39

if.end.i110:                                      ; preds = %if.end26
  %num_parents.i108 = getelementptr inbounds %struct.clk_core, ptr %call23, i32 0, i32 8
  %34 = ptrtoint ptr %num_parents.i108 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %num_parents.i108, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool1.not.i109 = icmp eq i8 %35, 0
  br i1 %tobool1.not.i109, label %if.end.i110.if.then3.i115_crit_edge, label %lor.lhs.false.i113

if.end.i110.if.then3.i115_crit_edge:              ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i115

lor.lhs.false.i113:                               ; preds = %if.end.i110
  %parent.i111 = getelementptr inbounds %struct.clk_core, ptr %call23, i32 0, i32 6
  %36 = ptrtoint ptr %parent.i111 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %parent.i111, align 4
  %tobool2.not.i112 = icmp eq ptr %37, null
  br i1 %tobool2.not.i112, label %lor.lhs.false.i113.clk_core_get_rate_nolock.exit117_crit_edge, label %lor.lhs.false.i113.if.then3.i115_crit_edge

lor.lhs.false.i113.if.then3.i115_crit_edge:       ; preds = %lor.lhs.false.i113
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i115

lor.lhs.false.i113.clk_core_get_rate_nolock.exit117_crit_edge: ; preds = %lor.lhs.false.i113
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_nolock.exit117

if.then3.i115:                                    ; preds = %lor.lhs.false.i113.if.then3.i115_crit_edge, %if.end.i110.if.then3.i115_crit_edge
  %rate.i114 = getelementptr inbounds %struct.clk_core, ptr %call23, i32 0, i32 10
  %38 = ptrtoint ptr %rate.i114 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rate.i114, align 4
  br label %clk_core_get_rate_nolock.exit117

clk_core_get_rate_nolock.exit117:                 ; preds = %if.then3.i115, %lor.lhs.false.i113.clk_core_get_rate_nolock.exit117_crit_edge
  %retval.0.i116 = phi i32 [ %39, %if.then3.i115 ], [ 0, %lor.lhs.false.i113.clk_core_get_rate_nolock.exit117_crit_edge ]
  %40 = ptrtoint ptr %parent_req to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %retval.0.i116, ptr %parent_req, align 4
  br label %if.end39

if.end39:                                         ; preds = %clk_core_get_rate_nolock.exit117, %__clk_determine_rate.exit106.if.end39_crit_edge, %__clk_determine_rate.exit106.thread
  %41 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %req, align 4
  %43 = ptrtoint ptr %parent_req to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %parent_req, align 4
  br i1 %tobool.not.i118, label %mux_is_better_rate.exit, label %if.then.i119

if.then.i119:                                     ; preds = %if.end39
  %sub.i = sub i32 %44, %42
  %45 = call i32 @llvm.abs.i32(i32 %sub.i, i1 false) #21
  %sub3.i = sub i32 %best.0135, %42
  %46 = call i32 @llvm.abs.i32(i32 %sub3.i, i1 false) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %45, i32 %46)
  %cmp11.i = icmp slt i32 %45, %46
  br i1 %cmp11.i, label %if.then.i119.if.then43_crit_edge, label %if.then.i119.for.inc_crit_edge

if.then.i119.for.inc_crit_edge:                   ; preds = %if.then.i119
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then.i119.if.then43_crit_edge:                 ; preds = %if.then.i119
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then43

mux_is_better_rate.exit:                          ; preds = %if.end39
  call void @__sanitizer_cov_trace_cmp4(i32 %44, i32 %42)
  %cmp12.not.i = icmp ule i32 %44, %42
  call void @__sanitizer_cov_trace_cmp4(i32 %44, i32 %best.0135)
  %cmp13.i = icmp ugt i32 %44, %best.0135
  %spec.select.i = and i1 %cmp12.not.i, %cmp13.i
  br i1 %spec.select.i, label %mux_is_better_rate.exit.if.then43_crit_edge, label %mux_is_better_rate.exit.for.inc_crit_edge

mux_is_better_rate.exit.for.inc_crit_edge:        ; preds = %mux_is_better_rate.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

mux_is_better_rate.exit.if.then43_crit_edge:      ; preds = %mux_is_better_rate.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then43

if.then43:                                        ; preds = %mux_is_better_rate.exit.if.then43_crit_edge, %if.then.i119.if.then43_crit_edge
  br label %for.inc

for.inc:                                          ; preds = %if.then43, %mux_is_better_rate.exit.for.inc_crit_edge, %if.then.i119.for.inc_crit_edge, %__clk_determine_rate.exit106.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %best_parent.1 = phi ptr [ %best_parent.0133, %__clk_determine_rate.exit106.for.inc_crit_edge ], [ %call23, %if.then43 ], [ %best_parent.0133, %mux_is_better_rate.exit.for.inc_crit_edge ], [ %best_parent.0133, %for.body.for.inc_crit_edge ], [ %best_parent.0133, %if.then.i119.for.inc_crit_edge ]
  %best.1 = phi i32 [ %best.0135, %__clk_determine_rate.exit106.for.inc_crit_edge ], [ %44, %if.then43 ], [ %best.0135, %mux_is_better_rate.exit.for.inc_crit_edge ], [ %best.0135, %for.body.for.inc_crit_edge ], [ %best.0135, %if.then.i119.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.0134, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc
  %tobool46.not = icmp eq ptr %best_parent.1, null
  br i1 %tobool46.not, label %for.end.cleanup_crit_edge, label %if.then50

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then50:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %hw51 = getelementptr inbounds %struct.clk_core, ptr %best_parent.1, i32 0, i32 2
  %47 = ptrtoint ptr %hw51 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %hw51, align 4
  %best_parent_hw = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 4
  %49 = ptrtoint ptr %best_parent_hw to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %48, ptr %best_parent_hw, align 4
  br label %if.end52

if.end52:                                         ; preds = %if.then50, %if.then3.i98, %if.end.i93.if.end52_crit_edge, %if.else15.if.end52_crit_edge, %if.then3.i, %lor.lhs.false.i.if.end52_crit_edge, %if.end
  %best.2131 = phi i32 [ %best.1, %if.then50 ], [ 0, %if.end.i93.if.end52_crit_edge ], [ 0, %if.else15.if.end52_crit_edge ], [ %23, %if.then3.i98 ], [ 0, %lor.lhs.false.i.if.end52_crit_edge ], [ %19, %if.then3.i ], [ %13, %if.end ]
  %best_parent_rate = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 3
  %50 = ptrtoint ptr %best_parent_rate to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %best.2131, ptr %best_parent_rate, align 4
  %51 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %best.2131, ptr %req, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end52, %for.end.cleanup_crit_edge, %if.end19.cleanup_crit_edge, %__clk_determine_rate.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end52 ], [ %call.i, %__clk_determine_rate.exit.cleanup_crit_edge ], [ -22, %for.end.cleanup_crit_edge ], [ -22, %if.end19.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %parent_req) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__clk_determine_rate(ptr noundef readonly %hw, ptr noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %hw, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %req, align 4
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %1 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %hw, align 4
  %call = tail call fastcc i32 @clk_core_round_rate_nolock(ptr noundef %2, ptr noundef %req)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__clk_lookup(ptr noundef readonly %name) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %name, null
  br i1 %tobool.not.i, label %entry.cond.end_crit_edge, label %if.end.i

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

if.end.i:                                         ; preds = %entry
  %0 = load ptr, ptr @clk_root_list, align 4
  %tobool1.not.i = icmp eq ptr %0, null
  %add.ptr.i = getelementptr i8, ptr %0, i32 -104
  %tobool3.not7683.i = icmp eq ptr %add.ptr.i, null
  %tobool3.not76.i = or i1 %tobool1.not.i, %tobool3.not7683.i
  br i1 %tobool3.not76.i, label %if.end.i.for.end.i_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %root_clk.077.i = phi ptr [ %add.ptr13.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr.i, %if.end.i.for.body.i_crit_edge ]
  %call.i = tail call fastcc ptr @__clk_lookup_subtree(ptr noundef nonnull %name, ptr noundef nonnull %root_clk.077.i) #21
  %tobool4.not.i = icmp eq ptr %call.i, null
  br i1 %tobool4.not.i, label %for.inc.i, label %for.body.i.cond.false_crit_edge

for.body.i.cond.false_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.false

for.inc.i:                                        ; preds = %for.body.i
  %child_node.i = getelementptr inbounds %struct.clk_core, ptr %root_clk.077.i, i32 0, i32 27
  %1 = ptrtoint ptr %child_node.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %child_node.i, align 4
  %tobool9.not.i = icmp eq ptr %2, null
  %add.ptr13.i = getelementptr i8, ptr %2, i32 -104
  %tobool3.not87.i = icmp eq ptr %add.ptr13.i, null
  %tobool3.not.i = or i1 %tobool9.not.i, %tobool3.not87.i
  br i1 %tobool3.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  %3 = load ptr, ptr @clk_orphan_list, align 4
  %tobool19.not.i = icmp eq ptr %3, null
  %add.ptr23.i = getelementptr i8, ptr %3, i32 -104
  %tobool28.not7884.i = icmp eq ptr %add.ptr23.i, null
  %tobool28.not78.i = or i1 %tobool19.not.i, %tobool28.not7884.i
  br i1 %tobool28.not78.i, label %for.end.i.cond.end_crit_edge, label %for.end.i.for.body29.i_crit_edge

for.end.i.for.body29.i_crit_edge:                 ; preds = %for.end.i
  br label %for.body29.i

for.end.i.cond.end_crit_edge:                     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

for.body29.i:                                     ; preds = %for.inc34.i.for.body29.i_crit_edge, %for.end.i.for.body29.i_crit_edge
  %root_clk.179.i = phi ptr [ %add.ptr43.i, %for.inc34.i.for.body29.i_crit_edge ], [ %add.ptr23.i, %for.end.i.for.body29.i_crit_edge ]
  %call30.i = tail call fastcc ptr @__clk_lookup_subtree(ptr noundef nonnull %name, ptr noundef nonnull %root_clk.179.i) #21
  %tobool31.not.i = icmp eq ptr %call30.i, null
  br i1 %tobool31.not.i, label %for.inc34.i, label %for.body29.i.cond.false_crit_edge

for.body29.i.cond.false_crit_edge:                ; preds = %for.body29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.false

for.inc34.i:                                      ; preds = %for.body29.i
  %child_node36.i = getelementptr inbounds %struct.clk_core, ptr %root_clk.179.i, i32 0, i32 27
  %4 = ptrtoint ptr %child_node36.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %child_node36.i, align 4
  %tobool39.not.i = icmp eq ptr %5, null
  %add.ptr43.i = getelementptr i8, ptr %5, i32 -104
  %tobool28.not88.i = icmp eq ptr %add.ptr43.i, null
  %tobool28.not.i = or i1 %tobool39.not.i, %tobool28.not88.i
  br i1 %tobool28.not.i, label %for.inc34.i.cond.end_crit_edge, label %for.inc34.i.for.body29.i_crit_edge

for.inc34.i.for.body29.i_crit_edge:               ; preds = %for.inc34.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body29.i

for.inc34.i.cond.end_crit_edge:                   ; preds = %for.inc34.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %for.body29.i.cond.false_crit_edge, %for.body.i.cond.false_crit_edge
  %retval.0.i = phi ptr [ %call30.i, %for.body29.i.cond.false_crit_edge ], [ %call.i, %for.body.i.cond.false_crit_edge ]
  %hw = getelementptr inbounds %struct.clk_core, ptr %retval.0.i, i32 0, i32 2
  %6 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw, align 4
  %clk = getelementptr inbounds %struct.clk_hw, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %clk, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %for.inc34.i.cond.end_crit_edge, %for.end.i.cond.end_crit_edge, %entry.cond.end_crit_edge
  %cond = phi ptr [ %9, %cond.false ], [ null, %entry.cond.end_crit_edge ], [ null, %for.end.i.cond.end_crit_edge ], [ null, %for.inc34.i.cond.end_crit_edge ]
  ret ptr %cond
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @clk_hw_set_rate_range(ptr nocapture noundef readonly %hw, i32 noundef %min_rate, i32 noundef %max_rate) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %min_rate1 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 21
  %2 = ptrtoint ptr %min_rate1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %min_rate, ptr %min_rate1, align 4
  %3 = load ptr, ptr %hw, align 4
  %max_rate3 = getelementptr inbounds %struct.clk_core, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %max_rate3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %max_rate, ptr %max_rate3, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__clk_mux_determine_rate(ptr nocapture noundef readonly %hw, ptr nocapture noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @clk_mux_determine_rate_flags(ptr noundef %hw, ptr noundef %req, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__clk_mux_determine_rate_closest(ptr nocapture noundef readonly %hw, ptr nocapture noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @clk_mux_determine_rate_flags(ptr noundef %hw, ptr noundef %req, i32 noundef 16)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clk_rate_exclusive_put(ptr noundef %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %0 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %do.end, label %if.end.tailrecurse.i_crit_edge, !prof !754

if.end.tailrecurse.i_crit_edge:                   ; preds = %if.end
  br label %tailrecurse.i

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 735, i32 noundef 9, ptr noundef null) #21
  br label %out

tailrecurse.i:                                    ; preds = %if.end64.i, %if.end.tailrecurse.i_crit_edge
  %core.tr.i.in = phi ptr [ %parent.i, %if.end64.i ], [ %clk, %if.end.tailrecurse.i_crit_edge ]
  %2 = ptrtoint ptr %core.tr.i.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %core.tr.i = load ptr, ptr %core.tr.i.in, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %tailrecurse.i.if.end.i_crit_edge, label %land.rhs.i

tailrecurse.i.if.end.i_crit_edge:                 ; preds = %tailrecurse.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %tailrecurse.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %tailrecurse.i.if.end.i_crit_edge
  %tobool24.not.i = icmp eq ptr %core.tr.i, null
  br i1 %tobool24.not.i, label %if.end.i.clk_core_rate_unprotect.exit_crit_edge, label %if.end26.i

if.end.i.clk_core_rate_unprotect.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_rate_unprotect.exit

if.end26.i:                                       ; preds = %if.end.i
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 20
  %4 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp28.i = icmp eq i32 %5, 0
  br i1 %cmp28.i, label %do.end44.i, label %if.end60.critedge.i, !prof !754

do.end44.i:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %core.tr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %core.tr.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %7) #21
  br label %clk_core_rate_unprotect.exit

if.end60.critedge.i:                              ; preds = %if.end26.i
  %dec.i = add i32 %5, -1
  %8 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %dec.i, ptr %protect_count.i, align 4
  %cmp62.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp62.not.i, label %if.end64.i, label %if.end60.critedge.i.clk_core_rate_unprotect.exit_crit_edge

if.end60.critedge.i.clk_core_rate_unprotect.exit_crit_edge: ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_rate_unprotect.exit

if.end64.i:                                       ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 6
  br label %tailrecurse.i

clk_core_rate_unprotect.exit:                     ; preds = %if.end60.critedge.i.clk_core_rate_unprotect.exit_crit_edge, %do.end44.i, %if.end.i.clk_core_rate_unprotect.exit_crit_edge
  %9 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %exclusive_count, align 4
  %dec = add i32 %10, -1
  store i32 %dec, ptr %exclusive_count, align 4
  br label %out

out:                                              ; preds = %clk_core_rate_unprotect.exit, %do.end
  %11 = load ptr, ptr @prepare_owner, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %cmp.not.i30 = icmp eq ptr %11, %15
  br i1 %cmp.not.i30, label %out.if.end27.i_crit_edge, label %land.rhs.i31

out.if.end27.i_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i31:                                     ; preds = %out
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i31.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i31.if.end27.i_crit_edge:                ; preds = %land.rhs.i31
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i31
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i31.if.end27.i_crit_edge, %out.if.end27.i_crit_edge
  %16 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp36.i = icmp eq i32 %16, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %17 = load i32, ptr @prepare_refcnt, align 4
  %dec.i32 = add i32 %17, -1
  store i32 %dec.i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i32)
  %tobool89.not.i = icmp eq i32 %dec.i32, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.return_crit_edge

if.end81.i.return_crit_edge:                      ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %return

return:                                           ; preds = %if.end91.i, %if.end81.i.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_prepare_lock() unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @mutex_trylock(ptr noundef nonnull @prepare_lock) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end3_crit_edge

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @prepare_owner, align 4
  %1 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %cmp = icmp eq ptr %0, %4
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %5 = load i32, ptr @prepare_refcnt, align 4
  %inc = add i32 %5, 1
  br label %return

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @mutex_lock_nested(ptr noundef nonnull @prepare_lock, i32 noundef 0) #21
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry.if.end3_crit_edge
  %6 = load ptr, ptr @prepare_owner, align 4
  %cmp4.not = icmp eq ptr %6, null
  br i1 %cmp4.not, label %if.end3.if.end34_crit_edge, label %land.rhs

if.end3.if.end34_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

land.rhs:                                         ; preds = %if.end3
  %.b104 = load i1, ptr @clk_prepare_lock.__already_done, align 1
  br i1 %.b104, label %land.rhs.if.end34_crit_edge, label %if.then12, !prof !753

land.rhs.if.end34_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_lock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 142, i32 noundef 9, ptr noundef null) #21
  br label %if.end34

if.end34:                                         ; preds = %if.then12, %land.rhs.if.end34_crit_edge, %if.end3.if.end34_crit_edge
  %7 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp43.not = icmp eq i32 %7, 0
  br i1 %cmp43.not, label %if.end34.if.end88_crit_edge, label %land.rhs50

if.end34.if.end88_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end88

land.rhs50:                                       ; preds = %if.end34
  %.b102103 = load i1, ptr @clk_prepare_lock.__already_done.50, align 1
  br i1 %.b102103, label %land.rhs50.if.end88_crit_edge, label %if.then61, !prof !753

land.rhs50.if.end88_crit_edge:                    ; preds = %land.rhs50
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end88

if.then61:                                        ; preds = %land.rhs50
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_lock.__already_done.50, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 143, i32 noundef 9, ptr noundef null) #21
  br label %if.end88

if.end88:                                         ; preds = %if.then61, %land.rhs50.if.end88_crit_edge, %if.end34.if.end88_crit_edge
  %8 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i105 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i105 to ptr
  %task97 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task97 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task97, align 8
  store ptr %11, ptr @prepare_owner, align 4
  br label %return

return:                                           ; preds = %if.end88, %if.then2
  %storemerge = phi i32 [ 1, %if.end88 ], [ %inc, %if.then2 ]
  store i32 %storemerge, ptr @prepare_refcnt, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_rate_unprotect(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.end64, %entry
  %core.tr = phi ptr [ %core, %entry ], [ %7, %if.end64 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %tailrecurse.if.end_crit_edge, label %land.rhs

tailrecurse.if.end_crit_edge:                     ; preds = %tailrecurse
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %tailrecurse
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %tailrecurse.if.end_crit_edge
  %tobool24.not = icmp eq ptr %core.tr, null
  br i1 %tobool24.not, label %if.end.return_crit_edge, label %if.end26

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end26:                                         ; preds = %if.end
  %protect_count = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 20
  %1 = ptrtoint ptr %protect_count to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %protect_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp28 = icmp eq i32 %2, 0
  br i1 %cmp28, label %do.end44, label %if.end60.critedge, !prof !754

do.end44:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  %3 = ptrtoint ptr %core.tr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %core.tr, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %4) #21
  br label %return

if.end60.critedge:                                ; preds = %if.end26
  %dec = add i32 %2, -1
  %5 = ptrtoint ptr %protect_count to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %dec, ptr %protect_count, align 4
  %cmp62.not = icmp eq i32 %dec, 0
  br i1 %cmp62.not, label %if.end64, label %if.end60.critedge.return_crit_edge

if.end60.critedge.return_crit_edge:               ; preds = %if.end60.critedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end64:                                         ; preds = %if.end60.critedge
  call void @__sanitizer_cov_trace_pc() #23
  %parent = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 6
  %6 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %parent, align 4
  br label %tailrecurse

return:                                           ; preds = %if.end60.critedge.return_crit_edge, %do.end44, %if.end.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_rate_exclusive_get(ptr noundef %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  tail call fastcc void @clk_core_rate_protect(ptr noundef %1)
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %2 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %exclusive_count, align 4
  %inc = add i32 %3, 1
  store i32 %inc, ptr %exclusive_count, align 4
  %4 = load ptr, ptr @prepare_owner, align 4
  %5 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %4, %8
  br i1 %cmp.not.i, label %if.end.if.end27.i_crit_edge, label %land.rhs.i

if.end.if.end27.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %if.end
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %if.end.if.end27.i_crit_edge
  %9 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp36.i = icmp eq i32 %9, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %10 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %10, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.return_crit_edge

if.end81.i.return_crit_edge:                      ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %return

return:                                           ; preds = %if.end91.i, %if.end81.i.return_crit_edge, %entry.return_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_rate_protect(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 747, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool24.not = icmp eq ptr %core, null
  br i1 %tobool24.not, label %if.end.return_crit_edge, label %if.end26

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end26:                                         ; preds = %if.end
  %protect_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 20
  %1 = ptrtoint ptr %protect_count to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %protect_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp27 = icmp eq i32 %2, 0
  br i1 %cmp27, label %if.then28, label %if.end26.if.end29_crit_edge

if.end26.if.end29_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

if.then28:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  %parent = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %3 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %parent, align 4
  tail call fastcc void @clk_core_rate_protect(ptr noundef %4)
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %if.end26.if.end29_crit_edge
  %5 = ptrtoint ptr %protect_count to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %protect_count, align 4
  %inc = add i32 %6, 1
  store i32 %inc, ptr %protect_count, align 4
  br label %return

return:                                           ; preds = %if.end29, %if.end.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clk_unprepare(ptr noundef readonly %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %clk, null
  %cmp.i = icmp ugt ptr %clk, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i
  br i1 %spec.select.i, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %1)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_unprepare_lock(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @clk_prepare_lock()
  tail call fastcc void @clk_core_unprepare(ptr noundef %core)
  %0 = load ptr, ptr @prepare_owner, align 4
  %1 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %0, %4
  br i1 %cmp.not.i, label %entry.if.end27.i_crit_edge, label %land.rhs.i

entry.if.end27.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %entry
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %entry.if.end27.i_crit_edge
  %5 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp36.i = icmp eq i32 %5, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %6 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %6, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_prepare(ptr noundef readonly %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %call = tail call fastcc i32 @clk_core_prepare_lock(ptr noundef %1)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_prepare_lock(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @clk_prepare_lock()
  %call = tail call fastcc i32 @clk_core_prepare(ptr noundef %core)
  %0 = load ptr, ptr @prepare_owner, align 4
  %1 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %0, %4
  br i1 %cmp.not.i, label %entry.if.end27.i_crit_edge, label %land.rhs.i

entry.if.end27.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %entry
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %entry.if.end27.i_crit_edge
  %5 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp36.i = icmp eq i32 %5, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %6 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %6, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clk_disable(ptr noundef readonly %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %clk, null
  %cmp.i = icmp ugt ptr %clk, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i
  br i1 %spec.select.i, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  tail call fastcc void @clk_core_disable_lock(ptr noundef %1)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_disable_lock(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @clk_enable_lock()
  tail call fastcc void @clk_core_disable(ptr noundef %core)
  %0 = load ptr, ptr @enable_owner, align 4
  %1 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %0, %4
  br i1 %cmp.not.i, label %entry.if.end27.i_crit_edge, label %land.rhs.i

entry.if.end27.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %entry
  %.b98.i = load i1, ptr @clk_enable_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 190, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %entry.if.end27.i_crit_edge
  %5 = load i32, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp36.i = icmp eq i32 %5, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_enable_unlock.__already_done.156, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done.156, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 191, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %6 = load i32, ptr @enable_refcnt, align 4
  %dec.i = add i32 %6, -1
  store i32 %dec.i, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_enable_unlock.exit_crit_edge

if.end81.i.clk_enable_unlock.exit_crit_edge:      ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_enable_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @enable_owner, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @enable_lock, i32 noundef %call) #21
  br label %clk_enable_unlock.exit

clk_enable_unlock.exit:                           ; preds = %if.end91.i, %if.end81.i.clk_enable_unlock.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clk_gate_restore_context(ptr noundef %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %enable_count = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %enable_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  %ops2 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %ops2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops2, align 4
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %enable = getelementptr inbounds %struct.clk_ops, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %enable to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %enable, align 4
  %call = tail call i32 %7(ptr noundef %hw) #21
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %disable = getelementptr inbounds %struct.clk_ops, ptr %5, i32 0, i32 5
  %8 = ptrtoint ptr %disable to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %disable, align 4
  tail call void %9(ptr noundef %hw) #21
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_save_context() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @clk_root_list, align 4
  %tobool.not = icmp eq ptr %0, null
  %add.ptr = getelementptr i8, ptr %0, i32 -104
  %tobool2.not7077 = icmp eq ptr %add.ptr, null
  %tobool2.not70 = or i1 %tobool.not, %tobool2.not7077
  br i1 %tobool2.not70, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %clk.071 = phi ptr [ %add.ptr9, %for.inc.for.body_crit_edge ], [ %add.ptr, %entry.for.body_crit_edge ]
  %call = tail call fastcc i32 @clk_core_save_context(ptr noundef nonnull %clk.071)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %for.body.cleanup_crit_edge, label %for.inc

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %child_node = getelementptr inbounds %struct.clk_core, ptr %clk.071, i32 0, i32 27
  %1 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %child_node, align 4
  %tobool5.not = icmp eq ptr %2, null
  %add.ptr9 = getelementptr i8, ptr %2, i32 -104
  %tobool2.not81 = icmp eq ptr %add.ptr9, null
  %tobool2.not = or i1 %tobool5.not, %tobool2.not81
  br i1 %tobool2.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %3 = load ptr, ptr @clk_orphan_list, align 4
  %tobool15.not = icmp eq ptr %3, null
  %add.ptr19 = getelementptr i8, ptr %3, i32 -104
  %tobool24.not7278 = icmp eq ptr %add.ptr19, null
  %tobool24.not72 = or i1 %tobool15.not, %tobool24.not7278
  br i1 %tobool24.not72, label %for.end.cleanup_crit_edge, label %for.end.for.body25_crit_edge

for.end.for.body25_crit_edge:                     ; preds = %for.end
  br label %for.body25

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body25:                                       ; preds = %for.inc30.for.body25_crit_edge, %for.end.for.body25_crit_edge
  %clk.173 = phi ptr [ %add.ptr39, %for.inc30.for.body25_crit_edge ], [ %add.ptr19, %for.end.for.body25_crit_edge ]
  %call26 = tail call fastcc i32 @clk_core_save_context(ptr noundef nonnull %clk.173)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %cmp27 = icmp slt i32 %call26, 0
  br i1 %cmp27, label %for.body25.cleanup_crit_edge, label %for.inc30

for.body25.cleanup_crit_edge:                     ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc30:                                        ; preds = %for.body25
  %child_node32 = getelementptr inbounds %struct.clk_core, ptr %clk.173, i32 0, i32 27
  %4 = ptrtoint ptr %child_node32 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %child_node32, align 4
  %tobool35.not = icmp eq ptr %5, null
  %add.ptr39 = getelementptr i8, ptr %5, i32 -104
  %tobool24.not82 = icmp eq ptr %add.ptr39, null
  %tobool24.not = or i1 %tobool35.not, %tobool24.not82
  br i1 %tobool24.not, label %for.inc30.cleanup_crit_edge, label %for.inc30.for.body25_crit_edge

for.inc30.for.body25_crit_edge:                   ; preds = %for.inc30
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body25

for.inc30.cleanup_crit_edge:                      ; preds = %for.inc30
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %for.inc30.cleanup_crit_edge, %for.body25.cleanup_crit_edge, %for.end.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %for.end.cleanup_crit_edge ], [ %call26, %for.body25.cleanup_crit_edge ], [ 0, %for.inc30.cleanup_crit_edge ], [ %call, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_save_context(ptr nocapture noundef readonly %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %0 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %children, align 4
  %tobool.not = icmp eq ptr %1, null
  %add.ptr = getelementptr i8, ptr %1, i32 -104
  %tobool2.not3942 = icmp eq ptr %add.ptr, null
  %tobool2.not39 = or i1 %tobool.not, %tobool2.not3942
  br i1 %tobool2.not39, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %child.040 = phi ptr [ %add.ptr9, %for.inc.for.body_crit_edge ], [ %add.ptr, %entry.for.body_crit_edge ]
  %call = tail call fastcc i32 @clk_core_save_context(ptr noundef nonnull %child.040)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %for.body.cleanup_crit_edge, label %for.inc

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.040, i32 0, i32 27
  %2 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %child_node, align 4
  %tobool5.not = icmp eq ptr %3, null
  %add.ptr9 = getelementptr i8, ptr %3, i32 -104
  %tobool2.not44 = icmp eq ptr %add.ptr9, null
  %tobool2.not = or i1 %tobool5.not, %tobool2.not44
  br i1 %tobool2.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %ret.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %call, %for.inc.for.end_crit_edge ]
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %tobool13.not = icmp eq ptr %5, null
  br i1 %tobool13.not, label %for.end.cleanup_crit_edge, label %land.lhs.true

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true:                                    ; preds = %for.end
  %save_context = getelementptr inbounds %struct.clk_ops, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %save_context to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %save_context, align 4
  %tobool15.not = icmp eq ptr %7, null
  br i1 %tobool15.not, label %land.lhs.true.cleanup_crit_edge, label %if.then16

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then16:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %call19 = tail call i32 %7(ptr noundef %9) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then16, %land.lhs.true.cleanup_crit_edge, %for.end.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %retval.0 = phi i32 [ %call19, %if.then16 ], [ %ret.0.lcssa, %land.lhs.true.cleanup_crit_edge ], [ %ret.0.lcssa, %for.end.cleanup_crit_edge ], [ %call, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clk_restore_context() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @clk_root_list, align 4
  %tobool.not = icmp eq ptr %0, null
  %add.ptr = getelementptr i8, ptr %0, i32 -104
  %tobool2.not6165 = icmp eq ptr %add.ptr, null
  %tobool2.not61 = or i1 %tobool.not, %tobool2.not6165
  br i1 %tobool2.not61, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %core.062 = phi ptr [ %add.ptr9, %for.body.for.body_crit_edge ], [ %add.ptr, %entry.for.body_crit_edge ]
  tail call fastcc void @clk_core_restore_context(ptr noundef nonnull %core.062)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %core.062, i32 0, i32 27
  %1 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %child_node, align 4
  %tobool5.not = icmp eq ptr %2, null
  %add.ptr9 = getelementptr i8, ptr %2, i32 -104
  %tobool2.not67 = icmp eq ptr %add.ptr9, null
  %tobool2.not = or i1 %tobool5.not, %tobool2.not67
  br i1 %tobool2.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %3 = load ptr, ptr @clk_orphan_list, align 4
  %tobool15.not = icmp eq ptr %3, null
  %add.ptr19 = getelementptr i8, ptr %3, i32 -104
  %tobool24.not6366 = icmp eq ptr %add.ptr19, null
  %tobool24.not63 = or i1 %tobool15.not, %tobool24.not6366
  br i1 %tobool24.not63, label %for.end.for.end39_crit_edge, label %for.end.for.body25_crit_edge

for.end.for.body25_crit_edge:                     ; preds = %for.end
  br label %for.body25

for.end.for.end39_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end39

for.body25:                                       ; preds = %for.body25.for.body25_crit_edge, %for.end.for.body25_crit_edge
  %core.164 = phi ptr [ %add.ptr35, %for.body25.for.body25_crit_edge ], [ %add.ptr19, %for.end.for.body25_crit_edge ]
  tail call fastcc void @clk_core_restore_context(ptr noundef nonnull %core.164)
  %child_node28 = getelementptr inbounds %struct.clk_core, ptr %core.164, i32 0, i32 27
  %4 = ptrtoint ptr %child_node28 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %child_node28, align 4
  %tobool31.not = icmp eq ptr %5, null
  %add.ptr35 = getelementptr i8, ptr %5, i32 -104
  %tobool24.not68 = icmp eq ptr %add.ptr35, null
  %tobool24.not = or i1 %tobool31.not, %tobool24.not68
  br i1 %tobool24.not, label %for.body25.for.end39_crit_edge, label %for.body25.for.body25_crit_edge

for.body25.for.body25_crit_edge:                  ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body25

for.body25.for.end39_crit_edge:                   ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end39

for.end39:                                        ; preds = %for.body25.for.end39_crit_edge, %for.end.for.end39_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_restore_context(ptr nocapture noundef readonly %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %0 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %restore_context = getelementptr inbounds %struct.clk_ops, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %restore_context to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %restore_context, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 4
  tail call void %3(ptr noundef %5) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %6 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %children, align 4
  %tobool5.not = icmp eq ptr %7, null
  %add.ptr = getelementptr i8, ptr %7, i32 -104
  %tobool7.not3234 = icmp eq ptr %add.ptr, null
  %tobool7.not32 = or i1 %tobool5.not, %tobool7.not3234
  br i1 %tobool7.not32, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %child.033 = phi ptr [ %add.ptr14, %for.body.for.body_crit_edge ], [ %add.ptr, %if.end.for.body_crit_edge ]
  tail call fastcc void @clk_core_restore_context(ptr noundef nonnull %child.033)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.033, i32 0, i32 27
  %8 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %child_node, align 4
  %tobool10.not = icmp eq ptr %9, null
  %add.ptr14 = getelementptr i8, ptr %9, i32 -104
  %tobool7.not35 = icmp eq ptr %add.ptr14, null
  %tobool7.not = or i1 %tobool10.not, %tobool7.not35
  br i1 %tobool7.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_enable(ptr noundef readonly %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %call = tail call fastcc i32 @clk_core_enable_lock(ptr noundef %1)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_enable_lock(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @clk_enable_lock()
  %call1 = tail call fastcc i32 @clk_core_enable(ptr noundef %core)
  %0 = load ptr, ptr @enable_owner, align 4
  %1 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %0, %4
  br i1 %cmp.not.i, label %entry.if.end27.i_crit_edge, label %land.rhs.i

entry.if.end27.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %entry
  %.b98.i = load i1, ptr @clk_enable_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 190, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %entry.if.end27.i_crit_edge
  %5 = load i32, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp36.i = icmp eq i32 %5, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_enable_unlock.__already_done.156, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done.156, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 191, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %6 = load i32, ptr @enable_refcnt, align 4
  %dec.i = add i32 %6, -1
  store i32 %dec.i, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_enable_unlock.exit_crit_edge

if.end81.i.clk_enable_unlock.exit_crit_edge:      ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_enable_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @enable_owner, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @enable_lock, i32 noundef %call) #21
  br label %clk_enable_unlock.exit

clk_enable_unlock.exit:                           ; preds = %if.end91.i, %if.end81.i.clk_enable_unlock.exit_crit_edge
  ret i32 %call1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @clk_is_enabled_when_prepared(ptr noundef readonly %clk) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.land.end6_crit_edge, label %land.rhs

entry.land.end6_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end6

land.rhs:                                         ; preds = %entry
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %ops = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %enable = getelementptr inbounds %struct.clk_ops, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %enable to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %enable, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %land.rhs.land.end6_crit_edge, label %land.rhs2

land.rhs.land.end6_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end6

land.rhs2:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  %disable = getelementptr inbounds %struct.clk_ops, ptr %3, i32 0, i32 5
  %6 = ptrtoint ptr %disable to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %disable, align 4
  %tobool5 = icmp eq ptr %7, null
  br label %land.end6

land.end6:                                        ; preds = %land.rhs2, %land.rhs.land.end6_crit_edge, %entry.land.end6_crit_edge
  %8 = phi i1 [ false, %entry.land.end6_crit_edge ], [ true, %land.rhs.land.end6_crit_edge ], [ %tobool5, %land.rhs2 ]
  ret i1 %8
}

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @clk_ignore_unused_setup(ptr nocapture noundef readnone %__unused) #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  store i1 true, ptr @clk_ignore_unused, align 1
  ret i32 1
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_disable_unused() #7 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %.b122 = load i1, ptr @clk_ignore_unused, align 1
  br i1 %.b122, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.65) #26
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %0 = load ptr, ptr @clk_root_list, align 4
  %tobool2.not = icmp eq ptr %0, null
  %add.ptr = getelementptr i8, ptr %0, i32 -104
  %tobool4.not144152 = icmp eq ptr %add.ptr, null
  %tobool4.not144 = or i1 %tobool2.not, %tobool4.not144152
  br i1 %tobool4.not144, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %core.0145 = phi ptr [ %add.ptr11, %for.body.for.body_crit_edge ], [ %add.ptr, %if.end.for.body_crit_edge ]
  tail call fastcc void @clk_disable_unused_subtree(ptr noundef nonnull %core.0145) #27
  %child_node = getelementptr inbounds %struct.clk_core, ptr %core.0145, i32 0, i32 27
  %1 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %child_node, align 4
  %tobool7.not = icmp eq ptr %2, null
  %add.ptr11 = getelementptr i8, ptr %2, i32 -104
  %tobool4.not156 = icmp eq ptr %add.ptr11, null
  %tobool4.not = or i1 %tobool7.not, %tobool4.not156
  br i1 %tobool4.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  %3 = load ptr, ptr @clk_orphan_list, align 4
  %tobool17.not = icmp eq ptr %3, null
  %add.ptr21 = getelementptr i8, ptr %3, i32 -104
  %tobool26.not146153 = icmp eq ptr %add.ptr21, null
  %tobool26.not146 = or i1 %tobool17.not, %tobool26.not146153
  br i1 %tobool26.not146, label %for.end.for.end41_crit_edge, label %for.end.for.body27_crit_edge

for.end.for.body27_crit_edge:                     ; preds = %for.end
  br label %for.body27

for.end.for.end41_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end41

for.body27:                                       ; preds = %for.body27.for.body27_crit_edge, %for.end.for.body27_crit_edge
  %core.1147 = phi ptr [ %add.ptr37, %for.body27.for.body27_crit_edge ], [ %add.ptr21, %for.end.for.body27_crit_edge ]
  tail call fastcc void @clk_disable_unused_subtree(ptr noundef nonnull %core.1147) #27
  %child_node30 = getelementptr inbounds %struct.clk_core, ptr %core.1147, i32 0, i32 27
  %4 = ptrtoint ptr %child_node30 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %child_node30, align 4
  %tobool33.not = icmp eq ptr %5, null
  %add.ptr37 = getelementptr i8, ptr %5, i32 -104
  %tobool26.not157 = icmp eq ptr %add.ptr37, null
  %tobool26.not = or i1 %tobool33.not, %tobool26.not157
  br i1 %tobool26.not, label %for.body27.for.end41_crit_edge, label %for.body27.for.body27_crit_edge

for.body27.for.body27_crit_edge:                  ; preds = %for.body27
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body27

for.body27.for.end41_crit_edge:                   ; preds = %for.body27
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end41

for.end41:                                        ; preds = %for.body27.for.end41_crit_edge, %for.end.for.end41_crit_edge
  %6 = load ptr, ptr @clk_root_list, align 4
  %tobool44.not = icmp eq ptr %6, null
  %add.ptr48 = getelementptr i8, ptr %6, i32 -104
  %tobool53.not148154 = icmp eq ptr %add.ptr48, null
  %tobool53.not148 = or i1 %tobool44.not, %tobool53.not148154
  br i1 %tobool53.not148, label %for.end41.for.end68_crit_edge, label %for.end41.for.body54_crit_edge

for.end41.for.body54_crit_edge:                   ; preds = %for.end41
  br label %for.body54

for.end41.for.end68_crit_edge:                    ; preds = %for.end41
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end68

for.body54:                                       ; preds = %for.body54.for.body54_crit_edge, %for.end41.for.body54_crit_edge
  %core.2149 = phi ptr [ %add.ptr64, %for.body54.for.body54_crit_edge ], [ %add.ptr48, %for.end41.for.body54_crit_edge ]
  tail call fastcc void @clk_unprepare_unused_subtree(ptr noundef nonnull %core.2149) #27
  %child_node57 = getelementptr inbounds %struct.clk_core, ptr %core.2149, i32 0, i32 27
  %7 = ptrtoint ptr %child_node57 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %child_node57, align 4
  %tobool60.not = icmp eq ptr %8, null
  %add.ptr64 = getelementptr i8, ptr %8, i32 -104
  %tobool53.not158 = icmp eq ptr %add.ptr64, null
  %tobool53.not = or i1 %tobool60.not, %tobool53.not158
  br i1 %tobool53.not, label %for.body54.for.end68_crit_edge, label %for.body54.for.body54_crit_edge

for.body54.for.body54_crit_edge:                  ; preds = %for.body54
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body54

for.body54.for.end68_crit_edge:                   ; preds = %for.body54
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end68

for.end68:                                        ; preds = %for.body54.for.end68_crit_edge, %for.end41.for.end68_crit_edge
  %9 = load ptr, ptr @clk_orphan_list, align 4
  %tobool71.not = icmp eq ptr %9, null
  %add.ptr75 = getelementptr i8, ptr %9, i32 -104
  %tobool80.not150155 = icmp eq ptr %add.ptr75, null
  %tobool80.not150 = or i1 %tobool71.not, %tobool80.not150155
  br i1 %tobool80.not150, label %for.end68.for.end95_crit_edge, label %for.end68.for.body81_crit_edge

for.end68.for.body81_crit_edge:                   ; preds = %for.end68
  br label %for.body81

for.end68.for.end95_crit_edge:                    ; preds = %for.end68
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end95

for.body81:                                       ; preds = %for.body81.for.body81_crit_edge, %for.end68.for.body81_crit_edge
  %core.3151 = phi ptr [ %add.ptr91, %for.body81.for.body81_crit_edge ], [ %add.ptr75, %for.end68.for.body81_crit_edge ]
  tail call fastcc void @clk_unprepare_unused_subtree(ptr noundef nonnull %core.3151) #27
  %child_node84 = getelementptr inbounds %struct.clk_core, ptr %core.3151, i32 0, i32 27
  %10 = ptrtoint ptr %child_node84 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %child_node84, align 4
  %tobool87.not = icmp eq ptr %11, null
  %add.ptr91 = getelementptr i8, ptr %11, i32 -104
  %tobool80.not159 = icmp eq ptr %add.ptr91, null
  %tobool80.not = or i1 %tobool87.not, %tobool80.not159
  br i1 %tobool80.not, label %for.body81.for.end95_crit_edge, label %for.body81.for.body81_crit_edge

for.body81.for.body81_crit_edge:                  ; preds = %for.body81
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body81

for.body81.for.end95_crit_edge:                   ; preds = %for.body81
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end95

for.end95:                                        ; preds = %for.body81.for.end95_crit_edge, %for.end68.for.end95_crit_edge
  %12 = load ptr, ptr @prepare_owner, align 4
  %13 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %12, %16
  br i1 %cmp.not.i, label %for.end95.if.end27.i_crit_edge, label %land.rhs.i

for.end95.if.end27.i_crit_edge:                   ; preds = %for.end95
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %for.end95
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %for.end95.if.end27.i_crit_edge
  %17 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp36.i = icmp eq i32 %17, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %18 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %18, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %do.end
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_round_rate_nolock(ptr noundef readonly %core, ptr noundef %req) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool1.not.i = icmp eq ptr %req, null
  %best_parent_hw.i = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 4
  %best_parent_rate.i = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 3
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then31, %entry
  %core.tr = phi ptr [ %core, %entry ], [ %39, %if.then31 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %tailrecurse.if.end_crit_edge, label %land.rhs

tailrecurse.if.end_crit_edge:                     ; preds = %tailrecurse
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %tailrecurse
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1383, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %tailrecurse.if.end_crit_edge
  %tobool24.not = icmp eq ptr %core.tr, null
  br i1 %tobool24.not, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %1 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %req, align 4
  br label %return

if.end26:                                         ; preds = %if.end
  br i1 %tobool1.not.i, label %do.end.i, label %if.end24.i, !prof !754

do.end.i:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1362, i32 noundef 9, ptr noundef null) #21
  br label %clk_core_init_rate_req.exit

if.end24.i:                                       ; preds = %if.end26
  %parent25.i = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 6
  %2 = ptrtoint ptr %parent25.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent25.i, align 4
  %tobool26.not.i = icmp eq ptr %3, null
  br i1 %tobool26.not.i, label %if.else.i, label %if.then27.i

if.then27.i:                                      ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #23
  %hw.i = getelementptr inbounds %struct.clk_core, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw.i, align 4
  %6 = ptrtoint ptr %best_parent_hw.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %best_parent_hw.i, align 4
  %rate.i = getelementptr inbounds %struct.clk_core, ptr %3, i32 0, i32 10
  %7 = ptrtoint ptr %rate.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rate.i, align 4
  %9 = ptrtoint ptr %best_parent_rate.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %best_parent_rate.i, align 4
  br label %clk_core_init_rate_req.exit

if.else.i:                                        ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %best_parent_hw.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %best_parent_hw.i, align 4
  %11 = ptrtoint ptr %best_parent_rate.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %best_parent_rate.i, align 4
  br label %clk_core_init_rate_req.exit

clk_core_init_rate_req.exit:                      ; preds = %if.else.i, %if.then27.i, %do.end.i
  %ops.i = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 1
  %12 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops.i, align 4
  %determine_rate.i = getelementptr inbounds %struct.clk_ops, ptr %13, i32 0, i32 12
  %14 = ptrtoint ptr %determine_rate.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %determine_rate.i, align 4
  %tobool.not.i48 = icmp eq ptr %15, null
  br i1 %tobool.not.i48, label %clk_core_can_round.exit, label %clk_core_init_rate_req.exit.if.then28_crit_edge

clk_core_init_rate_req.exit.if.then28_crit_edge:  ; preds = %clk_core_init_rate_req.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then28

clk_core_can_round.exit:                          ; preds = %clk_core_init_rate_req.exit
  %round_rate.i = getelementptr inbounds %struct.clk_ops, ptr %13, i32 0, i32 11
  %16 = ptrtoint ptr %round_rate.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %round_rate.i, align 4
  %tobool2.i.not = icmp eq ptr %17, null
  br i1 %tobool2.i.not, label %if.else, label %clk_core_can_round.exit.if.then28_crit_edge

clk_core_can_round.exit.if.then28_crit_edge:      ; preds = %clk_core_can_round.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then28

if.then28:                                        ; preds = %clk_core_can_round.exit.if.then28_crit_edge, %clk_core_init_rate_req.exit.if.then28_crit_edge
  %ops.i.le = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %18 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i49 = icmp eq i32 %18, 0
  br i1 %tobool.not.i49, label %if.then28.if.end26.i_crit_edge, label %land.rhs.i

if.then28.if.end26.i_crit_edge:                   ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26.i

land.rhs.i:                                       ; preds = %if.then28
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i50, label %land.rhs.i.if.end26.i_crit_edge, !prof !754

land.rhs.i.if.end26.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26.i

do.end.i50:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1328, i32 noundef 9, ptr noundef null) #21
  br label %if.end26.i

if.end26.i:                                       ; preds = %do.end.i50, %land.rhs.i.if.end26.i_crit_edge, %if.then28.if.end26.i_crit_edge
  %protect_count.i.i = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 20
  %19 = ptrtoint ptr %protect_count.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %protect_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.i.not.i = icmp eq i32 %20, 0
  br i1 %tobool.i.not.i, label %if.else.i53, label %if.then28.i

if.then28.i:                                      ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %rate29.i = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 10
  %21 = ptrtoint ptr %rate29.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %rate29.i, align 4
  br label %if.end52.i

if.else.i53:                                      ; preds = %if.end26.i
  %23 = ptrtoint ptr %ops.i.le to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ops.i.le, align 4
  %determine_rate.i52 = getelementptr inbounds %struct.clk_ops, ptr %24, i32 0, i32 12
  %25 = ptrtoint ptr %determine_rate.i52 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %determine_rate.i52, align 4
  %tobool31.not.i = icmp eq ptr %26, null
  br i1 %tobool31.not.i, label %if.else36.i, label %if.then32.i

if.then32.i:                                      ; preds = %if.else.i53
  call void @__sanitizer_cov_trace_pc() #23
  %hw.i54 = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 2
  %27 = ptrtoint ptr %hw.i54 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw.i54, align 4
  %call35.i = tail call i32 %26(ptr noundef %28, ptr noundef %req) #21
  br label %return

if.else36.i:                                      ; preds = %if.else.i53
  %round_rate.i55 = getelementptr inbounds %struct.clk_ops, ptr %24, i32 0, i32 11
  %29 = ptrtoint ptr %round_rate.i55 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %round_rate.i55, align 4
  %tobool38.not.i = icmp eq ptr %30, null
  br i1 %tobool38.not.i, label %if.else36.i.return_crit_edge, label %if.then39.i

if.else36.i.return_crit_edge:                     ; preds = %if.else36.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.then39.i:                                      ; preds = %if.else36.i
  %hw42.i = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 2
  %31 = ptrtoint ptr %hw42.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %hw42.i, align 4
  %33 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %req, align 4
  %call44.i = tail call i32 %30(ptr noundef %32, i32 noundef %34, ptr noundef %best_parent_rate.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44.i)
  %cmp45.i = icmp slt i32 %call44.i, 0
  br i1 %cmp45.i, label %if.then39.i.return_crit_edge, label %if.then39.i.if.end52.i_crit_edge

if.then39.i.if.end52.i_crit_edge:                 ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end52.i

if.then39.i.return_crit_edge:                     ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end52.i:                                       ; preds = %if.then39.i.if.end52.i_crit_edge, %if.then28.i
  %storemerge.i = phi i32 [ %22, %if.then28.i ], [ %call44.i, %if.then39.i.if.end52.i_crit_edge ]
  %35 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %storemerge.i, ptr %req, align 4
  br label %return

if.else:                                          ; preds = %clk_core_can_round.exit
  %flags = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 15
  %36 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flags, align 4
  %and = and i32 %37, 4
  %tobool30.not = icmp eq i32 %and, 0
  br i1 %tobool30.not, label %if.end34, label %if.then31

if.then31:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %parent = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 6
  %38 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %parent, align 4
  br label %tailrecurse

if.end34:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %rate35 = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 10
  %40 = ptrtoint ptr %rate35 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rate35, align 4
  %42 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %req, align 4
  br label %return

return:                                           ; preds = %if.end34, %if.end52.i, %if.then39.i.return_crit_edge, %if.else36.i.return_crit_edge, %if.then32.i, %if.then25
  %retval.0 = phi i32 [ 0, %if.end34 ], [ 0, %if.then25 ], [ 0, %if.end52.i ], [ %call35.i, %if.then32.i ], [ %call44.i, %if.then39.i.return_crit_edge ], [ -22, %if.else36.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_hw_round_rate(ptr nocapture noundef readonly %hw, i32 noundef %rate) #0 align 64 {
entry:
  %req = alloca %struct.clk_rate_request, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %req) #21
  %0 = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 1
  %1 = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 2
  %2 = call ptr @memset(ptr %req, i32 255, i32 20)
  %3 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %5 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.rhs.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 623, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %min_rate24.i = getelementptr inbounds %struct.clk_core, ptr %4, i32 0, i32 21
  %6 = ptrtoint ptr %min_rate24.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %min_rate24.i, align 4
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %0, align 4
  %max_rate25.i = getelementptr inbounds %struct.clk_core, ptr %4, i32 0, i32 22
  %9 = ptrtoint ptr %max_rate25.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %max_rate25.i, align 4
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %1, align 4
  %clks.i = getelementptr inbounds %struct.clk_core, ptr %4, i32 0, i32 28
  %12 = ptrtoint ptr %clks.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %clks.i, align 4
  %tobool27.not.i = icmp eq ptr %13, null
  %add.ptr.i = getelementptr i8, ptr %13, i32 -28
  %tobool29.not119123.i = icmp eq ptr %add.ptr.i, null
  %tobool29.not119.i = or i1 %tobool27.not.i, %tobool29.not119123.i
  br i1 %tobool29.not119.i, label %if.end.i.for.end.i_crit_edge, label %for.body.i.preheader

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i.preheader:                             ; preds = %if.end.i
  %14 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.promoted = load i32, ptr %0, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.i.preheader
  %15 = phi i32 [ %18, %for.body.i.for.body.i_crit_edge ], [ %.promoted, %for.body.i.preheader ]
  %clk_user.0120.i = phi ptr [ %add.ptr43.i, %for.body.i.for.body.i_crit_edge ], [ %add.ptr.i, %for.body.i.preheader ]
  %min_rate30.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i, i32 0, i32 4
  %16 = ptrtoint ptr %min_rate30.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %min_rate30.i, align 4
  %18 = tail call i32 @llvm.umax.i32(i32 %15, i32 %17) #21
  %clks_node.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i, i32 0, i32 7
  %19 = ptrtoint ptr %clks_node.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %clks_node.i, align 4
  %tobool39.not.i = icmp eq ptr %20, null
  %add.ptr43.i = getelementptr i8, ptr %20, i32 -28
  %tobool29.not125.i = icmp eq ptr %add.ptr43.i, null
  %tobool29.not.i = or i1 %tobool39.not.i, %tobool29.not125.i
  br i1 %tobool29.not.i, label %for.end.i.loopexit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.end.i.loopexit:                               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %21 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %18, ptr %0, align 4
  br label %for.end.i

for.end.i:                                        ; preds = %for.end.i.loopexit, %if.end.i.for.end.i_crit_edge
  %22 = ptrtoint ptr %clks.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %clks.i, align 4
  %tobool51.not.i = icmp eq ptr %23, null
  %add.ptr55.i = getelementptr i8, ptr %23, i32 -28
  %tobool60.not121124.i = icmp eq ptr %add.ptr55.i, null
  %tobool60.not121.i = or i1 %tobool51.not.i, %tobool60.not121124.i
  br i1 %tobool60.not121.i, label %for.end.i.clk_core_get_boundaries.exit_crit_edge, label %for.body61.i.preheader

for.end.i.clk_core_get_boundaries.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit

for.body61.i.preheader:                           ; preds = %for.end.i
  %24 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %.promoted6 = load i32, ptr %1, align 4
  br label %for.body61.i

for.body61.i:                                     ; preds = %for.body61.i.for.body61.i_crit_edge, %for.body61.i.preheader
  %25 = phi i32 [ %28, %for.body61.i.for.body61.i_crit_edge ], [ %.promoted6, %for.body61.i.preheader ]
  %clk_user.1122.i = phi ptr [ %add.ptr78.i, %for.body61.i.for.body61.i_crit_edge ], [ %add.ptr55.i, %for.body61.i.preheader ]
  %max_rate62.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i, i32 0, i32 5
  %26 = ptrtoint ptr %max_rate62.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %max_rate62.i, align 4
  %28 = tail call i32 @llvm.umin.i32(i32 %25, i32 %27) #21
  %clks_node71.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i, i32 0, i32 7
  %29 = ptrtoint ptr %clks_node71.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %clks_node71.i, align 4
  %tobool74.not.i = icmp eq ptr %30, null
  %add.ptr78.i = getelementptr i8, ptr %30, i32 -28
  %tobool60.not126.i = icmp eq ptr %add.ptr78.i, null
  %tobool60.not.i = or i1 %tobool74.not.i, %tobool60.not126.i
  br i1 %tobool60.not.i, label %clk_core_get_boundaries.exit.loopexit, label %for.body61.i.for.body61.i_crit_edge

for.body61.i.for.body61.i_crit_edge:              ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body61.i

clk_core_get_boundaries.exit.loopexit:            ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  %31 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %28, ptr %1, align 4
  br label %clk_core_get_boundaries.exit

clk_core_get_boundaries.exit:                     ; preds = %clk_core_get_boundaries.exit.loopexit, %for.end.i.clk_core_get_boundaries.exit_crit_edge
  %32 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %rate, ptr %req, align 4
  %33 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %hw, align 4
  %call = call fastcc i32 @clk_core_round_rate_nolock(ptr noundef %34, ptr noundef nonnull %req)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %clk_core_get_boundaries.exit.cleanup_crit_edge

clk_core_get_boundaries.exit.cleanup_crit_edge:   ; preds = %clk_core_get_boundaries.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %clk_core_get_boundaries.exit
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %req, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %clk_core_get_boundaries.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %36, %if.end ], [ 0, %clk_core_get_boundaries.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %req) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_round_rate(ptr noundef readonly %clk, i32 noundef %rate) #0 align 64 {
entry:
  %req = alloca %struct.clk_rate_request, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %req) #21
  %0 = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 1
  %1 = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 2
  %tobool.not = icmp eq ptr %clk, null
  %2 = call ptr @memset(ptr %req, i32 255, i32 20)
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %3 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool1.not = icmp eq i32 %4, 0
  br i1 %tobool1.not, label %if.end.if.end3_crit_edge, label %if.end.tailrecurse.i_crit_edge

if.end.tailrecurse.i_crit_edge:                   ; preds = %if.end
  br label %tailrecurse.i

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

tailrecurse.i:                                    ; preds = %if.end64.i, %if.end.tailrecurse.i_crit_edge
  %core.tr.i.in = phi ptr [ %parent.i, %if.end64.i ], [ %clk, %if.end.tailrecurse.i_crit_edge ]
  %5 = ptrtoint ptr %core.tr.i.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %core.tr.i = load ptr, ptr %core.tr.i.in, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %tailrecurse.i.if.end.i_crit_edge, label %land.rhs.i

tailrecurse.i.if.end.i_crit_edge:                 ; preds = %tailrecurse.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %tailrecurse.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %tailrecurse.i.if.end.i_crit_edge
  %tobool24.not.i = icmp eq ptr %core.tr.i, null
  br i1 %tobool24.not.i, label %if.end.i.if.end3_crit_edge, label %if.end26.i

if.end.i.if.end3_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

if.end26.i:                                       ; preds = %if.end.i
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 20
  %7 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp28.i = icmp eq i32 %8, 0
  br i1 %cmp28.i, label %do.end44.i, label %if.end60.critedge.i, !prof !754

do.end44.i:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %9 = ptrtoint ptr %core.tr.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %core.tr.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %10) #21
  br label %if.end3

if.end60.critedge.i:                              ; preds = %if.end26.i
  %dec.i = add i32 %8, -1
  %11 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %dec.i, ptr %protect_count.i, align 4
  %cmp62.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp62.not.i, label %if.end64.i, label %if.end60.critedge.i.if.end3_crit_edge

if.end60.critedge.i.if.end3_crit_edge:            ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

if.end64.i:                                       ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 6
  br label %tailrecurse.i

if.end3:                                          ; preds = %if.end60.critedge.i.if.end3_crit_edge, %do.end44.i, %if.end.i.if.end3_crit_edge, %if.end.if.end3_crit_edge
  %12 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %clk, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %14 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.i24 = icmp eq i32 %14, 0
  br i1 %tobool.not.i24, label %if.end3.if.end.i29_crit_edge, label %land.rhs.i27

if.end3.if.end.i29_crit_edge:                     ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i29

land.rhs.i27:                                     ; preds = %if.end3
  %call.i.i25 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i25)
  %cmp.not.i26 = icmp eq i32 %call.i.i25, 0
  br i1 %cmp.not.i26, label %do.end.i28, label %land.rhs.i27.if.end.i29_crit_edge, !prof !754

land.rhs.i27.if.end.i29_crit_edge:                ; preds = %land.rhs.i27
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i29

do.end.i28:                                       ; preds = %land.rhs.i27
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 623, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i29

if.end.i29:                                       ; preds = %do.end.i28, %land.rhs.i27.if.end.i29_crit_edge, %if.end3.if.end.i29_crit_edge
  %min_rate24.i = getelementptr inbounds %struct.clk_core, ptr %13, i32 0, i32 21
  %15 = ptrtoint ptr %min_rate24.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %min_rate24.i, align 4
  %17 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %0, align 4
  %max_rate25.i = getelementptr inbounds %struct.clk_core, ptr %13, i32 0, i32 22
  %18 = ptrtoint ptr %max_rate25.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %max_rate25.i, align 4
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %1, align 4
  %clks.i = getelementptr inbounds %struct.clk_core, ptr %13, i32 0, i32 28
  %21 = ptrtoint ptr %clks.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %clks.i, align 4
  %tobool27.not.i = icmp eq ptr %22, null
  %add.ptr.i = getelementptr i8, ptr %22, i32 -28
  %tobool29.not119123.i = icmp eq ptr %add.ptr.i, null
  %tobool29.not119.i = or i1 %tobool27.not.i, %tobool29.not119123.i
  br i1 %tobool29.not119.i, label %if.end.i29.for.end.i_crit_edge, label %for.body.i.preheader

if.end.i29.for.end.i_crit_edge:                   ; preds = %if.end.i29
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i.preheader:                             ; preds = %if.end.i29
  %23 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %23)
  %.promoted = load i32, ptr %0, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.i.preheader
  %24 = phi i32 [ %27, %for.body.i.for.body.i_crit_edge ], [ %.promoted, %for.body.i.preheader ]
  %clk_user.0120.i = phi ptr [ %add.ptr43.i, %for.body.i.for.body.i_crit_edge ], [ %add.ptr.i, %for.body.i.preheader ]
  %min_rate30.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i, i32 0, i32 4
  %25 = ptrtoint ptr %min_rate30.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %min_rate30.i, align 4
  %27 = tail call i32 @llvm.umax.i32(i32 %24, i32 %26) #21
  %clks_node.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i, i32 0, i32 7
  %28 = ptrtoint ptr %clks_node.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %clks_node.i, align 4
  %tobool39.not.i = icmp eq ptr %29, null
  %add.ptr43.i = getelementptr i8, ptr %29, i32 -28
  %tobool29.not125.i = icmp eq ptr %add.ptr43.i, null
  %tobool29.not.i = or i1 %tobool39.not.i, %tobool29.not125.i
  br i1 %tobool29.not.i, label %for.end.i.loopexit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.end.i.loopexit:                               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %30 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %27, ptr %0, align 4
  br label %for.end.i

for.end.i:                                        ; preds = %for.end.i.loopexit, %if.end.i29.for.end.i_crit_edge
  %31 = ptrtoint ptr %clks.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %clks.i, align 4
  %tobool51.not.i = icmp eq ptr %32, null
  %add.ptr55.i = getelementptr i8, ptr %32, i32 -28
  %tobool60.not121124.i = icmp eq ptr %add.ptr55.i, null
  %tobool60.not121.i = or i1 %tobool51.not.i, %tobool60.not121124.i
  br i1 %tobool60.not121.i, label %for.end.i.clk_core_get_boundaries.exit_crit_edge, label %for.body61.i.preheader

for.end.i.clk_core_get_boundaries.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit

for.body61.i.preheader:                           ; preds = %for.end.i
  %33 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %.promoted34 = load i32, ptr %1, align 4
  br label %for.body61.i

for.body61.i:                                     ; preds = %for.body61.i.for.body61.i_crit_edge, %for.body61.i.preheader
  %34 = phi i32 [ %37, %for.body61.i.for.body61.i_crit_edge ], [ %.promoted34, %for.body61.i.preheader ]
  %clk_user.1122.i = phi ptr [ %add.ptr78.i, %for.body61.i.for.body61.i_crit_edge ], [ %add.ptr55.i, %for.body61.i.preheader ]
  %max_rate62.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i, i32 0, i32 5
  %35 = ptrtoint ptr %max_rate62.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %max_rate62.i, align 4
  %37 = tail call i32 @llvm.umin.i32(i32 %34, i32 %36) #21
  %clks_node71.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i, i32 0, i32 7
  %38 = ptrtoint ptr %clks_node71.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %clks_node71.i, align 4
  %tobool74.not.i = icmp eq ptr %39, null
  %add.ptr78.i = getelementptr i8, ptr %39, i32 -28
  %tobool60.not126.i = icmp eq ptr %add.ptr78.i, null
  %tobool60.not.i = or i1 %tobool74.not.i, %tobool60.not126.i
  br i1 %tobool60.not.i, label %clk_core_get_boundaries.exit.loopexit, label %for.body61.i.for.body61.i_crit_edge

for.body61.i.for.body61.i_crit_edge:              ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body61.i

clk_core_get_boundaries.exit.loopexit:            ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  %40 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %37, ptr %1, align 4
  br label %clk_core_get_boundaries.exit

clk_core_get_boundaries.exit:                     ; preds = %clk_core_get_boundaries.exit.loopexit, %for.end.i.clk_core_get_boundaries.exit_crit_edge
  %41 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %rate, ptr %req, align 4
  %42 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %clk, align 4
  %call = call fastcc i32 @clk_core_round_rate_nolock(ptr noundef %43, ptr noundef nonnull %req)
  %44 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool8.not = icmp eq i32 %45, 0
  br i1 %tobool8.not, label %clk_core_get_boundaries.exit.if.end11_crit_edge, label %if.then9

clk_core_get_boundaries.exit.if.end11_crit_edge:  ; preds = %clk_core_get_boundaries.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11

if.then9:                                         ; preds = %clk_core_get_boundaries.exit
  call void @__sanitizer_cov_trace_pc() #23
  %46 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %clk, align 4
  call fastcc void @clk_core_rate_protect(ptr noundef %47)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %clk_core_get_boundaries.exit.if.end11_crit_edge
  %48 = load ptr, ptr @prepare_owner, align 4
  %49 = call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 2
  %51 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %task.i, align 8
  %cmp.not.i30 = icmp eq ptr %48, %52
  br i1 %cmp.not.i30, label %if.end11.if.end27.i_crit_edge, label %land.rhs.i31

if.end11.if.end27.i_crit_edge:                    ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i31:                                     ; preds = %if.end11
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i31.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i31.if.end27.i_crit_edge:                ; preds = %land.rhs.i31
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i31
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i31.if.end27.i_crit_edge, %if.end11.if.end27.i_crit_edge
  %53 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp36.i = icmp eq i32 %53, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %54 = load i32, ptr @prepare_refcnt, align 4
  %dec.i32 = add i32 %54, -1
  store i32 %dec.i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i32)
  %tobool89.not.i = icmp eq i32 %dec.i32, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool12.not = icmp eq i32 %call, 0
  br i1 %tobool12.not, label %if.end14, label %clk_prepare_unlock.exit.cleanup_crit_edge

clk_prepare_unlock.exit.cleanup_crit_edge:        ; preds = %clk_prepare_unlock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end14:                                         ; preds = %clk_prepare_unlock.exit
  call void @__sanitizer_cov_trace_pc() #23
  %55 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %req, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %clk_prepare_unlock.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %56, %if.end14 ], [ 0, %entry.cleanup_crit_edge ], [ %call, %clk_prepare_unlock.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %req) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_get_accuracy(ptr noundef readonly %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.clk_core_get_accuracy_recalc.exit_crit_edge, label %land.lhs.true.i

if.end.clk_core_get_accuracy_recalc.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_accuracy_recalc.exit

land.lhs.true.i:                                  ; preds = %if.end
  %flags.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %3, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.end.i.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__clk_recalc_accuracies(ptr noundef nonnull %1) #21
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i, %land.lhs.true.i.if.end.i.i_crit_edge
  %accuracy.i.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 23
  %4 = ptrtoint ptr %accuracy.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %accuracy.i.i, align 4
  br label %clk_core_get_accuracy_recalc.exit

clk_core_get_accuracy_recalc.exit:                ; preds = %if.end.i.i, %if.end.clk_core_get_accuracy_recalc.exit_crit_edge
  %retval.0.i.i = phi i32 [ %5, %if.end.i.i ], [ 0, %if.end.clk_core_get_accuracy_recalc.exit_crit_edge ]
  %6 = load ptr, ptr @prepare_owner, align 4
  %7 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %6, %10
  br i1 %cmp.not.i, label %clk_core_get_accuracy_recalc.exit.if.end27.i_crit_edge, label %land.rhs.i

clk_core_get_accuracy_recalc.exit.if.end27.i_crit_edge: ; preds = %clk_core_get_accuracy_recalc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %clk_core_get_accuracy_recalc.exit
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i2, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i2:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i2, %land.rhs.i.if.end27.i_crit_edge, %clk_core_get_accuracy_recalc.exit.if.end27.i_crit_edge
  %11 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp36.i = icmp eq i32 %11, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %12 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %12, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %retval.0.i.i, %if.end81.i.cleanup_crit_edge ], [ %retval.0.i.i, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_get_rate(ptr noundef readonly %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.clk_core_get_rate_recalc.exit_crit_edge, label %land.lhs.true.i

if.end.clk_core_get_rate_recalc.exit_crit_edge:   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_recalc.exit

land.lhs.true.i:                                  ; preds = %if.end
  %flags.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.end.i.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__clk_recalc_rates(ptr noundef nonnull %1, i32 noundef 0) #21
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i, %land.lhs.true.i.if.end.i.i_crit_edge
  %num_parents.i.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 8
  %4 = ptrtoint ptr %num_parents.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %num_parents.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not.i.i = icmp eq i8 %5, 0
  br i1 %tobool1.not.i.i, label %if.end.i.i.if.then3.i.i_crit_edge, label %lor.lhs.false.i.i

if.end.i.i.if.then3.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i.i

lor.lhs.false.i.i:                                ; preds = %if.end.i.i
  %parent.i.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 6
  %6 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %parent.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %7, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.clk_core_get_rate_recalc.exit_crit_edge, label %lor.lhs.false.i.i.if.then3.i.i_crit_edge

lor.lhs.false.i.i.if.then3.i.i_crit_edge:         ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i.i

lor.lhs.false.i.i.clk_core_get_rate_recalc.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_recalc.exit

if.then3.i.i:                                     ; preds = %lor.lhs.false.i.i.if.then3.i.i_crit_edge, %if.end.i.i.if.then3.i.i_crit_edge
  %rate.i.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 10
  %8 = ptrtoint ptr %rate.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rate.i.i, align 4
  br label %clk_core_get_rate_recalc.exit

clk_core_get_rate_recalc.exit:                    ; preds = %if.then3.i.i, %lor.lhs.false.i.i.clk_core_get_rate_recalc.exit_crit_edge, %if.end.clk_core_get_rate_recalc.exit_crit_edge
  %retval.0.i.i = phi i32 [ %9, %if.then3.i.i ], [ 0, %lor.lhs.false.i.i.clk_core_get_rate_recalc.exit_crit_edge ], [ 0, %if.end.clk_core_get_rate_recalc.exit_crit_edge ]
  %10 = load ptr, ptr @prepare_owner, align 4
  %11 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %10, %14
  br i1 %cmp.not.i, label %clk_core_get_rate_recalc.exit.if.end27.i_crit_edge, label %land.rhs.i

clk_core_get_rate_recalc.exit.if.end27.i_crit_edge: ; preds = %clk_core_get_rate_recalc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %clk_core_get_rate_recalc.exit
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i2, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i2:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i2, %land.rhs.i.if.end27.i_crit_edge, %clk_core_get_rate_recalc.exit.if.end27.i_crit_edge
  %15 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp36.i = icmp eq i32 %15, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %16 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %16, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %retval.0.i.i, %if.end81.i.cleanup_crit_edge ], [ %retval.0.i.i, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_hw_get_parent_index(ptr nocapture noundef readonly %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.do.end_crit_edge, label %clk_hw_get_parent.exit

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

clk_hw_get_parent.exit:                           ; preds = %entry
  %hw3.i = getelementptr inbounds %struct.clk_core, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %hw3.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw3.i, align 4
  %cmp = icmp eq ptr %5, null
  br i1 %cmp, label %clk_hw_get_parent.exit.do.end_crit_edge, label %if.end21, !prof !754

clk_hw_get_parent.exit.do.end_crit_edge:          ; preds = %clk_hw_get_parent.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

do.end:                                           ; preds = %clk_hw_get_parent.exit.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1722, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end21:                                         ; preds = %clk_hw_get_parent.exit
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %call23 = tail call fastcc i32 @clk_fetch_parent_index(ptr noundef %1, ptr noundef %7)
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %call23, %if.end21 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_fetch_parent_index(ptr nocapture noundef readonly %core, ptr noundef %parent) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %parent, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 8
  %0 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp82.not = icmp eq i8 %1, 0
  br i1 %cmp82.not, label %for.cond.preheader.for.end_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 7
  %hw20 = getelementptr inbounds %struct.clk_core, ptr %parent, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.083 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %parents to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parents, align 4
  %arrayidx = getelementptr %struct.clk_parent_map, ptr %3, i32 %i.083
  %core2 = getelementptr %struct.clk_parent_map, ptr %3, i32 %i.083, i32 1
  %4 = ptrtoint ptr %core2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %core2, align 4
  %cmp3 = icmp eq ptr %5, %parent
  br i1 %cmp3, label %for.body.cleanup_crit_edge, label %if.end6

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end6:                                          ; preds = %for.body
  %tobool10.not = icmp eq ptr %5, null
  br i1 %tobool10.not, label %if.end12, label %if.end6.for.inc_crit_edge

if.end6.for.inc_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end12:                                         ; preds = %if.end6
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %tobool15.not = icmp eq ptr %7, null
  br i1 %tobool15.not, label %if.end25, label %if.then16

if.then16:                                        ; preds = %if.end12
  %8 = ptrtoint ptr %hw20 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw20, align 4
  %cmp21 = icmp eq ptr %7, %9
  br i1 %cmp21, label %if.then16.for.end_crit_edge, label %if.then16.for.inc_crit_edge

if.then16.for.inc_crit_edge:                      ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then16.for.end_crit_edge:                      ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

if.end25:                                         ; preds = %if.end12
  %conv26 = trunc i32 %i.083 to i8
  %call = tail call fastcc ptr @clk_core_get(ptr noundef %core, i8 noundef zeroext %conv26)
  %cmp27 = icmp eq ptr %call, %parent
  br i1 %cmp27, label %if.end25.for.end_crit_edge, label %if.end30

if.end25.for.end_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

if.end30:                                         ; preds = %if.end25
  %10 = ptrtoint ptr %parents to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %parents, align 4
  %name = getelementptr %struct.clk_parent_map, ptr %11, i32 %i.083, i32 3
  %12 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %name, align 4
  %tobool33.not = icmp eq ptr %13, null
  br i1 %tobool33.not, label %if.end30.for.inc_crit_edge, label %land.lhs.true

if.end30.for.inc_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

land.lhs.true:                                    ; preds = %if.end30
  %14 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %parent, align 4
  %call38 = tail call i32 @strcmp(ptr noundef %15, ptr noundef nonnull %13) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %land.lhs.true.for.end_crit_edge, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

land.lhs.true.for.end_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc:                                          ; preds = %land.lhs.true.for.inc_crit_edge, %if.end30.for.inc_crit_edge, %if.then16.for.inc_crit_edge, %if.end6.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.083, 1
  %16 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %num_parents, align 4
  %conv = zext i8 %17 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %land.lhs.true.for.end_crit_edge, %if.end25.for.end_crit_edge, %if.then16.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %for.cond.preheader.for.end_crit_edge ], [ %i.083, %land.lhs.true.for.end_crit_edge ], [ %i.083, %if.end25.for.end_crit_edge ], [ %i.083, %if.then16.for.end_crit_edge ], [ %inc, %for.inc.for.end_crit_edge ]
  %18 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %num_parents, align 4
  %conv43 = zext i8 %19 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa, i32 %conv43)
  %cmp44 = icmp eq i32 %i.0.lcssa, %conv43
  br i1 %cmp44, label %for.end.cleanup_crit_edge, label %if.end47

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end47:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %parents48 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 7
  %20 = ptrtoint ptr %parents48 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %parents48, align 4
  %core50 = getelementptr %struct.clk_parent_map, ptr %21, i32 %i.0.lcssa, i32 1
  %22 = ptrtoint ptr %core50 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %parent, ptr %core50, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end47, %for.end.cleanup_crit_edge, %for.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %i.0.lcssa, %if.end47 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %for.end.cleanup_crit_edge ], [ %i.083, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_set_rate(ptr noundef readonly %clk, i32 noundef %rate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %0 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %if.end.if.end3_crit_edge, label %if.end.tailrecurse.i_crit_edge

if.end.tailrecurse.i_crit_edge:                   ; preds = %if.end
  br label %tailrecurse.i

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

tailrecurse.i:                                    ; preds = %if.end64.i, %if.end.tailrecurse.i_crit_edge
  %core.tr.i.in = phi ptr [ %parent.i, %if.end64.i ], [ %clk, %if.end.tailrecurse.i_crit_edge ]
  %2 = ptrtoint ptr %core.tr.i.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %core.tr.i = load ptr, ptr %core.tr.i.in, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %tailrecurse.i.if.end.i_crit_edge, label %land.rhs.i

tailrecurse.i.if.end.i_crit_edge:                 ; preds = %tailrecurse.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %tailrecurse.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %tailrecurse.i.if.end.i_crit_edge
  %tobool24.not.i = icmp eq ptr %core.tr.i, null
  br i1 %tobool24.not.i, label %if.end.i.if.end3_crit_edge, label %if.end26.i

if.end.i.if.end3_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

if.end26.i:                                       ; preds = %if.end.i
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 20
  %4 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp28.i = icmp eq i32 %5, 0
  br i1 %cmp28.i, label %do.end44.i, label %if.end60.critedge.i, !prof !754

do.end44.i:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %core.tr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %core.tr.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %7) #21
  br label %if.end3

if.end60.critedge.i:                              ; preds = %if.end26.i
  %dec.i = add i32 %5, -1
  %8 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %dec.i, ptr %protect_count.i, align 4
  %cmp62.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp62.not.i, label %if.end64.i, label %if.end60.critedge.i.if.end3_crit_edge

if.end60.critedge.i.if.end3_crit_edge:            ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

if.end64.i:                                       ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 6
  br label %tailrecurse.i

if.end3:                                          ; preds = %if.end60.critedge.i.if.end3_crit_edge, %do.end44.i, %if.end.i.if.end3_crit_edge, %if.end.if.end3_crit_edge
  %9 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %clk, align 4
  %call = tail call fastcc i32 @clk_core_set_rate_nolock(ptr noundef %10, i32 noundef %rate)
  %11 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool6.not = icmp eq i32 %12, 0
  br i1 %tobool6.not, label %if.end3.if.end9_crit_edge, label %if.then7

if.end3.if.end9_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then7:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %13 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %clk, align 4
  tail call fastcc void @clk_core_rate_protect(ptr noundef %14)
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end3.if.end9_crit_edge
  %15 = load ptr, ptr @prepare_owner, align 4
  %16 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %cmp.not.i15 = icmp eq ptr %15, %19
  br i1 %cmp.not.i15, label %if.end9.if.end27.i_crit_edge, label %land.rhs.i16

if.end9.if.end27.i_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i16:                                     ; preds = %if.end9
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i16.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i16.if.end27.i_crit_edge:                ; preds = %land.rhs.i16
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i16
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i16.if.end27.i_crit_edge, %if.end9.if.end27.i_crit_edge
  %20 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp36.i = icmp eq i32 %20, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %21 = load i32, ptr @prepare_refcnt, align 4
  %dec.i17 = add i32 %21, -1
  store i32 %dec.i17, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i17)
  %tobool89.not.i = icmp eq i32 %dec.i17, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call, %if.end81.i.cleanup_crit_edge ], [ %call, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_set_rate_nolock(ptr noundef %core, i32 noundef %req_rate) unnamed_addr #0 align 64 {
entry:
  %req.i = alloca %struct.clk_rate_request, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %core, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %req.i) #21
  %0 = getelementptr inbounds %struct.clk_rate_request, ptr %req.i, i32 0, i32 1
  %1 = getelementptr inbounds %struct.clk_rate_request, ptr %req.i, i32 0, i32 2
  %2 = getelementptr inbounds i8, ptr %req.i, i32 12
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_storeN_noabort(i32 %3, i32 8)
  store i64 -1, ptr %2, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.if.end26.i.i_crit_edge, label %land.rhs.i

if.end.if.end26.i.i_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26.i.i

land.rhs.i:                                       ; preds = %if.end
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end26.i_crit_edge, !prof !754

land.rhs.i.if.end26.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2153, i32 noundef 9, ptr noundef null) #21
  br label %if.end26.i

if.end26.i:                                       ; preds = %do.end.i, %land.rhs.i.if.end26.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %.pr = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool.not.i.i = icmp eq i32 %.pr, 0
  br i1 %tobool.not.i.i, label %if.end26.i.if.end26.i.i_crit_edge, label %land.rhs.i.i

if.end26.i.if.end26.i.i_crit_edge:                ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26.i.i

land.rhs.i.i:                                     ; preds = %if.end26.i
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end26.i.i_crit_edge, !prof !754

land.rhs.i.i.if.end26.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26.i.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 691, i32 noundef 9, ptr noundef null) #21
  br label %if.end26.i.i

if.end26.i.i:                                     ; preds = %do.end.i.i, %land.rhs.i.i.if.end26.i.i_crit_edge, %if.end26.i.if.end26.i.i_crit_edge, %if.end.if.end26.i.i_crit_edge
  %protect_count.i.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 20
  %5 = ptrtoint ptr %protect_count.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %protect_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp27.i.i = icmp eq i32 %6, 0
  br i1 %cmp27.i.i, label %if.end26.i.i.if.end30.i_crit_edge, label %if.end29.i.i

if.end26.i.i.if.end30.i_crit_edge:                ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30.i

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %7 = ptrtoint ptr %protect_count.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 1, ptr %protect_count.i.i, align 4
  br label %tailrecurse.i.i.i

tailrecurse.i.i.i:                                ; preds = %if.end64.i.i.i, %if.end29.i.i
  %core.tr.i.i.i = phi ptr [ %core, %if.end29.i.i ], [ %15, %if.end64.i.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %8 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i.i.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i.i.i, label %tailrecurse.i.i.i.if.end.i.i.i_crit_edge, label %land.rhs.i.i.i

tailrecurse.i.i.i.if.end.i.i.i_crit_edge:         ; preds = %tailrecurse.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i

land.rhs.i.i.i:                                   ; preds = %tailrecurse.i.i.i
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %cmp.not.i.i.i, label %do.end.i.i.i, label %land.rhs.i.i.i.if.end.i.i.i_crit_edge, !prof !754

land.rhs.i.i.i.if.end.i.i.i_crit_edge:            ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i

do.end.i.i.i:                                     ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %do.end.i.i.i, %land.rhs.i.i.i.if.end.i.i.i_crit_edge, %tailrecurse.i.i.i.if.end.i.i.i_crit_edge
  %tobool24.not.i.i.i = icmp eq ptr %core.tr.i.i.i, null
  br i1 %tobool24.not.i.i.i, label %if.end.i.i.i.clk_core_rate_nuke_protect.exit.i_crit_edge, label %if.end26.i.i.i

if.end.i.i.i.clk_core_rate_nuke_protect.exit.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_rate_nuke_protect.exit.i

if.end26.i.i.i:                                   ; preds = %if.end.i.i.i
  %protect_count.i.i.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i.i.i, i32 0, i32 20
  %9 = ptrtoint ptr %protect_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %protect_count.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp28.i.i.i = icmp eq i32 %10, 0
  br i1 %cmp28.i.i.i, label %do.end44.i.i.i, label %if.end60.critedge.i.i.i, !prof !754

do.end44.i.i.i:                                   ; preds = %if.end26.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %core.tr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %core.tr.i.i.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %12) #21
  br label %clk_core_rate_nuke_protect.exit.i

if.end60.critedge.i.i.i:                          ; preds = %if.end26.i.i.i
  %dec.i.i.i = add i32 %10, -1
  %13 = ptrtoint ptr %protect_count.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %dec.i.i.i, ptr %protect_count.i.i.i, align 4
  %cmp62.not.i.i.i = icmp eq i32 %dec.i.i.i, 0
  br i1 %cmp62.not.i.i.i, label %if.end64.i.i.i, label %if.end60.critedge.i.i.i.clk_core_rate_nuke_protect.exit.i_crit_edge

if.end60.critedge.i.i.i.clk_core_rate_nuke_protect.exit.i_crit_edge: ; preds = %if.end60.critedge.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_rate_nuke_protect.exit.i

if.end64.i.i.i:                                   ; preds = %if.end60.critedge.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i.i.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i.i.i, i32 0, i32 6
  %14 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %parent.i.i.i, align 4
  br label %tailrecurse.i.i.i

clk_core_rate_nuke_protect.exit.i:                ; preds = %if.end60.critedge.i.i.i.clk_core_rate_nuke_protect.exit.i_crit_edge, %do.end44.i.i.i, %if.end.i.i.i.clk_core_rate_nuke_protect.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp28.i = icmp slt i32 %6, 0
  br i1 %cmp28.i, label %clk_core_rate_nuke_protect.exit.i.if.end.i47_crit_edge, label %clk_core_rate_nuke_protect.exit.i.if.end30.i_crit_edge

clk_core_rate_nuke_protect.exit.i.if.end30.i_crit_edge: ; preds = %clk_core_rate_nuke_protect.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30.i

clk_core_rate_nuke_protect.exit.i.if.end.i47_crit_edge: ; preds = %clk_core_rate_nuke_protect.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i47

if.end30.i:                                       ; preds = %clk_core_rate_nuke_protect.exit.i.if.end30.i_crit_edge, %if.end26.i.i.if.end30.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %16 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i43.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i43.i, label %if.end30.i.if.end.i48.i_crit_edge, label %land.rhs.i46.i

if.end30.i.if.end.i48.i_crit_edge:                ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i48.i

land.rhs.i46.i:                                   ; preds = %if.end30.i
  %call.i.i44.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i44.i)
  %cmp.not.i45.i = icmp eq i32 %call.i.i44.i, 0
  br i1 %cmp.not.i45.i, label %do.end.i47.i, label %land.rhs.i46.i.if.end.i48.i_crit_edge, !prof !754

land.rhs.i46.i.if.end.i48.i_crit_edge:            ; preds = %land.rhs.i46.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i48.i

do.end.i47.i:                                     ; preds = %land.rhs.i46.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 623, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i48.i

if.end.i48.i:                                     ; preds = %do.end.i47.i, %land.rhs.i46.i.if.end.i48.i_crit_edge, %if.end30.i.if.end.i48.i_crit_edge
  %min_rate24.i.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 21
  %17 = ptrtoint ptr %min_rate24.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %min_rate24.i.i, align 4
  %19 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %0, align 4
  %max_rate25.i.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 22
  %20 = ptrtoint ptr %max_rate25.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %max_rate25.i.i, align 4
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %1, align 4
  %clks.i.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 28
  %23 = ptrtoint ptr %clks.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %clks.i.i, align 4
  %tobool27.not.i.i = icmp eq ptr %24, null
  %add.ptr.i.i = getelementptr i8, ptr %24, i32 -28
  %tobool29.not119123.i.i = icmp eq ptr %add.ptr.i.i, null
  %tobool29.not119.i.i = or i1 %tobool27.not.i.i, %tobool29.not119123.i.i
  br i1 %tobool29.not119.i.i, label %if.end.i48.i.clk_core_get_boundaries.exit.i_crit_edge, label %if.end.i48.i.for.body.i.i_crit_edge

if.end.i48.i.for.body.i.i_crit_edge:              ; preds = %if.end.i48.i
  br label %for.body.i.i

if.end.i48.i.clk_core_get_boundaries.exit.i_crit_edge: ; preds = %if.end.i48.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.end.i48.i.for.body.i.i_crit_edge
  %25 = phi i32 [ %28, %for.body.i.i.for.body.i.i_crit_edge ], [ %18, %if.end.i48.i.for.body.i.i_crit_edge ]
  %clk_user.0120.i.i = phi ptr [ %add.ptr43.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %add.ptr.i.i, %if.end.i48.i.for.body.i.i_crit_edge ]
  %min_rate30.i.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i.i, i32 0, i32 4
  %26 = ptrtoint ptr %min_rate30.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %min_rate30.i.i, align 4
  %28 = tail call i32 @llvm.umax.i32(i32 %25, i32 %27) #21
  %clks_node.i.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i.i, i32 0, i32 7
  %29 = ptrtoint ptr %clks_node.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %clks_node.i.i, align 4
  %tobool39.not.i.i = icmp eq ptr %30, null
  %add.ptr43.i.i = getelementptr i8, ptr %30, i32 -28
  %tobool29.not125.i.i = icmp eq ptr %add.ptr43.i.i, null
  %tobool29.not.i.i = or i1 %tobool39.not.i.i, %tobool29.not125.i.i
  br i1 %tobool29.not.i.i, label %for.body61.i.preheader.i, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.body61.i.preheader.i:                         ; preds = %for.body.i.i
  %31 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %28, ptr %0, align 4
  br label %for.body61.i.i

for.body61.i.i:                                   ; preds = %for.body61.i.i.for.body61.i.i_crit_edge, %for.body61.i.preheader.i
  %32 = phi i32 [ %35, %for.body61.i.i.for.body61.i.i_crit_edge ], [ %21, %for.body61.i.preheader.i ]
  %clk_user.1122.i.i = phi ptr [ %add.ptr78.i.i, %for.body61.i.i.for.body61.i.i_crit_edge ], [ %add.ptr.i.i, %for.body61.i.preheader.i ]
  %max_rate62.i.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i.i, i32 0, i32 5
  %33 = ptrtoint ptr %max_rate62.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %max_rate62.i.i, align 4
  %35 = tail call i32 @llvm.umin.i32(i32 %32, i32 %34) #21
  %clks_node71.i.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i.i, i32 0, i32 7
  %36 = ptrtoint ptr %clks_node71.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %clks_node71.i.i, align 4
  %tobool74.not.i.i = icmp eq ptr %37, null
  %add.ptr78.i.i = getelementptr i8, ptr %37, i32 -28
  %tobool60.not126.i.i = icmp eq ptr %add.ptr78.i.i, null
  %tobool60.not.i.i = or i1 %tobool74.not.i.i, %tobool60.not126.i.i
  br i1 %tobool60.not.i.i, label %clk_core_get_boundaries.exit.loopexit.i, label %for.body61.i.i.for.body61.i.i_crit_edge

for.body61.i.i.for.body61.i.i_crit_edge:          ; preds = %for.body61.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body61.i.i

clk_core_get_boundaries.exit.loopexit.i:          ; preds = %for.body61.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %38 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %35, ptr %1, align 4
  br label %clk_core_get_boundaries.exit.i

clk_core_get_boundaries.exit.i:                   ; preds = %clk_core_get_boundaries.exit.loopexit.i, %if.end.i48.i.clk_core_get_boundaries.exit.i_crit_edge
  %39 = ptrtoint ptr %req.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %req_rate, ptr %req.i, align 4
  %call31.i = call fastcc i32 @clk_core_round_rate_nolock(ptr noundef nonnull %core, ptr noundef nonnull %req.i) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %40 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i49.i = icmp eq i32 %40, 0
  br i1 %tobool.not.i49.i, label %clk_core_get_boundaries.exit.i.if.end.i56.i_crit_edge, label %land.rhs.i52.i

clk_core_get_boundaries.exit.i.if.end.i56.i_crit_edge: ; preds = %clk_core_get_boundaries.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i56.i

land.rhs.i52.i:                                   ; preds = %clk_core_get_boundaries.exit.i
  %call.i.i50.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i50.i)
  %cmp.not.i51.i = icmp eq i32 %call.i.i50.i, 0
  br i1 %cmp.not.i51.i, label %do.end.i53.i, label %land.rhs.i52.i.if.end.i56.i_crit_edge, !prof !754

land.rhs.i52.i.if.end.i56.i_crit_edge:            ; preds = %land.rhs.i52.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i56.i

do.end.i53.i:                                     ; preds = %land.rhs.i52.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 760, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i56.i

if.end.i56.i:                                     ; preds = %do.end.i53.i, %land.rhs.i52.i.if.end.i56.i_crit_edge, %clk_core_get_boundaries.exit.i.if.end.i56.i_crit_edge
  br i1 %cmp27.i.i, label %if.end.i56.i.clk_core_rate_restore_protect.exit.i_crit_edge, label %if.end29.i58.i

if.end.i56.i.clk_core_rate_restore_protect.exit.i_crit_edge: ; preds = %if.end.i56.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_rate_restore_protect.exit.i

if.end29.i58.i:                                   ; preds = %if.end.i56.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @clk_core_rate_protect(ptr noundef nonnull %core) #21
  %41 = ptrtoint ptr %protect_count.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %6, ptr %protect_count.i.i, align 4
  br label %clk_core_rate_restore_protect.exit.i

clk_core_rate_restore_protect.exit.i:             ; preds = %if.end29.i58.i, %if.end.i56.i.clk_core_rate_restore_protect.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31.i)
  %tobool32.not.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.not.i, label %cond.false.i, label %clk_core_rate_restore_protect.exit.i.if.end.i47_crit_edge

clk_core_rate_restore_protect.exit.i.if.end.i47_crit_edge: ; preds = %clk_core_rate_restore_protect.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i47

cond.false.i:                                     ; preds = %clk_core_rate_restore_protect.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %42 = ptrtoint ptr %req.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %req.i, align 4
  br label %if.end.i47

if.end.i47:                                       ; preds = %cond.false.i, %clk_core_rate_restore_protect.exit.i.if.end.i47_crit_edge, %clk_core_rate_nuke_protect.exit.i.if.end.i47_crit_edge
  %retval.0.i45 = phi i32 [ %6, %clk_core_rate_nuke_protect.exit.i.if.end.i47_crit_edge ], [ %43, %cond.false.i ], [ 0, %clk_core_rate_restore_protect.exit.i.if.end.i47_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %req.i) #21
  %num_parents.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 8
  %44 = ptrtoint ptr %num_parents.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %num_parents.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool1.not.i = icmp eq i8 %45, 0
  br i1 %tobool1.not.i, label %if.end.i47.if.then3.i_crit_edge, label %lor.lhs.false.i

if.end.i47.if.then3.i_crit_edge:                  ; preds = %if.end.i47
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i:                                  ; preds = %if.end.i47
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %46 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %parent.i, align 4
  %tobool2.not.i = icmp eq ptr %47, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge, label %lor.lhs.false.i.if.then3.i_crit_edge

lor.lhs.false.i.if.then3.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_nolock.exit

if.then3.i:                                       ; preds = %lor.lhs.false.i.if.then3.i_crit_edge, %if.end.i47.if.then3.i_crit_edge
  %rate.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 10
  %48 = ptrtoint ptr %rate.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rate.i, align 4
  br label %clk_core_get_rate_nolock.exit

clk_core_get_rate_nolock.exit:                    ; preds = %if.then3.i, %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge
  %retval.0.i48 = phi i32 [ %49, %if.then3.i ], [ 0, %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i45, i32 %retval.0.i48)
  %cmp = icmp eq i32 %retval.0.i45, %retval.0.i48
  br i1 %cmp, label %clk_core_get_rate_nolock.exit.cleanup_crit_edge, label %if.end3

clk_core_get_rate_nolock.exit.cleanup_crit_edge:  ; preds = %clk_core_get_rate_nolock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %clk_core_get_rate_nolock.exit
  %50 = ptrtoint ptr %protect_count.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %protect_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.i.not = icmp eq i32 %51, 0
  br i1 %tobool.i.not, label %if.end6, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end6:                                          ; preds = %if.end3
  %call7 = call fastcc ptr @clk_calc_new_rates(ptr noundef nonnull %core, i32 noundef %req_rate)
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %if.end6.cleanup_crit_edge, label %if.end10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %52 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool.not.i49 = icmp eq i8 %53, 0
  br i1 %tobool.not.i49, label %if.end10.if.end14_crit_edge, label %if.end.i51

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

if.end.i51:                                       ; preds = %if.end10
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %54 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %dev.i, align 4
  %call.i.i50 = call i32 @__pm_runtime_resume(ptr noundef %55, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i50)
  %cmp.i = icmp slt i32 %call.i.i50, 0
  br i1 %cmp.i, label %if.then1.i, label %if.end.i51.if.end14_crit_edge

if.end.i51.if.end14_crit_edge:                    ; preds = %if.end.i51
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

if.then1.i:                                       ; preds = %if.end.i51
  %56 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %57, i32 0, i32 12, i32 13
  %call.i.i.i.i52 = call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !757
  call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %58 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !758
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %58, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.then1.i.cleanup_crit_edge, label %do.end11.i.i.i.i.i

if.then1.i.cleanup_crit_edge:                     ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end11.i.i.i.i.i:                               ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !759
  br label %cleanup

if.end14:                                         ; preds = %if.end.i51.if.end14_crit_edge, %if.end10.if.end14_crit_edge
  %call15 = call fastcc ptr @clk_propagate_rate_change(ptr noundef nonnull %call7, i32 noundef 1)
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %if.end25, label %do.body

do.body:                                          ; preds = %if.end14
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @clk_core_set_rate_nolock.__UNIQUE_ID_ddebug357, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@clk_core_set_rate_nolock, %if.then22)) #21
          to label %do.end [label %if.then22], !srcloc !761

if.then22:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  %59 = ptrtoint ptr %call15 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %call15, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @clk_core_set_rate_nolock.__UNIQUE_ID_ddebug357, ptr noundef nonnull @.str.68, ptr noundef nonnull @.str.67, ptr noundef %60) #21
  br label %do.end

do.end:                                           ; preds = %if.then22, %do.body
  %call24 = call fastcc ptr @clk_propagate_rate_change(ptr noundef nonnull %call7, i32 noundef 4)
  br label %err

if.end25:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @clk_change_rate(ptr noundef nonnull %call7)
  %req_rate26 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 11
  %61 = ptrtoint ptr %req_rate26 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %req_rate, ptr %req_rate26, align 4
  br label %err

err:                                              ; preds = %if.end25, %do.end
  %ret.0 = phi i32 [ -16, %do.end ], [ 0, %if.end25 ]
  %62 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool.not.i55 = icmp eq i8 %63, 0
  br i1 %tobool.not.i55, label %err.cleanup_crit_edge, label %if.end.i58

err.cleanup_crit_edge:                            ; preds = %err
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i58:                                       ; preds = %err
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i56 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %64 = ptrtoint ptr %dev.i56 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dev.i56, align 4
  %call.i.i57 = call i32 @__pm_runtime_idle(ptr noundef %65, i32 noundef 4) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end.i58, %err.cleanup_crit_edge, %do.end11.i.i.i.i.i, %if.then1.i.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %clk_core_get_rate_nolock.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %clk_core_get_rate_nolock.exit.cleanup_crit_edge ], [ -16, %if.end3.cleanup_crit_edge ], [ -22, %if.end6.cleanup_crit_edge ], [ %call.i.i50, %if.then1.i.cleanup_crit_edge ], [ %call.i.i50, %do.end11.i.i.i.i.i ], [ %ret.0, %err.cleanup_crit_edge ], [ %ret.0, %if.end.i58 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_set_rate_exclusive(ptr noundef %clk, i32 noundef %rate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %call = tail call fastcc i32 @clk_core_set_rate_nolock(ptr noundef %1, i32 noundef %rate)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.then2, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %clk, align 4
  tail call fastcc void @clk_core_rate_protect(ptr noundef %3)
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %4 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %exclusive_count, align 4
  %inc = add i32 %5, 1
  store i32 %inc, ptr %exclusive_count, align 4
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  %6 = load ptr, ptr @prepare_owner, align 4
  %7 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %6, %10
  br i1 %cmp.not.i, label %if.end4.if.end27.i_crit_edge, label %land.rhs.i

if.end4.if.end27.i_crit_edge:                     ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %if.end4
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %if.end4.if.end27.i_crit_edge
  %11 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp36.i = icmp eq i32 %11, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %12 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %12, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call, %if.end81.i.cleanup_crit_edge ], [ %call, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_set_rate_range(ptr noundef %clk, i32 noundef %min, i32 noundef %max) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  tail call fastcc void @trace_clk_set_rate_range(ptr noundef %1, i32 noundef %min, i32 noundef %max)
  call void @__sanitizer_cov_trace_cmp4(i32 %min, i32 %max)
  %cmp = icmp ugt i32 %min, %max
  br i1 %cmp, label %do.end, label %if.end3

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %clk, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %dev_id = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 2
  %6 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev_id, align 4
  %con_id = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 3
  %8 = ptrtoint ptr %con_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %con_id, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef %5, ptr noundef %7, ptr noundef %9, i32 noundef %min, i32 noundef %max) #26
  br label %cleanup

if.end3:                                          ; preds = %if.end
  tail call fastcc void @clk_prepare_lock()
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %10 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool4.not = icmp eq i32 %11, 0
  br i1 %tobool4.not, label %if.end3.if.end7_crit_edge, label %if.end3.tailrecurse.i_crit_edge

if.end3.tailrecurse.i_crit_edge:                  ; preds = %if.end3
  br label %tailrecurse.i

if.end3.if.end7_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

tailrecurse.i:                                    ; preds = %if.end64.i, %if.end3.tailrecurse.i_crit_edge
  %core.tr.i.in = phi ptr [ %parent.i, %if.end64.i ], [ %clk, %if.end3.tailrecurse.i_crit_edge ]
  %12 = ptrtoint ptr %core.tr.i.in to i32
  call void @__asan_load4_noabort(i32 %12)
  %core.tr.i = load ptr, ptr %core.tr.i.in, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %13 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i, label %tailrecurse.i.if.end.i_crit_edge, label %land.rhs.i

tailrecurse.i.if.end.i_crit_edge:                 ; preds = %tailrecurse.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %tailrecurse.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %tailrecurse.i.if.end.i_crit_edge
  %tobool24.not.i = icmp eq ptr %core.tr.i, null
  br i1 %tobool24.not.i, label %if.end.i.if.end7_crit_edge, label %if.end26.i

if.end.i.if.end7_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.end26.i:                                       ; preds = %if.end.i
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 20
  %14 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp28.i = icmp eq i32 %15, 0
  br i1 %cmp28.i, label %do.end44.i, label %if.end60.critedge.i, !prof !754

do.end44.i:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %core.tr.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %core.tr.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %17) #21
  br label %if.end7

if.end60.critedge.i:                              ; preds = %if.end26.i
  %dec.i = add i32 %15, -1
  %18 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %dec.i, ptr %protect_count.i, align 4
  %cmp62.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp62.not.i, label %if.end64.i, label %if.end60.critedge.i.if.end7_crit_edge

if.end60.critedge.i.if.end7_crit_edge:            ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.end64.i:                                       ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 6
  br label %tailrecurse.i

if.end7:                                          ; preds = %if.end60.critedge.i.if.end7_crit_edge, %do.end44.i, %if.end.i.if.end7_crit_edge, %if.end3.if.end7_crit_edge
  %min_rate = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 4
  %19 = ptrtoint ptr %min_rate to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %min_rate, align 4
  %max_rate = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 5
  %21 = ptrtoint ptr %max_rate to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %max_rate, align 4
  store i32 %min, ptr %min_rate, align 4
  store i32 %max, ptr %max_rate, align 4
  %23 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %clk, align 4
  %tobool.not.i65 = icmp eq ptr %24, null
  br i1 %tobool.not.i65, label %if.end7.clk_core_get_rate_nolock.exit_crit_edge, label %if.end.i66

if.end7.clk_core_get_rate_nolock.exit_crit_edge:  ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_nolock.exit

if.end.i66:                                       ; preds = %if.end7
  %num_parents.i = getelementptr inbounds %struct.clk_core, ptr %24, i32 0, i32 8
  %25 = ptrtoint ptr %num_parents.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %num_parents.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool1.not.i = icmp eq i8 %26, 0
  br i1 %tobool1.not.i, label %if.end.i66.if.then3.i_crit_edge, label %lor.lhs.false.i

if.end.i66.if.then3.i_crit_edge:                  ; preds = %if.end.i66
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i:                                  ; preds = %if.end.i66
  %parent.i67 = getelementptr inbounds %struct.clk_core, ptr %24, i32 0, i32 6
  %27 = ptrtoint ptr %parent.i67 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %parent.i67, align 4
  %tobool2.not.i = icmp eq ptr %28, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge, label %lor.lhs.false.i.if.then3.i_crit_edge

lor.lhs.false.i.if.then3.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_nolock.exit

if.then3.i:                                       ; preds = %lor.lhs.false.i.if.then3.i_crit_edge, %if.end.i66.if.then3.i_crit_edge
  %rate.i = getelementptr inbounds %struct.clk_core, ptr %24, i32 0, i32 10
  %29 = ptrtoint ptr %rate.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rate.i, align 4
  br label %clk_core_get_rate_nolock.exit

clk_core_get_rate_nolock.exit:                    ; preds = %if.then3.i, %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge, %if.end7.clk_core_get_rate_nolock.exit_crit_edge
  %retval.0.i = phi i32 [ %30, %if.then3.i ], [ 0, %if.end7.clk_core_get_rate_nolock.exit_crit_edge ], [ 0, %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %min)
  %cmp12 = icmp ult i32 %retval.0.i, %min
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %max)
  %cmp13 = icmp ugt i32 %retval.0.i, %max
  %or.cond = or i1 %cmp12, %cmp13
  br i1 %or.cond, label %if.then14, label %clk_core_get_rate_nolock.exit.if.end25_crit_edge

clk_core_get_rate_nolock.exit.if.end25_crit_edge: ; preds = %clk_core_get_rate_nolock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25

if.then14:                                        ; preds = %clk_core_get_rate_nolock.exit
  %min.max = select i1 %cmp12, i32 %min, i32 %max
  %call19 = tail call fastcc i32 @clk_core_set_rate_nolock(ptr noundef %24, i32 noundef %min.max)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.then14.if.end25_crit_edge, label %if.then21

if.then14.if.end25_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25

if.then21:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #23
  %31 = ptrtoint ptr %min_rate to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %20, ptr %min_rate, align 4
  %32 = ptrtoint ptr %max_rate to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %22, ptr %max_rate, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.then21, %if.then14.if.end25_crit_edge, %clk_core_get_rate_nolock.exit.if.end25_crit_edge
  %ret.0 = phi i32 [ %call19, %if.then21 ], [ 0, %if.then14.if.end25_crit_edge ], [ 0, %clk_core_get_rate_nolock.exit.if.end25_crit_edge ]
  %33 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool27.not = icmp eq i32 %34, 0
  br i1 %tobool27.not, label %if.end25.if.end30_crit_edge, label %if.then28

if.end25.if.end30_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

if.then28:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %clk, align 4
  tail call fastcc void @clk_core_rate_protect(ptr noundef %36)
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %if.end25.if.end30_crit_edge
  %37 = load ptr, ptr @prepare_owner, align 4
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %task.i, align 8
  %cmp.not.i68 = icmp eq ptr %37, %41
  br i1 %cmp.not.i68, label %if.end30.if.end27.i_crit_edge, label %land.rhs.i69

if.end30.if.end27.i_crit_edge:                    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i69:                                     ; preds = %if.end30
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i69.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i69.if.end27.i_crit_edge:                ; preds = %land.rhs.i69
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i69
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i69.if.end27.i_crit_edge, %if.end30.if.end27.i_crit_edge
  %42 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %cmp36.i = icmp eq i32 %42, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %43 = load i32, ptr @prepare_refcnt, align 4
  %dec.i70 = add i32 %43, -1
  store i32 %dec.i70, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i70)
  %tobool89.not.i = icmp eq i32 %dec.i70, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %do.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %entry.cleanup_crit_edge ], [ %ret.0, %if.end81.i.cleanup_crit_edge ], [ %ret.0, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_rate_range(ptr noundef %core, i32 noundef %min, i32 noundef %max) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate_range, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_rate_range, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !762
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate_range, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, i32 noundef %min, i32 noundef %max) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !763
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !763
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate_range, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_rate_range.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_rate_range.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 163, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #9

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_set_min_rate(ptr noundef %clk, i32 noundef %rate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  tail call fastcc void @trace_clk_set_min_rate(ptr noundef %1, i32 noundef %rate)
  %max_rate = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 5
  %2 = ptrtoint ptr %max_rate to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %max_rate, align 4
  %call = tail call i32 @clk_set_rate_range(ptr noundef nonnull %clk, i32 noundef %rate, i32 noundef %3)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_min_rate(ptr noundef %core, i32 noundef %rate) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_min_rate, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_min_rate, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !766
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_min_rate, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, i32 noundef %rate) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !767
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !767
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_min_rate, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_min_rate.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_min_rate.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 126, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_set_max_rate(ptr noundef %clk, i32 noundef %rate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  tail call fastcc void @trace_clk_set_max_rate(ptr noundef %1, i32 noundef %rate)
  %min_rate = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 4
  %2 = ptrtoint ptr %min_rate to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %min_rate, align 4
  %call = tail call i32 @clk_set_rate_range(ptr noundef nonnull %clk, i32 noundef %3, i32 noundef %rate)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_max_rate(ptr noundef %core, i32 noundef %rate) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_max_rate, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_max_rate, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !768
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_max_rate, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, i32 noundef %rate) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !769
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !769
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_max_rate, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_max_rate.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_max_rate.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 133, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @clk_get_parent(ptr noundef readonly %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %parent1 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %parent1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent1, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %if.end.cond.end_crit_edge, label %cond.false

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %hw = getelementptr inbounds %struct.clk_core, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 4
  %clk5 = getelementptr inbounds %struct.clk_hw, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %clk5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %clk5, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %7, %cond.false ], [ null, %if.end.cond.end_crit_edge ]
  %8 = load ptr, ptr @prepare_owner, align 4
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %8, %12
  br i1 %cmp.not.i, label %cond.end.if.end27.i_crit_edge, label %land.rhs.i

cond.end.if.end27.i_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %cond.end
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %cond.end.if.end27.i_crit_edge
  %13 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp36.i = icmp eq i32 %13, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %14 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ %cond, %if.end81.i.cleanup_crit_edge ], [ %cond, %if.end91.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clk_hw_reparent(ptr noundef readonly %hw, ptr noundef readonly %new_parent) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %hw, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %tobool1.not = icmp eq ptr %new_parent, null
  br i1 %tobool1.not, label %if.end.cond.end_crit_edge, label %cond.false

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %new_parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %new_parent, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %3, %cond.false ], [ null, %if.end.cond.end_crit_edge ]
  %orphan.i.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 16
  %4 = ptrtoint ptr %orphan.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %orphan.i.i, align 4, !range !756
  %child_node.i.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 27
  %6 = ptrtoint ptr %child_node.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %child_node.i.i, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 27, i32 1
  %8 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %7, ptr %9, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i.i.i, label %cond.end.hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i.i

cond.end.hlist_del.exit.i.i_crit_edge:            ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_del.exit.i.i

do.body13.i.i.i.i:                                ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %7, i32 0, i32 1
  %11 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %pprev14.i.i.i.i, align 4
  br label %hlist_del.exit.i.i

hlist_del.exit.i.i:                               ; preds = %do.body13.i.i.i.i, %cond.end.hlist_del.exit.i.i_crit_edge
  %12 = ptrtoint ptr %child_node.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 256 to ptr), ptr %child_node.i.i, align 4
  %13 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %cond, null
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %hlist_del.exit.i.i
  %orphan2.i.i = getelementptr inbounds %struct.clk_core, ptr %cond, i32 0, i32 16
  %14 = ptrtoint ptr %orphan2.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %orphan2.i.i, align 4, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool3.i.i = icmp ne i8 %15, 0
  %new_child.i.i = getelementptr inbounds %struct.clk_core, ptr %cond, i32 0, i32 14
  %16 = ptrtoint ptr %new_child.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %new_child.i.i, align 4
  %cmp.i.i = icmp eq ptr %17, %1
  br i1 %cmp.i.i, label %if.then5.i.i, label %if.then.i.i.if.end.i.i_crit_edge

if.then.i.i.if.end.i.i_crit_edge:                 ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

if.then5.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %new_child.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %new_child.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then5.i.i, %if.then.i.i.if.end.i.i_crit_edge
  %children.i.i = getelementptr inbounds %struct.clk_core, ptr %cond, i32 0, i32 26
  %19 = ptrtoint ptr %children.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %children.i.i, align 4
  %21 = ptrtoint ptr %child_node.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %20, ptr %child_node.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %20, null
  br i1 %tobool.not.i.i.i, label %if.end.i.i.hlist_add_head.exit.i.i_crit_edge, label %do.body12.i.i.i

if.end.i.i.hlist_add_head.exit.i.i_crit_edge:     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit.i.i

do.body12.i.i.i:                                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %20, i32 0, i32 1
  %22 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %child_node.i.i, ptr %pprev.i.i.i, align 4
  br label %hlist_add_head.exit.i.i

hlist_add_head.exit.i.i:                          ; preds = %do.body12.i.i.i, %if.end.i.i.hlist_add_head.exit.i.i_crit_edge
  %23 = ptrtoint ptr %children.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %child_node.i.i, ptr %children.i.i, align 4
  %24 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %children.i.i, ptr %pprev2.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %5, i8 %15)
  %cmp11.not.i.i = icmp eq i8 %5, %15
  br i1 %cmp11.not.i.i, label %hlist_add_head.exit.i.i.clk_core_reparent.exit_crit_edge, label %hlist_add_head.exit.i.i.if.end20.sink.split.i.i_crit_edge

hlist_add_head.exit.i.i.if.end20.sink.split.i.i_crit_edge: ; preds = %hlist_add_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20.sink.split.i.i

hlist_add_head.exit.i.i.clk_core_reparent.exit_crit_edge: ; preds = %hlist_add_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_reparent.exit

if.else.i.i:                                      ; preds = %hlist_del.exit.i.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i.i = icmp eq i8 %5, 0
  %25 = load ptr, ptr @clk_orphan_list, align 4
  %26 = ptrtoint ptr %child_node.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %25, ptr %child_node.i.i, align 4
  %tobool.not.i35.i.i = icmp eq ptr %25, null
  br i1 %tobool.not.i35.i.i, label %if.else.i.i.hlist_add_head.exit39.i.i_crit_edge, label %do.body12.i37.i.i

if.else.i.i.hlist_add_head.exit39.i.i_crit_edge:  ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit39.i.i

do.body12.i37.i.i:                                ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i36.i.i = getelementptr inbounds %struct.hlist_node, ptr %25, i32 0, i32 1
  %27 = ptrtoint ptr %pprev.i36.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %child_node.i.i, ptr %pprev.i36.i.i, align 4
  br label %hlist_add_head.exit39.i.i

hlist_add_head.exit39.i.i:                        ; preds = %do.body12.i37.i.i, %if.else.i.i.hlist_add_head.exit39.i.i_crit_edge
  store volatile ptr %child_node.i.i, ptr @clk_orphan_list, align 4
  %28 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr @clk_orphan_list, ptr %pprev2.i.i.i.i, align 4
  br i1 %tobool.not.i.i, label %hlist_add_head.exit39.i.i.if.end20.sink.split.i.i_crit_edge, label %hlist_add_head.exit39.i.i.clk_core_reparent.exit_crit_edge

hlist_add_head.exit39.i.i.clk_core_reparent.exit_crit_edge: ; preds = %hlist_add_head.exit39.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_reparent.exit

hlist_add_head.exit39.i.i.if.end20.sink.split.i.i_crit_edge: ; preds = %hlist_add_head.exit39.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20.sink.split.i.i

if.end20.sink.split.i.i:                          ; preds = %hlist_add_head.exit39.i.i.if.end20.sink.split.i.i_crit_edge, %hlist_add_head.exit.i.i.if.end20.sink.split.i.i_crit_edge
  %tobool3.sink.i.i = phi i1 [ %tobool3.i.i, %hlist_add_head.exit.i.i.if.end20.sink.split.i.i_crit_edge ], [ true, %hlist_add_head.exit39.i.i.if.end20.sink.split.i.i_crit_edge ]
  tail call fastcc void @clk_core_update_orphan_status(ptr noundef %1, i1 noundef zeroext %tobool3.sink.i.i) #21
  br label %clk_core_reparent.exit

clk_core_reparent.exit:                           ; preds = %if.end20.sink.split.i.i, %hlist_add_head.exit39.i.i.clk_core_reparent.exit_crit_edge, %hlist_add_head.exit.i.i.clk_core_reparent.exit_crit_edge
  %parent.i.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 6
  %29 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %cond, ptr %parent.i.i, align 4
  tail call fastcc void @__clk_recalc_accuracies(ptr noundef %1) #21
  tail call fastcc void @__clk_recalc_rates(ptr noundef %1, i32 noundef 2) #21
  br label %return

return:                                           ; preds = %clk_core_reparent.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @clk_has_parent(ptr noundef readonly %clk, ptr noundef readonly %parent) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  %tobool1.not = icmp eq ptr %parent, null
  %or.cond = or i1 %tobool.not, %tobool1.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 4
  %parent4 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %parent4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent4, align 4
  %cmp = icmp eq ptr %5, %3
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %for.cond.preheader

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 8
  %6 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %num_parents, align 4
  %conv = zext i8 %7 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp722.not = icmp eq i8 %7, 0
  br i1 %cmp722.not, label %for.cond.preheader.cleanup_crit_edge, label %for.body.lr.ph

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %parents = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 7
  %8 = ptrtoint ptr %parents to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parents, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %3, align 4
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.023 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %name = getelementptr %struct.clk_parent_map, ptr %9, i32 %i.023, i32 3
  %12 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %name, align 4
  %call = tail call i32 @strcmp(ptr noundef %13, ptr noundef %11) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool10.not = icmp eq i32 %call, 0
  %inc = add nuw nsw i32 %i.023, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %conv)
  %exitcond.not = icmp eq i32 %inc, %conv
  %or.cond25 = select i1 %tobool10.not, i1 true, i1 %exitcond.not
  br i1 %or.cond25, label %for.body.cleanup_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %entry.cleanup_crit_edge ], [ true, %if.end.cleanup_crit_edge ], [ false, %for.cond.preheader.cleanup_crit_edge ], [ %tobool10.not, %for.body.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_hw_set_parent(ptr nocapture noundef readonly %hw, ptr nocapture noundef readonly %parent) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 4
  %call = tail call fastcc i32 @clk_core_set_parent_nolock(ptr noundef %1, ptr noundef %3)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_set_parent_nolock(ptr noundef %core, ptr noundef %parent) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2513, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool24.not = icmp eq ptr %core, null
  br i1 %tobool24.not, label %if.end.cleanup_crit_edge, label %if.end26

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end26:                                         ; preds = %if.end
  %parent27 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %1 = ptrtoint ptr %parent27 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %parent27, align 4
  %cmp28 = icmp eq ptr %2, %parent
  br i1 %cmp28, label %if.end26.cleanup_crit_edge, label %if.end30

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end30:                                         ; preds = %if.end26
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 8
  %3 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %4)
  %cmp31 = icmp ugt i8 %4, 1
  br i1 %cmp31, label %land.lhs.true, label %if.end30.if.end35_crit_edge

if.end30.if.end35_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

land.lhs.true:                                    ; preds = %if.end30
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %5 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops, align 4
  %set_parent = getelementptr inbounds %struct.clk_ops, ptr %6, i32 0, i32 13
  %7 = ptrtoint ptr %set_parent to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %set_parent, align 4
  %tobool33.not = icmp eq ptr %8, null
  br i1 %tobool33.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end35_crit_edge

land.lhs.true.if.end35_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end35:                                         ; preds = %land.lhs.true.if.end35_crit_edge, %if.end30.if.end35_crit_edge
  %flags = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 4
  %and = and i32 %10, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool36.not = icmp eq i32 %and, 0
  br i1 %tobool36.not, label %if.end35.if.end40_crit_edge, label %land.lhs.true37

if.end35.if.end40_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end40

land.lhs.true37:                                  ; preds = %if.end35
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 19
  %11 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool38.not = icmp eq i32 %12, 0
  br i1 %tobool38.not, label %land.lhs.true37.if.end40_crit_edge, label %land.lhs.true37.cleanup_crit_edge

land.lhs.true37.cleanup_crit_edge:                ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true37.if.end40_crit_edge:               ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end40

if.end40:                                         ; preds = %land.lhs.true37.if.end40_crit_edge, %if.end35.if.end40_crit_edge
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 20
  %13 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.i.not = icmp eq i32 %14, 0
  br i1 %tobool.i.not, label %if.end43, label %if.end40.cleanup_crit_edge

if.end40.cleanup_crit_edge:                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end43:                                         ; preds = %if.end40
  %tobool44.not = icmp eq ptr %parent, null
  br i1 %tobool44.not, label %if.end43.if.end66_crit_edge, label %if.then45

if.end43.if.end66_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end66

if.then45:                                        ; preds = %if.end43
  %call46 = tail call fastcc i32 @clk_fetch_parent_index(ptr noundef nonnull %core, ptr noundef nonnull %parent)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %cmp47 = icmp slt i32 %call46, 0
  br i1 %cmp47, label %do.body50, label %if.end65

do.body50:                                        ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @clk_core_set_parent_nolock.__UNIQUE_ID_ddebug358, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@clk_core_set_parent_nolock, %if.then60)) #21
          to label %cleanup [label %if.then60], !srcloc !761

if.then60:                                        ; preds = %do.body50
  call void @__sanitizer_cov_trace_pc() #23
  %15 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %parent, align 4
  %17 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %core, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @clk_core_set_parent_nolock.__UNIQUE_ID_ddebug358, ptr noundef nonnull @.str.71, ptr noundef nonnull @.str.72, ptr noundef %16, ptr noundef %18) #21
  br label %cleanup

if.end65:                                         ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #23
  %rate = getelementptr inbounds %struct.clk_core, ptr %parent, i32 0, i32 10
  %19 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %rate, align 4
  %phi.cast = trunc i32 %call46 to i8
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end43.if.end66_crit_edge
  %p_rate.0 = phi i32 [ %20, %if.end65 ], [ 0, %if.end43.if.end66_crit_edge ]
  %p_index.0 = phi i8 [ %phi.cast, %if.end65 ], [ 0, %if.end43.if.end66_crit_edge ]
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %21 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i = icmp eq i8 %22, 0
  br i1 %tobool.not.i, label %if.end66.if.end70_crit_edge, label %if.end.i

if.end66.if.end70_crit_edge:                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end70

if.end.i:                                         ; preds = %if.end66
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %23 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dev.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_resume(ptr noundef %24, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.then1.i, label %if.end.i.if.end70_crit_edge

if.end.i.if.end70_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end70

if.then1.i:                                       ; preds = %if.end.i
  %25 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %26, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !757
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %27 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !758
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %27, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.then1.i.cleanup_crit_edge, label %do.end11.i.i.i.i.i

if.then1.i.cleanup_crit_edge:                     ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end11.i.i.i.i.i:                               ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !759
  br label %cleanup

if.end70:                                         ; preds = %if.end.i.if.end70_crit_edge, %if.end66.if.end70_crit_edge
  %call71 = tail call fastcc i32 @__clk_speculate_rates(ptr noundef nonnull %core, i32 noundef %p_rate.0)
  %and72 = and i32 %call71, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and72)
  %tobool73.not = icmp eq i32 %and72, 0
  br i1 %tobool73.not, label %if.end75, label %if.end70.runtime_put_crit_edge

if.end70.runtime_put_crit_edge:                   ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #23
  br label %runtime_put

if.end75:                                         ; preds = %if.end70
  %call77 = tail call fastcc i32 @__clk_set_parent(ptr noundef nonnull %core, ptr noundef %parent, i8 noundef zeroext %p_index.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77)
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %if.else, label %if.then79

if.then79:                                        ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__clk_recalc_rates(ptr noundef nonnull %core, i32 noundef 4)
  br label %runtime_put

if.else:                                          ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__clk_recalc_rates(ptr noundef nonnull %core, i32 noundef 2)
  tail call fastcc void @__clk_recalc_accuracies(ptr noundef nonnull %core)
  br label %runtime_put

runtime_put:                                      ; preds = %if.else, %if.then79, %if.end70.runtime_put_crit_edge
  %ret.0 = phi i32 [ %call71, %if.end70.runtime_put_crit_edge ], [ %call77, %if.then79 ], [ 0, %if.else ]
  %28 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool.not.i112 = icmp eq i8 %29, 0
  br i1 %tobool.not.i112, label %runtime_put.cleanup_crit_edge, label %if.end.i115

runtime_put.cleanup_crit_edge:                    ; preds = %runtime_put
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i115:                                      ; preds = %runtime_put
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i113 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %30 = ptrtoint ptr %dev.i113 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dev.i113, align 4
  %call.i.i114 = tail call i32 @__pm_runtime_idle(ptr noundef %31, i32 noundef 4) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end.i115, %runtime_put.cleanup_crit_edge, %do.end11.i.i.i.i.i, %if.then1.i.cleanup_crit_edge, %if.then60, %do.body50, %if.end40.cleanup_crit_edge, %land.lhs.true37.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.end26.cleanup_crit_edge ], [ -1, %land.lhs.true.cleanup_crit_edge ], [ -16, %land.lhs.true37.cleanup_crit_edge ], [ -16, %if.end40.cleanup_crit_edge ], [ %call46, %if.then60 ], [ %call46, %do.body50 ], [ %call.i.i, %if.then1.i.cleanup_crit_edge ], [ %call.i.i, %do.end11.i.i.i.i.i ], [ %ret.0, %runtime_put.cleanup_crit_edge ], [ %ret.0, %if.end.i115 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_set_parent(ptr noundef readonly %clk, ptr noundef readonly %parent) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %0 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %if.end.if.end3_crit_edge, label %if.end.tailrecurse.i_crit_edge

if.end.tailrecurse.i_crit_edge:                   ; preds = %if.end
  br label %tailrecurse.i

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

tailrecurse.i:                                    ; preds = %if.end64.i, %if.end.tailrecurse.i_crit_edge
  %core.tr.i.in = phi ptr [ %parent.i, %if.end64.i ], [ %clk, %if.end.tailrecurse.i_crit_edge ]
  %2 = ptrtoint ptr %core.tr.i.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %core.tr.i = load ptr, ptr %core.tr.i.in, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %tailrecurse.i.if.end.i_crit_edge, label %land.rhs.i

tailrecurse.i.if.end.i_crit_edge:                 ; preds = %tailrecurse.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %tailrecurse.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %tailrecurse.i.if.end.i_crit_edge
  %tobool24.not.i = icmp eq ptr %core.tr.i, null
  br i1 %tobool24.not.i, label %if.end.i.if.end3_crit_edge, label %if.end26.i

if.end.i.if.end3_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

if.end26.i:                                       ; preds = %if.end.i
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 20
  %4 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp28.i = icmp eq i32 %5, 0
  br i1 %cmp28.i, label %do.end44.i, label %if.end60.critedge.i, !prof !754

do.end44.i:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %core.tr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %core.tr.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %7) #21
  br label %if.end3

if.end60.critedge.i:                              ; preds = %if.end26.i
  %dec.i = add i32 %5, -1
  %8 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %dec.i, ptr %protect_count.i, align 4
  %cmp62.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp62.not.i, label %if.end64.i, label %if.end60.critedge.i.if.end3_crit_edge

if.end60.critedge.i.if.end3_crit_edge:            ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

if.end64.i:                                       ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 6
  br label %tailrecurse.i

if.end3:                                          ; preds = %if.end60.critedge.i.if.end3_crit_edge, %do.end44.i, %if.end.i.if.end3_crit_edge, %if.end.if.end3_crit_edge
  %9 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %clk, align 4
  %tobool5.not = icmp eq ptr %parent, null
  br i1 %tobool5.not, label %if.end3.cond.end_crit_edge, label %cond.true

if.end3.cond.end_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %parent, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end3.cond.end_crit_edge
  %cond = phi ptr [ %12, %cond.true ], [ null, %if.end3.cond.end_crit_edge ]
  %call = tail call fastcc i32 @clk_core_set_parent_nolock(ptr noundef %10, ptr noundef %cond)
  %13 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool8.not = icmp eq i32 %14, 0
  br i1 %tobool8.not, label %cond.end.if.end11_crit_edge, label %if.then9

cond.end.if.end11_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11

if.then9:                                         ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  %15 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %clk, align 4
  tail call fastcc void @clk_core_rate_protect(ptr noundef %16)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %cond.end.if.end11_crit_edge
  %17 = load ptr, ptr @prepare_owner, align 4
  %18 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task.i, align 8
  %cmp.not.i18 = icmp eq ptr %17, %21
  br i1 %cmp.not.i18, label %if.end11.if.end27.i_crit_edge, label %land.rhs.i19

if.end11.if.end27.i_crit_edge:                    ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i19:                                     ; preds = %if.end11
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i19.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i19.if.end27.i_crit_edge:                ; preds = %land.rhs.i19
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i19
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i19.if.end27.i_crit_edge, %if.end11.if.end27.i_crit_edge
  %22 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp36.i = icmp eq i32 %22, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %23 = load i32, ptr @prepare_refcnt, align 4
  %dec.i20 = add i32 %23, -1
  store i32 %dec.i20, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i20)
  %tobool89.not.i = icmp eq i32 %dec.i20, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call, %if.end81.i.cleanup_crit_edge ], [ %call, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_set_phase(ptr noundef readonly %clk, i32 noundef %degrees) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %rem = srem i32 %degrees, 360
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %cmp = icmp slt i32 %rem, 0
  %add = add nsw i32 %rem, 360
  %spec.select = select i1 %cmp, i32 %add, i32 %rem
  tail call fastcc void @clk_prepare_lock()
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %0 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %if.end.if.end5_crit_edge, label %if.end.tailrecurse.i_crit_edge

if.end.tailrecurse.i_crit_edge:                   ; preds = %if.end
  br label %tailrecurse.i

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

tailrecurse.i:                                    ; preds = %if.end64.i, %if.end.tailrecurse.i_crit_edge
  %core.tr.i.in = phi ptr [ %parent.i, %if.end64.i ], [ %clk, %if.end.tailrecurse.i_crit_edge ]
  %2 = ptrtoint ptr %core.tr.i.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %core.tr.i = load ptr, ptr %core.tr.i.in, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %tailrecurse.i.if.end.i_crit_edge, label %land.rhs.i

tailrecurse.i.if.end.i_crit_edge:                 ; preds = %tailrecurse.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %tailrecurse.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %tailrecurse.i.if.end.i_crit_edge
  %tobool24.not.i = icmp eq ptr %core.tr.i, null
  br i1 %tobool24.not.i, label %if.end.i.if.end5_crit_edge, label %if.end26.i

if.end.i.if.end5_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

if.end26.i:                                       ; preds = %if.end.i
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 20
  %4 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp28.i = icmp eq i32 %5, 0
  br i1 %cmp28.i, label %do.end44.i, label %if.end60.critedge.i, !prof !754

do.end44.i:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %core.tr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %core.tr.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %7) #21
  br label %if.end5

if.end60.critedge.i:                              ; preds = %if.end26.i
  %dec.i = add i32 %5, -1
  %8 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %dec.i, ptr %protect_count.i, align 4
  %cmp62.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp62.not.i, label %if.end64.i, label %if.end60.critedge.i.if.end5_crit_edge

if.end60.critedge.i.if.end5_crit_edge:            ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

if.end64.i:                                       ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 6
  br label %tailrecurse.i

if.end5:                                          ; preds = %if.end60.critedge.i.if.end5_crit_edge, %do.end44.i, %if.end.i.if.end5_crit_edge, %if.end.if.end5_crit_edge
  %9 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %clk, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %11 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i20 = icmp eq i32 %11, 0
  br i1 %tobool.not.i20, label %if.end5.if.end.i26_crit_edge, label %land.rhs.i23

if.end5.if.end.i26_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i26

land.rhs.i23:                                     ; preds = %if.end5
  %call.i.i21 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i21)
  %cmp.not.i22 = icmp eq i32 %call.i.i21, 0
  br i1 %cmp.not.i22, label %do.end.i24, label %land.rhs.i23.if.end.i26_crit_edge, !prof !754

land.rhs.i23.if.end.i26_crit_edge:                ; preds = %land.rhs.i23
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i26

do.end.i24:                                       ; preds = %land.rhs.i23
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2622, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i26

if.end.i26:                                       ; preds = %do.end.i24, %land.rhs.i23.if.end.i26_crit_edge, %if.end5.if.end.i26_crit_edge
  %tobool24.not.i25 = icmp eq ptr %10, null
  br i1 %tobool24.not.i25, label %if.end.i26.clk_core_set_phase_nolock.exit_crit_edge, label %if.end26.i27

if.end.i26.clk_core_set_phase_nolock.exit_crit_edge: ; preds = %if.end.i26
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_set_phase_nolock.exit

if.end26.i27:                                     ; preds = %if.end.i26
  %protect_count.i.i = getelementptr inbounds %struct.clk_core, ptr %10, i32 0, i32 20
  %12 = ptrtoint ptr %protect_count.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %protect_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.i.not.i = icmp eq i32 %13, 0
  br i1 %tobool.i.not.i, label %if.end29.i, label %if.end26.i27.clk_core_set_phase_nolock.exit_crit_edge

if.end26.i27.clk_core_set_phase_nolock.exit_crit_edge: ; preds = %if.end26.i27
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_set_phase_nolock.exit

if.end29.i:                                       ; preds = %if.end26.i27
  tail call fastcc void @trace_clk_set_phase(ptr noundef nonnull %10, i32 noundef %spec.select) #21
  %ops.i = getelementptr inbounds %struct.clk_core, ptr %10, i32 0, i32 1
  %14 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops.i, align 4
  %set_phase.i = getelementptr inbounds %struct.clk_ops, ptr %15, i32 0, i32 19
  %16 = ptrtoint ptr %set_phase.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %set_phase.i, align 4
  %tobool30.not.i = icmp eq ptr %17, null
  br i1 %tobool30.not.i, label %if.end29.i.if.end38.i_crit_edge, label %if.then31.i

if.end29.i.if.end38.i_crit_edge:                  ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38.i

if.then31.i:                                      ; preds = %if.end29.i
  %hw.i = getelementptr inbounds %struct.clk_core, ptr %10, i32 0, i32 2
  %18 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hw.i, align 4
  %call34.i = tail call i32 %17(ptr noundef %19, i32 noundef %spec.select) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34.i)
  %tobool35.not.i = icmp eq i32 %call34.i, 0
  br i1 %tobool35.not.i, label %if.then36.i, label %if.then31.i.if.end38.i_crit_edge

if.then31.i.if.end38.i_crit_edge:                 ; preds = %if.then31.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38.i

if.then36.i:                                      ; preds = %if.then31.i
  call void @__sanitizer_cov_trace_pc() #23
  %phase.i = getelementptr inbounds %struct.clk_core, ptr %10, i32 0, i32 24
  %20 = ptrtoint ptr %phase.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %spec.select, ptr %phase.i, align 4
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.then36.i, %if.then31.i.if.end38.i_crit_edge, %if.end29.i.if.end38.i_crit_edge
  %ret.0.i = phi i32 [ %call34.i, %if.then31.i.if.end38.i_crit_edge ], [ 0, %if.then36.i ], [ -22, %if.end29.i.if.end38.i_crit_edge ]
  tail call fastcc void @trace_clk_set_phase_complete(ptr noundef nonnull %10, i32 noundef %spec.select) #21
  br label %clk_core_set_phase_nolock.exit

clk_core_set_phase_nolock.exit:                   ; preds = %if.end38.i, %if.end26.i27.clk_core_set_phase_nolock.exit_crit_edge, %if.end.i26.clk_core_set_phase_nolock.exit_crit_edge
  %retval.0.i = phi i32 [ %ret.0.i, %if.end38.i ], [ 0, %if.end.i26.clk_core_set_phase_nolock.exit_crit_edge ], [ -16, %if.end26.i27.clk_core_set_phase_nolock.exit_crit_edge ]
  %21 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool8.not = icmp eq i32 %22, 0
  br i1 %tobool8.not, label %clk_core_set_phase_nolock.exit.if.end11_crit_edge, label %if.then9

clk_core_set_phase_nolock.exit.if.end11_crit_edge: ; preds = %clk_core_set_phase_nolock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11

if.then9:                                         ; preds = %clk_core_set_phase_nolock.exit
  call void @__sanitizer_cov_trace_pc() #23
  %23 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %clk, align 4
  tail call fastcc void @clk_core_rate_protect(ptr noundef %24)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %clk_core_set_phase_nolock.exit.if.end11_crit_edge
  %25 = load ptr, ptr @prepare_owner, align 4
  %26 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task.i, align 8
  %cmp.not.i28 = icmp eq ptr %25, %29
  br i1 %cmp.not.i28, label %if.end11.if.end27.i_crit_edge, label %land.rhs.i29

if.end11.if.end27.i_crit_edge:                    ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i29:                                     ; preds = %if.end11
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i29.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i29.if.end27.i_crit_edge:                ; preds = %land.rhs.i29
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i29
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i29.if.end27.i_crit_edge, %if.end11.if.end27.i_crit_edge
  %30 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %cmp36.i = icmp eq i32 %30, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %31 = load i32, ptr @prepare_refcnt, align 4
  %dec.i30 = add i32 %31, -1
  store i32 %dec.i30, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i30)
  %tobool89.not.i = icmp eq i32 %dec.i30, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %retval.0.i, %if.end81.i.cleanup_crit_edge ], [ %retval.0.i, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_get_phase(ptr noundef readonly %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %if.end.if.end.i_crit_edge, label %land.rhs.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2695, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end.if.end.i_crit_edge
  %ops.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops.i, align 4
  %get_phase.i = getelementptr inbounds %struct.clk_ops, ptr %4, i32 0, i32 18
  %5 = ptrtoint ptr %get_phase.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %get_phase.i, align 4
  %tobool24.not.i = icmp eq ptr %6, null
  br i1 %tobool24.not.i, label %if.end.i.clk_core_get_phase.exit_crit_edge, label %if.end26.i

if.end.i.clk_core_get_phase.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_phase.exit

if.end26.i:                                       ; preds = %if.end.i
  %hw.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 2
  %7 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw.i, align 4
  %call29.i = tail call i32 %6(ptr noundef %8) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call29.i)
  %cmp30.i = icmp sgt i32 %call29.i, -1
  br i1 %cmp30.i, label %if.then31.i, label %if.end26.i.clk_core_get_phase.exit_crit_edge

if.end26.i.clk_core_get_phase.exit_crit_edge:     ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_phase.exit

if.then31.i:                                      ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %phase.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 24
  %9 = ptrtoint ptr %phase.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call29.i, ptr %phase.i, align 4
  br label %clk_core_get_phase.exit

clk_core_get_phase.exit:                          ; preds = %if.then31.i, %if.end26.i.clk_core_get_phase.exit_crit_edge, %if.end.i.clk_core_get_phase.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i.clk_core_get_phase.exit_crit_edge ], [ %call29.i, %if.then31.i ], [ %call29.i, %if.end26.i.clk_core_get_phase.exit_crit_edge ]
  %10 = load ptr, ptr @prepare_owner, align 4
  %11 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i, align 8
  %cmp.not.i2 = icmp eq ptr %10, %14
  br i1 %cmp.not.i2, label %clk_core_get_phase.exit.if.end27.i_crit_edge, label %land.rhs.i3

clk_core_get_phase.exit.if.end27.i_crit_edge:     ; preds = %clk_core_get_phase.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i3:                                      ; preds = %clk_core_get_phase.exit
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i3.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i3.if.end27.i_crit_edge:                 ; preds = %land.rhs.i3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i3
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i3.if.end27.i_crit_edge, %clk_core_get_phase.exit.if.end27.i_crit_edge
  %15 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp36.i = icmp eq i32 %15, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %16 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %16, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %retval.0.i, %if.end81.i.cleanup_crit_edge ], [ %retval.0.i, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_set_duty_cycle(ptr noundef readonly %clk, i32 noundef %num, i32 noundef %den) #0 align 64 {
entry:
  %duty = alloca %struct.clk_duty, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %duty) #21
  %0 = getelementptr inbounds %struct.clk_duty, ptr %duty, i32 0, i32 1
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %den)
  %cmp = icmp eq i32 %den, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %num, i32 %den)
  %cmp1 = icmp ugt i32 %num, %den
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %1 = ptrtoint ptr %duty to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %num, ptr %duty, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %den, ptr %0, align 4
  tail call fastcc void @clk_prepare_lock()
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %3 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool6.not = icmp eq i32 %4, 0
  br i1 %tobool6.not, label %if.end3.if.end8_crit_edge, label %if.end3.tailrecurse.i_crit_edge

if.end3.tailrecurse.i_crit_edge:                  ; preds = %if.end3
  br label %tailrecurse.i

if.end3.if.end8_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

tailrecurse.i:                                    ; preds = %if.end64.i, %if.end3.tailrecurse.i_crit_edge
  %core.tr.i.in = phi ptr [ %parent.i, %if.end64.i ], [ %clk, %if.end3.tailrecurse.i_crit_edge ]
  %5 = ptrtoint ptr %core.tr.i.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %core.tr.i = load ptr, ptr %core.tr.i.in, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %tailrecurse.i.if.end.i_crit_edge, label %land.rhs.i

tailrecurse.i.if.end.i_crit_edge:                 ; preds = %tailrecurse.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %tailrecurse.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %tailrecurse.i.if.end.i_crit_edge
  %tobool24.not.i = icmp eq ptr %core.tr.i, null
  br i1 %tobool24.not.i, label %if.end.i.if.end8_crit_edge, label %if.end26.i

if.end.i.if.end8_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.end26.i:                                       ; preds = %if.end.i
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 20
  %7 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp28.i = icmp eq i32 %8, 0
  br i1 %cmp28.i, label %do.end44.i, label %if.end60.critedge.i, !prof !754

do.end44.i:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %9 = ptrtoint ptr %core.tr.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %core.tr.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %10) #21
  br label %if.end8

if.end60.critedge.i:                              ; preds = %if.end26.i
  %dec.i = add i32 %8, -1
  %11 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %dec.i, ptr %protect_count.i, align 4
  %cmp62.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp62.not.i, label %if.end64.i, label %if.end60.critedge.i.if.end8_crit_edge

if.end60.critedge.i.if.end8_crit_edge:            ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.end64.i:                                       ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 6
  br label %tailrecurse.i

if.end8:                                          ; preds = %if.end60.critedge.i.if.end8_crit_edge, %do.end44.i, %if.end.i.if.end8_crit_edge, %if.end3.if.end8_crit_edge
  %12 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %clk, align 4
  %call = call fastcc i32 @clk_core_set_duty_cycle_nolock(ptr noundef %13, ptr noundef nonnull %duty)
  %14 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool11.not = icmp eq i32 %15, 0
  br i1 %tobool11.not, label %if.end8.if.end14_crit_edge, label %if.then12

if.end8.if.end14_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

if.then12:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %clk, align 4
  call fastcc void @clk_core_rate_protect(ptr noundef %17)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end8.if.end14_crit_edge
  %18 = load ptr, ptr @prepare_owner, align 4
  %19 = call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task.i, align 8
  %cmp.not.i24 = icmp eq ptr %18, %22
  br i1 %cmp.not.i24, label %if.end14.if.end27.i_crit_edge, label %land.rhs.i25

if.end14.if.end27.i_crit_edge:                    ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i25:                                     ; preds = %if.end14
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i25.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i25.if.end27.i_crit_edge:                ; preds = %land.rhs.i25
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i25
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i25.if.end27.i_crit_edge, %if.end14.if.end27.i_crit_edge
  %23 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp36.i = icmp eq i32 %23, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %24 = load i32, ptr @prepare_refcnt, align 4
  %dec.i26 = add i32 %24, -1
  store i32 %dec.i26, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i26)
  %tobool89.not.i = icmp eq i32 %dec.i26, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %call, %if.end81.i.cleanup_crit_edge ], [ %call, %if.end91.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %duty) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_set_duty_cycle_nolock(ptr noundef %core, ptr noundef %duty) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2786, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 20
  %1 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %if.end26, label %if.end.common.ret52_crit_edge

if.end.common.ret52_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %common.ret52

if.end26:                                         ; preds = %if.end
  tail call fastcc void @trace_clk_set_duty_cycle(ptr noundef %core, ptr noundef %duty)
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %3 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops, align 4
  %set_duty_cycle = getelementptr inbounds %struct.clk_ops, ptr %4, i32 0, i32 21
  %5 = ptrtoint ptr %set_duty_cycle to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %set_duty_cycle, align 4
  %tobool27.not = icmp eq ptr %6, null
  br i1 %tobool27.not, label %if.then28, label %if.end30

if.then28:                                        ; preds = %if.end26
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %7 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %parent.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.then28.common.ret52_crit_edge, label %land.lhs.true.i

if.then28.common.ret52_crit_edge:                 ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #23
  br label %common.ret52

land.lhs.true.i:                                  ; preds = %if.then28
  %flags.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %9 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %10, 8196
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.common.ret52_crit_edge, label %if.then.i

land.lhs.true.i.common.ret52_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %common.ret52

common.ret52:                                     ; preds = %if.end37, %if.then.i, %land.lhs.true.i.common.ret52_crit_edge, %if.then28.common.ret52_crit_edge, %if.end.common.ret52_crit_edge
  %common.ret52.op = phi i32 [ %call.i51, %if.then.i ], [ %call33, %if.end37 ], [ -16, %if.end.common.ret52_crit_edge ], [ 0, %land.lhs.true.i.common.ret52_crit_edge ], [ 0, %if.then28.common.ret52_crit_edge ]
  ret i32 %common.ret52.op

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i51 = tail call fastcc i32 @clk_core_set_duty_cycle_nolock(ptr noundef nonnull %8, ptr noundef %duty) #21
  %duty3.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 25
  %11 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %parent.i, align 4
  %duty5.i = getelementptr inbounds %struct.clk_core, ptr %12, i32 0, i32 25
  %13 = ptrtoint ptr %duty5.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %14 = load i64, ptr %duty5.i, align 4
  %15 = ptrtoint ptr %duty3.i to i32
  call void @__asan_storeN_noabort(i32 %15, i32 8)
  store i64 %14, ptr %duty3.i, align 4
  br label %common.ret52

if.end30:                                         ; preds = %if.end26
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %16 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hw, align 4
  %call33 = tail call i32 %6(ptr noundef %17, ptr noundef %duty) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.then35, label %if.end30.if.end37_crit_edge

if.end30.if.end37_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end37

if.then35:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  %duty36 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 25
  %18 = ptrtoint ptr %duty to i32
  call void @__asan_loadN_noabort(i32 %18, i32 8)
  %19 = load i64, ptr %duty, align 4
  %20 = ptrtoint ptr %duty36 to i32
  call void @__asan_storeN_noabort(i32 %20, i32 8)
  store i64 %19, ptr %duty36, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end30.if.end37_crit_edge
  tail call fastcc void @trace_clk_set_duty_cycle_complete(ptr noundef %core, ptr noundef %duty)
  br label %common.ret52
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_get_scaled_duty_cycle(ptr noundef readonly %clk, i32 noundef %scale) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  %call = tail call fastcc i32 @clk_core_get_scaled_duty_cycle(ptr noundef %1, i32 noundef %scale)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_get_scaled_duty_cycle(ptr noundef %core, i32 noundef %scale) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @clk_prepare_lock()
  %call = tail call fastcc i32 @clk_core_update_duty_cycle_nolock(ptr noundef %core)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %duty1 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 25
  %den = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 25, i32 1
  %0 = ptrtoint ptr %den to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %den, align 4
  %.frozen = freeze i32 %1
  %div = udiv i32 %scale, %.frozen
  %2 = mul i32 %div, %.frozen
  %rem3.decomposed = sub i32 %scale, %2
  %3 = ptrtoint ptr %duty1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %duty1, align 4
  %mul = mul i32 %4, %div
  %mul5 = mul i32 %4, %rem3.decomposed
  %div7 = udiv i32 %mul5, %1
  %add = add i32 %mul, %div7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ %call, %entry.if.end_crit_edge ], [ %add, %if.then ]
  %5 = load ptr, ptr @prepare_owner, align 4
  %6 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %5, %9
  br i1 %cmp.not.i, label %if.end.if.end27.i_crit_edge, label %land.rhs.i

if.end.if.end27.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %if.end
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %if.end.if.end27.i_crit_edge
  %10 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp36.i = icmp eq i32 %10, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %11 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %11, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  ret i32 %ret.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @clk_is_match(ptr noundef readonly %p, ptr noundef readonly %q) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %p, %q
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  %tobool.not.i = icmp eq ptr %p, null
  %cmp.i = icmp ugt ptr %p, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i
  br i1 %spec.select.i, label %if.end.if.end7_crit_edge, label %land.lhs.true

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %tobool.not.i12 = icmp eq ptr %q, null
  %cmp.i13 = icmp ugt ptr %q, inttoptr (i32 -4096 to ptr)
  %spec.select.i14 = or i1 %tobool.not.i12, %cmp.i13
  br i1 %spec.select.i14, label %land.lhs.true.if.end7_crit_edge, label %if.then2

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then2:                                         ; preds = %land.lhs.true
  %0 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %p, align 4
  %2 = ptrtoint ptr %q to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %q, align 4
  %cmp4 = icmp eq ptr %1, %3
  br i1 %cmp4, label %if.then2.return_crit_edge, label %if.then2.if.end7_crit_edge

if.then2.if.end7_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then2.return_crit_edge:                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end7:                                          ; preds = %if.then2.if.end7_crit_edge, %land.lhs.true.if.end7_crit_edge, %if.end.if.end7_crit_edge
  br label %return

return:                                           ; preds = %if.end7, %if.then2.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %if.end7 ], [ true, %entry.return_crit_edge ], [ true, %if.then2.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_debug_init() #7 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @debugfs_create_dir(ptr noundef nonnull @.str.19, ptr noundef null) #21
  store ptr %call, ptr @rootdir, align 4
  %call1 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.75, i16 noundef zeroext 292, ptr noundef %call, ptr noundef nonnull @all_lists, ptr noundef nonnull @clk_summary_fops) #21
  %0 = load ptr, ptr @rootdir, align 4
  %call2 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.76, i16 noundef zeroext 292, ptr noundef %0, ptr noundef nonnull @all_lists, ptr noundef nonnull @clk_dump_fops) #21
  %1 = load ptr, ptr @rootdir, align 4
  %call3 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.77, i16 noundef zeroext 292, ptr noundef %1, ptr noundef nonnull @orphan_list, ptr noundef nonnull @clk_summary_fops) #21
  %2 = load ptr, ptr @rootdir, align 4
  %call4 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.78, i16 noundef zeroext 292, ptr noundef %2, ptr noundef nonnull @orphan_list, ptr noundef nonnull @clk_dump_fops) #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @clk_debug_lock, i32 noundef 0) #21
  %3 = load ptr, ptr @clk_debug_list, align 4
  %tobool.not = icmp eq ptr %3, null
  %add.ptr = getelementptr i8, ptr %3, i32 -124
  %tobool6.not2527 = icmp eq ptr %add.ptr, null
  %tobool6.not25 = or i1 %tobool.not, %tobool6.not2527
  br i1 %tobool6.not25, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %core.026 = phi ptr [ %add.ptr13, %for.body.for.body_crit_edge ], [ %add.ptr, %entry.for.body_crit_edge ]
  %4 = load ptr, ptr @rootdir, align 4
  tail call fastcc void @clk_debug_create_one(ptr noundef nonnull %core.026, ptr noundef %4)
  %debug_node = getelementptr inbounds %struct.clk_core, ptr %core.026, i32 0, i32 31
  %5 = ptrtoint ptr %debug_node to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %debug_node, align 4
  %tobool9.not = icmp eq ptr %6, null
  %add.ptr13 = getelementptr i8, ptr %6, i32 -124
  %tobool6.not28 = icmp eq ptr %add.ptr13, null
  %tobool6.not = or i1 %tobool9.not, %tobool6.not28
  br i1 %tobool6.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  store i1 true, ptr @inited, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @clk_debug_lock) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @clk_hw_create_clk(ptr noundef %dev, ptr noundef readonly %hw, ptr noundef %dev_id, ptr noundef %con_id) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %hw, null
  %cmp.i = icmp ugt ptr %hw, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i
  br i1 %spec.select.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 36) #28
  %tobool.not.i23 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i23, label %if.end.cleanup_crit_edge, label %alloc_clk.exit

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

alloc_clk.exit:                                   ; preds = %if.end
  %3 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %1, ptr %call7.i.i.i, align 8
  %dev_id3.i = getelementptr inbounds %struct.clk, ptr %call7.i.i.i, i32 0, i32 2
  %4 = ptrtoint ptr %dev_id3.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %dev_id, ptr %dev_id3.i, align 8
  %call4.i = tail call ptr @kstrdup_const(ptr noundef %con_id, i32 noundef 3264) #21
  %con_id5.i = getelementptr inbounds %struct.clk, ptr %call7.i.i.i, i32 0, i32 3
  %5 = ptrtoint ptr %con_id5.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call4.i, ptr %con_id5.i, align 4
  %max_rate.i = getelementptr inbounds %struct.clk, ptr %call7.i.i.i, i32 0, i32 5
  %6 = ptrtoint ptr %max_rate.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %max_rate.i, align 4
  %cmp.i24 = icmp ugt ptr %call7.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i24, label %alloc_clk.exit.cleanup_crit_edge, label %if.end6

alloc_clk.exit.cleanup_crit_edge:                 ; preds = %alloc_clk.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end6:                                          ; preds = %alloc_clk.exit
  %dev7 = getelementptr inbounds %struct.clk, ptr %call7.i.i.i, i32 0, i32 1
  %7 = ptrtoint ptr %dev7 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %dev, ptr %dev7, align 4
  %owner = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %owner, align 4
  %call8 = tail call zeroext i1 @try_module_get(ptr noundef %9) #21
  br i1 %call8, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %con_id5.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %con_id5.i, align 4
  tail call void @kfree_const(ptr noundef %11) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #21
  br label %cleanup

if.end11:                                         ; preds = %if.end6
  %ref = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 32
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ref, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %ref, i32 1, i32 3, i32 1) #21
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ref, ptr %ref, i32 1, ptr elementtype(i32) %ref) #21, !srcloc !770
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end11.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !754

if.end11.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end11
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %13 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %.not.i.i.i.i = icmp sgt i32 %13, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.kref_get.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !753

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.kref_get.exit_crit_edge:          ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %kref_get.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end11.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end11.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %ref, i32 noundef %.sink.i.i.i.i) #21
  br label %kref_get.exit

kref_get.exit:                                    ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.kref_get.exit_crit_edge
  tail call fastcc void @clk_core_link_consumer(ptr noundef %1, ptr noundef nonnull %call7.i.i.i)
  br label %cleanup

cleanup:                                          ; preds = %kref_get.exit, %if.then9, %alloc_clk.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i.i, %kref_get.exit ], [ inttoptr (i32 -2 to ptr), %if.then9 ], [ %call7.i.i.i, %alloc_clk.exit.cleanup_crit_edge ], [ %hw, %entry.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_link_consumer(ptr noundef %core, ptr noundef %clk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @clk_prepare_lock()
  %clks_node = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 7
  %clks = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 28
  %0 = ptrtoint ptr %clks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clks, align 4
  %2 = ptrtoint ptr %clks_node to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %1, ptr %clks_node, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hlist_add_head.exit_crit_edge, label %do.body12.i

entry.hlist_add_head.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %clks_node, ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %entry.hlist_add_head.exit_crit_edge
  %4 = ptrtoint ptr %clks to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %clks_node, ptr %clks, align 4
  %pprev34.i = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 7, i32 1
  %5 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %clks, ptr %pprev34.i, align 4
  %6 = load ptr, ptr @prepare_owner, align 4
  %7 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %6, %10
  br i1 %cmp.not.i, label %hlist_add_head.exit.if.end27.i_crit_edge, label %land.rhs.i

hlist_add_head.exit.if.end27.i_crit_edge:         ; preds = %hlist_add_head.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %hlist_add_head.exit
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %hlist_add_head.exit.if.end27.i_crit_edge
  %11 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp36.i = icmp eq i32 %11, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %12 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %12, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @clk_hw_get_clk(ptr noundef %hw, ptr noundef %con_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %dev1 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  %init_name.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.dev_name.exit_crit_edge

entry.dev_name.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %3, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %entry.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %7, %if.end.i ], [ %5, %entry.dev_name.exit_crit_edge ]
  %call2 = tail call ptr @clk_hw_create_clk(ptr noundef %3, ptr noundef %hw, ptr noundef %retval.0.i, ptr noundef %con_id)
  ret ptr %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @clk_register(ptr noundef %dev, ptr noundef %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.dev_or_parent_of_node.exit_crit_edge, label %dev_of_node.exit.i

entry.dev_or_parent_of_node.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_or_parent_of_node.exit

dev_of_node.exit.i:                               ; preds = %entry
  %of_node.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i.i, align 8
  %tobool1.not.i = icmp eq ptr %1, null
  br i1 %tobool1.not.i, label %if.then2.i, label %dev_of_node.exit.i.dev_or_parent_of_node.exit_crit_edge

dev_of_node.exit.i.dev_or_parent_of_node.exit_crit_edge: ; preds = %dev_of_node.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_or_parent_of_node.exit

if.then2.i:                                       ; preds = %dev_of_node.exit.i
  %parent.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i, align 8
  %tobool.not.i8.i = icmp eq ptr %3, null
  br i1 %tobool.not.i8.i, label %if.then2.i.dev_or_parent_of_node.exit_crit_edge, label %if.end.i10.i

if.then2.i.dev_or_parent_of_node.exit_crit_edge:  ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_or_parent_of_node.exit

if.end.i10.i:                                     ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #23
  %of_node.i9.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 27
  %4 = ptrtoint ptr %of_node.i9.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of_node.i9.i, align 8
  br label %dev_or_parent_of_node.exit

dev_or_parent_of_node.exit:                       ; preds = %if.end.i10.i, %if.then2.i.dev_or_parent_of_node.exit_crit_edge, %dev_of_node.exit.i.dev_or_parent_of_node.exit_crit_edge, %entry.dev_or_parent_of_node.exit_crit_edge
  %retval.0.i = phi ptr [ null, %entry.dev_or_parent_of_node.exit_crit_edge ], [ %1, %dev_of_node.exit.i.dev_or_parent_of_node.exit_crit_edge ], [ %5, %if.end.i10.i ], [ null, %if.then2.i.dev_or_parent_of_node.exit_crit_edge ]
  %call1 = tail call fastcc ptr @__clk_register(ptr noundef %dev, ptr noundef %retval.0.i, ptr noundef %hw)
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__clk_register(ptr noundef %dev, ptr noundef %np, ptr noundef %hw) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %init1 = getelementptr inbounds %struct.clk_hw, ptr %hw, i32 0, i32 2
  %0 = ptrtoint ptr %init1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %init1, align 4
  store ptr null, ptr %init1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 136) #28
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.fail_out_crit_edge, label %if.end

entry.fail_out_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %fail_out

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 4
  %call3 = tail call ptr @kstrdup_const(ptr noundef %4, i32 noundef 3264) #21
  %5 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call3, ptr %call7.i.i, align 8
  %tobool6.not = icmp eq ptr %call3, null
  br i1 %tobool6.not, label %if.end.fail_name_crit_edge, label %if.end8

if.end.fail_name_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %fail_name

if.end8:                                          ; preds = %if.end
  %ops = getelementptr inbounds %struct.clk_init_data, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %tobool9.not = icmp eq ptr %7, null
  br i1 %tobool9.not, label %do.end, label %if.end34, !prof !754

do.end:                                           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3901, i32 noundef 9, ptr noundef null) #21
  br label %fail_ops

if.end34:                                         ; preds = %if.end8
  %ops36 = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %ops36 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %ops36, align 4
  %tobool37.not = icmp eq ptr %dev, null
  br i1 %tobool37.not, label %if.end48.critedge, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end34
  %disable_depth.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 15
  %9 = ptrtoint ptr %disable_depth.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %bf.load.i = load i16, ptr %disable_depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %bf.load.i)
  %tobool.not.i = icmp ult i16 %bf.load.i, 8192
  br i1 %tobool.not.i, label %if.then39, label %land.lhs.true.land.lhs.true43_crit_edge

land.lhs.true.land.lhs.true43_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true43

if.then39:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %rpm_enabled = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 17
  %10 = ptrtoint ptr %rpm_enabled to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 1, ptr %rpm_enabled, align 1
  br label %land.lhs.true43

land.lhs.true43:                                  ; preds = %if.then39, %land.lhs.true.land.lhs.true43_crit_edge
  %11 = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %dev, ptr %11, align 8
  %13 = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 5
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %np, ptr %13, align 4
  %driver = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 6
  %15 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %driver, align 4
  %tobool44.not = icmp eq ptr %16, null
  br i1 %tobool44.not, label %land.lhs.true43.if.end48_crit_edge, label %if.then45

land.lhs.true43.if.end48_crit_edge:               ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end48

if.then45:                                        ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #23
  %owner = getelementptr inbounds %struct.device_driver, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %owner, align 4
  %owner47 = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 3
  %19 = ptrtoint ptr %owner47 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %owner47, align 4
  br label %if.end48

if.end48.critedge:                                ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #23
  %dev41.c122 = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 4
  %20 = ptrtoint ptr %dev41.c122 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %dev41.c122, align 8
  %of_node.c123 = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 5
  %21 = ptrtoint ptr %of_node.c123 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %np, ptr %of_node.c123, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.critedge, %if.then45, %land.lhs.true43.if.end48_crit_edge
  %hw49 = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 2
  %22 = ptrtoint ptr %hw49 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %hw, ptr %hw49, align 8
  %flags = getelementptr inbounds %struct.clk_init_data, ptr %1, i32 0, i32 6
  %23 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags, align 4
  %flags50 = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 15
  %25 = ptrtoint ptr %flags50 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %flags50, align 8
  %num_parents = getelementptr inbounds %struct.clk_init_data, ptr %1, i32 0, i32 5
  %26 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %num_parents, align 4
  %num_parents51 = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 8
  %28 = ptrtoint ptr %num_parents51 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %27, ptr %num_parents51, align 8
  %min_rate = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 21
  %29 = ptrtoint ptr %min_rate to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %min_rate, align 4
  %max_rate = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 22
  %30 = ptrtoint ptr %max_rate to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 -1, ptr %max_rate, align 8
  %31 = load i8, ptr %num_parents, align 4
  %parent_names2.i = getelementptr inbounds %struct.clk_init_data, ptr %1, i32 0, i32 2
  %32 = ptrtoint ptr %parent_names2.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %parent_names2.i, align 4
  %parent_hws3.i = getelementptr inbounds %struct.clk_init_data, ptr %1, i32 0, i32 4
  %34 = ptrtoint ptr %parent_hws3.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %parent_hws3.i, align 4
  %parent_data4.i = getelementptr inbounds %struct.clk_init_data, ptr %1, i32 0, i32 3
  %36 = ptrtoint ptr %parent_data4.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %parent_data4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool.not.i124 = icmp eq i8 %31, 0
  br i1 %tobool.not.i124, label %if.end48.if.end55_crit_edge, label %if.end.i

if.end48.if.end55_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

if.end.i:                                         ; preds = %if.end48
  %conv.i = zext i8 %31 to i32
  %38 = mul nuw nsw i32 %conv.i, 20
  %call8.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %38, i32 noundef 3520) #29
  %parents5.i = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 7
  %39 = ptrtoint ptr %parents5.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %call8.i.i.i, ptr %parents5.i, align 4
  %tobool6.not.i = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool6.not.i, label %if.end.i.fail_ops_crit_edge, label %for.cond.preheader.i

if.end.i.fail_ops_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %fail_ops

for.cond.preheader.i:                             ; preds = %if.end.i
  %tobool11.not.i = icmp eq ptr %33, null
  %tobool39.not.i = icmp eq ptr %37, null
  %tobool57.not.i = icmp eq ptr %35, null
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i
  %parent.0186.i = phi ptr [ %call8.i.i.i, %for.cond.preheader.i ], [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ]
  %i.0184.i = phi i32 [ 0, %for.cond.preheader.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %index.i = getelementptr inbounds %struct.clk_parent_map, ptr %parent.0186.i, i32 0, i32 4
  %40 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 -1, ptr %index.i, align 4
  br i1 %tobool11.not.i, label %if.else.i, label %if.then12.i

if.then12.i:                                      ; preds = %for.body.i
  %arrayidx.i = getelementptr ptr, ptr %33, i32 %i.0184.i
  %41 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx.i, align 4
  %tobool13.not.i = icmp eq ptr %42, null
  br i1 %tobool13.not.i, label %if.end29.i, label %if.then12.i.if.end3.i.i_crit_edge, !prof !754

if.then12.i.if.end3.i.i_crit_edge:                ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3.i.i

if.end29.i:                                       ; preds = %if.then12.i
  %43 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %call7.i.i, align 8
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3827, i32 noundef 9, ptr noundef nonnull @.str.132, ptr noundef nonnull @__func__.clk_core_populate_parent_map, ptr noundef %44) #21
  %45 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %.pr.i = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i.i = icmp eq ptr %.pr.i, null
  br i1 %tobool.not.i.i, label %if.end29.i.if.end90.i_crit_edge, label %if.end29.i.if.end3.i.i_crit_edge

if.end29.i.if.end3.i.i_crit_edge:                 ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3.i.i

if.end29.i.if.end90.i_crit_edge:                  ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end90.i

if.end3.i.i:                                      ; preds = %if.end29.i.if.end3.i.i_crit_edge, %if.then12.i.if.end3.i.i_crit_edge
  %46 = phi ptr [ %.pr.i, %if.end29.i.if.end3.i.i_crit_edge ], [ %42, %if.then12.i.if.end3.i.i_crit_edge ]
  %name36174.i = getelementptr inbounds %struct.clk_parent_map, ptr %parent.0186.i, i32 0, i32 3
  %call.i.i = tail call ptr @kstrdup_const(ptr noundef nonnull %46, i32 noundef 3264) #21
  %47 = ptrtoint ptr %name36174.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %call.i.i, ptr %name36174.i, align 4
  %tobool4.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool4.not.i.i, label %if.end3.i.i.if.end90.i_crit_edge, label %if.end3.i.i.for.inc.i_crit_edge

if.end3.i.i.for.inc.i_crit_edge:                  ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.end3.i.i.if.end90.i_crit_edge:                 ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end90.i

if.else.i:                                        ; preds = %for.body.i
  br i1 %tobool39.not.i, label %if.else56.i, label %if.then40.i

if.then40.i:                                      ; preds = %if.else.i
  %arrayidx41.i = getelementptr %struct.clk_parent_data, ptr %37, i32 %i.0184.i
  %48 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx41.i, align 4
  %50 = ptrtoint ptr %parent.0186.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %49, ptr %parent.0186.i, align 4
  %index44.i = getelementptr %struct.clk_parent_data, ptr %37, i32 %i.0184.i, i32 3
  %51 = ptrtoint ptr %index44.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %index44.i, align 4
  %53 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %index.i, align 4
  %fw_name47.i = getelementptr %struct.clk_parent_data, ptr %37, i32 %i.0184.i, i32 1
  %54 = ptrtoint ptr %fw_name47.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %fw_name47.i, align 4
  %tobool.not.i153.i = icmp eq ptr %55, null
  br i1 %tobool.not.i153.i, label %if.then40.i.if.then50.i_crit_edge, label %if.end3.i158.i

if.then40.i.if.then50.i_crit_edge:                ; preds = %if.then40.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then50.i

if.end3.i158.i:                                   ; preds = %if.then40.i
  %fw_name.i = getelementptr inbounds %struct.clk_parent_map, ptr %parent.0186.i, i32 0, i32 2
  %call.i155.i = tail call ptr @kstrdup_const(ptr noundef nonnull %55, i32 noundef 3264) #21
  %56 = ptrtoint ptr %fw_name.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %call.i155.i, ptr %fw_name.i, align 4
  %tobool4.not.i156.i = icmp eq ptr %call.i155.i, null
  br i1 %tobool4.not.i156.i, label %if.end3.i158.i.if.end90.i_crit_edge, label %if.end3.i158.i.if.then50.i_crit_edge

if.end3.i158.i.if.then50.i_crit_edge:             ; preds = %if.end3.i158.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then50.i

if.end3.i158.i.if.end90.i_crit_edge:              ; preds = %if.end3.i158.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end90.i

if.then50.i:                                      ; preds = %if.end3.i158.i.if.then50.i_crit_edge, %if.then40.i.if.then50.i_crit_edge
  %name53.i = getelementptr %struct.clk_parent_data, ptr %37, i32 %i.0184.i, i32 2
  %57 = ptrtoint ptr %name53.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %name53.i, align 4
  %tobool.not.i161.i = icmp eq ptr %58, null
  br i1 %tobool.not.i161.i, label %if.then50.i.for.inc.i_crit_edge, label %if.end3.i166.i

if.then50.i.for.inc.i_crit_edge:                  ; preds = %if.then50.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.end3.i166.i:                                   ; preds = %if.then50.i
  %name51.i = getelementptr inbounds %struct.clk_parent_map, ptr %parent.0186.i, i32 0, i32 3
  %call.i163.i = tail call ptr @kstrdup_const(ptr noundef nonnull %58, i32 noundef 3264) #21
  %59 = ptrtoint ptr %name51.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %call.i163.i, ptr %name51.i, align 4
  %tobool4.not.i164.i = icmp eq ptr %call.i163.i, null
  br i1 %tobool4.not.i164.i, label %if.end3.i166.i.if.end90.i_crit_edge, label %if.end3.i166.i.for.inc.i_crit_edge

if.end3.i166.i.for.inc.i_crit_edge:               ; preds = %if.end3.i166.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.end3.i166.i.if.end90.i_crit_edge:              ; preds = %if.end3.i166.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end90.i

if.else56.i:                                      ; preds = %if.else.i
  br i1 %tobool57.not.i, label %do.end74.i, label %if.then58.i

if.then58.i:                                      ; preds = %if.else56.i
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx59.i = getelementptr ptr, ptr %35, i32 %i.0184.i
  %60 = ptrtoint ptr %arrayidx59.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %arrayidx59.i, align 4
  %62 = ptrtoint ptr %parent.0186.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %61, ptr %parent.0186.i, align 4
  br label %for.inc.i

do.end74.i:                                       ; preds = %if.else56.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3843, i32 noundef 9, ptr noundef nonnull @.str.133) #21
  br label %if.end90.i

if.end90.i:                                       ; preds = %do.end74.i, %if.end3.i166.i.if.end90.i_crit_edge, %if.end3.i158.i.if.end90.i_crit_edge, %if.end3.i.i.if.end90.i_crit_edge, %if.end29.i.if.end90.i_crit_edge
  %ret.1.i = phi i32 [ -22, %do.end74.i ], [ -22, %if.end29.i.if.end90.i_crit_edge ], [ -12, %if.end3.i.i.if.end90.i_crit_edge ], [ -12, %if.end3.i158.i.if.end90.i_crit_edge ], [ -12, %if.end3.i166.i.if.end90.i_crit_edge ]
  br label %do.body93.i

do.body93.i:                                      ; preds = %do.body93.i.do.body93.i_crit_edge, %if.end90.i
  %i.1.i = phi i32 [ %i.0184.i, %if.end90.i ], [ %dec.i, %do.body93.i.do.body93.i_crit_edge ]
  %name95.i = getelementptr %struct.clk_parent_map, ptr %call8.i.i.i, i32 %i.1.i, i32 3
  %63 = ptrtoint ptr %name95.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %name95.i, align 4
  tail call void @kfree_const(ptr noundef %64) #21
  %fw_name97.i = getelementptr %struct.clk_parent_map, ptr %call8.i.i.i, i32 %i.1.i, i32 2
  %65 = ptrtoint ptr %fw_name97.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %fw_name97.i, align 4
  tail call void @kfree_const(ptr noundef %66) #21
  %dec.i = add nsw i32 %i.1.i, -1
  %cmp99.i = icmp sgt i32 %i.1.i, 0
  br i1 %cmp99.i, label %do.body93.i.do.body93.i_crit_edge, label %do.end101.i

do.body93.i.do.body93.i_crit_edge:                ; preds = %do.body93.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body93.i

do.end101.i:                                      ; preds = %do.body93.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @kfree(ptr noundef nonnull %call8.i.i.i) #21
  br label %fail_ops

for.inc.i:                                        ; preds = %if.then58.i, %if.end3.i166.i.for.inc.i_crit_edge, %if.then50.i.for.inc.i_crit_edge, %if.end3.i.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.0184.i, 1
  %incdec.ptr.i = getelementptr %struct.clk_parent_map, ptr %parent.0186.i, i32 1
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.if.end55_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.if.end55_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

if.end55:                                         ; preds = %for.inc.i.if.end55_crit_edge, %if.end48.if.end55_crit_edge
  %clks = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 28
  %67 = ptrtoint ptr %clks to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr null, ptr %clks, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %68 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %68, i32 noundef 3520, i32 noundef 36) #28
  %tobool.not.i125 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i125, label %alloc_clk.exit.thread, label %alloc_clk.exit

alloc_clk.exit.thread:                            ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #23
  %clk142 = getelementptr inbounds %struct.clk_hw, ptr %hw, i32 0, i32 1
  %69 = ptrtoint ptr %clk142 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr inttoptr (i32 -12 to ptr), ptr %clk142, align 4
  br label %if.then59

alloc_clk.exit:                                   ; preds = %if.end55
  %70 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %call7.i.i, ptr %call7.i.i.i, align 8
  %dev_id3.i = getelementptr inbounds %struct.clk, ptr %call7.i.i.i, i32 0, i32 2
  %71 = ptrtoint ptr %dev_id3.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr null, ptr %dev_id3.i, align 8
  %call4.i = tail call ptr @kstrdup_const(ptr noundef null, i32 noundef 3264) #21
  %con_id5.i = getelementptr inbounds %struct.clk, ptr %call7.i.i.i, i32 0, i32 3
  %72 = ptrtoint ptr %con_id5.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %call4.i, ptr %con_id5.i, align 4
  %max_rate.i = getelementptr inbounds %struct.clk, ptr %call7.i.i.i, i32 0, i32 5
  %73 = ptrtoint ptr %max_rate.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 -1, ptr %max_rate.i, align 4
  %clk = getelementptr inbounds %struct.clk_hw, ptr %hw, i32 0, i32 1
  %74 = ptrtoint ptr %clk to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %call7.i.i.i, ptr %clk, align 4
  %cmp.i = icmp ugt ptr %call7.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %alloc_clk.exit.if.then59_crit_edge, label %if.end62

alloc_clk.exit.if.then59_crit_edge:               ; preds = %alloc_clk.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then59

if.then59:                                        ; preds = %alloc_clk.exit.if.then59_crit_edge, %alloc_clk.exit.thread
  %retval.0.i127144 = phi ptr [ inttoptr (i32 -12 to ptr), %alloc_clk.exit.thread ], [ %call7.i.i.i, %alloc_clk.exit.if.then59_crit_edge ]
  %75 = ptrtoint ptr %retval.0.i127144 to i32
  br label %fail_create_clk

if.end62:                                         ; preds = %alloc_clk.exit
  tail call fastcc void @clk_core_link_consumer(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %call7.i.i.i)
  %call64 = tail call fastcc i32 @__clk_core_init(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %if.then66, label %if.end68

if.then66:                                        ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #23
  %76 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %clk, align 4
  br label %cleanup

if.end68:                                         ; preds = %if.end62
  tail call fastcc void @clk_prepare_lock()
  %78 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %clk, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %80 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool.not.i128 = icmp eq i32 %80, 0
  br i1 %tobool.not.i128, label %if.end68.if.end.i130_crit_edge, label %land.rhs.i

if.end68.if.end.i130_crit_edge:                   ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i130

land.rhs.i:                                       ; preds = %if.end68
  %call.i.i129 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i129)
  %cmp.not.i = icmp eq i32 %call.i.i129, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i130_crit_edge, !prof !754

land.rhs.i.if.end.i130_crit_edge:                 ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i130

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3682, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i130

if.end.i130:                                      ; preds = %do.end.i, %land.rhs.i.if.end.i130_crit_edge, %if.end68.if.end.i130_crit_edge
  %clks_node.i = getelementptr inbounds %struct.clk, ptr %79, i32 0, i32 7
  %81 = ptrtoint ptr %clks_node.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %clks_node.i, align 4
  %pprev2.i.i.i = getelementptr inbounds %struct.clk, ptr %79, i32 0, i32 7, i32 1
  %83 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %pprev2.i.i.i, align 4
  %85 = ptrtoint ptr %84 to i32
  call void @__asan_store4_noabort(i32 %85)
  store volatile ptr %82, ptr %84, align 4
  %tobool.not.i.i.i = icmp eq ptr %82, null
  br i1 %tobool.not.i.i.i, label %if.end.i130.clk_core_unlink_consumer.exit_crit_edge, label %do.body13.i.i.i

if.end.i130.clk_core_unlink_consumer.exit_crit_edge: ; preds = %if.end.i130
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_unlink_consumer.exit

do.body13.i.i.i:                                  ; preds = %if.end.i130
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %82, i32 0, i32 1
  %86 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store volatile ptr %84, ptr %pprev14.i.i.i, align 4
  br label %clk_core_unlink_consumer.exit

clk_core_unlink_consumer.exit:                    ; preds = %do.body13.i.i.i, %if.end.i130.clk_core_unlink_consumer.exit_crit_edge
  %87 = ptrtoint ptr %clks_node.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr inttoptr (i32 256 to ptr), ptr %clks_node.i, align 4
  %88 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i, align 4
  %89 = load ptr, ptr @prepare_owner, align 4
  %90 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %90, -16384
  %91 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %91, i32 0, i32 2
  %92 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %task.i, align 8
  %cmp.not.i131 = icmp eq ptr %89, %93
  br i1 %cmp.not.i131, label %clk_core_unlink_consumer.exit.if.end27.i_crit_edge, label %land.rhs.i132

clk_core_unlink_consumer.exit.if.end27.i_crit_edge: ; preds = %clk_core_unlink_consumer.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i132:                                    ; preds = %clk_core_unlink_consumer.exit
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i132.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i132.if.end27.i_crit_edge:               ; preds = %land.rhs.i132
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i132
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i132.if.end27.i_crit_edge, %clk_core_unlink_consumer.exit.if.end27.i_crit_edge
  %94 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %94)
  %cmp36.i = icmp eq i32 %94, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %95 = load i32, ptr @prepare_refcnt, align 4
  %dec.i133 = add i32 %95, -1
  store i32 %dec.i133, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i133)
  %tobool89.not.i = icmp eq i32 %dec.i133, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  %96 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %clk, align 4
  %con_id.i = getelementptr inbounds %struct.clk, ptr %97, i32 0, i32 3
  %98 = ptrtoint ptr %con_id.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %con_id.i, align 4
  tail call void @kfree_const(ptr noundef %99) #21
  tail call void @kfree(ptr noundef %97) #21
  %100 = ptrtoint ptr %clk to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr null, ptr %clk, align 4
  br label %fail_create_clk

fail_create_clk:                                  ; preds = %clk_prepare_unlock.exit, %if.then59
  %ret.0 = phi i32 [ %75, %if.then59 ], [ %call64, %clk_prepare_unlock.exit ]
  %101 = ptrtoint ptr %num_parents51 to i32
  call void @__asan_load1_noabort(i32 %101)
  %102 = load i8, ptr %num_parents51, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %102)
  %tobool.not.i134 = icmp eq i8 %102, 0
  br i1 %tobool.not.i134, label %fail_create_clk.fail_ops_crit_edge, label %while.body.lr.ph.i

fail_create_clk.fail_ops_crit_edge:               ; preds = %fail_create_clk
  call void @__sanitizer_cov_trace_pc() #23
  br label %fail_ops

while.body.lr.ph.i:                               ; preds = %fail_create_clk
  %conv.i135 = zext i8 %102 to i32
  %parents.i = getelementptr inbounds %struct.clk_core, ptr %call7.i.i, i32 0, i32 7
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %dec14.in.i = phi i32 [ %conv.i135, %while.body.lr.ph.i ], [ %dec14.i, %while.body.i.while.body.i_crit_edge ]
  %dec14.i = add nsw i32 %dec14.in.i, -1
  %103 = ptrtoint ptr %parents.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %parents.i, align 4
  %name.i = getelementptr %struct.clk_parent_map, ptr %104, i32 %dec14.i, i32 3
  %105 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %name.i, align 4
  tail call void @kfree_const(ptr noundef %106) #21
  %107 = ptrtoint ptr %parents.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %parents.i, align 4
  %fw_name.i136 = getelementptr %struct.clk_parent_map, ptr %108, i32 %dec14.i, i32 2
  %109 = ptrtoint ptr %fw_name.i136 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %fw_name.i136, align 4
  tail call void @kfree_const(ptr noundef %110) #21
  %cmp.i137 = icmp ugt i32 %dec14.in.i, 1
  br i1 %cmp.i137, label %while.body.i.while.body.i_crit_edge, label %while.end.i

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

while.end.i:                                      ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %111 = ptrtoint ptr %parents.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %parents.i, align 4
  tail call void @kfree(ptr noundef %112) #21
  br label %fail_ops

fail_ops:                                         ; preds = %while.end.i, %fail_create_clk.fail_ops_crit_edge, %do.end101.i, %if.end.i.fail_ops_crit_edge, %do.end
  %ret.1 = phi i32 [ -22, %do.end ], [ %ret.1.i, %do.end101.i ], [ -12, %if.end.i.fail_ops_crit_edge ], [ %ret.0, %fail_create_clk.fail_ops_crit_edge ], [ %ret.0, %while.end.i ]
  %113 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %call7.i.i, align 8
  tail call void @kfree_const(ptr noundef %114) #21
  br label %fail_name

fail_name:                                        ; preds = %fail_ops, %if.end.fail_name_crit_edge
  %ret.2 = phi i32 [ %ret.1, %fail_ops ], [ -12, %if.end.fail_name_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #21
  br label %fail_out

fail_out:                                         ; preds = %fail_name, %entry.fail_out_crit_edge
  %ret.3 = phi i32 [ %ret.2, %fail_name ], [ -12, %entry.fail_out_crit_edge ]
  %115 = inttoptr i32 %ret.3 to ptr
  br label %cleanup

cleanup:                                          ; preds = %fail_out, %if.then66
  %retval.0 = phi ptr [ %115, %fail_out ], [ %77, %if.then66 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_hw_register(ptr noundef %dev, ptr noundef %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.dev_or_parent_of_node.exit_crit_edge, label %dev_of_node.exit.i

entry.dev_or_parent_of_node.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_or_parent_of_node.exit

dev_of_node.exit.i:                               ; preds = %entry
  %of_node.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i.i, align 8
  %tobool1.not.i = icmp eq ptr %1, null
  br i1 %tobool1.not.i, label %if.then2.i, label %dev_of_node.exit.i.dev_or_parent_of_node.exit_crit_edge

dev_of_node.exit.i.dev_or_parent_of_node.exit_crit_edge: ; preds = %dev_of_node.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_or_parent_of_node.exit

if.then2.i:                                       ; preds = %dev_of_node.exit.i
  %parent.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i, align 8
  %tobool.not.i8.i = icmp eq ptr %3, null
  br i1 %tobool.not.i8.i, label %if.then2.i.dev_or_parent_of_node.exit_crit_edge, label %if.end.i10.i

if.then2.i.dev_or_parent_of_node.exit_crit_edge:  ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_or_parent_of_node.exit

if.end.i10.i:                                     ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #23
  %of_node.i9.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 27
  %4 = ptrtoint ptr %of_node.i9.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of_node.i9.i, align 8
  br label %dev_or_parent_of_node.exit

dev_or_parent_of_node.exit:                       ; preds = %if.end.i10.i, %if.then2.i.dev_or_parent_of_node.exit_crit_edge, %dev_of_node.exit.i.dev_or_parent_of_node.exit_crit_edge, %entry.dev_or_parent_of_node.exit_crit_edge
  %retval.0.i = phi ptr [ null, %entry.dev_or_parent_of_node.exit_crit_edge ], [ %1, %dev_of_node.exit.i.dev_or_parent_of_node.exit_crit_edge ], [ %5, %if.end.i10.i ], [ null, %if.then2.i.dev_or_parent_of_node.exit_crit_edge ]
  %call1 = tail call fastcc ptr @__clk_register(ptr noundef %dev, ptr noundef %retval.0.i, ptr noundef %hw)
  %cmp.i.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  %6 = ptrtoint ptr %call1 to i32
  %spec.select.i = select i1 %cmp.i.i, i32 %6, i32 0
  ret i32 %spec.select.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @of_clk_hw_register(ptr noundef %node, ptr noundef %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @__clk_register(ptr noundef null, ptr noundef %node, ptr noundef %hw)
  %cmp.i.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  %0 = ptrtoint ptr %call to i32
  %spec.select.i = select i1 %cmp.i.i, i32 %0, i32 0
  ret i32 %spec.select.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clk_unregister(ptr noundef %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %cmp.i = icmp ugt ptr %clk, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %land.rhs, label %if.end38

land.rhs:                                         ; preds = %lor.lhs.false
  %.b138 = load i1, ptr @clk_unregister.__already_done, align 1
  br i1 %.b138, label %land.rhs.cleanup_crit_edge, label %if.then, !prof !753

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_unregister.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4118, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end38:                                         ; preds = %lor.lhs.false
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @clk_debug_lock, i32 noundef 0) #21
  %debug_node.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 31
  %pprev.i.i.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 31, i32 1
  %2 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i.not.i.i, label %if.end38.clk_debug_unregister.exit_crit_edge, label %if.then.i.i

if.end38.clk_debug_unregister.exit_crit_edge:     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_debug_unregister.exit

if.then.i.i:                                      ; preds = %if.end38
  %4 = ptrtoint ptr %debug_node.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %debug_node.i, align 4
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %5, ptr %3, align 4
  %tobool.not.i3.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i3.i.i, label %if.then.i.i.__hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i

if.then.i.i.__hlist_del.exit.i.i_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__hlist_del.exit.i.i

do.body13.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %5, i32 0, i32 1
  %7 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %3, ptr %pprev14.i.i.i, align 4
  br label %__hlist_del.exit.i.i

__hlist_del.exit.i.i:                             ; preds = %do.body13.i.i.i, %if.then.i.i.__hlist_del.exit.i.i_crit_edge
  %8 = ptrtoint ptr %debug_node.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %debug_node.i, align 4
  %9 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %pprev.i.i.i, align 4
  br label %clk_debug_unregister.exit

clk_debug_unregister.exit:                        ; preds = %__hlist_del.exit.i.i, %if.end38.clk_debug_unregister.exit_crit_edge
  %dentry.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 30
  %10 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dentry.i, align 4
  tail call void @debugfs_remove(ptr noundef %11) #21
  %12 = ptrtoint ptr %dentry.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %dentry.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @clk_debug_lock) #21
  tail call fastcc void @clk_prepare_lock()
  %13 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %clk, align 4
  %ops40 = getelementptr inbounds %struct.clk_core, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %ops40 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops40, align 4
  %cmp = icmp eq ptr %16, @clk_nodrv_ops
  br i1 %cmp, label %do.end44, label %if.end48

do.end44:                                         ; preds = %clk_debug_unregister.exit
  call void @__sanitizer_cov_trace_pc() #23
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %14, align 4
  %call47 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4, ptr noundef %18) #26
  br label %unlock

if.end48:                                         ; preds = %clk_debug_unregister.exit
  %call49 = tail call fastcc i32 @clk_enable_lock()
  %19 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %clk, align 4
  %ops51 = getelementptr inbounds %struct.clk_core, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %ops51 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr @clk_nodrv_ops, ptr %ops51, align 4
  %22 = load ptr, ptr @enable_owner, align 4
  %23 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 2
  %25 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %22, %26
  br i1 %cmp.not.i, label %if.end48.if.end27.i_crit_edge, label %land.rhs.i

if.end48.if.end27.i_crit_edge:                    ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %if.end48
  %.b98.i = load i1, ptr @clk_enable_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 190, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %if.end48.if.end27.i_crit_edge
  %27 = load i32, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp36.i = icmp eq i32 %27, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_enable_unlock.__already_done.156, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done.156, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 191, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %28 = load i32, ptr @enable_refcnt, align 4
  %dec.i = add i32 %28, -1
  store i32 %dec.i, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_enable_unlock.exit_crit_edge

if.end81.i.clk_enable_unlock.exit_crit_edge:      ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_enable_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @enable_owner, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @enable_lock, i32 noundef %call49) #21
  br label %clk_enable_unlock.exit

clk_enable_unlock.exit:                           ; preds = %if.end91.i, %if.end81.i.clk_enable_unlock.exit_crit_edge
  %terminate = getelementptr inbounds %struct.clk_ops, ptr %16, i32 0, i32 23
  %29 = ptrtoint ptr %terminate to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %terminate, align 4
  %tobool52.not = icmp eq ptr %30, null
  br i1 %tobool52.not, label %clk_enable_unlock.exit.if.end56_crit_edge, label %if.then53

clk_enable_unlock.exit.if.end56_crit_edge:        ; preds = %clk_enable_unlock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56

if.then53:                                        ; preds = %clk_enable_unlock.exit
  call void @__sanitizer_cov_trace_pc() #23
  %31 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %clk, align 4
  %hw = getelementptr inbounds %struct.clk_core, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %hw, align 4
  tail call void %30(ptr noundef %34) #21
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %clk_enable_unlock.exit.if.end56_crit_edge
  %35 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %clk, align 4
  %children = getelementptr inbounds %struct.clk_core, ptr %36, i32 0, i32 26
  %37 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile ptr, ptr %children, align 4
  %tobool.not.i = icmp eq ptr %38, null
  %add.ptr = getelementptr i8, ptr %38, i32 -104
  %tobool66.not162 = icmp eq ptr %add.ptr, null
  %or.cond = or i1 %tobool.not.i, %tobool66.not162
  br i1 %or.cond, label %if.end56.if.end82_crit_edge, label %if.end56.land.rhs67_crit_edge

if.end56.land.rhs67_crit_edge:                    ; preds = %if.end56
  br label %land.rhs67

if.end56.if.end82_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end82

land.rhs67:                                       ; preds = %land.rhs67.land.rhs67_crit_edge, %if.end56.land.rhs67_crit_edge
  %child.0163 = phi ptr [ %add.ptr78, %land.rhs67.land.rhs67_crit_edge ], [ %add.ptr, %if.end56.land.rhs67_crit_edge ]
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.0163, i32 0, i32 27
  %39 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %child_node, align 4
  %call71 = tail call fastcc i32 @clk_core_set_parent_nolock(ptr noundef nonnull %child.0163, ptr noundef null)
  %tobool74.not = icmp eq ptr %40, null
  %add.ptr78 = getelementptr i8, ptr %40, i32 -104
  %tobool66.not164 = icmp eq ptr %add.ptr78, null
  %tobool66.not = or i1 %tobool74.not, %tobool66.not164
  br i1 %tobool66.not, label %land.rhs67.if.end82_crit_edge, label %land.rhs67.land.rhs67_crit_edge

land.rhs67.land.rhs67_crit_edge:                  ; preds = %land.rhs67
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.rhs67

land.rhs67.if.end82_crit_edge:                    ; preds = %land.rhs67
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end82

if.end82:                                         ; preds = %land.rhs67.if.end82_crit_edge, %if.end56.if.end82_crit_edge
  %41 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %clk, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %43 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i140 = icmp eq i32 %43, 0
  br i1 %tobool.not.i140, label %if.end82.if.end.i_crit_edge, label %land.rhs.i142

if.end82.if.end.i_crit_edge:                      ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i142:                                    ; preds = %if.end82
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i141 = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i141, label %do.end.i, label %land.rhs.i142.if.end.i_crit_edge, !prof !754

land.rhs.i142.if.end.i_crit_edge:                 ; preds = %land.rhs.i142
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i142
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4101, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i142.if.end.i_crit_edge, %if.end82.if.end.i_crit_edge
  %44 = load ptr, ptr @all_lists, align 4
  %tobool24.not57.i = icmp eq ptr %44, null
  br i1 %tobool24.not57.i, label %if.end.i.clk_core_evict_parent_cache.exit_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.clk_core_evict_parent_cache.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_evict_parent_cache.exit

for.body.i:                                       ; preds = %for.inc41.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %45 = phi ptr [ %51, %for.inc41.i.for.body.i_crit_edge ], [ %44, %if.end.i.for.body.i_crit_edge ]
  %lists.058.i = phi ptr [ %incdec.ptr.i, %for.inc41.i.for.body.i_crit_edge ], [ @all_lists, %if.end.i.for.body.i_crit_edge ]
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %45, align 4
  %tobool26.not.i = icmp eq ptr %47, null
  %add.ptr.i = getelementptr i8, ptr %47, i32 -104
  %tobool29.not5559.i = icmp eq ptr %add.ptr.i, null
  %tobool29.not55.i = or i1 %tobool26.not.i, %tobool29.not5559.i
  br i1 %tobool29.not55.i, label %for.body.i.for.inc41.i_crit_edge, label %for.body.i.for.body30.i_crit_edge

for.body.i.for.body30.i_crit_edge:                ; preds = %for.body.i
  br label %for.body30.i

for.body.i.for.inc41.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc41.i

for.body30.i:                                     ; preds = %for.body30.i.for.body30.i_crit_edge, %for.body.i.for.body30.i_crit_edge
  %root.056.i = phi ptr [ %add.ptr37.i, %for.body30.i.for.body30.i_crit_edge ], [ %add.ptr.i, %for.body.i.for.body30.i_crit_edge ]
  tail call fastcc void @clk_core_evict_parent_cache_subtree(ptr noundef nonnull %root.056.i, ptr noundef %42) #21
  %child_node.i = getelementptr inbounds %struct.clk_core, ptr %root.056.i, i32 0, i32 27
  %48 = ptrtoint ptr %child_node.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %child_node.i, align 4
  %tobool33.not.i = icmp eq ptr %49, null
  %add.ptr37.i = getelementptr i8, ptr %49, i32 -104
  %tobool29.not60.i = icmp eq ptr %add.ptr37.i, null
  %tobool29.not.i = or i1 %tobool33.not.i, %tobool29.not60.i
  br i1 %tobool29.not.i, label %for.body30.i.for.inc41.i_crit_edge, label %for.body30.i.for.body30.i_crit_edge

for.body30.i.for.body30.i_crit_edge:              ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body30.i

for.body30.i.for.inc41.i_crit_edge:               ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc41.i

for.inc41.i:                                      ; preds = %for.body30.i.for.inc41.i_crit_edge, %for.body.i.for.inc41.i_crit_edge
  %incdec.ptr.i = getelementptr ptr, ptr %lists.058.i, i32 1
  %50 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool24.not.i = icmp eq ptr %51, null
  br i1 %tobool24.not.i, label %for.inc41.i.clk_core_evict_parent_cache.exit_crit_edge, label %for.inc41.i.for.body.i_crit_edge

for.inc41.i.for.body.i_crit_edge:                 ; preds = %for.inc41.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc41.i.clk_core_evict_parent_cache.exit_crit_edge: ; preds = %for.inc41.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_evict_parent_cache.exit

clk_core_evict_parent_cache.exit:                 ; preds = %for.inc41.i.clk_core_evict_parent_cache.exit_crit_edge, %if.end.i.clk_core_evict_parent_cache.exit_crit_edge
  %52 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %clk, align 4
  %child_node85 = getelementptr inbounds %struct.clk_core, ptr %53, i32 0, i32 27
  %pprev.i.i = getelementptr inbounds %struct.clk_core, ptr %53, i32 0, i32 27, i32 1
  %54 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %pprev.i.i, align 4
  %tobool.not.i.not.i = icmp eq ptr %55, null
  br i1 %tobool.not.i.not.i, label %clk_core_evict_parent_cache.exit.hlist_del_init.exit_crit_edge, label %if.then.i143

clk_core_evict_parent_cache.exit.hlist_del_init.exit_crit_edge: ; preds = %clk_core_evict_parent_cache.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_del_init.exit

if.then.i143:                                     ; preds = %clk_core_evict_parent_cache.exit
  %56 = ptrtoint ptr %child_node85 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %child_node85, align 4
  %58 = ptrtoint ptr %55 to i32
  call void @__asan_store4_noabort(i32 %58)
  store volatile ptr %57, ptr %55, align 4
  %tobool.not.i3.i = icmp eq ptr %57, null
  br i1 %tobool.not.i3.i, label %if.then.i143.__hlist_del.exit.i_crit_edge, label %do.body13.i.i

if.then.i143.__hlist_del.exit.i_crit_edge:        ; preds = %if.then.i143
  call void @__sanitizer_cov_trace_pc() #23
  br label %__hlist_del.exit.i

do.body13.i.i:                                    ; preds = %if.then.i143
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %57, i32 0, i32 1
  %59 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %55, ptr %pprev14.i.i, align 4
  br label %__hlist_del.exit.i

__hlist_del.exit.i:                               ; preds = %do.body13.i.i, %if.then.i143.__hlist_del.exit.i_crit_edge
  %60 = ptrtoint ptr %child_node85 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr null, ptr %child_node85, align 4
  %61 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr null, ptr %pprev.i.i, align 4
  br label %hlist_del_init.exit

hlist_del_init.exit:                              ; preds = %__hlist_del.exit.i, %clk_core_evict_parent_cache.exit.hlist_del_init.exit_crit_edge
  %62 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %clk, align 4
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %63, i32 0, i32 19
  %64 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool87.not = icmp eq i32 %65, 0
  br i1 %tobool87.not, label %hlist_del_init.exit.if.end96_crit_edge, label %do.end91

hlist_del_init.exit.if.end96_crit_edge:           ; preds = %hlist_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end96

do.end91:                                         ; preds = %hlist_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  %66 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %63, align 4
  %call95 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.6, ptr noundef nonnull @.str.4, ptr noundef %67) #26
  br label %if.end96

if.end96:                                         ; preds = %do.end91, %hlist_del_init.exit.if.end96_crit_edge
  %68 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %clk, align 4
  %protect_count = getelementptr inbounds %struct.clk_core, ptr %69, i32 0, i32 20
  %70 = ptrtoint ptr %protect_count to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %protect_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool98.not = icmp eq i32 %71, 0
  br i1 %tobool98.not, label %if.end96.if.end107_crit_edge, label %do.end102

if.end96.if.end107_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end107

do.end102:                                        ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #23
  %72 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %69, align 4
  %call106 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.4, ptr noundef %73) #26
  br label %if.end107

if.end107:                                        ; preds = %do.end102, %if.end96.if.end107_crit_edge
  %74 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %clk, align 4
  %ref = getelementptr inbounds %struct.clk_core, ptr %75, i32 0, i32 32
  tail call fastcc void @kref_put(ptr noundef %ref)
  %con_id.i = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 3
  %76 = ptrtoint ptr %con_id.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %con_id.i, align 4
  tail call void @kfree_const(ptr noundef %77) #21
  tail call void @kfree(ptr noundef nonnull %clk) #21
  br label %unlock

unlock:                                           ; preds = %if.end107, %do.end44
  %78 = load ptr, ptr @prepare_owner, align 4
  %79 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i145 = and i32 %79, -16384
  %80 = inttoptr i32 %and.i.i145 to ptr
  %task.i146 = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 2
  %81 = ptrtoint ptr %task.i146 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %task.i146, align 8
  %cmp.not.i147 = icmp eq ptr %78, %82
  br i1 %cmp.not.i147, label %unlock.if.end27.i152_crit_edge, label %land.rhs.i149

unlock.if.end27.i152_crit_edge:                   ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i152

land.rhs.i149:                                    ; preds = %unlock
  %.b98.i148 = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i148, label %land.rhs.i149.if.end27.i152_crit_edge, label %if.then.i150, !prof !753

land.rhs.i149.if.end27.i152_crit_edge:            ; preds = %land.rhs.i149
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i152

if.then.i150:                                     ; preds = %land.rhs.i149
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i152

if.end27.i152:                                    ; preds = %if.then.i150, %land.rhs.i149.if.end27.i152_crit_edge, %unlock.if.end27.i152_crit_edge
  %83 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %cmp36.i151 = icmp eq i32 %83, 0
  br i1 %cmp36.i151, label %land.rhs43.i154, label %if.end27.i152.if.end81.i158_crit_edge

if.end27.i152.if.end81.i158_crit_edge:            ; preds = %if.end27.i152
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i158

land.rhs43.i154:                                  ; preds = %if.end27.i152
  %.b9697.i153 = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i153, label %land.rhs43.i154.if.end81.i158_crit_edge, label %if.then54.i155, !prof !753

land.rhs43.i154.if.end81.i158_crit_edge:          ; preds = %land.rhs43.i154
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i158

if.then54.i155:                                   ; preds = %land.rhs43.i154
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i158

if.end81.i158:                                    ; preds = %if.then54.i155, %land.rhs43.i154.if.end81.i158_crit_edge, %if.end27.i152.if.end81.i158_crit_edge
  %84 = load i32, ptr @prepare_refcnt, align 4
  %dec.i156 = add i32 %84, -1
  store i32 %dec.i156, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i156)
  %tobool89.not.i157 = icmp eq i32 %dec.i156, 0
  br i1 %tobool89.not.i157, label %if.end91.i159, label %if.end81.i158.cleanup_crit_edge

if.end81.i158.cleanup_crit_edge:                  ; preds = %if.end81.i158
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i159:                                    ; preds = %if.end81.i158
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i159, %if.end81.i158.cleanup_crit_edge, %if.then, %land.rhs.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_enable_lock() unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !771
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %do.end11, label %do.end11.thread

do.end11:                                         ; preds = %entry
  tail call void @trace_hardirqs_off() #21
  %call14 = tail call i32 @_raw_spin_trylock(ptr noundef nonnull @enable_lock) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then25, label %do.end11.if.end68_crit_edge

do.end11.if.end68_crit_edge:                      ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end68

do.end11.thread:                                  ; preds = %entry
  %call14192 = tail call i32 @_raw_spin_trylock(ptr noundef nonnull @enable_lock) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14192)
  %tobool15.not193 = icmp eq i32 %call14192, 0
  br i1 %tobool15.not193, label %do.end11.thread.do.body27_crit_edge, label %do.end11.thread.if.end68_crit_edge

do.end11.thread.if.end68_crit_edge:               ; preds = %do.end11.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end68

do.end11.thread.do.body27_crit_edge:              ; preds = %do.end11.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body27

if.then25:                                        ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body27

do.body27:                                        ; preds = %if.then25, %do.end11.thread.do.body27_crit_edge
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !772
  %and.i.i = and i32 %1, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool35.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool35.not, label %if.then39, label %do.body27.do.end42_crit_edge, !prof !754

do.body27.do.end42_crit_edge:                     ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end42

if.then39:                                        ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end42

do.end42:                                         ; preds = %if.then39, %do.body27.do.end42_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #21, !srcloc !773
  %2 = load ptr, ptr @enable_owner, align 4
  %3 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i190 = and i32 %3, -16384
  %4 = inttoptr i32 %and.i190 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %cmp51 = icmp eq ptr %2, %6
  br i1 %cmp51, label %if.then53, label %do.body56

if.then53:                                        ; preds = %do.end42
  call void @__sanitizer_cov_trace_pc() #23
  %7 = load i32, ptr @enable_refcnt, align 4
  %inc = add i32 %7, 1
  br label %cleanup

do.body56:                                        ; preds = %do.end42
  call void @__sanitizer_cov_trace_pc() #23
  %call63 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @enable_lock) #21
  br label %if.end68

if.end68:                                         ; preds = %do.body56, %do.end11.thread.if.end68_crit_edge, %do.end11.if.end68_crit_edge
  %flags.0 = phi i32 [ %call63, %do.body56 ], [ %0, %do.end11.if.end68_crit_edge ], [ %0, %do.end11.thread.if.end68_crit_edge ]
  %8 = load ptr, ptr @enable_owner, align 4
  %cmp69.not = icmp eq ptr %8, null
  br i1 %cmp69.not, label %if.end68.if.end112_crit_edge, label %land.rhs

if.end68.if.end112_crit_edge:                     ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end112

land.rhs:                                         ; preds = %if.end68
  %.b188 = load i1, ptr @clk_enable_lock.__already_done, align 1
  br i1 %.b188, label %land.rhs.if.end112_crit_edge, label %if.then86, !prof !753

land.rhs.if.end112_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end112

if.then86:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_lock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 180, i32 noundef 9, ptr noundef null) #21
  br label %if.end112

if.end112:                                        ; preds = %if.then86, %land.rhs.if.end112_crit_edge, %if.end68.if.end112_crit_edge
  %9 = load i32, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp121.not = icmp eq i32 %9, 0
  br i1 %cmp121.not, label %if.end112.if.end168_crit_edge, label %land.rhs130

if.end112.if.end168_crit_edge:                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end168

land.rhs130:                                      ; preds = %if.end112
  %.b186187 = load i1, ptr @clk_enable_lock.__already_done.155, align 1
  br i1 %.b186187, label %land.rhs130.if.end168_crit_edge, label %if.then141, !prof !753

land.rhs130.if.end168_crit_edge:                  ; preds = %land.rhs130
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end168

if.then141:                                       ; preds = %land.rhs130
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_lock.__already_done.155, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 181, i32 noundef 9, ptr noundef null) #21
  br label %if.end168

if.end168:                                        ; preds = %if.then141, %land.rhs130.if.end168_crit_edge, %if.end112.if.end168_crit_edge
  %10 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i191 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i191 to ptr
  %task177 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task177 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task177, align 8
  store ptr %13, ptr @enable_owner, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end168, %if.then53
  %storemerge = phi i32 [ 1, %if.end168 ], [ %inc, %if.then53 ]
  %retval.0 = phi i32 [ %flags.0, %if.end168 ], [ %0, %if.then53 ]
  store i32 %storemerge, ptr @enable_refcnt, align 4
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @kref_put(ptr noundef %kref) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %kref, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !774
  tail call void @llvm.prefetch.p0(ptr %kref, i32 1, i32 3, i32 1) #21
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %kref, ptr %kref, i32 1, ptr elementtype(i32) %kref) #21, !srcloc !775
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.return_crit_edge, label %if.then10.i.i.i, !prof !753

if.end5.i.i.i.return_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @refcount_warn_saturate(ptr noundef %kref, i32 noundef 3) #21
  br label %return

if.then:                                          ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !776
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %if.then.if.end.i_crit_edge, label %land.rhs.i

if.then.if.end.i_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.then
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4039, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.then.if.end.i_crit_edge
  %num_parents.i.i = getelementptr i8, ptr %kref, i32 -100
  %2 = ptrtoint ptr %num_parents.i.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %num_parents.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i.i, label %if.end.i.__clk_release.exit_crit_edge, label %while.body.lr.ph.i.i

if.end.i.__clk_release.exit_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_release.exit

while.body.lr.ph.i.i:                             ; preds = %if.end.i
  %conv.i.i = zext i8 %3 to i32
  %parents.i.i = getelementptr i8, ptr %kref, i32 -104
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %while.body.lr.ph.i.i
  %dec14.in.i.i = phi i32 [ %conv.i.i, %while.body.lr.ph.i.i ], [ %dec14.i.i, %while.body.i.i.while.body.i.i_crit_edge ]
  %dec14.i.i = add nsw i32 %dec14.in.i.i, -1
  %4 = ptrtoint ptr %parents.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parents.i.i, align 4
  %name.i.i = getelementptr %struct.clk_parent_map, ptr %5, i32 %dec14.i.i, i32 3
  %6 = ptrtoint ptr %name.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %name.i.i, align 4
  tail call void @kfree_const(ptr noundef %7) #21
  %8 = ptrtoint ptr %parents.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parents.i.i, align 4
  %fw_name.i.i = getelementptr %struct.clk_parent_map, ptr %9, i32 %dec14.i.i, i32 2
  %10 = ptrtoint ptr %fw_name.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %fw_name.i.i, align 4
  tail call void @kfree_const(ptr noundef %11) #21
  %cmp.i.i = icmp ugt i32 %dec14.in.i.i, 1
  br i1 %cmp.i.i, label %while.body.i.i.while.body.i.i_crit_edge, label %while.end.i.i

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i.i

while.end.i.i:                                    ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %parents.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %parents.i.i, align 4
  tail call void @kfree(ptr noundef %13) #21
  br label %__clk_release.exit

__clk_release.exit:                               ; preds = %while.end.i.i, %if.end.i.__clk_release.exit_crit_edge
  %add.ptr.i = getelementptr i8, ptr %kref, i32 -132
  %14 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %add.ptr.i, align 4
  tail call void @kfree_const(ptr noundef %15) #21
  tail call void @kfree(ptr noundef %add.ptr.i) #21
  br label %return

return:                                           ; preds = %__clk_release.exit, %if.then10.i.i.i, %if.end5.i.i.i.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clk_hw_unregister(ptr nocapture noundef readonly %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %clk = getelementptr inbounds %struct.clk_hw, ptr %hw, i32 0, i32 1
  %0 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clk, align 4
  tail call void @clk_unregister(ptr noundef %1)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @devm_clk_register(ptr noundef %dev, ptr noundef %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_clk_unregister_cb, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.11) #21
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool.not.i.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i.i, label %if.end.clk_register.exit_crit_edge, label %dev_of_node.exit.i.i

if.end.clk_register.exit_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_register.exit

dev_of_node.exit.i.i:                             ; preds = %if.end
  %of_node.i.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %1, null
  br i1 %tobool1.not.i.i, label %if.then2.i.i, label %dev_of_node.exit.i.i.clk_register.exit_crit_edge

dev_of_node.exit.i.i.clk_register.exit_crit_edge: ; preds = %dev_of_node.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_register.exit

if.then2.i.i:                                     ; preds = %dev_of_node.exit.i.i
  %parent.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i8.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i8.i.i, label %if.then2.i.i.clk_register.exit_crit_edge, label %if.end.i10.i.i

if.then2.i.i.clk_register.exit_crit_edge:         ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_register.exit

if.end.i10.i.i:                                   ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %of_node.i9.i.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 27
  %4 = ptrtoint ptr %of_node.i9.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of_node.i9.i.i, align 8
  br label %clk_register.exit

clk_register.exit:                                ; preds = %if.end.i10.i.i, %if.then2.i.i.clk_register.exit_crit_edge, %dev_of_node.exit.i.i.clk_register.exit_crit_edge, %if.end.clk_register.exit_crit_edge
  %retval.0.i.i = phi ptr [ null, %if.end.clk_register.exit_crit_edge ], [ %1, %dev_of_node.exit.i.i.clk_register.exit_crit_edge ], [ %5, %if.end.i10.i.i ], [ null, %if.then2.i.i.clk_register.exit_crit_edge ]
  %call1.i = tail call fastcc ptr @__clk_register(ptr noundef %dev, ptr noundef %retval.0.i.i, ptr noundef %hw) #21
  %cmp.i = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.else, label %if.then4

if.then4:                                         ; preds = %clk_register.exit
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call1.i, ptr %call, align 4
  tail call void @devres_add(ptr noundef %dev, ptr noundef nonnull %call) #21
  br label %cleanup

if.else:                                          ; preds = %clk_register.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @devres_free(ptr noundef nonnull %call) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call1.i, %if.else ], [ %call1.i, %if.then4 ], [ inttoptr (i32 -12 to ptr), %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @__devres_alloc_node(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_clk_unregister_cb(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %res) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  tail call void @clk_unregister(ptr noundef %1)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @devres_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @devres_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @devm_clk_hw_register(ptr noundef %dev, ptr noundef %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_clk_hw_unregister_cb, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.12) #21
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool.not.i.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i.i, label %if.end.clk_hw_register.exit_crit_edge, label %dev_of_node.exit.i.i

if.end.clk_hw_register.exit_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_hw_register.exit

dev_of_node.exit.i.i:                             ; preds = %if.end
  %of_node.i.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %1, null
  br i1 %tobool1.not.i.i, label %if.then2.i.i, label %dev_of_node.exit.i.i.clk_hw_register.exit_crit_edge

dev_of_node.exit.i.i.clk_hw_register.exit_crit_edge: ; preds = %dev_of_node.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_hw_register.exit

if.then2.i.i:                                     ; preds = %dev_of_node.exit.i.i
  %parent.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i8.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i8.i.i, label %if.then2.i.i.clk_hw_register.exit_crit_edge, label %if.end.i10.i.i

if.then2.i.i.clk_hw_register.exit_crit_edge:      ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_hw_register.exit

if.end.i10.i.i:                                   ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %of_node.i9.i.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 27
  %4 = ptrtoint ptr %of_node.i9.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of_node.i9.i.i, align 8
  br label %clk_hw_register.exit

clk_hw_register.exit:                             ; preds = %if.end.i10.i.i, %if.then2.i.i.clk_hw_register.exit_crit_edge, %dev_of_node.exit.i.i.clk_hw_register.exit_crit_edge, %if.end.clk_hw_register.exit_crit_edge
  %retval.0.i.i = phi ptr [ null, %if.end.clk_hw_register.exit_crit_edge ], [ %1, %dev_of_node.exit.i.i.clk_hw_register.exit_crit_edge ], [ %5, %if.end.i10.i.i ], [ null, %if.then2.i.i.clk_hw_register.exit_crit_edge ]
  %call1.i = tail call fastcc ptr @__clk_register(ptr noundef %dev, ptr noundef %retval.0.i.i, ptr noundef %hw) #21
  %cmp.i.i.i.not = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %clk_hw_register.exit
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %hw, ptr %call, align 4
  tail call void @devres_add(ptr noundef %dev, ptr noundef nonnull %call) #21
  br label %cleanup

if.else:                                          ; preds = %clk_hw_register.exit
  call void @__sanitizer_cov_trace_pc() #23
  %7 = ptrtoint ptr %call1.i to i32
  tail call void @devres_free(ptr noundef nonnull %call) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ %7, %if.else ], [ 0, %if.then3 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_clk_hw_unregister_cb(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %res) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  %clk.i = getelementptr inbounds %struct.clk_hw, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %clk.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %clk.i, align 4
  tail call void @clk_unregister(ptr noundef %3) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @devm_clk_unregister(ptr noundef %dev, ptr noundef %clk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @devres_release(ptr noundef %dev, ptr noundef nonnull @devm_clk_unregister_cb, ptr noundef nonnull @devm_clk_match, ptr noundef %clk) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !753

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4280, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devres_release(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @devm_clk_match(ptr nocapture noundef readnone %dev, ptr noundef readnone %res, ptr noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %res, null
  br i1 %tobool.not, label %do.end, label %if.end23, !prof !754

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4255, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end23:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %cmp = icmp eq ptr %res, %data
  %conv = zext i1 %cmp to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ %conv, %if.end23 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @devm_clk_hw_unregister(ptr noundef %dev, ptr noundef %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @devres_release(ptr noundef %dev, ptr noundef nonnull @devm_clk_hw_unregister_cb, ptr noundef nonnull @devm_clk_hw_match, ptr noundef %hw) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !753

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4296, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @devm_clk_hw_match(ptr nocapture noundef readnone %dev, ptr noundef readnone %res, ptr noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %res, null
  br i1 %tobool.not, label %do.end, label %if.end23, !prof !754

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4264, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end23:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %cmp = icmp eq ptr %res, %data
  %conv = zext i1 %cmp to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ %conv, %if.end23 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @devm_clk_hw_get_clk(ptr noundef %dev, ptr noundef %hw, ptr noundef %con_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %dev1 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  %cmp.not = icmp eq ptr %3, %dev
  br i1 %cmp.not, label %entry.if.end28_crit_edge, label %land.rhs

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

land.rhs:                                         ; preds = %entry
  %.b54 = load i1, ptr @devm_clk_hw_get_clk.__already_done, align 1
  br i1 %.b54, label %land.rhs.if.end28_crit_edge, label %if.then, !prof !753

land.rhs.if.end28_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @devm_clk_hw_get_clk.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4325, i32 noundef 9, ptr noundef null) #21
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs.if.end28_crit_edge, %entry.if.end28_crit_edge
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_clk_release, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.13) #21
  %tobool36.not = icmp eq ptr %call, null
  br i1 %tobool36.not, label %if.end28.cleanup_crit_edge, label %if.end39

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end39:                                         ; preds = %if.end28
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 4
  %dev1.i = getelementptr inbounds %struct.clk_core, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %dev1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev1.i, align 4
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.end39.clk_hw_get_clk.exit_crit_edge

if.end39.clk_hw_get_clk.exit_crit_edge:           ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_hw_get_clk.exit

if.end.i.i:                                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %7, align 4
  br label %clk_hw_get_clk.exit

clk_hw_get_clk.exit:                              ; preds = %if.end.i.i, %if.end39.clk_hw_get_clk.exit_crit_edge
  %retval.0.i.i = phi ptr [ %11, %if.end.i.i ], [ %9, %if.end39.clk_hw_get_clk.exit_crit_edge ]
  %call2.i = tail call ptr @clk_hw_create_clk(ptr noundef %7, ptr noundef %hw, ptr noundef %retval.0.i.i, ptr noundef %con_id) #21
  %cmp.i = icmp ugt ptr %call2.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.else, label %if.then42

if.then42:                                        ; preds = %clk_hw_get_clk.exit
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call2.i, ptr %call, align 4
  tail call void @devres_add(ptr noundef %dev, ptr noundef nonnull %call) #21
  br label %cleanup

if.else:                                          ; preds = %clk_hw_get_clk.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @devres_free(ptr noundef nonnull %call) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then42, %if.end28.cleanup_crit_edge
  %retval.0 = phi ptr [ %call2.i, %if.else ], [ %call2.i, %if.then42 ], [ inttoptr (i32 -12 to ptr), %if.end28.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_clk_release(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %res) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  tail call void @clk_put(ptr noundef %1) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__clk_put(ptr noundef %clk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %cmp.i = icmp ugt ptr %clk, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %land.rhs, label %if.end38

land.rhs:                                         ; preds = %lor.lhs.false
  %.b111 = load i1, ptr @__clk_put.__already_done, align 1
  br i1 %.b111, label %land.rhs.cleanup_crit_edge, label %if.then, !prof !753

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @__clk_put.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4351, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end38:                                         ; preds = %lor.lhs.false
  tail call fastcc void @clk_prepare_lock()
  %exclusive_count = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 6
  %0 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %exclusive_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool40.not = icmp eq i32 %1, 0
  br i1 %tobool40.not, label %if.end38.if.end76_crit_edge, label %do.end56, !prof !753

if.end38.if.end76_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end76

do.end56:                                         ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4361, i32 noundef 9, ptr noundef null) #21
  %2 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %exclusive_count, align 4
  %4 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %clk, align 4
  %protect_count = getelementptr inbounds %struct.clk_core, ptr %5, i32 0, i32 20
  %6 = ptrtoint ptr %protect_count to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %protect_count, align 4
  %sub.neg = sub i32 1, %3
  %sub73 = add i32 %sub.neg, %7
  store i32 %sub73, ptr %protect_count, align 4
  %8 = load ptr, ptr %clk, align 4
  tail call fastcc void @clk_core_rate_unprotect(ptr noundef %8)
  %9 = ptrtoint ptr %exclusive_count to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %exclusive_count, align 4
  br label %if.end76

if.end76:                                         ; preds = %do.end56, %if.end38.if.end76_crit_edge
  %clks_node = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 7
  %10 = ptrtoint ptr %clks_node to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %clks_node, align 4
  %pprev2.i.i = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 7, i32 1
  %12 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pprev2.i.i, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %11, ptr %13, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %if.end76.hlist_del.exit_crit_edge, label %do.body13.i.i

if.end76.hlist_del.exit_crit_edge:                ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_del.exit

do.body13.i.i:                                    ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %11, i32 0, i32 1
  %15 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %pprev14.i.i, align 4
  br label %hlist_del.exit

hlist_del.exit:                                   ; preds = %do.body13.i.i, %if.end76.hlist_del.exit_crit_edge
  %16 = ptrtoint ptr %clks_node to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 256 to ptr), ptr %clks_node, align 4
  %17 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  %min_rate = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 4
  %18 = ptrtoint ptr %min_rate to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %min_rate, align 4
  %20 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %clk, align 4
  %req_rate = getelementptr inbounds %struct.clk_core, ptr %21, i32 0, i32 11
  %22 = ptrtoint ptr %req_rate to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %req_rate, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %23)
  %cmp = icmp ugt i32 %19, %23
  br i1 %cmp, label %hlist_del.exit.if.then82_crit_edge, label %lor.lhs.false78

hlist_del.exit.if.then82_crit_edge:               ; preds = %hlist_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then82

lor.lhs.false78:                                  ; preds = %hlist_del.exit
  %max_rate = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 5
  %24 = ptrtoint ptr %max_rate to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %max_rate, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %25, i32 %23)
  %cmp81 = icmp ult i32 %25, %23
  br i1 %cmp81, label %lor.lhs.false78.if.then82_crit_edge, label %lor.lhs.false78.if.end87_crit_edge

lor.lhs.false78.if.end87_crit_edge:               ; preds = %lor.lhs.false78
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end87

lor.lhs.false78.if.then82_crit_edge:              ; preds = %lor.lhs.false78
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then82

if.then82:                                        ; preds = %lor.lhs.false78.if.then82_crit_edge, %hlist_del.exit.if.then82_crit_edge
  %call86 = tail call fastcc i32 @clk_core_set_rate_nolock(ptr noundef %21, i32 noundef %23)
  br label %if.end87

if.end87:                                         ; preds = %if.then82, %lor.lhs.false78.if.end87_crit_edge
  %26 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %clk, align 4
  %owner89 = getelementptr inbounds %struct.clk_core, ptr %27, i32 0, i32 3
  %28 = ptrtoint ptr %owner89 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %owner89, align 4
  %ref = getelementptr inbounds %struct.clk_core, ptr %27, i32 0, i32 32
  tail call fastcc void @kref_put(ptr noundef %ref)
  %30 = load ptr, ptr @prepare_owner, align 4
  %31 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %30, %34
  br i1 %cmp.not.i, label %if.end87.if.end27.i_crit_edge, label %land.rhs.i

if.end87.if.end27.i_crit_edge:                    ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %if.end87
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %if.end87.if.end27.i_crit_edge
  %35 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp36.i = icmp eq i32 %35, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %36 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %36, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  tail call void @module_put(ptr noundef %29) #21
  %con_id.i = getelementptr inbounds %struct.clk, ptr %clk, i32 0, i32 3
  %37 = ptrtoint ptr %con_id.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %con_id.i, align 4
  tail call void @kfree_const(ptr noundef %38) #21
  tail call void @kfree(ptr noundef nonnull %clk) #21
  br label %cleanup

cleanup:                                          ; preds = %clk_prepare_unlock.exit, %if.then, %land.rhs.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_notifier_register(ptr noundef %clk, ptr noundef %nb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  %tobool1.not = icmp eq ptr %nb, null
  %or.cond = or i1 %tobool.not, %tobool1.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end
  %.pn.in = phi ptr [ @clk_notifier_list, %if.end ], [ %.pn, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, @clk_notifier_list
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %cn.0 = getelementptr i8, ptr %.pn, i32 -924
  %1 = ptrtoint ptr %cn.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %cn.0, align 4
  %cmp3 = icmp eq ptr %2, %clk
  br i1 %cmp3, label %found.loopexit, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3520, i32 noundef 932) #28
  %tobool10.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool10.not, label %for.end.out_crit_edge, label %if.end12

for.end.out_crit_edge:                            ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

if.end12:                                         ; preds = %for.end
  %4 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %clk, ptr %call7.i.i, align 8
  %notifier_head = getelementptr inbounds %struct.clk_notifier, ptr %call7.i.i, i32 0, i32 1
  tail call void @srcu_init_notifier_head(ptr noundef %notifier_head) #21
  %node14 = getelementptr inbounds %struct.clk_notifier, ptr %call7.i.i, i32 0, i32 2
  %5 = load ptr, ptr @clk_notifier_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %node14, ptr noundef nonnull @clk_notifier_list, ptr noundef %5) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end12.found_crit_edge

if.end12.found_crit_edge:                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  br label %found

if.end.i.i:                                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %node14, ptr %prev1.i.i, align 4
  %7 = ptrtoint ptr %node14 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %5, ptr %node14, align 4
  %prev3.i.i = getelementptr inbounds %struct.clk_notifier, ptr %call7.i.i, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @clk_notifier_list, ptr %prev3.i.i, align 8
  store volatile ptr %node14, ptr @clk_notifier_list, align 4
  br label %found

found.loopexit:                                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %cn.0.le = getelementptr i8, ptr %.pn, i32 -924
  br label %found

found:                                            ; preds = %found.loopexit, %if.end.i.i, %if.end12.found_crit_edge
  %cn.1 = phi ptr [ %call7.i.i, %if.end12.found_crit_edge ], [ %call7.i.i, %if.end.i.i ], [ %cn.0.le, %found.loopexit ]
  %notifier_head15 = getelementptr inbounds %struct.clk_notifier, ptr %cn.1, i32 0, i32 1
  %call16 = tail call i32 @srcu_notifier_chain_register(ptr noundef %notifier_head15, ptr noundef nonnull %nb) #21
  %9 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %clk, align 4
  %notifier_count = getelementptr inbounds %struct.clk_core, ptr %10, i32 0, i32 29
  %11 = ptrtoint ptr %notifier_count to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %notifier_count, align 4
  %inc = add i32 %12, 1
  store i32 %inc, ptr %notifier_count, align 4
  br label %out

out:                                              ; preds = %found, %for.end.out_crit_edge
  %ret.0 = phi i32 [ %call16, %found ], [ -12, %for.end.out_crit_edge ]
  %13 = load ptr, ptr @prepare_owner, align 4
  %14 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %13, %17
  br i1 %cmp.not.i, label %out.if.end27.i_crit_edge, label %land.rhs.i

out.if.end27.i_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %out
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %out.if.end27.i_crit_edge
  %18 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp36.i = icmp eq i32 %18, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %19 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %19, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ %ret.0, %if.end81.i.cleanup_crit_edge ], [ %ret.0, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @srcu_init_notifier_head(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @srcu_notifier_chain_register(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clk_notifier_unregister(ptr noundef readonly %clk, ptr noundef %nb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %clk, null
  %tobool1.not = icmp eq ptr %nb, null
  %or.cond = or i1 %tobool.not, %tobool1.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @clk_prepare_lock()
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end
  %.pn.in = phi ptr [ @clk_notifier_list, %if.end ], [ %.pn, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, @clk_notifier_list
  br i1 %cmp.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.cond
  %cn.0 = getelementptr i8, ptr %.pn, i32 -924
  %1 = ptrtoint ptr %cn.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %cn.0, align 4
  %cmp3 = icmp eq ptr %2, %clk
  br i1 %cmp3, label %if.then4, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

if.then4:                                         ; preds = %for.body
  %cn.0.le = getelementptr i8, ptr %.pn, i32 -924
  %notifier_head = getelementptr i8, ptr %.pn, i32 -920
  %call = tail call i32 @srcu_notifier_chain_unregister(ptr noundef %notifier_head, ptr noundef nonnull %nb) #21
  %3 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %clk, align 4
  %notifier_count = getelementptr inbounds %struct.clk_core, ptr %4, i32 0, i32 29
  %5 = ptrtoint ptr %notifier_count to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %notifier_count, align 4
  %dec = add i32 %6, -1
  store i32 %dec, ptr %notifier_count, align 4
  %head = getelementptr i8, ptr %.pn, i32 -4
  %7 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %head, align 4
  %tobool6.not = icmp eq ptr %8, null
  br i1 %tobool6.not, label %if.then7, label %if.then4.for.end_crit_edge

if.then4.for.end_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

if.then7:                                         ; preds = %if.then4
  %srcu = getelementptr i8, ptr %.pn, i32 -828
  tail call void @cleanup_srcu_struct(ptr noundef %srcu) #21
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.then7.list_del.exit_crit_edge

if.then7.list_del.exit_crit_edge:                 ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i, align 4
  %11 = ptrtoint ptr %.pn to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %.pn, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then7.list_del.exit_crit_edge
  %15 = ptrtoint ptr %.pn to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef %cn.0.le) #21
  br label %for.end

for.end:                                          ; preds = %list_del.exit, %if.then4.for.end_crit_edge, %for.cond.for.end_crit_edge
  %ret.0 = phi i32 [ %call, %if.then4.for.end_crit_edge ], [ %call, %list_del.exit ], [ -2, %for.cond.for.end_crit_edge ]
  %17 = load ptr, ptr @prepare_owner, align 4
  %18 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %17, %21
  br i1 %cmp.not.i, label %for.end.if.end27.i_crit_edge, label %land.rhs.i

for.end.if.end27.i_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %for.end
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %for.end.if.end27.i_crit_edge
  %22 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp36.i = icmp eq i32 %22, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %23 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %23, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.cleanup_crit_edge

if.end81.i.cleanup_crit_edge:                     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end91.i, %if.end81.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ %ret.0, %if.end81.i.cleanup_crit_edge ], [ %ret.0, %if.end91.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @srcu_notifier_chain_unregister(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cleanup_srcu_struct(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @devm_clk_notifier_register(ptr nocapture readnone %dev, ptr noundef %clk, ptr noundef %nb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_clk_notifier_release, i32 noundef 8, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.14) #21
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @clk_notifier_register(ptr noundef %clk, ptr noundef %nb)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %clk, ptr %call, align 4
  %nb5 = getelementptr inbounds %struct.clk_notifier_devres, ptr %call, i32 0, i32 1
  %1 = ptrtoint ptr %nb5 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %nb, ptr %nb5, align 4
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @devres_free(ptr noundef nonnull %call) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ %call1, %if.else ], [ 0, %if.then3 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_clk_notifier_release(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %res) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  %nb = getelementptr inbounds %struct.clk_notifier_devres, ptr %res, i32 0, i32 1
  %2 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nb, align 4
  %call = tail call i32 @clk_notifier_unregister(ptr noundef %1, ptr noundef %3)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @of_clk_src_simple_get(ptr nocapture readnone %clkspec, ptr noundef readnone returned %data) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret ptr %data
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @of_clk_hw_simple_get(ptr nocapture readnone %clkspec, ptr noundef readnone returned %data) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret ptr %data
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @of_clk_src_onecell_get(ptr nocapture noundef readonly %clkspec, ptr nocapture noundef readonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %args = getelementptr inbounds %struct.of_phandle_args, ptr %clkspec, i32 0, i32 2
  %0 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %args, align 4
  %clk_num = getelementptr inbounds %struct.clk_onecell_data, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %clk_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %clk_num, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp.not = icmp ult i32 %1, %3
  br i1 %cmp.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef nonnull @.str.16, i32 noundef %1) #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data, align 4
  %arrayidx2 = getelementptr ptr, ptr %5, i32 %1
  %6 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx2, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.end
  %retval.0 = phi ptr [ inttoptr (i32 -22 to ptr), %do.end ], [ %7, %if.end ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @of_clk_hw_onecell_get(ptr nocapture noundef readonly %clkspec, ptr nocapture noundef readonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %args = getelementptr inbounds %struct.of_phandle_args, ptr %clkspec, i32 0, i32 2
  %0 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %args, align 4
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp.not = icmp ult i32 %1, %3
  br i1 %cmp.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18, i32 noundef %1) #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx2 = getelementptr %struct.clk_hw_onecell_data, ptr %data, i32 0, i32 1, i32 %1
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx2, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.end
  %retval.0 = phi ptr [ inttoptr (i32 -22 to ptr), %do.end ], [ %5, %if.end ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @of_clk_add_provider(ptr noundef %np, ptr noundef %clk_src_get, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %np, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 24) #28
  %tobool1.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %call4 = tail call ptr @of_node_get(ptr noundef nonnull %np) #21
  %node = getelementptr inbounds %struct.of_clk_provider, ptr %call7.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call4, ptr %node, align 8
  %data5 = getelementptr inbounds %struct.of_clk_provider, ptr %call7.i.i, i32 0, i32 4
  %2 = ptrtoint ptr %data5 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %data, ptr %data5, align 4
  %get = getelementptr inbounds %struct.of_clk_provider, ptr %call7.i.i, i32 0, i32 2
  %3 = ptrtoint ptr %get to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %clk_src_get, ptr %get, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @of_clk_mutex, i32 noundef 0) #21
  %4 = load ptr, ptr @of_clk_providers, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @of_clk_providers, ptr noundef %4) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end3.list_add.exit_crit_edge

if.end3.list_add.exit_crit_edge:                  ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call7.i.i, ptr %prev1.i.i, align 4
  %6 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %4, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %7 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @of_clk_providers, ptr %prev3.i.i, align 4
  store volatile ptr %call7.i.i, ptr @of_clk_providers, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end3.list_add.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @of_clk_mutex) #21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @of_clk_add_provider.__UNIQUE_ID_ddebug361, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@of_clk_add_provider, %if.then10)) #21
          to label %do.end [label %if.then10], !srcloc !761

if.then10:                                        ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @of_clk_add_provider.__UNIQUE_ID_ddebug361, ptr noundef nonnull @.str.21, ptr noundef nonnull %np) #21
  br label %do.end

do.end:                                           ; preds = %if.then10, %list_add.exit
  tail call fastcc void @clk_core_reparent_orphans()
  %call12 = tail call i32 @of_clk_set_defaults(ptr noundef nonnull %np, i1 noundef zeroext true) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp = icmp slt i32 %call12, 0
  br i1 %cmp, label %if.then13, label %do.end.if.end14_crit_edge

do.end.if.end14_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

if.then13:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @of_clk_del_provider(ptr noundef nonnull %np)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %do.end.if.end14_crit_edge
  %fwnode = getelementptr inbounds %struct.device_node, ptr %np, i32 0, i32 3
  %tobool.not.i.i = icmp eq ptr %fwnode, null
  %cmp.i.i = icmp ugt ptr %fwnode, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i = or i1 %tobool.not.i.i, %cmp.i.i
  br i1 %spec.select.i.i, label %if.end14.cleanup_crit_edge, label %if.end.i

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  %flags.i = getelementptr inbounds %struct.device_node, ptr %np, i32 0, i32 3, i32 5
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %flags.i, align 4
  %.sink.i = or i8 %9, 4
  store i8 %.sink.i, ptr %flags.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %if.end14.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ %call12, %if.end14.cleanup_crit_edge ], [ %call12, %if.end.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_node_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_reparent_orphans() unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @clk_prepare_lock()
  tail call fastcc void @clk_core_reparent_orphans_nolock()
  %0 = load ptr, ptr @prepare_owner, align 4
  %1 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %0, %4
  br i1 %cmp.not.i, label %entry.if.end27.i_crit_edge, label %land.rhs.i

entry.if.end27.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %entry
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %entry.if.end27.i_crit_edge
  %5 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp36.i = icmp eq i32 %5, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %6 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %6, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_clk_set_defaults(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @of_clk_del_provider(ptr noundef %np) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %np, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @of_clk_mutex, i32 noundef 0) #21
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end
  %cp.0.in = phi ptr [ @of_clk_providers, %if.end ], [ %cp.0, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %cp.0.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %cp.0 = load ptr, ptr %cp.0.in, align 4
  %cmp.not = icmp eq ptr %cp.0, @of_clk_providers
  br i1 %cmp.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.cond
  %node = getelementptr inbounds %struct.of_clk_provider, ptr %cp.0, i32 0, i32 1
  %1 = ptrtoint ptr %node to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %node, align 4
  %cmp1 = icmp eq ptr %2, %np
  br i1 %cmp1, label %if.then2, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

if.then2:                                         ; preds = %for.body
  %node.le = getelementptr inbounds %struct.of_clk_provider, ptr %cp.0, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %cp.0) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.then2.list_del.exit_crit_edge

if.then2.list_del.exit_crit_edge:                 ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %cp.0, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %cp.0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cp.0, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then2.list_del.exit_crit_edge
  %9 = ptrtoint ptr %cp.0 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 256 to ptr), ptr %cp.0, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %cp.0, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %fwnode = getelementptr inbounds %struct.device_node, ptr %np, i32 0, i32 3
  %tobool.not.i.i = icmp eq ptr %fwnode, null
  %cmp.i.i = icmp ugt ptr %fwnode, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i = or i1 %tobool.not.i.i, %cmp.i.i
  br i1 %spec.select.i.i, label %list_del.exit.fwnode_dev_initialized.exit_crit_edge, label %if.end.i

list_del.exit.fwnode_dev_initialized.exit_crit_edge: ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %fwnode_dev_initialized.exit

if.end.i:                                         ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  %flags.i = getelementptr inbounds %struct.device_node, ptr %np, i32 0, i32 3, i32 5
  %11 = ptrtoint ptr %flags.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %flags.i, align 4
  %13 = and i8 %12, -5
  store i8 %13, ptr %flags.i, align 4
  br label %fwnode_dev_initialized.exit

fwnode_dev_initialized.exit:                      ; preds = %if.end.i, %list_del.exit.fwnode_dev_initialized.exit_crit_edge
  %14 = ptrtoint ptr %node.le to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %node.le, align 4
  tail call void @of_node_put(ptr noundef %15) #21
  tail call void @kfree(ptr noundef %cp.0) #21
  br label %for.end

for.end:                                          ; preds = %fwnode_dev_initialized.exit, %for.cond.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @of_clk_mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @of_clk_add_hw_provider(ptr noundef %np, ptr noundef %get, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %np, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 24) #28
  %tobool1.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %call4 = tail call ptr @of_node_get(ptr noundef nonnull %np) #21
  %node = getelementptr inbounds %struct.of_clk_provider, ptr %call7.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call4, ptr %node, align 8
  %data5 = getelementptr inbounds %struct.of_clk_provider, ptr %call7.i.i, i32 0, i32 4
  %2 = ptrtoint ptr %data5 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %data, ptr %data5, align 4
  %get_hw = getelementptr inbounds %struct.of_clk_provider, ptr %call7.i.i, i32 0, i32 3
  %3 = ptrtoint ptr %get_hw to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %get, ptr %get_hw, align 8
  tail call void @mutex_lock_nested(ptr noundef nonnull @of_clk_mutex, i32 noundef 0) #21
  %4 = load ptr, ptr @of_clk_providers, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @of_clk_providers, ptr noundef %4) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end3.list_add.exit_crit_edge

if.end3.list_add.exit_crit_edge:                  ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call7.i.i, ptr %prev1.i.i, align 4
  %6 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %4, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %7 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @of_clk_providers, ptr %prev3.i.i, align 4
  store volatile ptr %call7.i.i, ptr @of_clk_providers, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end3.list_add.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @of_clk_mutex) #21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @of_clk_add_hw_provider.__UNIQUE_ID_ddebug362, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@of_clk_add_hw_provider, %if.then10)) #21
          to label %do.end [label %if.then10], !srcloc !761

if.then10:                                        ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @of_clk_add_hw_provider.__UNIQUE_ID_ddebug362, ptr noundef nonnull @.str.23, ptr noundef nonnull %np) #21
  br label %do.end

do.end:                                           ; preds = %if.then10, %list_add.exit
  tail call fastcc void @clk_core_reparent_orphans()
  %call12 = tail call i32 @of_clk_set_defaults(ptr noundef nonnull %np, i1 noundef zeroext true) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp = icmp slt i32 %call12, 0
  br i1 %cmp, label %if.then13, label %do.end.if.end14_crit_edge

do.end.if.end14_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

if.then13:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @of_clk_del_provider(ptr noundef nonnull %np)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %do.end.if.end14_crit_edge
  %fwnode = getelementptr inbounds %struct.device_node, ptr %np, i32 0, i32 3
  %tobool.not.i.i = icmp eq ptr %fwnode, null
  %cmp.i.i = icmp ugt ptr %fwnode, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i = or i1 %tobool.not.i.i, %cmp.i.i
  br i1 %spec.select.i.i, label %if.end14.cleanup_crit_edge, label %if.end.i

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  %flags.i = getelementptr inbounds %struct.device_node, ptr %np, i32 0, i32 3, i32 5
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %flags.i, align 4
  %.sink.i = or i8 %9, 4
  store i8 %.sink.i, ptr %flags.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %if.end14.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ %call12, %if.end14.cleanup_crit_edge ], [ %call12, %if.end.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @devm_of_clk_add_hw_provider(ptr noundef %dev, ptr noundef %get, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_of_clk_release_provider, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.24) #21
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %of_node.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i, align 8
  %parent.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end.cond.end.i_crit_edge, label %cond.true.i

if.end.cond.end.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end.i

cond.true.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %of_node2.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 27
  %4 = ptrtoint ptr %of_node2.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of_node2.i, align 8
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.end.cond.end.i_crit_edge
  %cond.i = phi ptr [ %5, %cond.true.i ], [ null, %if.end.cond.end.i_crit_edge ]
  %call.i = tail call ptr @of_find_property(ptr noundef %1, ptr noundef nonnull @.str.26, ptr noundef null) #21
  %tobool3.not.i = icmp eq ptr %call.i, null
  br i1 %tobool3.not.i, label %if.then.i, label %cond.end.i.get_clk_provider_node.exit_crit_edge

cond.end.i.get_clk_provider_node.exit_crit_edge:  ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_clk_provider_node.exit

if.then.i:                                        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %call4.i = tail call ptr @of_find_property(ptr noundef %cond.i, ptr noundef nonnull @.str.26, ptr noundef null) #21
  %tobool5.not.i = icmp eq ptr %call4.i, null
  %spec.select.i = select i1 %tobool5.not.i, ptr %1, ptr %cond.i
  br label %get_clk_provider_node.exit

get_clk_provider_node.exit:                       ; preds = %if.then.i, %cond.end.i.get_clk_provider_node.exit_crit_edge
  %np.0.i = phi ptr [ %1, %cond.end.i.get_clk_provider_node.exit_crit_edge ], [ %spec.select.i, %if.then.i ]
  %call2 = tail call i32 @of_clk_add_hw_provider(ptr noundef %np.0.i, ptr noundef %get, ptr noundef %data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.then4, label %if.else

if.then4:                                         ; preds = %get_clk_provider_node.exit
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %np.0.i, ptr %call, align 4
  tail call void @devres_add(ptr noundef %dev, ptr noundef nonnull %call) #21
  br label %cleanup

if.else:                                          ; preds = %get_clk_provider_node.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @devres_free(ptr noundef nonnull %call) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ %call2, %if.else ], [ 0, %if.then4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_of_clk_release_provider(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %res) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  tail call void @of_clk_del_provider(ptr noundef %1)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @of_node_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @devm_of_clk_del_provider(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %of_node.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i, align 8
  %parent.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.cond.end.i_crit_edge, label %cond.true.i

entry.cond.end.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end.i

cond.true.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %of_node2.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 27
  %4 = ptrtoint ptr %of_node2.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of_node2.i, align 8
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %entry.cond.end.i_crit_edge
  %cond.i = phi ptr [ %5, %cond.true.i ], [ null, %entry.cond.end.i_crit_edge ]
  %call.i = tail call ptr @of_find_property(ptr noundef %1, ptr noundef nonnull @.str.26, ptr noundef null) #21
  %tobool3.not.i = icmp eq ptr %call.i, null
  br i1 %tobool3.not.i, label %if.then.i, label %cond.end.i.get_clk_provider_node.exit_crit_edge

cond.end.i.get_clk_provider_node.exit_crit_edge:  ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_clk_provider_node.exit

if.then.i:                                        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %call4.i = tail call ptr @of_find_property(ptr noundef %cond.i, ptr noundef nonnull @.str.26, ptr noundef null) #21
  %tobool5.not.i = icmp eq ptr %call4.i, null
  %spec.select.i = select i1 %tobool5.not.i, ptr %1, ptr %cond.i
  br label %get_clk_provider_node.exit

get_clk_provider_node.exit:                       ; preds = %if.then.i, %cond.end.i.get_clk_provider_node.exit_crit_edge
  %np.0.i = phi ptr [ %1, %cond.end.i.get_clk_provider_node.exit_crit_edge ], [ %spec.select.i, %if.then.i ]
  %call1 = tail call i32 @devres_release(ptr noundef %dev, ptr noundef nonnull @devm_of_clk_release_provider, ptr noundef nonnull @devm_clk_provider_match, ptr noundef %np.0.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %get_clk_provider_node.exit.if.end_crit_edge, label %do.end, !prof !753

get_clk_provider_node.exit.if.end_crit_edge:      ; preds = %get_clk_provider_node.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %get_clk_provider_node.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4794, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %get_clk_provider_node.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @devm_clk_provider_match(ptr nocapture noundef readnone %dev, ptr noundef readonly %res, ptr noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %res, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %lor.rhs.do.end_crit_edge, label %if.end24, !prof !754

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4776, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end24:                                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #23
  %cmp = icmp eq ptr %1, %data
  %conv = zext i1 %cmp to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ %conv, %if.end24 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @of_clk_get_from_provider(ptr noundef %clkspec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %clkspec, null
  br i1 %tobool.not.i, label %entry.of_clk_get_hw_from_clkspec.exit_crit_edge, label %if.end.i

entry.of_clk_get_hw_from_clkspec.exit_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %of_clk_get_hw_from_clkspec.exit

if.end.i:                                         ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @of_clk_mutex, i32 noundef 0) #21
  %provider.022.i = load ptr, ptr @of_clk_providers, align 4
  %cmp.not23.i = icmp eq ptr %provider.022.i, @of_clk_providers
  br i1 %cmp.not23.i, label %if.end.i.for.end.i_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %provider.025.i = phi ptr [ %provider.0.i, %for.inc.i.for.body.i_crit_edge ], [ %provider.022.i, %if.end.i.for.body.i_crit_edge ]
  %hw.024.i = phi ptr [ %hw.1.i, %for.inc.i.for.body.i_crit_edge ], [ inttoptr (i32 -517 to ptr), %if.end.i.for.body.i_crit_edge ]
  %node.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 1
  %0 = ptrtoint ptr %node.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %node.i, align 4
  %2 = ptrtoint ptr %clkspec to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %clkspec, align 4
  %cmp2.i = icmp eq ptr %1, %3
  br i1 %cmp2.i, label %if.then3.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then3.i:                                       ; preds = %for.body.i
  %get_hw.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 3
  %4 = ptrtoint ptr %get_hw.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %get_hw.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #23
  %data.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 4
  %6 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %data.i.i, align 4
  %call.i.i = tail call ptr %5(ptr noundef nonnull %clkspec, ptr noundef %7) #21
  br label %__of_clk_get_hw_from_provider.exit.i

if.end.i.i:                                       ; preds = %if.then3.i
  %get.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 2
  %8 = ptrtoint ptr %get.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %get.i.i, align 4
  %data2.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 4
  %10 = ptrtoint ptr %data2.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data2.i.i, align 4
  %call3.i.i = tail call ptr %9(ptr noundef nonnull %clkspec, ptr noundef %11) #21
  %cmp.i.i.i = icmp ugt ptr %call3.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge, label %if.end7.i.i

if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__of_clk_get_hw_from_provider.exit.i

if.end7.i.i:                                      ; preds = %if.end.i.i
  %tobool.not.i.i.i = icmp eq ptr %call3.i.i, null
  br i1 %tobool.not.i.i.i, label %if.end7.i.i.for.end.i_crit_edge, label %cond.false.i.i.i

if.end7.i.i.for.end.i_crit_edge:                  ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

cond.false.i.i.i:                                 ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %call3.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %call3.i.i, align 4
  %hw.i.i.i = getelementptr inbounds %struct.clk_core, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %hw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw.i.i.i, align 4
  br label %__of_clk_get_hw_from_provider.exit.i

__of_clk_get_hw_from_provider.exit.i:             ; preds = %cond.false.i.i.i, %if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge, %if.then.i.i
  %retval.0.i.i = phi ptr [ %call.i.i, %if.then.i.i ], [ %call3.i.i, %if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge ], [ %15, %cond.false.i.i.i ]
  %cmp.i.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge, label %__of_clk_get_hw_from_provider.exit.i.for.end.i_crit_edge

__of_clk_get_hw_from_provider.exit.i.for.end.i_crit_edge: ; preds = %__of_clk_get_hw_from_provider.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge: ; preds = %__of_clk_get_hw_from_provider.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %hw.1.i = phi ptr [ %retval.0.i.i, %__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge ], [ %hw.024.i, %for.body.i.for.inc.i_crit_edge ]
  %16 = ptrtoint ptr %provider.025.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %provider.0.i = load ptr, ptr %provider.025.i, align 4
  %cmp.not.i = icmp eq ptr %provider.0.i, @of_clk_providers
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %__of_clk_get_hw_from_provider.exit.i.for.end.i_crit_edge, %if.end7.i.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  %hw.2.i = phi ptr [ inttoptr (i32 -517 to ptr), %if.end.i.for.end.i_crit_edge ], [ %hw.1.i, %for.inc.i.for.end.i_crit_edge ], [ %retval.0.i.i, %__of_clk_get_hw_from_provider.exit.i.for.end.i_crit_edge ], [ null, %if.end7.i.i.for.end.i_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @of_clk_mutex) #21
  br label %of_clk_get_hw_from_clkspec.exit

of_clk_get_hw_from_clkspec.exit:                  ; preds = %for.end.i, %entry.of_clk_get_hw_from_clkspec.exit_crit_edge
  %retval.0.i = phi ptr [ %hw.2.i, %for.end.i ], [ inttoptr (i32 -22 to ptr), %entry.of_clk_get_hw_from_clkspec.exit_crit_edge ]
  %call1 = tail call ptr @clk_hw_create_clk(ptr noundef null, ptr noundef %retval.0.i, ptr noundef null, ptr noundef nonnull @__func__.of_clk_get_from_provider)
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @of_clk_get_hw(ptr noundef %np, i32 noundef %index, ptr noundef %con_id) local_unnamed_addr #0 align 64 {
entry:
  %clkspec = alloca %struct.of_phandle_args, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %clkspec) #21
  %0 = call ptr @memset(ptr %clkspec, i32 255, i32 72)
  %tobool.not24.i = icmp eq ptr %np, null
  br i1 %tobool.not24.i, label %entry.cleanup_crit_edge, label %while.body.lr.ph.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

while.body.lr.ph.i:                               ; preds = %entry
  %tobool1.not.i = icmp eq ptr %con_id, null
  br label %while.body.i

while.body.i:                                     ; preds = %land.lhs.true10.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %np.addr.026.i = phi ptr [ %np, %while.body.lr.ph.i ], [ %3, %land.lhs.true10.i.while.body.i_crit_edge ]
  %index.addr.025.i = phi i32 [ %index, %while.body.lr.ph.i ], [ 0, %land.lhs.true10.i.while.body.i_crit_edge ]
  br i1 %tobool1.not.i, label %while.body.i.if.end.i_crit_edge, label %if.then.i

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then.i:                                        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = call i32 @of_property_match_string(ptr noundef nonnull %np.addr.026.i, ptr noundef nonnull @.str.159, ptr noundef nonnull %con_id) #21
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %while.body.i.if.end.i_crit_edge
  %index.addr.1.i = phi i32 [ %call.i, %if.then.i ], [ %index.addr.025.i, %while.body.i.if.end.i_crit_edge ]
  %call.i.i = call i32 @__of_parse_phandle_with_args(ptr noundef nonnull %np.addr.026.i, ptr noundef nonnull @.str.25, ptr noundef nonnull @.str.26, i32 noundef -1, i32 noundef %index.addr.1.i, ptr noundef nonnull %clkspec) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool3.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool3.not.i, label %if.end, label %if.end5.i

if.end5.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %index.addr.1.i)
  %cmp.i = icmp slt i32 %index.addr.1.i, 0
  %1 = or i1 %tobool1.not.i, %cmp.i
  br i1 %1, label %if.end8.i, label %if.end5.i.if.then.loopexit_crit_edge

if.end5.i.if.then.loopexit_crit_edge:             ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.loopexit

if.end8.i:                                        ; preds = %if.end5.i
  %parent.i = getelementptr inbounds %struct.device_node, ptr %np.addr.026.i, i32 0, i32 6
  %2 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i, align 4
  %cond.i = icmp eq ptr %3, null
  br i1 %cond.i, label %if.end8.i.if.then.loopexit_crit_edge, label %land.lhs.true10.i

if.end8.i.if.then.loopexit_crit_edge:             ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.loopexit

land.lhs.true10.i:                                ; preds = %if.end8.i
  %call11.i = call ptr @of_get_property(ptr noundef nonnull %3, ptr noundef nonnull @.str.160, ptr noundef null) #21
  %tobool12.not.i = icmp eq ptr %call11.i, null
  br i1 %tobool12.not.i, label %land.lhs.true10.i.if.then.loopexit_crit_edge, label %land.lhs.true10.i.while.body.i_crit_edge

land.lhs.true10.i.while.body.i_crit_edge:         ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

land.lhs.true10.i.if.then.loopexit_crit_edge:     ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.loopexit

if.then.loopexit:                                 ; preds = %land.lhs.true10.i.if.then.loopexit_crit_edge, %if.end8.i.if.then.loopexit_crit_edge, %if.end5.i.if.then.loopexit_crit_edge
  %phi.cast = inttoptr i32 %call.i.i to ptr
  br label %cleanup

if.end:                                           ; preds = %if.end.i
  call void @mutex_lock_nested(ptr noundef nonnull @of_clk_mutex, i32 noundef 0) #21
  %provider.022.i = load ptr, ptr @of_clk_providers, align 4
  %cmp.not23.i = icmp eq ptr %provider.022.i, @of_clk_providers
  br i1 %cmp.not23.i, label %if.end.of_clk_get_hw_from_clkspec.exit_crit_edge, label %if.end.for.body.i_crit_edge

if.end.for.body.i_crit_edge:                      ; preds = %if.end
  br label %for.body.i

if.end.of_clk_get_hw_from_clkspec.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %of_clk_get_hw_from_clkspec.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.for.body.i_crit_edge
  %provider.025.i = phi ptr [ %provider.0.i, %for.inc.i.for.body.i_crit_edge ], [ %provider.022.i, %if.end.for.body.i_crit_edge ]
  %hw.024.i = phi ptr [ %hw.1.i, %for.inc.i.for.body.i_crit_edge ], [ inttoptr (i32 -517 to ptr), %if.end.for.body.i_crit_edge ]
  %node.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 1
  %4 = ptrtoint ptr %node.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %node.i, align 4
  %6 = ptrtoint ptr %clkspec to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %clkspec, align 4
  %cmp2.i = icmp eq ptr %5, %7
  br i1 %cmp2.i, label %if.then3.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then3.i:                                       ; preds = %for.body.i
  %get_hw.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 3
  %8 = ptrtoint ptr %get_hw.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %get_hw.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #23
  %data.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 4
  %10 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data.i.i, align 4
  %call.i.i8 = call ptr %9(ptr noundef nonnull %clkspec, ptr noundef %11) #21
  br label %__of_clk_get_hw_from_provider.exit.i

if.end.i.i:                                       ; preds = %if.then3.i
  %get.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 2
  %12 = ptrtoint ptr %get.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %get.i.i, align 4
  %data2.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 4
  %14 = ptrtoint ptr %data2.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %data2.i.i, align 4
  %call3.i.i = call ptr %13(ptr noundef nonnull %clkspec, ptr noundef %15) #21
  %cmp.i.i.i = icmp ugt ptr %call3.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge, label %if.end7.i.i

if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__of_clk_get_hw_from_provider.exit.i

if.end7.i.i:                                      ; preds = %if.end.i.i
  %tobool.not.i.i.i = icmp eq ptr %call3.i.i, null
  br i1 %tobool.not.i.i.i, label %if.end7.i.i.of_clk_get_hw_from_clkspec.exit_crit_edge, label %cond.false.i.i.i

if.end7.i.i.of_clk_get_hw_from_clkspec.exit_crit_edge: ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %of_clk_get_hw_from_clkspec.exit

cond.false.i.i.i:                                 ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %call3.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %call3.i.i, align 4
  %hw.i.i.i = getelementptr inbounds %struct.clk_core, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %hw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hw.i.i.i, align 4
  br label %__of_clk_get_hw_from_provider.exit.i

__of_clk_get_hw_from_provider.exit.i:             ; preds = %cond.false.i.i.i, %if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge, %if.then.i.i
  %retval.0.i.i = phi ptr [ %call.i.i8, %if.then.i.i ], [ %call3.i.i, %if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge ], [ %19, %cond.false.i.i.i ]
  %cmp.i.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge, label %__of_clk_get_hw_from_provider.exit.i.of_clk_get_hw_from_clkspec.exit_crit_edge

__of_clk_get_hw_from_provider.exit.i.of_clk_get_hw_from_clkspec.exit_crit_edge: ; preds = %__of_clk_get_hw_from_provider.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %of_clk_get_hw_from_clkspec.exit

__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge: ; preds = %__of_clk_get_hw_from_provider.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %hw.1.i = phi ptr [ %retval.0.i.i, %__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge ], [ %hw.024.i, %for.body.i.for.inc.i_crit_edge ]
  %20 = ptrtoint ptr %provider.025.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %provider.0.i = load ptr, ptr %provider.025.i, align 4
  %cmp.not.i = icmp eq ptr %provider.0.i, @of_clk_providers
  br i1 %cmp.not.i, label %for.inc.i.of_clk_get_hw_from_clkspec.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.of_clk_get_hw_from_clkspec.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %of_clk_get_hw_from_clkspec.exit

of_clk_get_hw_from_clkspec.exit:                  ; preds = %for.inc.i.of_clk_get_hw_from_clkspec.exit_crit_edge, %__of_clk_get_hw_from_provider.exit.i.of_clk_get_hw_from_clkspec.exit_crit_edge, %if.end7.i.i.of_clk_get_hw_from_clkspec.exit_crit_edge, %if.end.of_clk_get_hw_from_clkspec.exit_crit_edge
  %hw.2.i = phi ptr [ inttoptr (i32 -517 to ptr), %if.end.of_clk_get_hw_from_clkspec.exit_crit_edge ], [ %hw.1.i, %for.inc.i.of_clk_get_hw_from_clkspec.exit_crit_edge ], [ %retval.0.i.i, %__of_clk_get_hw_from_provider.exit.i.of_clk_get_hw_from_clkspec.exit_crit_edge ], [ null, %if.end7.i.i.of_clk_get_hw_from_clkspec.exit_crit_edge ]
  call void @mutex_unlock(ptr noundef nonnull @of_clk_mutex) #21
  %21 = ptrtoint ptr %clkspec to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %clkspec, align 4
  call void @of_node_put(ptr noundef %22) #21
  br label %cleanup

cleanup:                                          ; preds = %of_clk_get_hw_from_clkspec.exit, %if.then.loopexit, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %hw.2.i, %of_clk_get_hw_from_clkspec.exit ], [ inttoptr (i32 -2 to ptr), %entry.cleanup_crit_edge ], [ %phi.cast, %if.then.loopexit ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %clkspec) #21
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @of_clk_get(ptr noundef %np, i32 noundef %index) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %full_name = getelementptr inbounds %struct.device_node, ptr %np, i32 0, i32 2
  %0 = ptrtoint ptr %full_name to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %full_name, align 4
  %call.i = tail call ptr @of_clk_get_hw(ptr noundef %np, i32 noundef %index, ptr noundef null) #21
  %call1.i = tail call ptr @clk_hw_create_clk(ptr noundef null, ptr noundef %call.i, ptr noundef %1, ptr noundef null) #21
  ret ptr %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @of_clk_get_by_name(ptr noundef %np, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %np, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %full_name = getelementptr inbounds %struct.device_node, ptr %np, i32 0, i32 2
  %0 = ptrtoint ptr %full_name to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %full_name, align 4
  %call.i = tail call ptr @of_clk_get_hw(ptr noundef nonnull %np, i32 noundef 0, ptr noundef %name) #21
  %call1.i = tail call ptr @clk_hw_create_clk(ptr noundef null, ptr noundef %call.i, ptr noundef %1, ptr noundef %name) #21
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi ptr [ %call1.i, %if.end ], [ inttoptr (i32 -2 to ptr), %entry.return_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @of_clk_get_parent_count(ptr noundef %np) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @of_count_phandle_with_args(ptr noundef %np, ptr noundef nonnull @.str.25, ptr noundef nonnull @.str.26) #21
  %0 = tail call i32 @llvm.smax.i32(i32 %call, i32 0)
  ret i32 %0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_count_phandle_with_args(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @of_clk_get_parent_name(ptr noundef %np, i32 noundef %index) #0 align 64 {
entry:
  %clkspec = alloca %struct.of_phandle_args, align 4
  %clk_name = alloca ptr, align 4
  %pv = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %clkspec) #21
  %0 = call ptr @memset(ptr %clkspec, i32 255, i32 72)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %clk_name) #21
  %1 = ptrtoint ptr %clk_name to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %clk_name, align 4, !annotation !755
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pv) #21
  %2 = ptrtoint ptr %pv to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %pv, align 4, !annotation !755
  %call.i = call i32 @__of_parse_phandle_with_args(ptr noundef %np, ptr noundef nonnull @.str.25, ptr noundef nonnull @.str.26, i32 noundef -1, i32 noundef %index, ptr noundef nonnull %clkspec) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %args_count = getelementptr inbounds %struct.of_phandle_args, ptr %clkspec, i32 0, i32 1
  %3 = ptrtoint ptr %args_count to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %args_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool1.not = icmp eq i32 %4, 0
  br i1 %tobool1.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %args = getelementptr inbounds %struct.of_phandle_args, ptr %clkspec, i32 0, i32 2
  %5 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %args, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi i32 [ %6, %cond.true ], [ 0, %if.end.cond.end_crit_edge ]
  %7 = ptrtoint ptr %clkspec to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %clkspec, align 4
  %call3 = call ptr @of_find_property(ptr noundef %8, ptr noundef nonnull @.str.27, ptr noundef null) #21
  %call4 = call ptr @of_prop_next_u32(ptr noundef %call3, ptr noundef null, ptr noundef nonnull %pv) #21
  %tobool5.not54 = icmp eq ptr %call4, null
  br i1 %tobool5.not54, label %cond.end.for.end_crit_edge, label %cond.end.for.body_crit_edge

cond.end.for.body_crit_edge:                      ; preds = %cond.end
  br label %for.body

cond.end.for.end_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %if.end7.for.body_crit_edge, %cond.end.for.body_crit_edge
  %count.056 = phi i32 [ %inc, %if.end7.for.body_crit_edge ], [ 0, %cond.end.for.body_crit_edge ]
  %vp.055 = phi ptr [ %call8, %if.end7.for.body_crit_edge ], [ %call4, %cond.end.for.body_crit_edge ]
  %9 = ptrtoint ptr %pv to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pv, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %10)
  %cmp = icmp eq i32 %cond, %10
  br i1 %cmp, label %for.body.if.end12_crit_edge, label %if.end7

for.body.if.end12_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

if.end7:                                          ; preds = %for.body
  %inc = add i32 %count.056, 1
  %call8 = call ptr @of_prop_next_u32(ptr noundef %call3, ptr noundef nonnull %vp.055, ptr noundef nonnull %pv) #21
  %tobool5.not = icmp eq ptr %call8, null
  br i1 %tobool5.not, label %if.end7.for.end_crit_edge, label %if.end7.for.body_crit_edge

if.end7.for.body_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.end7.for.end_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %if.end7.for.end_crit_edge, %cond.end.for.end_crit_edge
  %tobool9.not = icmp eq ptr %call3, null
  br i1 %tobool9.not, label %for.end.if.end12_crit_edge, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.end.if.end12_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

if.end12:                                         ; preds = %for.end.if.end12_crit_edge, %for.body.if.end12_crit_edge
  %index.addr.051 = phi i32 [ %cond, %for.end.if.end12_crit_edge ], [ %count.056, %for.body.if.end12_crit_edge ]
  %11 = ptrtoint ptr %clkspec to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %clkspec, align 4
  %call.i46 = call i32 @of_property_read_string_helper(ptr noundef %12, ptr noundef nonnull @.str.28, ptr noundef nonnull %clk_name, i32 noundef 1, i32 noundef %index.addr.051) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i46)
  %cmp15 = icmp slt i32 %call.i46, 0
  br i1 %cmp15, label %if.then16, label %if.end12.if.end28_crit_edge

if.end12.if.end28_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

if.then16:                                        ; preds = %if.end12
  %call17 = call ptr @of_clk_get_from_provider(ptr noundef nonnull %clkspec)
  %cmp.i = icmp ugt ptr %call17, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then19, label %if.else25

if.then19:                                        ; preds = %if.then16
  %13 = ptrtoint ptr %args_count to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %args_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp21 = icmp eq i32 %14, 0
  br i1 %cmp21, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #23
  %15 = ptrtoint ptr %clkspec to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %clkspec, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %19 = ptrtoint ptr %clk_name to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %clk_name, align 4
  br label %if.end28

if.else:                                          ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #23
  %20 = ptrtoint ptr %clk_name to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %clk_name, align 4
  br label %if.end28

if.else25:                                        ; preds = %if.then16
  %tobool.not.i = icmp eq ptr %call17, null
  br i1 %tobool.not.i, label %if.else25.__clk_get_name.exit_crit_edge, label %cond.false.i

if.else25.__clk_get_name.exit_crit_edge:          ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_get_name.exit

cond.false.i:                                     ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #23
  %21 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %call17, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  br label %__clk_get_name.exit

__clk_get_name.exit:                              ; preds = %cond.false.i, %if.else25.__clk_get_name.exit_crit_edge
  %cond.i = phi ptr [ %24, %cond.false.i ], [ null, %if.else25.__clk_get_name.exit_crit_edge ]
  %25 = ptrtoint ptr %clk_name to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %cond.i, ptr %clk_name, align 4
  call void @clk_put(ptr noundef %call17) #21
  br label %if.end28

if.end28:                                         ; preds = %__clk_get_name.exit, %if.else, %if.then22, %if.end12.if.end28_crit_edge
  %26 = ptrtoint ptr %clkspec to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %clkspec, align 4
  call void @of_node_put(ptr noundef %27) #21
  %28 = ptrtoint ptr %clk_name to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %clk_name, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end28, %for.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %29, %if.end28 ], [ null, %entry.cleanup_crit_edge ], [ null, %for.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pv) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %clk_name) #21
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %clkspec) #21
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_find_property(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_prop_next_u32(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @clk_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @of_clk_parent_fill(ptr noundef %np, ptr nocapture noundef writeonly %parents, i32 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %cmp6.not = icmp eq i32 %size, 0
  br i1 %cmp6.not, label %entry.while.end_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

land.rhs:                                         ; preds = %while.body.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %i.07 = phi i32 [ %inc, %while.body.land.rhs_crit_edge ], [ 0, %entry.land.rhs_crit_edge ]
  %call = tail call ptr @of_clk_get_parent_name(ptr noundef %np, i32 noundef %i.07)
  %arrayidx = getelementptr ptr, ptr %parents, i32 %i.07
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %arrayidx, align 4
  %cmp1.not = icmp eq ptr %call, null
  br i1 %cmp1.not, label %land.rhs.while.end_crit_edge, label %while.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.body:                                       ; preds = %land.rhs
  %inc = add nuw i32 %i.07, 1
  %exitcond.not = icmp eq i32 %inc, %size
  br i1 %exitcond.not, label %while.body.while.end_crit_edge, label %while.body.land.rhs_crit_edge

while.body.land.rhs_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.rhs

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %land.rhs.while.end_crit_edge, %entry.while.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %entry.while.end_crit_edge ], [ %size, %while.body.while.end_crit_edge ], [ %i.07, %land.rhs.while.end_crit_edge ]
  ret i32 %i.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @of_clk_detect_critical(ptr noundef %np, i32 noundef %index, ptr noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  %idx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %idx) #21
  %0 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %idx, align 4, !annotation !755
  %tobool.not = icmp eq ptr %np, null
  %tobool1.not = icmp eq ptr %flags, null
  %or.cond = or i1 %tobool.not, %tobool1.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @of_find_property(ptr noundef nonnull %np, ptr noundef nonnull @.str.29, ptr noundef null) #21
  %call2 = call ptr @of_prop_next_u32(ptr noundef %call, ptr noundef null, ptr noundef nonnull %idx) #21
  %tobool3.not13 = icmp eq ptr %call2, null
  br i1 %tobool3.not13, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %cur.014 = phi ptr [ %call6, %for.inc.for.body_crit_edge ], [ %call2, %if.end.for.body_crit_edge ]
  %1 = ptrtoint ptr %idx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %idx, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %index)
  %cmp = icmp eq i32 %2, %index
  br i1 %cmp, label %if.then4, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then4:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %or = or i32 %4, 2048
  store i32 %or, ptr %flags, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then4, %for.body.for.inc_crit_edge
  %call6 = call ptr @of_prop_next_u32(ptr noundef %call, ptr noundef nonnull %cur.014, ptr noundef nonnull %idx) #21
  %tobool3.not = icmp eq ptr %call6, null
  br i1 %tobool3.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %idx) #21
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @of_clk_init(ptr noundef %matches) local_unnamed_addr #7 section ".init.text" align 64 {
entry:
  %match = alloca ptr, align 4
  %clk_provider_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %match) #21
  %0 = ptrtoint ptr %match to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %match, align 4, !annotation !755
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %clk_provider_list) #21
  %1 = getelementptr inbounds %struct.list_head, ptr %clk_provider_list, i32 0, i32 1
  %2 = ptrtoint ptr %clk_provider_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %clk_provider_list, ptr %clk_provider_list, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %clk_provider_list, ptr %1, align 4
  %tobool.not = icmp eq ptr %matches, null
  %spec.store.select = select i1 %tobool.not, ptr @__clk_of_table, ptr %matches
  %call = call ptr @of_find_matching_node_and_match(ptr noundef null, ptr noundef %spec.store.select, ptr noundef nonnull %match) #21
  %tobool2.not123 = icmp eq ptr %call, null
  br i1 %tobool2.not123, label %entry.while.cond.preheader_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.while.cond.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.inc28.while.cond.preheader_crit_edge, %entry.while.cond.preheader_crit_edge
  %4 = ptrtoint ptr %clk_provider_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %clk_provider_list, align 4
  %cmp.i.not137 = icmp eq ptr %5, %clk_provider_list
  br i1 %cmp.i.not137, label %while.cond.preheader.cleanup71_crit_edge, label %while.cond.preheader.for.cond43.preheader_crit_edge

while.cond.preheader.for.cond43.preheader_crit_edge: ; preds = %while.cond.preheader
  br label %for.cond43.preheader

while.cond.preheader.cleanup71_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup71

for.body:                                         ; preds = %for.inc28.for.body_crit_edge, %entry.for.body_crit_edge
  %np.0124 = phi ptr [ %call29, %for.inc28.for.body_crit_edge ], [ %call, %entry.for.body_crit_edge ]
  %call3 = call zeroext i1 @of_device_is_available(ptr noundef nonnull %np.0124) #21
  br i1 %call3, label %if.end5, label %for.body.for.inc28_crit_edge

for.body.for.inc28_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc28

if.end5:                                          ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %6 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 16) #28
  %tobool7.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool7.not, label %if.then8, label %if.end24

if.then8:                                         ; preds = %if.end5
  %7 = ptrtoint ptr %clk_provider_list to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %clk_provider_list, align 4
  %cmp.not126 = icmp eq ptr %8, %clk_provider_list
  br i1 %cmp.not126, label %if.then8.cleanup_crit_edge, label %if.then8.for.body16_crit_edge

if.then8.for.body16_crit_edge:                    ; preds = %if.then8
  br label %for.body16

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body16:                                       ; preds = %list_del.exit.for.body16_crit_edge, %if.then8.for.body16_crit_edge
  %.pn108.in127 = phi ptr [ %.pn108, %list_del.exit.for.body16_crit_edge ], [ %8, %if.then8.for.body16_crit_edge ]
  %clk_provider.0 = getelementptr i8, ptr %.pn108.in127, i32 -8
  %9 = ptrtoint ptr %.pn108.in127 to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn108 = load ptr, ptr %.pn108.in127, align 4
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn108.in127) #21
  br i1 %call.i.i, label %if.end.i.i, label %for.body16.list_del.exit_crit_edge

for.body16.list_del.exit_crit_edge:               ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn108.in127, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i, align 4
  %12 = ptrtoint ptr %.pn108.in127 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %.pn108.in127, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev1.i.i.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %11, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body16.list_del.exit_crit_edge
  %16 = ptrtoint ptr %.pn108.in127 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn108.in127, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn108.in127, i32 0, i32 1
  %17 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %np18 = getelementptr i8, ptr %.pn108.in127, i32 -4
  %18 = ptrtoint ptr %np18 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %np18, align 4
  call void @of_node_put(ptr noundef %19) #21
  call void @kfree(ptr noundef %clk_provider.0) #21
  %cmp.not = icmp eq ptr %.pn108, %clk_provider_list
  br i1 %cmp.not, label %list_del.exit.cleanup_crit_edge, label %list_del.exit.for.body16_crit_edge

list_del.exit.for.body16_crit_edge:               ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body16

list_del.exit.cleanup_crit_edge:                  ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end24:                                         ; preds = %if.end5
  %20 = ptrtoint ptr %match to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %match, align 4
  %data = getelementptr inbounds %struct.of_device_id, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %data, align 4
  %24 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %call7.i.i, align 8
  %call25 = call ptr @of_node_get(ptr noundef nonnull %np.0124) #21
  %np26 = getelementptr inbounds %struct.clock_provider, ptr %call7.i.i, i32 0, i32 1
  %25 = ptrtoint ptr %np26 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %call25, ptr %np26, align 4
  %node27 = getelementptr inbounds %struct.clock_provider, ptr %call7.i.i, i32 0, i32 2
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %1, align 4
  %call.i.i112 = call zeroext i1 @__list_add_valid(ptr noundef %node27, ptr noundef %27, ptr noundef nonnull %clk_provider_list) #21
  br i1 %call.i.i112, label %if.end.i.i113, label %if.end24.for.inc28_crit_edge

if.end24.for.inc28_crit_edge:                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc28

if.end.i.i113:                                    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #23
  %28 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %node27, ptr %1, align 4
  %29 = ptrtoint ptr %node27 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %clk_provider_list, ptr %node27, align 8
  %prev3.i.i = getelementptr inbounds %struct.clock_provider, ptr %call7.i.i, i32 0, i32 2, i32 1
  %30 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %27, ptr %prev3.i.i, align 4
  %31 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %node27, ptr %27, align 4
  br label %for.inc28

cleanup:                                          ; preds = %list_del.exit.cleanup_crit_edge, %if.then8.cleanup_crit_edge
  call void @of_node_put(ptr noundef nonnull %np.0124) #21
  br label %cleanup71

for.inc28:                                        ; preds = %if.end.i.i113, %if.end24.for.inc28_crit_edge, %for.body.for.inc28_crit_edge
  %call29 = call ptr @of_find_matching_node_and_match(ptr noundef nonnull %np.0124, ptr noundef %spec.store.select, ptr noundef nonnull %match) #21
  %tobool2.not = icmp eq ptr %call29, null
  br i1 %tobool2.not, label %for.inc28.while.cond.preheader_crit_edge, label %for.inc28.for.body_crit_edge

for.inc28.for.body_crit_edge:                     ; preds = %for.inc28
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc28.while.cond.preheader_crit_edge:         ; preds = %for.inc28
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.cond.preheader

for.cond43.preheader:                             ; preds = %for.end67.for.cond43.preheader_crit_edge, %while.cond.preheader.for.cond43.preheader_crit_edge
  %32 = phi ptr [ %59, %for.end67.for.cond43.preheader_crit_edge ], [ %5, %while.cond.preheader.for.cond43.preheader_crit_edge ]
  %force.0.off0138 = phi i1 [ %spec.select, %for.end67.for.cond43.preheader_crit_edge ], [ false, %while.cond.preheader.for.cond43.preheader_crit_edge ]
  %cmp45.not131 = icmp eq ptr %32, %clk_provider_list
  br i1 %cmp45.not131, label %for.cond43.preheader.for.end67_crit_edge, label %for.cond43.preheader.for.body47_crit_edge

for.cond43.preheader.for.body47_crit_edge:        ; preds = %for.cond43.preheader
  br label %for.body47

for.cond43.preheader.for.end67_crit_edge:         ; preds = %for.cond43.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end67

for.body47:                                       ; preds = %for.inc61.for.body47_crit_edge, %for.cond43.preheader.for.body47_crit_edge
  %.pn.in133 = phi ptr [ %.pn136, %for.inc61.for.body47_crit_edge ], [ %32, %for.cond43.preheader.for.body47_crit_edge ]
  %is_init_done.0.off0132 = phi i1 [ %is_init_done.1.off0, %for.inc61.for.body47_crit_edge ], [ false, %for.cond43.preheader.for.body47_crit_edge ]
  %clk_provider.1135 = getelementptr i8, ptr %.pn.in133, i32 -8
  %33 = ptrtoint ptr %.pn.in133 to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn136 = load ptr, ptr %.pn.in133, align 4
  br i1 %force.0.off0138, label %for.body47.if.then52_crit_edge, label %lor.lhs.false

for.body47.if.then52_crit_edge:                   ; preds = %for.body47
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then52

lor.lhs.false:                                    ; preds = %for.body47
  %np49 = getelementptr i8, ptr %.pn.in133, i32 -4
  %34 = ptrtoint ptr %np49 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %np49, align 4
  %full_name.i.i = getelementptr inbounds %struct.device_node, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %full_name.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %full_name.i.i, align 4
  %call.i.i12.i = call ptr @of_clk_get_hw(ptr noundef %35, i32 noundef 0, ptr noundef null) #21
  %call1.i.i13.i = call ptr @clk_hw_create_clk(ptr noundef null, ptr noundef %call.i.i12.i, ptr noundef %37, ptr noundef null) #21
  %cmp.i14.i = icmp ugt ptr %call1.i.i13.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i14.i, label %lor.lhs.false.parent_ready.exit_crit_edge, label %lor.lhs.false.cleanup.i_crit_edge

lor.lhs.false.cleanup.i_crit_edge:                ; preds = %lor.lhs.false
  br label %cleanup.i

lor.lhs.false.parent_ready.exit_crit_edge:        ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %parent_ready.exit

cleanup.i:                                        ; preds = %cleanup.i.cleanup.i_crit_edge, %lor.lhs.false.cleanup.i_crit_edge
  %call1.i.i16.i = phi ptr [ %call1.i.i.i, %cleanup.i.cleanup.i_crit_edge ], [ %call1.i.i13.i, %lor.lhs.false.cleanup.i_crit_edge ]
  %i.015.i = phi i32 [ %inc.i, %cleanup.i.cleanup.i_crit_edge ], [ 0, %lor.lhs.false.cleanup.i_crit_edge ]
  call void @clk_put(ptr noundef %call1.i.i16.i) #21
  %inc.i = add i32 %i.015.i, 1
  %38 = ptrtoint ptr %full_name.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %full_name.i.i, align 4
  %call.i.i.i = call ptr @of_clk_get_hw(ptr noundef %35, i32 noundef %inc.i, ptr noundef null) #21
  %call1.i.i.i = call ptr @clk_hw_create_clk(ptr noundef null, ptr noundef %call.i.i.i, ptr noundef %39, ptr noundef null) #21
  %cmp.i.i = icmp ugt ptr %call1.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %cleanup.i.parent_ready.exit_crit_edge, label %cleanup.i.cleanup.i_crit_edge

cleanup.i.cleanup.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i

cleanup.i.parent_ready.exit_crit_edge:            ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %parent_ready.exit

parent_ready.exit:                                ; preds = %cleanup.i.parent_ready.exit_crit_edge, %lor.lhs.false.parent_ready.exit_crit_edge
  %call1.i.i.lcssa.i = phi ptr [ %call1.i.i13.i, %lor.lhs.false.parent_ready.exit_crit_edge ], [ %call1.i.i.i, %cleanup.i.parent_ready.exit_crit_edge ]
  %cmp.i114.not = icmp eq ptr %call1.i.i.lcssa.i, inttoptr (i32 -517 to ptr)
  br i1 %cmp.i114.not, label %parent_ready.exit.for.inc61_crit_edge, label %parent_ready.exit.if.then52_crit_edge

parent_ready.exit.if.then52_crit_edge:            ; preds = %parent_ready.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then52

parent_ready.exit.for.inc61_crit_edge:            ; preds = %parent_ready.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc61

if.then52:                                        ; preds = %parent_ready.exit.if.then52_crit_edge, %for.body47.if.then52_crit_edge
  %np53 = getelementptr i8, ptr %.pn.in133, i32 -4
  %40 = ptrtoint ptr %np53 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %np53, align 4
  %_flags.i = getelementptr inbounds %struct.device_node, ptr %41, i32 0, i32 10
  call void @_set_bit(i32 noundef 3, ptr noundef %_flags.i) #21
  %42 = ptrtoint ptr %clk_provider.1135 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %clk_provider.1135, align 4
  %44 = ptrtoint ptr %np53 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %np53, align 4
  call void %43(ptr noundef %45) #21
  %46 = ptrtoint ptr %np53 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %np53, align 4
  %call57 = call i32 @of_clk_set_defaults(ptr noundef %47, i1 noundef zeroext true) #21
  %call.i.i115 = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in133) #21
  br i1 %call.i.i115, label %if.end.i.i118, label %if.then52.list_del.exit120_crit_edge

if.then52.list_del.exit120_crit_edge:             ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit120

if.end.i.i118:                                    ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i116 = getelementptr inbounds %struct.list_head, ptr %.pn.in133, i32 0, i32 1
  %48 = ptrtoint ptr %prev.i.i116 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %prev.i.i116, align 4
  %50 = ptrtoint ptr %.pn.in133 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %.pn.in133, align 4
  %prev1.i.i.i117 = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %prev1.i.i.i117 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %49, ptr %prev1.i.i.i117, align 4
  %53 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %51, ptr %49, align 4
  br label %list_del.exit120

list_del.exit120:                                 ; preds = %if.end.i.i118, %if.then52.list_del.exit120_crit_edge
  %54 = ptrtoint ptr %.pn.in133 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in133, align 4
  %prev.i119 = getelementptr inbounds %struct.list_head, ptr %.pn.in133, i32 0, i32 1
  %55 = ptrtoint ptr %prev.i119 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i119, align 4
  %56 = ptrtoint ptr %np53 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %np53, align 4
  call void @of_node_put(ptr noundef %57) #21
  call void @kfree(ptr noundef %clk_provider.1135) #21
  br label %for.inc61

for.inc61:                                        ; preds = %list_del.exit120, %parent_ready.exit.for.inc61_crit_edge
  %is_init_done.1.off0 = phi i1 [ true, %list_del.exit120 ], [ %is_init_done.0.off0132, %parent_ready.exit.for.inc61_crit_edge ]
  %cmp45.not = icmp eq ptr %.pn136, %clk_provider_list
  br i1 %cmp45.not, label %for.inc61.for.end67_crit_edge, label %for.inc61.for.body47_crit_edge

for.inc61.for.body47_crit_edge:                   ; preds = %for.inc61
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body47

for.inc61.for.end67_crit_edge:                    ; preds = %for.inc61
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end67

for.end67:                                        ; preds = %for.inc61.for.end67_crit_edge, %for.cond43.preheader.for.end67_crit_edge
  %is_init_done.0.off0.lcssa = phi i1 [ false, %for.cond43.preheader.for.end67_crit_edge ], [ %is_init_done.1.off0, %for.inc61.for.end67_crit_edge ]
  %not.is_init_done.0.off0 = xor i1 %is_init_done.0.off0.lcssa, true
  %spec.select = select i1 %not.is_init_done.0.off0, i1 true, i1 %force.0.off0138
  %58 = ptrtoint ptr %clk_provider_list to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile ptr, ptr %clk_provider_list, align 4
  %cmp.i.not = icmp eq ptr %59, %clk_provider_list
  br i1 %cmp.i.not, label %for.end67.cleanup71_crit_edge, label %for.end67.for.cond43.preheader_crit_edge

for.end67.for.cond43.preheader_crit_edge:         ; preds = %for.end67
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond43.preheader

for.end67.cleanup71_crit_edge:                    ; preds = %for.end67
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup71

cleanup71:                                        ; preds = %for.end67.cleanup71_crit_edge, %cleanup, %while.cond.preheader.cleanup71_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %clk_provider_list) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %match) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_find_matching_node_and_match(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @of_device_is_available(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_clk(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.33, ptr noundef %add.ptr) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_clk_rate(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_rate, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %rate = getelementptr inbounds %struct.trace_event_raw_clk_rate, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rate, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.36, ptr noundef %add.ptr, i32 noundef %5) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_clk_rate_range(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_rate_range, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %min = getelementptr inbounds %struct.trace_event_raw_clk_rate_range, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %min, align 4
  %max = getelementptr inbounds %struct.trace_event_raw_clk_rate_range, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %max, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.39, ptr noundef %add.ptr, i32 noundef %5, i32 noundef %7) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_clk_parent(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_parent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_pname = getelementptr inbounds %struct.trace_event_raw_clk_parent, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_pname to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_pname, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.42, ptr noundef %add.ptr, ptr noundef %add.ptr2) #21
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_clk_phase(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_phase, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %phase = getelementptr inbounds %struct.trace_event_raw_clk_phase, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %phase to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %phase, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.45, ptr noundef %add.ptr, i32 noundef %5) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_clk_duty_cycle(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_clk_duty_cycle, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %num = getelementptr inbounds %struct.trace_event_raw_clk_duty_cycle, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %num to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num, align 4
  %den = getelementptr inbounds %struct.trace_event_raw_clk_duty_cycle, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %den to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %den, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.49, ptr noundef %add.ptr, i32 noundef %5, i32 noundef %7) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #14

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #15

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #15

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @clk_core_get(ptr nocapture noundef readonly %core, i8 noundef zeroext %p_index) unnamed_addr #0 align 64 {
entry:
  %clkspec = alloca %struct.of_phandle_args, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 7
  %0 = ptrtoint ptr %parents to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parents, align 4
  %idxprom = zext i8 %p_index to i32
  %fw_name = getelementptr %struct.clk_parent_map, ptr %1, i32 %idxprom, i32 2
  %2 = ptrtoint ptr %fw_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fw_name, align 4
  %index4 = getelementptr %struct.clk_parent_map, ptr %1, i32 %idxprom, i32 4
  %4 = ptrtoint ptr %index4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %index4, align 4
  %dev5 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %6 = ptrtoint ptr %dev5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev5, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %entry
  %init_name.i = getelementptr inbounds %struct.device, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %if.end.i, label %cond.true.cond.end_crit_edge

cond.true.cond.end_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

if.end.i:                                         ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %7, align 4
  br label %cond.end

cond.end:                                         ; preds = %if.end.i, %cond.true.cond.end_crit_edge, %entry.cond.end_crit_edge
  %cond = phi ptr [ null, %entry.cond.end_crit_edge ], [ %11, %if.end.i ], [ %9, %cond.true.cond.end_crit_edge ]
  %of_node = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 5
  %12 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %of_node, align 4
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %clkspec) #21
  %14 = call ptr @memset(ptr %clkspec, i32 255, i32 72)
  %tobool7.not = icmp eq ptr %13, null
  br i1 %tobool7.not, label %cond.end.if.else_crit_edge, label %land.lhs.true

cond.end.if.else_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true:                                    ; preds = %cond.end
  %tobool8.not = icmp ne ptr %3, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %cmp = icmp sgt i32 %5, -1
  %or.cond = select i1 %tobool8.not, i1 true, i1 %cmp
  br i1 %or.cond, label %while.body.lr.ph.i, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

while.body.lr.ph.i:                               ; preds = %land.lhs.true
  %tobool1.not.i = icmp eq ptr %3, null
  br label %while.body.i

while.body.i:                                     ; preds = %land.lhs.true10.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %np.addr.026.i = phi ptr [ %13, %while.body.lr.ph.i ], [ %17, %land.lhs.true10.i.while.body.i_crit_edge ]
  %index.addr.025.i = phi i32 [ %5, %while.body.lr.ph.i ], [ 0, %land.lhs.true10.i.while.body.i_crit_edge ]
  br i1 %tobool1.not.i, label %while.body.i.if.end.i43_crit_edge, label %if.then.i

while.body.i.if.end.i43_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i43

if.then.i:                                        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = call i32 @of_property_match_string(ptr noundef nonnull %np.addr.026.i, ptr noundef nonnull @.str.159, ptr noundef nonnull %3) #21
  br label %if.end.i43

if.end.i43:                                       ; preds = %if.then.i, %while.body.i.if.end.i43_crit_edge
  %index.addr.1.i = phi i32 [ %call.i, %if.then.i ], [ %index.addr.025.i, %while.body.i.if.end.i43_crit_edge ]
  %call.i.i = call i32 @__of_parse_phandle_with_args(ptr noundef nonnull %np.addr.026.i, ptr noundef nonnull @.str.25, ptr noundef nonnull @.str.26, i32 noundef -1, i32 noundef %index.addr.1.i, ptr noundef nonnull %clkspec) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool3.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool3.not.i, label %if.then, label %if.end5.i

if.end5.i:                                        ; preds = %if.end.i43
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %index.addr.1.i)
  %cmp.i = icmp slt i32 %index.addr.1.i, 0
  %15 = or i1 %tobool1.not.i, %cmp.i
  br i1 %15, label %if.end8.i, label %if.end5.i.if.then15_crit_edge

if.end5.i.if.then15_crit_edge:                    ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then15

if.end8.i:                                        ; preds = %if.end5.i
  %parent.i = getelementptr inbounds %struct.device_node, ptr %np.addr.026.i, i32 0, i32 6
  %16 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %parent.i, align 4
  %cond.i = icmp eq ptr %17, null
  br i1 %cond.i, label %if.end8.i.if.else_crit_edge, label %land.lhs.true10.i

if.end8.i.if.else_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true10.i:                                ; preds = %if.end8.i
  %call11.i = call ptr @of_get_property(ptr noundef nonnull %17, ptr noundef nonnull @.str.160, ptr noundef null) #21
  %tobool12.not.i = icmp eq ptr %call11.i, null
  br i1 %tobool12.not.i, label %land.lhs.true10.i.if.else_crit_edge, label %land.lhs.true10.i.while.body.i_crit_edge

land.lhs.true10.i.while.body.i_crit_edge:         ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

land.lhs.true10.i.if.else_crit_edge:              ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.then:                                          ; preds = %if.end.i43
  call void @mutex_lock_nested(ptr noundef nonnull @of_clk_mutex, i32 noundef 0) #21
  %provider.022.i = load ptr, ptr @of_clk_providers, align 4
  %cmp.not23.i = icmp eq ptr %provider.022.i, @of_clk_providers
  br i1 %cmp.not23.i, label %if.then.of_clk_get_hw_from_clkspec.exit_crit_edge, label %if.then.for.body.i_crit_edge

if.then.for.body.i_crit_edge:                     ; preds = %if.then
  br label %for.body.i

if.then.of_clk_get_hw_from_clkspec.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %of_clk_get_hw_from_clkspec.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then.for.body.i_crit_edge
  %provider.025.i = phi ptr [ %provider.0.i, %for.inc.i.for.body.i_crit_edge ], [ %provider.022.i, %if.then.for.body.i_crit_edge ]
  %hw.024.i = phi ptr [ %hw.1.i, %for.inc.i.for.body.i_crit_edge ], [ inttoptr (i32 -517 to ptr), %if.then.for.body.i_crit_edge ]
  %node.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 1
  %18 = ptrtoint ptr %node.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %node.i, align 4
  %20 = ptrtoint ptr %clkspec to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %clkspec, align 4
  %cmp2.i = icmp eq ptr %19, %21
  br i1 %cmp2.i, label %if.then3.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then3.i:                                       ; preds = %for.body.i
  %get_hw.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 3
  %22 = ptrtoint ptr %get_hw.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %get_hw.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %23, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #23
  %data.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 4
  %24 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %data.i.i, align 4
  %call.i.i45 = call ptr %23(ptr noundef nonnull %clkspec, ptr noundef %25) #21
  br label %__of_clk_get_hw_from_provider.exit.i

if.end.i.i:                                       ; preds = %if.then3.i
  %get.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 2
  %26 = ptrtoint ptr %get.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %get.i.i, align 4
  %data2.i.i = getelementptr inbounds %struct.of_clk_provider, ptr %provider.025.i, i32 0, i32 4
  %28 = ptrtoint ptr %data2.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %data2.i.i, align 4
  %call3.i.i = call ptr %27(ptr noundef nonnull %clkspec, ptr noundef %29) #21
  %cmp.i.i.i = icmp ugt ptr %call3.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge, label %if.end7.i.i

if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__of_clk_get_hw_from_provider.exit.i

if.end7.i.i:                                      ; preds = %if.end.i.i
  %tobool.not.i.i.i = icmp eq ptr %call3.i.i, null
  br i1 %tobool.not.i.i.i, label %if.end7.i.i.of_clk_get_hw_from_clkspec.exit_crit_edge, label %cond.false.i.i.i

if.end7.i.i.of_clk_get_hw_from_clkspec.exit_crit_edge: ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %of_clk_get_hw_from_clkspec.exit

cond.false.i.i.i:                                 ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %30 = ptrtoint ptr %call3.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %call3.i.i, align 4
  %hw.i.i.i = getelementptr inbounds %struct.clk_core, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %hw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw.i.i.i, align 4
  br label %__of_clk_get_hw_from_provider.exit.i

__of_clk_get_hw_from_provider.exit.i:             ; preds = %cond.false.i.i.i, %if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge, %if.then.i.i
  %retval.0.i.i = phi ptr [ %call.i.i45, %if.then.i.i ], [ %call3.i.i, %if.end.i.i.__of_clk_get_hw_from_provider.exit.i_crit_edge ], [ %33, %cond.false.i.i.i ]
  %cmp.i.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge, label %__of_clk_get_hw_from_provider.exit.i.of_clk_get_hw_from_clkspec.exit_crit_edge

__of_clk_get_hw_from_provider.exit.i.of_clk_get_hw_from_clkspec.exit_crit_edge: ; preds = %__of_clk_get_hw_from_provider.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %of_clk_get_hw_from_clkspec.exit

__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge: ; preds = %__of_clk_get_hw_from_provider.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %hw.1.i = phi ptr [ %retval.0.i.i, %__of_clk_get_hw_from_provider.exit.i.for.inc.i_crit_edge ], [ %hw.024.i, %for.body.i.for.inc.i_crit_edge ]
  %34 = ptrtoint ptr %provider.025.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %provider.0.i = load ptr, ptr %provider.025.i, align 4
  %cmp.not.i = icmp eq ptr %provider.0.i, @of_clk_providers
  br i1 %cmp.not.i, label %for.inc.i.of_clk_get_hw_from_clkspec.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.of_clk_get_hw_from_clkspec.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %of_clk_get_hw_from_clkspec.exit

of_clk_get_hw_from_clkspec.exit:                  ; preds = %for.inc.i.of_clk_get_hw_from_clkspec.exit_crit_edge, %__of_clk_get_hw_from_provider.exit.i.of_clk_get_hw_from_clkspec.exit_crit_edge, %if.end7.i.i.of_clk_get_hw_from_clkspec.exit_crit_edge, %if.then.of_clk_get_hw_from_clkspec.exit_crit_edge
  %hw.2.i = phi ptr [ inttoptr (i32 -517 to ptr), %if.then.of_clk_get_hw_from_clkspec.exit_crit_edge ], [ %hw.1.i, %for.inc.i.of_clk_get_hw_from_clkspec.exit_crit_edge ], [ %retval.0.i.i, %__of_clk_get_hw_from_provider.exit.i.of_clk_get_hw_from_clkspec.exit_crit_edge ], [ null, %if.end7.i.i.of_clk_get_hw_from_clkspec.exit_crit_edge ]
  call void @mutex_unlock(ptr noundef nonnull @of_clk_mutex) #21
  %35 = ptrtoint ptr %clkspec to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %clkspec, align 4
  call void @of_node_put(ptr noundef %36) #21
  br label %if.end17

if.else:                                          ; preds = %land.lhs.true10.i.if.else_crit_edge, %if.end8.i.if.else_crit_edge, %cond.end.if.else_crit_edge
  %tobool14.not = icmp eq ptr %3, null
  br i1 %tobool14.not, label %if.else.cleanup_crit_edge, label %if.else.if.then15_crit_edge

if.else.if.then15_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then15

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then15:                                        ; preds = %if.else.if.then15_crit_edge, %if.end5.i.if.then15_crit_edge
  %call16 = call ptr @clk_find_hw(ptr noundef %cond, ptr noundef nonnull %3) #21
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %of_clk_get_hw_from_clkspec.exit
  %hw.0 = phi ptr [ %call16, %if.then15 ], [ %hw.2.i, %of_clk_get_hw_from_clkspec.exit ]
  %cmp.i47 = icmp ugt ptr %hw.0, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i47, label %if.end17.cleanup_crit_edge, label %if.end21

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end21:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  %37 = ptrtoint ptr %hw.0 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %hw.0, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %if.end17.cleanup_crit_edge, %if.else.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi ptr [ %38, %if.end21 ], [ %hw.0, %if.end17.cleanup_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.else.cleanup_crit_edge ], [ inttoptr (i32 -2 to ptr), %land.lhs.true.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %clkspec) #21
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @clk_find_hw(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_pm_runtime_get(ptr nocapture noundef readonly %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rpm_enabled = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %0 = ptrtoint ptr %rpm_enabled to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %rpm_enabled, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %dev = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %3, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %if.then1, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then1:                                         ; preds = %if.end
  %4 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev, align 4
  %usage_count.i = getelementptr inbounds %struct.device, ptr %5, i32 0, i32 12, i32 13
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !757
  tail call void @llvm.prefetch.p0(ptr %usage_count.i, i32 1, i32 3, i32 1) #21
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i, ptr %usage_count.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i) #21, !srcloc !758
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i, label %if.then1.cleanup_crit_edge, label %do.end11.i.i.i.i

if.then1.cleanup_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end11.i.i.i.i:                                 ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !759
  br label %cleanup

cleanup:                                          ; preds = %do.end11.i.i.i.i, %if.then1.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %call.i, %if.then1.cleanup_crit_edge ], [ %call.i, %do.end11.i.i.i.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #16

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_idle(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__clk_lookup_subtree(ptr nocapture noundef readonly %name, ptr noundef readonly %core) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %core, align 4
  %call = tail call i32 @strcmp(ptr noundef %1, ptr noundef %name) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %2 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %children, align 4
  %tobool2.not = icmp eq ptr %3, null
  %add.ptr = getelementptr i8, ptr %3, i32 -104
  %tobool4.not3235 = icmp eq ptr %add.ptr, null
  %tobool4.not32 = or i1 %tobool2.not, %tobool4.not3235
  br i1 %tobool4.not32, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %child.033 = phi ptr [ %add.ptr15, %for.inc.for.body_crit_edge ], [ %add.ptr, %if.end.for.body_crit_edge ]
  %call5 = tail call fastcc ptr @__clk_lookup_subtree(ptr noundef %name, ptr noundef nonnull %child.033)
  %tobool6.not = icmp eq ptr %call5, null
  br i1 %tobool6.not, label %for.inc, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.033, i32 0, i32 27
  %4 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %child_node, align 4
  %tobool11.not = icmp eq ptr %5, null
  %add.ptr15 = getelementptr i8, ptr %5, i32 -104
  %tobool4.not36 = icmp eq ptr %add.ptr15, null
  %tobool4.not = or i1 %tobool11.not, %tobool4.not36
  br i1 %tobool4.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %for.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %core, %entry.cleanup_crit_edge ], [ null, %if.end.cleanup_crit_edge ], [ %call5, %for.body.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_unprepare(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  br label %tailrecurse

tailrecurse:                                      ; preds = %clk_pm_runtime_put.exit, %entry
  %core.tr = phi ptr [ %core, %entry ], [ %37, %clk_pm_runtime_put.exit ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %tailrecurse.if.end_crit_edge, label %land.rhs

tailrecurse.if.end_crit_edge:                     ; preds = %tailrecurse
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %tailrecurse
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 806, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %tailrecurse.if.end_crit_edge
  %tobool24.not = icmp eq ptr %core.tr, null
  br i1 %tobool24.not, label %if.end.return_crit_edge, label %if.end26

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end26:                                         ; preds = %if.end
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 19
  %1 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %prepare_count, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values)
  switch i32 %2, label %if.end26.if.end99.critedge_crit_edge [
    i32 0, label %do.end44
    i32 1, label %land.rhs64
  ], !prof !777

if.end26.if.end99.critedge_crit_edge:             ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end99.critedge

do.end44:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  %4 = ptrtoint ptr %core.tr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %core.tr, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 812, i32 noundef 9, ptr noundef nonnull @.str.55, ptr noundef %5) #21
  br label %return

land.rhs64:                                       ; preds = %if.end26
  %flags = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 15
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and = and i32 %7, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool65.not = icmp eq i32 %and, 0
  br i1 %tobool65.not, label %land.rhs64.if.end99.critedge_crit_edge, label %do.end82, !prof !753

land.rhs64.if.end99.critedge_crit_edge:           ; preds = %land.rhs64
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end99.critedge

do.end82:                                         ; preds = %land.rhs64
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %core.tr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %core.tr, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 816, i32 noundef 9, ptr noundef nonnull @.str.56, ptr noundef %9) #21
  br label %return

if.end99.critedge:                                ; preds = %land.rhs64.if.end99.critedge_crit_edge, %if.end26.if.end99.critedge_crit_edge
  %flags100 = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 15
  %10 = ptrtoint ptr %flags100 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags100, align 4
  %and101 = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and101)
  %tobool102.not = icmp eq i32 %and101, 0
  br i1 %tobool102.not, label %if.end99.critedge.if.end104_crit_edge, label %if.end99.critedge.tailrecurse.i_crit_edge

if.end99.critedge.tailrecurse.i_crit_edge:        ; preds = %if.end99.critedge
  br label %tailrecurse.i

if.end99.critedge.if.end104_crit_edge:            ; preds = %if.end99.critedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end104

tailrecurse.i:                                    ; preds = %if.end64.i, %if.end99.critedge.tailrecurse.i_crit_edge
  %core.tr.i = phi ptr [ %19, %if.end64.i ], [ %core.tr, %if.end99.critedge.tailrecurse.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %12 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i, label %tailrecurse.i.if.end.i_crit_edge, label %land.rhs.i

tailrecurse.i.if.end.i_crit_edge:                 ; preds = %tailrecurse.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %tailrecurse.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 672, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %tailrecurse.i.if.end.i_crit_edge
  %tobool24.not.i = icmp eq ptr %core.tr.i, null
  br i1 %tobool24.not.i, label %if.end.i.if.end104_crit_edge, label %if.end26.i

if.end.i.if.end104_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end104

if.end26.i:                                       ; preds = %if.end.i
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 20
  %13 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %protect_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp28.i = icmp eq i32 %14, 0
  br i1 %cmp28.i, label %do.end44.i, label %if.end60.critedge.i, !prof !754

do.end44.i:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %15 = ptrtoint ptr %core.tr.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %core.tr.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 678, i32 noundef 9, ptr noundef nonnull @.str.53, ptr noundef %16) #21
  br label %if.end104

if.end60.critedge.i:                              ; preds = %if.end26.i
  %dec.i = add i32 %14, -1
  %17 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %dec.i, ptr %protect_count.i, align 4
  %cmp62.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp62.not.i, label %if.end64.i, label %if.end60.critedge.i.if.end104_crit_edge

if.end60.critedge.i.if.end104_crit_edge:          ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end104

if.end64.i:                                       ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core.tr.i, i32 0, i32 6
  %18 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent.i, align 4
  br label %tailrecurse.i

if.end104:                                        ; preds = %if.end60.critedge.i.if.end104_crit_edge, %do.end44.i, %if.end.i.if.end104_crit_edge, %if.end99.critedge.if.end104_crit_edge
  %20 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %prepare_count, align 4
  %dec = add i32 %21, -1
  store i32 %dec, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp106.not = icmp eq i32 %dec, 0
  br i1 %cmp106.not, label %if.end108, label %if.end104.return_crit_edge

if.end104.return_crit_edge:                       ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end108:                                        ; preds = %if.end104
  %enable_count = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 18
  %22 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %enable_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp110.not = icmp eq i32 %23, 0
  br i1 %cmp110.not, label %if.end108.if.end133_crit_edge, label %do.end126, !prof !753

if.end108.if.end133_crit_edge:                    ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end133

do.end126:                                        ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #23
  %24 = ptrtoint ptr %core.tr to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %core.tr, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 825, i32 noundef 9, ptr noundef nonnull @.str.57, ptr noundef %25) #21
  br label %if.end133

if.end133:                                        ; preds = %do.end126, %if.end108.if.end133_crit_edge
  tail call fastcc void @trace_clk_unprepare(ptr noundef nonnull %core.tr)
  %ops = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 1
  %26 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ops, align 4
  %unprepare = getelementptr inbounds %struct.clk_ops, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %unprepare to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %unprepare, align 4
  %tobool141.not = icmp eq ptr %29, null
  br i1 %tobool141.not, label %if.end133.if.end145_crit_edge, label %if.then142

if.end133.if.end145_crit_edge:                    ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end145

if.then142:                                       ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #23
  %hw = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 2
  %30 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw, align 4
  tail call void %29(ptr noundef %31) #21
  br label %if.end145

if.end145:                                        ; preds = %if.then142, %if.end133.if.end145_crit_edge
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 17
  %32 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool.not.i168 = icmp eq i8 %33, 0
  br i1 %tobool.not.i168, label %if.end145.clk_pm_runtime_put.exit_crit_edge, label %if.end.i170

if.end145.clk_pm_runtime_put.exit_crit_edge:      ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_pm_runtime_put.exit

if.end.i170:                                      ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 4
  %34 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dev.i, align 4
  %call.i.i169 = tail call i32 @__pm_runtime_idle(ptr noundef %35, i32 noundef 4) #21
  br label %clk_pm_runtime_put.exit

clk_pm_runtime_put.exit:                          ; preds = %if.end.i170, %if.end145.clk_pm_runtime_put.exit_crit_edge
  tail call fastcc void @trace_clk_unprepare_complete(ptr noundef nonnull %core.tr)
  %parent = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 6
  %36 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %parent, align 4
  br label %tailrecurse

return:                                           ; preds = %if.end104.return_crit_edge, %do.end82, %do.end44, %if.end.return_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_unprepare(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_unprepare, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_unprepare, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !778
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_unprepare, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !779
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !779
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_unprepare, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_unprepare.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_unprepare.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 79, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_unprepare_complete(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_unprepare_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_unprepare_complete, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !780
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_unprepare_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !781
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !781
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_unprepare_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_unprepare_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_unprepare_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 86, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_prepare(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 869, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool24.not = icmp eq ptr %core, null
  br i1 %tobool24.not, label %if.end.cleanup_crit_edge, label %if.end26

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end26:                                         ; preds = %if.end
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 19
  %1 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp27 = icmp eq i32 %2, 0
  br i1 %cmp27, label %if.then28, label %if.end26.if.end46_crit_edge

if.end26.if.end46_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.then28:                                        ; preds = %if.end26
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %3 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %if.then28.if.end32_crit_edge, label %if.end.i

if.then28.if.end32_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

if.end.i:                                         ; preds = %if.then28
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %5 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_resume(ptr noundef %6, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.then1.i, label %if.end.i.if.end32_crit_edge

if.end.i.if.end32_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

if.then1.i:                                       ; preds = %if.end.i
  %7 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %8, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !757
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !758
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.then1.i.cleanup_crit_edge, label %do.end11.i.i.i.i.i

if.then1.i.cleanup_crit_edge:                     ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end11.i.i.i.i.i:                               ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !759
  br label %cleanup

if.end32:                                         ; preds = %if.end.i.if.end32_crit_edge, %if.then28.if.end32_crit_edge
  %parent = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %10 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %parent, align 4
  %call33 = tail call fastcc i32 @clk_core_prepare(ptr noundef %11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end36, label %if.end32.runtime_put_crit_edge

if.end32.runtime_put_crit_edge:                   ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #23
  br label %runtime_put

if.end36:                                         ; preds = %if.end32
  tail call fastcc void @trace_clk_prepare(ptr noundef nonnull %core)
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %12 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %tobool37.not = icmp eq ptr %15, null
  br i1 %tobool37.not, label %if.end42.thread, label %if.end42

if.end42.thread:                                  ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @trace_clk_prepare_complete(ptr noundef nonnull %core)
  br label %if.end46

if.end42:                                         ; preds = %if.end36
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %16 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hw, align 4
  %call41 = tail call i32 %15(ptr noundef %17) #21
  tail call fastcc void @trace_clk_prepare_complete(ptr noundef nonnull %core)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool43.not = icmp eq i32 %call41, 0
  br i1 %tobool43.not, label %if.end42.if.end46_crit_edge, label %unprepare

if.end42.if.end46_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.end46:                                         ; preds = %if.end42.if.end46_crit_edge, %if.end42.thread, %if.end26.if.end46_crit_edge
  %18 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %prepare_count, align 4
  %inc = add i32 %19, 1
  store i32 %inc, ptr %prepare_count, align 4
  %flags = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %20 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags, align 4
  %and = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool48.not = icmp eq i32 %and, 0
  br i1 %tobool48.not, label %if.end46.cleanup_crit_edge, label %if.then49

if.end46.cleanup_crit_edge:                       ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then49:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_rate_protect(ptr noundef nonnull %core)
  br label %cleanup

unprepare:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #23
  %22 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %parent, align 4
  tail call fastcc void @clk_core_unprepare(ptr noundef %23)
  br label %runtime_put

runtime_put:                                      ; preds = %unprepare, %if.end32.runtime_put_crit_edge
  %ret.1 = phi i32 [ %call33, %if.end32.runtime_put_crit_edge ], [ %call41, %unprepare ]
  %24 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.not.i71 = icmp eq i8 %25, 0
  br i1 %tobool.not.i71, label %runtime_put.cleanup_crit_edge, label %if.end.i74

runtime_put.cleanup_crit_edge:                    ; preds = %runtime_put
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i74:                                       ; preds = %runtime_put
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i72 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %26 = ptrtoint ptr %dev.i72 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev.i72, align 4
  %call.i.i73 = tail call i32 @__pm_runtime_idle(ptr noundef %27, i32 noundef 4) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end.i74, %runtime_put.cleanup_crit_edge, %if.then49, %if.end46.cleanup_crit_edge, %do.end11.i.i.i.i.i, %if.then1.i.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.then49 ], [ 0, %if.end46.cleanup_crit_edge ], [ %call.i.i, %if.then1.i.cleanup_crit_edge ], [ %call.i.i, %do.end11.i.i.i.i.i ], [ %ret.1, %runtime_put.cleanup_crit_edge ], [ %ret.1, %if.end.i74 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_prepare(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_prepare, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_prepare, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !782
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_prepare, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !783
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !783
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_prepare, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_prepare.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_prepare.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 65, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_prepare_complete(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_prepare_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_prepare_complete, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !784
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_prepare_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !785
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !785
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_prepare_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_prepare_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_prepare_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 72, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_disable(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.end108, %entry
  %core.tr = phi ptr [ %core, %entry ], [ %19, %if.end108 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %tailrecurse.if.end_crit_edge, label %land.rhs

tailrecurse.if.end_crit_edge:                     ; preds = %tailrecurse
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %tailrecurse
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @enable_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 948, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %tailrecurse.if.end_crit_edge
  %tobool24.not = icmp eq ptr %core.tr, null
  br i1 %tobool24.not, label %if.end.return_crit_edge, label %if.end26

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end26:                                         ; preds = %if.end
  %enable_count = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 18
  %1 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %enable_count, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.161)
  switch i32 %2, label %if.end99.critedge [
    i32 0, label %do.end44
    i32 1, label %land.rhs64
  ], !prof !777

do.end44:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  %4 = ptrtoint ptr %core.tr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %core.tr, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 953, i32 noundef 9, ptr noundef nonnull @.str.61, ptr noundef %5) #21
  br label %return

land.rhs64:                                       ; preds = %if.end26
  %flags = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 15
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and = and i32 %7, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool65.not = icmp eq i32 %and, 0
  br i1 %tobool65.not, label %if.end103, label %do.end82, !prof !753

do.end82:                                         ; preds = %land.rhs64
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %core.tr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %core.tr, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 957, i32 noundef 9, ptr noundef nonnull @.str.62, ptr noundef %9) #21
  br label %return

if.end99.critedge:                                ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  %dec = add i32 %2, -1
  %10 = ptrtoint ptr %enable_count to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %dec, ptr %enable_count, align 4
  br label %return

if.end103:                                        ; preds = %land.rhs64
  %11 = ptrtoint ptr %enable_count to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %enable_count, align 4
  tail call fastcc void @trace_clk_disable_rcuidle(ptr noundef nonnull %core.tr)
  %ops = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 1
  %12 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops, align 4
  %disable = getelementptr inbounds %struct.clk_ops, ptr %13, i32 0, i32 5
  %14 = ptrtoint ptr %disable to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %disable, align 4
  %tobool104.not = icmp eq ptr %15, null
  br i1 %tobool104.not, label %if.end103.if.end108_crit_edge, label %if.then105

if.end103.if.end108_crit_edge:                    ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end108

if.then105:                                       ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #23
  %hw = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 2
  %16 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hw, align 4
  tail call void %15(ptr noundef %17) #21
  br label %if.end108

if.end108:                                        ; preds = %if.then105, %if.end103.if.end108_crit_edge
  tail call fastcc void @trace_clk_disable_complete_rcuidle(ptr noundef nonnull %core.tr)
  %parent = getelementptr inbounds %struct.clk_core, ptr %core.tr, i32 0, i32 6
  %18 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent, align 4
  br label %tailrecurse

return:                                           ; preds = %if.end99.critedge, %do.end82, %do.end44, %if.end.return_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_disable_rcuidle(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_disable_rcuidle, %do.body)) #21
          to label %if.end53 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i59 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i59
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end53_crit_edge, label %if.end

cpu_online.exit.if.end53_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

if.end:                                           ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %12, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.if.end35_crit_edge, label %land.rhs

if.end.if.end35_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

land.rhs:                                         ; preds = %if.end
  %.b56 = load i1, ptr @trace_clk_disable_rcuidle.__already_done, align 1
  br i1 %.b56, label %land.rhs.if.end35_crit_edge, label %if.then12, !prof !753

land.rhs.if.end35_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_disable_rcuidle.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 51, i32 noundef 9, ptr noundef null) #21
  br label %if.end35

if.end35:                                         ; preds = %if.then12, %land.rhs.if.end35_crit_edge, %if.end.if.end35_crit_edge
  %13 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %16, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !786
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @tracepoint_srcu) #21
  tail call void @rcu_irq_enter_irqson() #21
  %17 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %17, null
  br i1 %tobool.not.i, label %if.end35.__traceiter_clk_disable.exit_crit_edge, label %if.end35.do.body2.i_crit_edge

if.end35.do.body2.i_crit_edge:                    ; preds = %if.end35
  br label %do.body2.i

if.end35.__traceiter_clk_disable.exit_crit_edge:  ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %__traceiter_clk_disable.exit

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end35.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %17, %if.end35.do.body2.i_crit_edge ]
  %18 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %20 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data.i, align 4
  tail call void %19(ptr noundef %21, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %22 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %23, null
  br i1 %tobool9.not.i, label %do.body2.i.__traceiter_clk_disable.exit_crit_edge, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

do.body2.i.__traceiter_clk_disable.exit_crit_edge: ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__traceiter_clk_disable.exit

__traceiter_clk_disable.exit:                     ; preds = %do.body2.i.__traceiter_clk_disable.exit_crit_edge, %if.end35.__traceiter_clk_disable.exit_crit_edge
  tail call void @rcu_irq_exit_irqson() #21
  tail call void @__srcu_read_unlock(ptr noundef nonnull @tracepoint_srcu, i32 noundef %call.i) #21
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !787
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i57 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i57 to ptr
  %preempt_count.i.i58 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i58 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i58, align 4
  %sub.i = add i32 %27, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i58, align 4
  br label %if.end53

if.end53:                                         ; preds = %__traceiter_clk_disable.exit, %cpu_online.exit.if.end53_crit_edge, %entry
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_disable_complete_rcuidle(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_disable_complete_rcuidle, %do.body)) #21
          to label %if.end53 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i59 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i59
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end53_crit_edge, label %if.end

cpu_online.exit.if.end53_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

if.end:                                           ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %12, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.if.end35_crit_edge, label %land.rhs

if.end.if.end35_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

land.rhs:                                         ; preds = %if.end
  %.b56 = load i1, ptr @trace_clk_disable_complete_rcuidle.__already_done, align 1
  br i1 %.b56, label %land.rhs.if.end35_crit_edge, label %if.then12, !prof !753

land.rhs.if.end35_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_disable_complete_rcuidle.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 58, i32 noundef 9, ptr noundef null) #21
  br label %if.end35

if.end35:                                         ; preds = %if.then12, %land.rhs.if.end35_crit_edge, %if.end.if.end35_crit_edge
  %13 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %16, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !788
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @tracepoint_srcu) #21
  tail call void @rcu_irq_enter_irqson() #21
  %17 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %17, null
  br i1 %tobool.not.i, label %if.end35.__traceiter_clk_disable_complete.exit_crit_edge, label %if.end35.do.body2.i_crit_edge

if.end35.do.body2.i_crit_edge:                    ; preds = %if.end35
  br label %do.body2.i

if.end35.__traceiter_clk_disable_complete.exit_crit_edge: ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %__traceiter_clk_disable_complete.exit

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end35.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %17, %if.end35.do.body2.i_crit_edge ]
  %18 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %20 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data.i, align 4
  tail call void %19(ptr noundef %21, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %22 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %23, null
  br i1 %tobool9.not.i, label %do.body2.i.__traceiter_clk_disable_complete.exit_crit_edge, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

do.body2.i.__traceiter_clk_disable_complete.exit_crit_edge: ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__traceiter_clk_disable_complete.exit

__traceiter_clk_disable_complete.exit:            ; preds = %do.body2.i.__traceiter_clk_disable_complete.exit_crit_edge, %if.end35.__traceiter_clk_disable_complete.exit_crit_edge
  tail call void @rcu_irq_exit_irqson() #21
  tail call void @__srcu_read_unlock(ptr noundef nonnull @tracepoint_srcu, i32 noundef %call.i) #21
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !789
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i57 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i57 to ptr
  %preempt_count.i.i58 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i58 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i58, align 4
  %sub.i = add i32 %27, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i58, align 4
  br label %if.end53

if.end53:                                         ; preds = %__traceiter_clk_disable_complete.exit, %cpu_online.exit.if.end53_crit_edge, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_irq_enter_irqson() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_irq_exit_irqson() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__srcu_read_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__srcu_read_unlock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_enable(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @enable_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1007, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool24.not = icmp eq ptr %core, null
  br i1 %tobool24.not, label %if.end.cleanup_crit_edge, label %if.end26

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end26:                                         ; preds = %if.end
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 19
  %1 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp28 = icmp eq i32 %2, 0
  br i1 %cmp28, label %do.end44, label %if.end60, !prof !754

do.end44:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  %3 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %core, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1013, i32 noundef 9, ptr noundef nonnull @.str.64, ptr noundef %4) #21
  br label %cleanup

if.end60:                                         ; preds = %if.end26
  %enable_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 18
  %5 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %enable_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp61 = icmp eq i32 %6, 0
  br i1 %cmp61, label %if.then62, label %if.end60.if.end77_crit_edge

if.end60.if.end77_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end77

if.then62:                                        ; preds = %if.end60
  %parent = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %7 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %parent, align 4
  %call63 = tail call fastcc i32 @clk_core_enable(ptr noundef %8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %if.end66, label %if.then62.cleanup_crit_edge

if.then62.cleanup_crit_edge:                      ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end66:                                         ; preds = %if.then62
  tail call fastcc void @trace_clk_enable_rcuidle(ptr noundef nonnull %core)
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %9 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ops, align 4
  %enable = getelementptr inbounds %struct.clk_ops, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %enable to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %enable, align 4
  %tobool67.not = icmp eq ptr %12, null
  br i1 %tobool67.not, label %if.end72.thread, label %if.end72

if.end72.thread:                                  ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @trace_clk_enable_complete_rcuidle(ptr noundef nonnull %core)
  br label %if.end77

if.end72:                                         ; preds = %if.end66
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %13 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hw, align 4
  %call71 = tail call i32 %12(ptr noundef %14) #21
  tail call fastcc void @trace_clk_enable_complete_rcuidle(ptr noundef nonnull %core)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %tobool73.not = icmp eq i32 %call71, 0
  br i1 %tobool73.not, label %if.end72.if.end77_crit_edge, label %if.then74

if.end72.if.end77_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end77

if.then74:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #23
  %15 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %parent, align 4
  tail call fastcc void @clk_core_disable(ptr noundef %16)
  br label %cleanup

if.end77:                                         ; preds = %if.end72.if.end77_crit_edge, %if.end72.thread, %if.end60.if.end77_crit_edge
  %17 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %enable_count, align 4
  %inc = add i32 %18, 1
  store i32 %inc, ptr %enable_count, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end77, %if.then74, %if.then62.cleanup_crit_edge, %do.end44, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ -108, %do.end44 ], [ %call71, %if.then74 ], [ 0, %if.end77 ], [ 0, %if.end.cleanup_crit_edge ], [ %call63, %if.then62.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_enable_rcuidle(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_enable, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_enable_rcuidle, %do.body)) #21
          to label %if.end53 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i59 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i59
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end53_crit_edge, label %if.end

cpu_online.exit.if.end53_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

if.end:                                           ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %12, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.if.end35_crit_edge, label %land.rhs

if.end.if.end35_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

land.rhs:                                         ; preds = %if.end
  %.b56 = load i1, ptr @trace_clk_enable_rcuidle.__already_done, align 1
  br i1 %.b56, label %land.rhs.if.end35_crit_edge, label %if.then12, !prof !753

land.rhs.if.end35_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_enable_rcuidle.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 37, i32 noundef 9, ptr noundef null) #21
  br label %if.end35

if.end35:                                         ; preds = %if.then12, %land.rhs.if.end35_crit_edge, %if.end.if.end35_crit_edge
  %13 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %16, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !790
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @tracepoint_srcu) #21
  tail call void @rcu_irq_enter_irqson() #21
  %17 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_enable, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %17, null
  br i1 %tobool.not.i, label %if.end35.__traceiter_clk_enable.exit_crit_edge, label %if.end35.do.body2.i_crit_edge

if.end35.do.body2.i_crit_edge:                    ; preds = %if.end35
  br label %do.body2.i

if.end35.__traceiter_clk_enable.exit_crit_edge:   ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %__traceiter_clk_enable.exit

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end35.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %17, %if.end35.do.body2.i_crit_edge ]
  %18 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %20 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data.i, align 4
  tail call void %19(ptr noundef %21, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %22 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %23, null
  br i1 %tobool9.not.i, label %do.body2.i.__traceiter_clk_enable.exit_crit_edge, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

do.body2.i.__traceiter_clk_enable.exit_crit_edge: ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__traceiter_clk_enable.exit

__traceiter_clk_enable.exit:                      ; preds = %do.body2.i.__traceiter_clk_enable.exit_crit_edge, %if.end35.__traceiter_clk_enable.exit_crit_edge
  tail call void @rcu_irq_exit_irqson() #21
  tail call void @__srcu_read_unlock(ptr noundef nonnull @tracepoint_srcu, i32 noundef %call.i) #21
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !791
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i57 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i57 to ptr
  %preempt_count.i.i58 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i58 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i58, align 4
  %sub.i = add i32 %27, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i58, align 4
  br label %if.end53

if.end53:                                         ; preds = %__traceiter_clk_enable.exit, %cpu_online.exit.if.end53_crit_edge, %entry
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_enable_complete_rcuidle(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_enable_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_enable_complete_rcuidle, %do.body)) #21
          to label %if.end53 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i59 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i59
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end53_crit_edge, label %if.end

cpu_online.exit.if.end53_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

if.end:                                           ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %12, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.if.end35_crit_edge, label %land.rhs

if.end.if.end35_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

land.rhs:                                         ; preds = %if.end
  %.b56 = load i1, ptr @trace_clk_enable_complete_rcuidle.__already_done, align 1
  br i1 %.b56, label %land.rhs.if.end35_crit_edge, label %if.then12, !prof !753

land.rhs.if.end35_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_enable_complete_rcuidle.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 44, i32 noundef 9, ptr noundef null) #21
  br label %if.end35

if.end35:                                         ; preds = %if.then12, %land.rhs.if.end35_crit_edge, %if.end.if.end35_crit_edge
  %13 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %16, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !792
  %call.i = tail call i32 @__srcu_read_lock(ptr noundef nonnull @tracepoint_srcu) #21
  tail call void @rcu_irq_enter_irqson() #21
  %17 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_enable_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %17, null
  br i1 %tobool.not.i, label %if.end35.__traceiter_clk_enable_complete.exit_crit_edge, label %if.end35.do.body2.i_crit_edge

if.end35.do.body2.i_crit_edge:                    ; preds = %if.end35
  br label %do.body2.i

if.end35.__traceiter_clk_enable_complete.exit_crit_edge: ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %__traceiter_clk_enable_complete.exit

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end35.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %17, %if.end35.do.body2.i_crit_edge ]
  %18 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %20 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data.i, align 4
  tail call void %19(ptr noundef %21, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %22 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %23, null
  br i1 %tobool9.not.i, label %do.body2.i.__traceiter_clk_enable_complete.exit_crit_edge, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

do.body2.i.__traceiter_clk_enable_complete.exit_crit_edge: ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__traceiter_clk_enable_complete.exit

__traceiter_clk_enable_complete.exit:             ; preds = %do.body2.i.__traceiter_clk_enable_complete.exit_crit_edge, %if.end35.__traceiter_clk_enable_complete.exit_crit_edge
  tail call void @rcu_irq_exit_irqson() #21
  tail call void @__srcu_read_unlock(ptr noundef nonnull @tracepoint_srcu, i32 noundef %call.i) #21
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !793
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i57 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i57 to ptr
  %preempt_count.i.i58 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i58 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i58, align 4
  %sub.i = add i32 %27, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i58, align 4
  br label %if.end53

if.end53:                                         ; preds = %__traceiter_clk_enable_complete.exit, %cpu_online.exit.if.end53_crit_edge, %entry
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_disable_unused_subtree(ptr noundef %core) unnamed_addr #7 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1245, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %1 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %children, align 4
  %tobool25.not = icmp eq ptr %2, null
  %add.ptr = getelementptr i8, ptr %2, i32 -104
  %tobool27.not116118 = icmp eq ptr %add.ptr, null
  %tobool27.not116 = or i1 %tobool25.not, %tobool27.not116118
  br i1 %tobool27.not116, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %child.0117 = phi ptr [ %add.ptr34, %for.body.for.body_crit_edge ], [ %add.ptr, %if.end.for.body_crit_edge ]
  tail call fastcc void @clk_disable_unused_subtree(ptr noundef nonnull %child.0117) #27
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.0117, i32 0, i32 27
  %3 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %child_node, align 4
  %tobool30.not = icmp eq ptr %4, null
  %add.ptr34 = getelementptr i8, ptr %4, i32 -104
  %tobool27.not128 = icmp eq ptr %add.ptr34, null
  %tobool27.not = or i1 %tobool30.not, %tobool27.not128
  br i1 %tobool27.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  %flags38 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %5 = ptrtoint ptr %flags38 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags38, align 4
  %and = and i32 %6, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool39.not = icmp eq i32 %and, 0
  br i1 %tobool39.not, label %for.end.if.end42_crit_edge, label %if.then40

for.end.if.end42_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end42

if.then40:                                        ; preds = %for.end
  %parent = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %7 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %parent, align 4
  %call.i103 = tail call fastcc i32 @clk_core_prepare_lock(ptr noundef %8) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i103)
  %tobool.not.i = icmp eq i32 %call.i103, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then40.if.end42_crit_edge

if.then40.if.end42_crit_edge:                     ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end42

if.end.i:                                         ; preds = %if.then40
  %call1.i = tail call fastcc i32 @clk_core_enable_lock(ptr noundef %8) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end.i.if.end42_crit_edge, label %if.then3.i

if.end.i.if.end42_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end42

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %8) #21
  br label %if.end42

if.end42:                                         ; preds = %if.then3.i, %if.end.i.if.end42_crit_edge, %if.then40.if.end42_crit_edge, %for.end.if.end42_crit_edge
  %call43 = tail call fastcc i32 @clk_pm_runtime_get(ptr noundef %core)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %if.end46, label %if.end42.unprepare_out_crit_edge

if.end42.unprepare_out_crit_edge:                 ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #23
  br label %unprepare_out

if.end46:                                         ; preds = %if.end42
  %call47 = tail call fastcc i32 @clk_enable_lock()
  %enable_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 18
  %9 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %enable_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool48.not = icmp eq i32 %10, 0
  br i1 %tobool48.not, label %if.end50, label %if.end46.unlock_out_crit_edge

if.end46.unlock_out_crit_edge:                    ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock_out

if.end50:                                         ; preds = %if.end46
  %11 = ptrtoint ptr %flags38 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags38, align 4
  %and52 = and i32 %12, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %if.end55, label %if.end50.unlock_out_crit_edge

if.end50.unlock_out_crit_edge:                    ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock_out

if.end55:                                         ; preds = %if.end50
  %ops.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %13 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.clk_ops, ptr %14, i32 0, i32 6
  %15 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %is_enabled.i, align 4
  %tobool.not.i104 = icmp eq ptr %16, null
  br i1 %tobool.not.i104, label %if.end55.unlock_out_crit_edge, label %if.end.i106

if.end55.unlock_out_crit_edge:                    ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock_out

if.end.i106:                                      ; preds = %if.end55
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %17 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool2.not.i105 = icmp eq i8 %18, 0
  br i1 %tobool2.not.i105, label %if.end.i106.done.i_crit_edge, label %if.then3.i107

if.end.i106.done.i_crit_edge:                     ; preds = %if.end.i106
  call void @__sanitizer_cov_trace_pc() #23
  br label %done.i

if.then3.i107:                                    ; preds = %if.end.i106
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %19 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %20, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !760
  %22 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev.i, align 4
  %runtime_status.i.i = getelementptr inbounds %struct.device, ptr %23, i32 0, i32 12, i32 18
  %24 = ptrtoint ptr %runtime_status.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %runtime_status.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i.i = icmp eq i32 %25, 0
  br i1 %cmp.i.i, label %if.then3.i107.done.i_crit_edge, label %pm_runtime_active.exit.i

if.then3.i107.done.i_crit_edge:                   ; preds = %if.then3.i107
  call void @__sanitizer_cov_trace_pc() #23
  br label %done.i

pm_runtime_active.exit.i:                         ; preds = %if.then3.i107
  %disable_depth.i.i = getelementptr inbounds %struct.device, ptr %23, i32 0, i32 12, i32 15
  %26 = ptrtoint ptr %disable_depth.i.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %bf.load.i.i = load i16, ptr %disable_depth.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8191, i16 %bf.load.i.i)
  %tobool.i.i = icmp ugt i16 %bf.load.i.i, 8191
  br i1 %tobool.i.i, label %pm_runtime_active.exit.i.done.i_crit_edge, label %done.i.thread

pm_runtime_active.exit.i.done.i_crit_edge:        ; preds = %pm_runtime_active.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %done.i

done.i:                                           ; preds = %pm_runtime_active.exit.i.done.i_crit_edge, %if.then3.i107.done.i_crit_edge, %if.end.i106.done.i_crit_edge
  %27 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ops.i, align 4
  %is_enabled9.i = getelementptr inbounds %struct.clk_ops, ptr %28, i32 0, i32 6
  %29 = ptrtoint ptr %is_enabled9.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %is_enabled9.i, align 4
  %hw.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %31 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %hw.i, align 4
  %call10.i = tail call i32 %30(ptr noundef %32) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.i.not = icmp eq i32 %call10.i, 0
  %33 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool13.not.i = icmp eq i8 %34, 0
  br i1 %tobool13.not.i, label %clk_core_is_enabled.exit, label %if.then14.i

done.i.thread:                                    ; preds = %pm_runtime_active.exit.i
  %35 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool13.not.i120 = icmp eq i8 %36, 0
  br i1 %tobool13.not.i120, label %done.i.thread.unlock_out_crit_edge, label %if.then14.i.thread

done.i.thread.unlock_out_crit_edge:               ; preds = %done.i.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock_out

if.then14.i.thread:                               ; preds = %done.i.thread
  call void @__sanitizer_cov_trace_pc() #23
  %dev15.i125 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %37 = ptrtoint ptr %dev15.i125 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dev15.i125, align 4
  %call.i.i126 = tail call i32 @__pm_runtime_idle(ptr noundef %38, i32 noundef 5) #21
  br label %unlock_out

if.then14.i:                                      ; preds = %done.i
  %dev15.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %39 = ptrtoint ptr %dev15.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dev15.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_idle(ptr noundef %40, i32 noundef 5) #21
  br i1 %tobool11.i.not, label %if.then14.i.unlock_out_crit_edge, label %if.then14.i.if.then57_crit_edge

if.then14.i.if.then57_crit_edge:                  ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then57

if.then14.i.unlock_out_crit_edge:                 ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock_out

clk_core_is_enabled.exit:                         ; preds = %done.i
  br i1 %tobool11.i.not, label %clk_core_is_enabled.exit.unlock_out_crit_edge, label %clk_core_is_enabled.exit.if.then57_crit_edge

clk_core_is_enabled.exit.if.then57_crit_edge:     ; preds = %clk_core_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then57

clk_core_is_enabled.exit.unlock_out_crit_edge:    ; preds = %clk_core_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock_out

if.then57:                                        ; preds = %clk_core_is_enabled.exit.if.then57_crit_edge, %if.then14.i.if.then57_crit_edge
  tail call fastcc void @trace_clk_disable(ptr noundef %core)
  %41 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ops.i, align 4
  %disable_unused = getelementptr inbounds %struct.clk_ops, ptr %42, i32 0, i32 7
  %43 = ptrtoint ptr %disable_unused to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %disable_unused, align 4
  %tobool58.not = icmp eq ptr %44, null
  br i1 %tobool58.not, label %if.else, label %if.then57.if.end69.sink.split_crit_edge

if.then57.if.end69.sink.split_crit_edge:          ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69.sink.split

if.else:                                          ; preds = %if.then57
  %disable = getelementptr inbounds %struct.clk_ops, ptr %42, i32 0, i32 5
  %45 = ptrtoint ptr %disable to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %disable, align 4
  %tobool63.not = icmp eq ptr %46, null
  br i1 %tobool63.not, label %if.else.if.end69_crit_edge, label %if.else.if.end69.sink.split_crit_edge

if.else.if.end69.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69.sink.split

if.else.if.end69_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end69.sink.split:                              ; preds = %if.else.if.end69.sink.split_crit_edge, %if.then57.if.end69.sink.split_crit_edge
  %.sink127 = phi ptr [ %44, %if.then57.if.end69.sink.split_crit_edge ], [ %46, %if.else.if.end69.sink.split_crit_edge ]
  %hw67 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %47 = ptrtoint ptr %hw67 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %hw67, align 4
  tail call void %.sink127(ptr noundef %48) #21
  br label %if.end69

if.end69:                                         ; preds = %if.end69.sink.split, %if.else.if.end69_crit_edge
  tail call fastcc void @trace_clk_disable_complete(ptr noundef %core)
  br label %unlock_out

unlock_out:                                       ; preds = %if.end69, %clk_core_is_enabled.exit.unlock_out_crit_edge, %if.then14.i.unlock_out_crit_edge, %if.then14.i.thread, %done.i.thread.unlock_out_crit_edge, %if.end55.unlock_out_crit_edge, %if.end50.unlock_out_crit_edge, %if.end46.unlock_out_crit_edge
  %49 = load ptr, ptr @enable_owner, align 4
  %50 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 2
  %52 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %49, %53
  br i1 %cmp.not.i, label %unlock_out.if.end27.i_crit_edge, label %land.rhs.i

unlock_out.if.end27.i_crit_edge:                  ; preds = %unlock_out
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %unlock_out
  %.b98.i = load i1, ptr @clk_enable_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i108, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i108:                                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 190, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i108, %land.rhs.i.if.end27.i_crit_edge, %unlock_out.if.end27.i_crit_edge
  %54 = load i32, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %cmp36.i = icmp eq i32 %54, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_enable_unlock.__already_done.156, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done.156, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 191, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %55 = load i32, ptr @enable_refcnt, align 4
  %dec.i = add i32 %55, -1
  store i32 %dec.i, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_enable_unlock.exit_crit_edge

if.end81.i.clk_enable_unlock.exit_crit_edge:      ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_enable_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @enable_owner, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @enable_lock, i32 noundef %call47) #21
  br label %clk_enable_unlock.exit

clk_enable_unlock.exit:                           ; preds = %if.end91.i, %if.end81.i.clk_enable_unlock.exit_crit_edge
  %rpm_enabled.i109 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %56 = ptrtoint ptr %rpm_enabled.i109 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %rpm_enabled.i109, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %57)
  %tobool.not.i110 = icmp eq i8 %57, 0
  br i1 %tobool.not.i110, label %clk_enable_unlock.exit.unprepare_out_crit_edge, label %if.end.i113

clk_enable_unlock.exit.unprepare_out_crit_edge:   ; preds = %clk_enable_unlock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %unprepare_out

if.end.i113:                                      ; preds = %clk_enable_unlock.exit
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i111 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %58 = ptrtoint ptr %dev.i111 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %dev.i111, align 4
  %call.i.i112 = tail call i32 @__pm_runtime_idle(ptr noundef %59, i32 noundef 4) #21
  br label %unprepare_out

unprepare_out:                                    ; preds = %if.end.i113, %clk_enable_unlock.exit.unprepare_out_crit_edge, %if.end42.unprepare_out_crit_edge
  %60 = ptrtoint ptr %flags38 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %flags38, align 4
  %and72 = and i32 %61, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and72)
  %tobool73.not = icmp eq i32 %and72, 0
  br i1 %tobool73.not, label %unprepare_out.if.end76_crit_edge, label %if.then74

unprepare_out.if.end76_crit_edge:                 ; preds = %unprepare_out
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end76

if.then74:                                        ; preds = %unprepare_out
  call void @__sanitizer_cov_trace_pc() #23
  %parent75 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %62 = ptrtoint ptr %parent75 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %parent75, align 4
  tail call fastcc void @clk_core_disable_lock(ptr noundef %63) #21
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %63) #21
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %unprepare_out.if.end76_crit_edge
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_unprepare_unused_subtree(ptr noundef %core) unnamed_addr #7 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1214, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %1 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %children, align 4
  %tobool25.not = icmp eq ptr %2, null
  %add.ptr = getelementptr i8, ptr %2, i32 -104
  %tobool27.not8789 = icmp eq ptr %add.ptr, null
  %tobool27.not87 = or i1 %tobool25.not, %tobool27.not8789
  br i1 %tobool27.not87, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %child.088 = phi ptr [ %add.ptr34, %for.body.for.body_crit_edge ], [ %add.ptr, %if.end.for.body_crit_edge ]
  tail call fastcc void @clk_unprepare_unused_subtree(ptr noundef nonnull %child.088) #27
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.088, i32 0, i32 27
  %3 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %child_node, align 4
  %tobool30.not = icmp eq ptr %4, null
  %add.ptr34 = getelementptr i8, ptr %4, i32 -104
  %tobool27.not91 = icmp eq ptr %add.ptr34, null
  %tobool27.not = or i1 %tobool30.not, %tobool27.not91
  br i1 %tobool27.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 19
  %5 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool38.not = icmp eq i32 %6, 0
  br i1 %tobool38.not, label %if.end40, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end40:                                         ; preds = %for.end
  %flags = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags, align 4
  %and = and i32 %8, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool41.not = icmp eq i32 %and, 0
  br i1 %tobool41.not, label %if.end43, label %if.end40.cleanup_crit_edge

if.end40.cleanup_crit_edge:                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end43:                                         ; preds = %if.end40
  %call44 = tail call fastcc i32 @clk_pm_runtime_get(ptr noundef %core)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %if.end47, label %if.end43.cleanup_crit_edge

if.end43.cleanup_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end47:                                         ; preds = %if.end43
  %call48 = tail call fastcc zeroext i1 @clk_core_is_prepared(ptr noundef %core)
  br i1 %call48, label %if.then49, label %if.end47.if.end62_crit_edge

if.end47.if.end62_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62

if.then49:                                        ; preds = %if.end47
  tail call fastcc void @trace_clk_unprepare(ptr noundef %core)
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %9 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ops, align 4
  %unprepare_unused = getelementptr inbounds %struct.clk_ops, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %unprepare_unused to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %unprepare_unused, align 4
  %tobool50.not = icmp eq ptr %12, null
  br i1 %tobool50.not, label %if.else, label %if.then49.if.end61.sink.split_crit_edge

if.then49.if.end61.sink.split_crit_edge:          ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61.sink.split

if.else:                                          ; preds = %if.then49
  %unprepare = getelementptr inbounds %struct.clk_ops, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %unprepare to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %unprepare, align 4
  %tobool55.not = icmp eq ptr %14, null
  br i1 %tobool55.not, label %if.else.if.end61_crit_edge, label %if.else.if.end61.sink.split_crit_edge

if.else.if.end61.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61.sink.split

if.else.if.end61_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61

if.end61.sink.split:                              ; preds = %if.else.if.end61.sink.split_crit_edge, %if.then49.if.end61.sink.split_crit_edge
  %.sink90 = phi ptr [ %12, %if.then49.if.end61.sink.split_crit_edge ], [ %14, %if.else.if.end61.sink.split_crit_edge ]
  %hw59 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %15 = ptrtoint ptr %hw59 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw59, align 4
  tail call void %.sink90(ptr noundef %16) #21
  br label %if.end61

if.end61:                                         ; preds = %if.end61.sink.split, %if.else.if.end61_crit_edge
  tail call fastcc void @trace_clk_unprepare_complete(ptr noundef %core)
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end47.if.end62_crit_edge
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %17 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.i = icmp eq i8 %18, 0
  br i1 %tobool.not.i, label %if.end62.cleanup_crit_edge, label %if.end.i

if.end62.cleanup_crit_edge:                       ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %19 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dev.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_idle(ptr noundef %20, i32 noundef 4) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %if.end62.cleanup_crit_edge, %if.end43.cleanup_crit_edge, %if.end40.cleanup_crit_edge, %for.end.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_disable(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_disable, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !794
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !795
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !795
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_disable.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_disable.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 51, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_disable_complete(ptr noundef %core) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_disable_complete, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !796
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !797
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !797
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_disable_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_disable_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_disable_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 58, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__clk_recalc_accuracies(ptr nocapture noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1540, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %parent = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %1 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %parent, align 4
  %tobool24.not = icmp eq ptr %2, null
  br i1 %tobool24.not, label %if.end.if.end27_crit_edge, label %if.then25

if.end.if.end27_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27

if.then25:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %accuracy = getelementptr inbounds %struct.clk_core, ptr %2, i32 0, i32 23
  %3 = ptrtoint ptr %accuracy to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %accuracy, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %if.end.if.end27_crit_edge
  %parent_accuracy.0 = phi i32 [ %4, %if.then25 ], [ 0, %if.end.if.end27_crit_edge ]
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %5 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops, align 4
  %recalc_accuracy = getelementptr inbounds %struct.clk_ops, ptr %6, i32 0, i32 17
  %7 = ptrtoint ptr %recalc_accuracy to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %recalc_accuracy, align 4
  %tobool28.not = icmp eq ptr %8, null
  br i1 %tobool28.not, label %if.end27.if.end35_crit_edge, label %if.then29

if.end27.if.end35_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.then29:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #23
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %9 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw, align 4
  %call32 = tail call i32 %8(ptr noundef %10, i32 noundef %parent_accuracy.0) #21
  br label %if.end35

if.end35:                                         ; preds = %if.then29, %if.end27.if.end35_crit_edge
  %call32.sink = phi i32 [ %call32, %if.then29 ], [ %parent_accuracy.0, %if.end27.if.end35_crit_edge ]
  %11 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 23
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %call32.sink, ptr %11, align 4
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %13 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %children, align 4
  %tobool37.not = icmp eq ptr %14, null
  %add.ptr = getelementptr i8, ptr %14, i32 -104
  %tobool39.not6971 = icmp eq ptr %add.ptr, null
  %tobool39.not69 = or i1 %tobool37.not, %tobool39.not6971
  br i1 %tobool39.not69, label %if.end35.for.end_crit_edge, label %if.end35.for.body_crit_edge

if.end35.for.body_crit_edge:                      ; preds = %if.end35
  br label %for.body

if.end35.for.end_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end35.for.body_crit_edge
  %child.070 = phi ptr [ %add.ptr46, %for.body.for.body_crit_edge ], [ %add.ptr, %if.end35.for.body_crit_edge ]
  tail call fastcc void @__clk_recalc_accuracies(ptr noundef nonnull %child.070)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.070, i32 0, i32 27
  %15 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %child_node, align 4
  %tobool42.not = icmp eq ptr %16, null
  %add.ptr46 = getelementptr i8, ptr %16, i32 -104
  %tobool39.not72 = icmp eq ptr %add.ptr46, null
  %tobool39.not = or i1 %tobool42.not, %tobool39.not72
  br i1 %tobool39.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end35.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__clk_recalc_rates(ptr noundef %core, i32 noundef %msg) unnamed_addr #0 align 64 {
entry:
  %cnd.i = alloca %struct.clk_notifier_data, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1617, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %rate = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 10
  %1 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %rate, align 4
  %parent = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %3 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %parent, align 4
  %tobool24.not = icmp eq ptr %4, null
  br i1 %tobool24.not, label %if.end.if.end28_crit_edge, label %if.then25

if.end.if.end28_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

if.then25:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %rate27 = getelementptr inbounds %struct.clk_core, ptr %4, i32 0, i32 10
  %5 = ptrtoint ptr %rate27 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %rate27, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then25, %if.end.if.end28_crit_edge
  %parent_rate.0 = phi i32 [ %6, %if.then25 ], [ 0, %if.end.if.end28_crit_edge ]
  %call29 = tail call fastcc i32 @clk_recalc(ptr noundef %core, i32 noundef %parent_rate.0)
  %7 = ptrtoint ptr %rate to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %call29, ptr %rate, align 4
  %notifier_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 29
  %8 = ptrtoint ptr %notifier_count to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %notifier_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool31.not = icmp eq i32 %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %msg)
  %tobool32.not = icmp eq i32 %msg, 0
  %or.cond = or i1 %tobool32.not, %tobool31.not
  br i1 %or.cond, label %if.end28.if.end36_crit_edge, label %if.then33

if.end28.if.end36_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

if.then33:                                        ; preds = %if.end28
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %cnd.i) #21
  %10 = ptrtoint ptr %cnd.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 -1 to ptr), ptr %cnd.i, align 4, !annotation !755
  %11 = getelementptr inbounds %struct.clk_notifier_data, ptr %cnd.i, i32 0, i32 1
  %12 = getelementptr inbounds %struct.clk_notifier_data, ptr %cnd.i, i32 0, i32 2
  %13 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %2, ptr %11, align 4
  %14 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call29, ptr %12, align 4
  %.pn21.i = load ptr, ptr @clk_notifier_list, align 4
  %cmp.not22.i = icmp eq ptr %.pn21.i, @clk_notifier_list
  br i1 %cmp.not22.i, label %if.then33.__clk_notify.exit_crit_edge, label %if.then33.for.body.i_crit_edge

if.then33.for.body.i_crit_edge:                   ; preds = %if.then33
  br label %for.body.i

if.then33.__clk_notify.exit_crit_edge:            ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_notify.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then33.for.body.i_crit_edge
  %.pn24.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn21.i, %if.then33.for.body.i_crit_edge ]
  %cn.0.i = getelementptr i8, ptr %.pn24.i, i32 -924
  %15 = ptrtoint ptr %cn.0.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cn.0.i, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %cmp4.i = icmp eq ptr %18, %core
  br i1 %cmp4.i, label %if.then.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %19 = ptrtoint ptr %cnd.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %cnd.i, align 4
  %notifier_head.i = getelementptr i8, ptr %.pn24.i, i32 -920
  %call.i69 = call i32 @srcu_notifier_call_chain(ptr noundef %notifier_head.i, i32 noundef %msg, ptr noundef nonnull %cnd.i) #21
  %and.i = and i32 %call.i69, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i.for.inc.i_crit_edge, label %if.then.i.__clk_notify.exit_crit_edge

if.then.i.__clk_notify.exit_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_notify.exit

if.then.i.for.inc.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %20 = ptrtoint ptr %.pn24.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn.i = load ptr, ptr %.pn24.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @clk_notifier_list
  br i1 %cmp.not.i, label %for.inc.i.__clk_notify.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.__clk_notify.exit_crit_edge:            ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_notify.exit

__clk_notify.exit:                                ; preds = %for.inc.i.__clk_notify.exit_crit_edge, %if.then.i.__clk_notify.exit_crit_edge, %if.then33.__clk_notify.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %cnd.i) #21
  br label %if.end36

if.end36:                                         ; preds = %__clk_notify.exit, %if.end28.if.end36_crit_edge
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %21 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %children, align 4
  %tobool38.not = icmp eq ptr %22, null
  %add.ptr = getelementptr i8, ptr %22, i32 -104
  %tobool40.not7274 = icmp eq ptr %add.ptr, null
  %tobool40.not72 = or i1 %tobool38.not, %tobool40.not7274
  br i1 %tobool40.not72, label %if.end36.for.end_crit_edge, label %if.end36.for.body_crit_edge

if.end36.for.body_crit_edge:                      ; preds = %if.end36
  br label %for.body

if.end36.for.end_crit_edge:                       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end36.for.body_crit_edge
  %child.073 = phi ptr [ %add.ptr47, %for.body.for.body_crit_edge ], [ %add.ptr, %if.end36.for.body_crit_edge ]
  call fastcc void @__clk_recalc_rates(ptr noundef nonnull %child.073, i32 noundef %msg)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.073, i32 0, i32 27
  %23 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %child_node, align 4
  %tobool43.not = icmp eq ptr %24, null
  %add.ptr47 = getelementptr i8, ptr %24, i32 -104
  %tobool40.not75 = icmp eq ptr %add.ptr47, null
  %tobool40.not = or i1 %tobool43.not, %tobool40.not75
  br i1 %tobool40.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end36.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_recalc(ptr nocapture noundef readonly %core, i32 noundef %parent_rate) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %0 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops, align 4
  %recalc_rate = getelementptr inbounds %struct.clk_ops, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %recalc_rate to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %recalc_rate, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %4 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %land.lhs.true.if.then_crit_edge, label %if.end.i

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.end.i:                                         ; preds = %land.lhs.true
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %6 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_resume(ptr noundef %7, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.then1.i, label %if.end.i.if.then_crit_edge

if.end.i.if.then_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.then1.i:                                       ; preds = %if.end.i
  %8 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %9, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !757
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !758
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.then1.i.if.end_crit_edge, label %do.end11.i.i.i.i.i

if.then1.i.if.end_crit_edge:                      ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end11.i.i.i.i.i:                               ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !759
  br label %if.end

if.then:                                          ; preds = %if.end.i.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  %11 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops, align 4
  %recalc_rate3 = getelementptr inbounds %struct.clk_ops, ptr %12, i32 0, i32 10
  %13 = ptrtoint ptr %recalc_rate3 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %recalc_rate3, align 4
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %15 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw, align 4
  %call4 = tail call i32 %14(ptr noundef %16, i32 noundef %parent_rate) #21
  %17 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.i11 = icmp eq i8 %18, 0
  br i1 %tobool.not.i11, label %if.then.if.end_crit_edge, label %if.end.i14

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i14:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i12 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %19 = ptrtoint ptr %dev.i12 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dev.i12, align 4
  %call.i.i13 = tail call i32 @__pm_runtime_idle(ptr noundef %20, i32 noundef 4) #21
  br label %if.end

if.end:                                           ; preds = %if.end.i14, %if.then.if.end_crit_edge, %do.end11.i.i.i.i.i, %if.then1.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rate.0 = phi i32 [ %parent_rate, %entry.if.end_crit_edge ], [ %parent_rate, %if.then1.i.if.end_crit_edge ], [ %parent_rate, %do.end11.i.i.i.i.i ], [ %call4, %if.then.if.end_crit_edge ], [ %call4, %if.end.i14 ]
  ret i32 %rate.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @srcu_notifier_call_chain(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @clk_calc_new_rates(ptr noundef %core, i32 noundef %rate) unnamed_addr #0 align 64 {
entry:
  %req = alloca %struct.clk_rate_request, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %core, null
  %cmp.i = icmp ugt ptr %core, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i
  br i1 %spec.select.i, label %entry.cleanup88_crit_edge, label %if.end

entry.cleanup88_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup88

if.end:                                           ; preds = %entry
  %parent1 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %0 = ptrtoint ptr %parent1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent1, align 4
  %tobool.not = icmp eq ptr %1, null
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i137 = icmp eq i32 %2, 0
  br i1 %tobool.not.i137, label %if.end.if.end.i_crit_edge, label %land.rhs.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 623, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end.if.end.i_crit_edge
  %min_rate24.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 21
  %3 = ptrtoint ptr %min_rate24.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %min_rate24.i, align 4
  %max_rate25.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 22
  %5 = ptrtoint ptr %max_rate25.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_rate25.i, align 4
  %clks.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 28
  %7 = ptrtoint ptr %clks.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %clks.i, align 4
  %tobool27.not.i = icmp eq ptr %8, null
  %add.ptr.i = getelementptr i8, ptr %8, i32 -28
  %tobool29.not119123.i = icmp eq ptr %add.ptr.i, null
  %tobool29.not119.i = or i1 %tobool27.not.i, %tobool29.not119123.i
  br i1 %tobool29.not119.i, label %if.end.i.clk_core_get_boundaries.exit_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.clk_core_get_boundaries.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %min_rate.0 = phi i32 [ %11, %for.body.i.for.body.i_crit_edge ], [ %4, %if.end.i.for.body.i_crit_edge ]
  %clk_user.0120.i = phi ptr [ %add.ptr43.i, %for.body.i.for.body.i_crit_edge ], [ %add.ptr.i, %if.end.i.for.body.i_crit_edge ]
  %min_rate30.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i, i32 0, i32 4
  %9 = ptrtoint ptr %min_rate30.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %min_rate30.i, align 4
  %11 = tail call i32 @llvm.umax.i32(i32 %min_rate.0, i32 %10) #21
  %clks_node.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i, i32 0, i32 7
  %12 = ptrtoint ptr %clks_node.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %clks_node.i, align 4
  %tobool39.not.i = icmp eq ptr %13, null
  %add.ptr43.i = getelementptr i8, ptr %13, i32 -28
  %tobool29.not125.i = icmp eq ptr %add.ptr43.i, null
  %tobool29.not.i = or i1 %tobool39.not.i, %tobool29.not125.i
  br i1 %tobool29.not.i, label %for.body.i.for.body61.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.for.body61.i_crit_edge:                ; preds = %for.body.i
  br label %for.body61.i

for.body61.i:                                     ; preds = %for.body61.i.for.body61.i_crit_edge, %for.body.i.for.body61.i_crit_edge
  %max_rate.0 = phi i32 [ %16, %for.body61.i.for.body61.i_crit_edge ], [ %6, %for.body.i.for.body61.i_crit_edge ]
  %clk_user.1122.i = phi ptr [ %add.ptr78.i, %for.body61.i.for.body61.i_crit_edge ], [ %add.ptr.i, %for.body.i.for.body61.i_crit_edge ]
  %max_rate62.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i, i32 0, i32 5
  %14 = ptrtoint ptr %max_rate62.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %max_rate62.i, align 4
  %16 = tail call i32 @llvm.umin.i32(i32 %max_rate.0, i32 %15) #21
  %clks_node71.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i, i32 0, i32 7
  %17 = ptrtoint ptr %clks_node71.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %clks_node71.i, align 4
  %tobool74.not.i = icmp eq ptr %18, null
  %add.ptr78.i = getelementptr i8, ptr %18, i32 -28
  %tobool60.not126.i = icmp eq ptr %add.ptr78.i, null
  %tobool60.not.i = or i1 %tobool74.not.i, %tobool60.not126.i
  br i1 %tobool60.not.i, label %for.body61.i.clk_core_get_boundaries.exit_crit_edge, label %for.body61.i.for.body61.i_crit_edge

for.body61.i.for.body61.i_crit_edge:              ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body61.i

for.body61.i.clk_core_get_boundaries.exit_crit_edge: ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit

clk_core_get_boundaries.exit:                     ; preds = %for.body61.i.clk_core_get_boundaries.exit_crit_edge, %if.end.i.clk_core_get_boundaries.exit_crit_edge
  %min_rate.1159 = phi i32 [ %4, %if.end.i.clk_core_get_boundaries.exit_crit_edge ], [ %11, %for.body61.i.clk_core_get_boundaries.exit_crit_edge ]
  %max_rate.1 = phi i32 [ %6, %if.end.i.clk_core_get_boundaries.exit_crit_edge ], [ %16, %for.body61.i.clk_core_get_boundaries.exit_crit_edge ]
  %ops.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %19 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ops.i, align 4
  %determine_rate.i = getelementptr inbounds %struct.clk_ops, ptr %20, i32 0, i32 12
  %21 = ptrtoint ptr %determine_rate.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %determine_rate.i, align 4
  %tobool.not.i138 = icmp eq ptr %22, null
  br i1 %tobool.not.i138, label %clk_core_can_round.exit, label %clk_core_get_boundaries.exit.if.end24.i_crit_edge

clk_core_get_boundaries.exit.if.end24.i_crit_edge: ; preds = %clk_core_get_boundaries.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end24.i

clk_core_can_round.exit:                          ; preds = %clk_core_get_boundaries.exit
  %round_rate.i = getelementptr inbounds %struct.clk_ops, ptr %20, i32 0, i32 11
  %23 = ptrtoint ptr %round_rate.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %round_rate.i, align 4
  %tobool2.i.not = icmp eq ptr %24, null
  br i1 %tobool2.i.not, label %if.else, label %clk_core_can_round.exit.if.end24.i_crit_edge

clk_core_can_round.exit.if.end24.i_crit_edge:     ; preds = %clk_core_can_round.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end24.i

if.end24.i:                                       ; preds = %clk_core_can_round.exit.if.end24.i_crit_edge, %clk_core_get_boundaries.exit.if.end24.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %req) #21
  %25 = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 1
  %26 = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 2
  %27 = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 3
  %28 = getelementptr inbounds %struct.clk_rate_request, ptr %req, i32 0, i32 4
  %29 = getelementptr inbounds i8, ptr %req, i32 16
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 -1, ptr %29, align 4
  %31 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %rate, ptr %req, align 4
  %32 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %min_rate.1159, ptr %25, align 4
  %33 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %max_rate.1, ptr %26, align 4
  %34 = ptrtoint ptr %parent1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %parent1, align 4
  %tobool26.not.i = icmp eq ptr %35, null
  br i1 %tobool26.not.i, label %if.else.i, label %if.then27.i

if.then27.i:                                      ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #23
  %hw.i = getelementptr inbounds %struct.clk_core, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hw.i, align 4
  %38 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %28, align 4
  %rate.i = getelementptr inbounds %struct.clk_core, ptr %35, i32 0, i32 10
  %39 = ptrtoint ptr %rate.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rate.i, align 4
  br label %clk_core_init_rate_req.exit

if.else.i:                                        ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #23
  %41 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %28, align 4
  br label %clk_core_init_rate_req.exit

clk_core_init_rate_req.exit:                      ; preds = %if.else.i, %if.then27.i
  %storemerge = phi i32 [ %40, %if.then27.i ], [ 0, %if.else.i ]
  %42 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %storemerge, ptr %27, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %43 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i141 = icmp eq i32 %43, 0
  br i1 %tobool.not.i141, label %clk_core_init_rate_req.exit.if.end26.i_crit_edge, label %land.rhs.i144

clk_core_init_rate_req.exit.if.end26.i_crit_edge: ; preds = %clk_core_init_rate_req.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26.i

land.rhs.i144:                                    ; preds = %clk_core_init_rate_req.exit
  %call.i.i142 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i142)
  %cmp.not.i143 = icmp eq i32 %call.i.i142, 0
  br i1 %cmp.not.i143, label %do.end.i145, label %land.rhs.i144.if.end26.i_crit_edge, !prof !754

land.rhs.i144.if.end26.i_crit_edge:               ; preds = %land.rhs.i144
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26.i

do.end.i145:                                      ; preds = %land.rhs.i144
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1328, i32 noundef 9, ptr noundef null) #21
  br label %if.end26.i

if.end26.i:                                       ; preds = %do.end.i145, %land.rhs.i144.if.end26.i_crit_edge, %clk_core_init_rate_req.exit.if.end26.i_crit_edge
  %protect_count.i.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 20
  %44 = ptrtoint ptr %protect_count.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %protect_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool.i.not.i = icmp eq i32 %45, 0
  br i1 %tobool.i.not.i, label %if.else.i149, label %if.then28.i

if.then28.i:                                      ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %rate29.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 10
  %46 = ptrtoint ptr %rate29.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rate29.i, align 4
  br label %clk_core_determine_round_nolock.exit.thread162

if.else.i149:                                     ; preds = %if.end26.i
  %48 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %ops.i, align 4
  %determine_rate.i148 = getelementptr inbounds %struct.clk_ops, ptr %49, i32 0, i32 12
  %50 = ptrtoint ptr %determine_rate.i148 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %determine_rate.i148, align 4
  %tobool31.not.i = icmp eq ptr %51, null
  br i1 %tobool31.not.i, label %if.else36.i, label %clk_core_determine_round_nolock.exit

if.else36.i:                                      ; preds = %if.else.i149
  %round_rate.i151 = getelementptr inbounds %struct.clk_ops, ptr %49, i32 0, i32 11
  %52 = ptrtoint ptr %round_rate.i151 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %round_rate.i151, align 4
  %tobool38.not.i = icmp eq ptr %53, null
  br i1 %tobool38.not.i, label %if.else36.i.cleanup.thread_crit_edge, label %if.then39.i

if.else36.i.cleanup.thread_crit_edge:             ; preds = %if.else36.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.thread

if.then39.i:                                      ; preds = %if.else36.i
  %hw42.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %54 = ptrtoint ptr %hw42.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %hw42.i, align 4
  %56 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %req, align 4
  %call44.i = call i32 %53(ptr noundef %55, i32 noundef %57, ptr noundef %27) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44.i)
  %cmp45.i = icmp slt i32 %call44.i, 0
  br i1 %cmp45.i, label %if.then39.i.cleanup.thread_crit_edge, label %if.then39.i.clk_core_determine_round_nolock.exit.thread162_crit_edge

if.then39.i.clk_core_determine_round_nolock.exit.thread162_crit_edge: ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_determine_round_nolock.exit.thread162

if.then39.i.cleanup.thread_crit_edge:             ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.thread

clk_core_determine_round_nolock.exit.thread162:   ; preds = %if.then39.i.clk_core_determine_round_nolock.exit.thread162_crit_edge, %if.then28.i
  %storemerge.i = phi i32 [ %47, %if.then28.i ], [ %call44.i, %if.then39.i.clk_core_determine_round_nolock.exit.thread162_crit_edge ]
  %58 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %storemerge.i, ptr %req, align 4
  br label %if.end12

clk_core_determine_round_nolock.exit:             ; preds = %if.else.i149
  %hw.i150 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %59 = ptrtoint ptr %hw.i150 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %hw.i150, align 4
  %call35.i = call i32 %51(ptr noundef %60, ptr noundef nonnull %req) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35.i)
  %cmp = icmp slt i32 %call35.i, 0
  br i1 %cmp, label %clk_core_determine_round_nolock.exit.cleanup.thread_crit_edge, label %clk_core_determine_round_nolock.exit.if.end12_crit_edge

clk_core_determine_round_nolock.exit.if.end12_crit_edge: ; preds = %clk_core_determine_round_nolock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

clk_core_determine_round_nolock.exit.cleanup.thread_crit_edge: ; preds = %clk_core_determine_round_nolock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.thread

if.end12:                                         ; preds = %clk_core_determine_round_nolock.exit.if.end12_crit_edge, %clk_core_determine_round_nolock.exit.thread162
  %61 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %27, align 4
  %63 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %req, align 4
  %65 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %28, align 4
  %tobool15.not = icmp eq ptr %66, null
  br i1 %tobool15.not, label %if.end12.cond.end_crit_edge, label %cond.true

if.end12.cond.end_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %66, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end12.cond.end_crit_edge
  %cond = phi ptr [ %68, %cond.true ], [ null, %if.end12.cond.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %min_rate.1159)
  %cmp18 = icmp ult i32 %64, %min_rate.1159
  br i1 %cmp18, label %cond.end.cleanup.thread_crit_edge, label %cleanup

cond.end.cleanup.thread_crit_edge:                ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %cond.end.cleanup.thread_crit_edge, %clk_core_determine_round_nolock.exit.cleanup.thread_crit_edge, %if.then39.i.cleanup.thread_crit_edge, %if.else36.i.cleanup.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %req) #21
  br label %cleanup88

cleanup:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %max_rate.1)
  %cmp19.not = icmp ugt i32 %64, %max_rate.1
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %req) #21
  br i1 %cmp19.not, label %cleanup.cleanup88_crit_edge, label %if.end31

cleanup.cleanup88_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup88

if.else:                                          ; preds = %clk_core_can_round.exit
  br i1 %tobool.not, label %if.else.if.then25_crit_edge, label %lor.lhs.false23

if.else.if.then25_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then25

lor.lhs.false23:                                  ; preds = %if.else
  %flags = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %69 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %flags, align 4
  %and = and i32 %70, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool24.not = icmp eq i32 %and, 0
  br i1 %tobool24.not, label %lor.lhs.false23.if.then25_crit_edge, label %if.else28

lor.lhs.false23.if.then25_crit_edge:              ; preds = %lor.lhs.false23
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then25

if.then25:                                        ; preds = %lor.lhs.false23.if.then25_crit_edge, %if.else.if.then25_crit_edge
  %rate26 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 10
  %71 = ptrtoint ptr %rate26 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %rate26, align 4
  %new_rate27 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 12
  %73 = ptrtoint ptr %new_rate27 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %72, ptr %new_rate27, align 4
  br label %cleanup88

if.else28:                                        ; preds = %lor.lhs.false23
  call void @__sanitizer_cov_trace_pc() #23
  %call29 = tail call fastcc ptr @clk_calc_new_rates(ptr noundef nonnull %1, i32 noundef %rate)
  %new_rate30 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 12
  %74 = ptrtoint ptr %new_rate30 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %new_rate30, align 4
  br label %out

if.end31:                                         ; preds = %cleanup
  %cmp32.not = icmp eq ptr %cond, %1
  br i1 %cmp32.not, label %if.end31.if.end45_crit_edge, label %land.lhs.true

if.end31.if.end45_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

land.lhs.true:                                    ; preds = %if.end31
  %flags33 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %76 = ptrtoint ptr %flags33 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %flags33, align 4
  %and34 = and i32 %77, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %land.lhs.true.if.end45_crit_edge, label %land.lhs.true36

land.lhs.true.if.end45_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

land.lhs.true36:                                  ; preds = %land.lhs.true
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 19
  %78 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool37.not = icmp eq i32 %79, 0
  br i1 %tobool37.not, label %land.lhs.true36.if.end45_crit_edge, label %do.body

land.lhs.true36.if.end45_crit_edge:               ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

do.body:                                          ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @clk_calc_new_rates.__UNIQUE_ID_ddebug355, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@clk_calc_new_rates, %if.then43)) #21
          to label %cleanup88 [label %if.then43], !srcloc !761

if.then43:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  %80 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %core, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @clk_calc_new_rates.__UNIQUE_ID_ddebug355, ptr noundef nonnull @.str.70, ptr noundef nonnull @.str.69, ptr noundef %81) #21
  br label %cleanup88

if.end45:                                         ; preds = %land.lhs.true36.if.end45_crit_edge, %land.lhs.true.if.end45_crit_edge, %if.end31.if.end45_crit_edge
  %tobool46.not = icmp eq ptr %cond, null
  br i1 %tobool46.not, label %if.end45.out_crit_edge, label %land.lhs.true47

if.end45.out_crit_edge:                           ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

land.lhs.true47:                                  ; preds = %if.end45
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 8
  %82 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %83)
  %cmp48 = icmp ugt i8 %83, 1
  br i1 %cmp48, label %if.then50, label %land.lhs.true47.if.end74_crit_edge

land.lhs.true47.if.end74_crit_edge:               ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end74

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call fastcc i32 @clk_fetch_parent_index(ptr noundef %core, ptr noundef nonnull %cond)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %cmp52 = icmp slt i32 %call51, 0
  br i1 %cmp52, label %do.body55, label %if.then50.if.end74_crit_edge

if.then50.if.end74_crit_edge:                     ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end74

do.body55:                                        ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @clk_calc_new_rates.__UNIQUE_ID_ddebug356, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@clk_calc_new_rates, %if.then67)) #21
          to label %cleanup88 [label %if.then67], !srcloc !761

if.then67:                                        ; preds = %do.body55
  call void @__sanitizer_cov_trace_pc() #23
  %84 = ptrtoint ptr %cond to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %cond, align 4
  %86 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %core, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @clk_calc_new_rates.__UNIQUE_ID_ddebug356, ptr noundef nonnull @.str.71, ptr noundef nonnull @.str.69, ptr noundef %85, ptr noundef %87) #21
  br label %cleanup88

if.end74:                                         ; preds = %if.then50.if.end74_crit_edge, %land.lhs.true47.if.end74_crit_edge
  %p_index.0 = phi i32 [ %call51, %if.then50.if.end74_crit_edge ], [ 0, %land.lhs.true47.if.end74_crit_edge ]
  %flags75 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %88 = ptrtoint ptr %flags75 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %flags75, align 4
  %and76 = and i32 %89, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and76)
  %tobool77.not = icmp eq i32 %and76, 0
  br i1 %tobool77.not, label %if.end74.out_crit_edge, label %land.lhs.true80.critedge

if.end74.out_crit_edge:                           ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

land.lhs.true80.critedge:                         ; preds = %if.end74
  %rate81 = getelementptr inbounds %struct.clk_core, ptr %cond, i32 0, i32 10
  %90 = ptrtoint ptr %rate81 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %rate81, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %62, i32 %91)
  %cmp82.not = icmp eq i32 %62, %91
  br i1 %cmp82.not, label %land.lhs.true80.critedge.out_crit_edge, label %if.then84

land.lhs.true80.critedge.out_crit_edge:           ; preds = %land.lhs.true80.critedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

if.then84:                                        ; preds = %land.lhs.true80.critedge
  call void @__sanitizer_cov_trace_pc() #23
  %call85 = call fastcc ptr @clk_calc_new_rates(ptr noundef nonnull %cond, i32 noundef %62)
  br label %out

out:                                              ; preds = %if.then84, %land.lhs.true80.critedge.out_crit_edge, %if.end74.out_crit_edge, %if.end45.out_crit_edge, %if.else28
  %new_rate.1 = phi i32 [ %64, %if.then84 ], [ %64, %land.lhs.true80.critedge.out_crit_edge ], [ %64, %if.end74.out_crit_edge ], [ %75, %if.else28 ], [ %64, %if.end45.out_crit_edge ]
  %p_index.1 = phi i32 [ %p_index.0, %if.then84 ], [ %p_index.0, %land.lhs.true80.critedge.out_crit_edge ], [ %p_index.0, %if.end74.out_crit_edge ], [ 0, %if.else28 ], [ 0, %if.end45.out_crit_edge ]
  %parent.1 = phi ptr [ %cond, %if.then84 ], [ %cond, %land.lhs.true80.critedge.out_crit_edge ], [ %cond, %if.end74.out_crit_edge ], [ %1, %if.else28 ], [ null, %if.end45.out_crit_edge ]
  %top.0 = phi ptr [ %call85, %if.then84 ], [ %core, %land.lhs.true80.critedge.out_crit_edge ], [ %core, %if.end74.out_crit_edge ], [ %call29, %if.else28 ], [ %core, %if.end45.out_crit_edge ]
  %conv87 = trunc i32 %p_index.1 to i8
  call fastcc void @clk_calc_subtree(ptr noundef %core, i32 noundef %new_rate.1, ptr noundef %parent.1, i8 noundef zeroext %conv87)
  br label %cleanup88

cleanup88:                                        ; preds = %out, %if.then67, %do.body55, %if.then43, %do.body, %if.then25, %cleanup.cleanup88_crit_edge, %cleanup.thread, %entry.cleanup88_crit_edge
  %retval.1 = phi ptr [ %top.0, %out ], [ null, %cleanup.cleanup88_crit_edge ], [ null, %if.then25 ], [ null, %entry.cleanup88_crit_edge ], [ null, %if.then43 ], [ null, %if.then67 ], [ null, %cleanup.thread ], [ null, %do.body ], [ null, %do.body55 ]
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @clk_propagate_rate_change(ptr noundef readonly %core, i32 noundef %event) unnamed_addr #0 align 64 {
entry:
  %cnd.i = alloca %struct.clk_notifier_data, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rate = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 10
  %0 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rate, align 4
  %new_rate = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 12
  %2 = ptrtoint ptr %new_rate to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %new_rate, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %notifier_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 29
  %4 = ptrtoint ptr %notifier_count to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %notifier_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end.if.end7_crit_edge, label %if.then1

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then1:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %cnd.i) #21
  %6 = ptrtoint ptr %cnd.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr inttoptr (i32 -1 to ptr), ptr %cnd.i, align 4, !annotation !755
  %7 = getelementptr inbounds %struct.clk_notifier_data, ptr %cnd.i, i32 0, i32 1
  %8 = getelementptr inbounds %struct.clk_notifier_data, ptr %cnd.i, i32 0, i32 2
  %9 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %1, ptr %7, align 4
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %3, ptr %8, align 4
  %.pn21.i = load ptr, ptr @clk_notifier_list, align 4
  %cmp.not22.i = icmp eq ptr %.pn21.i, @clk_notifier_list
  br i1 %cmp.not22.i, label %if.then1.__clk_notify.exit_crit_edge, label %if.then1.for.body.i_crit_edge

if.then1.for.body.i_crit_edge:                    ; preds = %if.then1
  br label %for.body.i

if.then1.__clk_notify.exit_crit_edge:             ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_notify.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then1.for.body.i_crit_edge
  %.pn24.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn21.i, %if.then1.for.body.i_crit_edge ]
  %ret.023.i = phi i32 [ %ret.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.then1.for.body.i_crit_edge ]
  %cn.0.i = getelementptr i8, ptr %.pn24.i, i32 -924
  %11 = ptrtoint ptr %cn.0.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cn.0.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %cmp4.i = icmp eq ptr %14, %core
  br i1 %cmp4.i, label %if.then.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %15 = ptrtoint ptr %cnd.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %cnd.i, align 4
  %notifier_head.i = getelementptr i8, ptr %.pn24.i, i32 -920
  %call.i = call i32 @srcu_notifier_call_chain(ptr noundef %notifier_head.i, i32 noundef %event, ptr noundef nonnull %cnd.i) #21
  %and.i = and i32 %call.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i.for.inc.i_crit_edge, label %if.then.i.__clk_notify.exit_crit_edge

if.then.i.__clk_notify.exit_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_notify.exit

if.then.i.for.inc.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %ret.1.i = phi i32 [ %call.i, %if.then.i.for.inc.i_crit_edge ], [ %ret.023.i, %for.body.i.for.inc.i_crit_edge ]
  %16 = ptrtoint ptr %.pn24.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn.i = load ptr, ptr %.pn24.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @clk_notifier_list
  br i1 %cmp.not.i, label %for.inc.i.__clk_notify.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.__clk_notify.exit_crit_edge:            ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_notify.exit

__clk_notify.exit:                                ; preds = %for.inc.i.__clk_notify.exit_crit_edge, %if.then.i.__clk_notify.exit_crit_edge, %if.then1.__clk_notify.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.then1.__clk_notify.exit_crit_edge ], [ %call.i, %if.then.i.__clk_notify.exit_crit_edge ], [ %ret.1.i, %for.inc.i.__clk_notify.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %cnd.i) #21
  %and = and i32 %retval.0.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  %spec.select = select i1 %tobool4.not, ptr null, ptr %core
  br label %if.end7

if.end7:                                          ; preds = %__clk_notify.exit, %if.end.if.end7_crit_edge
  %fail_clk.0 = phi ptr [ null, %if.end.if.end7_crit_edge ], [ %spec.select, %__clk_notify.exit ]
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %17 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %children, align 4
  %tobool8.not = icmp eq ptr %18, null
  %add.ptr = getelementptr i8, ptr %18, i32 -104
  %tobool10.not7477 = icmp eq ptr %add.ptr, null
  %tobool10.not74 = or i1 %tobool8.not, %tobool10.not7477
  br i1 %tobool10.not74, label %if.end7.for.end_crit_edge, label %if.end7.for.body_crit_edge

if.end7.for.body_crit_edge:                       ; preds = %if.end7
  br label %for.body

if.end7.for.end_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end7.for.body_crit_edge
  %child.076 = phi ptr [ %add.ptr26, %for.inc.for.body_crit_edge ], [ %add.ptr, %if.end7.for.body_crit_edge ]
  %fail_clk.175 = phi ptr [ %fail_clk.2, %for.inc.for.body_crit_edge ], [ %fail_clk.0, %if.end7.for.body_crit_edge ]
  %new_parent = getelementptr inbounds %struct.clk_core, ptr %child.076, i32 0, i32 13
  %19 = ptrtoint ptr %new_parent to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %new_parent, align 4
  %tobool11.not = icmp eq ptr %20, null
  %cmp13.not = icmp eq ptr %20, %core
  %or.cond = or i1 %tobool11.not, %cmp13.not
  br i1 %or.cond, label %if.end15, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end15:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %call16 = call fastcc ptr @clk_propagate_rate_change(ptr noundef nonnull %child.076, i32 noundef %event)
  %tobool17.not = icmp eq ptr %call16, null
  %spec.select68 = select i1 %tobool17.not, ptr %fail_clk.175, ptr %call16
  br label %for.inc

for.inc:                                          ; preds = %if.end15, %for.body.for.inc_crit_edge
  %fail_clk.2 = phi ptr [ %fail_clk.175, %for.body.for.inc_crit_edge ], [ %spec.select68, %if.end15 ]
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.076, i32 0, i32 27
  %21 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %child_node, align 4
  %tobool22.not = icmp eq ptr %22, null
  %add.ptr26 = getelementptr i8, ptr %22, i32 -104
  %tobool10.not78 = icmp eq ptr %add.ptr26, null
  %tobool10.not = or i1 %tobool22.not, %tobool10.not78
  br i1 %tobool10.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end7.for.end_crit_edge
  %fail_clk.1.lcssa = phi ptr [ %fail_clk.0, %if.end7.for.end_crit_edge ], [ %fail_clk.2, %for.inc.for.end_crit_edge ]
  %new_child = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 14
  %23 = ptrtoint ptr %new_child to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %new_child, align 4
  %tobool30.not = icmp eq ptr %24, null
  br i1 %tobool30.not, label %for.end.cleanup_crit_edge, label %if.then31

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then31:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %call33 = call fastcc ptr @clk_propagate_rate_change(ptr noundef nonnull %24, i32 noundef %event)
  %tobool34.not = icmp eq ptr %call33, null
  %spec.select70 = select i1 %tobool34.not, ptr %fail_clk.1.lcssa, ptr %call33
  br label %cleanup

cleanup:                                          ; preds = %if.then31, %for.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ %fail_clk.1.lcssa, %for.end.cleanup_crit_edge ], [ %spec.select70, %if.then31 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_change_rate(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  %cnd.i = alloca %struct.clk_notifier_data, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rate = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 10
  %0 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rate, align 4
  %new_parent = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 13
  %2 = ptrtoint ptr %new_parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %new_parent, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.else, label %entry.if.end10.sink.split_crit_edge

entry.if.end10.sink.split_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10.sink.split

if.else:                                          ; preds = %entry
  %parent4 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %4 = ptrtoint ptr %parent4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent4, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %if.else.if.end10_crit_edge, label %if.else.if.end10.sink.split_crit_edge

if.else.if.end10.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10.sink.split

if.else.if.end10_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.end10.sink.split:                              ; preds = %if.else.if.end10.sink.split_crit_edge, %entry.if.end10.sink.split_crit_edge
  %.sink = phi ptr [ %3, %entry.if.end10.sink.split_crit_edge ], [ %5, %if.else.if.end10.sink.split_crit_edge ]
  %rate9 = getelementptr inbounds %struct.clk_core, ptr %.sink, i32 0, i32 10
  %6 = ptrtoint ptr %rate9 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rate9, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.end10.sink.split, %if.else.if.end10_crit_edge
  %parent.0 = phi ptr [ null, %if.else.if.end10_crit_edge ], [ %.sink, %if.end10.sink.split ]
  %best_parent_rate.0 = phi i32 [ 0, %if.else.if.end10_crit_edge ], [ %7, %if.end10.sink.split ]
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %8 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i, label %if.end10.if.end13_crit_edge, label %if.end.i

if.end10.if.end13_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end13

if.end.i:                                         ; preds = %if.end10
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %10 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_resume(ptr noundef %11, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.then1.i, label %if.end.i.if.end13_crit_edge

if.end.i.if.end13_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end13

if.then1.i:                                       ; preds = %if.end.i
  %12 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %13, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !757
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %14 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !758
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.then1.i.cleanup_crit_edge, label %do.end11.i.i.i.i.i

if.then1.i.cleanup_crit_edge:                     ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end11.i.i.i.i.i:                               ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !759
  br label %cleanup

if.end13:                                         ; preds = %if.end.i.if.end13_crit_edge, %if.end10.if.end13_crit_edge
  %flags = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %15 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags, align 4
  %and = and i32 %16, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool14.not = icmp eq i32 %and, 0
  br i1 %tobool14.not, label %if.end13.if.end18_crit_edge, label %if.then15

if.end13.if.end18_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18

if.then15:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  %call16 = tail call fastcc i32 @clk_core_prepare(ptr noundef %core)
  %call17 = tail call fastcc i32 @clk_core_enable_lock(ptr noundef %core)
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %if.end13.if.end18_crit_edge
  %17 = ptrtoint ptr %new_parent to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %new_parent, align 4
  %tobool20.not = icmp eq ptr %18, null
  br i1 %tobool20.not, label %if.end18.if.end45_crit_edge, label %land.lhs.true

if.end18.if.end45_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

land.lhs.true:                                    ; preds = %if.end18
  %parent22 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %19 = ptrtoint ptr %parent22 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %parent22, align 4
  %cmp.not = icmp eq ptr %18, %20
  br i1 %cmp.not, label %land.lhs.true.if.end45_crit_edge, label %if.then23

land.lhs.true.if.end45_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

if.then23:                                        ; preds = %land.lhs.true
  %call25 = tail call fastcc ptr @__clk_set_parent_before(ptr noundef %core, ptr noundef nonnull %18)
  %21 = ptrtoint ptr %new_parent to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %new_parent, align 4
  tail call fastcc void @trace_clk_set_parent(ptr noundef %core, ptr noundef %22)
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %23 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ops, align 4
  %set_rate_and_parent = getelementptr inbounds %struct.clk_ops, ptr %24, i32 0, i32 16
  %25 = ptrtoint ptr %set_rate_and_parent to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %set_rate_and_parent, align 4
  %tobool27 = icmp ne ptr %26, null
  br i1 %tobool27, label %if.then28, label %if.else32

if.then28:                                        ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #23
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %27 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw, align 4
  %new_rate = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 12
  %29 = ptrtoint ptr %new_rate to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %new_rate, align 4
  %new_parent_index = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 9
  %31 = ptrtoint ptr %new_parent_index to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %new_parent_index, align 1
  %call31 = tail call i32 %26(ptr noundef %28, i32 noundef %30, i32 noundef %best_parent_rate.0, i8 noundef zeroext %32) #21
  br label %if.end42

if.else32:                                        ; preds = %if.then23
  %set_parent = getelementptr inbounds %struct.clk_ops, ptr %24, i32 0, i32 13
  %33 = ptrtoint ptr %set_parent to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %set_parent, align 4
  %tobool34.not = icmp eq ptr %34, null
  br i1 %tobool34.not, label %if.else32.if.end42_crit_edge, label %if.then35

if.else32.if.end42_crit_edge:                     ; preds = %if.else32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end42

if.then35:                                        ; preds = %if.else32
  call void @__sanitizer_cov_trace_pc() #23
  %hw38 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %35 = ptrtoint ptr %hw38 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hw38, align 4
  %new_parent_index39 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 9
  %37 = ptrtoint ptr %new_parent_index39 to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %new_parent_index39, align 1
  %call40 = tail call i32 %34(ptr noundef %36, i8 noundef zeroext %38) #21
  br label %if.end42

if.end42:                                         ; preds = %if.then35, %if.else32.if.end42_crit_edge, %if.then28
  %39 = ptrtoint ptr %new_parent to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %new_parent, align 4
  tail call fastcc void @trace_clk_set_parent_complete(ptr noundef %core, ptr noundef %40)
  %41 = ptrtoint ptr %new_parent to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %new_parent, align 4
  tail call fastcc void @__clk_set_parent_after(ptr noundef %core, ptr noundef %42, ptr noundef %call25)
  br label %if.end45

if.end45:                                         ; preds = %if.end42, %land.lhs.true.if.end45_crit_edge, %if.end18.if.end45_crit_edge
  %skip_set_rate.1.off0 = phi i1 [ %tobool27, %if.end42 ], [ false, %land.lhs.true.if.end45_crit_edge ], [ false, %if.end18.if.end45_crit_edge ]
  %43 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %flags, align 4
  %and47 = and i32 %44, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  br i1 %tobool48.not, label %if.end45.if.end51_crit_edge, label %if.then49

if.end45.if.end51_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end51

if.then49:                                        ; preds = %if.end45
  %call.i = tail call fastcc i32 @clk_core_prepare_lock(ptr noundef %parent.0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i204 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i204, label %if.end.i205, label %if.then49.if.end51_crit_edge

if.then49.if.end51_crit_edge:                     ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end51

if.end.i205:                                      ; preds = %if.then49
  %call1.i = tail call fastcc i32 @clk_core_enable_lock(ptr noundef %parent.0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end.i205.if.end51_crit_edge, label %if.then3.i

if.end.i205.if.end51_crit_edge:                   ; preds = %if.end.i205
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end51

if.then3.i:                                       ; preds = %if.end.i205
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %parent.0) #21
  br label %if.end51

if.end51:                                         ; preds = %if.then3.i, %if.end.i205.if.end51_crit_edge, %if.then49.if.end51_crit_edge, %if.end45.if.end51_crit_edge
  %new_rate52 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 12
  %45 = ptrtoint ptr %new_rate52 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %new_rate52, align 4
  tail call fastcc void @trace_clk_set_rate(ptr noundef %core, i32 noundef %46)
  br i1 %skip_set_rate.1.off0, label %if.end51.if.end63_crit_edge, label %land.lhs.true54

if.end51.if.end63_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end63

land.lhs.true54:                                  ; preds = %if.end51
  %ops55 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %47 = ptrtoint ptr %ops55 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ops55, align 4
  %set_rate = getelementptr inbounds %struct.clk_ops, ptr %48, i32 0, i32 15
  %49 = ptrtoint ptr %set_rate to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %set_rate, align 4
  %tobool56.not = icmp eq ptr %50, null
  br i1 %tobool56.not, label %land.lhs.true54.if.end63_crit_edge, label %if.then57

land.lhs.true54.if.end63_crit_edge:               ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end63

if.then57:                                        ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #23
  %hw60 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %51 = ptrtoint ptr %hw60 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %hw60, align 4
  %53 = ptrtoint ptr %new_rate52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %new_rate52, align 4
  %call62 = tail call i32 %50(ptr noundef %52, i32 noundef %54, i32 noundef %best_parent_rate.0) #21
  br label %if.end63

if.end63:                                         ; preds = %if.then57, %land.lhs.true54.if.end63_crit_edge, %if.end51.if.end63_crit_edge
  %55 = ptrtoint ptr %new_rate52 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %new_rate52, align 4
  tail call fastcc void @trace_clk_set_rate_complete(ptr noundef %core, i32 noundef %56)
  %call65 = tail call fastcc i32 @clk_recalc(ptr noundef %core, i32 noundef %best_parent_rate.0)
  %57 = ptrtoint ptr %rate to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %call65, ptr %rate, align 4
  %58 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %flags, align 4
  %and68 = and i32 %59, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and68)
  %tobool69.not = icmp eq i32 %and68, 0
  br i1 %tobool69.not, label %if.end63.if.end71_crit_edge, label %if.then70

if.end63.if.end71_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

if.then70:                                        ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_disable_lock(ptr noundef %core)
  tail call fastcc void @clk_core_unprepare(ptr noundef %core)
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end63.if.end71_crit_edge
  %60 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %flags, align 4
  %and73 = and i32 %61, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and73)
  %tobool74.not = icmp eq i32 %and73, 0
  br i1 %tobool74.not, label %if.end71.if.end76_crit_edge, label %if.then75

if.end71.if.end76_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end76

if.then75:                                        ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_disable_lock(ptr noundef %parent.0) #21
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %parent.0) #21
  br label %if.end76

if.end76:                                         ; preds = %if.then75, %if.end71.if.end76_crit_edge
  %notifier_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 29
  %62 = ptrtoint ptr %notifier_count to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %notifier_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool77.not = icmp eq i32 %63, 0
  br i1 %tobool77.not, label %if.end76.if.end84_crit_edge, label %land.lhs.true78

if.end76.if.end84_crit_edge:                      ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end84

land.lhs.true78:                                  ; preds = %if.end76
  %64 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %rate, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %65)
  %cmp80.not = icmp eq i32 %1, %65
  br i1 %cmp80.not, label %land.lhs.true78.if.end84_crit_edge, label %if.then81

land.lhs.true78.if.end84_crit_edge:               ; preds = %land.lhs.true78
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end84

if.then81:                                        ; preds = %land.lhs.true78
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %cnd.i) #21
  %66 = ptrtoint ptr %cnd.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr inttoptr (i32 -1 to ptr), ptr %cnd.i, align 4, !annotation !755
  %67 = getelementptr inbounds %struct.clk_notifier_data, ptr %cnd.i, i32 0, i32 1
  %68 = getelementptr inbounds %struct.clk_notifier_data, ptr %cnd.i, i32 0, i32 2
  %69 = ptrtoint ptr %67 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %1, ptr %67, align 4
  %70 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %65, ptr %68, align 4
  %.pn21.i = load ptr, ptr @clk_notifier_list, align 4
  %cmp.not22.i = icmp eq ptr %.pn21.i, @clk_notifier_list
  br i1 %cmp.not22.i, label %if.then81.__clk_notify.exit_crit_edge, label %if.then81.for.body.i_crit_edge

if.then81.for.body.i_crit_edge:                   ; preds = %if.then81
  br label %for.body.i

if.then81.__clk_notify.exit_crit_edge:            ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_notify.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then81.for.body.i_crit_edge
  %.pn24.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn21.i, %if.then81.for.body.i_crit_edge ]
  %cn.0.i = getelementptr i8, ptr %.pn24.i, i32 -924
  %71 = ptrtoint ptr %cn.0.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %cn.0.i, align 4
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %72, align 4
  %cmp4.i = icmp eq ptr %74, %core
  br i1 %cmp4.i, label %if.then.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %75 = ptrtoint ptr %cnd.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %72, ptr %cnd.i, align 4
  %notifier_head.i = getelementptr i8, ptr %.pn24.i, i32 -920
  %call.i206 = call i32 @srcu_notifier_call_chain(ptr noundef %notifier_head.i, i32 noundef 2, ptr noundef nonnull %cnd.i) #21
  %and.i = and i32 %call.i206, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i207 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i207, label %if.then.i.for.inc.i_crit_edge, label %if.then.i.__clk_notify.exit_crit_edge

if.then.i.__clk_notify.exit_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_notify.exit

if.then.i.for.inc.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %76 = ptrtoint ptr %.pn24.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %.pn.i = load ptr, ptr %.pn24.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @clk_notifier_list
  br i1 %cmp.not.i, label %for.inc.i.__clk_notify.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.__clk_notify.exit_crit_edge:            ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_notify.exit

__clk_notify.exit:                                ; preds = %for.inc.i.__clk_notify.exit_crit_edge, %if.then.i.__clk_notify.exit_crit_edge, %if.then81.__clk_notify.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %cnd.i) #21
  br label %if.end84

if.end84:                                         ; preds = %__clk_notify.exit, %land.lhs.true78.if.end84_crit_edge, %if.end76.if.end84_crit_edge
  %77 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %flags, align 4
  %and86 = and i32 %78, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86)
  %tobool87.not = icmp eq i32 %and86, 0
  br i1 %tobool87.not, label %if.end84.if.end91_crit_edge, label %if.then88

if.end84.if.end91_crit_edge:                      ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91

if.then88:                                        ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #23
  %79 = ptrtoint ptr %new_rate52 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %new_rate52, align 4
  %call90 = call fastcc ptr @clk_calc_new_rates(ptr noundef %core, i32 noundef %80)
  br label %if.end91

if.end91:                                         ; preds = %if.then88, %if.end84.if.end91_crit_edge
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %81 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %children, align 4
  %tobool93.not = icmp eq ptr %82, null
  %add.ptr = getelementptr i8, ptr %82, i32 -104
  %tobool95.not218220 = icmp eq ptr %add.ptr, null
  %tobool95.not218 = or i1 %tobool93.not, %tobool95.not218220
  br i1 %tobool95.not218, label %if.end91.for.end_crit_edge, label %if.end91.land.rhs_crit_edge

if.end91.land.rhs_crit_edge:                      ; preds = %if.end91
  br label %land.rhs

if.end91.for.end_crit_edge:                       ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %if.end91.land.rhs_crit_edge
  %child.0219 = phi ptr [ %add.ptr111, %for.inc.land.rhs_crit_edge ], [ %add.ptr, %if.end91.land.rhs_crit_edge ]
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.0219, i32 0, i32 27
  %83 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %child_node, align 4
  %new_parent98 = getelementptr inbounds %struct.clk_core, ptr %child.0219, i32 0, i32 13
  %85 = ptrtoint ptr %new_parent98 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %new_parent98, align 4
  %tobool99.not = icmp eq ptr %86, null
  %cmp102.not = icmp eq ptr %86, %core
  %or.cond = or i1 %tobool99.not, %cmp102.not
  br i1 %or.cond, label %if.end104, label %land.rhs.for.inc_crit_edge

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end104:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @clk_change_rate(ptr noundef nonnull %child.0219)
  br label %for.inc

for.inc:                                          ; preds = %if.end104, %land.rhs.for.inc_crit_edge
  %tobool107.not = icmp eq ptr %84, null
  %add.ptr111 = getelementptr i8, ptr %84, i32 -104
  %tobool95.not221 = icmp eq ptr %add.ptr111, null
  %tobool95.not = or i1 %tobool107.not, %tobool95.not221
  br i1 %tobool95.not, label %for.inc.for.end_crit_edge, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.rhs

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end91.for.end_crit_edge
  %new_child = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 14
  %87 = ptrtoint ptr %new_child to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %new_child, align 4
  %tobool115.not = icmp eq ptr %88, null
  br i1 %tobool115.not, label %for.end.if.end118_crit_edge, label %if.then116

for.end.if.end118_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end118

if.then116:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @clk_change_rate(ptr noundef nonnull %88)
  br label %if.end118

if.end118:                                        ; preds = %if.then116, %for.end.if.end118_crit_edge
  %89 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %90)
  %tobool.not.i210 = icmp eq i8 %90, 0
  br i1 %tobool.not.i210, label %if.end118.cleanup_crit_edge, label %if.end.i213

if.end118.cleanup_crit_edge:                      ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i213:                                      ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i211 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %91 = ptrtoint ptr %dev.i211 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %dev.i211, align 4
  %call.i.i212 = call i32 @__pm_runtime_idle(ptr noundef %92, i32 noundef 4) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end.i213, %if.end118.cleanup_crit_edge, %do.end11.i.i.i.i.i, %if.then1.i.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_calc_subtree(ptr noundef %core, i32 noundef %new_rate, ptr noundef %new_parent, i8 noundef zeroext %p_index) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %new_rate1 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 12
  %0 = ptrtoint ptr %new_rate1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %new_rate, ptr %new_rate1, align 4
  %new_parent2 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 13
  %1 = ptrtoint ptr %new_parent2 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %new_parent, ptr %new_parent2, align 4
  %new_parent_index = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 9
  %2 = ptrtoint ptr %new_parent_index to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %p_index, ptr %new_parent_index, align 1
  %new_child = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 14
  %3 = ptrtoint ptr %new_child to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %new_child, align 4
  %tobool.not = icmp eq ptr %new_parent, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %parent = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 4
  %cmp.not = icmp eq ptr %5, %new_parent
  br i1 %cmp.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %new_child3 = getelementptr inbounds %struct.clk_core, ptr %new_parent, i32 0, i32 14
  %6 = ptrtoint ptr %new_child3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %core, ptr %new_child3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %7 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %children, align 4
  %tobool4.not = icmp eq ptr %8, null
  %add.ptr = getelementptr i8, ptr %8, i32 -104
  %tobool6.not4042 = icmp eq ptr %add.ptr, null
  %tobool6.not40 = or i1 %tobool4.not, %tobool6.not4042
  br i1 %tobool6.not40, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %child.041 = phi ptr [ %add.ptr15, %for.body.for.body_crit_edge ], [ %add.ptr, %if.end.for.body_crit_edge ]
  %call = tail call fastcc i32 @clk_recalc(ptr noundef nonnull %child.041, i32 noundef %new_rate)
  %new_rate7 = getelementptr inbounds %struct.clk_core, ptr %child.041, i32 0, i32 12
  %9 = ptrtoint ptr %new_rate7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call, ptr %new_rate7, align 4
  tail call fastcc void @clk_calc_subtree(ptr noundef nonnull %child.041, i32 noundef %call, ptr noundef null, i8 noundef zeroext 0)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.041, i32 0, i32 27
  %10 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %child_node, align 4
  %tobool11.not = icmp eq ptr %11, null
  %add.ptr15 = getelementptr i8, ptr %11, i32 -104
  %tobool6.not43 = icmp eq ptr %add.ptr15, null
  %tobool6.not = or i1 %tobool11.not, %tobool6.not43
  br i1 %tobool6.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__clk_set_parent_before(ptr noundef %core, ptr noundef %parent) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %parent1 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %0 = ptrtoint ptr %parent1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent1, align 4
  %flags2 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %2 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags2, align 4
  %and = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  %call.i = tail call fastcc i32 @clk_core_prepare_lock(ptr noundef %1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.clk_core_prepare_enable.exit_crit_edge

if.then.clk_core_prepare_enable.exit_crit_edge:   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_prepare_enable.exit

if.end.i:                                         ; preds = %if.then
  %call1.i = tail call fastcc i32 @clk_core_enable_lock(ptr noundef %1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end.i.clk_core_prepare_enable.exit_crit_edge, label %if.then3.i

if.end.i.clk_core_prepare_enable.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_prepare_enable.exit

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %1) #21
  br label %clk_core_prepare_enable.exit

clk_core_prepare_enable.exit:                     ; preds = %if.then3.i, %if.end.i.clk_core_prepare_enable.exit_crit_edge, %if.then.clk_core_prepare_enable.exit_crit_edge
  %call.i17 = tail call fastcc i32 @clk_core_prepare_lock(ptr noundef %parent) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i17)
  %tobool.not.i18 = icmp eq i32 %call.i17, 0
  br i1 %tobool.not.i18, label %if.end.i21, label %clk_core_prepare_enable.exit.if.end_crit_edge

clk_core_prepare_enable.exit.if.end_crit_edge:    ; preds = %clk_core_prepare_enable.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i21:                                       ; preds = %clk_core_prepare_enable.exit
  %call1.i19 = tail call fastcc i32 @clk_core_enable_lock(ptr noundef %parent) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i19)
  %tobool2.not.i20 = icmp eq i32 %call1.i19, 0
  br i1 %tobool2.not.i20, label %if.end.i21.if.end_crit_edge, label %if.then3.i22

if.end.i21.if.end_crit_edge:                      ; preds = %if.end.i21
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then3.i22:                                     ; preds = %if.end.i21
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %parent) #21
  br label %if.end

if.end:                                           ; preds = %if.then3.i22, %if.end.i21.if.end_crit_edge, %clk_core_prepare_enable.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 19
  %4 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool4.not = icmp eq i32 %5, 0
  br i1 %tobool4.not, label %if.end.if.end8_crit_edge, label %if.then5

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.then5:                                         ; preds = %if.end
  %call.i24 = tail call fastcc i32 @clk_core_prepare_lock(ptr noundef %parent) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i24)
  %tobool.not.i25 = icmp eq i32 %call.i24, 0
  br i1 %tobool.not.i25, label %if.end.i28, label %if.then5.clk_core_prepare_enable.exit30_crit_edge

if.then5.clk_core_prepare_enable.exit30_crit_edge: ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_prepare_enable.exit30

if.end.i28:                                       ; preds = %if.then5
  %call1.i26 = tail call fastcc i32 @clk_core_enable_lock(ptr noundef %parent) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i26)
  %tobool2.not.i27 = icmp eq i32 %call1.i26, 0
  br i1 %tobool2.not.i27, label %if.end.i28.clk_core_prepare_enable.exit30_crit_edge, label %if.then3.i29

if.end.i28.clk_core_prepare_enable.exit30_crit_edge: ; preds = %if.end.i28
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_prepare_enable.exit30

if.then3.i29:                                     ; preds = %if.end.i28
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %parent) #21
  br label %clk_core_prepare_enable.exit30

clk_core_prepare_enable.exit30:                   ; preds = %if.then3.i29, %if.end.i28.clk_core_prepare_enable.exit30_crit_edge, %if.then5.clk_core_prepare_enable.exit30_crit_edge
  %call7 = tail call fastcc i32 @clk_core_enable_lock(ptr noundef %core)
  br label %if.end8

if.end8:                                          ; preds = %clk_core_prepare_enable.exit30, %if.end.if.end8_crit_edge
  %call9 = tail call fastcc i32 @clk_enable_lock()
  %orphan.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 16
  %6 = ptrtoint ptr %orphan.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %orphan.i, align 4, !range !756
  %child_node.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27
  %8 = ptrtoint ptr %child_node.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %child_node.i, align 4
  %pprev2.i.i.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27, i32 1
  %10 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pprev2.i.i.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %9, ptr %11, align 4
  %tobool.not.i.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i.i, label %if.end8.hlist_del.exit.i_crit_edge, label %do.body13.i.i.i

if.end8.hlist_del.exit.i_crit_edge:               ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_del.exit.i

do.body13.i.i.i:                                  ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %9, i32 0, i32 1
  %13 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %11, ptr %pprev14.i.i.i, align 4
  br label %hlist_del.exit.i

hlist_del.exit.i:                                 ; preds = %do.body13.i.i.i, %if.end8.hlist_del.exit.i_crit_edge
  %14 = ptrtoint ptr %child_node.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 256 to ptr), ptr %child_node.i, align 4
  %15 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i, align 4
  %tobool1.not.i = icmp eq ptr %parent, null
  br i1 %tobool1.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %hlist_del.exit.i
  %orphan2.i = getelementptr inbounds %struct.clk_core, ptr %parent, i32 0, i32 16
  %16 = ptrtoint ptr %orphan2.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %orphan2.i, align 4, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool3.i = icmp ne i8 %17, 0
  %new_child.i = getelementptr inbounds %struct.clk_core, ptr %parent, i32 0, i32 14
  %18 = ptrtoint ptr %new_child.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %new_child.i, align 4
  %cmp.i = icmp eq ptr %19, %core
  br i1 %cmp.i, label %if.then5.i, label %if.then.i.if.end.i31_crit_edge

if.then.i.if.end.i31_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i31

if.then5.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  %20 = ptrtoint ptr %new_child.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %new_child.i, align 4
  br label %if.end.i31

if.end.i31:                                       ; preds = %if.then5.i, %if.then.i.if.end.i31_crit_edge
  %children.i = getelementptr inbounds %struct.clk_core, ptr %parent, i32 0, i32 26
  %21 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %children.i, align 4
  %23 = ptrtoint ptr %child_node.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %22, ptr %child_node.i, align 4
  %tobool.not.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i, label %if.end.i31.hlist_add_head.exit.i_crit_edge, label %do.body12.i.i

if.end.i31.hlist_add_head.exit.i_crit_edge:       ; preds = %if.end.i31
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit.i

do.body12.i.i:                                    ; preds = %if.end.i31
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %22, i32 0, i32 1
  %24 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %child_node.i, ptr %pprev.i.i, align 4
  br label %hlist_add_head.exit.i

hlist_add_head.exit.i:                            ; preds = %do.body12.i.i, %if.end.i31.hlist_add_head.exit.i_crit_edge
  %25 = ptrtoint ptr %children.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %child_node.i, ptr %children.i, align 4
  %26 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %children.i, ptr %pprev2.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %7, i8 %17)
  %cmp11.not.i = icmp eq i8 %7, %17
  br i1 %cmp11.not.i, label %hlist_add_head.exit.i.clk_reparent.exit_crit_edge, label %hlist_add_head.exit.i.if.end20.sink.split.i_crit_edge

hlist_add_head.exit.i.if.end20.sink.split.i_crit_edge: ; preds = %hlist_add_head.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20.sink.split.i

hlist_add_head.exit.i.clk_reparent.exit_crit_edge: ; preds = %hlist_add_head.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_reparent.exit

if.else.i:                                        ; preds = %hlist_del.exit.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.i32 = icmp eq i8 %7, 0
  %27 = load ptr, ptr @clk_orphan_list, align 4
  %28 = ptrtoint ptr %child_node.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %27, ptr %child_node.i, align 4
  %tobool.not.i35.i = icmp eq ptr %27, null
  br i1 %tobool.not.i35.i, label %if.else.i.hlist_add_head.exit39.i_crit_edge, label %do.body12.i37.i

if.else.i.hlist_add_head.exit39.i_crit_edge:      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit39.i

do.body12.i37.i:                                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i36.i = getelementptr inbounds %struct.hlist_node, ptr %27, i32 0, i32 1
  %29 = ptrtoint ptr %pprev.i36.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %child_node.i, ptr %pprev.i36.i, align 4
  br label %hlist_add_head.exit39.i

hlist_add_head.exit39.i:                          ; preds = %do.body12.i37.i, %if.else.i.hlist_add_head.exit39.i_crit_edge
  store volatile ptr %child_node.i, ptr @clk_orphan_list, align 4
  %30 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr @clk_orphan_list, ptr %pprev2.i.i.i, align 4
  br i1 %tobool.not.i32, label %hlist_add_head.exit39.i.if.end20.sink.split.i_crit_edge, label %hlist_add_head.exit39.i.clk_reparent.exit_crit_edge

hlist_add_head.exit39.i.clk_reparent.exit_crit_edge: ; preds = %hlist_add_head.exit39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_reparent.exit

hlist_add_head.exit39.i.if.end20.sink.split.i_crit_edge: ; preds = %hlist_add_head.exit39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20.sink.split.i

if.end20.sink.split.i:                            ; preds = %hlist_add_head.exit39.i.if.end20.sink.split.i_crit_edge, %hlist_add_head.exit.i.if.end20.sink.split.i_crit_edge
  %tobool3.sink.i = phi i1 [ %tobool3.i, %hlist_add_head.exit.i.if.end20.sink.split.i_crit_edge ], [ true, %hlist_add_head.exit39.i.if.end20.sink.split.i_crit_edge ]
  tail call fastcc void @clk_core_update_orphan_status(ptr noundef %core, i1 noundef zeroext %tobool3.sink.i) #21
  br label %clk_reparent.exit

clk_reparent.exit:                                ; preds = %if.end20.sink.split.i, %hlist_add_head.exit39.i.clk_reparent.exit_crit_edge, %hlist_add_head.exit.i.clk_reparent.exit_crit_edge
  %31 = ptrtoint ptr %parent1 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %parent, ptr %parent1, align 4
  %32 = load ptr, ptr @enable_owner, align 4
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %32, %36
  br i1 %cmp.not.i, label %clk_reparent.exit.if.end27.i_crit_edge, label %land.rhs.i

clk_reparent.exit.if.end27.i_crit_edge:           ; preds = %clk_reparent.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %clk_reparent.exit
  %.b98.i = load i1, ptr @clk_enable_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i33, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i33:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 190, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i33, %land.rhs.i.if.end27.i_crit_edge, %clk_reparent.exit.if.end27.i_crit_edge
  %37 = load i32, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp36.i = icmp eq i32 %37, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_enable_unlock.__already_done.156, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done.156, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 191, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %38 = load i32, ptr @enable_refcnt, align 4
  %dec.i = add i32 %38, -1
  store i32 %dec.i, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_enable_unlock.exit_crit_edge

if.end81.i.clk_enable_unlock.exit_crit_edge:      ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_enable_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @enable_owner, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @enable_lock, i32 noundef %call9) #21
  br label %clk_enable_unlock.exit

clk_enable_unlock.exit:                           ; preds = %if.end91.i, %if.end81.i.clk_enable_unlock.exit_crit_edge
  ret ptr %1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_parent(ptr noundef %core, ptr noundef %parent) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_parent, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_parent, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !798
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_parent, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, ptr noundef %parent) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !799
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !799
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_parent, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_parent.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_parent.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 189, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_parent_complete(ptr noundef %core, ptr noundef %parent) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_parent_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_parent_complete, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !800
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_parent_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, ptr noundef %parent) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !801
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !801
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_parent_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_parent_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_parent_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 196, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__clk_set_parent_after(ptr noundef %core, ptr noundef %parent, ptr noundef %old_parent) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 19
  %0 = ptrtoint ptr %prepare_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %prepare_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_disable_lock(ptr noundef %core)
  tail call fastcc void @clk_core_disable_lock(ptr noundef %old_parent) #21
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %old_parent) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %flags = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.end.if.end3_crit_edge, label %if.then2

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @clk_core_disable_lock(ptr noundef %parent) #21
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %parent) #21
  tail call fastcc void @clk_core_disable_lock(ptr noundef %old_parent) #21
  tail call fastcc void @clk_core_unprepare_lock(ptr noundef %old_parent) #21
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end.if.end3_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_rate(ptr noundef %core, i32 noundef %rate) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_rate, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !802
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, i32 noundef %rate) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !803
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !803
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_rate.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_rate.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 112, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_rate_complete(ptr noundef %core, i32 noundef %rate) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_rate_complete, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !804
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, i32 noundef %rate) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !805
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !805
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_rate_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_rate_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_rate_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 119, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_update_orphan_status(ptr nocapture noundef %core, i1 noundef zeroext %is_orphan) unnamed_addr #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %is_orphan to i8
  %orphan = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 16
  %0 = ptrtoint ptr %orphan to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 %frombool, ptr %orphan, align 4
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %1 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %children, align 4
  %tobool2.not = icmp eq ptr %2, null
  %add.ptr = getelementptr i8, ptr %2, i32 -104
  %tobool4.not2628 = icmp eq ptr %add.ptr, null
  %tobool4.not26 = or i1 %tobool2.not, %tobool4.not2628
  br i1 %tobool4.not26, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %child.027 = phi ptr [ %add.ptr12, %for.body.for.body_crit_edge ], [ %add.ptr, %entry.for.body_crit_edge ]
  tail call fastcc void @clk_core_update_orphan_status(ptr noundef nonnull %child.027, i1 noundef zeroext %is_orphan)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.027, i32 0, i32 27
  %3 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %child_node, align 4
  %tobool8.not = icmp eq ptr %4, null
  %add.ptr12 = getelementptr i8, ptr %4, i32 -104
  %tobool4.not29 = icmp eq ptr %add.ptr12, null
  %tobool4.not = or i1 %tobool8.not, %tobool4.not29
  br i1 %tobool4.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__clk_speculate_rates(ptr noundef readonly %core, i32 noundef %parent_rate) unnamed_addr #0 align 64 {
entry:
  %cnd.i = alloca %struct.clk_notifier_data, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !754

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1886, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %call24 = tail call fastcc i32 @clk_recalc(ptr noundef %core, i32 noundef %parent_rate)
  %notifier_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 29
  %1 = ptrtoint ptr %notifier_count to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %notifier_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool25.not = icmp eq i32 %2, 0
  br i1 %tobool25.not, label %if.end.if.end45_crit_edge, label %if.then26

if.end.if.end45_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

if.then26:                                        ; preds = %if.end
  %rate = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 10
  %3 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rate, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %cnd.i) #21
  %5 = ptrtoint ptr %cnd.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr inttoptr (i32 -1 to ptr), ptr %cnd.i, align 4, !annotation !755
  %6 = getelementptr inbounds %struct.clk_notifier_data, ptr %cnd.i, i32 0, i32 1
  %7 = getelementptr inbounds %struct.clk_notifier_data, ptr %cnd.i, i32 0, i32 2
  %8 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %4, ptr %6, align 4
  %9 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call24, ptr %7, align 4
  %.pn21.i = load ptr, ptr @clk_notifier_list, align 4
  %cmp.not22.i = icmp eq ptr %.pn21.i, @clk_notifier_list
  br i1 %cmp.not22.i, label %if.end28.thread87, label %if.then26.for.body.i_crit_edge

if.then26.for.body.i_crit_edge:                   ; preds = %if.then26
  br label %for.body.i

if.end28.thread87:                                ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %cnd.i) #21
  br label %if.end45

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then26.for.body.i_crit_edge
  %.pn24.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn21.i, %if.then26.for.body.i_crit_edge ]
  %ret.023.i = phi i32 [ %ret.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.then26.for.body.i_crit_edge ]
  %cn.0.i = getelementptr i8, ptr %.pn24.i, i32 -924
  %10 = ptrtoint ptr %cn.0.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cn.0.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %cmp4.i = icmp eq ptr %13, %core
  br i1 %cmp4.i, label %if.then.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %14 = ptrtoint ptr %cnd.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %cnd.i, align 4
  %notifier_head.i = getelementptr i8, ptr %.pn24.i, i32 -920
  %call.i81 = call i32 @srcu_notifier_call_chain(ptr noundef %notifier_head.i, i32 noundef 1, ptr noundef nonnull %cnd.i) #21
  %and.i = and i32 %call.i81, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i.for.inc.i_crit_edge, label %if.end28.thread

if.then.i.for.inc.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.end28.thread:                                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %cnd.i) #21
  br label %do.body31

for.inc.i:                                        ; preds = %if.then.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %ret.1.i = phi i32 [ %call.i81, %if.then.i.for.inc.i_crit_edge ], [ %ret.023.i, %for.body.i.for.inc.i_crit_edge ]
  %15 = ptrtoint ptr %.pn24.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn.i = load ptr, ptr %.pn24.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @clk_notifier_list
  br i1 %cmp.not.i, label %if.end28, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

if.end28:                                         ; preds = %for.inc.i
  %.pre = and i32 %ret.1.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pre)
  %phi.cmp = icmp eq i32 %.pre, 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %cnd.i) #21
  br i1 %phi.cmp, label %if.end28.if.end45_crit_edge, label %if.end28.do.body31_crit_edge

if.end28.do.body31_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body31

if.end28.if.end45_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

do.body31:                                        ; preds = %if.end28.do.body31_crit_edge, %if.end28.thread
  %retval.0.i82100 = phi i32 [ %call.i81, %if.end28.thread ], [ %ret.1.i, %if.end28.do.body31_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__clk_speculate_rates.__UNIQUE_ID_ddebug354, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__clk_speculate_rates, %if.then41)) #21
          to label %out [label %if.then41], !srcloc !761

if.then41:                                        ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %core, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__clk_speculate_rates.__UNIQUE_ID_ddebug354, ptr noundef nonnull @.str.74, ptr noundef nonnull @.str.73, ptr noundef %17, i32 noundef %retval.0.i82100) #21
  br label %out

if.end45:                                         ; preds = %if.end28.if.end45_crit_edge, %if.end28.thread87, %if.end.if.end45_crit_edge
  %ret.086 = phi i32 [ %ret.1.i, %if.end28.if.end45_crit_edge ], [ 0, %if.end28.thread87 ], [ 0, %if.end.if.end45_crit_edge ]
  %children = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 26
  %18 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %children, align 4
  %tobool47.not = icmp eq ptr %19, null
  %add.ptr = getelementptr i8, ptr %19, i32 -104
  %tobool49.not9497 = icmp eq ptr %add.ptr, null
  %tobool49.not94 = or i1 %tobool47.not, %tobool49.not9497
  br i1 %tobool49.not94, label %if.end45.out_crit_edge, label %if.end45.for.body_crit_edge

if.end45.for.body_crit_edge:                      ; preds = %if.end45
  br label %for.body

if.end45.out_crit_edge:                           ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end45.for.body_crit_edge
  %child.095 = phi ptr [ %add.ptr61, %for.inc.for.body_crit_edge ], [ %add.ptr, %if.end45.for.body_crit_edge ]
  %call50 = call fastcc i32 @__clk_speculate_rates(ptr noundef nonnull %child.095, i32 noundef %call24)
  %and51 = and i32 %call50, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and51)
  %tobool52.not = icmp eq i32 %and51, 0
  br i1 %tobool52.not, label %for.inc, label %for.body.out_crit_edge

for.body.out_crit_edge:                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

for.inc:                                          ; preds = %for.body
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.095, i32 0, i32 27
  %20 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %child_node, align 4
  %tobool57.not = icmp eq ptr %21, null
  %add.ptr61 = getelementptr i8, ptr %21, i32 -104
  %tobool49.not101 = icmp eq ptr %add.ptr61, null
  %tobool49.not = or i1 %tobool57.not, %tobool49.not101
  br i1 %tobool49.not, label %for.inc.out_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.out_crit_edge:                            ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

out:                                              ; preds = %for.inc.out_crit_edge, %for.body.out_crit_edge, %if.end45.out_crit_edge, %if.then41, %do.body31
  %ret.2 = phi i32 [ %retval.0.i82100, %if.then41 ], [ %retval.0.i82100, %do.body31 ], [ %ret.086, %if.end45.out_crit_edge ], [ %call50, %for.inc.out_crit_edge ], [ %call50, %for.body.out_crit_edge ]
  ret i32 %ret.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__clk_set_parent(ptr noundef %core, ptr noundef %parent, i8 noundef zeroext %p_index) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @__clk_set_parent_before(ptr noundef %core, ptr noundef %parent)
  tail call fastcc void @trace_clk_set_parent(ptr noundef %core, ptr noundef %parent)
  %tobool.not = icmp eq ptr %parent, null
  br i1 %tobool.not, label %entry.if.end.thread_crit_edge, label %land.lhs.true

entry.if.end.thread_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.thread

land.lhs.true:                                    ; preds = %entry
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %0 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops, align 4
  %set_parent = getelementptr inbounds %struct.clk_ops, ptr %1, i32 0, i32 13
  %2 = ptrtoint ptr %set_parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %set_parent, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.if.end.thread_crit_edge, label %if.end

land.lhs.true.if.end.thread_crit_edge:            ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.thread

if.end.thread:                                    ; preds = %land.lhs.true.if.end.thread_crit_edge, %entry.if.end.thread_crit_edge
  tail call fastcc void @trace_clk_set_parent_complete(ptr noundef %core, ptr noundef %parent)
  br label %if.end8

if.end:                                           ; preds = %land.lhs.true
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 4
  %call4 = tail call i32 %3(ptr noundef %5, i8 noundef zeroext %p_index) #21
  tail call fastcc void @trace_clk_set_parent_complete(ptr noundef %core, ptr noundef nonnull %parent)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end.if.end8_crit_edge, label %if.then6

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.then6:                                         ; preds = %if.end
  %call7 = tail call fastcc i32 @clk_enable_lock()
  %orphan.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 16
  %6 = ptrtoint ptr %orphan.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %orphan.i, align 4, !range !756
  %child_node.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27
  %8 = ptrtoint ptr %child_node.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %child_node.i, align 4
  %pprev2.i.i.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27, i32 1
  %10 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pprev2.i.i.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %9, ptr %11, align 4
  %tobool.not.i.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i.i, label %if.then6.hlist_del.exit.i_crit_edge, label %do.body13.i.i.i

if.then6.hlist_del.exit.i_crit_edge:              ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_del.exit.i

do.body13.i.i.i:                                  ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %9, i32 0, i32 1
  %13 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %11, ptr %pprev14.i.i.i, align 4
  br label %hlist_del.exit.i

hlist_del.exit.i:                                 ; preds = %do.body13.i.i.i, %if.then6.hlist_del.exit.i_crit_edge
  %14 = ptrtoint ptr %child_node.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 256 to ptr), ptr %child_node.i, align 4
  %15 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i, align 4
  %tobool1.not.i = icmp eq ptr %call, null
  br i1 %tobool1.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %hlist_del.exit.i
  %orphan2.i = getelementptr inbounds %struct.clk_core, ptr %call, i32 0, i32 16
  %16 = ptrtoint ptr %orphan2.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %orphan2.i, align 4, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool3.i = icmp ne i8 %17, 0
  %new_child.i = getelementptr inbounds %struct.clk_core, ptr %call, i32 0, i32 14
  %18 = ptrtoint ptr %new_child.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %new_child.i, align 4
  %cmp.i = icmp eq ptr %19, %core
  br i1 %cmp.i, label %if.then5.i, label %if.then.i.if.end.i_crit_edge

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then5.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  %20 = ptrtoint ptr %new_child.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %new_child.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then5.i, %if.then.i.if.end.i_crit_edge
  %children.i = getelementptr inbounds %struct.clk_core, ptr %call, i32 0, i32 26
  %21 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %children.i, align 4
  %23 = ptrtoint ptr %child_node.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %22, ptr %child_node.i, align 4
  %tobool.not.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i, label %if.end.i.hlist_add_head.exit.i_crit_edge, label %do.body12.i.i

if.end.i.hlist_add_head.exit.i_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit.i

do.body12.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %22, i32 0, i32 1
  %24 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %child_node.i, ptr %pprev.i.i, align 4
  br label %hlist_add_head.exit.i

hlist_add_head.exit.i:                            ; preds = %do.body12.i.i, %if.end.i.hlist_add_head.exit.i_crit_edge
  %25 = ptrtoint ptr %children.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %child_node.i, ptr %children.i, align 4
  %26 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %children.i, ptr %pprev2.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %7, i8 %17)
  %cmp11.not.i = icmp eq i8 %7, %17
  br i1 %cmp11.not.i, label %hlist_add_head.exit.i.clk_reparent.exit_crit_edge, label %hlist_add_head.exit.i.if.end20.sink.split.i_crit_edge

hlist_add_head.exit.i.if.end20.sink.split.i_crit_edge: ; preds = %hlist_add_head.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20.sink.split.i

hlist_add_head.exit.i.clk_reparent.exit_crit_edge: ; preds = %hlist_add_head.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_reparent.exit

if.else.i:                                        ; preds = %hlist_del.exit.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.i = icmp eq i8 %7, 0
  %27 = load ptr, ptr @clk_orphan_list, align 4
  %28 = ptrtoint ptr %child_node.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %27, ptr %child_node.i, align 4
  %tobool.not.i35.i = icmp eq ptr %27, null
  br i1 %tobool.not.i35.i, label %if.else.i.hlist_add_head.exit39.i_crit_edge, label %do.body12.i37.i

if.else.i.hlist_add_head.exit39.i_crit_edge:      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit39.i

do.body12.i37.i:                                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i36.i = getelementptr inbounds %struct.hlist_node, ptr %27, i32 0, i32 1
  %29 = ptrtoint ptr %pprev.i36.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %child_node.i, ptr %pprev.i36.i, align 4
  br label %hlist_add_head.exit39.i

hlist_add_head.exit39.i:                          ; preds = %do.body12.i37.i, %if.else.i.hlist_add_head.exit39.i_crit_edge
  store volatile ptr %child_node.i, ptr @clk_orphan_list, align 4
  %30 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr @clk_orphan_list, ptr %pprev2.i.i.i, align 4
  br i1 %tobool.not.i, label %hlist_add_head.exit39.i.if.end20.sink.split.i_crit_edge, label %hlist_add_head.exit39.i.clk_reparent.exit_crit_edge

hlist_add_head.exit39.i.clk_reparent.exit_crit_edge: ; preds = %hlist_add_head.exit39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_reparent.exit

hlist_add_head.exit39.i.if.end20.sink.split.i_crit_edge: ; preds = %hlist_add_head.exit39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20.sink.split.i

if.end20.sink.split.i:                            ; preds = %hlist_add_head.exit39.i.if.end20.sink.split.i_crit_edge, %hlist_add_head.exit.i.if.end20.sink.split.i_crit_edge
  %tobool3.sink.i = phi i1 [ %tobool3.i, %hlist_add_head.exit.i.if.end20.sink.split.i_crit_edge ], [ true, %hlist_add_head.exit39.i.if.end20.sink.split.i_crit_edge ]
  tail call fastcc void @clk_core_update_orphan_status(ptr noundef %core, i1 noundef zeroext %tobool3.sink.i) #21
  br label %clk_reparent.exit

clk_reparent.exit:                                ; preds = %if.end20.sink.split.i, %hlist_add_head.exit39.i.clk_reparent.exit_crit_edge, %hlist_add_head.exit.i.clk_reparent.exit_crit_edge
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %31 = ptrtoint ptr %parent.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call, ptr %parent.i, align 4
  %32 = load ptr, ptr @enable_owner, align 4
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %32, %36
  br i1 %cmp.not.i, label %clk_reparent.exit.if.end27.i_crit_edge, label %land.rhs.i

clk_reparent.exit.if.end27.i_crit_edge:           ; preds = %clk_reparent.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %clk_reparent.exit
  %.b98.i = load i1, ptr @clk_enable_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i27, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i27:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 190, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i27, %land.rhs.i.if.end27.i_crit_edge, %clk_reparent.exit.if.end27.i_crit_edge
  %37 = load i32, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp36.i = icmp eq i32 %37, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_enable_unlock.__already_done.156, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_enable_unlock.__already_done.156, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 191, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %38 = load i32, ptr @enable_refcnt, align 4
  %dec.i = add i32 %38, -1
  store i32 %dec.i, ptr @enable_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_enable_unlock.exit_crit_edge

if.end81.i.clk_enable_unlock.exit_crit_edge:      ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_enable_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @enable_owner, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @enable_lock, i32 noundef %call7) #21
  br label %clk_enable_unlock.exit

clk_enable_unlock.exit:                           ; preds = %if.end91.i, %if.end81.i.clk_enable_unlock.exit_crit_edge
  tail call fastcc void @__clk_set_parent_after(ptr noundef %core, ptr noundef %call, ptr noundef nonnull %parent)
  br label %cleanup

if.end8:                                          ; preds = %if.end.if.end8_crit_edge, %if.end.thread
  tail call fastcc void @__clk_set_parent_after(ptr noundef %core, ptr noundef %parent, ptr noundef %call)
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %clk_enable_unlock.exit
  %retval.0 = phi i32 [ %call4, %clk_enable_unlock.exit ], [ 0, %if.end8 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_phase(ptr noundef %core, i32 noundef %phase) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_phase, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_phase, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !806
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_phase, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, i32 noundef %phase) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !807
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !807
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_phase, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_phase.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_phase.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 222, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_phase_complete(ptr noundef %core, i32 noundef %phase) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_phase_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_phase_complete, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !808
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_phase_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, i32 noundef %phase) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !809
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !809
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_phase_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_phase_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_phase_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 229, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_duty_cycle(ptr noundef %core, ptr noundef %duty) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_duty_cycle, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_duty_cycle, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !810
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_duty_cycle, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, ptr noundef %duty) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !811
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !811
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_duty_cycle, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_duty_cycle.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_duty_cycle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 258, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_clk_set_duty_cycle_complete(ptr noundef %core, ptr noundef %duty) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_duty_cycle_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_clk_set_duty_cycle_complete, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !761

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !753

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !812
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_duty_cycle_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %core, ptr noundef %duty) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !813
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !813
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !753

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.60, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_clk_set_duty_cycle_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_clk_set_duty_cycle_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_clk_set_duty_cycle_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 265, ptr noundef nonnull @.str.59) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  %38 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_core_update_duty_cycle_nolock(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %duty1 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 25
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %0 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops, align 4
  %get_duty_cycle = getelementptr inbounds %struct.clk_ops, ptr %1, i32 0, i32 20
  %2 = ptrtoint ptr %get_duty_cycle to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %get_duty_cycle, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %4 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.then.if.else.i_crit_edge, label %land.lhs.true.i

if.then.if.else.i_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then
  %flags.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %7, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %if.then.i

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

common.ret26:                                     ; preds = %reset, %lor.lhs.false.common.ret26_crit_edge, %if.else.i, %if.then.i
  %common.ret26.op = phi i32 [ %call.i, %if.then.i ], [ %ret.0, %reset ], [ 0, %lor.lhs.false.common.ret26_crit_edge ], [ 0, %if.else.i ]
  ret i32 %common.ret26.op

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call fastcc i32 @clk_core_update_duty_cycle_nolock(ptr noundef nonnull %5) #21
  %8 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent.i, align 4
  %duty4.i = getelementptr inbounds %struct.clk_core, ptr %9, i32 0, i32 25
  %10 = ptrtoint ptr %duty4.i to i32
  call void @__asan_loadN_noabort(i32 %10, i32 8)
  %11 = load i64, ptr %duty4.i, align 4
  %12 = ptrtoint ptr %duty1 to i32
  call void @__asan_storeN_noabort(i32 %12, i32 8)
  store i64 %11, ptr %duty1, align 4
  br label %common.ret26

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then.if.else.i_crit_edge
  %13 = ptrtoint ptr %duty1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1, ptr %duty1, align 4
  %den.i25 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 25, i32 1
  %14 = ptrtoint ptr %den.i25 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 2, ptr %den.i25, align 4
  br label %common.ret26

if.end:                                           ; preds = %entry
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %15 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw, align 4
  %call4 = tail call i32 %3(ptr noundef %16, ptr noundef %duty1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end7, label %if.end.reset_crit_edge

if.end.reset_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %reset

if.end7:                                          ; preds = %if.end
  %den = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 25, i32 1
  %17 = ptrtoint ptr %den to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %den, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp = icmp eq i32 %18, 0
  br i1 %cmp, label %if.end7.reset_crit_edge, label %lor.lhs.false

if.end7.reset_crit_edge:                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %reset

lor.lhs.false:                                    ; preds = %if.end7
  %19 = ptrtoint ptr %duty1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %duty1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %18)
  %cmp9 = icmp ugt i32 %20, %18
  br i1 %cmp9, label %lor.lhs.false.reset_crit_edge, label %lor.lhs.false.common.ret26_crit_edge

lor.lhs.false.common.ret26_crit_edge:             ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %common.ret26

lor.lhs.false.reset_crit_edge:                    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %reset

reset:                                            ; preds = %lor.lhs.false.reset_crit_edge, %if.end7.reset_crit_edge, %if.end.reset_crit_edge
  %ret.0 = phi i32 [ %call4, %if.end.reset_crit_edge ], [ -22, %lor.lhs.false.reset_crit_edge ], [ -22, %if.end7.reset_crit_edge ]
  %21 = ptrtoint ptr %duty1 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %duty1, align 4
  %den.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 25, i32 1
  %22 = ptrtoint ptr %den.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 2, ptr %den.i, align 4
  br label %common.ret26
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @debugfs_create_dir(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @debugfs_create_file(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_debug_create_one(ptr noundef %core, ptr noundef %pdentry) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %core, null
  %tobool1.not = icmp eq ptr %pdentry, null
  %or.cond = or i1 %tobool.not, %tobool1.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %core, align 4
  %call = tail call ptr @debugfs_create_dir(ptr noundef %1, ptr noundef nonnull %pdentry) #21
  %dentry = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 30
  %2 = ptrtoint ptr %dentry to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call, ptr %dentry, align 4
  %call2 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.101, i16 noundef zeroext 292, ptr noundef %call, ptr noundef nonnull %core, ptr noundef nonnull @clk_rate_fops) #21
  %call3 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.102, i16 noundef zeroext 292, ptr noundef %call, ptr noundef nonnull %core, ptr noundef nonnull @clk_min_rate_fops) #21
  %call4 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.103, i16 noundef zeroext 292, ptr noundef %call, ptr noundef nonnull %core, ptr noundef nonnull @clk_max_rate_fops) #21
  %accuracy = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 23
  tail call void @debugfs_create_ulong(ptr noundef nonnull @.str.104, i16 noundef zeroext 292, ptr noundef %call, ptr noundef %accuracy) #21
  %phase = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 24
  tail call void @debugfs_create_u32(ptr noundef nonnull @.str.105, i16 noundef zeroext 292, ptr noundef %call, ptr noundef %phase) #21
  %call5 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.106, i16 noundef zeroext 292, ptr noundef %call, ptr noundef nonnull %core, ptr noundef nonnull @clk_flags_fops) #21
  %prepare_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 19
  tail call void @debugfs_create_u32(ptr noundef nonnull @.str.107, i16 noundef zeroext 292, ptr noundef %call, ptr noundef %prepare_count) #21
  %enable_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 18
  tail call void @debugfs_create_u32(ptr noundef nonnull @.str.108, i16 noundef zeroext 292, ptr noundef %call, ptr noundef %enable_count) #21
  %protect_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 20
  tail call void @debugfs_create_u32(ptr noundef nonnull @.str.109, i16 noundef zeroext 292, ptr noundef %call, ptr noundef %protect_count) #21
  %notifier_count = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 29
  tail call void @debugfs_create_u32(ptr noundef nonnull @.str.110, i16 noundef zeroext 292, ptr noundef %call, ptr noundef %notifier_count) #21
  %call6 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.111, i16 noundef zeroext 292, ptr noundef %call, ptr noundef nonnull %core, ptr noundef nonnull @clk_duty_cycle_fops) #21
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 8
  %3 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %cmp.not = icmp eq i8 %4, 0
  br i1 %cmp.not, label %if.end.if.end17_crit_edge, label %if.end10

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17

if.end10:                                         ; preds = %if.end
  %call9 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.112, i16 noundef zeroext 292, ptr noundef %call, ptr noundef nonnull %core, ptr noundef nonnull @current_parent_fops) #21
  %5 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %5)
  %.pr = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %.pr)
  %cmp13 = icmp ugt i8 %.pr, 1
  br i1 %cmp13, label %if.then15, label %if.end10.if.end17_crit_edge

if.end10.if.end17_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17

if.then15:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  %call16 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.113, i16 noundef zeroext 292, ptr noundef %call, ptr noundef nonnull %core, ptr noundef nonnull @possible_parents_fops) #21
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end10.if.end17_crit_edge, %if.end.if.end17_crit_edge
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %debug_init = getelementptr inbounds %struct.clk_ops, ptr %7, i32 0, i32 24
  %8 = ptrtoint ptr %debug_init to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %debug_init, align 4
  %tobool18.not = icmp eq ptr %9, null
  br i1 %tobool18.not, label %if.end17.cleanup_crit_edge, label %if.then19

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then19:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %12 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dentry, align 4
  tail call void %9(ptr noundef %11, ptr noundef %13) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then19, %if.end17.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @seq_lseek(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @seq_read(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_summary_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @clk_summary_show, ptr noundef %1) #21
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @single_release(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @single_open(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_summary_show(ptr noundef %s, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.79) #21
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.80) #21
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.81) #21
  tail call fastcc void @clk_prepare_lock()
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool.not35 = icmp eq ptr %3, null
  br i1 %tobool.not35, label %entry.for.end17_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end17_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end17

for.body:                                         ; preds = %for.inc16.for.body_crit_edge, %entry.for.body_crit_edge
  %4 = phi ptr [ %10, %for.inc16.for.body_crit_edge ], [ %3, %entry.for.body_crit_edge ]
  %lists.036 = phi ptr [ %incdec.ptr, %for.inc16.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %tobool1.not = icmp eq ptr %6, null
  %add.ptr = getelementptr i8, ptr %6, i32 -104
  %tobool4.not3337 = icmp eq ptr %add.ptr, null
  %tobool4.not33 = or i1 %tobool1.not, %tobool4.not3337
  br i1 %tobool4.not33, label %for.body.for.inc16_crit_edge, label %for.body.for.body5_crit_edge

for.body.for.body5_crit_edge:                     ; preds = %for.body
  br label %for.body5

for.body.for.inc16_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc16

for.body5:                                        ; preds = %for.body5.for.body5_crit_edge, %for.body.for.body5_crit_edge
  %c.034 = phi ptr [ %add.ptr12, %for.body5.for.body5_crit_edge ], [ %add.ptr, %for.body.for.body5_crit_edge ]
  tail call fastcc void @clk_summary_show_subtree(ptr noundef %s, ptr noundef nonnull %c.034, i32 noundef 0)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %c.034, i32 0, i32 27
  %7 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %child_node, align 4
  %tobool8.not = icmp eq ptr %8, null
  %add.ptr12 = getelementptr i8, ptr %8, i32 -104
  %tobool4.not38 = icmp eq ptr %add.ptr12, null
  %tobool4.not = or i1 %tobool8.not, %tobool4.not38
  br i1 %tobool4.not, label %for.body5.for.inc16_crit_edge, label %for.body5.for.body5_crit_edge

for.body5.for.body5_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body5

for.body5.for.inc16_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc16

for.inc16:                                        ; preds = %for.body5.for.inc16_crit_edge, %for.body.for.inc16_crit_edge
  %incdec.ptr = getelementptr ptr, ptr %lists.036, i32 1
  %9 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %incdec.ptr, align 4
  %tobool.not = icmp eq ptr %10, null
  br i1 %tobool.not, label %for.inc16.for.end17_crit_edge, label %for.inc16.for.body_crit_edge

for.inc16.for.body_crit_edge:                     ; preds = %for.inc16
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc16.for.end17_crit_edge:                    ; preds = %for.inc16
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end17

for.end17:                                        ; preds = %for.inc16.for.end17_crit_edge, %entry.for.end17_crit_edge
  %11 = load ptr, ptr @prepare_owner, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %11, %15
  br i1 %cmp.not.i, label %for.end17.if.end27.i_crit_edge, label %land.rhs.i

for.end17.if.end27.i_crit_edge:                   ; preds = %for.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %for.end17
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %for.end17.if.end27.i_crit_edge
  %16 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp36.i = icmp eq i32 %16, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %17 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %17, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_summary_show_subtree(ptr noundef %s, ptr noundef %c, i32 noundef %level) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 17
  %0 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not.i = icmp eq i8 %1, 0
  br i1 %tobool.not.i, label %entry.clk_pm_runtime_get.exit_crit_edge, label %if.end.i

entry.clk_pm_runtime_get.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_pm_runtime_get.exit

if.end.i:                                         ; preds = %entry
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 4
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_resume(ptr noundef %3, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.then1.i, label %if.end.i.clk_pm_runtime_get.exit_crit_edge

if.end.i.clk_pm_runtime_get.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_pm_runtime_get.exit

if.then1.i:                                       ; preds = %if.end.i
  %4 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %5, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !757
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !758
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.then1.i.clk_pm_runtime_get.exit_crit_edge, label %do.end11.i.i.i.i.i

if.then1.i.clk_pm_runtime_get.exit_crit_edge:     ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_pm_runtime_get.exit

do.end11.i.i.i.i.i:                               ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !759
  br label %clk_pm_runtime_get.exit

clk_pm_runtime_get.exit:                          ; preds = %do.end11.i.i.i.i.i, %if.then1.i.clk_pm_runtime_get.exit_crit_edge, %if.end.i.clk_pm_runtime_get.exit_crit_edge, %entry.clk_pm_runtime_get.exit_crit_edge
  %mul.i = mul i32 %level, 3
  %add.i = add i32 %mul.i, 1
  %sub.i = sub i32 30, %mul.i
  %7 = ptrtoint ptr %c to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %c, align 4
  %enable_count.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 18
  %9 = ptrtoint ptr %enable_count.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %enable_count.i, align 4
  %prepare_count.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 19
  %11 = ptrtoint ptr %prepare_count.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %prepare_count.i, align 4
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 20
  %13 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %protect_count.i, align 4
  %tobool.not.i.i = icmp eq ptr %c, null
  br i1 %tobool.not.i.i, label %clk_pm_runtime_get.exit.clk_core_get_accuracy_recalc.exit.i_crit_edge, label %land.lhs.true.i.i

clk_pm_runtime_get.exit.clk_core_get_accuracy_recalc.exit.i_crit_edge: ; preds = %clk_pm_runtime_get.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_accuracy_recalc.exit.i

land.lhs.true.i.i:                                ; preds = %clk_pm_runtime_get.exit
  %flags.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 15
  %15 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %16, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool1.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.if.end.i.i.i_crit_edge, label %if.then.i.i

land.lhs.true.i.i.if.end.i.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__clk_recalc_rates(ptr noundef nonnull %c, i32 noundef 0) #21
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i, %land.lhs.true.i.i.if.end.i.i.i_crit_edge
  %num_parents.i.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 8
  %17 = ptrtoint ptr %num_parents.i.i.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %num_parents.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool1.not.i.i.i = icmp eq i8 %18, 0
  br i1 %tobool1.not.i.i.i, label %if.end.i.i.i.if.then3.i.i.i_crit_edge, label %lor.lhs.false.i.i.i

if.end.i.i.i.if.then3.i.i.i_crit_edge:            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end.i.i.i
  %parent.i.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 6
  %19 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %parent.i.i.i, align 4
  %tobool2.not.i.i.i = icmp eq ptr %20, null
  br i1 %tobool2.not.i.i.i, label %lor.lhs.false.i.i.i.land.lhs.true.i36.i_crit_edge, label %lor.lhs.false.i.i.i.if.then3.i.i.i_crit_edge

lor.lhs.false.i.i.i.if.then3.i.i.i_crit_edge:     ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i.i.i

lor.lhs.false.i.i.i.land.lhs.true.i36.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true.i36.i

if.then3.i.i.i:                                   ; preds = %lor.lhs.false.i.i.i.if.then3.i.i.i_crit_edge, %if.end.i.i.i.if.then3.i.i.i_crit_edge
  %rate.i.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 10
  %21 = ptrtoint ptr %rate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %rate.i.i.i, align 4
  br label %land.lhs.true.i36.i

land.lhs.true.i36.i:                              ; preds = %if.then3.i.i.i, %lor.lhs.false.i.i.i.land.lhs.true.i36.i_crit_edge
  %retval.0.i.i.ph.i = phi i32 [ 0, %lor.lhs.false.i.i.i.land.lhs.true.i36.i_crit_edge ], [ %22, %if.then3.i.i.i ]
  %23 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags.i.i, align 4
  %and.i34.i = and i32 %24, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i34.i)
  %tobool1.not.i35.i = icmp eq i32 %and.i34.i, 0
  br i1 %tobool1.not.i35.i, label %land.lhs.true.i36.i.if.end.i.i38.i_crit_edge, label %if.then.i37.i

land.lhs.true.i36.i.if.end.i.i38.i_crit_edge:     ; preds = %land.lhs.true.i36.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i38.i

if.then.i37.i:                                    ; preds = %land.lhs.true.i36.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__clk_recalc_accuracies(ptr noundef nonnull %c) #21
  br label %if.end.i.i38.i

if.end.i.i38.i:                                   ; preds = %if.then.i37.i, %land.lhs.true.i36.i.if.end.i.i38.i_crit_edge
  %accuracy.i.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 23
  %25 = ptrtoint ptr %accuracy.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %accuracy.i.i.i, align 4
  br label %clk_core_get_accuracy_recalc.exit.i

clk_core_get_accuracy_recalc.exit.i:              ; preds = %if.end.i.i38.i, %clk_pm_runtime_get.exit.clk_core_get_accuracy_recalc.exit.i_crit_edge
  %retval.0.i.i50.i = phi i32 [ %retval.0.i.i.ph.i, %if.end.i.i38.i ], [ 0, %clk_pm_runtime_get.exit.clk_core_get_accuracy_recalc.exit.i_crit_edge ]
  %retval.0.i.i39.i = phi i32 [ %26, %if.end.i.i38.i ], [ 0, %clk_pm_runtime_get.exit.clk_core_get_accuracy_recalc.exit.i_crit_edge ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.82, i32 noundef %add.i, ptr noundef nonnull @.str.83, i32 noundef %sub.i, ptr noundef %8, i32 noundef %10, i32 noundef %12, i32 noundef %14, i32 noundef %retval.0.i.i50.i, i32 noundef %retval.0.i.i39.i) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %27 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i40.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i40.i, label %clk_core_get_accuracy_recalc.exit.i.if.end.i.i_crit_edge, label %land.rhs.i.i

clk_core_get_accuracy_recalc.exit.i.if.end.i.i_crit_edge: ; preds = %clk_core_get_accuracy_recalc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %clk_core_get_accuracy_recalc.exit.i
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, !prof !754

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2695, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i.i_crit_edge, %clk_core_get_accuracy_recalc.exit.i.if.end.i.i_crit_edge
  %ops.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 1
  %28 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ops.i.i, align 4
  %get_phase.i.i = getelementptr inbounds %struct.clk_ops, ptr %29, i32 0, i32 18
  %30 = ptrtoint ptr %get_phase.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %get_phase.i.i, align 4
  %tobool24.not.i.i = icmp eq ptr %31, null
  br i1 %tobool24.not.i.i, label %if.end.i.i.if.then.i_crit_edge, label %if.end26.i.i

if.end.i.i.if.then.i_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

if.end26.i.i:                                     ; preds = %if.end.i.i
  %hw.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 2
  %32 = ptrtoint ptr %hw.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw.i.i, align 4
  %call29.i.i = tail call i32 %31(ptr noundef %33) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call29.i.i)
  %cmp30.i.i = icmp sgt i32 %call29.i.i, -1
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.else.i

if.then31.i.i:                                    ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %phase.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 24
  %34 = ptrtoint ptr %phase.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %call29.i.i, ptr %phase.i.i, align 4
  br label %if.then.i

if.then.i:                                        ; preds = %if.then31.i.i, %if.end.i.i.if.then.i_crit_edge
  %retval.0.i.ph.i = phi i32 [ %call29.i.i, %if.then31.i.i ], [ 0, %if.end.i.i.if.then.i_crit_edge ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.84, i32 noundef %retval.0.i.ph.i) #21
  br label %if.end.i25

if.else.i:                                        ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.85) #21
  br label %if.end.i25

if.end.i25:                                       ; preds = %if.else.i, %if.then.i
  %call4.i = tail call fastcc i32 @clk_core_get_scaled_duty_cycle(ptr noundef %c, i32 noundef 100000) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.86, i32 noundef %call4.i) #21
  %35 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ops.i.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.clk_ops, ptr %36, i32 0, i32 6
  %37 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %is_enabled.i, align 4
  %tobool.not.i24 = icmp eq ptr %38, null
  br i1 %tobool.not.i24, label %if.else7.i, label %if.end.i44.i

if.end.i44.i:                                     ; preds = %if.end.i25
  %39 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %tobool2.not.i.i = icmp eq i8 %40, 0
  br i1 %tobool2.not.i.i, label %if.end.i44.i.if.end7.i.i_crit_edge, label %if.then3.i.i

if.end.i44.i.if.end7.i.i_crit_edge:               ; preds = %if.end.i44.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i.i

if.then3.i.i:                                     ; preds = %if.end.i44.i
  %dev.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 4
  %41 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %dev.i.i, align 4
  %usage_count.i.i.i = getelementptr inbounds %struct.device, ptr %42, i32 0, i32 12, i32 13
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i.i, i32 1, i32 3, i32 1) #21
  %43 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i.i, ptr %usage_count.i.i.i, i32 1, ptr elementtype(i32) %usage_count.i.i.i) #21, !srcloc !760
  %44 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %dev.i.i, align 4
  %runtime_status.i.i.i = getelementptr inbounds %struct.device, ptr %45, i32 0, i32 12, i32 18
  %46 = ptrtoint ptr %runtime_status.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %runtime_status.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %cmp.i.i.i = icmp eq i32 %47, 0
  br i1 %cmp.i.i.i, label %if.then3.i.i.if.end7.i.i_crit_edge, label %pm_runtime_active.exit.i.i

if.then3.i.i.if.end7.i.i_crit_edge:               ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i.i

pm_runtime_active.exit.i.i:                       ; preds = %if.then3.i.i
  %disable_depth.i.i.i = getelementptr inbounds %struct.device, ptr %45, i32 0, i32 12, i32 15
  %48 = ptrtoint ptr %disable_depth.i.i.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %bf.load.i.i.i = load i16, ptr %disable_depth.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8191, i16 %bf.load.i.i.i)
  %tobool.i.i.i = icmp ugt i16 %bf.load.i.i.i, 8191
  br i1 %tobool.i.i.i, label %pm_runtime_active.exit.i.i.if.end7.i.i_crit_edge, label %pm_runtime_active.exit.i.i.done.i.i_crit_edge

pm_runtime_active.exit.i.i.done.i.i_crit_edge:    ; preds = %pm_runtime_active.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %done.i.i

pm_runtime_active.exit.i.i.if.end7.i.i_crit_edge: ; preds = %pm_runtime_active.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %pm_runtime_active.exit.i.i.if.end7.i.i_crit_edge, %if.then3.i.i.if.end7.i.i_crit_edge, %if.end.i44.i.if.end7.i.i_crit_edge
  %49 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %ops.i.i, align 4
  %is_enabled9.i.i = getelementptr inbounds %struct.clk_ops, ptr %50, i32 0, i32 6
  %51 = ptrtoint ptr %is_enabled9.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %is_enabled9.i.i, align 4
  %hw.i45.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 2
  %53 = ptrtoint ptr %hw.i45.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %hw.i45.i, align 4
  %call10.i.i = tail call i32 %52(ptr noundef %54) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool11.i.not.i = icmp eq i32 %call10.i.i, 0
  %phi.sel.i = select i1 %tobool11.i.not.i, i32 78, i32 89
  br label %done.i.i

done.i.i:                                         ; preds = %if.end7.i.i, %pm_runtime_active.exit.i.i.done.i.i_crit_edge
  %ret.0.off0.i.i = phi i32 [ %phi.sel.i, %if.end7.i.i ], [ 78, %pm_runtime_active.exit.i.i.done.i.i_crit_edge ]
  %55 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool13.not.i.i = icmp eq i8 %56, 0
  br i1 %tobool13.not.i.i, label %done.i.i.clk_summary_show_one.exit_crit_edge, label %if.then14.i.i

done.i.i.clk_summary_show_one.exit_crit_edge:     ; preds = %done.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_summary_show_one.exit

if.then14.i.i:                                    ; preds = %done.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %dev15.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 4
  %57 = ptrtoint ptr %dev15.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %dev15.i.i, align 4
  %call.i.i46.i = tail call i32 @__pm_runtime_idle(ptr noundef %58, i32 noundef 5) #21
  br label %clk_summary_show_one.exit

if.else7.i:                                       ; preds = %if.end.i25
  call void @__sanitizer_cov_trace_pc() #23
  %enable.i = getelementptr inbounds %struct.clk_ops, ptr %36, i32 0, i32 4
  %59 = ptrtoint ptr %enable.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %enable.i, align 4
  %tobool9.not.i = icmp eq ptr %60, null
  %..i = select i1 %tobool9.not.i, i32 89, i32 63
  br label %clk_summary_show_one.exit

clk_summary_show_one.exit:                        ; preds = %if.else7.i, %if.then14.i.i, %done.i.i.clk_summary_show_one.exit_crit_edge
  %.sink.i = phi i32 [ %ret.0.off0.i.i, %done.i.i.clk_summary_show_one.exit_crit_edge ], [ %ret.0.off0.i.i, %if.then14.i.i ], [ %..i, %if.else7.i ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.87, i32 noundef %.sink.i) #21
  %61 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %62)
  %tobool.not.i27 = icmp eq i8 %62, 0
  br i1 %tobool.not.i27, label %clk_summary_show_one.exit.clk_pm_runtime_put.exit_crit_edge, label %if.end.i30

clk_summary_show_one.exit.clk_pm_runtime_put.exit_crit_edge: ; preds = %clk_summary_show_one.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_pm_runtime_put.exit

if.end.i30:                                       ; preds = %clk_summary_show_one.exit
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i28 = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 4
  %63 = ptrtoint ptr %dev.i28 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %dev.i28, align 4
  %call.i.i29 = tail call i32 @__pm_runtime_idle(ptr noundef %64, i32 noundef 4) #21
  br label %clk_pm_runtime_put.exit

clk_pm_runtime_put.exit:                          ; preds = %if.end.i30, %clk_summary_show_one.exit.clk_pm_runtime_put.exit_crit_edge
  %children = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 26
  %65 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %children, align 4
  %tobool.not = icmp eq ptr %66, null
  %add.ptr = getelementptr i8, ptr %66, i32 -104
  %tobool2.not3335 = icmp eq ptr %add.ptr, null
  %tobool2.not33 = or i1 %tobool.not, %tobool2.not3335
  br i1 %tobool2.not33, label %clk_pm_runtime_put.exit.for.end_crit_edge, label %for.body.lr.ph

clk_pm_runtime_put.exit.for.end_crit_edge:        ; preds = %clk_pm_runtime_put.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %clk_pm_runtime_put.exit
  %add = add i32 %level, 1
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %child.034 = phi ptr [ %add.ptr, %for.body.lr.ph ], [ %add.ptr9, %for.body.for.body_crit_edge ]
  tail call fastcc void @clk_summary_show_subtree(ptr noundef %s, ptr noundef nonnull %child.034, i32 noundef %add)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.034, i32 0, i32 27
  %67 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %child_node, align 4
  %tobool5.not = icmp eq ptr %68, null
  %add.ptr9 = getelementptr i8, ptr %68, i32 -104
  %tobool2.not36 = icmp eq ptr %add.ptr9, null
  %tobool2.not = or i1 %tobool5.not, %tobool2.not36
  br i1 %tobool2.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %clk_pm_runtime_put.exit.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_dump_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @clk_dump_show, ptr noundef %1) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_dump_show(ptr noundef %s, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  tail call void @seq_putc(ptr noundef %s, i8 noundef zeroext 123) #21
  tail call fastcc void @clk_prepare_lock()
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool.not38 = icmp eq ptr %3, null
  br i1 %tobool.not38, label %entry.for.end18_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end18_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end18

for.body:                                         ; preds = %for.inc17.for.body_crit_edge, %entry.for.body_crit_edge
  %4 = phi ptr [ %12, %for.inc17.for.body_crit_edge ], [ %3, %entry.for.body_crit_edge ]
  %first_node.0.off040 = phi i1 [ %first_node.1.off0.lcssa, %for.inc17.for.body_crit_edge ], [ true, %entry.for.body_crit_edge ]
  %lists.039 = phi ptr [ %incdec.ptr, %for.inc17.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %tobool1.not = icmp eq ptr %6, null
  %add.ptr = getelementptr i8, ptr %6, i32 -104
  %tobool4.not3542 = icmp eq ptr %add.ptr, null
  %tobool4.not35 = or i1 %tobool1.not, %tobool4.not3542
  br i1 %tobool4.not35, label %for.body.for.inc17_crit_edge, label %for.body5.preheader

for.body.for.inc17_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc17

for.body5.preheader:                              ; preds = %for.body
  br i1 %first_node.0.off040, label %for.body5.preheader.if.end.peel_crit_edge, label %if.then.peel

for.body5.preheader.if.end.peel_crit_edge:        ; preds = %for.body5.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.peel

if.then.peel:                                     ; preds = %for.body5.preheader
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @seq_putc(ptr noundef %s, i8 noundef zeroext 44) #21
  br label %if.end.peel

if.end.peel:                                      ; preds = %if.then.peel, %for.body5.preheader.if.end.peel_crit_edge
  tail call fastcc void @clk_dump_subtree(ptr noundef %s, ptr noundef nonnull %add.ptr, i32 noundef 0)
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %tobool9.not.peel = icmp eq ptr %8, null
  %add.ptr13.peel = getelementptr i8, ptr %8, i32 -104
  %tobool4.not.peel43 = icmp eq ptr %add.ptr13.peel, null
  %tobool4.not.peel = or i1 %tobool9.not.peel, %tobool4.not.peel43
  br i1 %tobool4.not.peel, label %if.end.peel.for.inc17_crit_edge, label %if.end.peel.if.end_crit_edge

if.end.peel.if.end_crit_edge:                     ; preds = %if.end.peel
  br label %if.end

if.end.peel.for.inc17_crit_edge:                  ; preds = %if.end.peel
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc17

if.end:                                           ; preds = %if.end.if.end_crit_edge, %if.end.peel.if.end_crit_edge
  %c.037 = phi ptr [ %add.ptr13, %if.end.if.end_crit_edge ], [ %add.ptr13.peel, %if.end.peel.if.end_crit_edge ]
  tail call void @seq_putc(ptr noundef %s, i8 noundef zeroext 44) #21
  tail call fastcc void @clk_dump_subtree(ptr noundef %s, ptr noundef nonnull %c.037, i32 noundef 0)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %c.037, i32 0, i32 27
  %9 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %child_node, align 4
  %tobool9.not = icmp eq ptr %10, null
  %add.ptr13 = getelementptr i8, ptr %10, i32 -104
  %tobool4.not44 = icmp eq ptr %add.ptr13, null
  %tobool4.not = or i1 %tobool9.not, %tobool4.not44
  br i1 %tobool4.not, label %if.end.for.inc17_crit_edge, label %if.end.if.end_crit_edge, !llvm.loop !814

if.end.if.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.for.inc17_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc17

for.inc17:                                        ; preds = %if.end.for.inc17_crit_edge, %if.end.peel.for.inc17_crit_edge, %for.body.for.inc17_crit_edge
  %first_node.1.off0.lcssa = phi i1 [ %first_node.0.off040, %for.body.for.inc17_crit_edge ], [ false, %if.end.peel.for.inc17_crit_edge ], [ false, %if.end.for.inc17_crit_edge ]
  %incdec.ptr = getelementptr ptr, ptr %lists.039, i32 1
  %11 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %incdec.ptr, align 4
  %tobool.not = icmp eq ptr %12, null
  br i1 %tobool.not, label %for.inc17.for.end18_crit_edge, label %for.inc17.for.body_crit_edge

for.inc17.for.body_crit_edge:                     ; preds = %for.inc17
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc17.for.end18_crit_edge:                    ; preds = %for.inc17
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end18

for.end18:                                        ; preds = %for.inc17.for.end18_crit_edge, %entry.for.end18_crit_edge
  %13 = load ptr, ptr @prepare_owner, align 4
  %14 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %13, %17
  br i1 %cmp.not.i, label %for.end18.if.end27.i_crit_edge, label %land.rhs.i

for.end18.if.end27.i_crit_edge:                   ; preds = %for.end18
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %for.end18
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %for.end18.if.end27.i_crit_edge
  %18 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp36.i = icmp eq i32 %18, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %19 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %19, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.88) #21
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_putc(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_dump_subtree(ptr noundef %s, ptr noundef %c, i32 noundef %level) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i.i, label %entry.if.end.i.i_crit_edge, label %land.rhs.i.i

entry.if.end.i.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %entry
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, !prof !754

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 623, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i.i_crit_edge, %entry.if.end.i.i_crit_edge
  %min_rate24.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 21
  %1 = ptrtoint ptr %min_rate24.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %min_rate24.i.i, align 4
  %max_rate25.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 22
  %3 = ptrtoint ptr %max_rate25.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_rate25.i.i, align 4
  %clks.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 28
  %5 = ptrtoint ptr %clks.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %clks.i.i, align 4
  %tobool27.not.i.i = icmp eq ptr %6, null
  %add.ptr.i.i = getelementptr i8, ptr %6, i32 -28
  %tobool29.not119123.i.i = icmp eq ptr %add.ptr.i.i, null
  %tobool29.not119.i.i = or i1 %tobool27.not.i.i, %tobool29.not119123.i.i
  br i1 %tobool29.not119.i.i, label %if.end.i.i.clk_core_get_boundaries.exit.i_crit_edge, label %if.end.i.i.for.body.i.i_crit_edge

if.end.i.i.for.body.i.i_crit_edge:                ; preds = %if.end.i.i
  br label %for.body.i.i

if.end.i.i.clk_core_get_boundaries.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.end.i.i.for.body.i.i_crit_edge
  %min_rate.0.i = phi i32 [ %9, %for.body.i.i.for.body.i.i_crit_edge ], [ %2, %if.end.i.i.for.body.i.i_crit_edge ]
  %clk_user.0120.i.i = phi ptr [ %add.ptr43.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %add.ptr.i.i, %if.end.i.i.for.body.i.i_crit_edge ]
  %min_rate30.i.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i.i, i32 0, i32 4
  %7 = ptrtoint ptr %min_rate30.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %min_rate30.i.i, align 4
  %9 = tail call i32 @llvm.umax.i32(i32 %min_rate.0.i, i32 %8) #21
  %clks_node.i.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i.i, i32 0, i32 7
  %10 = ptrtoint ptr %clks_node.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %clks_node.i.i, align 4
  %tobool39.not.i.i = icmp eq ptr %11, null
  %add.ptr43.i.i = getelementptr i8, ptr %11, i32 -28
  %tobool29.not125.i.i = icmp eq ptr %add.ptr43.i.i, null
  %tobool29.not.i.i = or i1 %tobool39.not.i.i, %tobool29.not125.i.i
  br i1 %tobool29.not.i.i, label %for.body.i.i.for.body61.i.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.body.i.i.for.body61.i.i_crit_edge:            ; preds = %for.body.i.i
  br label %for.body61.i.i

for.body61.i.i:                                   ; preds = %for.body61.i.i.for.body61.i.i_crit_edge, %for.body.i.i.for.body61.i.i_crit_edge
  %max_rate.0.i = phi i32 [ %14, %for.body61.i.i.for.body61.i.i_crit_edge ], [ %4, %for.body.i.i.for.body61.i.i_crit_edge ]
  %clk_user.1122.i.i = phi ptr [ %add.ptr78.i.i, %for.body61.i.i.for.body61.i.i_crit_edge ], [ %add.ptr.i.i, %for.body.i.i.for.body61.i.i_crit_edge ]
  %max_rate62.i.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i.i, i32 0, i32 5
  %12 = ptrtoint ptr %max_rate62.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %max_rate62.i.i, align 4
  %14 = tail call i32 @llvm.umin.i32(i32 %max_rate.0.i, i32 %13) #21
  %clks_node71.i.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i.i, i32 0, i32 7
  %15 = ptrtoint ptr %clks_node71.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %clks_node71.i.i, align 4
  %tobool74.not.i.i = icmp eq ptr %16, null
  %add.ptr78.i.i = getelementptr i8, ptr %16, i32 -28
  %tobool60.not126.i.i = icmp eq ptr %add.ptr78.i.i, null
  %tobool60.not.i.i = or i1 %tobool74.not.i.i, %tobool60.not126.i.i
  br i1 %tobool60.not.i.i, label %for.body61.i.i.clk_core_get_boundaries.exit.i_crit_edge, label %for.body61.i.i.for.body61.i.i_crit_edge

for.body61.i.i.for.body61.i.i_crit_edge:          ; preds = %for.body61.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body61.i.i

for.body61.i.i.clk_core_get_boundaries.exit.i_crit_edge: ; preds = %for.body61.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit.i

clk_core_get_boundaries.exit.i:                   ; preds = %for.body61.i.i.clk_core_get_boundaries.exit.i_crit_edge, %if.end.i.i.clk_core_get_boundaries.exit.i_crit_edge
  %min_rate.119.i = phi i32 [ %2, %if.end.i.i.clk_core_get_boundaries.exit.i_crit_edge ], [ %9, %for.body61.i.i.clk_core_get_boundaries.exit.i_crit_edge ]
  %max_rate.1.i = phi i32 [ %4, %if.end.i.i.clk_core_get_boundaries.exit.i_crit_edge ], [ %14, %for.body61.i.i.clk_core_get_boundaries.exit.i_crit_edge ]
  %17 = ptrtoint ptr %c to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %c, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.89, ptr noundef %18) #21
  %enable_count.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 18
  %19 = ptrtoint ptr %enable_count.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %enable_count.i, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.90, i32 noundef %20) #21
  %prepare_count.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 19
  %21 = ptrtoint ptr %prepare_count.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %prepare_count.i, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.91, i32 noundef %22) #21
  %protect_count.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 20
  %23 = ptrtoint ptr %protect_count.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %protect_count.i, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.92, i32 noundef %24) #21
  %tobool.not.i1.i = icmp eq ptr %c, null
  br i1 %tobool.not.i1.i, label %clk_core_get_accuracy_recalc.exit.critedge.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %clk_core_get_boundaries.exit.i
  %flags.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 15
  %25 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %26, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool1.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.if.end.i.i.i_crit_edge, label %if.then.i.i

land.lhs.true.i.i.if.end.i.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__clk_recalc_rates(ptr noundef nonnull %c, i32 noundef 0) #21
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i, %land.lhs.true.i.i.if.end.i.i.i_crit_edge
  %num_parents.i.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 8
  %27 = ptrtoint ptr %num_parents.i.i.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %num_parents.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool1.not.i.i.i = icmp eq i8 %28, 0
  br i1 %tobool1.not.i.i.i, label %if.end.i.i.i.if.then3.i.i.i_crit_edge, label %lor.lhs.false.i.i.i

if.end.i.i.i.if.then3.i.i.i_crit_edge:            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end.i.i.i
  %parent.i.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 6
  %29 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %parent.i.i.i, align 4
  %tobool2.not.i.i.i = icmp eq ptr %30, null
  br i1 %tobool2.not.i.i.i, label %lor.lhs.false.i.i.i.land.lhs.true.i6.i_crit_edge, label %lor.lhs.false.i.i.i.if.then3.i.i.i_crit_edge

lor.lhs.false.i.i.i.if.then3.i.i.i_crit_edge:     ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i.i.i

lor.lhs.false.i.i.i.land.lhs.true.i6.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true.i6.i

if.then3.i.i.i:                                   ; preds = %lor.lhs.false.i.i.i.if.then3.i.i.i_crit_edge, %if.end.i.i.i.if.then3.i.i.i_crit_edge
  %rate.i.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 10
  %31 = ptrtoint ptr %rate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rate.i.i.i, align 4
  br label %land.lhs.true.i6.i

land.lhs.true.i6.i:                               ; preds = %if.then3.i.i.i, %lor.lhs.false.i.i.i.land.lhs.true.i6.i_crit_edge
  %.sink.i = phi i32 [ %32, %if.then3.i.i.i ], [ 0, %lor.lhs.false.i.i.i.land.lhs.true.i6.i_crit_edge ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.93, i32 noundef %.sink.i) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.94, i32 noundef %min_rate.119.i) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.95, i32 noundef %max_rate.1.i) #21
  %33 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags.i.i, align 4
  %and.i4.i = and i32 %34, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i4.i)
  %tobool1.not.i5.i = icmp eq i32 %and.i4.i, 0
  br i1 %tobool1.not.i5.i, label %land.lhs.true.i6.i.if.end.i.i8.i_crit_edge, label %if.then.i7.i

land.lhs.true.i6.i.if.end.i.i8.i_crit_edge:       ; preds = %land.lhs.true.i6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i8.i

if.then.i7.i:                                     ; preds = %land.lhs.true.i6.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__clk_recalc_accuracies(ptr noundef nonnull %c) #21
  br label %if.end.i.i8.i

if.end.i.i8.i:                                    ; preds = %if.then.i7.i, %land.lhs.true.i6.i.if.end.i.i8.i_crit_edge
  %accuracy.i.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 23
  %35 = ptrtoint ptr %accuracy.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %accuracy.i.i.i, align 4
  br label %clk_core_get_accuracy_recalc.exit.i

clk_core_get_accuracy_recalc.exit.critedge.i:     ; preds = %clk_core_get_boundaries.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.93, i32 noundef 0) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.94, i32 noundef %min_rate.119.i) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.95, i32 noundef %max_rate.1.i) #21
  br label %clk_core_get_accuracy_recalc.exit.i

clk_core_get_accuracy_recalc.exit.i:              ; preds = %clk_core_get_accuracy_recalc.exit.critedge.i, %if.end.i.i8.i
  %retval.0.i.i9.i = phi i32 [ %36, %if.end.i.i8.i ], [ 0, %clk_core_get_accuracy_recalc.exit.critedge.i ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.96, i32 noundef %retval.0.i.i9.i) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %37 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.not.i10.i = icmp eq i32 %37, 0
  br i1 %tobool.not.i10.i, label %clk_core_get_accuracy_recalc.exit.i.if.end.i15.i_crit_edge, label %land.rhs.i13.i

clk_core_get_accuracy_recalc.exit.i.if.end.i15.i_crit_edge: ; preds = %clk_core_get_accuracy_recalc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i15.i

land.rhs.i13.i:                                   ; preds = %clk_core_get_accuracy_recalc.exit.i
  %call.i.i11.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11.i)
  %cmp.not.i12.i = icmp eq i32 %call.i.i11.i, 0
  br i1 %cmp.not.i12.i, label %do.end.i14.i, label %land.rhs.i13.i.if.end.i15.i_crit_edge, !prof !754

land.rhs.i13.i.if.end.i15.i_crit_edge:            ; preds = %land.rhs.i13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i15.i

do.end.i14.i:                                     ; preds = %land.rhs.i13.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2695, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i15.i

if.end.i15.i:                                     ; preds = %do.end.i14.i, %land.rhs.i13.i.if.end.i15.i_crit_edge, %clk_core_get_accuracy_recalc.exit.i.if.end.i15.i_crit_edge
  %ops.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 1
  %38 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ops.i.i, align 4
  %get_phase.i.i = getelementptr inbounds %struct.clk_ops, ptr %39, i32 0, i32 18
  %40 = ptrtoint ptr %get_phase.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %get_phase.i.i, align 4
  %tobool24.not.i.i = icmp eq ptr %41, null
  br i1 %tobool24.not.i.i, label %if.end.i15.i.if.then.i_crit_edge, label %if.end26.i.i

if.end.i15.i.if.then.i_crit_edge:                 ; preds = %if.end.i15.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

if.end26.i.i:                                     ; preds = %if.end.i15.i
  %hw.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 2
  %42 = ptrtoint ptr %hw.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hw.i.i, align 4
  %call29.i.i = tail call i32 %41(ptr noundef %43) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call29.i.i)
  %cmp30.i.i = icmp sgt i32 %call29.i.i, -1
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end26.i.i.clk_dump_one.exit_crit_edge

if.end26.i.i.clk_dump_one.exit_crit_edge:         ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_dump_one.exit

if.then31.i.i:                                    ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %phase.i.i = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 24
  %44 = ptrtoint ptr %phase.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %call29.i.i, ptr %phase.i.i, align 4
  br label %if.then.i

if.then.i:                                        ; preds = %if.then31.i.i, %if.end.i15.i.if.then.i_crit_edge
  %retval.0.i.ph.i = phi i32 [ %call29.i.i, %if.then31.i.i ], [ 0, %if.end.i15.i.if.then.i_crit_edge ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.97, i32 noundef %retval.0.i.ph.i) #21
  br label %clk_dump_one.exit

clk_dump_one.exit:                                ; preds = %if.then.i, %if.end26.i.i.clk_dump_one.exit_crit_edge
  %call3.i = tail call fastcc i32 @clk_core_get_scaled_duty_cycle(ptr noundef %c, i32 noundef 100000) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.98, i32 noundef %call3.i) #21
  %children = getelementptr inbounds %struct.clk_core, ptr %c, i32 0, i32 26
  %45 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %children, align 4
  %tobool.not = icmp eq ptr %46, null
  %add.ptr = getelementptr i8, ptr %46, i32 -104
  %tobool2.not2729 = icmp eq ptr %add.ptr, null
  %tobool2.not27 = or i1 %tobool.not, %tobool2.not2729
  br i1 %tobool2.not27, label %clk_dump_one.exit.for.end_crit_edge, label %for.body.lr.ph

clk_dump_one.exit.for.end_crit_edge:              ; preds = %clk_dump_one.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %clk_dump_one.exit
  %add = add i32 %level, 1
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %child.028 = phi ptr [ %add.ptr, %for.body.lr.ph ], [ %add.ptr9, %for.body.for.body_crit_edge ]
  tail call void @seq_putc(ptr noundef %s, i8 noundef zeroext 44) #21
  tail call fastcc void @clk_dump_subtree(ptr noundef %s, ptr noundef nonnull %child.028, i32 noundef %add)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.028, i32 0, i32 27
  %47 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %child_node, align 4
  %tobool5.not = icmp eq ptr %48, null
  %add.ptr9 = getelementptr i8, ptr %48, i32 -104
  %tobool2.not32 = icmp eq ptr %add.ptr9, null
  %tobool2.not = or i1 %tobool5.not, %tobool2.not32
  br i1 %tobool2.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %clk_dump_one.exit.for.end_crit_edge
  tail call void @seq_putc(ptr noundef %s, i8 noundef zeroext 125) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debugfs_create_ulong(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debugfs_create_u32(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @no_llseek(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debugfs_attr_read(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debugfs_attr_write(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_rate_fops_open(ptr noundef %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @simple_attr_open(ptr noundef %inode, ptr noundef %file, ptr noundef nonnull @clk_rate_get, ptr noundef null, ptr noundef nonnull @.str.114) #21
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_attr_release(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_attr_open(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_rate_get(ptr noundef %data, ptr nocapture noundef writeonly %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @clk_prepare_lock()
  %tobool.not.i = icmp eq ptr %data, null
  br i1 %tobool.not.i, label %entry.clk_core_get_rate_recalc.exit_crit_edge, label %land.lhs.true.i

entry.clk_core_get_rate_recalc.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_recalc.exit

land.lhs.true.i:                                  ; preds = %entry
  %flags.i = getelementptr inbounds %struct.clk_core, ptr %data, i32 0, i32 15
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.end.i.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__clk_recalc_rates(ptr noundef nonnull %data, i32 noundef 0) #21
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i, %land.lhs.true.i.if.end.i.i_crit_edge
  %num_parents.i.i = getelementptr inbounds %struct.clk_core, ptr %data, i32 0, i32 8
  %2 = ptrtoint ptr %num_parents.i.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %num_parents.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not.i.i = icmp eq i8 %3, 0
  br i1 %tobool1.not.i.i, label %if.end.i.i.if.then3.i.i_crit_edge, label %lor.lhs.false.i.i

if.end.i.i.if.then3.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i.i

lor.lhs.false.i.i:                                ; preds = %if.end.i.i
  %parent.i.i = getelementptr inbounds %struct.clk_core, ptr %data, i32 0, i32 6
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.clk_core_get_rate_recalc.exit_crit_edge, label %lor.lhs.false.i.i.if.then3.i.i_crit_edge

lor.lhs.false.i.i.if.then3.i.i_crit_edge:         ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i.i

lor.lhs.false.i.i.clk_core_get_rate_recalc.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_recalc.exit

if.then3.i.i:                                     ; preds = %lor.lhs.false.i.i.if.then3.i.i_crit_edge, %if.end.i.i.if.then3.i.i_crit_edge
  %rate.i.i = getelementptr inbounds %struct.clk_core, ptr %data, i32 0, i32 10
  %6 = ptrtoint ptr %rate.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rate.i.i, align 4
  br label %clk_core_get_rate_recalc.exit

clk_core_get_rate_recalc.exit:                    ; preds = %if.then3.i.i, %lor.lhs.false.i.i.clk_core_get_rate_recalc.exit_crit_edge, %entry.clk_core_get_rate_recalc.exit_crit_edge
  %retval.0.i.i = phi i32 [ %7, %if.then3.i.i ], [ 0, %lor.lhs.false.i.i.clk_core_get_rate_recalc.exit_crit_edge ], [ 0, %entry.clk_core_get_rate_recalc.exit_crit_edge ]
  %conv = zext i32 %retval.0.i.i to i64
  %8 = ptrtoint ptr %val to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %conv, ptr %val, align 8
  %9 = load ptr, ptr @prepare_owner, align 4
  %10 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %9, %13
  br i1 %cmp.not.i, label %clk_core_get_rate_recalc.exit.if.end27.i_crit_edge, label %land.rhs.i

clk_core_get_rate_recalc.exit.if.end27.i_crit_edge: ; preds = %clk_core_get_rate_recalc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i:                                       ; preds = %clk_core_get_rate_recalc.exit
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i1, !prof !753

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i1:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i1, %land.rhs.i.if.end27.i_crit_edge, %clk_core_get_rate_recalc.exit.if.end27.i_crit_edge
  %14 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp36.i = icmp eq i32 %14, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %15 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %15, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_min_rate_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @clk_min_rate_show, ptr noundef %1) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_min_rate_show(ptr noundef %s, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  tail call fastcc void @clk_prepare_lock()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.rhs.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 623, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %min_rate24.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 21
  %3 = ptrtoint ptr %min_rate24.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %min_rate24.i, align 4
  %clks.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 28
  %5 = ptrtoint ptr %clks.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %clks.i, align 4
  %tobool27.not.i = icmp eq ptr %6, null
  %add.ptr.i = getelementptr i8, ptr %6, i32 -28
  %tobool29.not119123.i = icmp eq ptr %add.ptr.i, null
  %tobool29.not119.i = or i1 %tobool27.not.i, %tobool29.not119123.i
  br i1 %tobool29.not119.i, label %if.end.i.clk_core_get_boundaries.exit_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.clk_core_get_boundaries.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %min_rate.0 = phi i32 [ %9, %for.body.i.for.body.i_crit_edge ], [ %4, %if.end.i.for.body.i_crit_edge ]
  %clk_user.0120.i = phi ptr [ %add.ptr43.i, %for.body.i.for.body.i_crit_edge ], [ %add.ptr.i, %if.end.i.for.body.i_crit_edge ]
  %min_rate30.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i, i32 0, i32 4
  %7 = ptrtoint ptr %min_rate30.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %min_rate30.i, align 4
  %9 = tail call i32 @llvm.umax.i32(i32 %min_rate.0, i32 %8) #21
  %clks_node.i = getelementptr inbounds %struct.clk, ptr %clk_user.0120.i, i32 0, i32 7
  %10 = ptrtoint ptr %clks_node.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %clks_node.i, align 4
  %tobool39.not.i = icmp eq ptr %11, null
  %add.ptr43.i = getelementptr i8, ptr %11, i32 -28
  %tobool29.not125.i = icmp eq ptr %add.ptr43.i, null
  %tobool29.not.i = or i1 %tobool39.not.i, %tobool29.not125.i
  br i1 %tobool29.not.i, label %for.body.i.for.body61.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.for.body61.i_crit_edge:                ; preds = %for.body.i
  br label %for.body61.i

for.body61.i:                                     ; preds = %for.body61.i.for.body61.i_crit_edge, %for.body.i.for.body61.i_crit_edge
  %12 = phi ptr [ %14, %for.body61.i.for.body61.i_crit_edge ], [ %6, %for.body.i.for.body61.i_crit_edge ]
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %tobool74.not.i = icmp eq ptr %14, null
  %add.ptr78.i = getelementptr i8, ptr %14, i32 -28
  %tobool60.not126.i = icmp eq ptr %add.ptr78.i, null
  %tobool60.not.i = or i1 %tobool74.not.i, %tobool60.not126.i
  br i1 %tobool60.not.i, label %for.body61.i.clk_core_get_boundaries.exit_crit_edge, label %for.body61.i.for.body61.i_crit_edge

for.body61.i.for.body61.i_crit_edge:              ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body61.i

for.body61.i.clk_core_get_boundaries.exit_crit_edge: ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit

clk_core_get_boundaries.exit:                     ; preds = %for.body61.i.clk_core_get_boundaries.exit_crit_edge, %if.end.i.clk_core_get_boundaries.exit_crit_edge
  %min_rate.16 = phi i32 [ %4, %if.end.i.clk_core_get_boundaries.exit_crit_edge ], [ %9, %for.body61.i.clk_core_get_boundaries.exit_crit_edge ]
  %15 = load ptr, ptr @prepare_owner, align 4
  %16 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %cmp.not.i2 = icmp eq ptr %15, %19
  br i1 %cmp.not.i2, label %clk_core_get_boundaries.exit.if.end27.i_crit_edge, label %land.rhs.i3

clk_core_get_boundaries.exit.if.end27.i_crit_edge: ; preds = %clk_core_get_boundaries.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i3:                                      ; preds = %clk_core_get_boundaries.exit
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i3.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i3.if.end27.i_crit_edge:                 ; preds = %land.rhs.i3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i3
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i3.if.end27.i_crit_edge, %clk_core_get_boundaries.exit.if.end27.i_crit_edge
  %20 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp36.i = icmp eq i32 %20, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %21 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %21, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.115, i32 noundef %min_rate.16) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_max_rate_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @clk_max_rate_show, ptr noundef %1) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_max_rate_show(ptr noundef %s, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  tail call fastcc void @clk_prepare_lock()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.rhs.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !754

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 623, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %max_rate25.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 22
  %3 = ptrtoint ptr %max_rate25.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_rate25.i, align 4
  %clks.i = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 28
  %5 = ptrtoint ptr %clks.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %clks.i, align 4
  %tobool27.not.i = icmp eq ptr %6, null
  %add.ptr.i = getelementptr i8, ptr %6, i32 -28
  %tobool29.not119123.i = icmp eq ptr %add.ptr.i, null
  %tobool29.not119.i = or i1 %tobool27.not.i, %tobool29.not119123.i
  br i1 %tobool29.not119.i, label %if.end.i.clk_core_get_boundaries.exit_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.clk_core_get_boundaries.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %7 = phi ptr [ %9, %for.body.i.for.body.i_crit_edge ], [ %6, %if.end.i.for.body.i_crit_edge ]
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool39.not.i = icmp eq ptr %9, null
  %add.ptr43.i = getelementptr i8, ptr %9, i32 -28
  %tobool29.not125.i = icmp eq ptr %add.ptr43.i, null
  %tobool29.not.i = or i1 %tobool39.not.i, %tobool29.not125.i
  br i1 %tobool29.not.i, label %for.body.i.for.body61.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.for.body61.i_crit_edge:                ; preds = %for.body.i
  br label %for.body61.i

for.body61.i:                                     ; preds = %for.body61.i.for.body61.i_crit_edge, %for.body.i.for.body61.i_crit_edge
  %max_rate.0 = phi i32 [ %12, %for.body61.i.for.body61.i_crit_edge ], [ %4, %for.body.i.for.body61.i_crit_edge ]
  %clk_user.1122.i = phi ptr [ %add.ptr78.i, %for.body61.i.for.body61.i_crit_edge ], [ %add.ptr.i, %for.body.i.for.body61.i_crit_edge ]
  %max_rate62.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i, i32 0, i32 5
  %10 = ptrtoint ptr %max_rate62.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_rate62.i, align 4
  %12 = tail call i32 @llvm.umin.i32(i32 %max_rate.0, i32 %11) #21
  %clks_node71.i = getelementptr inbounds %struct.clk, ptr %clk_user.1122.i, i32 0, i32 7
  %13 = ptrtoint ptr %clks_node71.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %clks_node71.i, align 4
  %tobool74.not.i = icmp eq ptr %14, null
  %add.ptr78.i = getelementptr i8, ptr %14, i32 -28
  %tobool60.not126.i = icmp eq ptr %add.ptr78.i, null
  %tobool60.not.i = or i1 %tobool74.not.i, %tobool60.not126.i
  br i1 %tobool60.not.i, label %for.body61.i.clk_core_get_boundaries.exit_crit_edge, label %for.body61.i.for.body61.i_crit_edge

for.body61.i.for.body61.i_crit_edge:              ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body61.i

for.body61.i.clk_core_get_boundaries.exit_crit_edge: ; preds = %for.body61.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_boundaries.exit

clk_core_get_boundaries.exit:                     ; preds = %for.body61.i.clk_core_get_boundaries.exit_crit_edge, %if.end.i.clk_core_get_boundaries.exit_crit_edge
  %max_rate.1 = phi i32 [ %4, %if.end.i.clk_core_get_boundaries.exit_crit_edge ], [ %12, %for.body61.i.clk_core_get_boundaries.exit_crit_edge ]
  %15 = load ptr, ptr @prepare_owner, align 4
  %16 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %cmp.not.i2 = icmp eq ptr %15, %19
  br i1 %cmp.not.i2, label %clk_core_get_boundaries.exit.if.end27.i_crit_edge, label %land.rhs.i3

clk_core_get_boundaries.exit.if.end27.i_crit_edge: ; preds = %clk_core_get_boundaries.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i3:                                      ; preds = %clk_core_get_boundaries.exit
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i3.if.end27.i_crit_edge, label %if.then.i, !prof !753

land.rhs.i3.if.end27.i_crit_edge:                 ; preds = %land.rhs.i3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i3
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i3.if.end27.i_crit_edge, %clk_core_get_boundaries.exit.if.end27.i_crit_edge
  %20 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp36.i = icmp eq i32 %20, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %21 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %21, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.clk_prepare_unlock.exit_crit_edge

if.end81.i.clk_prepare_unlock.exit_crit_edge:     ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit

clk_prepare_unlock.exit:                          ; preds = %if.end91.i, %if.end81.i.clk_prepare_unlock.exit_crit_edge
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.115, i32 noundef %max_rate.1) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_flags_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @clk_flags_show, ptr noundef %1) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_flags_show(ptr noundef %s, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %flags1 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not20 = icmp eq i32 %3, 0
  br i1 %tobool.not20, label %entry.if.end9_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.023 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %flags.022 = phi i32 [ %flags.1, %for.inc.for.body_crit_edge ], [ %3, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [12 x %struct.anon.119], ptr @clk_flags, i32 0, i32 %i.023
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %and = and i32 %5, %flags.022
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %name = getelementptr [12 x %struct.anon.119], ptr @clk_flags, i32 0, i32 %i.023, i32 1
  %6 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %name, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.33, ptr noundef %7) #21
  %neg = xor i32 %5, -1
  %and6 = and i32 %flags.022, %neg
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %flags.1 = phi i32 [ %and6, %if.then ], [ %flags.022, %for.body.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.023, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %flags.1)
  %tobool.not = icmp eq i32 %flags.1, 0
  %tobool.not.not = xor i1 %tobool.not, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %i.023)
  %cmp = icmp ult i32 %i.023, 11
  %or.cond = select i1 %tobool.not.not, i1 %cmp, i1 false
  br i1 %or.cond, label %for.inc.for.body_crit_edge, label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc
  br i1 %tobool.not, label %for.end.if.end9_crit_edge, label %if.then8

for.end.if.end9_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then8:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.116, i32 noundef %flags.1) #21
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %for.end.if.end9_crit_edge, %entry.if.end9_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_duty_cycle_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @clk_duty_cycle_show, ptr noundef %1) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @clk_duty_cycle_show(ptr noundef %s, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %duty1 = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %duty1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %duty1, align 4
  %den = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 25, i32 1
  %4 = ptrtoint ptr %den to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %den, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.129, i32 noundef %3, i32 noundef %5) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @current_parent_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @current_parent_show, ptr noundef %1) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @current_parent_show(ptr noundef %s, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %parent = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.33, ptr noundef %5) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @possible_parents_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @possible_parents_show, ptr noundef %1) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @possible_parents_show(ptr noundef %s, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %3)
  %cmp11 = icmp ugt i8 %3, 1
  br i1 %cmp11, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.012 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  tail call fastcc void @possible_parent_show(ptr noundef %s, ptr noundef %1, i32 noundef %i.012, i8 noundef zeroext 32)
  %inc = add nuw nsw i32 %i.012, 1
  %4 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %num_parents, align 4
  %conv = zext i8 %5 to i32
  %sub = add nsw i32 %conv, -1
  %cmp = icmp slt i32 %inc, %sub
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %inc, %for.body.for.end_crit_edge ]
  tail call fastcc void @possible_parent_show(ptr noundef %s, ptr noundef %1, i32 noundef %i.0.lcssa, i8 noundef zeroext 10)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @possible_parent_show(ptr noundef %s, ptr noundef %core, i32 noundef %i, i8 noundef zeroext %terminator) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = trunc i32 %i to i8
  %call = tail call fastcc ptr @clk_core_get_parent_by_index(ptr noundef %core, i8 noundef zeroext %conv)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %call, align 4
  tail call void @seq_puts(ptr noundef %s, ptr noundef %1) #21
  br label %if.end27

if.else:                                          ; preds = %entry
  %parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 7
  %2 = ptrtoint ptr %parents to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parents, align 4
  %name1 = getelementptr %struct.clk_parent_map, ptr %3, i32 %i, i32 3
  %4 = ptrtoint ptr %name1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %name1, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %if.else7, label %if.then3

if.then3:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull %5) #21
  br label %if.end27

if.else7:                                         ; preds = %if.else
  %fw_name = getelementptr %struct.clk_parent_map, ptr %3, i32 %i, i32 2
  %6 = ptrtoint ptr %fw_name to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fw_name, align 4
  %tobool10.not = icmp eq ptr %7, null
  br i1 %tobool10.not, label %if.else15, label %if.then11

if.then11:                                        ; preds = %if.else7
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.130, ptr noundef nonnull %7) #21
  br label %if.end27

if.else15:                                        ; preds = %if.else7
  %index = getelementptr %struct.clk_parent_map, ptr %3, i32 %i, i32 4
  %8 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %cmp = icmp sgt i32 %9, -1
  br i1 %cmp, label %if.then19, label %if.else24

if.then19:                                        ; preds = %if.else15
  call void @__sanitizer_cov_trace_pc() #23
  %of_node = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 5
  %10 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %of_node, align 4
  %call23 = tail call ptr @of_clk_get_parent_name(ptr noundef %11, i32 noundef %9)
  tail call void @seq_puts(ptr noundef %s, ptr noundef %call23) #21
  br label %if.end27

if.else24:                                        ; preds = %if.else15
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.131) #21
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then19, %if.then11, %if.then3, %if.then
  tail call void @seq_putc(ptr noundef %s, i8 noundef zeroext %terminator) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kstrdup_const(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_const(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__clk_core_init(ptr noundef %core) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @clk_prepare_lock()
  %hw = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 2
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %core, ptr %1, align 4
  %rpm_enabled.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 17
  %3 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %dev.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %5 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev.i, align 4
  %call.i.i = tail call i32 @__pm_runtime_resume(ptr noundef %6, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.then1.i, label %if.end.i.if.end_crit_edge

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then1.i:                                       ; preds = %if.end.i
  %7 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev.i, align 4
  %usage_count.i.i = getelementptr inbounds %struct.device, ptr %8, i32 0, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !757
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #21
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i.i) #21, !srcloc !758
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.then1.i.if.then171_crit_edge, label %do.end11.i.i.i.i.i

if.then1.i.if.then171_crit_edge:                  ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then171

do.end11.i.i.i.i.i:                               ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !759
  br label %if.then171

if.end:                                           ; preds = %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %10 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %core, align 4
  %tobool.not.i253 = icmp eq ptr %11, null
  br i1 %tobool.not.i253, label %if.end.if.end12_crit_edge, label %if.end.i254

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

if.end.i254:                                      ; preds = %if.end
  %12 = load ptr, ptr @clk_root_list, align 4
  %tobool1.not.i = icmp eq ptr %12, null
  %add.ptr.i = getelementptr i8, ptr %12, i32 -104
  %tobool3.not7683.i = icmp eq ptr %add.ptr.i, null
  %tobool3.not76.i = or i1 %tobool1.not.i, %tobool3.not7683.i
  br i1 %tobool3.not76.i, label %if.end.i254.for.end.i_crit_edge, label %if.end.i254.for.body.i_crit_edge

if.end.i254.for.body.i_crit_edge:                 ; preds = %if.end.i254
  br label %for.body.i

if.end.i254.for.end.i_crit_edge:                  ; preds = %if.end.i254
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i254.for.body.i_crit_edge
  %root_clk.077.i = phi ptr [ %add.ptr13.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr.i, %if.end.i254.for.body.i_crit_edge ]
  %call.i = tail call fastcc ptr @__clk_lookup_subtree(ptr noundef nonnull %11, ptr noundef nonnull %root_clk.077.i) #21
  %tobool4.not.i = icmp eq ptr %call.i, null
  br i1 %tobool4.not.i, label %for.inc.i, label %for.body.i.do.body_crit_edge

for.body.i.do.body_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

for.inc.i:                                        ; preds = %for.body.i
  %child_node.i = getelementptr inbounds %struct.clk_core, ptr %root_clk.077.i, i32 0, i32 27
  %13 = ptrtoint ptr %child_node.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %child_node.i, align 4
  %tobool9.not.i = icmp eq ptr %14, null
  %add.ptr13.i = getelementptr i8, ptr %14, i32 -104
  %tobool3.not87.i = icmp eq ptr %add.ptr13.i, null
  %tobool3.not.i = or i1 %tobool9.not.i, %tobool3.not87.i
  br i1 %tobool3.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end.i254.for.end.i_crit_edge
  %15 = load ptr, ptr @clk_orphan_list, align 4
  %tobool19.not.i = icmp eq ptr %15, null
  %add.ptr23.i = getelementptr i8, ptr %15, i32 -104
  %tobool28.not7884.i = icmp eq ptr %add.ptr23.i, null
  %tobool28.not78.i = or i1 %tobool19.not.i, %tobool28.not7884.i
  br i1 %tobool28.not78.i, label %for.end.i.if.end12_crit_edge, label %for.end.i.for.body29.i_crit_edge

for.end.i.for.body29.i_crit_edge:                 ; preds = %for.end.i
  br label %for.body29.i

for.end.i.if.end12_crit_edge:                     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

for.body29.i:                                     ; preds = %for.inc34.i.for.body29.i_crit_edge, %for.end.i.for.body29.i_crit_edge
  %root_clk.179.i = phi ptr [ %add.ptr43.i, %for.inc34.i.for.body29.i_crit_edge ], [ %add.ptr23.i, %for.end.i.for.body29.i_crit_edge ]
  %call30.i = tail call fastcc ptr @__clk_lookup_subtree(ptr noundef nonnull %11, ptr noundef nonnull %root_clk.179.i) #21
  %tobool31.not.i = icmp eq ptr %call30.i, null
  br i1 %tobool31.not.i, label %for.inc34.i, label %for.body29.i.do.body_crit_edge

for.body29.i.do.body_crit_edge:                   ; preds = %for.body29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

for.inc34.i:                                      ; preds = %for.body29.i
  %child_node36.i = getelementptr inbounds %struct.clk_core, ptr %root_clk.179.i, i32 0, i32 27
  %16 = ptrtoint ptr %child_node36.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %child_node36.i, align 4
  %tobool39.not.i = icmp eq ptr %17, null
  %add.ptr43.i = getelementptr i8, ptr %17, i32 -104
  %tobool28.not88.i = icmp eq ptr %add.ptr43.i, null
  %tobool28.not.i = or i1 %tobool39.not.i, %tobool28.not88.i
  br i1 %tobool28.not.i, label %for.inc34.i.if.end12_crit_edge, label %for.inc34.i.for.body29.i_crit_edge

for.inc34.i.for.body29.i_crit_edge:               ; preds = %for.inc34.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body29.i

for.inc34.i.if.end12_crit_edge:                   ; preds = %for.inc34.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

do.body:                                          ; preds = %for.body29.i.do.body_crit_edge, %for.body.i.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__clk_core_init.__UNIQUE_ID_ddebug360, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__clk_core_init, %if.then9)) #21
          to label %out [label %if.then9], !srcloc !761

if.then9:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %core, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__clk_core_init.__UNIQUE_ID_ddebug360, ptr noundef nonnull @.str.135, ptr noundef nonnull @.str.134, ptr noundef %19) #21
  br label %out

if.end12:                                         ; preds = %for.inc34.i.if.end12_crit_edge, %for.end.i.if.end12_crit_edge, %if.end.if.end12_crit_edge
  %ops = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 1
  %20 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ops, align 4
  %set_rate = getelementptr inbounds %struct.clk_ops, ptr %21, i32 0, i32 15
  %22 = ptrtoint ptr %set_rate to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %set_rate, align 4
  %tobool13.not = icmp eq ptr %23, null
  br i1 %tobool13.not, label %if.end12.if.end28_crit_edge, label %land.lhs.true

if.end12.if.end28_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

land.lhs.true:                                    ; preds = %if.end12
  %round_rate = getelementptr inbounds %struct.clk_ops, ptr %21, i32 0, i32 11
  %24 = ptrtoint ptr %round_rate to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %round_rate, align 4
  %tobool15.not = icmp eq ptr %25, null
  br i1 %tobool15.not, label %lor.lhs.false, label %land.lhs.true.land.lhs.true18_crit_edge

land.lhs.true.land.lhs.true18_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true18

lor.lhs.false:                                    ; preds = %land.lhs.true
  %determine_rate = getelementptr inbounds %struct.clk_ops, ptr %21, i32 0, i32 12
  %26 = ptrtoint ptr %determine_rate to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %determine_rate, align 4
  %tobool17.not = icmp eq ptr %27, null
  br i1 %tobool17.not, label %lor.lhs.false.do.end24_crit_edge, label %lor.lhs.false.land.lhs.true18_crit_edge

lor.lhs.false.land.lhs.true18_crit_edge:          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true18

lor.lhs.false.do.end24_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end24

land.lhs.true18:                                  ; preds = %lor.lhs.false.land.lhs.true18_crit_edge, %land.lhs.true.land.lhs.true18_crit_edge
  %recalc_rate = getelementptr inbounds %struct.clk_ops, ptr %21, i32 0, i32 10
  %28 = ptrtoint ptr %recalc_rate to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %recalc_rate, align 4
  %tobool20.not = icmp eq ptr %29, null
  br i1 %tobool20.not, label %land.lhs.true18.do.end24_crit_edge, label %land.lhs.true18.if.end28_crit_edge

land.lhs.true18.if.end28_crit_edge:               ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

land.lhs.true18.do.end24_crit_edge:               ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end24

do.end24:                                         ; preds = %land.lhs.true18.do.end24_crit_edge, %lor.lhs.false.do.end24_crit_edge
  %call27 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.136, ptr noundef nonnull @.str.134, ptr noundef %11) #26
  br label %out

if.end28:                                         ; preds = %land.lhs.true18.if.end28_crit_edge, %if.end12.if.end28_crit_edge
  %set_parent = getelementptr inbounds %struct.clk_ops, ptr %21, i32 0, i32 13
  %30 = ptrtoint ptr %set_parent to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %set_parent, align 4
  %tobool30.not = icmp eq ptr %31, null
  br i1 %tobool30.not, label %if.end28.if.end41_crit_edge, label %land.lhs.true31

if.end28.if.end41_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end41

land.lhs.true31:                                  ; preds = %if.end28
  %get_parent = getelementptr inbounds %struct.clk_ops, ptr %21, i32 0, i32 14
  %32 = ptrtoint ptr %get_parent to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %get_parent, align 4
  %tobool33.not = icmp eq ptr %33, null
  br i1 %tobool33.not, label %do.end37, label %land.lhs.true31.if.end41_crit_edge

land.lhs.true31.if.end41_crit_edge:               ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end41

do.end37:                                         ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #23
  %call40 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.138, ptr noundef nonnull @.str.134, ptr noundef %11) #26
  br label %out

if.end41:                                         ; preds = %land.lhs.true31.if.end41_crit_edge, %if.end28.if.end41_crit_edge
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 8
  %34 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %35)
  %cmp = icmp ugt i8 %35, 1
  br i1 %cmp, label %land.lhs.true43, label %if.end41.if.end54_crit_edge

if.end41.if.end54_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

land.lhs.true43:                                  ; preds = %if.end41
  %get_parent45 = getelementptr inbounds %struct.clk_ops, ptr %21, i32 0, i32 14
  %36 = ptrtoint ptr %get_parent45 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %get_parent45, align 4
  %tobool46.not = icmp eq ptr %37, null
  br i1 %tobool46.not, label %do.end50, label %land.lhs.true43.if.end54_crit_edge

land.lhs.true43.if.end54_crit_edge:               ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

do.end50:                                         ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #23
  %call53 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.141, ptr noundef nonnull @.str.134, ptr noundef %11) #26
  br label %out

if.end54:                                         ; preds = %land.lhs.true43.if.end54_crit_edge, %if.end41.if.end54_crit_edge
  %set_rate_and_parent = getelementptr inbounds %struct.clk_ops, ptr %21, i32 0, i32 16
  %38 = ptrtoint ptr %set_rate_and_parent to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %set_rate_and_parent, align 4
  %tobool56.not = icmp ne ptr %39, null
  %brmerge = select i1 %tobool30.not, i1 true, i1 %tobool13.not
  %or.cond = select i1 %tobool56.not, i1 %brmerge, i1 false
  br i1 %or.cond, label %do.end68, label %if.end72

do.end68:                                         ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #23
  %call71 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.144, ptr noundef nonnull @.str.134, ptr noundef %11) #26
  br label %out

if.end72:                                         ; preds = %if.end54
  %init = getelementptr inbounds %struct.clk_ops, ptr %21, i32 0, i32 22
  %40 = ptrtoint ptr %init to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %init, align 4
  %tobool74.not = icmp eq ptr %41, null
  br i1 %tobool74.not, label %if.end72.if.end83_crit_edge, label %if.then75

if.end72.if.end83_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end83

if.then75:                                        ; preds = %if.end72
  %42 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hw, align 4
  %call79 = tail call i32 %41(ptr noundef %43) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %if.then75.if.end83_crit_edge, label %if.then75.out_crit_edge

if.then75.out_crit_edge:                          ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

if.then75.if.end83_crit_edge:                     ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end83

if.end83:                                         ; preds = %if.then75.if.end83_crit_edge, %if.end72.if.end83_crit_edge
  %44 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %45)
  %cmp.i256 = icmp ugt i8 %45, 1
  br i1 %cmp.i256, label %land.lhs.true.i, label %if.end83.__clk_init_parent.exit_crit_edge

if.end83.__clk_init_parent.exit_crit_edge:        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_init_parent.exit

land.lhs.true.i:                                  ; preds = %if.end83
  %46 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ops, align 4
  %get_parent.i = getelementptr inbounds %struct.clk_ops, ptr %47, i32 0, i32 14
  %48 = ptrtoint ptr %get_parent.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %get_parent.i, align 4
  %tobool.not.i257 = icmp eq ptr %49, null
  br i1 %tobool.not.i257, label %land.lhs.true.i.__clk_init_parent.exit_crit_edge, label %if.then.i

land.lhs.true.i.__clk_init_parent.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_init_parent.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %50 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %hw, align 4
  %call.i258 = tail call zeroext i8 %49(ptr noundef %51) #21
  br label %__clk_init_parent.exit

__clk_init_parent.exit:                           ; preds = %if.then.i, %land.lhs.true.i.__clk_init_parent.exit_crit_edge, %if.end83.__clk_init_parent.exit_crit_edge
  %index.0.i = phi i8 [ %call.i258, %if.then.i ], [ 0, %land.lhs.true.i.__clk_init_parent.exit_crit_edge ], [ 0, %if.end83.__clk_init_parent.exit_crit_edge ]
  %call4.i = tail call fastcc ptr @clk_core_get_parent_by_index(ptr noundef %core, i8 noundef zeroext %index.0.i) #21
  %parent85 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 6
  %52 = ptrtoint ptr %parent85 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %call4.i, ptr %parent85, align 4
  %tobool86.not = icmp eq ptr %call4.i, null
  br i1 %tobool86.not, label %if.else, label %if.then87

if.then87:                                        ; preds = %__clk_init_parent.exit
  %child_node = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27
  %children = getelementptr inbounds %struct.clk_core, ptr %call4.i, i32 0, i32 26
  %53 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %children, align 4
  %55 = ptrtoint ptr %child_node to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile ptr %54, ptr %child_node, align 4
  %tobool.not.i260 = icmp eq ptr %54, null
  br i1 %tobool.not.i260, label %if.then87.if.end100.thread_crit_edge, label %do.body12.i

if.then87.if.end100.thread_crit_edge:             ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end100.thread

do.body12.i:                                      ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %54, i32 0, i32 1
  %56 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile ptr %child_node, ptr %pprev.i, align 4
  br label %if.end100.thread

if.else:                                          ; preds = %__clk_init_parent.exit
  %57 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %tobool92.not = icmp eq i8 %58, 0
  %child_node94 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27
  br i1 %tobool92.not, label %if.then93, label %if.else96

if.then93:                                        ; preds = %if.else
  %59 = load ptr, ptr @clk_root_list, align 4
  %60 = ptrtoint ptr %child_node94 to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile ptr %59, ptr %child_node94, align 4
  %tobool.not.i261 = icmp eq ptr %59, null
  br i1 %tobool.not.i261, label %if.then93.if.end100_crit_edge, label %if.then93.if.end100.sink.split_crit_edge

if.then93.if.end100.sink.split_crit_edge:         ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end100.sink.split

if.then93.if.end100_crit_edge:                    ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end100

if.else96:                                        ; preds = %if.else
  %61 = load ptr, ptr @clk_orphan_list, align 4
  %62 = ptrtoint ptr %child_node94 to i32
  call void @__asan_store4_noabort(i32 %62)
  store volatile ptr %61, ptr %child_node94, align 4
  %tobool.not.i266 = icmp eq ptr %61, null
  br i1 %tobool.not.i266, label %if.else96.if.end100_crit_edge, label %if.else96.if.end100.sink.split_crit_edge

if.else96.if.end100.sink.split_crit_edge:         ; preds = %if.else96
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end100.sink.split

if.else96.if.end100_crit_edge:                    ; preds = %if.else96
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end100

if.end100.sink.split:                             ; preds = %if.else96.if.end100.sink.split_crit_edge, %if.then93.if.end100.sink.split_crit_edge
  %.sink333 = phi ptr [ %59, %if.then93.if.end100.sink.split_crit_edge ], [ %61, %if.else96.if.end100.sink.split_crit_edge ]
  %clk_root_list.sink331.ph = phi ptr [ @clk_root_list, %if.then93.if.end100.sink.split_crit_edge ], [ @clk_orphan_list, %if.else96.if.end100.sink.split_crit_edge ]
  %.sink.ph = phi i8 [ 0, %if.then93.if.end100.sink.split_crit_edge ], [ 1, %if.else96.if.end100.sink.split_crit_edge ]
  %pprev.i267 = getelementptr inbounds %struct.hlist_node, ptr %.sink333, i32 0, i32 1
  %63 = ptrtoint ptr %pprev.i267 to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile ptr %child_node94, ptr %pprev.i267, align 4
  br label %if.end100

if.end100:                                        ; preds = %if.end100.sink.split, %if.else96.if.end100_crit_edge, %if.then93.if.end100_crit_edge
  %clk_root_list.sink331 = phi ptr [ @clk_root_list, %if.then93.if.end100_crit_edge ], [ @clk_orphan_list, %if.else96.if.end100_crit_edge ], [ %clk_root_list.sink331.ph, %if.end100.sink.split ]
  %.sink = phi i8 [ 0, %if.then93.if.end100_crit_edge ], [ 1, %if.else96.if.end100_crit_edge ], [ %.sink.ph, %if.end100.sink.split ]
  %64 = ptrtoint ptr %clk_root_list.sink331 to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %child_node94, ptr %clk_root_list.sink331, align 4
  %pprev34.i264 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27, i32 1
  %65 = ptrtoint ptr %pprev34.i264 to i32
  call void @__asan_store4_noabort(i32 %65)
  store volatile ptr %clk_root_list.sink331, ptr %pprev34.i264, align 4
  %orphan95 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 16
  %66 = ptrtoint ptr %orphan95 to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 %.sink, ptr %orphan95, align 4
  %67 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ops, align 4
  %recalc_accuracy = getelementptr inbounds %struct.clk_ops, ptr %68, i32 0, i32 17
  %69 = ptrtoint ptr %recalc_accuracy to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %recalc_accuracy, align 4
  %tobool102.not = icmp eq ptr %70, null
  br i1 %tobool102.not, label %if.end100.if.end117_crit_edge, label %if.end100.clk_core_get_accuracy_no_lock.exit_crit_edge

if.end100.clk_core_get_accuracy_no_lock.exit_crit_edge: ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_accuracy_no_lock.exit

if.end100.if.end117_crit_edge:                    ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end117

if.end100.thread:                                 ; preds = %do.body12.i, %if.then87.if.end100.thread_crit_edge
  %71 = ptrtoint ptr %children to i32
  call void @__asan_store4_noabort(i32 %71)
  store volatile ptr %child_node, ptr %children, align 4
  %pprev34.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27, i32 1
  %72 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store volatile ptr %children, ptr %pprev34.i, align 4
  %orphan = getelementptr inbounds %struct.clk_core, ptr %call4.i, i32 0, i32 16
  %73 = ptrtoint ptr %orphan to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %orphan, align 4, !range !756
  %orphan89 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 16
  %75 = ptrtoint ptr %orphan89 to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 %74, ptr %orphan89, align 4
  %76 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %ops, align 4
  %recalc_accuracy320 = getelementptr inbounds %struct.clk_ops, ptr %77, i32 0, i32 17
  %78 = ptrtoint ptr %recalc_accuracy320 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %recalc_accuracy320, align 4
  %tobool102.not321 = icmp eq ptr %79, null
  %accuracy112 = getelementptr inbounds %struct.clk_core, ptr %call4.i, i32 0, i32 23
  %80 = ptrtoint ptr %accuracy112 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %accuracy112, align 4
  br i1 %tobool102.not321, label %if.end100.thread.if.end117_crit_edge, label %if.end100.thread.clk_core_get_accuracy_no_lock.exit_crit_edge

if.end100.thread.clk_core_get_accuracy_no_lock.exit_crit_edge: ; preds = %if.end100.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_accuracy_no_lock.exit

if.end100.thread.if.end117_crit_edge:             ; preds = %if.end100.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end117

clk_core_get_accuracy_no_lock.exit:               ; preds = %if.end100.thread.clk_core_get_accuracy_no_lock.exit_crit_edge, %if.end100.clk_core_get_accuracy_no_lock.exit_crit_edge
  %82 = phi ptr [ %70, %if.end100.clk_core_get_accuracy_no_lock.exit_crit_edge ], [ %79, %if.end100.thread.clk_core_get_accuracy_no_lock.exit_crit_edge ]
  %retval.0.i273 = phi i32 [ 0, %if.end100.clk_core_get_accuracy_no_lock.exit_crit_edge ], [ %81, %if.end100.thread.clk_core_get_accuracy_no_lock.exit_crit_edge ]
  %83 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %hw, align 4
  %call108 = tail call i32 %82(ptr noundef %84, i32 noundef %retval.0.i273) #21
  br label %if.end117

if.end117:                                        ; preds = %clk_core_get_accuracy_no_lock.exit, %if.end100.thread.if.end117_crit_edge, %if.end100.if.end117_crit_edge
  %.sink332 = phi i32 [ %call108, %clk_core_get_accuracy_no_lock.exit ], [ 0, %if.end100.if.end117_crit_edge ], [ %81, %if.end100.thread.if.end117_crit_edge ]
  %accuracy113 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 23
  %85 = ptrtoint ptr %accuracy113 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %.sink332, ptr %accuracy113, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %86 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %tobool.not.i274 = icmp eq i32 %86, 0
  br i1 %tobool.not.i274, label %if.end117.if.end.i277_crit_edge, label %land.rhs.i

if.end117.if.end.i277_crit_edge:                  ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i277

land.rhs.i:                                       ; preds = %if.end117
  %call.i.i275 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @prepare_lock, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i275)
  %cmp.not.i = icmp eq i32 %call.i.i275, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i277_crit_edge, !prof !754

land.rhs.i.if.end.i277_crit_edge:                 ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i277

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2695, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i277

if.end.i277:                                      ; preds = %do.end.i, %land.rhs.i.if.end.i277_crit_edge, %if.end117.if.end.i277_crit_edge
  %87 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %ops, align 4
  %get_phase.i = getelementptr inbounds %struct.clk_ops, ptr %88, i32 0, i32 18
  %89 = ptrtoint ptr %get_phase.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %get_phase.i, align 4
  %tobool24.not.i = icmp eq ptr %90, null
  br i1 %tobool24.not.i, label %if.end.i277.if.end128_crit_edge, label %if.end26.i

if.end.i277.if.end128_crit_edge:                  ; preds = %if.end.i277
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end128

if.end26.i:                                       ; preds = %if.end.i277
  %91 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %hw, align 4
  %call29.i = tail call i32 %90(ptr noundef %92) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call29.i)
  %cmp30.i = icmp sgt i32 %call29.i, -1
  br i1 %cmp30.i, label %if.then31.i, label %if.then121

if.then31.i:                                      ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %phase.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 24
  %93 = ptrtoint ptr %phase.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %call29.i, ptr %phase.i, align 4
  br label %if.end128

if.then121:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %94 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %core, align 4
  %call127 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, ptr noundef nonnull @.str.134, ptr noundef %95) #26
  br label %out

if.end128:                                        ; preds = %if.then31.i, %if.end.i277.if.end128_crit_edge
  %call129 = tail call fastcc i32 @clk_core_update_duty_cycle_nolock(ptr noundef %core)
  %96 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %ops, align 4
  %recalc_rate131 = getelementptr inbounds %struct.clk_ops, ptr %97, i32 0, i32 10
  %98 = ptrtoint ptr %recalc_rate131 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %recalc_rate131, align 4
  %tobool132.not = icmp eq ptr %99, null
  br i1 %tobool132.not, label %if.else139, label %if.then133

if.then133:                                       ; preds = %if.end128
  %100 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %hw, align 4
  br i1 %tobool86.not, label %if.then133.clk_core_get_rate_nolock.exit_crit_edge, label %if.end.i283

if.then133.clk_core_get_rate_nolock.exit_crit_edge: ; preds = %if.then133
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_nolock.exit

if.end.i283:                                      ; preds = %if.then133
  %num_parents.i281 = getelementptr inbounds %struct.clk_core, ptr %call4.i, i32 0, i32 8
  %102 = ptrtoint ptr %num_parents.i281 to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %num_parents.i281, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %103)
  %tobool1.not.i282 = icmp eq i8 %103, 0
  br i1 %tobool1.not.i282, label %if.end.i283.if.then3.i_crit_edge, label %lor.lhs.false.i

if.end.i283.if.then3.i_crit_edge:                 ; preds = %if.end.i283
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i:                                  ; preds = %if.end.i283
  %parent.i = getelementptr inbounds %struct.clk_core, ptr %call4.i, i32 0, i32 6
  %104 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %parent.i, align 4
  %tobool2.not.i = icmp eq ptr %105, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge, label %lor.lhs.false.i.if.then3.i_crit_edge

lor.lhs.false.i.if.then3.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_core_get_rate_nolock.exit

if.then3.i:                                       ; preds = %lor.lhs.false.i.if.then3.i_crit_edge, %if.end.i283.if.then3.i_crit_edge
  %rate.i = getelementptr inbounds %struct.clk_core, ptr %call4.i, i32 0, i32 10
  %106 = ptrtoint ptr %rate.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %rate.i, align 4
  br label %clk_core_get_rate_nolock.exit

clk_core_get_rate_nolock.exit:                    ; preds = %if.then3.i, %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge, %if.then133.clk_core_get_rate_nolock.exit_crit_edge
  %retval.0.i284 = phi i32 [ %107, %if.then3.i ], [ 0, %if.then133.clk_core_get_rate_nolock.exit_crit_edge ], [ 0, %lor.lhs.false.i.clk_core_get_rate_nolock.exit_crit_edge ]
  %call138 = tail call i32 %99(ptr noundef %101, i32 noundef %retval.0.i284) #21
  br label %if.end145

if.else139:                                       ; preds = %if.end128
  br i1 %tobool86.not, label %if.else139.if.end145_crit_edge, label %if.then141

if.else139.if.end145_crit_edge:                   ; preds = %if.else139
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end145

if.then141:                                       ; preds = %if.else139
  call void @__sanitizer_cov_trace_pc() #23
  %rate142 = getelementptr inbounds %struct.clk_core, ptr %call4.i, i32 0, i32 10
  %108 = ptrtoint ptr %rate142 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %rate142, align 4
  br label %if.end145

if.end145:                                        ; preds = %if.then141, %if.else139.if.end145_crit_edge, %clk_core_get_rate_nolock.exit
  %rate.0 = phi i32 [ %call138, %clk_core_get_rate_nolock.exit ], [ %109, %if.then141 ], [ 0, %if.else139.if.end145_crit_edge ]
  %req_rate = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 11
  %110 = ptrtoint ptr %req_rate to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %rate.0, ptr %req_rate, align 4
  %rate146 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 10
  %111 = ptrtoint ptr %rate146 to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 %rate.0, ptr %rate146, align 4
  %flags = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 15
  %112 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %flags, align 4
  %and = and i32 %113, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool147.not = icmp eq i32 %and, 0
  br i1 %tobool147.not, label %if.end145.if.end169_crit_edge, label %if.then148

if.end145.if.end169_crit_edge:                    ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end169

if.then148:                                       ; preds = %if.end145
  %call149 = tail call fastcc i32 @clk_core_prepare(ptr noundef %core)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call149)
  %tobool150.not = icmp eq i32 %call149, 0
  br i1 %tobool150.not, label %if.end158, label %do.end154

do.end154:                                        ; preds = %if.then148
  call void @__sanitizer_cov_trace_pc() #23
  %114 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %core, align 4
  %call157 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.150, ptr noundef nonnull @.str.134, ptr noundef %115) #26
  br label %out

if.end158:                                        ; preds = %if.then148
  %call159 = tail call fastcc i32 @clk_core_enable_lock(ptr noundef %core)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call159)
  %tobool160.not = icmp eq i32 %call159, 0
  br i1 %tobool160.not, label %if.end158.if.end169_crit_edge, label %do.end164

if.end158.if.end169_crit_edge:                    ; preds = %if.end158
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end169

do.end164:                                        ; preds = %if.end158
  call void @__sanitizer_cov_trace_pc() #23
  %116 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %core, align 4
  %call167 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef nonnull @.str.134, ptr noundef %117) #26
  tail call fastcc void @clk_core_unprepare(ptr noundef %core)
  br label %out

if.end169:                                        ; preds = %if.end158.if.end169_crit_edge, %if.end145.if.end169_crit_edge
  tail call fastcc void @clk_core_reparent_orphans_nolock()
  %ref = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 32
  %call.i.i.i.i285 = tail call zeroext i1 @__kasan_check_write(ptr noundef %ref, i32 noundef 4) #21
  %118 = ptrtoint ptr %ref to i32
  call void @__asan_store4_noabort(i32 %118)
  store volatile i32 1, ptr %ref, align 4
  br label %out

out:                                              ; preds = %if.end169, %do.end164, %do.end154, %if.then121, %if.then75.out_crit_edge, %do.end68, %do.end50, %do.end37, %do.end24, %if.then9, %do.body
  %ret.2 = phi i32 [ %call79, %if.then75.out_crit_edge ], [ %call29.i, %if.then121 ], [ %call149, %do.end154 ], [ %call159, %do.end164 ], [ 0, %if.end169 ], [ -22, %do.end68 ], [ -22, %do.end50 ], [ -22, %do.end37 ], [ -22, %do.end24 ], [ -17, %if.then9 ], [ -17, %do.body ]
  %119 = ptrtoint ptr %rpm_enabled.i to i32
  call void @__asan_load1_noabort(i32 %119)
  %120 = load i8, ptr %rpm_enabled.i, align 1, !range !756
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %120)
  %tobool.not.i287 = icmp eq i8 %120, 0
  br i1 %tobool.not.i287, label %out.unlock_crit_edge, label %if.end.i290

out.unlock_crit_edge:                             ; preds = %out
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock

if.end.i290:                                      ; preds = %out
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i288 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 4
  %121 = ptrtoint ptr %dev.i288 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %dev.i288, align 4
  %call.i.i289 = tail call i32 @__pm_runtime_idle(ptr noundef %122, i32 noundef 4) #21
  br label %unlock

unlock:                                           ; preds = %if.end.i290, %out.unlock_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2)
  %tobool170.not = icmp eq i32 %ret.2, 0
  br i1 %tobool170.not, label %if.then177.critedge, label %unlock.if.then171_crit_edge

unlock.if.then171_crit_edge:                      ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then171

if.then171:                                       ; preds = %unlock.if.then171_crit_edge, %do.end11.i.i.i.i.i, %if.then1.i.if.then171_crit_edge
  %ret.3327 = phi i32 [ %ret.2, %unlock.if.then171_crit_edge ], [ %call.i.i, %if.then1.i.if.then171_crit_edge ], [ %call.i.i, %do.end11.i.i.i.i.i ]
  %child_node172 = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27
  %pprev.i.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 27, i32 1
  %123 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %pprev.i.i, align 4
  %tobool.not.i.not.i = icmp eq ptr %124, null
  br i1 %tobool.not.i.not.i, label %if.then171.hlist_del_init.exit_crit_edge, label %if.then.i291

if.then171.hlist_del_init.exit_crit_edge:         ; preds = %if.then171
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_del_init.exit

if.then.i291:                                     ; preds = %if.then171
  %125 = ptrtoint ptr %child_node172 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %child_node172, align 4
  %127 = ptrtoint ptr %124 to i32
  call void @__asan_store4_noabort(i32 %127)
  store volatile ptr %126, ptr %124, align 4
  %tobool.not.i3.i = icmp eq ptr %126, null
  br i1 %tobool.not.i3.i, label %if.then.i291.__hlist_del.exit.i_crit_edge, label %do.body13.i.i

if.then.i291.__hlist_del.exit.i_crit_edge:        ; preds = %if.then.i291
  call void @__sanitizer_cov_trace_pc() #23
  br label %__hlist_del.exit.i

do.body13.i.i:                                    ; preds = %if.then.i291
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %126, i32 0, i32 1
  %128 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %128)
  store volatile ptr %124, ptr %pprev14.i.i, align 4
  br label %__hlist_del.exit.i

__hlist_del.exit.i:                               ; preds = %do.body13.i.i, %if.then.i291.__hlist_del.exit.i_crit_edge
  %129 = ptrtoint ptr %child_node172 to i32
  call void @__asan_store4_noabort(i32 %129)
  store ptr null, ptr %child_node172, align 4
  %130 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %130)
  store ptr null, ptr %pprev.i.i, align 4
  br label %hlist_del_init.exit

hlist_del_init.exit:                              ; preds = %__hlist_del.exit.i, %if.then171.hlist_del_init.exit_crit_edge
  %131 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %hw, align 4
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_store4_noabort(i32 %133)
  store ptr null, ptr %132, align 4
  %134 = load ptr, ptr @prepare_owner, align 4
  %135 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i = and i32 %135, -16384
  %136 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %136, i32 0, i32 2
  %137 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %task.i, align 8
  %cmp.not.i293 = icmp eq ptr %134, %138
  br i1 %cmp.not.i293, label %hlist_del_init.exit.if.end27.i_crit_edge, label %land.rhs.i294

hlist_del_init.exit.if.end27.i_crit_edge:         ; preds = %hlist_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

land.rhs.i294:                                    ; preds = %hlist_del_init.exit
  %.b98.i = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i294.if.end27.i_crit_edge, label %if.then.i295, !prof !753

land.rhs.i294.if.end27.i_crit_edge:               ; preds = %land.rhs.i294
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i

if.then.i295:                                     ; preds = %land.rhs.i294
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i295, %land.rhs.i294.if.end27.i_crit_edge, %hlist_del_init.exit.if.end27.i_crit_edge
  %139 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %139)
  %cmp36.i = icmp eq i32 %139, 0
  br i1 %cmp36.i, label %land.rhs43.i, label %if.end27.i.if.end81.i_crit_edge

if.end27.i.if.end81.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

land.rhs43.i:                                     ; preds = %if.end27.i
  %.b9697.i = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i, label %land.rhs43.i.if.end81.i_crit_edge, label %if.then54.i, !prof !753

land.rhs43.i.if.end81.i_crit_edge:                ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i

if.then54.i:                                      ; preds = %land.rhs43.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then54.i, %land.rhs43.i.if.end81.i_crit_edge, %if.end27.i.if.end81.i_crit_edge
  %140 = load i32, ptr @prepare_refcnt, align 4
  %dec.i = add i32 %140, -1
  store i32 %dec.i, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool89.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool89.not.i, label %if.end91.i, label %if.end81.i.if.end178_crit_edge

if.end81.i.if.end178_crit_edge:                   ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end178

if.end91.i:                                       ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  br label %if.end178.sink.split

if.then177.critedge:                              ; preds = %unlock
  %141 = load ptr, ptr @prepare_owner, align 4
  %142 = tail call i32 @llvm.read_register.i32(metadata !743) #21
  %and.i.i296 = and i32 %142, -16384
  %143 = inttoptr i32 %and.i.i296 to ptr
  %task.i297 = getelementptr inbounds %struct.thread_info, ptr %143, i32 0, i32 2
  %144 = ptrtoint ptr %task.i297 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %task.i297, align 8
  %cmp.not.i298 = icmp eq ptr %141, %145
  br i1 %cmp.not.i298, label %if.then177.critedge.if.end27.i303_crit_edge, label %land.rhs.i300

if.then177.critedge.if.end27.i303_crit_edge:      ; preds = %if.then177.critedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i303

land.rhs.i300:                                    ; preds = %if.then177.critedge
  %.b98.i299 = load i1, ptr @clk_prepare_unlock.__already_done, align 1
  br i1 %.b98.i299, label %land.rhs.i300.if.end27.i303_crit_edge, label %if.then.i301, !prof !753

land.rhs.i300.if.end27.i303_crit_edge:            ; preds = %land.rhs.i300
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27.i303

if.then.i301:                                     ; preds = %land.rhs.i300
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 150, i32 noundef 9, ptr noundef null) #21
  br label %if.end27.i303

if.end27.i303:                                    ; preds = %if.then.i301, %land.rhs.i300.if.end27.i303_crit_edge, %if.then177.critedge.if.end27.i303_crit_edge
  %146 = load i32, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %146)
  %cmp36.i302 = icmp eq i32 %146, 0
  br i1 %cmp36.i302, label %land.rhs43.i305, label %if.end27.i303.if.end81.i309_crit_edge

if.end27.i303.if.end81.i309_crit_edge:            ; preds = %if.end27.i303
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i309

land.rhs43.i305:                                  ; preds = %if.end27.i303
  %.b9697.i304 = load i1, ptr @clk_prepare_unlock.__already_done.54, align 1
  br i1 %.b9697.i304, label %land.rhs43.i305.if.end81.i309_crit_edge, label %if.then54.i306, !prof !753

land.rhs43.i305.if.end81.i309_crit_edge:          ; preds = %land.rhs43.i305
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81.i309

if.then54.i306:                                   ; preds = %land.rhs43.i305
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_prepare_unlock.__already_done.54, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 151, i32 noundef 9, ptr noundef null) #21
  br label %if.end81.i309

if.end81.i309:                                    ; preds = %if.then54.i306, %land.rhs43.i305.if.end81.i309_crit_edge, %if.end27.i303.if.end81.i309_crit_edge
  %147 = load i32, ptr @prepare_refcnt, align 4
  %dec.i307 = add i32 %147, -1
  store i32 %dec.i307, ptr @prepare_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i307)
  %tobool89.not.i308 = icmp eq i32 %dec.i307, 0
  br i1 %tobool89.not.i308, label %if.end91.i310, label %if.end81.i309.clk_prepare_unlock.exit311_crit_edge

if.end81.i309.clk_prepare_unlock.exit311_crit_edge: ; preds = %if.end81.i309
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_unlock.exit311

if.end91.i310:                                    ; preds = %if.end81.i309
  call void @__sanitizer_cov_trace_pc() #23
  store ptr null, ptr @prepare_owner, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @prepare_lock) #21
  br label %clk_prepare_unlock.exit311

clk_prepare_unlock.exit311:                       ; preds = %if.end91.i310, %if.end81.i309.clk_prepare_unlock.exit311_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @clk_debug_lock, i32 noundef 0) #21
  %debug_node.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 31
  %148 = load ptr, ptr @clk_debug_list, align 4
  %149 = ptrtoint ptr %debug_node.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store volatile ptr %148, ptr %debug_node.i, align 4
  %tobool.not.i.i = icmp eq ptr %148, null
  br i1 %tobool.not.i.i, label %clk_prepare_unlock.exit311.hlist_add_head.exit.i_crit_edge, label %do.body12.i.i

clk_prepare_unlock.exit311.hlist_add_head.exit.i_crit_edge: ; preds = %clk_prepare_unlock.exit311
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit.i

do.body12.i.i:                                    ; preds = %clk_prepare_unlock.exit311
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i.i312 = getelementptr inbounds %struct.hlist_node, ptr %148, i32 0, i32 1
  %150 = ptrtoint ptr %pprev.i.i312 to i32
  call void @__asan_store4_noabort(i32 %150)
  store volatile ptr %debug_node.i, ptr %pprev.i.i312, align 4
  br label %hlist_add_head.exit.i

hlist_add_head.exit.i:                            ; preds = %do.body12.i.i, %clk_prepare_unlock.exit311.hlist_add_head.exit.i_crit_edge
  store volatile ptr %debug_node.i, ptr @clk_debug_list, align 4
  %pprev34.i.i = getelementptr inbounds %struct.clk_core, ptr %core, i32 0, i32 31, i32 1
  %151 = ptrtoint ptr %pprev34.i.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store volatile ptr @clk_debug_list, ptr %pprev34.i.i, align 4
  %.b.i = load i1, ptr @inited, align 4
  br i1 %.b.i, label %if.then.i313, label %hlist_add_head.exit.i.if.end178.sink.split_crit_edge

hlist_add_head.exit.i.if.end178.sink.split_crit_edge: ; preds = %hlist_add_head.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end178.sink.split

if.then.i313:                                     ; preds = %hlist_add_head.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %152 = load ptr, ptr @rootdir, align 4
  tail call fastcc void @clk_debug_create_one(ptr noundef %core, ptr noundef %152) #21
  br label %if.end178.sink.split

if.end178.sink.split:                             ; preds = %if.then.i313, %hlist_add_head.exit.i.if.end178.sink.split_crit_edge, %if.end91.i
  %prepare_lock.sink = phi ptr [ @prepare_lock, %if.end91.i ], [ @clk_debug_lock, %hlist_add_head.exit.i.if.end178.sink.split_crit_edge ], [ @clk_debug_lock, %if.then.i313 ]
  %ret.3326.ph = phi i32 [ %ret.3327, %if.end91.i ], [ 0, %hlist_add_head.exit.i.if.end178.sink.split_crit_edge ], [ 0, %if.then.i313 ]
  tail call void @mutex_unlock(ptr noundef nonnull %prepare_lock.sink) #21
  br label %if.end178

if.end178:                                        ; preds = %if.end178.sink.split, %if.end81.i.if.end178_crit_edge
  %ret.3326 = phi i32 [ %ret.3327, %if.end81.i.if.end178_crit_edge ], [ %ret.3326.ph, %if.end178.sink.split ]
  ret i32 %ret.3326
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_reparent_orphans_nolock() unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @clk_orphan_list, align 4
  %tobool.not = icmp eq ptr %0, null
  %add.ptr = getelementptr i8, ptr %0, i32 -104
  %tobool2.not3134 = icmp eq ptr %add.ptr, null
  %tobool2.not31 = or i1 %tobool.not, %tobool2.not3134
  br i1 %tobool2.not31, label %entry.for.end_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

land.rhs:                                         ; preds = %if.end.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %orphan.032 = phi ptr [ %add.ptr13, %if.end.land.rhs_crit_edge ], [ %add.ptr, %entry.land.rhs_crit_edge ]
  %child_node = getelementptr inbounds %struct.clk_core, ptr %orphan.032, i32 0, i32 27
  %1 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %child_node, align 4
  %num_parents.i = getelementptr inbounds %struct.clk_core, ptr %orphan.032, i32 0, i32 8
  %3 = ptrtoint ptr %num_parents.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %num_parents.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %4)
  %cmp.i = icmp ugt i8 %4, 1
  br i1 %cmp.i, label %land.lhs.true.i, label %land.rhs.__clk_init_parent.exit_crit_edge

land.rhs.__clk_init_parent.exit_crit_edge:        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_init_parent.exit

land.lhs.true.i:                                  ; preds = %land.rhs
  %ops.i = getelementptr inbounds %struct.clk_core, ptr %orphan.032, i32 0, i32 1
  %5 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops.i, align 4
  %get_parent.i = getelementptr inbounds %struct.clk_ops, ptr %6, i32 0, i32 14
  %7 = ptrtoint ptr %get_parent.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %get_parent.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %land.lhs.true.i.__clk_init_parent.exit_crit_edge, label %if.then.i

land.lhs.true.i.__clk_init_parent.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__clk_init_parent.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %hw.i = getelementptr inbounds %struct.clk_core, ptr %orphan.032, i32 0, i32 2
  %9 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw.i, align 4
  %call.i = tail call zeroext i8 %8(ptr noundef %10) #21
  br label %__clk_init_parent.exit

__clk_init_parent.exit:                           ; preds = %if.then.i, %land.lhs.true.i.__clk_init_parent.exit_crit_edge, %land.rhs.__clk_init_parent.exit_crit_edge
  %index.0.i = phi i8 [ %call.i, %if.then.i ], [ 0, %land.lhs.true.i.__clk_init_parent.exit_crit_edge ], [ 0, %land.rhs.__clk_init_parent.exit_crit_edge ]
  %call4.i = tail call fastcc ptr @clk_core_get_parent_by_index(ptr noundef nonnull %orphan.032, i8 noundef zeroext %index.0.i) #21
  %tobool5.not = icmp eq ptr %call4.i, null
  br i1 %tobool5.not, label %__clk_init_parent.exit.if.end_crit_edge, label %if.then

__clk_init_parent.exit.if.end_crit_edge:          ; preds = %__clk_init_parent.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %__clk_init_parent.exit
  call void @__sanitizer_cov_trace_pc() #23
  %call6 = tail call fastcc ptr @__clk_set_parent_before(ptr noundef nonnull %orphan.032, ptr noundef nonnull %call4.i)
  tail call fastcc void @__clk_set_parent_after(ptr noundef nonnull %orphan.032, ptr noundef nonnull %call4.i, ptr noundef null)
  tail call fastcc void @__clk_recalc_accuracies(ptr noundef nonnull %orphan.032)
  tail call fastcc void @__clk_recalc_rates(ptr noundef nonnull %orphan.032, i32 noundef 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %__clk_init_parent.exit.if.end_crit_edge
  %tobool9.not = icmp eq ptr %2, null
  %add.ptr13 = getelementptr i8, ptr %2, i32 -104
  %tobool2.not35 = icmp eq ptr %add.ptr13, null
  %tobool2.not = or i1 %tobool9.not, %tobool2.not35
  br i1 %tobool2.not, label %if.end.for.end_crit_edge, label %if.end.land.rhs_crit_edge

if.end.land.rhs_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.rhs

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debugfs_remove(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @clk_nodrv_prepare_enable(ptr nocapture noundef readnone %hw) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @clk_nodrv_disable_unprepare(ptr nocapture noundef readnone %hw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %.b35 = load i1, ptr @clk_nodrv_disable_unprepare.__already_done, align 1
  br i1 %.b35, label %entry.if.end25_crit_edge, label %if.then, !prof !753

entry.if.end25_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @clk_nodrv_disable_unprepare.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4058, i32 noundef 9, ptr noundef null) #21
  br label %if.end25

if.end25:                                         ; preds = %if.then, %entry.if.end25_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @clk_nodrv_set_parent(ptr nocapture noundef readnone %hw, i8 noundef zeroext %index) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @clk_nodrv_set_rate(ptr nocapture noundef readnone %hw, i32 noundef %rate, i32 noundef %parent_rate) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -6
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clk_core_evict_parent_cache_subtree(ptr nocapture noundef readonly %root, ptr noundef %target) unnamed_addr #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %num_parents = getelementptr inbounds %struct.clk_core, ptr %root, i32 0, i32 8
  %0 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %num_parents, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp39.not = icmp eq i8 %1, 0
  br i1 %cmp39.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %parents = getelementptr inbounds %struct.clk_core, ptr %root, i32 0, i32 7
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.040 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %parents to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parents, align 4
  %core = getelementptr %struct.clk_parent_map, ptr %3, i32 %i.040, i32 1
  %4 = ptrtoint ptr %core to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %core, align 4
  %cmp2 = icmp eq ptr %5, %target
  br i1 %cmp2, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %core to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %core, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.040, 1
  %7 = ptrtoint ptr %num_parents to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %num_parents, align 4
  %conv = zext i8 %8 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %children = getelementptr inbounds %struct.clk_core, ptr %root, i32 0, i32 26
  %9 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %children, align 4
  %tobool.not = icmp eq ptr %10, null
  %add.ptr = getelementptr i8, ptr %10, i32 -104
  %tobool9.not4143 = icmp eq ptr %add.ptr, null
  %tobool9.not41 = or i1 %tobool.not, %tobool9.not4143
  br i1 %tobool9.not41, label %for.end.for.end22_crit_edge, label %for.end.for.body10_crit_edge

for.end.for.body10_crit_edge:                     ; preds = %for.end
  br label %for.body10

for.end.for.end22_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end22

for.body10:                                       ; preds = %for.body10.for.body10_crit_edge, %for.end.for.body10_crit_edge
  %child.042 = phi ptr [ %add.ptr18, %for.body10.for.body10_crit_edge ], [ %add.ptr, %for.end.for.body10_crit_edge ]
  tail call fastcc void @clk_core_evict_parent_cache_subtree(ptr noundef nonnull %child.042, ptr noundef %target)
  %child_node = getelementptr inbounds %struct.clk_core, ptr %child.042, i32 0, i32 27
  %11 = ptrtoint ptr %child_node to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %child_node, align 4
  %tobool14.not = icmp eq ptr %12, null
  %add.ptr18 = getelementptr i8, ptr %12, i32 -104
  %tobool9.not44 = icmp eq ptr %add.ptr18, null
  %tobool9.not = or i1 %tobool14.not, %tobool9.not44
  br i1 %tobool9.not, label %for.body10.for.end22_crit_edge, label %for.body10.for.body10_crit_edge

for.body10.for.body10_crit_edge:                  ; preds = %for.body10
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body10

for.body10.for.end22_crit_edge:                   ; preds = %for.body10
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end22

for.end22:                                        ; preds = %for.body10.for.end22_crit_edge, %for.end.for.end22_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_property_match_string(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_get_property(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__of_parse_phandle_with_args(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_property_read_string_helper(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #20

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #21

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #22 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 214)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #22 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 214)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nounwind readonly }
attributes #15 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #16 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #17 = { nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #21 = { nounwind }
attributes #22 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #23 = { nomerge }
attributes #24 = { nobuiltin nounwind }
attributes #25 = { nobuiltin }
attributes #26 = { cold nounwind }
attributes #27 = { cold }
attributes #28 = { nounwind allocsize(2) }
attributes #29 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !96, !97, !98, !99, !100, !101, !102, !103, !104, !106, !107, !108, !110, !111, !112, !113, !114, !116, !117, !118, !119, !120, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !222, !223, !224, !226, !228, !230, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !256, !258, !260, !262, !263, !264, !265, !267, !268, !269, !271, !272, !273, !275, !277, !279, !281, !283, !285, !287, !289, !291, !293, !295, !297, !299, !301, !303, !305, !307, !309, !311, !312, !313, !314, !316, !318, !319, !320, !321, !323, !325, !326, !327, !328, !330, !332, !333, !334, !336, !338, !340, !342, !344, !346, !348, !350, !352, !354, !356, !358, !360, !362, !364, !366, !368, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !431, !433, !435, !436, !437, !439, !441, !443, !445, !447, !449, !451, !453, !454, !455, !456, !457, !459, !460, !461, !462, !463, !464, !465, !466, !468, !470, !472, !473, !474, !475, !477, !479, !481, !482, !483, !484, !486, !488, !489, !490, !491, !492, !493, !494, !495, !497, !498, !499, !501, !502, !503, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !522, !523, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !537, !539, !541, !543, !545, !547, !549, !551, !553, !555, !557, !559, !561, !563, !565, !567, !569, !571, !573, !575, !577, !579, !581, !583, !585, !587, !589, !591, !593, !595, !596, !597, !599, !601, !603, !605, !607, !609, !611, !613, !615, !617, !619, !621, !623, !625, !627, !628, !630, !632, !634, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !664, !666, !668, !670, !672, !674, !676, !678, !680, !681, !683, !685, !686, !687, !689, !690, !691, !693, !694, !695, !697, !698, !699, !701, !702, !703, !705, !706, !707, !709, !710, !711, !713, !714, !715, !717, !719, !721, !723, !725, !727, !729, !731, !733, !735, !736, !737, !739, !741}
!llvm.named.register.sp = !{!743}
!llvm.module.flags = !{!744, !745, !746, !747, !748, !749, !750, !751}
!llvm.ident = !{!752}

!0 = !{ptr @__tracepoint_clk_enable, !1, !"__tracepoint_clk_enable", i1 false, i1 false}
!1 = !{!"../include/trace/events/clk.h", i32 32, i32 1}
!2 = !{ptr @__tracepoint_ptr_clk_enable, !1, !"__tracepoint_ptr_clk_enable", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_clk_enable, !1, !"__SCK__tp_func_clk_enable", i1 false, i1 false}
!4 = !{ptr @__tracepoint_clk_enable_complete, !5, !"__tracepoint_clk_enable_complete", i1 false, i1 false}
!5 = !{!"../include/trace/events/clk.h", i32 39, i32 1}
!6 = !{ptr @__tracepoint_ptr_clk_enable_complete, !5, !"__tracepoint_ptr_clk_enable_complete", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_clk_enable_complete, !5, !"__SCK__tp_func_clk_enable_complete", i1 false, i1 false}
!8 = !{ptr @__tracepoint_clk_disable, !9, !"__tracepoint_clk_disable", i1 false, i1 false}
!9 = !{!"../include/trace/events/clk.h", i32 46, i32 1}
!10 = !{ptr @__tracepoint_ptr_clk_disable, !9, !"__tracepoint_ptr_clk_disable", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_clk_disable, !9, !"__SCK__tp_func_clk_disable", i1 false, i1 false}
!12 = !{ptr @__tracepoint_clk_disable_complete, !13, !"__tracepoint_clk_disable_complete", i1 false, i1 false}
!13 = !{!"../include/trace/events/clk.h", i32 53, i32 1}
!14 = !{ptr @__tracepoint_ptr_clk_disable_complete, !13, !"__tracepoint_ptr_clk_disable_complete", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_clk_disable_complete, !13, !"__SCK__tp_func_clk_disable_complete", i1 false, i1 false}
!16 = !{ptr @__tracepoint_clk_prepare, !17, !"__tracepoint_clk_prepare", i1 false, i1 false}
!17 = !{!"../include/trace/events/clk.h", i32 60, i32 1}
!18 = !{ptr @__tracepoint_ptr_clk_prepare, !17, !"__tracepoint_ptr_clk_prepare", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_clk_prepare, !17, !"__SCK__tp_func_clk_prepare", i1 false, i1 false}
!20 = !{ptr @__tracepoint_clk_prepare_complete, !21, !"__tracepoint_clk_prepare_complete", i1 false, i1 false}
!21 = !{!"../include/trace/events/clk.h", i32 67, i32 1}
!22 = !{ptr @__tracepoint_ptr_clk_prepare_complete, !21, !"__tracepoint_ptr_clk_prepare_complete", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_clk_prepare_complete, !21, !"__SCK__tp_func_clk_prepare_complete", i1 false, i1 false}
!24 = !{ptr @__tracepoint_clk_unprepare, !25, !"__tracepoint_clk_unprepare", i1 false, i1 false}
!25 = !{!"../include/trace/events/clk.h", i32 74, i32 1}
!26 = !{ptr @__tracepoint_ptr_clk_unprepare, !25, !"__tracepoint_ptr_clk_unprepare", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_clk_unprepare, !25, !"__SCK__tp_func_clk_unprepare", i1 false, i1 false}
!28 = !{ptr @__tracepoint_clk_unprepare_complete, !29, !"__tracepoint_clk_unprepare_complete", i1 false, i1 false}
!29 = !{!"../include/trace/events/clk.h", i32 81, i32 1}
!30 = !{ptr @__tracepoint_ptr_clk_unprepare_complete, !29, !"__tracepoint_ptr_clk_unprepare_complete", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_clk_unprepare_complete, !29, !"__SCK__tp_func_clk_unprepare_complete", i1 false, i1 false}
!32 = !{ptr @__tracepoint_clk_set_rate, !33, !"__tracepoint_clk_set_rate", i1 false, i1 false}
!33 = !{!"../include/trace/events/clk.h", i32 107, i32 1}
!34 = !{ptr @__tracepoint_ptr_clk_set_rate, !33, !"__tracepoint_ptr_clk_set_rate", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_clk_set_rate, !33, !"__SCK__tp_func_clk_set_rate", i1 false, i1 false}
!36 = !{ptr @__tracepoint_clk_set_rate_complete, !37, !"__tracepoint_clk_set_rate_complete", i1 false, i1 false}
!37 = !{!"../include/trace/events/clk.h", i32 114, i32 1}
!38 = !{ptr @__tracepoint_ptr_clk_set_rate_complete, !37, !"__tracepoint_ptr_clk_set_rate_complete", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_clk_set_rate_complete, !37, !"__SCK__tp_func_clk_set_rate_complete", i1 false, i1 false}
!40 = !{ptr @__tracepoint_clk_set_min_rate, !41, !"__tracepoint_clk_set_min_rate", i1 false, i1 false}
!41 = !{!"../include/trace/events/clk.h", i32 121, i32 1}
!42 = !{ptr @__tracepoint_ptr_clk_set_min_rate, !41, !"__tracepoint_ptr_clk_set_min_rate", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_clk_set_min_rate, !41, !"__SCK__tp_func_clk_set_min_rate", i1 false, i1 false}
!44 = !{ptr @__tracepoint_clk_set_max_rate, !45, !"__tracepoint_clk_set_max_rate", i1 false, i1 false}
!45 = !{!"../include/trace/events/clk.h", i32 128, i32 1}
!46 = !{ptr @__tracepoint_ptr_clk_set_max_rate, !45, !"__tracepoint_ptr_clk_set_max_rate", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_clk_set_max_rate, !45, !"__SCK__tp_func_clk_set_max_rate", i1 false, i1 false}
!48 = !{ptr @__tracepoint_clk_set_rate_range, !49, !"__tracepoint_clk_set_rate_range", i1 false, i1 false}
!49 = !{!"../include/trace/events/clk.h", i32 158, i32 1}
!50 = !{ptr @__tracepoint_ptr_clk_set_rate_range, !49, !"__tracepoint_ptr_clk_set_rate_range", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_clk_set_rate_range, !49, !"__SCK__tp_func_clk_set_rate_range", i1 false, i1 false}
!52 = !{ptr @__tracepoint_clk_set_parent, !53, !"__tracepoint_clk_set_parent", i1 false, i1 false}
!53 = !{!"../include/trace/events/clk.h", i32 184, i32 1}
!54 = !{ptr @__tracepoint_ptr_clk_set_parent, !53, !"__tracepoint_ptr_clk_set_parent", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_clk_set_parent, !53, !"__SCK__tp_func_clk_set_parent", i1 false, i1 false}
!56 = !{ptr @__tracepoint_clk_set_parent_complete, !57, !"__tracepoint_clk_set_parent_complete", i1 false, i1 false}
!57 = !{!"../include/trace/events/clk.h", i32 191, i32 1}
!58 = !{ptr @__tracepoint_ptr_clk_set_parent_complete, !57, !"__tracepoint_ptr_clk_set_parent_complete", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func_clk_set_parent_complete, !57, !"__SCK__tp_func_clk_set_parent_complete", i1 false, i1 false}
!60 = !{ptr @__tracepoint_clk_set_phase, !61, !"__tracepoint_clk_set_phase", i1 false, i1 false}
!61 = !{!"../include/trace/events/clk.h", i32 217, i32 1}
!62 = !{ptr @__tracepoint_ptr_clk_set_phase, !61, !"__tracepoint_ptr_clk_set_phase", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_clk_set_phase, !61, !"__SCK__tp_func_clk_set_phase", i1 false, i1 false}
!64 = !{ptr @__tracepoint_clk_set_phase_complete, !65, !"__tracepoint_clk_set_phase_complete", i1 false, i1 false}
!65 = !{!"../include/trace/events/clk.h", i32 224, i32 1}
!66 = !{ptr @__tracepoint_ptr_clk_set_phase_complete, !65, !"__tracepoint_ptr_clk_set_phase_complete", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_clk_set_phase_complete, !65, !"__SCK__tp_func_clk_set_phase_complete", i1 false, i1 false}
!68 = !{ptr @__tracepoint_clk_set_duty_cycle, !69, !"__tracepoint_clk_set_duty_cycle", i1 false, i1 false}
!69 = !{!"../include/trace/events/clk.h", i32 253, i32 1}
!70 = !{ptr @__tracepoint_ptr_clk_set_duty_cycle, !69, !"__tracepoint_ptr_clk_set_duty_cycle", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_clk_set_duty_cycle, !69, !"__SCK__tp_func_clk_set_duty_cycle", i1 false, i1 false}
!72 = !{ptr @__tracepoint_clk_set_duty_cycle_complete, !73, !"__tracepoint_clk_set_duty_cycle_complete", i1 false, i1 false}
!73 = !{!"../include/trace/events/clk.h", i32 260, i32 1}
!74 = !{ptr @__tracepoint_ptr_clk_set_duty_cycle_complete, !73, !"__tracepoint_ptr_clk_set_duty_cycle_complete", i1 false, i1 false}
!75 = !{ptr @__SCK__tp_func_clk_set_duty_cycle_complete, !73, !"__SCK__tp_func_clk_set_duty_cycle_complete", i1 false, i1 false}
!76 = !{ptr @event_class_clk, !77, !"event_class_clk", i1 false, i1 false}
!77 = !{!"../include/trace/events/clk.h", i32 15, i32 1}
!78 = !{ptr @event_clk_enable, !1, !"event_clk_enable", i1 false, i1 false}
!79 = !{ptr @__event_clk_enable, !1, !"__event_clk_enable", i1 false, i1 false}
!80 = !{ptr @event_clk_enable_complete, !5, !"event_clk_enable_complete", i1 false, i1 false}
!81 = !{ptr @__event_clk_enable_complete, !5, !"__event_clk_enable_complete", i1 false, i1 false}
!82 = !{ptr @event_clk_disable, !9, !"event_clk_disable", i1 false, i1 false}
!83 = !{ptr @__event_clk_disable, !9, !"__event_clk_disable", i1 false, i1 false}
!84 = !{ptr @event_clk_disable_complete, !13, !"event_clk_disable_complete", i1 false, i1 false}
!85 = !{ptr @__event_clk_disable_complete, !13, !"__event_clk_disable_complete", i1 false, i1 false}
!86 = !{ptr @event_clk_prepare, !17, !"event_clk_prepare", i1 false, i1 false}
!87 = !{ptr @__event_clk_prepare, !17, !"__event_clk_prepare", i1 false, i1 false}
!88 = !{ptr @event_clk_prepare_complete, !21, !"event_clk_prepare_complete", i1 false, i1 false}
!89 = !{ptr @__event_clk_prepare_complete, !21, !"__event_clk_prepare_complete", i1 false, i1 false}
!90 = !{ptr @event_clk_unprepare, !25, !"event_clk_unprepare", i1 false, i1 false}
!91 = !{ptr @__event_clk_unprepare, !25, !"__event_clk_unprepare", i1 false, i1 false}
!92 = !{ptr @event_clk_unprepare_complete, !29, !"event_clk_unprepare_complete", i1 false, i1 false}
!93 = !{ptr @__event_clk_unprepare_complete, !29, !"__event_clk_unprepare_complete", i1 false, i1 false}
!94 = !{ptr @event_class_clk_rate, !95, !"event_class_clk_rate", i1 false, i1 false}
!95 = !{!"../include/trace/events/clk.h", i32 88, i32 1}
!96 = !{ptr @event_clk_set_rate, !33, !"event_clk_set_rate", i1 false, i1 false}
!97 = !{ptr @__event_clk_set_rate, !33, !"__event_clk_set_rate", i1 false, i1 false}
!98 = !{ptr @event_clk_set_rate_complete, !37, !"event_clk_set_rate_complete", i1 false, i1 false}
!99 = !{ptr @__event_clk_set_rate_complete, !37, !"__event_clk_set_rate_complete", i1 false, i1 false}
!100 = !{ptr @event_clk_set_min_rate, !41, !"event_clk_set_min_rate", i1 false, i1 false}
!101 = !{ptr @__event_clk_set_min_rate, !41, !"__event_clk_set_min_rate", i1 false, i1 false}
!102 = !{ptr @event_clk_set_max_rate, !45, !"event_clk_set_max_rate", i1 false, i1 false}
!103 = !{ptr @__event_clk_set_max_rate, !45, !"__event_clk_set_max_rate", i1 false, i1 false}
!104 = !{ptr @event_class_clk_rate_range, !105, !"event_class_clk_rate_range", i1 false, i1 false}
!105 = !{!"../include/trace/events/clk.h", i32 135, i32 1}
!106 = !{ptr @event_clk_set_rate_range, !49, !"event_clk_set_rate_range", i1 false, i1 false}
!107 = !{ptr @__event_clk_set_rate_range, !49, !"__event_clk_set_rate_range", i1 false, i1 false}
!108 = !{ptr @event_class_clk_parent, !109, !"event_class_clk_parent", i1 false, i1 false}
!109 = !{!"../include/trace/events/clk.h", i32 165, i32 1}
!110 = !{ptr @event_clk_set_parent, !53, !"event_clk_set_parent", i1 false, i1 false}
!111 = !{ptr @__event_clk_set_parent, !53, !"__event_clk_set_parent", i1 false, i1 false}
!112 = !{ptr @event_clk_set_parent_complete, !57, !"event_clk_set_parent_complete", i1 false, i1 false}
!113 = !{ptr @__event_clk_set_parent_complete, !57, !"__event_clk_set_parent_complete", i1 false, i1 false}
!114 = !{ptr @event_class_clk_phase, !115, !"event_class_clk_phase", i1 false, i1 false}
!115 = !{!"../include/trace/events/clk.h", i32 198, i32 1}
!116 = !{ptr @event_clk_set_phase, !61, !"event_clk_set_phase", i1 false, i1 false}
!117 = !{ptr @__event_clk_set_phase, !61, !"__event_clk_set_phase", i1 false, i1 false}
!118 = !{ptr @event_clk_set_phase_complete, !65, !"event_clk_set_phase_complete", i1 false, i1 false}
!119 = !{ptr @__event_clk_set_phase_complete, !65, !"__event_clk_set_phase_complete", i1 false, i1 false}
!120 = !{ptr @event_class_clk_duty_cycle, !121, !"event_class_clk_duty_cycle", i1 false, i1 false}
!121 = !{!"../include/trace/events/clk.h", i32 231, i32 1}
!122 = !{ptr @event_clk_set_duty_cycle, !69, !"event_clk_set_duty_cycle", i1 false, i1 false}
!123 = !{ptr @__event_clk_set_duty_cycle, !69, !"__event_clk_set_duty_cycle", i1 false, i1 false}
!124 = !{ptr @event_clk_set_duty_cycle_complete, !73, !"event_clk_set_duty_cycle_complete", i1 false, i1 false}
!125 = !{ptr @__event_clk_set_duty_cycle_complete, !73, !"__event_clk_set_duty_cycle_complete", i1 false, i1 false}
!126 = !{ptr @__bpf_trace_tp_map_clk_enable, !1, !"__bpf_trace_tp_map_clk_enable", i1 false, i1 false}
!127 = !{ptr @__bpf_trace_tp_map_clk_enable_complete, !5, !"__bpf_trace_tp_map_clk_enable_complete", i1 false, i1 false}
!128 = !{ptr @__bpf_trace_tp_map_clk_disable, !9, !"__bpf_trace_tp_map_clk_disable", i1 false, i1 false}
!129 = !{ptr @__bpf_trace_tp_map_clk_disable_complete, !13, !"__bpf_trace_tp_map_clk_disable_complete", i1 false, i1 false}
!130 = !{ptr @__bpf_trace_tp_map_clk_prepare, !17, !"__bpf_trace_tp_map_clk_prepare", i1 false, i1 false}
!131 = !{ptr @__bpf_trace_tp_map_clk_prepare_complete, !21, !"__bpf_trace_tp_map_clk_prepare_complete", i1 false, i1 false}
!132 = !{ptr @__bpf_trace_tp_map_clk_unprepare, !25, !"__bpf_trace_tp_map_clk_unprepare", i1 false, i1 false}
!133 = !{ptr @__bpf_trace_tp_map_clk_unprepare_complete, !29, !"__bpf_trace_tp_map_clk_unprepare_complete", i1 false, i1 false}
!134 = !{ptr @__bpf_trace_tp_map_clk_set_rate, !33, !"__bpf_trace_tp_map_clk_set_rate", i1 false, i1 false}
!135 = !{ptr @__bpf_trace_tp_map_clk_set_rate_complete, !37, !"__bpf_trace_tp_map_clk_set_rate_complete", i1 false, i1 false}
!136 = !{ptr @__bpf_trace_tp_map_clk_set_min_rate, !41, !"__bpf_trace_tp_map_clk_set_min_rate", i1 false, i1 false}
!137 = !{ptr @__bpf_trace_tp_map_clk_set_max_rate, !45, !"__bpf_trace_tp_map_clk_set_max_rate", i1 false, i1 false}
!138 = !{ptr @__bpf_trace_tp_map_clk_set_rate_range, !49, !"__bpf_trace_tp_map_clk_set_rate_range", i1 false, i1 false}
!139 = !{ptr @__bpf_trace_tp_map_clk_set_parent, !53, !"__bpf_trace_tp_map_clk_set_parent", i1 false, i1 false}
!140 = !{ptr @__bpf_trace_tp_map_clk_set_parent_complete, !57, !"__bpf_trace_tp_map_clk_set_parent_complete", i1 false, i1 false}
!141 = !{ptr @__bpf_trace_tp_map_clk_set_phase, !61, !"__bpf_trace_tp_map_clk_set_phase", i1 false, i1 false}
!142 = !{ptr @__bpf_trace_tp_map_clk_set_phase_complete, !65, !"__bpf_trace_tp_map_clk_set_phase_complete", i1 false, i1 false}
!143 = !{ptr @__bpf_trace_tp_map_clk_set_duty_cycle, !69, !"__bpf_trace_tp_map_clk_set_duty_cycle", i1 false, i1 false}
!144 = !{ptr @__bpf_trace_tp_map_clk_set_duty_cycle_complete, !73, !"__bpf_trace_tp_map_clk_set_duty_cycle_complete", i1 false, i1 false}
!145 = !{ptr @__ksymtab___clk_get_name, !146, !"__ksymtab___clk_get_name", i1 false, i1 false}
!146 = !{!"../drivers/clk/clk.c", i32 268, i32 1}
!147 = !{ptr @__ksymtab_clk_hw_get_name, !148, !"__ksymtab_clk_hw_get_name", i1 false, i1 false}
!148 = !{!"../drivers/clk/clk.c", i32 274, i32 1}
!149 = !{ptr @__ksymtab___clk_get_hw, !150, !"__ksymtab___clk_get_hw", i1 false, i1 false}
!150 = !{!"../drivers/clk/clk.c", i32 280, i32 1}
!151 = !{ptr @__ksymtab_clk_hw_get_num_parents, !152, !"__ksymtab_clk_hw_get_num_parents", i1 false, i1 false}
!152 = !{!"../drivers/clk/clk.c", i32 286, i32 1}
!153 = !{ptr @__ksymtab_clk_hw_get_parent, !154, !"__ksymtab_clk_hw_get_parent", i1 false, i1 false}
!154 = !{!"../drivers/clk/clk.c", i32 292, i32 1}
!155 = !{ptr @__ksymtab_clk_hw_get_parent_by_index, !156, !"__ksymtab_clk_hw_get_parent_by_index", i1 false, i1 false}
!156 = !{!"../drivers/clk/clk.c", i32 467, i32 1}
!157 = !{ptr @__ksymtab_clk_hw_get_rate, !158, !"__ksymtab_clk_hw_get_rate", i1 false, i1 false}
!158 = !{!"../drivers/clk/clk.c", i32 494, i32 1}
!159 = !{ptr @__ksymtab_clk_hw_get_flags, !160, !"__ksymtab_clk_hw_get_flags", i1 false, i1 false}
!160 = !{!"../drivers/clk/clk.c", i32 508, i32 1}
!161 = !{ptr @__ksymtab_clk_hw_is_prepared, !162, !"__ksymtab_clk_hw_is_prepared", i1 false, i1 false}
!162 = !{!"../drivers/clk/clk.c", i32 514, i32 1}
!163 = !{ptr @__ksymtab_clk_hw_rate_is_protected, !164, !"__ksymtab_clk_hw_rate_is_protected", i1 false, i1 false}
!164 = !{!"../drivers/clk/clk.c", i32 520, i32 1}
!165 = !{ptr @__ksymtab_clk_hw_is_enabled, !166, !"__ksymtab_clk_hw_is_enabled", i1 false, i1 false}
!166 = !{!"../drivers/clk/clk.c", i32 526, i32 1}
!167 = !{ptr @__ksymtab___clk_is_enabled, !168, !"__ksymtab___clk_is_enabled", i1 false, i1 false}
!168 = !{!"../drivers/clk/clk.c", i32 535, i32 1}
!169 = !{ptr @__ksymtab_clk_mux_determine_rate_flags, !170, !"__ksymtab_clk_mux_determine_rate_flags", i1 false, i1 false}
!170 = !{!"../drivers/clk/clk.c", i32 608, i32 1}
!171 = !{ptr @__ksymtab_clk_hw_set_rate_range, !172, !"__ksymtab_clk_hw_set_rate_range", i1 false, i1 false}
!172 = !{!"../drivers/clk/clk.c", i32 641, i32 1}
!173 = !{ptr @__ksymtab___clk_mux_determine_rate, !174, !"__ksymtab___clk_mux_determine_rate", i1 false, i1 false}
!174 = !{!"../drivers/clk/clk.c", i32 659, i32 1}
!175 = !{ptr @__ksymtab___clk_mux_determine_rate_closest, !176, !"__ksymtab___clk_mux_determine_rate_closest", i1 false, i1 false}
!176 = !{!"../drivers/clk/clk.c", i32 666, i32 1}
!177 = !{ptr @.str, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../drivers/clk/clk.c", i32 735, i32 6}
!179 = !{ptr @__ksymtab_clk_rate_exclusive_put, !180, !"__ksymtab_clk_rate_exclusive_put", i1 false, i1 false}
!180 = !{!"../drivers/clk/clk.c", i32 743, i32 1}
!181 = !{ptr @__ksymtab_clk_rate_exclusive_get, !182, !"__ksymtab_clk_rate_exclusive_get", i1 false, i1 false}
!182 = !{!"../drivers/clk/clk.c", i32 802, i32 1}
!183 = !{ptr @__ksymtab_clk_unprepare, !184, !"__ksymtab_clk_unprepare", i1 false, i1 false}
!184 = !{!"../drivers/clk/clk.c", i32 863, i32 1}
!185 = !{ptr @__ksymtab_clk_prepare, !186, !"__ksymtab_clk_prepare", i1 false, i1 false}
!186 = !{!"../drivers/clk/clk.c", i32 944, i32 1}
!187 = !{ptr @__ksymtab_clk_disable, !188, !"__ksymtab_clk_disable", i1 false, i1 false}
!188 = !{!"../drivers/clk/clk.c", i32 1001, i32 1}
!189 = !{ptr @__ksymtab_clk_gate_restore_context, !190, !"__ksymtab_clk_gate_restore_context", i1 false, i1 false}
!190 = !{!"../drivers/clk/clk.c", i32 1070, i32 1}
!191 = !{ptr @__ksymtab_clk_save_context, !192, !"__ksymtab_clk_save_context", i1 false, i1 false}
!192 = !{!"../drivers/clk/clk.c", i32 1126, i32 1}
!193 = !{ptr @__ksymtab_clk_restore_context, !194, !"__ksymtab_clk_restore_context", i1 false, i1 false}
!194 = !{!"../drivers/clk/clk.c", i32 1144, i32 1}
!195 = !{ptr @__ksymtab_clk_enable, !196, !"__ksymtab_clk_enable", i1 false, i1 false}
!196 = !{!"../drivers/clk/clk.c", i32 1166, i32 1}
!197 = !{ptr @__ksymtab_clk_is_enabled_when_prepared, !198, !"__ksymtab_clk_is_enabled_when_prepared", i1 false, i1 false}
!198 = !{!"../drivers/clk/clk.c", i32 1187, i32 1}
!199 = !{ptr @__setup_clk_ignore_unused_setup, !200, !"__setup_clk_ignore_unused_setup", i1 false, i1 false}
!200 = !{!"../drivers/clk/clk.c", i32 1292, i32 1}
!201 = !{ptr @__initcall__kmod_clk__353_1321_clk_disable_unused7s, !202, !"__initcall__kmod_clk__353_1321_clk_disable_unused7s", i1 false, i1 false}
!202 = !{!"../drivers/clk/clk.c", i32 1321, i32 1}
!203 = !{ptr @__ksymtab___clk_determine_rate, !204, !"__ksymtab___clk_determine_rate", i1 false, i1 false}
!204 = !{!"../drivers/clk/clk.c", i32 1417, i32 1}
!205 = !{ptr @__ksymtab_clk_hw_round_rate, !206, !"__ksymtab_clk_hw_round_rate", i1 false, i1 false}
!206 = !{!"../drivers/clk/clk.c", i32 1448, i32 1}
!207 = !{ptr @__ksymtab_clk_round_rate, !208, !"__ksymtab_clk_round_rate", i1 false, i1 false}
!208 = !{!"../drivers/clk/clk.c", i32 1487, i32 1}
!209 = !{ptr @__ksymtab_clk_get_accuracy, !210, !"__ksymtab_clk_get_accuracy", i1 false, i1 false}
!210 = !{!"../drivers/clk/clk.c", i32 1585, i32 1}
!211 = !{ptr @__ksymtab_clk_get_rate, !212, !"__ksymtab_clk_get_rate", i1 false, i1 false}
!212 = !{!"../drivers/clk/clk.c", i32 1666, i32 1}
!213 = !{ptr @__ksymtab_clk_hw_get_parent_index, !214, !"__ksymtab_clk_hw_get_parent_index", i1 false, i1 false}
!214 = !{!"../drivers/clk/clk.c", i32 1727, i32 1}
!215 = !{ptr @__ksymtab_clk_set_rate, !216, !"__ksymtab_clk_set_rate", i1 false, i1 false}
!216 = !{!"../drivers/clk/clk.c", i32 2266, i32 1}
!217 = !{ptr @__ksymtab_clk_set_rate_exclusive, !218, !"__ksymtab_clk_set_rate_exclusive", i1 false, i1 false}
!218 = !{!"../drivers/clk/clk.c", i32 2313, i32 1}
!219 = !{ptr @.str.1, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../drivers/clk/clk.c", i32 2334, i32 3}
!221 = !{ptr @.str.2, !220, !"<string literal>", i1 false, i1 false}
!222 = !{ptr @clk_set_rate_range._entry, !220, !"_entry", i1 false, i1 false}
!223 = !{ptr @clk_set_rate_range._entry_ptr, !220, !"_entry_ptr", i1 false, i1 false}
!224 = !{ptr @__ksymtab_clk_set_rate_range, !225, !"__ksymtab_clk_set_rate_range", i1 false, i1 false}
!225 = !{!"../drivers/clk/clk.c", i32 2386, i32 1}
!226 = !{ptr @__ksymtab_clk_set_min_rate, !227, !"__ksymtab_clk_set_min_rate", i1 false, i1 false}
!227 = !{!"../drivers/clk/clk.c", i32 2404, i32 1}
!228 = !{ptr @__ksymtab_clk_set_max_rate, !229, !"__ksymtab_clk_set_max_rate", i1 false, i1 false}
!229 = !{!"../drivers/clk/clk.c", i32 2422, i32 1}
!230 = !{ptr @__ksymtab_clk_get_parent, !231, !"__ksymtab_clk_get_parent", i1 false, i1 false}
!231 = !{!"../drivers/clk/clk.c", i32 2444, i32 1}
!232 = !{ptr @__ksymtab_clk_has_parent, !233, !"__ksymtab_clk_has_parent", i1 false, i1 false}
!233 = !{!"../drivers/clk/clk.c", i32 2504, i32 1}
!234 = !{ptr @__ksymtab_clk_hw_set_parent, !235, !"__ksymtab_clk_hw_set_parent", i1 false, i1 false}
!235 = !{!"../drivers/clk/clk.c", i32 2575, i32 1}
!236 = !{ptr @__ksymtab_clk_set_parent, !237, !"__ksymtab_clk_set_parent", i1 false, i1 false}
!237 = !{!"../drivers/clk/clk.c", i32 2616, i32 1}
!238 = !{ptr @__ksymtab_clk_set_phase, !239, !"__ksymtab_clk_set_phase", i1 false, i1 false}
!239 = !{!"../drivers/clk/clk.c", i32 2689, i32 1}
!240 = !{ptr @__ksymtab_clk_get_phase, !241, !"__ksymtab_clk_get_phase", i1 false, i1 false}
!241 = !{!"../drivers/clk/clk.c", i32 2727, i32 1}
!242 = !{ptr @__ksymtab_clk_set_duty_cycle, !243, !"__ksymtab_clk_set_duty_cycle", i1 false, i1 false}
!243 = !{!"../drivers/clk/clk.c", i32 2859, i32 1}
!244 = !{ptr @__ksymtab_clk_get_scaled_duty_cycle, !245, !"__ksymtab_clk_get_scaled_duty_cycle", i1 false, i1 false}
!245 = !{!"../drivers/clk/clk.c", i32 2893, i32 1}
!246 = !{ptr @__ksymtab_clk_is_match, !247, !"__ksymtab_clk_is_match", i1 false, i1 false}
!247 = !{!"../drivers/clk/clk.c", i32 2919, i32 1}
!248 = !{ptr @__initcall__kmod_clk__359_3427_clk_debug_init7, !249, !"__initcall__kmod_clk__359_3427_clk_debug_init7", i1 false, i1 false}
!249 = !{!"../drivers/clk/clk.c", i32 3427, i32 1}
!250 = !{ptr @__ksymtab_clk_hw_get_clk, !251, !"__ksymtab_clk_hw_get_clk", i1 false, i1 false}
!251 = !{!"../drivers/clk/clk.c", i32 3779, i32 1}
!252 = !{ptr @__ksymtab_clk_register, !253, !"__ksymtab_clk_register", i1 false, i1 false}
!253 = !{!"../drivers/clk/clk.c", i32 3998, i32 1}
!254 = !{ptr @__ksymtab_clk_hw_register, !255, !"__ksymtab_clk_hw_register", i1 false, i1 false}
!255 = !{!"../drivers/clk/clk.c", i32 4015, i32 1}
!256 = !{ptr @__ksymtab_of_clk_hw_register, !257, !"__ksymtab_of_clk_hw_register", i1 false, i1 false}
!257 = !{!"../drivers/clk/clk.c", i32 4032, i32 1}
!258 = distinct !{null, !259, !"__already_done", i1 false, i1 false}
!259 = !{!"../drivers/clk/clk.c", i32 4118, i32 14}
!260 = !{ptr @.str.3, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../drivers/clk/clk.c", i32 4127, i32 3}
!262 = !{ptr @.str.4, !261, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @clk_unregister._entry, !261, !"_entry", i1 false, i1 false}
!264 = !{ptr @clk_unregister._entry_ptr, !261, !"_entry_ptr", i1 false, i1 false}
!265 = !{ptr @.str.6, !266, !"<string literal>", i1 false, i1 false}
!266 = !{!"../drivers/clk/clk.c", i32 4157, i32 3}
!267 = !{ptr @clk_unregister._entry.5, !266, !"_entry", i1 false, i1 false}
!268 = !{ptr @clk_unregister._entry_ptr.7, !266, !"_entry_ptr", i1 false, i1 false}
!269 = !{ptr @.str.9, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../drivers/clk/clk.c", i32 4161, i32 3}
!271 = !{ptr @clk_unregister._entry.8, !270, !"_entry", i1 false, i1 false}
!272 = !{ptr @clk_unregister._entry_ptr.10, !270, !"_entry_ptr", i1 false, i1 false}
!273 = !{ptr @__ksymtab_clk_unregister, !274, !"__ksymtab_clk_unregister", i1 false, i1 false}
!274 = !{!"../drivers/clk/clk.c", i32 4169, i32 1}
!275 = !{ptr @__ksymtab_clk_hw_unregister, !276, !"__ksymtab_clk_hw_unregister", i1 false, i1 false}
!276 = !{!"../drivers/clk/clk.c", i32 4179, i32 1}
!277 = !{ptr @.str.11, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../drivers/clk/clk.c", i32 4206, i32 9}
!279 = !{ptr @__ksymtab_devm_clk_register, !280, !"__ksymtab_devm_clk_register", i1 false, i1 false}
!280 = !{!"../drivers/clk/clk.c", i32 4220, i32 1}
!281 = !{ptr @.str.12, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/clk/clk.c", i32 4236, i32 8}
!283 = !{ptr @__ksymtab_devm_clk_hw_register, !284, !"__ksymtab_devm_clk_hw_register", i1 false, i1 false}
!284 = !{!"../drivers/clk/clk.c", i32 4250, i32 1}
!285 = !{ptr @__ksymtab_devm_clk_unregister, !286, !"__ksymtab_devm_clk_unregister", i1 false, i1 false}
!286 = !{!"../drivers/clk/clk.c", i32 4282, i32 1}
!287 = !{ptr @__ksymtab_devm_clk_hw_unregister, !288, !"__ksymtab_devm_clk_hw_unregister", i1 false, i1 false}
!288 = !{!"../drivers/clk/clk.c", i32 4298, i32 1}
!289 = distinct !{null, !290, !"__already_done", i1 false, i1 false}
!290 = !{!"../drivers/clk/clk.c", i32 4325, i32 2}
!291 = !{ptr @.str.13, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/clk/clk.c", i32 4327, i32 9}
!293 = !{ptr @__ksymtab_devm_clk_hw_get_clk, !294, !"__ksymtab_devm_clk_hw_get_clk", i1 false, i1 false}
!294 = !{!"../drivers/clk/clk.c", i32 4341, i32 1}
!295 = distinct !{null, !296, !"__already_done", i1 false, i1 false}
!296 = !{!"../drivers/clk/clk.c", i32 4351, i32 14}
!297 = !{ptr @__ksymtab_clk_notifier_register, !298, !"__ksymtab_clk_notifier_register", i1 false, i1 false}
!298 = !{!"../drivers/clk/clk.c", i32 4440, i32 1}
!299 = !{ptr @__ksymtab_clk_notifier_unregister, !300, !"__ksymtab_clk_notifier_unregister", i1 false, i1 false}
!300 = !{!"../drivers/clk/clk.c", i32 4483, i32 1}
!301 = !{ptr @.str.14, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../drivers/clk/clk.c", i32 4503, i32 11}
!303 = !{ptr @__ksymtab_devm_clk_notifier_register, !304, !"__ksymtab_devm_clk_notifier_register", i1 false, i1 false}
!304 = !{!"../drivers/clk/clk.c", i32 4519, i32 1}
!305 = !{ptr @__ksymtab_of_clk_src_simple_get, !306, !"__ksymtab_of_clk_src_simple_get", i1 false, i1 false}
!306 = !{!"../drivers/clk/clk.c", i32 4560, i32 1}
!307 = !{ptr @__ksymtab_of_clk_hw_simple_get, !308, !"__ksymtab_of_clk_hw_simple_get", i1 false, i1 false}
!308 = !{!"../drivers/clk/clk.c", i32 4566, i32 1}
!309 = !{ptr @.str.15, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../drivers/clk/clk.c", i32 4574, i32 3}
!311 = !{ptr @.str.16, !310, !"<string literal>", i1 false, i1 false}
!312 = !{ptr @of_clk_src_onecell_get._entry, !310, !"_entry", i1 false, i1 false}
!313 = !{ptr @of_clk_src_onecell_get._entry_ptr, !310, !"_entry_ptr", i1 false, i1 false}
!314 = !{ptr @__ksymtab_of_clk_src_onecell_get, !315, !"__ksymtab_of_clk_src_onecell_get", i1 false, i1 false}
!315 = !{!"../drivers/clk/clk.c", i32 4580, i32 1}
!316 = !{ptr @.str.17, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../drivers/clk/clk.c", i32 4589, i32 3}
!318 = !{ptr @.str.18, !317, !"<string literal>", i1 false, i1 false}
!319 = !{ptr @of_clk_hw_onecell_get._entry, !317, !"_entry", i1 false, i1 false}
!320 = !{ptr @of_clk_hw_onecell_get._entry_ptr, !317, !"_entry_ptr", i1 false, i1 false}
!321 = !{ptr @__ksymtab_of_clk_hw_onecell_get, !322, !"__ksymtab_of_clk_hw_onecell_get", i1 false, i1 false}
!322 = !{!"../drivers/clk/clk.c", i32 4595, i32 1}
!323 = !{ptr @.str.19, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../drivers/clk/clk.c", i32 4627, i32 2}
!325 = !{ptr @.str.20, !324, !"<string literal>", i1 false, i1 false}
!326 = !{ptr @.str.21, !324, !"<string literal>", i1 false, i1 false}
!327 = !{ptr @of_clk_add_provider.__UNIQUE_ID_ddebug361, !324, !"__UNIQUE_ID_ddebug361", i1 false, i1 false}
!328 = !{ptr @__ksymtab_of_clk_add_provider, !329, !"__ksymtab_of_clk_add_provider", i1 false, i1 false}
!329 = !{!"../drivers/clk/clk.c", i32 4639, i32 1}
!330 = !{ptr @.str.22, !331, !"<string literal>", i1 false, i1 false}
!331 = !{!"../drivers/clk/clk.c", i32 4669, i32 2}
!332 = !{ptr @.str.23, !331, !"<string literal>", i1 false, i1 false}
!333 = !{ptr @of_clk_add_hw_provider.__UNIQUE_ID_ddebug362, !331, !"__UNIQUE_ID_ddebug362", i1 false, i1 false}
!334 = !{ptr @__ksymtab_of_clk_add_hw_provider, !335, !"__ksymtab_of_clk_add_hw_provider", i1 false, i1 false}
!335 = !{!"../drivers/clk/clk.c", i32 4681, i32 1}
!336 = !{ptr @.str.24, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../drivers/clk/clk.c", i32 4729, i32 8}
!338 = !{ptr @__ksymtab_devm_of_clk_add_hw_provider, !339, !"__ksymtab_devm_of_clk_add_hw_provider", i1 false, i1 false}
!339 = !{!"../drivers/clk/clk.c", i32 4745, i32 1}
!340 = !{ptr @__ksymtab_of_clk_del_provider, !341, !"__ksymtab_of_clk_del_provider", i1 false, i1 false}
!341 = !{!"../drivers/clk/clk.c", i32 4770, i32 1}
!342 = !{ptr @__ksymtab_devm_of_clk_del_provider, !343, !"__ksymtab_devm_of_clk_del_provider", i1 false, i1 false}
!343 = !{!"../drivers/clk/clk.c", i32 4796, i32 1}
!344 = !{ptr @__func__.of_clk_get_from_provider, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../drivers/clk/clk.c", i32 4921, i32 43}
!346 = !{ptr @__ksymtab_of_clk_get_from_provider, !347, !"__ksymtab_of_clk_get_from_provider", i1 false, i1 false}
!347 = !{!"../drivers/clk/clk.c", i32 4923, i32 1}
!348 = !{ptr @__ksymtab_of_clk_get, !349, !"__ksymtab_of_clk_get", i1 false, i1 false}
!349 = !{!"../drivers/clk/clk.c", i32 4955, i32 1}
!350 = !{ptr @__ksymtab_of_clk_get_by_name, !351, !"__ksymtab_of_clk_get_by_name", i1 false, i1 false}
!351 = !{!"../drivers/clk/clk.c", i32 4973, i32 1}
!352 = !{ptr @.str.25, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../drivers/clk/clk.c", i32 4985, i32 41}
!354 = !{ptr @.str.26, !355, !"<string literal>", i1 false, i1 false}
!355 = !{!"../drivers/clk/clk.c", i32 4985, i32 51}
!356 = !{ptr @__ksymtab_of_clk_get_parent_count, !357, !"__ksymtab_of_clk_get_parent_count", i1 false, i1 false}
!357 = !{!"../drivers/clk/clk.c", i32 4991, i32 1}
!358 = !{ptr @.str.27, !359, !"<string literal>", i1 false, i1 false}
!359 = !{!"../drivers/clk/clk.c", i32 5015, i32 2}
!360 = !{ptr @.str.28, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../drivers/clk/clk.c", i32 5026, i32 48}
!362 = !{ptr @__ksymtab_of_clk_get_parent_name, !363, !"__ksymtab_of_clk_get_parent_name", i1 false, i1 false}
!363 = !{!"../drivers/clk/clk.c", i32 5051, i32 1}
!364 = !{ptr @__ksymtab_of_clk_parent_fill, !365, !"__ksymtab_of_clk_parent_fill", i1 false, i1 false}
!365 = !{!"../drivers/clk/clk.c", i32 5072, i32 1}
!366 = !{ptr @.str.29, !367, !"<string literal>", i1 false, i1 false}
!367 = !{!"../drivers/clk/clk.c", i32 5143, i32 2}
!368 = !{ptr @__clk_of_table_sentinel, !369, !"__clk_of_table_sentinel", i1 false, i1 false}
!369 = !{!"../drivers/clk/clk.c", i32 4549, i32 34}
!370 = !{ptr @__tpstrtab_clk_enable, !1, !"__tpstrtab_clk_enable", i1 false, i1 false}
!371 = !{ptr @__tpstrtab_clk_enable_complete, !5, !"__tpstrtab_clk_enable_complete", i1 false, i1 false}
!372 = !{ptr @__tpstrtab_clk_disable, !9, !"__tpstrtab_clk_disable", i1 false, i1 false}
!373 = !{ptr @__tpstrtab_clk_disable_complete, !13, !"__tpstrtab_clk_disable_complete", i1 false, i1 false}
!374 = !{ptr @__tpstrtab_clk_prepare, !17, !"__tpstrtab_clk_prepare", i1 false, i1 false}
!375 = !{ptr @__tpstrtab_clk_prepare_complete, !21, !"__tpstrtab_clk_prepare_complete", i1 false, i1 false}
!376 = !{ptr @__tpstrtab_clk_unprepare, !25, !"__tpstrtab_clk_unprepare", i1 false, i1 false}
!377 = !{ptr @__tpstrtab_clk_unprepare_complete, !29, !"__tpstrtab_clk_unprepare_complete", i1 false, i1 false}
!378 = !{ptr @__tpstrtab_clk_set_rate, !33, !"__tpstrtab_clk_set_rate", i1 false, i1 false}
!379 = !{ptr @__tpstrtab_clk_set_rate_complete, !37, !"__tpstrtab_clk_set_rate_complete", i1 false, i1 false}
!380 = !{ptr @__tpstrtab_clk_set_min_rate, !41, !"__tpstrtab_clk_set_min_rate", i1 false, i1 false}
!381 = !{ptr @__tpstrtab_clk_set_max_rate, !45, !"__tpstrtab_clk_set_max_rate", i1 false, i1 false}
!382 = !{ptr @__tpstrtab_clk_set_rate_range, !49, !"__tpstrtab_clk_set_rate_range", i1 false, i1 false}
!383 = !{ptr @__tpstrtab_clk_set_parent, !53, !"__tpstrtab_clk_set_parent", i1 false, i1 false}
!384 = !{ptr @__tpstrtab_clk_set_parent_complete, !57, !"__tpstrtab_clk_set_parent_complete", i1 false, i1 false}
!385 = !{ptr @__tpstrtab_clk_set_phase, !61, !"__tpstrtab_clk_set_phase", i1 false, i1 false}
!386 = !{ptr @__tpstrtab_clk_set_phase_complete, !65, !"__tpstrtab_clk_set_phase_complete", i1 false, i1 false}
!387 = !{ptr @__tpstrtab_clk_set_duty_cycle, !69, !"__tpstrtab_clk_set_duty_cycle", i1 false, i1 false}
!388 = !{ptr @__tpstrtab_clk_set_duty_cycle_complete, !73, !"__tpstrtab_clk_set_duty_cycle_complete", i1 false, i1 false}
!389 = !{ptr @str__clk__trace_system_name, !390, !"str__clk__trace_system_name", i1 false, i1 false}
!390 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!391 = !{ptr @.str.30, !77, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @.str.31, !77, !"<string literal>", i1 false, i1 false}
!393 = !{ptr @.str.32, !77, !"<string literal>", i1 false, i1 false}
!394 = !{ptr @trace_event_fields_clk, !77, !"trace_event_fields_clk", i1 false, i1 false}
!395 = !{ptr @trace_event_type_funcs_clk, !77, !"trace_event_type_funcs_clk", i1 false, i1 false}
!396 = !{ptr @.str.33, !77, !"<string literal>", i1 false, i1 false}
!397 = !{ptr @print_fmt_clk, !77, !"print_fmt_clk", i1 false, i1 false}
!398 = !{ptr @.str.34, !95, !"<string literal>", i1 false, i1 false}
!399 = !{ptr @.str.35, !95, !"<string literal>", i1 false, i1 false}
!400 = !{ptr @trace_event_fields_clk_rate, !95, !"trace_event_fields_clk_rate", i1 false, i1 false}
!401 = !{ptr @trace_event_type_funcs_clk_rate, !95, !"trace_event_type_funcs_clk_rate", i1 false, i1 false}
!402 = !{ptr @.str.36, !95, !"<string literal>", i1 false, i1 false}
!403 = !{ptr @print_fmt_clk_rate, !95, !"print_fmt_clk_rate", i1 false, i1 false}
!404 = !{ptr @.str.37, !105, !"<string literal>", i1 false, i1 false}
!405 = !{ptr @.str.38, !105, !"<string literal>", i1 false, i1 false}
!406 = !{ptr @trace_event_fields_clk_rate_range, !105, !"trace_event_fields_clk_rate_range", i1 false, i1 false}
!407 = !{ptr @trace_event_type_funcs_clk_rate_range, !105, !"trace_event_type_funcs_clk_rate_range", i1 false, i1 false}
!408 = !{ptr @.str.39, !105, !"<string literal>", i1 false, i1 false}
!409 = !{ptr @print_fmt_clk_rate_range, !105, !"print_fmt_clk_rate_range", i1 false, i1 false}
!410 = !{ptr @.str.40, !109, !"<string literal>", i1 false, i1 false}
!411 = !{ptr @.str.41, !109, !"<string literal>", i1 false, i1 false}
!412 = !{ptr @trace_event_fields_clk_parent, !109, !"trace_event_fields_clk_parent", i1 false, i1 false}
!413 = !{ptr @trace_event_type_funcs_clk_parent, !109, !"trace_event_type_funcs_clk_parent", i1 false, i1 false}
!414 = !{ptr @.str.42, !109, !"<string literal>", i1 false, i1 false}
!415 = !{ptr @print_fmt_clk_parent, !109, !"print_fmt_clk_parent", i1 false, i1 false}
!416 = !{ptr @.str.43, !115, !"<string literal>", i1 false, i1 false}
!417 = !{ptr @.str.44, !115, !"<string literal>", i1 false, i1 false}
!418 = !{ptr @trace_event_fields_clk_phase, !115, !"trace_event_fields_clk_phase", i1 false, i1 false}
!419 = !{ptr @trace_event_type_funcs_clk_phase, !115, !"trace_event_type_funcs_clk_phase", i1 false, i1 false}
!420 = !{ptr @.str.45, !115, !"<string literal>", i1 false, i1 false}
!421 = !{ptr @print_fmt_clk_phase, !115, !"print_fmt_clk_phase", i1 false, i1 false}
!422 = !{ptr @.str.46, !121, !"<string literal>", i1 false, i1 false}
!423 = !{ptr @.str.47, !121, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @.str.48, !121, !"<string literal>", i1 false, i1 false}
!425 = !{ptr @trace_event_fields_clk_duty_cycle, !121, !"trace_event_fields_clk_duty_cycle", i1 false, i1 false}
!426 = !{ptr @trace_event_type_funcs_clk_duty_cycle, !121, !"trace_event_type_funcs_clk_duty_cycle", i1 false, i1 false}
!427 = !{ptr @.str.49, !121, !"<string literal>", i1 false, i1 false}
!428 = !{ptr @print_fmt_clk_duty_cycle, !121, !"print_fmt_clk_duty_cycle", i1 false, i1 false}
!429 = distinct !{null, !430, !"__already_done", i1 false, i1 false}
!430 = !{!"../drivers/clk/clk.c", i32 142, i32 2}
!431 = distinct !{null, !432, !"__already_done", i1 false, i1 false}
!432 = !{!"../drivers/clk/clk.c", i32 143, i32 2}
!433 = !{ptr @.str.51, !434, !"<string literal>", i1 false, i1 false}
!434 = !{!"../drivers/clk/clk.c", i32 28, i32 8}
!435 = !{ptr @.str.52, !434, !"<string literal>", i1 false, i1 false}
!436 = !{ptr @prepare_lock, !434, !"prepare_lock", i1 false, i1 false}
!437 = !{ptr @prepare_owner, !438, !"prepare_owner", i1 false, i1 false}
!438 = !{!"../drivers/clk/clk.c", i32 30, i32 28}
!439 = !{ptr @prepare_refcnt, !440, !"prepare_refcnt", i1 false, i1 false}
!440 = !{!"../drivers/clk/clk.c", i32 33, i32 12}
!441 = !{ptr @.str.53, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../drivers/clk/clk.c", i32 677, i32 6}
!443 = distinct !{null, !444, !"__already_done", i1 false, i1 false}
!444 = !{!"../drivers/clk/clk.c", i32 150, i32 2}
!445 = distinct !{null, !446, !"__already_done", i1 false, i1 false}
!446 = !{!"../drivers/clk/clk.c", i32 151, i32 2}
!447 = !{ptr @.str.55, !448, !"<string literal>", i1 false, i1 false}
!448 = !{!"../drivers/clk/clk.c", i32 811, i32 6}
!449 = !{ptr @.str.56, !450, !"<string literal>", i1 false, i1 false}
!450 = !{!"../drivers/clk/clk.c", i32 815, i32 6}
!451 = !{ptr @.str.57, !452, !"<string literal>", i1 false, i1 false}
!452 = !{!"../drivers/clk/clk.c", i32 825, i32 2}
!453 = distinct !{null, !25, !"__already_done", i1 false, i1 false}
!454 = !{ptr @.str.58, !25, !"<string literal>", i1 false, i1 false}
!455 = distinct !{null, !25, !"__warned", i1 false, i1 false}
!456 = !{ptr @.str.59, !25, !"<string literal>", i1 false, i1 false}
!457 = distinct !{null, !458, !"__already_done", i1 false, i1 false}
!458 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!459 = !{ptr @.str.60, !458, !"<string literal>", i1 false, i1 false}
!460 = distinct !{null, !29, !"__already_done", i1 false, i1 false}
!461 = distinct !{null, !29, !"__warned", i1 false, i1 false}
!462 = distinct !{null, !17, !"__already_done", i1 false, i1 false}
!463 = distinct !{null, !17, !"__warned", i1 false, i1 false}
!464 = distinct !{null, !21, !"__already_done", i1 false, i1 false}
!465 = distinct !{null, !21, !"__warned", i1 false, i1 false}
!466 = !{ptr @.str.61, !467, !"<string literal>", i1 false, i1 false}
!467 = !{!"../drivers/clk/clk.c", i32 953, i32 6}
!468 = !{ptr @.str.62, !469, !"<string literal>", i1 false, i1 false}
!469 = !{!"../drivers/clk/clk.c", i32 956, i32 6}
!470 = !{ptr @.str.63, !471, !"<string literal>", i1 false, i1 false}
!471 = !{!"../drivers/clk/clk.c", i32 27, i32 8}
!472 = !{ptr @enable_lock, !471, !"enable_lock", i1 false, i1 false}
!473 = distinct !{null, !9, !"__already_done", i1 false, i1 false}
!474 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!475 = !{ptr @clk_root_list, !476, !"clk_root_list", i1 false, i1 false}
!476 = !{!"../drivers/clk/clk.c", i32 36, i32 8}
!477 = !{ptr @clk_orphan_list, !478, !"clk_orphan_list", i1 false, i1 false}
!478 = !{!"../drivers/clk/clk.c", i32 37, i32 8}
!479 = !{ptr @.str.64, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../drivers/clk/clk.c", i32 1012, i32 6}
!481 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!482 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!483 = !{ptr @__setup_str_clk_ignore_unused_setup, !200, !"__setup_str_clk_ignore_unused_setup", i1 false, i1 false}
!484 = distinct !{null, !485, !"clk_ignore_unused", i1 false, i1 false}
!485 = !{!"../drivers/clk/clk.c", i32 1286, i32 13}
!486 = !{ptr @.str.65, !487, !"<string literal>", i1 false, i1 false}
!487 = !{!"../drivers/clk/clk.c", i32 1299, i32 3}
!488 = !{ptr @.str.66, !487, !"<string literal>", i1 false, i1 false}
!489 = !{ptr @clk_disable_unused._entry, !487, !"_entry", i1 false, i1 false}
!490 = !{ptr @clk_disable_unused._entry_ptr, !487, !"_entry_ptr", i1 false, i1 false}
!491 = distinct !{null, !9, !"__already_done", i1 false, i1 false}
!492 = distinct !{null, !9, !"__warned", i1 false, i1 false}
!493 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!494 = distinct !{null, !13, !"__warned", i1 false, i1 false}
!495 = !{ptr @.str.67, !496, !"<string literal>", i1 false, i1 false}
!496 = !{!"../drivers/clk/clk.c", i32 2206, i32 3}
!497 = !{ptr @.str.68, !496, !"<string literal>", i1 false, i1 false}
!498 = !{ptr @clk_core_set_rate_nolock.__UNIQUE_ID_ddebug357, !496, !"__UNIQUE_ID_ddebug357", i1 false, i1 false}
!499 = !{ptr @.str.69, !500, !"<string literal>", i1 false, i1 false}
!500 = !{!"../drivers/clk/clk.c", i32 1990, i32 3}
!501 = !{ptr @.str.70, !500, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @clk_calc_new_rates.__UNIQUE_ID_ddebug355, !500, !"__UNIQUE_ID_ddebug355", i1 false, i1 false}
!503 = !{ptr @.str.71, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../drivers/clk/clk.c", i32 1999, i32 4}
!505 = !{ptr @clk_calc_new_rates.__UNIQUE_ID_ddebug356, !504, !"__UNIQUE_ID_ddebug356", i1 false, i1 false}
!506 = distinct !{null, !53, !"__already_done", i1 false, i1 false}
!507 = distinct !{null, !53, !"__warned", i1 false, i1 false}
!508 = distinct !{null, !57, !"__already_done", i1 false, i1 false}
!509 = distinct !{null, !57, !"__warned", i1 false, i1 false}
!510 = distinct !{null, !33, !"__already_done", i1 false, i1 false}
!511 = distinct !{null, !33, !"__warned", i1 false, i1 false}
!512 = distinct !{null, !37, !"__already_done", i1 false, i1 false}
!513 = distinct !{null, !37, !"__warned", i1 false, i1 false}
!514 = distinct !{null, !49, !"__already_done", i1 false, i1 false}
!515 = distinct !{null, !49, !"__warned", i1 false, i1 false}
!516 = distinct !{null, !41, !"__already_done", i1 false, i1 false}
!517 = distinct !{null, !41, !"__warned", i1 false, i1 false}
!518 = distinct !{null, !45, !"__already_done", i1 false, i1 false}
!519 = distinct !{null, !45, !"__warned", i1 false, i1 false}
!520 = !{ptr @.str.72, !521, !"<string literal>", i1 false, i1 false}
!521 = !{!"../drivers/clk/clk.c", i32 2536, i32 4}
!522 = !{ptr @clk_core_set_parent_nolock.__UNIQUE_ID_ddebug358, !521, !"__UNIQUE_ID_ddebug358", i1 false, i1 false}
!523 = !{ptr @.str.73, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../drivers/clk/clk.c", i32 1895, i32 3}
!525 = !{ptr @.str.74, !524, !"<string literal>", i1 false, i1 false}
!526 = !{ptr @__clk_speculate_rates.__UNIQUE_ID_ddebug354, !524, !"__UNIQUE_ID_ddebug354", i1 false, i1 false}
!527 = distinct !{null, !61, !"__already_done", i1 false, i1 false}
!528 = distinct !{null, !61, !"__warned", i1 false, i1 false}
!529 = distinct !{null, !65, !"__already_done", i1 false, i1 false}
!530 = distinct !{null, !65, !"__warned", i1 false, i1 false}
!531 = distinct !{null, !69, !"__already_done", i1 false, i1 false}
!532 = distinct !{null, !69, !"__warned", i1 false, i1 false}
!533 = distinct !{null, !73, !"__already_done", i1 false, i1 false}
!534 = distinct !{null, !73, !"__warned", i1 false, i1 false}
!535 = !{ptr @.str.75, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../drivers/clk/clk.c", i32 3409, i32 22}
!537 = !{ptr @.str.76, !538, !"<string literal>", i1 false, i1 false}
!538 = !{!"../drivers/clk/clk.c", i32 3411, i32 22}
!539 = !{ptr @.str.77, !540, !"<string literal>", i1 false, i1 false}
!540 = !{!"../drivers/clk/clk.c", i32 3413, i32 22}
!541 = !{ptr @.str.78, !542, !"<string literal>", i1 false, i1 false}
!542 = !{!"../drivers/clk/clk.c", i32 3415, i32 22}
!543 = !{ptr @rootdir, !544, !"rootdir", i1 false, i1 false}
!544 = !{!"../drivers/clk/clk.c", i32 2926, i32 23}
!545 = !{ptr @all_lists, !546, !"all_lists", i1 false, i1 false}
!546 = !{!"../drivers/clk/clk.c", i32 40, i32 27}
!547 = !{ptr @clk_summary_fops, !548, !"clk_summary_fops", i1 false, i1 false}
!548 = !{!"../drivers/clk/clk.c", i32 2996, i32 1}
!549 = !{ptr @.str.79, !550, !"<string literal>", i1 false, i1 false}
!550 = !{!"../drivers/clk/clk.c", i32 2982, i32 14}
!551 = !{ptr @.str.80, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../drivers/clk/clk.c", i32 2983, i32 14}
!553 = !{ptr @.str.81, !554, !"<string literal>", i1 false, i1 false}
!554 = !{!"../drivers/clk/clk.c", i32 2984, i32 14}
!555 = !{ptr @.str.82, !556, !"<string literal>", i1 false, i1 false}
!556 = !{!"../drivers/clk/clk.c", i32 2941, i32 16}
!557 = !{ptr @.str.83, !558, !"<string literal>", i1 false, i1 false}
!558 = !{!"../drivers/clk/clk.c", i32 2942, i32 21}
!559 = !{ptr @.str.84, !560, !"<string literal>", i1 false, i1 false}
!560 = !{!"../drivers/clk/clk.c", i32 2950, i32 17}
!561 = !{ptr @.str.85, !562, !"<string literal>", i1 false, i1 false}
!562 = !{!"../drivers/clk/clk.c", i32 2952, i32 15}
!563 = !{ptr @.str.86, !564, !"<string literal>", i1 false, i1 false}
!564 = !{!"../drivers/clk/clk.c", i32 2954, i32 16}
!565 = !{ptr @.str.87, !566, !"<string literal>", i1 false, i1 false}
!566 = !{!"../drivers/clk/clk.c", i32 2957, i32 17}
!567 = !{ptr @clk_dump_fops, !568, !"clk_dump_fops", i1 false, i1 false}
!568 = !{!"../drivers/clk/clk.c", i32 3058, i32 1}
!569 = !{ptr @.str.88, !570, !"<string literal>", i1 false, i1 false}
!570 = !{!"../drivers/clk/clk.c", i32 3055, i32 14}
!571 = !{ptr @.str.89, !572, !"<string literal>", i1 false, i1 false}
!572 = !{!"../drivers/clk/clk.c", i32 3006, i32 16}
!573 = !{ptr @.str.90, !574, !"<string literal>", i1 false, i1 false}
!574 = !{!"../drivers/clk/clk.c", i32 3007, i32 16}
!575 = !{ptr @.str.91, !576, !"<string literal>", i1 false, i1 false}
!576 = !{!"../drivers/clk/clk.c", i32 3008, i32 16}
!577 = !{ptr @.str.92, !578, !"<string literal>", i1 false, i1 false}
!578 = !{!"../drivers/clk/clk.c", i32 3009, i32 16}
!579 = !{ptr @.str.93, !580, !"<string literal>", i1 false, i1 false}
!580 = !{!"../drivers/clk/clk.c", i32 3010, i32 16}
!581 = !{ptr @.str.94, !582, !"<string literal>", i1 false, i1 false}
!582 = !{!"../drivers/clk/clk.c", i32 3011, i32 16}
!583 = !{ptr @.str.95, !584, !"<string literal>", i1 false, i1 false}
!584 = !{!"../drivers/clk/clk.c", i32 3012, i32 16}
!585 = !{ptr @.str.96, !586, !"<string literal>", i1 false, i1 false}
!586 = !{!"../drivers/clk/clk.c", i32 3013, i32 16}
!587 = !{ptr @.str.97, !588, !"<string literal>", i1 false, i1 false}
!588 = !{!"../drivers/clk/clk.c", i32 3016, i32 17}
!589 = !{ptr @.str.98, !590, !"<string literal>", i1 false, i1 false}
!590 = !{!"../drivers/clk/clk.c", i32 3017, i32 16}
!591 = !{ptr @orphan_list, !592, !"orphan_list", i1 false, i1 false}
!592 = !{!"../drivers/clk/clk.c", i32 2931, i32 27}
!593 = !{ptr @.str.99, !594, !"<string literal>", i1 false, i1 false}
!594 = !{!"../drivers/clk/clk.c", i32 2928, i32 8}
!595 = !{ptr @.str.100, !594, !"<string literal>", i1 false, i1 false}
!596 = !{ptr @clk_debug_lock, !594, !"clk_debug_lock", i1 false, i1 false}
!597 = !{ptr @clk_debug_list, !598, !"clk_debug_list", i1 false, i1 false}
!598 = !{!"../drivers/clk/clk.c", i32 2929, i32 8}
!599 = !{ptr @.str.101, !600, !"<string literal>", i1 false, i1 false}
!600 = !{!"../drivers/clk/clk.c", i32 3308, i32 22}
!601 = !{ptr @.str.102, !602, !"<string literal>", i1 false, i1 false}
!602 = !{!"../drivers/clk/clk.c", i32 3310, i32 22}
!603 = !{ptr @.str.103, !604, !"<string literal>", i1 false, i1 false}
!604 = !{!"../drivers/clk/clk.c", i32 3311, i32 22}
!605 = !{ptr @.str.104, !606, !"<string literal>", i1 false, i1 false}
!606 = !{!"../drivers/clk/clk.c", i32 3312, i32 23}
!607 = !{ptr @.str.105, !608, !"<string literal>", i1 false, i1 false}
!608 = !{!"../drivers/clk/clk.c", i32 3313, i32 21}
!609 = !{ptr @.str.106, !610, !"<string literal>", i1 false, i1 false}
!610 = !{!"../drivers/clk/clk.c", i32 3314, i32 22}
!611 = !{ptr @.str.107, !612, !"<string literal>", i1 false, i1 false}
!612 = !{!"../drivers/clk/clk.c", i32 3315, i32 21}
!613 = !{ptr @.str.108, !614, !"<string literal>", i1 false, i1 false}
!614 = !{!"../drivers/clk/clk.c", i32 3316, i32 21}
!615 = !{ptr @.str.109, !616, !"<string literal>", i1 false, i1 false}
!616 = !{!"../drivers/clk/clk.c", i32 3317, i32 21}
!617 = !{ptr @.str.110, !618, !"<string literal>", i1 false, i1 false}
!618 = !{!"../drivers/clk/clk.c", i32 3318, i32 21}
!619 = !{ptr @.str.111, !620, !"<string literal>", i1 false, i1 false}
!620 = !{!"../drivers/clk/clk.c", i32 3319, i32 22}
!621 = !{ptr @.str.112, !622, !"<string literal>", i1 false, i1 false}
!622 = !{!"../drivers/clk/clk.c", i32 3331, i32 23}
!623 = !{ptr @.str.113, !624, !"<string literal>", i1 false, i1 false}
!624 = !{!"../drivers/clk/clk.c", i32 3335, i32 23}
!625 = !{ptr @clk_rate_fops, !626, !"clk_rate_fops", i1 false, i1 false}
!626 = !{!"../drivers/clk/clk.c", i32 3121, i32 1}
!627 = !{ptr @.str.114, !626, !"<string literal>", i1 false, i1 false}
!628 = !{ptr @clk_min_rate_fops, !629, !"clk_min_rate_fops", i1 false, i1 false}
!629 = !{!"../drivers/clk/clk.c", i32 3282, i32 1}
!630 = !{ptr @.str.115, !631, !"<string literal>", i1 false, i1 false}
!631 = !{!"../drivers/clk/clk.c", i32 3278, i32 16}
!632 = !{ptr @clk_max_rate_fops, !633, !"clk_max_rate_fops", i1 false, i1 false}
!633 = !{!"../drivers/clk/clk.c", i32 3296, i32 1}
!634 = !{ptr @clk_flags_fops, !635, !"clk_flags_fops", i1 false, i1 false}
!635 = !{!"../drivers/clk/clk.c", i32 3162, i32 1}
!636 = !{ptr @.str.116, !637, !"<string literal>", i1 false, i1 false}
!637 = !{!"../drivers/clk/clk.c", i32 3157, i32 17}
!638 = !{ptr @.str.117, !639, !"<string literal>", i1 false, i1 false}
!639 = !{!"../drivers/clk/clk.c", i32 3128, i32 2}
!640 = !{ptr @.str.118, !641, !"<string literal>", i1 false, i1 false}
!641 = !{!"../drivers/clk/clk.c", i32 3129, i32 2}
!642 = !{ptr @.str.119, !643, !"<string literal>", i1 false, i1 false}
!643 = !{!"../drivers/clk/clk.c", i32 3130, i32 2}
!644 = !{ptr @.str.120, !645, !"<string literal>", i1 false, i1 false}
!645 = !{!"../drivers/clk/clk.c", i32 3131, i32 2}
!646 = !{ptr @.str.121, !647, !"<string literal>", i1 false, i1 false}
!647 = !{!"../drivers/clk/clk.c", i32 3132, i32 2}
!648 = !{ptr @.str.122, !649, !"<string literal>", i1 false, i1 false}
!649 = !{!"../drivers/clk/clk.c", i32 3133, i32 2}
!650 = !{ptr @.str.123, !651, !"<string literal>", i1 false, i1 false}
!651 = !{!"../drivers/clk/clk.c", i32 3134, i32 2}
!652 = !{ptr @.str.124, !653, !"<string literal>", i1 false, i1 false}
!653 = !{!"../drivers/clk/clk.c", i32 3135, i32 2}
!654 = !{ptr @.str.125, !655, !"<string literal>", i1 false, i1 false}
!655 = !{!"../drivers/clk/clk.c", i32 3136, i32 2}
!656 = !{ptr @.str.126, !657, !"<string literal>", i1 false, i1 false}
!657 = !{!"../drivers/clk/clk.c", i32 3137, i32 2}
!658 = !{ptr @.str.127, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../drivers/clk/clk.c", i32 3138, i32 2}
!660 = !{ptr @.str.128, !661, !"<string literal>", i1 false, i1 false}
!661 = !{!"../drivers/clk/clk.c", i32 3139, i32 2}
!662 = !{ptr @clk_flags, !663, !"clk_flags", i1 false, i1 false}
!663 = !{!"../drivers/clk/clk.c", i32 3126, i32 3}
!664 = !{ptr @clk_duty_cycle_fops, !665, !"clk_duty_cycle_fops", i1 false, i1 false}
!665 = !{!"../drivers/clk/clk.c", i32 3268, i32 1}
!666 = !{ptr @.str.129, !667, !"<string literal>", i1 false, i1 false}
!667 = !{!"../drivers/clk/clk.c", i32 3264, i32 16}
!668 = !{ptr @current_parent_fops, !669, !"current_parent_fops", i1 false, i1 false}
!669 = !{!"../drivers/clk/clk.c", i32 3221, i32 1}
!670 = !{ptr @possible_parents_fops, !671, !"possible_parents_fops", i1 false, i1 false}
!671 = !{!"../drivers/clk/clk.c", i32 3210, i32 1}
!672 = !{ptr @.str.130, !673, !"<string literal>", i1 false, i1 false}
!673 = !{!"../drivers/clk/clk.c", i32 3187, i32 17}
!674 = !{ptr @.str.131, !675, !"<string literal>", i1 false, i1 false}
!675 = !{!"../drivers/clk/clk.c", i32 3193, i32 15}
!676 = distinct !{null, !677, !"inited", i1 false, i1 false}
!677 = !{!"../drivers/clk/clk.c", i32 2927, i32 12}
!678 = !{ptr @.str.132, !679, !"<string literal>", i1 false, i1 false}
!679 = !{!"../drivers/clk/clk.c", i32 3825, i32 4}
!680 = !{ptr @__func__.clk_core_populate_parent_map, !679, !"<string literal>", i1 false, i1 false}
!681 = !{ptr @.str.133, !682, !"<string literal>", i1 false, i1 false}
!682 = !{!"../drivers/clk/clk.c", i32 3843, i32 4}
!683 = !{ptr @.str.134, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../drivers/clk/clk.c", i32 3493, i32 3}
!685 = !{ptr @.str.135, !684, !"<string literal>", i1 false, i1 false}
!686 = !{ptr @__clk_core_init.__UNIQUE_ID_ddebug360, !684, !"__UNIQUE_ID_ddebug360", i1 false, i1 false}
!687 = !{ptr @.str.136, !688, !"<string literal>", i1 false, i1 false}
!688 = !{!"../drivers/clk/clk.c", i32 3503, i32 3}
!689 = !{ptr @__clk_core_init._entry, !688, !"_entry", i1 false, i1 false}
!690 = !{ptr @__clk_core_init._entry_ptr, !688, !"_entry_ptr", i1 false, i1 false}
!691 = !{ptr @.str.138, !692, !"<string literal>", i1 false, i1 false}
!692 = !{!"../drivers/clk/clk.c", i32 3510, i32 3}
!693 = !{ptr @__clk_core_init._entry.137, !692, !"_entry", i1 false, i1 false}
!694 = !{ptr @__clk_core_init._entry_ptr.139, !692, !"_entry_ptr", i1 false, i1 false}
!695 = !{ptr @.str.141, !696, !"<string literal>", i1 false, i1 false}
!696 = !{!"../drivers/clk/clk.c", i32 3517, i32 3}
!697 = !{ptr @__clk_core_init._entry.140, !696, !"_entry", i1 false, i1 false}
!698 = !{ptr @__clk_core_init._entry_ptr.142, !696, !"_entry_ptr", i1 false, i1 false}
!699 = !{ptr @.str.144, !700, !"<string literal>", i1 false, i1 false}
!700 = !{!"../drivers/clk/clk.c", i32 3525, i32 3}
!701 = !{ptr @__clk_core_init._entry.143, !700, !"_entry", i1 false, i1 false}
!702 = !{ptr @__clk_core_init._entry_ptr.145, !700, !"_entry_ptr", i1 false, i1 false}
!703 = !{ptr @.str.147, !704, !"<string literal>", i1 false, i1 false}
!704 = !{!"../drivers/clk/clk.c", i32 3597, i32 3}
!705 = !{ptr @__clk_core_init._entry.146, !704, !"_entry", i1 false, i1 false}
!706 = !{ptr @__clk_core_init._entry_ptr.148, !704, !"_entry_ptr", i1 false, i1 false}
!707 = !{ptr @.str.150, !708, !"<string literal>", i1 false, i1 false}
!708 = !{!"../drivers/clk/clk.c", i32 3630, i32 4}
!709 = !{ptr @__clk_core_init._entry.149, !708, !"_entry", i1 false, i1 false}
!710 = !{ptr @__clk_core_init._entry_ptr.151, !708, !"_entry_ptr", i1 false, i1 false}
!711 = !{ptr @.str.153, !712, !"<string literal>", i1 false, i1 false}
!712 = !{!"../drivers/clk/clk.c", i32 3637, i32 4}
!713 = !{ptr @__clk_core_init._entry.152, !712, !"_entry", i1 false, i1 false}
!714 = !{ptr @__clk_core_init._entry_ptr.154, !712, !"_entry_ptr", i1 false, i1 false}
!715 = !{ptr @clk_nodrv_ops, !716, !"clk_nodrv_ops", i1 false, i1 false}
!716 = !{!"../drivers/clk/clk.c", i32 4072, i32 29}
!717 = distinct !{null, !718, !"__already_done", i1 false, i1 false}
!718 = !{!"../drivers/clk/clk.c", i32 4058, i32 2}
!719 = distinct !{null, !720, !"__already_done", i1 false, i1 false}
!720 = !{!"../drivers/clk/clk.c", i32 180, i32 2}
!721 = distinct !{null, !722, !"__already_done", i1 false, i1 false}
!722 = !{!"../drivers/clk/clk.c", i32 181, i32 2}
!723 = !{ptr @enable_owner, !724, !"enable_owner", i1 false, i1 false}
!724 = !{!"../drivers/clk/clk.c", i32 31, i32 28}
!725 = !{ptr @enable_refcnt, !726, !"enable_refcnt", i1 false, i1 false}
!726 = !{!"../drivers/clk/clk.c", i32 34, i32 12}
!727 = distinct !{null, !728, !"__already_done", i1 false, i1 false}
!728 = !{!"../drivers/clk/clk.c", i32 190, i32 2}
!729 = distinct !{null, !730, !"__already_done", i1 false, i1 false}
!730 = !{!"../drivers/clk/clk.c", i32 191, i32 2}
!731 = !{ptr @clk_notifier_list, !732, !"clk_notifier_list", i1 false, i1 false}
!732 = !{!"../drivers/clk/clk.c", i32 38, i32 8}
!733 = !{ptr @.str.157, !734, !"<string literal>", i1 false, i1 false}
!734 = !{!"../drivers/clk/clk.c", i32 4553, i32 8}
!735 = !{ptr @.str.158, !734, !"<string literal>", i1 false, i1 false}
!736 = !{ptr @of_clk_mutex, !734, !"of_clk_mutex", i1 false, i1 false}
!737 = !{ptr @of_clk_providers, !738, !"of_clk_providers", i1 false, i1 false}
!738 = !{!"../drivers/clk/clk.c", i32 4552, i32 8}
!739 = !{ptr @.str.159, !740, !"<string literal>", i1 false, i1 false}
!740 = !{!"../drivers/clk/clk.c", i32 4850, i32 41}
!741 = !{ptr @.str.160, !742, !"<string literal>", i1 false, i1 false}
!742 = !{!"../drivers/clk/clk.c", i32 4864, i32 34}
!743 = !{!"sp"}
!744 = !{i32 1, !"wchar_size", i32 2}
!745 = !{i32 1, !"min_enum_size", i32 4}
!746 = !{i32 8, !"branch-target-enforcement", i32 0}
!747 = !{i32 8, !"sign-return-address", i32 0}
!748 = !{i32 8, !"sign-return-address-all", i32 0}
!749 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!750 = !{i32 7, !"uwtable", i32 1}
!751 = !{i32 7, !"frame-pointer", i32 2}
!752 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!753 = !{!"branch_weights", i32 2000, i32 1}
!754 = !{!"branch_weights", i32 1, i32 2000}
!755 = !{!"auto-init"}
!756 = !{i8 0, i8 2}
!757 = !{i64 2148370463}
!758 = !{i64 855286, i64 855311, i64 855333, i64 855349, i64 855361, i64 855381, i64 855405, i64 855421, i64 855433}
!759 = !{i64 2148370651}
!760 = !{i64 2148371044, i64 2148371070, i64 2148371099, i64 2148371133, i64 2148371164, i64 2148371187}
!761 = !{i64 2148852859, i64 2148852864, i64 2148852877, i64 2148852921, i64 2148852955, i64 2148852976}
!762 = !{i64 2153294927}
!763 = !{i64 2153295154}
!764 = !{i64 2149428945}
!765 = !{i64 2149429981}
!766 = !{i64 2153261475}
!767 = !{i64 2153261690}
!768 = !{i64 2153278019}
!769 = !{i64 2153278234}
!770 = !{i64 2148372574, i64 2148372606, i64 2148372635, i64 2148372669, i64 2148372700, i64 2148372723}
!771 = !{i64 763525, i64 763586}
!772 = !{i64 766257}
!773 = !{i64 766542}
!774 = !{i64 2148460575}
!775 = !{i64 2148375039, i64 2148375071, i64 2148375100, i64 2148375134, i64 2148375165, i64 2148375188}
!776 = !{i64 2150406404}
!777 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!778 = !{i64 2153191271}
!779 = !{i64 2153191468}
!780 = !{i64 2153207456}
!781 = !{i64 2153207671}
!782 = !{i64 2153154988}
!783 = !{i64 2153155181}
!784 = !{i64 2153175050}
!785 = !{i64 2153175261}
!786 = !{i64 2153131400}
!787 = !{i64 2153131593}
!788 = !{i64 2153147788}
!789 = !{i64 2153147999}
!790 = !{i64 2153095296}
!791 = !{i64 2153095487}
!792 = !{i64 2153115653}
!793 = !{i64 2153115862}
!794 = !{i64 2153122842}
!795 = !{i64 2153123035}
!796 = !{i64 2153138843}
!797 = !{i64 2153139054}
!798 = !{i64 2153315720}
!799 = !{i64 2153315935}
!800 = !{i64 2153332536}
!801 = !{i64 2153332769}
!802 = !{i64 2153224082}
!803 = !{i64 2153224289}
!804 = !{i64 2153244661}
!805 = !{i64 2153244886}
!806 = !{i64 2153349253}
!807 = !{i64 2153349464}
!808 = !{i64 2153365736}
!809 = !{i64 2153365965}
!810 = !{i64 2153386773}
!811 = !{i64 2153386992}
!812 = !{i64 2153403891}
!813 = !{i64 2153404128}
!814 = distinct !{!814, !815}
!815 = !{!"llvm.loop.peeled.count", i32 1}
