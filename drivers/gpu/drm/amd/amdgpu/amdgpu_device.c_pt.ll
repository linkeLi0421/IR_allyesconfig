; ModuleID = '/llk/IR_all_yes/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c_pt.bc'
source_filename = "../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.amdgpu_mgpu_info = type { [16 x %struct.amdgpu_gpu_instance], %struct.mutex, i32, i32, i32, %struct.delayed_work, i8 }
%struct.amdgpu_gpu_instance = type { ptr, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.77 }
%union.anon.77 = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.amdgpu_asic_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_device = type { ptr, ptr, %struct.drm_device, %struct.amdgpu_acp, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, i8, i8, i8, %struct.notifier_block, [16 x ptr], %struct.debugfs_blob_wrapper, %struct.debugfs_blob_wrapper, %struct.mutex, %struct.mutex, %struct.dev_pm_domain, i8, i8, i8, ptr, i32, i32, [16 x i32], i32, i32, ptr, %struct.spinlock, %struct.amdgpu_mmio_remap, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.amdgpu_doorbell, %struct.amdgpu_clock, %struct.amdgpu_gmc, %struct.amdgpu_gart, i32, %struct.amdgpu_vm_manager, [3 x %struct.amdgpu_vmhub], i32, %struct.amdgpu_mman, %struct.amdgpu_vram_scratch, %struct.amdgpu_wb, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.anon.102, i8, ptr, %struct.amdgpu_mode_info, %struct.work_struct, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, i64, i32, [28 x ptr], i8, [3 x %struct.amdgpu_sa_manager], [9 x [3 x %struct.amdgpu_sched]], %struct.amdgpu_irq, %struct.amd_powerplay, i8, %struct.smu_context, %struct.amdgpu_pm, i32, i32, %struct.amdgpu_nbio, %struct.amdgpu_hdp, %struct.amdgpu_smuio, %struct.amdgpu_mmhub, %struct.amdgpu_gfxhub, %struct.amdgpu_gfx, %struct.amdgpu_sdma, %struct.amdgpu_uvd, %struct.amdgpu_vce, %struct.amdgpu_vcn, %struct.amdgpu_jpeg, %struct.amdgpu_firmware, %struct.psp_context, %struct.amdgpu_gds, %struct.amdgpu_kfd_dev, %struct.amdgpu_umc, %struct.amdgpu_display_manager, i8, %struct.amdgpu_mes, %struct.amdgpu_df, %struct.amdgpu_mca, [16 x %struct.amdgpu_ip_block], i32, i32, %struct.mutex, [128 x %struct.hlist_head], %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, [31 x [10 x ptr]], %struct.delayed_work, %struct.amdgpu_virt, %struct.list_head, %struct.mutex, i8, [64 x i8], i8, i8, i8, i8, %struct.atomic_t, i32, %struct.rw_semaphore, %struct.amdgpu_doorbell_index, %struct.mutex, i32, %struct.work_struct, %struct.list_head, i32, i32, i32, i32, i64, [4 x i64], i8, i8, i8, i8, i8, i8, [16 x i8], [64 x i8], [20 x i8], %struct.atomic_t, %struct.ratelimit_state, i32, i32, i8, ptr, i32, ptr, [31 x [10 x i32]], i8 }
%struct.drm_device = type { i32, %struct.kref, ptr, %struct.anon.81, ptr, ptr, ptr, ptr, i8, ptr, i32, i8, ptr, ptr, %struct.mutex, %struct.mutex, %struct.atomic_t, %struct.mutex, %struct.list_head, %struct.list_head, %struct.mutex, %struct.list_head, i8, ptr, %struct.spinlock, %struct.spinlock, i32, %struct.list_head, %struct.spinlock, i32, %struct.drm_mode_config, %struct.mutex, %struct.idr, ptr, ptr, i32, ptr, %struct.list_head, ptr, %struct.list_head, %struct.mutex, %struct.idr, %struct.list_head, %struct.drm_open_hash, %struct.list_head, ptr, i32, i32, %struct.spinlock, i32, %struct.atomic_t, %struct.anon.92, ptr, i32, ptr, i8, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.anon.81 = type { %struct.list_head, ptr, %struct.spinlock }
%struct.drm_mode_config = type { %struct.mutex, %struct.drm_modeset_lock, ptr, %struct.mutex, %struct.idr, %struct.idr, %struct.mutex, i32, %struct.list_head, %struct.spinlock, i32, %struct.ida, %struct.list_head, %struct.llist_head, %struct.work_struct, i32, %struct.list_head, i32, %struct.list_head, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, ptr, i32, i8, i8, i8, %struct.delayed_work, %struct.mutex, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, ptr, i32, i32, ptr, ptr }
%struct.drm_modeset_lock = type { %struct.ww_mutex, %struct.list_head }
%struct.ww_mutex = type { %struct.mutex, ptr, ptr }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.llist_head = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.drm_open_hash = type { ptr, i8 }
%struct.anon.92 = type { i32, ptr }
%struct.amdgpu_acp = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.debugfs_blob_wrapper = type { ptr, i32 }
%struct.dev_pm_domain = type { %struct.dev_pm_ops, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_mmio_remap = type { i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.amdgpu_doorbell = type { i32, i32, ptr, i32 }
%struct.amdgpu_clock = type { [3 x %struct.amdgpu_pll], %struct.amdgpu_pll, %struct.amdgpu_pll, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_pll = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_gmc = type { i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i64, i32, i64, ptr, i32, %struct.amdgpu_irq_src, i32, i8, i32, i8, i32, i64, i64, i64, i64, %struct.spinlock, i8, ptr, %struct.atomic_t, [256 x %struct.amdgpu_gmc_fault], [256 x %struct.anon.101], i8, i8, ptr, %struct.amdgpu_xgmi, %struct.amdgpu_irq_src, i32, i32, i32, ptr, ptr }
%struct.amdgpu_gmc_fault = type { i56, %struct.atomic64_t }
%struct.anon.101 = type { i8, [7 x i8] }
%struct.amdgpu_xgmi = type { i64, i64, i64, i32, i32, %struct.list_head, i8, ptr, i8, i8, ptr }
%struct.amdgpu_gart = type { ptr, ptr, i32, i32, i32, i8, i64 }
%struct.amdgpu_vm_manager = type { [3 x %struct.amdgpu_vmid_mgr], i32, i8, i64, [28 x i32], i64, i32, i32, i32, i32, i64, ptr, [28 x ptr], i32, ptr, %struct.spinlock, %struct.atomic_t, i32, %struct.xarray }
%struct.amdgpu_vmid_mgr = type { %struct.mutex, i32, %struct.list_head, [16 x %struct.amdgpu_vmid], %struct.atomic_t }
%struct.amdgpu_vmid = type { %struct.list_head, %struct.amdgpu_sync, ptr, i64, i64, ptr, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.amdgpu_sync = type { [16 x %struct.hlist_head], ptr }
%struct.hlist_head = type { ptr }
%struct.amdgpu_vmhub = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.amdgpu_mman = type { %struct.ttm_device, i8, ptr, ptr, ptr, i8, %struct.mutex, %struct.drm_sched_entity, %struct.amdgpu_vram_mgr, %struct.amdgpu_gtt_mgr, %struct.amdgpu_preempt_mgr, i64, ptr, i64, ptr, i8, ptr, i64, i64, ptr, i32, ptr, i64, i64, ptr, ptr }
%struct.ttm_device = type { %struct.list_head, ptr, %struct.ttm_resource_manager, [8 x ptr], ptr, %struct.ttm_pool, %struct.spinlock, %struct.list_head, %struct.list_head, ptr, %struct.delayed_work }
%struct.ttm_resource_manager = type { i8, i8, i64, ptr, %struct.spinlock, [4 x %struct.list_head], ptr }
%struct.ttm_pool = type { ptr, i8, i8, [3 x %struct.anon.98] }
%struct.anon.98 = type { [12 x %struct.ttm_pool_type] }
%struct.ttm_pool_type = type { ptr, i32, i32, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.drm_sched_entity = type { %struct.list_head, ptr, ptr, i32, i32, %struct.spinlock, %struct.spsc_queue, %struct.atomic_t, i64, ptr, %struct.dma_fence_cb, ptr, ptr, ptr, i8, %struct.completion }
%struct.spsc_queue = type { ptr, %struct.atomic_t, %struct.atomic_t }
%struct.dma_fence_cb = type { %struct.list_head, ptr }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.amdgpu_vram_mgr = type { %struct.ttm_resource_manager, %struct.drm_mm, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.atomic64_t, %struct.atomic64_t }
%struct.drm_mm = type { ptr, %struct.list_head, %struct.drm_mm_node, %struct.rb_root_cached, %struct.rb_root_cached, %struct.rb_root, i32 }
%struct.drm_mm_node = type { i32, i64, i64, ptr, %struct.list_head, %struct.list_head, %struct.rb_node, %struct.rb_node, %struct.rb_node, i64, i64, i64, i32, i32 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.amdgpu_gtt_mgr = type { %struct.ttm_resource_manager, %struct.drm_mm, %struct.spinlock, %struct.atomic64_t }
%struct.amdgpu_preempt_mgr = type { %struct.ttm_resource_manager, %struct.atomic64_t }
%struct.amdgpu_vram_scratch = type { ptr, ptr, i64 }
%struct.amdgpu_wb = type { ptr, ptr, i64, i32, [8 x i32] }
%struct.anon.102 = type { %struct.spinlock, i64, i64, i64, i32 }
%struct.amdgpu_mode_info = type { ptr, ptr, i8, [6 x ptr], [6 x ptr], [9 x ptr], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i8, %struct.amdgpu_audio, i32, i32, i32, i32, ptr, ptr }
%struct.amdgpu_audio = type { i8, [9 x %struct.amdgpu_audio_pin], i32 }
%struct.amdgpu_audio_pin = type { i32, i32, i32, i8, i8, i32, i8, i32 }
%struct.amdgpu_irq_src = type { i32, ptr, ptr }
%struct.amdgpu_sa_manager = type { %struct.wait_queue_head, ptr, ptr, [32 x %struct.list_head], %struct.list_head, i32, i64, ptr, i32, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.amdgpu_sched = type { i32, [8 x ptr] }
%struct.amdgpu_irq = type { i8, i32, %struct.spinlock, [32 x %struct.amdgpu_irq_client], i8, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, ptr, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.amdgpu_irq_src, ptr, [256 x i32], i32 }
%struct.amdgpu_irq_client = type { ptr }
%struct.amdgpu_ih_ring = type { i32, i32, i32, i8, i8, ptr, ptr, i64, i64, ptr, i64, ptr, i8, i32, %struct.amdgpu_ih_regs, %struct.wait_queue_head, i64 }
%struct.amdgpu_ih_regs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amd_powerplay = type { ptr, ptr }
%struct.smu_context = type { ptr, %struct.amdgpu_irq_src, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, i64, %struct.smu_table_context, %struct.smu_dpm_context, %struct.smu_power_context, %struct.smu_feature, ptr, %struct.smu_baco_context, %struct.smu_temperature_range, ptr, %struct.smu_umd_pstate_table, i32, i32, i8, i32, i32, i32, i32, i32, ptr, i8, i8, i32, i32, i8, i32, [7 x i32], [7 x i32], i32, i32, i8, i8, i32, i32, i32, i8, i8, %struct.work_struct, %struct.atomic64_t, %struct.work_struct, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, %struct.smu_user_dpm_profile, %struct.stb_context }
%struct.smu_table_context = type { ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, %struct.smu_bios_boot_up_values, ptr, ptr, [15 x %struct.smu_table], %struct.smu_table, %struct.smu_table, %struct.smu_table, i8, ptr, ptr, ptr, i32, ptr }
%struct.smu_bios_boot_up_values = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i32, i32, i32, i32, i32, i32 }
%struct.smu_table = type { i64, i32, i8, i64, ptr, ptr }
%struct.smu_dpm_context = type { i32, ptr, ptr, i8, i32, i32, i32, ptr, ptr, ptr }
%struct.smu_power_context = type { ptr, i32, %struct.smu_power_gate }
%struct.smu_power_gate = type { i8, i8, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.mutex }
%struct.smu_feature = type { i32, [2 x i32], [2 x i32], [2 x i32], %struct.mutex }
%struct.smu_baco_context = type { %struct.mutex, i32, i8 }
%struct.smu_temperature_range = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.smu_umd_pstate_table = type { %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq }
%struct.pstates_clk_freq = type { i32, i32, i32, %struct.smu_freq_info, %struct.smu_freq_info }
%struct.smu_freq_info = type { i32, i32, i32 }
%struct.smu_user_dpm_profile = type { i32, i32, i32, i32, i32, i32, [23 x i32], i32 }
%struct.stb_context = type { i32, i8, %struct.spinlock }
%struct.amdgpu_pm = type { %struct.mutex, i32, i32, i32, i32, ptr, i8, i32, ptr, i8, i8, i8, i8, i8, i8, %struct.amdgpu_dpm, ptr, i32, i32, i32, %struct.amd_pp_display_configuration, i32, ptr, i8, i32, %struct.i2c_adapter, %struct.mutex, %struct.list_head, [14 x %struct.atomic_t], i32 }
%struct.amdgpu_dpm = type { ptr, i32, ptr, ptr, ptr, ptr, i32, [6 x %struct.amd_vce_state], i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, %struct.amdgpu_dpm_dynamic_state, %struct.amdgpu_dpm_fan, i32, i32, i32, i32, i32, i16, i32, i16, i8, i8, i8, i8, %struct.amdgpu_dpm_thermal, i32 }
%struct.amd_vce_state = type { i32, i32, i32, i32, i8, i8 }
%struct.amdgpu_dpm_dynamic_state = type { %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_uvd_clock_voltage_dependency_table, %struct.amdgpu_vce_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_array, %struct.amdgpu_clock_array, %struct.amdgpu_clock_and_voltage_limits, %struct.amdgpu_clock_and_voltage_limits, i32, i32, i16, i16, %struct.amdgpu_cac_leakage_table, %struct.amdgpu_phase_shedding_limits_table, ptr, ptr }
%struct.amdgpu_uvd_clock_voltage_dependency_table = type { i8, ptr }
%struct.amdgpu_vce_clock_voltage_dependency_table = type { i8, ptr }
%struct.amdgpu_clock_voltage_dependency_table = type { i32, ptr }
%struct.amdgpu_clock_array = type { i32, ptr }
%struct.amdgpu_clock_and_voltage_limits = type { i32, i32, i16, i16 }
%struct.amdgpu_cac_leakage_table = type { i32, ptr }
%struct.amdgpu_phase_shedding_limits_table = type { i32, ptr }
%struct.amdgpu_dpm_fan = type { i16, i16, i16, i16, i16, i16, i8, i32, i16, i8, i16, i16, i16, i8 }
%struct.amdgpu_dpm_thermal = type { %struct.work_struct, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.amdgpu_irq_src }
%struct.amd_pp_display_configuration = type { i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.single_display_configuration], i32, i32, i8, i32, i32, i8, i32, i32, i32, i32 }
%struct.single_display_configuration = type { i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32 }
%struct.i2c_adapter = type { ptr, i32, ptr, ptr, ptr, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i32, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, ptr, ptr, ptr, ptr }
%struct.rt_mutex = type { %struct.rt_mutex_base, %struct.lockdep_map }
%struct.rt_mutex_base = type { %struct.raw_spinlock, %struct.rb_root_cached, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.amdgpu_nbio = type { ptr, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, ptr, ptr, ptr }
%struct.amdgpu_hdp = type { ptr, ptr, ptr }
%struct.amdgpu_smuio = type { ptr }
%struct.amdgpu_mmhub = type { ptr, ptr, ptr }
%struct.amdgpu_gfxhub = type { ptr }
%struct.amdgpu_gfx = type { %struct.mutex, %struct.amdgpu_gfx_config, %struct.amdgpu_rlc, %struct.amdgpu_pfp, %struct.amdgpu_ce, %struct.amdgpu_me, %struct.amdgpu_mec, %struct.amdgpu_kiq, %struct.amdgpu_scratch, ptr, i32, ptr, i32, ptr, i32, ptr, i32, ptr, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [2 x %struct.amdgpu_ring], i32, [8 x %struct.amdgpu_ring], i32, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.sq_work, i32, i32, %struct.amdgpu_cu_info, ptr, i32, i32, i8, %struct.mutex, i32, %struct.delayed_work, %struct.mutex, [4 x i32], ptr, ptr }
%struct.amdgpu_gfx_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x i32], [16 x i32], %struct.gb_addr_config, [4 x [2 x %struct.amdgpu_rb_config]], i32, i32, i32, i32, i32, i64 }
%struct.gb_addr_config = type { i16, i8, i8, i8, i8, i8, i8 }
%struct.amdgpu_rb_config = type { i32, i32, i32, i32 }
%struct.amdgpu_rlc = type { ptr, i64, ptr, ptr, i32, ptr, i64, ptr, ptr, i32, ptr, i64, ptr, i32, i8, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, ptr, i64, ptr, ptr, i64, ptr }
%struct.amdgpu_pfp = type { ptr, i64, ptr }
%struct.amdgpu_ce = type { ptr, i64, ptr }
%struct.amdgpu_me = type { ptr, i64, ptr, i32, i32, i32, [2 x ptr], [4 x i32] }
%struct.amdgpu_mec = type { ptr, i64, ptr, i64, i32, i32, i32, [9 x ptr], [4 x i32] }
%struct.amdgpu_kiq = type { i64, ptr, %struct.spinlock, %struct.amdgpu_ring, %struct.amdgpu_irq_src, ptr }
%struct.amdgpu_ring = type { ptr, ptr, %struct.amdgpu_fence_driver, %struct.drm_gpu_scheduler, ptr, ptr, i32, i64, i64, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, ptr, i64, ptr, i64, i32, i8, i8, i32, i32, i64, [16 x i8], i32, i32, i64, ptr, i32, i64, ptr, i32, ptr, i8, i8, i32 }
%struct.amdgpu_fence_driver = type { i64, ptr, i32, %struct.atomic_t, i8, ptr, i32, %struct.timer_list, i32, %struct.spinlock, ptr }
%struct.drm_gpu_scheduler = type { ptr, i32, i32, ptr, [4 x %struct.drm_sched_rq], %struct.wait_queue_head, %struct.wait_queue_head, %struct.atomic_t, %struct.atomic64_t, ptr, %struct.delayed_work, ptr, %struct.list_head, %struct.spinlock, i32, ptr, %struct.atomic_t, i8, i8 }
%struct.drm_sched_rq = type { %struct.spinlock, ptr, %struct.list_head, ptr }
%struct.amdgpu_scratch = type { i32, i32, i32 }
%struct.sq_work = type { %struct.work_struct, i32 }
%struct.amdgpu_cu_info = type { i32, i32, i32, i32, i32, i32, i32, [4 x [4 x i32]], [4 x [4 x i32]] }
%struct.amdgpu_sdma = type { [8 x %struct.amdgpu_sdma_instance], %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, i32, i32, i8, ptr, ptr }
%struct.amdgpu_sdma_instance = type { ptr, i32, i32, %struct.amdgpu_ring, %struct.amdgpu_ring, i8 }
%struct.amdgpu_uvd = type { ptr, i32, i32, i32, i8, i8, i8, [2 x %struct.amdgpu_uvd_inst], [40 x ptr], [40 x %struct.atomic_t], %struct.drm_sched_entity, %struct.delayed_work, i32, i32, i32, ptr }
%struct.amdgpu_uvd_inst = type { ptr, ptr, i64, ptr, %struct.amdgpu_ring, [2 x %struct.amdgpu_ring], %struct.amdgpu_irq_src, i32 }
%struct.amdgpu_vce = type { ptr, i64, ptr, ptr, i32, i32, [16 x %struct.atomic_t], [16 x ptr], [16 x i32], %struct.delayed_work, %struct.mutex, ptr, [3 x %struct.amdgpu_ring], %struct.amdgpu_irq_src, i32, %struct.drm_sched_entity, i32, i32 }
%struct.amdgpu_vcn = type { i32, %struct.delayed_work, ptr, i32, i32, i8, i8, [2 x %struct.amdgpu_vcn_inst], [2 x i8], %struct.amdgpu_vcn_reg, %struct.mutex, %struct.mutex, %struct.atomic_t, i32, ptr }
%struct.amdgpu_vcn_inst = type { ptr, ptr, i64, ptr, %struct.amdgpu_ring, [3 x %struct.amdgpu_ring], %struct.atomic_t, %struct.amdgpu_irq_src, %struct.amdgpu_vcn_reg, ptr, %struct.dpg_pause_state, ptr, i64, ptr, %struct.atomic_t, ptr, i64 }
%struct.dpg_pause_state = type { i32, i32 }
%struct.amdgpu_vcn_reg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_jpeg = type { i8, [2 x %struct.amdgpu_jpeg_inst], %struct.amdgpu_jpeg_reg, i32, %struct.delayed_work, i32, %struct.mutex, %struct.atomic_t }
%struct.amdgpu_jpeg_inst = type { %struct.amdgpu_ring, %struct.amdgpu_irq_src, %struct.amdgpu_jpeg_reg }
%struct.amdgpu_jpeg_reg = type { i32 }
%struct.amdgpu_firmware = type { [35 x %struct.amdgpu_firmware_info], i32, ptr, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i64 }
%struct.amdgpu_firmware_info = type { i32, ptr, i64, ptr, i32, i32, i32 }
%struct.psp_context = type { ptr, %struct.psp_ring, ptr, ptr, ptr, i64, ptr, ptr, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, ptr, i64, ptr, ptr, ptr, i64, ptr, ptr, i64, ptr, %struct.atomic_t, i8, i8, ptr, i32, %struct.ta_context, %struct.psp_xgmi_context, %struct.psp_ras_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.mutex, %struct.psp_memory_training_context, i32 }
%struct.psp_ring = type { i32, ptr, i64, ptr, i32, i32 }
%struct.psp_bin_desc = type { i32, i32, i32, ptr }
%struct.ta_context = type { i8, i32, %struct.ta_mem_context, %struct.psp_bin_desc, i32 }
%struct.ta_mem_context = type { ptr, i64, ptr, i32 }
%struct.psp_xgmi_context = type { %struct.ta_context, %struct.psp_xgmi_topology_info, i8 }
%struct.psp_xgmi_topology_info = type { i32, [64 x %struct.psp_xgmi_node_info] }
%struct.psp_xgmi_node_info = type { i64, i8, i8, i32, i8 }
%struct.psp_ras_context = type { %struct.ta_context, ptr }
%struct.ta_cp_context = type { %struct.ta_context, %struct.mutex }
%struct.psp_memory_training_context = type { i64, ptr, i64, i64, ptr, i32, i32, i8 }
%struct.amdgpu_gds = type { i32, i32, i32, i32 }
%struct.amdgpu_kfd_dev = type { ptr, i64, i8 }
%struct.amdgpu_umc = type { i32, i32, i32, i32, ptr, ptr, ptr, ptr }
%struct.amdgpu_display_manager = type { ptr, ptr, ptr, [5 x ptr], [5 x i8], ptr, ptr, ptr, i64, ptr, i32, ptr, ptr, ptr, i16, %struct.drm_private_obj, %struct.mutex, %struct.mutex, ptr, i8, [99 x %struct.list_head], [99 x %struct.list_head], [7 x %struct.common_irq_params], [6 x %struct.common_irq_params], [6 x %struct.common_irq_params], [6 x %struct.common_irq_params], [1 x %struct.common_irq_params], [1 x %struct.common_irq_params], %struct.spinlock, [2 x ptr], [2 x ptr], i8, [2 x %struct.amdgpu_dm_backlight_caps], ptr, ptr, ptr, ptr, %struct.dm_compressor_info, ptr, i32, ptr, ptr, [6 x %struct.amdgpu_encoder], i8, i8, i8, %struct.list_head, %struct.completion, ptr, [2 x i32] }
%struct.drm_private_obj = type { %struct.list_head, %struct.drm_modeset_lock, ptr, ptr }
%struct.common_irq_params = type { ptr, i32, %struct.atomic64_t }
%struct.amdgpu_dm_backlight_caps = type { ptr, i32, i32, i32, i32, i8, i8 }
%struct.dm_compressor_info = type { ptr, ptr, i64 }
%struct.amdgpu_encoder = type { %struct.drm_encoder, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.drm_display_mode, ptr, i32, i8, i16 }
%struct.drm_encoder = type { ptr, %struct.list_head, %struct.drm_mode_object, ptr, i32, i32, i32, i32, ptr, %struct.list_head, ptr, ptr }
%struct.drm_mode_object = type { i32, i32, ptr, %struct.kref, ptr }
%struct.drm_display_mode = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, %struct.list_head, [32 x i8], i32, i32 }
%struct.amdgpu_mes = type { ptr, i32, i32, i32, i64, i64, %struct.amdgpu_ring, ptr, ptr, i64, ptr, i32, i64, ptr, i64, ptr, i32, i64, ptr, i64, ptr, i32, i32, [8 x i32], [2 x i32], [2 x i32], [5 x i32], i32, i64, ptr, i32, i64, ptr, ptr }
%struct.amdgpu_df = type { %struct.amdgpu_df_hash_status, ptr }
%struct.amdgpu_df_hash_status = type { i8, i8, i8 }
%struct.amdgpu_mca = type { ptr, %struct.amdgpu_mca_ras, %struct.amdgpu_mca_ras, %struct.amdgpu_mca_ras }
%struct.amdgpu_mca_ras = type { ptr, ptr }
%struct.amdgpu_ip_block = type { %struct.amdgpu_ip_block_status, ptr }
%struct.amdgpu_ip_block_status = type { i8, i8, i8, i8, i8 }
%struct.atomic64_t = type { i64 }
%struct.amdgpu_virt = type { i32, ptr, ptr, i8, i32, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.work_struct, %struct.amdgpu_mm_table, ptr, %struct.amdgpu_vf_error_buffer, %struct.amdgpu_virt_fw_reserve, i32, i32, i32, i8, ptr, i8, i32, %struct.delayed_work, i32, i8, i32, i32, i32, i32 }
%struct.amdgpu_mm_table = type { ptr, ptr, i64 }
%struct.amdgpu_vf_error_buffer = type { %struct.mutex, i32, i32, [16 x i16], [16 x i16], [16 x i64] }
%struct.amdgpu_virt_fw_reserve = type { ptr, ptr, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.amdgpu_doorbell_index = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, %union.anon.115, i32, i32, i32, i32 }
%union.anon.115 = type { %struct.anon.117 }
%struct.anon.117 = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.91, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.91 = type { ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.amdgpu_rlc_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_bus = type { %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, [4 x ptr], %struct.list_head, %struct.resource, ptr, ptr, ptr, i8, i8, i8, i8, i32, [48 x i8], i16, i16, ptr, %struct.device, ptr, ptr, i8 }
%struct.firmware = type { i32, ptr, ptr }
%struct.amdgpu_ip_block_version = type { i32, i32, i32, i32, ptr }
%struct.amd_ip_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.gpu_info_firmware_header_v1_0 = type { %struct.common_firmware_header, i16, i16 }
%struct.common_firmware_header = type { i32, i32, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.gpu_info_firmware_v1_0 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpu_info_firmware_v1_1 = type { %struct.gpu_info_firmware_v1_0, i32, i32 }
%struct.gpu_info_firmware_v1_2 = type { %struct.gpu_info_firmware_v1_1, %struct.gpu_info_soc_bounding_box_v1_0 }
%struct.gpu_info_soc_bounding_box_v1_0 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x %struct.gpu_info_voltage_scaling_v1_0] }
%struct.gpu_info_voltage_scaling_v1_0 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_gfxhub_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amd_sriov_msg_pf2vf_info = type <{ %struct.amd_sriov_msg_pf2vf_info_header, i32, %union.amd_sriov_msg_feature_flags, i32, i32, i32, i32, i64, i32, i64, i32, i64, i32, i32, i32, i32, i32, i64, i32, %union.amd_sriov_reg_access_flags, [4 x %struct.anon.120], %struct.amd_sriov_msg_uuid_info, i32, [208 x i32] }>
%struct.amd_sriov_msg_pf2vf_info_header = type { i32, i32, [2 x i32] }
%union.amd_sriov_msg_feature_flags = type { %struct.anon.118 }
%struct.anon.118 = type { i32 }
%union.amd_sriov_reg_access_flags = type { %struct.anon.119 }
%struct.anon.119 = type { i32 }
%struct.anon.120 = type { i32, i32, i32, i32 }
%struct.amd_sriov_msg_uuid_info = type { %union.anon.121, %struct.anon.123, %struct.anon.124, i32 }
%union.anon.121 = type { %struct.anon.122 }
%struct.anon.122 = type { i32 }
%struct.anon.123 = type { i32 }
%struct.anon.124 = type { %struct.anon.125, %union.anon.126, i16 }
%struct.anon.125 = type { i8 }
%union.anon.126 = type { i8 }
%struct.amdgpu_hive_info = type { %struct.kobject, i64, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.mutex, %struct.atomic_t, i32, ptr, %struct.task_barrier, i32 }
%struct.task_barrier = type { i32, %struct.atomic_t, %struct.semaphore, %struct.semaphore }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.amdgpu_nbio_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_mmhub_ras_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.drm_driver = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.drm_mode_config_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.84, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.85, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.86, ptr, %struct.address_space, %struct.list_head, %union.anon.87, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.84 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%union.anon.85 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%union.anon.86 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%union.anon.87 = type { ptr }
%struct.amdgpu_reset_context = type { i32, ptr, ptr, ptr, i32 }
%struct.amdgpu_job = type { %struct.drm_sched_job, ptr, %struct.amdgpu_sync, %struct.amdgpu_sync, ptr, %struct.dma_fence, ptr, i32, i32, i32, i8, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32 }
%struct.drm_sched_job = type { %struct.spsc_node, %struct.list_head, ptr, ptr, %union.anon.97, i64, %struct.atomic_t, i32, ptr, %struct.dma_fence_cb, %struct.xarray, i32 }
%struct.spsc_node = type { ptr }
%union.anon.97 = type { %struct.irq_work }
%struct.irq_work = type { %struct.__call_single_node, ptr, %struct.rcuwait }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.20 }
%struct.llist_node = type { ptr }
%union.anon.20 = type { i32 }
%struct.rcuwait = type { ptr }
%struct.dma_fence = type { ptr, ptr, %union.anon.82, i64, i64, i32, %struct.kref, i32 }
%union.anon.82 = type { i64 }
%struct.ttm_resource = type { i32, i32, i32, i32, %struct.ttm_bus_placement }
%struct.ttm_bus_placement = type { ptr, i32, i8, i32 }
%struct.amdgpu_bo = type { i32, i32, [3 x %struct.ttm_place], %struct.ttm_placement, %struct.ttm_buffer_object, %struct.ttm_bo_kmap_obj, i64, ptr, ptr, %struct.mmu_interval_notifier, ptr }
%struct.ttm_place = type { i32, i32, i32, i32 }
%struct.ttm_placement = type { i32, ptr, i32, ptr }
%struct.ttm_buffer_object = type { %struct.drm_gem_object, ptr, i32, i32, ptr, %struct.kref, ptr, ptr, i8, %struct.list_head, %struct.list_head, ptr, i32, i32, ptr }
%struct.drm_gem_object = type { %struct.kref, i32, ptr, ptr, %struct.drm_vma_offset_node, i32, i32, ptr, ptr, ptr, %struct.dma_resv, ptr }
%struct.drm_vma_offset_node = type { %struct.rwlock_t, %struct.drm_mm_node, %struct.rb_root, ptr }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.dma_resv = type { %struct.ww_mutex, %struct.seqcount_ww_mutex, ptr, ptr }
%struct.seqcount_ww_mutex = type { %struct.seqcount, ptr }
%struct.ttm_bo_kmap_obj = type { ptr, ptr, i32, ptr }
%struct.mmu_interval_notifier = type { %struct.interval_tree_node, ptr, ptr, %struct.hlist_node, i32 }
%struct.interval_tree_node = type { %struct.rb_node, i32, i32, i32 }
%struct.amdgpu_ras = type { i32, %struct.list_head, %struct.device_attribute, %struct.bin_attribute, ptr, ptr, %struct.work_struct, %struct.atomic_t, ptr, ptr, %struct.mutex, i32, i8, %struct.amdgpu_ras_eeprom_control, i8, i32, i8, i8, %struct.delayed_work, %struct.atomic_t, %struct.atomic_t, %struct.umc_ecc_info }
%struct.bin_attribute = type { %struct.attribute, i32, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_ras_eeprom_control = type { %struct.amdgpu_ras_eeprom_table_header, i32, i32, i32, i32, i32, i32, %struct.mutex }
%struct.amdgpu_ras_eeprom_table_header = type { i32, i32, i32, i32, i32 }
%struct.umc_ecc_info = type { [32 x %struct.ecc_info_per_ch] }
%struct.ecc_info_per_ch = type { i16, i16, i64, i64 }
%struct.drm_sched_fence = type { %struct.dma_fence, %struct.dma_fence, ptr, ptr, %struct.spinlock, ptr }
%struct.dma_fence_ops = type { i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.drm_sched_backend_ops = type { ptr, ptr, ptr, ptr }
%struct.amdgpu_ring_funcs = type { i32, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_hdp_funcs = type { ptr, ptr, ptr, ptr, ptr }

@__UNIQUE_ID_firmware391 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/vega10_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware392 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/vega12_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware393 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/raven_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware394 = internal constant [44 x i8] c"amdgpu.firmware=amdgpu/picasso_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware395 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/raven2_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware396 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/arcturus_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware397 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/renoir_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware398 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/navi10_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware399 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/navi14_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware400 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/navi12_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware401 = internal constant [44 x i8] c"amdgpu.firmware=amdgpu/vangogh_gpu_info.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware402 = internal constant [48 x i8] c"amdgpu.firmware=amdgpu/yellow_carp_gpu_info.bin\00", section ".modinfo", align 1
@.str = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"TAHITI\00", [25 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"PITCAIRN\00", [23 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"VERDE\00", [26 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"OLAND\00", [26 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"HAINAN\00", [25 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"BONAIRE\00", [24 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"KAVERI\00", [25 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"KABINI\00", [25 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"HAWAII\00", [25 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"MULLINS\00", [24 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TOPAZ\00", [26 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TONGA\00", [26 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"FIJI\00", [27 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CARRIZO\00", [24 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"STONEY\00", [25 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"POLARIS10\00", [22 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"POLARIS11\00", [22 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"POLARIS12\00", [22 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"VEGAM\00", [26 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"VEGA10\00", [25 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"VEGA12\00", [25 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"VEGA20\00", [25 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RAVEN\00", [26 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ARCTURUS\00", [23 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"RENOIR\00", [25 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ALDEBARAN\00", [22 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"NAVI10\00", [25 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"CYAN_SKILLFISH\00", [17 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"NAVI14\00", [25 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"NAVI12\00", [25 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"SIENNA_CICHLID\00", [17 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"NAVY_FLOUNDER\00", [18 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"VANGOGH\00", [24 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"DIMGREY_CAVEFISH\00", [47 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"BEIGE_GOBY\00", [21 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"YELLOW_CARP\00", [20 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"IP DISCOVERY\00", [19 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"LAST\00", [27 x i8] zeroinitializer }, align 32
@amdgpu_asic_name = dso_local global { [38 x ptr], [40 x i8] } { [38 x ptr] [ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37], [40 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.38 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\00", [53 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"reading beyond doorbell aperture: 0x%08x!\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"writing beyond doorbell aperture: 0x%08x!\0A\00", [53 x i8] zeroinitializer }, align 32
@amdgpu_device_resize_fb_bar._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.42, ptr @.str.38, i32 1236, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\016[drm] Not enough PCI address space for a large BAR.\00", [42 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"amdgpu_device_resize_fb_bar\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_device_resize_fb_bar._entry_ptr = internal global ptr @amdgpu_device_resize_fb_bar._entry, section ".printk_index", align 4
@.str.44 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"amdgpu/fiji_smc.bin\00", [44 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"set_clockgating_state of IP block <%s> failed %d\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"set_powergating_state of IP block <%s> failed %d\0A\00", [46 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_block_add._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.47, ptr @.str.48, ptr @.str.38, i32 1815, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016[drm] add ip block number %d <%s>\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"amdgpu_device_ip_block_add\00", [37 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_block_add._entry_ptr = internal global ptr @amdgpu_device_ip_block_add._entry, section ".printk_index", align 4
@amdgpu_emu_mode = external dso_local local_unnamed_addr global i32, align 4
@.str.49 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"set_clockgating_state(gate) of IP block <%s> failed %d\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"set_powergating_state(gate) of IP block <%s> failed %d\0A\00", [40 x i8] zeroinitializer }, align 32
@amdgpu_dc = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_force_asic_type = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.52, ptr @.str.38, i32 3482, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"\016[drm] initializing kernel modesetting (%s 0x%04X:0x%04X 0x%04X:0x%04X 0x%02X).\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"amdgpu_device_init\00", [45 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr = internal global ptr @amdgpu_device_init._entry, section ".printk_index", align 4
@amdgpu_device_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.53 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&adev->firmware.mutex\00", [42 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.54 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.55 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&adev->pm.mutex\00", [16 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.56 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.57 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"&adev->gfx.gpu_clock_mutex\00", [37 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.58 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.59 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&adev->srbm_mutex\00", [46 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.60 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.61 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"&adev->gfx.pipe_reserve_mutex\00", [34 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.62 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.63 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"&adev->gfx.gfx_off_mutex\00", [39 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.64 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.65 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&adev->grbm_idx_mutex\00", [42 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.66 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.67 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"&adev->mn_lock\00", [17 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.68 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.69 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"&adev->virt.vf_errors.lock\00", [37 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.70 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.71 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&adev->reset_sem\00", [47 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.72 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.73 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&adev->psp.mutex\00", [47 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.74 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.75 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&adev->notifier_lock\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.76 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.77 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&adev->mmio_idx_lock\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.78 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.79 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&adev->smc_idx_lock\00", [44 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.80 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.81 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&adev->pcie_idx_lock\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.82 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.83 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&adev->uvd_ctx_idx_lock\00", [40 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.84 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.85 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&adev->didt_idx_lock\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.86 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.87 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&adev->gc_cac_idx_lock\00", [41 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.88 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.89 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&adev->se_cac_idx_lock\00", [41 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.90 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.91 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"&adev->audio_endpt_idx_lock\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.92 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.93 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&adev->mm_stats.lock\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.94 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.95 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&adev->shadow_list_lock\00", [40 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.96 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.97 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"(work_completion)(&(&adev->delayed_init_work)->work)\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.98 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.99 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"&(&adev->delayed_init_work)->timer\00", [61 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.100 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.101 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"(work_completion)(&(&adev->gfx.gfx_off_delay_work)->work)\00", [38 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.102 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.103 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"&(&adev->gfx.gfx_off_delay_work)->timer\00", [56 x i8] zeroinitializer }, align 32
@amdgpu_device_init.__key.104 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.105 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"(work_completion)(&adev->xgmi_reset_work)\00", [54 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry.106 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.107, ptr @.str.52, ptr @.str.38, i32 3560, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\016[drm] register mmio base: 0x%08X\0A\00", [60 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.108 = internal global ptr @amdgpu_device_init._entry.106, section ".printk_index", align 4
@amdgpu_device_init._entry.109 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.110, ptr @.str.52, ptr @.str.38, i32 3561, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\016[drm] register mmio size: %u\0A\00", [32 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.111 = internal global ptr @amdgpu_device_init._entry.109, section ".printk_index", align 4
@amdgpu_mcbp = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_init._entry.112 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.113, ptr @.str.52, ptr @.str.38, i32 3566, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\016[drm] MCBP is enabled\0A\00", [39 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.114 = internal global ptr @amdgpu_device_init._entry.112, section ".printk_index", align 4
@amdgpu_mes = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_init._entry.115 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.116, ptr @.str.52, ptr @.str.38, i32 3576, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"amdgpu: invalid lockup_timeout parameter syntax\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.119 = internal global ptr @amdgpu_device_init._entry.115, section ".printk_index", align 4
@amdgpu_device_init._entry.120 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.121, ptr @.str.52, ptr @.str.38, i32 3603, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"amdgpu: PCIE atomic ops is not supported\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.123 = internal global ptr @amdgpu_device_init._entry.120, section ".printk_index", align 4
@amdgpu_device_init._entry.124 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.125, ptr @.str.52, ptr @.str.38, i32 3624, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"amdgpu: Pending hive reset.\0A\00", [35 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.126 = internal global ptr @amdgpu_device_init._entry.124, section ".printk_index", align 4
@.str.127 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"IP %s disabled for hw_init.\0A\00", [35 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry.128 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.52, ptr @.str.38, i32 3642, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"amdgpu: asic reset on init failed\0A\00", [61 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.130 = internal global ptr @amdgpu_device_init._entry.128, section ".printk_index", align 4
@amdgpu_device_init._entry.131 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.52, ptr @.str.38, i32 3653, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"amdgpu: no vBIOS found\0A\00", [40 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.133 = internal global ptr @amdgpu_device_init._entry.131, section ".printk_index", align 4
@amdgpu_device_init._entry.134 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.52, ptr @.str.38, i32 3657, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\016[drm] GPU posting now...\0A\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.136 = internal global ptr @amdgpu_device_init._entry.134, section ".printk_index", align 4
@amdgpu_device_init._entry.137 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.138, ptr @.str.52, ptr @.str.38, i32 3660, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"amdgpu: gpu post error!\0A\00", [39 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.139 = internal global ptr @amdgpu_device_init._entry.137, section ".printk_index", align 4
@amdgpu_device_init._entry.140 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.52, ptr @.str.38, i32 3669, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"amdgpu: amdgpu_atomfirmware_get_clock_info failed\0A\00", [45 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.142 = internal global ptr @amdgpu_device_init._entry.140, section ".printk_index", align 4
@amdgpu_device_init._entry.143 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.144, ptr @.str.52, ptr @.str.38, i32 3677, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"amdgpu: amdgpu_atombios_get_clock_info failed\0A\00", [49 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.145 = internal global ptr @amdgpu_device_init._entry.143, section ".printk_index", align 4
@amdgpu_device_init._entry.146 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.52, ptr @.str.38, i32 3690, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"amdgpu: amdgpu_fence_driver_sw_init failed\0A\00", [52 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.148 = internal global ptr @amdgpu_device_init._entry.146, section ".printk_index", align 4
@amdgpu_device_init._entry.149 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.52, ptr @.str.38, i32 3705, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"amdgpu: VF exclusive mode timeout\0A\00", [61 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.151 = internal global ptr @amdgpu_device_init._entry.149, section ".printk_index", align 4
@amdgpu_device_init._entry.152 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.52, ptr @.str.38, i32 3712, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"amdgpu: amdgpu_device_ip_init failed\0A\00", [58 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.154 = internal global ptr @amdgpu_device_init._entry.152, section ".printk_index", align 4
@amdgpu_device_init._entry.155 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.156, ptr @.str.52, ptr @.str.38, i32 3724, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"amdgpu: SE %d, SH per SE %d, CU per SH %d, active_cu_number %d\0A\00", [32 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.157 = internal global ptr @amdgpu_device_init._entry.155, section ".printk_index", align 4
@amdgpu_moverate = external dso_local local_unnamed_addr global i32, align 4
@.str.158 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"registering pm debugfs failed (%d).\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Creating firmware sysfs failed (%d).\0A\00", [58 x i8] zeroinitializer }, align 32
@amdgpu_testing = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_init._entry.160 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.161, ptr @.str.52, ptr @.str.38, i32 3756, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016[drm] amdgpu: acceleration disabled, skipping move tests\0A\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.162 = internal global ptr @amdgpu_device_init._entry.160, section ".printk_index", align 4
@amdgpu_benchmarking = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_init._entry.163 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.164, ptr @.str.52, ptr @.str.38, i32 3762, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016[drm] amdgpu: acceleration disabled, skipping benchmarks\0A\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.165 = internal global ptr @amdgpu_device_init._entry.163, section ".printk_index", align 4
@amdgpu_device_init._entry.166 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.167, ptr @.str.52, ptr @.str.38, i32 3778, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"amdgpu: amdgpu_device_ip_late_init failed\0A\00", [53 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.168 = internal global ptr @amdgpu_device_init._entry.166, section ".printk_index", align 4
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@amdgpu_dev_attributes = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @dev_attr_product_name, ptr @dev_attr_product_number, ptr @dev_attr_serial_number, ptr @dev_attr_pcie_replay_count, ptr null], [44 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry.169 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.170, ptr @.str.52, ptr @.str.38, i32 3793, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"amdgpu: Could not create amdgpu device attr\0A\00", [51 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.171 = internal global ptr @amdgpu_device_init._entry.169, section ".printk_index", align 4
@amdgpu_device_init._entry.172 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.173, ptr @.str.52, ptr @.str.38, i32 3798, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"amdgpu: amdgpu_pmu_init failed\0A\00", [32 x i8] zeroinitializer }, align 32
@amdgpu_device_init._entry_ptr.174 = internal global ptr @amdgpu_device_init._entry.172, section ".printk_index", align 4
@mgpu_info = external dso_local global %struct.amdgpu_mgpu_info, align 4
@amdgpu_device_fini_hw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.175, ptr @.str.176, ptr @.str.38, i32 3866, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"amdgpu: amdgpu: finishing device.\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"amdgpu_device_fini_hw\00", [42 x i8] zeroinitializer }, align 32
@amdgpu_device_fini_hw._entry_ptr = internal global ptr @amdgpu_device_fini_hw._entry, section ".printk_index", align 4
@amdgpu_device_suspend._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.178, ptr @.str.38, i32 4003, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\014[drm] smart shift update failed\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"amdgpu_device_suspend\00", [42 x i8] zeroinitializer }, align 32
@amdgpu_device_suspend._entry_ptr = internal global ptr @amdgpu_device_suspend._entry, section ".printk_index", align 4
@amdgpu_device_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.179, ptr @.str.180, ptr @.str.38, i32 4053, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"amdgpu: amdgpu asic init failed\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"amdgpu_device_resume\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_device_resume._entry_ptr = internal global ptr @amdgpu_device_resume._entry, section ".printk_index", align 4
@amdgpu_device_resume._entry.181 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.182, ptr @.str.180, ptr @.str.38, i32 4058, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"amdgpu: amdgpu_device_ip_resume failed (%d).\0A\00", [50 x i8] zeroinitializer }, align 32
@amdgpu_device_resume._entry_ptr.183 = internal global ptr @amdgpu_device_resume._entry.181, section ".printk_index", align 4
@amdgpu_device_resume._entry.184 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.180, ptr @.str.38, i32 4108, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@amdgpu_device_resume._entry_ptr.185 = internal global ptr @amdgpu_device_resume._entry.184, section ".printk_index", align 4
@amdgpu_device_should_recover_gpu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.186, ptr @.str.187, ptr @.str.38, i32 4441, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"amdgpu: Timeout, but no hardware hang detected.\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"amdgpu_device_should_recover_gpu\00", [63 x i8] zeroinitializer }, align 32
@amdgpu_device_should_recover_gpu._entry_ptr = internal global ptr @amdgpu_device_should_recover_gpu._entry, section ".printk_index", align 4
@amdgpu_gpu_recovery = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_should_recover_gpu._entry.188 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.189, ptr @.str.187, ptr @.str.38, i32 4477, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"amdgpu: GPU recovery disabled.\0A\00", [32 x i8] zeroinitializer }, align 32
@amdgpu_device_should_recover_gpu._entry_ptr.190 = internal global ptr @amdgpu_device_should_recover_gpu._entry.188, section ".printk_index", align 4
@amdgpu_device_mode1_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.191, ptr @.str.192, ptr @.str.38, i32 4488, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"amdgpu: GPU mode1 reset\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"amdgpu_device_mode1_reset\00", [38 x i8] zeroinitializer }, align 32
@amdgpu_device_mode1_reset._entry_ptr = internal global ptr @amdgpu_device_mode1_reset._entry, section ".printk_index", align 4
@amdgpu_device_mode1_reset._entry.193 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.194, ptr @.str.192, ptr @.str.38, i32 4496, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"amdgpu: GPU smu mode1 reset\0A\00", [35 x i8] zeroinitializer }, align 32
@amdgpu_device_mode1_reset._entry_ptr.195 = internal global ptr @amdgpu_device_mode1_reset._entry.193, section ".printk_index", align 4
@amdgpu_device_mode1_reset._entry.196 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.197, ptr @.str.192, ptr @.str.38, i32 4499, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"amdgpu: GPU psp mode1 reset\0A\00", [35 x i8] zeroinitializer }, align 32
@amdgpu_device_mode1_reset._entry_ptr.198 = internal global ptr @amdgpu_device_mode1_reset._entry.196, section ".printk_index", align 4
@amdgpu_device_mode1_reset._entry.199 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.200, ptr @.str.192, ptr @.str.38, i32 4504, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"amdgpu: GPU mode1 reset failed\0A\00", [32 x i8] zeroinitializer }, align 32
@amdgpu_device_mode1_reset._entry_ptr.201 = internal global ptr @amdgpu_device_mode1_reset._entry.199, section ".printk_index", align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@amdgpu_device_pre_asic_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.202, ptr @.str.203, ptr @.str.38, i32 4573, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"amdgpu: soft reset failed, will fallback to full reset!\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"amdgpu_device_pre_asic_reset\00", [35 x i8] zeroinitializer }, align 32
@amdgpu_device_pre_asic_reset._entry_ptr = internal global ptr @amdgpu_device_pre_asic_reset._entry, section ".printk_index", align 4
@system_unbound_wq = external dso_local local_unnamed_addr global ptr, align 4
@amdgpu_do_asic_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.204, ptr @.str.205, ptr @.str.38, i32 4628, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"amdgpu: ASIC reset failed with error, %d for drm dev, %s\00", [39 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"amdgpu_do_asic_reset\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_do_asic_reset._entry_ptr = internal global ptr @amdgpu_do_asic_reset._entry, section ".printk_index", align 4
@amdgpu_do_asic_reset._entry.206 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.207, ptr @.str.205, ptr @.str.38, i32 4661, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"amdgpu: asic atom init failed!\00", [33 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@amdgpu_do_asic_reset._entry_ptr.209 = internal global ptr @amdgpu_do_asic_reset._entry.206, section ".printk_index", align 4
@amdgpu_do_asic_reset._entry.210 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.211, ptr @.str.205, ptr @.str.38, i32 4663, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"amdgpu: GPU reset succeeded, trying to resume\0A\00", [49 x i8] zeroinitializer }, align 32
@amdgpu_do_asic_reset._entry_ptr.212 = internal global ptr @amdgpu_do_asic_reset._entry.210, section ".printk_index", align 4
@amdgpu_do_asic_reset._entry.213 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.214, ptr @.str.205, ptr @.str.38, i32 4674, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\016[drm] VRAM is lost due to GPU reset!\0A\00", [56 x i8] zeroinitializer }, align 32
@amdgpu_do_asic_reset._entry_ptr.215 = internal global ptr @amdgpu_do_asic_reset._entry.213, section ".printk_index", align 4
@amdgpu_do_asic_reset._entry.216 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.217, ptr @.str.205, ptr @.str.38, i32 4736, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"amdgpu: ib ring test failed (%d).\0A\00", [61 x i8] zeroinitializer }, align 32
@amdgpu_do_asic_reset._entry_ptr.218 = internal global ptr @amdgpu_do_asic_reset._entry.216, section ".printk_index", align 4
@amdgpu_device_gpu_recover._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.219, ptr @.str.220, ptr @.str.38, i32 4998, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\014[drm] Emergency reboot.\00", [38 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"amdgpu_device_gpu_recover\00", [38 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr = internal global ptr @amdgpu_device_gpu_recover._entry, section ".printk_index", align 4
@amdgpu_device_gpu_recover._entry.221 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.222, ptr @.str.220, ptr @.str.38, i32 5005, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"amdgpu: GPU %s begin!\0A\00", [41 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr.223 = internal global ptr @amdgpu_device_gpu_recover._entry.221, section ".printk_index", align 4
@.str.224 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"jobs stop\00", [22 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"reset\00", [26 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry.226 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.227, ptr @.str.220, ptr @.str.38, i32 5019, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"\016[drm] Bailing on TDR for s_job:%llx, hive: %llx as another already in progress\00", [47 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr.228 = internal global ptr @amdgpu_device_gpu_recover._entry.226, section ".printk_index", align 4
@amdgpu_device_gpu_recover._entry.229 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.230, ptr @.str.220, ptr @.str.38, i32 5042, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"amdgpu: Bailing on TDR for s_job:%llx, as another already in progress\00", [58 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr.231 = internal global ptr @amdgpu_device_gpu_recover._entry.229, section ".printk_index", align 4
@amdgpu_device_gpu_recover._entry.232 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.220, ptr @.str.38, i32 5128, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"amdgpu: Guilty job already signaled, skipping HW reset\00", [41 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr.234 = internal global ptr @amdgpu_device_gpu_recover._entry.232, section ".printk_index", align 4
@amdgpu_device_gpu_recover._entry.235 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.236, ptr @.str.220, ptr @.str.38, i32 5138, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"amdgpu: GPU pre asic reset failed with err, %d for drm dev, %s \00", [32 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr.237 = internal global ptr @amdgpu_device_gpu_recover._entry.235, section ".printk_index", align 4
@amdgpu_device_gpu_recover._entry.238 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.220, ptr @.str.38, i32 5194, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"amdgpu: GPU reset(%d) failed\0A\00", [34 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr.240 = internal global ptr @amdgpu_device_gpu_recover._entry.238, section ".printk_index", align 4
@amdgpu_device_gpu_recover._entry.241 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.220, ptr @.str.38, i32 5197, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"amdgpu: GPU reset(%d) succeeded!\0A\00", [62 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr.243 = internal global ptr @amdgpu_device_gpu_recover._entry.241, section ".printk_index", align 4
@amdgpu_device_gpu_recover._entry.244 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.220, ptr @.str.38, i32 5199, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr.245 = internal global ptr @amdgpu_device_gpu_recover._entry.244, section ".printk_index", align 4
@amdgpu_device_gpu_recover._entry.246 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.247, ptr @.str.220, ptr @.str.38, i32 5228, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"amdgpu: GPU reset end with ret = %d\0A\00", [59 x i8] zeroinitializer }, align 32
@amdgpu_device_gpu_recover._entry_ptr.248 = internal global ptr @amdgpu_device_gpu_recover._entry.246, section ".printk_index", align 4
@amdgpu_pci_error_detected._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.249, ptr @.str.250, ptr @.str.38, i32 5448, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016[drm] PCI error: detected callback, state(%d)!!\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"amdgpu_pci_error_detected\00", [38 x i8] zeroinitializer }, align 32
@amdgpu_pci_error_detected._entry_ptr = internal global ptr @amdgpu_pci_error_detected._entry, section ".printk_index", align 4
@amdgpu_pci_error_detected._entry.251 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.252, ptr @.str.250, ptr @.str.38, i32 5451, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\014[drm] No support for XGMI hive yet...\00", [56 x i8] zeroinitializer }, align 32
@amdgpu_pci_error_detected._entry_ptr.253 = internal global ptr @amdgpu_pci_error_detected._entry.251, section ".printk_index", align 4
@amdgpu_pci_mmio_enabled._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.254, ptr @.str.255, ptr @.str.38, i32 5501, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\016[drm] PCI error: mmio enabled callback!!\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"amdgpu_pci_mmio_enabled\00", [40 x i8] zeroinitializer }, align 32
@amdgpu_pci_mmio_enabled._entry_ptr = internal global ptr @amdgpu_pci_mmio_enabled._entry, section ".printk_index", align 4
@amdgpu_pci_slot_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.256, ptr @.str.257, ptr @.str.38, i32 5530, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\016[drm] PCI error: slot reset callback!!\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"amdgpu_pci_slot_reset\00", [42 x i8] zeroinitializer }, align 32
@amdgpu_pci_slot_reset._entry_ptr = internal global ptr @amdgpu_pci_slot_reset._entry, section ".printk_index", align 4
@amdgpu_pci_slot_reset._entry.258 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.259, ptr @.str.257, ptr @.str.38, i32 5574, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\016[drm] PCIe error recovery succeeded\0A\00", [57 x i8] zeroinitializer }, align 32
@amdgpu_pci_slot_reset._entry_ptr.260 = internal global ptr @amdgpu_pci_slot_reset._entry.258, section ".printk_index", align 4
@.str.261 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"PCIe error recovery failed, err:%d\00", [61 x i8] zeroinitializer }, align 32
@amdgpu_pci_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.262, ptr @.str.263, ptr @.str.38, i32 5597, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\016[drm] PCI error: resume callback!!\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"amdgpu_pci_resume\00", [46 x i8] zeroinitializer }, align 32
@amdgpu_pci_resume._entry_ptr = internal global ptr @amdgpu_pci_resume._entry, section ".printk_index", align 4
@.str.264 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Failed to store PCI saved state\00", [32 x i8] zeroinitializer }, align 32
@amdgpu_device_cache_pci_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.265, ptr @.str.266, ptr @.str.38, i32 5634, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014[drm] Failed to save PCI state, err:%d\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"amdgpu_device_cache_pci_state\00", [34 x i8] zeroinitializer }, align 32
@amdgpu_device_cache_pci_state._entry_ptr = internal global ptr @amdgpu_device_cache_pci_state._entry, section ".printk_index", align 4
@amdgpu_device_load_pci_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.267, ptr @.str.268, ptr @.str.38, i32 5655, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014[drm] Failed to load PCI state, err:%d\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"amdgpu_device_load_pci_state\00", [35 x i8] zeroinitializer }, align 32
@amdgpu_device_load_pci_state._entry_ptr = internal global ptr @amdgpu_device_load_pci_state._entry, section ".printk_index", align 4
@__tracepoint_amdgpu_device_rreg = external dso_local global %struct.tracepoint, align 4
@.str.269 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_trace.h\00", [44 x i8] zeroinitializer }, align 32
@trace_amdgpu_device_rreg.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.270 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.271 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@__tracepoint_amdgpu_device_wreg = external dso_local global %struct.tracepoint, align 4
@trace_amdgpu_device_wreg.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.272 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"suspend of IP block <%s> failed %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"SMC failed to set mp1 state %d, %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Invalid callback to read register 0x%04X\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"Invalid callback to write register 0x%04X with 0x%08X\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Invalid callback to read 64 bit register 0x%04X\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"Invalid callback to write 64 bit register 0x%04X with 0x%08llX\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"Invalid callback to read register 0x%04X in block 0x%04X\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"Invalid block callback to write register 0x%04X in block 0x%04X with 0x%08X\0A\00", [51 x i8] zeroinitializer }, align 32
@amdgpu_sched_jobs = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_check_arguments._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.280, ptr @.str.281, ptr @.str.38, i32 1471, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"amdgpu: sched jobs (%d) must be at least 4\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"amdgpu_device_check_arguments\00", [34 x i8] zeroinitializer }, align 32
@amdgpu_device_check_arguments._entry_ptr = internal global ptr @amdgpu_device_check_arguments._entry, section ".printk_index", align 4
@amdgpu_device_check_arguments._entry.282 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.283, ptr @.str.281, ptr @.str.38, i32 1475, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"amdgpu: sched jobs (%d) must be a power of 2\0A\00", [50 x i8] zeroinitializer }, align 32
@amdgpu_device_check_arguments._entry_ptr.284 = internal global ptr @amdgpu_device_check_arguments._entry.282, section ".printk_index", align 4
@amdgpu_gart_size = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_check_arguments._entry.285 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.286, ptr @.str.281, ptr @.str.38, i32 1482, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"amdgpu: gart size (%d) too small\0A\00", [62 x i8] zeroinitializer }, align 32
@amdgpu_device_check_arguments._entry_ptr.287 = internal global ptr @amdgpu_device_check_arguments._entry.285, section ".printk_index", align 4
@amdgpu_gtt_size = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_check_arguments._entry.288 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.289, ptr @.str.281, ptr @.str.38, i32 1489, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"amdgpu: gtt size (%d) too small\0A\00", [63 x i8] zeroinitializer }, align 32
@amdgpu_device_check_arguments._entry_ptr.290 = internal global ptr @amdgpu_device_check_arguments._entry.288, section ".printk_index", align 4
@amdgpu_vm_fragment_size = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_check_arguments._entry.291 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.292, ptr @.str.281, ptr @.str.38, i32 1496, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"amdgpu: valid range is between 4 and 9\0A\00", [56 x i8] zeroinitializer }, align 32
@amdgpu_device_check_arguments._entry_ptr.293 = internal global ptr @amdgpu_device_check_arguments._entry.291, section ".printk_index", align 4
@amdgpu_sched_hw_submission = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_check_arguments._entry.294 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.295, ptr @.str.281, ptr @.str.38, i32 1502, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"amdgpu: sched hw submission jobs (%d) must be at least 2\0A\00", [38 x i8] zeroinitializer }, align 32
@amdgpu_device_check_arguments._entry_ptr.296 = internal global ptr @amdgpu_device_check_arguments._entry.294, section ".printk_index", align 4
@amdgpu_device_check_arguments._entry.297 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.298, ptr @.str.281, ptr @.str.38, i32 1506, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"amdgpu: sched hw submission jobs (%d) must be a power of 2\0A\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_device_check_arguments._entry_ptr.299 = internal global ptr @amdgpu_device_check_arguments._entry.297, section ".printk_index", align 4
@amdgpu_fw_load_type = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_smu_memory_pool_size = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_check_smu_prv_buffer_size._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.300, ptr @.str.301, ptr @.str.38, i32 1395, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\014[drm] Not 64-bit OS, feature not supported\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"amdgpu_device_check_smu_prv_buffer_size\00", [56 x i8] zeroinitializer }, align 32
@amdgpu_device_check_smu_prv_buffer_size._entry_ptr = internal global ptr @amdgpu_device_check_smu_prv_buffer_size._entry, section ".printk_index", align 4
@amdgpu_device_check_smu_prv_buffer_size._entry.302 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.303, ptr @.str.301, ptr @.str.38, i32 1410, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\014[drm] Smu memory pool size not supported\0A\00", [52 x i8] zeroinitializer }, align 32
@amdgpu_device_check_smu_prv_buffer_size._entry_ptr.304 = internal global ptr @amdgpu_device_check_smu_prv_buffer_size._entry.302, section ".printk_index", align 4
@amdgpu_device_check_smu_prv_buffer_size._entry.305 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.306, ptr @.str.301, ptr @.str.38, i32 1418, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014[drm] No enough system memory\0A\00", [63 x i8] zeroinitializer }, align 32
@amdgpu_device_check_smu_prv_buffer_size._entry_ptr.307 = internal global ptr @amdgpu_device_check_smu_prv_buffer_size._entry.305, section ".printk_index", align 4
@amdgpu_vm_size = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_check_vm_size._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.309, ptr @.str.38, i32 1378, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"amdgpu: VM size (%d) too small, min is 1GB\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"amdgpu_device_check_vm_size\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_device_check_vm_size._entry_ptr = internal global ptr @amdgpu_device_check_vm_size._entry, section ".printk_index", align 4
@amdgpu_vm_block_size = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_device_check_block_size._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.310, ptr @.str.311, ptr @.str.38, i32 1357, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.310 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"amdgpu: VM page table size (%d) too small\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"amdgpu_device_check_block_size\00", [33 x i8] zeroinitializer }, align 32
@amdgpu_device_check_block_size._entry_ptr = internal global ptr @amdgpu_device_check_block_size._entry, section ".printk_index", align 4
@.str.312 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"ib ring test failed (%d).\0A\00", [37 x i8] zeroinitializer }, align 32
@amdgpu_device_delay_enable_gfx_off.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@amdgpu_device_delay_enable_gfx_off.__already_done.313 = internal unnamed_addr global i1 false, section ".data.once", align 1
@amdgpu_device_xgmi_reset_func._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.314, ptr @.str.315, ptr @.str.38, i32 3322, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014[drm] ASIC reset failed with error, %d for drm dev, %s\00", [39 x i8] zeroinitializer }, align 32
@.str.315 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"amdgpu_device_xgmi_reset_func\00", [34 x i8] zeroinitializer }, align 32
@amdgpu_device_xgmi_reset_func._entry_ptr = internal global ptr @amdgpu_device_xgmi_reset_func._entry, section ".printk_index", align 4
@ratelimit_state_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.316 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"&rs->lock\00", [22 x i8] zeroinitializer }, align 32
@amdgpu_lockup_timeout = external dso_local global [256 x i8], align 1
@.str.317 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c",\00", [30 x i8] zeroinitializer }, align 32
@amdgpu_device_get_job_timeout_settings._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.318, ptr @.str.319, ptr @.str.38, i32 3360, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.318 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"amdgpu: lockup timeout disabled\00", [32 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"amdgpu_device_get_job_timeout_settings\00", [57 x i8] zeroinitializer }, align 32
@amdgpu_device_get_job_timeout_settings._entry_ptr = internal global ptr @amdgpu_device_get_job_timeout_settings._entry, section ".printk_index", align 4
@amdgpu_pp_feature_mask = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_ip_block_mask = external dso_local local_unnamed_addr global i32, align 4
@.str.320 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"disabled ip block: %d <%s>\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"early_init of IP block <%s> failed %d\0A\00", [57 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_early_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.322, ptr @.str.323, ptr @.str.38, i32 2181, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"amdgpu: amdgpu_atombios_init failed\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"amdgpu_device_ip_early_init\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_early_init._entry_ptr = internal global ptr @amdgpu_device_ip_early_init._entry, section ".printk_index", align 4
@amdgpu_cg_mask = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_pg_mask = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_virtual_display = external dso_local local_unnamed_addr global ptr, align 4
@.str.324 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c";\00", [30 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"all\00", [28 x i8] zeroinitializer }, align 32
@amdgpu_device_enable_virtual_display._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.326, ptr @.str.327, ptr @.str.38, i32 1872, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\016[drm] virtual display string:%s, %s:virtual_display:%d, num_crtc:%d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"amdgpu_device_enable_virtual_display\00", [59 x i8] zeroinitializer }, align 32
@amdgpu_device_enable_virtual_display._entry_ptr = internal global ptr @amdgpu_device_enable_virtual_display._entry, section ".printk_index", align 4
@.str.328 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vega10\00", [25 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vega12\00", [25 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"raven2\00", [25 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"picasso\00", [24 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"raven\00", [26 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"arcturus\00", [23 x i8] zeroinitializer }, align 32
@.str.334 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"renoir\00", [25 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"green_sardine\00", [18 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"navi10\00", [25 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"navi14\00", [25 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"navi12\00", [25 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"vangogh\00", [24 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"yellow_carp\00", [20 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"amdgpu/%s_gpu_info.bin\00", [41 x i8] zeroinitializer }, align 32
@amdgpu_device_parse_gpu_info_fw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.342, ptr @.str.343, ptr @.str.38, i32 1986, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"amdgpu: Failed to load gpu_info firmware \22%s\22\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"amdgpu_device_parse_gpu_info_fw\00", [32 x i8] zeroinitializer }, align 32
@amdgpu_device_parse_gpu_info_fw._entry_ptr = internal global ptr @amdgpu_device_parse_gpu_info_fw._entry, section ".printk_index", align 4
@amdgpu_device_parse_gpu_info_fw._entry.344 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.345, ptr @.str.343, ptr @.str.38, i32 1993, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"amdgpu: Failed to validate gpu_info firmware \22%s\22\0A\00", [45 x i8] zeroinitializer }, align 32
@amdgpu_device_parse_gpu_info_fw._entry_ptr.346 = internal global ptr @amdgpu_device_parse_gpu_info_fw._entry.344, section ".printk_index", align 4
@amdgpu_device_parse_gpu_info_fw._entry.347 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.348, ptr @.str.343, ptr @.str.38, i32 2056, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"amdgpu: Unsupported gpu_info table %d\0A\00", [57 x i8] zeroinitializer }, align 32
@amdgpu_device_parse_gpu_info_fw._entry_ptr.349 = internal global ptr @amdgpu_device_parse_gpu_info_fw._entry.347, section ".printk_index", align 4
@.str.350 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"sw_init of IP block <%s> failed %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"amdgpu_vram_scratch_init failed %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hw_init %d failed %d\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"amdgpu_device_wb_init failed %d\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"allocate CSA failed %d\0A\00", [40 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.355, ptr @.str.356, ptr @.str.38, i32 2361, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"amdgpu: IB initialization failed (%d).\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"amdgpu_device_ip_init\00", [42 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_init._entry_ptr = internal global ptr @amdgpu_device_ip_init._entry, section ".printk_index", align 4
@amdgpu_device_wb_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.357, ptr @.str.358, ptr @.str.38, i32 1125, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.357 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"amdgpu: (%d) create WB bo failed\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.358 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"amdgpu_device_wb_init\00", [42 x i8] zeroinitializer }, align 32
@amdgpu_device_wb_init._entry_ptr = internal global ptr @amdgpu_device_wb_init._entry, section ".printk_index", align 4
@.str.359 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"hw_init of IP block <%s> failed %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.360 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"late_init of IP block <%s> failed %d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"enable mgpu fan boost failed (%d).\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"pstate setting failed (%d).\0A\00", [35 x i8] zeroinitializer }, align 32
@dev_attr_product_name = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.363, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @amdgpu_device_get_product_name, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_product_number = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.365, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @amdgpu_device_get_product_number, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_serial_number = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.366, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @amdgpu_device_get_serial_number, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_pcie_replay_count = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.367, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @amdgpu_device_get_pcie_replay_count, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.363 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"product_name\00", [19 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.365 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"product_number\00", [17 x i8] zeroinitializer }, align 32
@.str.366 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"serial_number\00", [18 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"pcie_replay_count\00", [46 x i8] zeroinitializer }, align 32
@.str.368 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%llu\0A\00", [26 x i8] zeroinitializer }, align 32
@amdgpu_switcheroo_set_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.369, ptr @.str.370, ptr @.str.38, i32 1544, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.369 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\016amdgpu: switched on\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"amdgpu_switcheroo_set_state\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_switcheroo_set_state._entry_ptr = internal global ptr @amdgpu_switcheroo_set_state._entry, section ".printk_index", align 4
@amdgpu_switcheroo_set_state._entry.371 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.372, ptr @.str.370, ptr @.str.38, i32 1552, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.372 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\014[drm] pci_enable_device failed (%d)\0A\00", [57 x i8] zeroinitializer }, align 32
@amdgpu_switcheroo_set_state._entry_ptr.373 = internal global ptr @amdgpu_switcheroo_set_state._entry.371, section ".printk_index", align 4
@amdgpu_switcheroo_set_state._entry.374 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.375, ptr @.str.370, ptr @.str.38, i32 1557, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.375 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\016amdgpu: switched off\0A\00", [40 x i8] zeroinitializer }, align 32
@amdgpu_switcheroo_set_state._entry_ptr.376 = internal global ptr @amdgpu_switcheroo_set_state._entry.374, section ".printk_index", align 4
@.str.377 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"early_fini of IP block <%s> failed %d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.378 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"hw_fini of IP block <%s> failed %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"failed to release exclusive mode on fini\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.380 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"sw_fini of IP block <%s> failed %d\0A\00", [60 x i8] zeroinitializer }, align 32
@amdgpu_device_evict_resources._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.381, ptr @.str.382, ptr @.str.38, i32 3976, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014[drm] evicting device resources failed\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"amdgpu_device_evict_resources\00", [34 x i8] zeroinitializer }, align 32
@amdgpu_device_evict_resources._entry_ptr = internal global ptr @amdgpu_device_evict_resources._entry, section ".printk_index", align 4
@amdgpu_device_ip_check_soft_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.383, ptr @.str.384, ptr @.str.38, i32 4141, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.383 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"amdgpu: IP block:%s is hung!\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"amdgpu_device_ip_check_soft_reset\00", [62 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_check_soft_reset._entry_ptr = internal global ptr @amdgpu_device_ip_check_soft_reset._entry, section ".printk_index", align 4
@amdgpu_device_ip_need_full_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.385, ptr @.str.386, ptr @.str.38, i32 4202, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.385 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"amdgpu: Some block need full reset!\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.386 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"amdgpu_device_ip_need_full_reset\00", [63 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_need_full_reset._entry_ptr = internal global ptr @amdgpu_device_ip_need_full_reset._entry, section ".printk_index", align 4
@amdgpu_ras_in_intr = external dso_local global %struct.atomic_t, align 4
@.str.387 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"resume of IP block <%s> failed %d\0A\00", [61 x i8] zeroinitializer }, align 32
@amdgpu_device_recover_vram._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.388, ptr @.str.389, ptr @.str.38, i32 4291, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.388 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"amdgpu: recover vram bo from shadow start\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.389 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"amdgpu_device_recover_vram\00", [37 x i8] zeroinitializer }, align 32
@amdgpu_device_recover_vram._entry_ptr = internal global ptr @amdgpu_device_recover_vram._entry, section ".printk_index", align 4
@amdgpu_device_recover_vram._entry.390 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.391, ptr @.str.389, ptr @.str.38, i32 4327, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"amdgpu: recover vram bo from shadow failed, r is %ld, tmo is %ld\0A\00", [62 x i8] zeroinitializer }, align 32
@amdgpu_device_recover_vram._entry_ptr.392 = internal global ptr @amdgpu_device_recover_vram._entry.390, section ".printk_index", align 4
@amdgpu_device_recover_vram._entry.393 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.394, ptr @.str.389, ptr @.str.38, i32 4331, ptr @.str.122, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"amdgpu: recover vram bo from shadow done\0A\00", [54 x i8] zeroinitializer }, align 32
@amdgpu_device_recover_vram._entry_ptr.395 = internal global ptr @amdgpu_device_recover_vram._entry.393, section ".printk_index", align 4
@amdgpu_device_lock_hive_adev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.396, ptr @.str.397, ptr @.str.38, i32 4804, ptr @.str.117, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.396 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"amdgpu: Hive is NULL while device has multiple xgmi nodes\00", [38 x i8] zeroinitializer }, align 32
@.str.397 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"amdgpu_device_lock_hive_adev\00", [35 x i8] zeroinitializer }, align 32
@amdgpu_device_lock_hive_adev._entry_ptr = internal global ptr @amdgpu_device_lock_hive_adev._entry, section ".printk_index", align 4
@amdgpu_device_lock_hive_adev._entry.398 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.399, ptr @.str.397, ptr @.str.38, i32 4824, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.399 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"amdgpu: Hive lock iteration broke in the middle. Rolling back to unlock\00", [56 x i8] zeroinitializer }, align 32
@amdgpu_device_lock_hive_adev._entry_ptr.400 = internal global ptr @amdgpu_device_lock_hive_adev._entry.398, section ".printk_index", align 4
@amdgpu_device_suspend_display_audio._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.401, ptr @.str.402, ptr @.str.38, i32 4879, ptr @.str.208, ptr @.str.118 }, [40 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"amdgpu: failed to suspend display audio\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.402 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"amdgpu_device_suspend_display_audio\00", [60 x i8] zeroinitializer }, align 32
@amdgpu_device_suspend_display_audio._entry_ptr = internal global ptr @amdgpu_device_suspend_display_audio._entry, section ".printk_index", align 4
@amdgpu_device_ip_reinit_early_sriov._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.403, ptr @.str.404, ptr @.str.38, i32 2999, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.403 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016[drm] RE-INIT-early: %s %s\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"amdgpu_device_ip_reinit_early_sriov\00", [60 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_reinit_early_sriov._entry_ptr = internal global ptr @amdgpu_device_ip_reinit_early_sriov._entry, section ".printk_index", align 4
@.str.405 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"failed\00", [25 x i8] zeroinitializer }, align 32
@.str.406 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"succeeded\00", [22 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_reinit_late_sriov.ip_order = internal constant { [7 x i32], [36 x i8] } { [7 x i32] [i32 3, i32 5, i32 6, i32 7, i32 8, i32 9, i32 11], [36 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_reinit_late_sriov._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.407, ptr @.str.408, ptr @.str.38, i32 3040, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016[drm] RE-INIT-late: %s %s\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"amdgpu_device_ip_reinit_late_sriov\00", [61 x i8] zeroinitializer }, align 32
@amdgpu_device_ip_reinit_late_sriov._entry_ptr = internal global ptr @amdgpu_device_ip_reinit_late_sriov._entry, section ".printk_index", align 4
@.str.409 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Found the real bad job! ring:%s, job_id:%llx\0A\00", [50 x i8] zeroinitializer }, align 32
@amdgpu_pcie_gen_cap = external dso_local local_unnamed_addr global i32, align 4
@amdgpu_pcie_lane_cap = external dso_local local_unnamed_addr global i32, align 4
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 11, i64 13]
@__sancov_gen_cov_switch_values.410 = internal global [6 x i64] [i64 4, i64 32, i64 8, i64 9, i64 11, i64 13]
@__sancov_gen_cov_switch_values.411 = internal global [6 x i64] [i64 4, i64 32, i64 8, i64 9, i64 11, i64 13]
@__sancov_gen_cov_switch_values.412 = internal global [6 x i64] [i64 4, i64 32, i64 8, i64 9, i64 11, i64 13]
@__sancov_gen_cov_switch_values.413 = internal global [6 x i64] [i64 4, i64 32, i64 8, i64 9, i64 11, i64 13]
@__sancov_gen_cov_switch_values.414 = internal global [4 x i64] [i64 2, i64 32, i64 4, i64 6]
@__sancov_gen_cov_switch_values.415 = internal global [12 x i64] [i64 10, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 9, i64 10]
@__sancov_gen_cov_switch_values.416 = internal global [12 x i64] [i64 10, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 9, i64 10]
@__sancov_gen_cov_switch_values.417 = internal global [6 x i64] [i64 4, i64 32, i64 22, i64 24, i64 27, i64 32]
@__sancov_gen_cov_switch_values.418 = internal global [9 x i64] [i64 7, i64 32, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 4294967295]
@__sancov_gen_cov_switch_values.419 = internal global [7 x i64] [i64 5, i64 32, i64 21, i64 22, i64 23, i64 24, i64 255]
@__sancov_gen_cov_switch_values.420 = internal global [7 x i64] [i64 5, i64 32, i64 21, i64 22, i64 23, i64 24, i64 255]
@__sancov_gen_cov_switch_values.421 = internal global [10 x i64] [i64 8, i64 32, i64 1, i64 2, i64 4, i64 8, i64 12, i64 16, i64 32, i64 255]
@__sancov_gen_cov_switch_values.422 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.423 = internal global [21 x i64] [i64 19, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18]
@__sancov_gen_cov_switch_values.424 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.425 = internal global [12 x i64] [i64 10, i64 32, i64 19, i64 20, i64 22, i64 23, i64 24, i64 26, i64 28, i64 29, i64 32, i64 35]
@__sancov_gen_cov_switch_values.426 = internal global [6 x i64] [i64 4, i64 32, i64 8, i64 9, i64 11, i64 13]
@__sancov_gen_cov_switch_values.427 = internal global [6 x i64] [i64 4, i64 32, i64 8, i64 9, i64 11, i64 13]
@__sancov_gen_cov_switch_values.428 = internal global [4 x i64] [i64 2, i64 32, i64 23, i64 25]
@__sancov_gen_cov_switch_values.429 = internal global [6 x i64] [i64 4, i64 32, i64 8, i64 9, i64 11, i64 13]
@__sancov_gen_cov_switch_values.430 = internal global [6 x i64] [i64 4, i64 32, i64 8, i64 9, i64 11, i64 13]
@__sancov_gen_cov_switch_values.431 = internal global [12 x i64] [i64 10, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 9, i64 10]
@__sancov_gen_cov_switch_values.432 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 4]
@__sancov_gen_cov_switch_values.433 = internal global [12 x i64] [i64 10, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 9, i64 10]
@__sancov_gen_cov_switch_values.434 = internal global [13 x i64] [i64 11, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 6, i64 7, i64 9, i64 13, i64 14, i64 27]
@__sancov_gen_cov_switch_values.435 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 3, i64 4, i64 5, i64 10]
@__sancov_gen_cov_switch_values.436 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 4]
@__sancov_gen_cov_switch_values.437 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 4]
@__sancov_gen_cov_switch_values.438 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 3, i64 4, i64 5, i64 10]
@__sancov_gen_cov_switch_values.439 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967285]
@__sancov_gen_cov_switch_values.440 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 93, i32 2 }
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 94, i32 2 }
@___asan_gen_.449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 95, i32 2 }
@___asan_gen_.452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 96, i32 2 }
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 97, i32 2 }
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 98, i32 2 }
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 99, i32 2 }
@___asan_gen_.464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 100, i32 2 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 101, i32 2 }
@___asan_gen_.470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 102, i32 2 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 103, i32 2 }
@___asan_gen_.476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 104, i32 2 }
@___asan_gen_.479 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 105, i32 2 }
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 106, i32 2 }
@___asan_gen_.485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 107, i32 2 }
@___asan_gen_.488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 108, i32 2 }
@___asan_gen_.491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 109, i32 2 }
@___asan_gen_.494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 110, i32 2 }
@___asan_gen_.497 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 111, i32 2 }
@___asan_gen_.500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 112, i32 2 }
@___asan_gen_.503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 113, i32 2 }
@___asan_gen_.506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 114, i32 2 }
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 115, i32 2 }
@___asan_gen_.512 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 116, i32 2 }
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 117, i32 2 }
@___asan_gen_.518 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 118, i32 2 }
@___asan_gen_.521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 119, i32 2 }
@___asan_gen_.524 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 120, i32 2 }
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 121, i32 2 }
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 122, i32 2 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 123, i32 2 }
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 124, i32 2 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 125, i32 2 }
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 126, i32 2 }
@___asan_gen_.545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 127, i32 2 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 128, i32 2 }
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 129, i32 2 }
@___asan_gen_.554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 130, i32 2 }
@___asan_gen_.555 = private unnamed_addr constant [17 x i8] c"amdgpu_asic_name\00", align 1
@___asan_gen_.557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 92, i32 13 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 430, i32 4 }
@___asan_gen_.563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 594, i32 3 }
@___asan_gen_.566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 617, i32 3 }
@___asan_gen_.575 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1236, i32 3 }
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1282, i32 41 }
@___asan_gen_.581 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1623, i32 4 }
@___asan_gen_.584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1657, i32 4 }
@___asan_gen_.593 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1814, i32 2 }
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2502, i32 5 }
@___asan_gen_.599 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2538, i32 5 }
@___asan_gen_.608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3480, i32 2 }
@___asan_gen_.614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3486, i32 2 }
@___asan_gen_.620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3487, i32 2 }
@___asan_gen_.626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3488, i32 2 }
@___asan_gen_.632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3489, i32 2 }
@___asan_gen_.638 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3490, i32 2 }
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3491, i32 2 }
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3492, i32 2 }
@___asan_gen_.656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3493, i32 2 }
@___asan_gen_.662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3494, i32 2 }
@___asan_gen_.668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3497, i32 2 }
@___asan_gen_.674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3498, i32 2 }
@___asan_gen_.680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3499, i32 2 }
@___asan_gen_.686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3507, i32 2 }
@___asan_gen_.692 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3508, i32 2 }
@___asan_gen_.698 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3509, i32 2 }
@___asan_gen_.704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3510, i32 2 }
@___asan_gen_.710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3511, i32 2 }
@___asan_gen_.716 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3512, i32 2 }
@___asan_gen_.722 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3513, i32 2 }
@___asan_gen_.728 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3514, i32 2 }
@___asan_gen_.734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3515, i32 2 }
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3518, i32 2 }
@___asan_gen_.752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3522, i32 2 }
@___asan_gen_.764 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3524, i32 2 }
@___asan_gen_.770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3527, i32 2 }
@___asan_gen_.776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3560, i32 2 }
@___asan_gen_.782 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3561, i32 2 }
@___asan_gen_.788 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3566, i32 3 }
@___asan_gen_.800 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3576, i32 3 }
@___asan_gen_.809 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3603, i32 3 }
@___asan_gen_.815 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3624, i32 4 }
@___asan_gen_.818 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3634, i32 6 }
@___asan_gen_.824 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3642, i32 5 }
@___asan_gen_.830 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3653, i32 4 }
@___asan_gen_.836 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3657, i32 3 }
@___asan_gen_.842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3660, i32 4 }
@___asan_gen_.848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3669, i32 4 }
@___asan_gen_.854 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3677, i32 4 }
@___asan_gen_.860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3690, i32 3 }
@___asan_gen_.866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3705, i32 4 }
@___asan_gen_.872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3712, i32 3 }
@___asan_gen_.878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3719, i32 2 }
@___asan_gen_.881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3741, i32 3 }
@___asan_gen_.884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3748, i32 3 }
@___asan_gen_.890 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3756, i32 4 }
@___asan_gen_.896 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3762, i32 4 }
@___asan_gen_.902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3778, i32 4 }
@___asan_gen_.903 = private unnamed_addr constant [22 x i8] c"amdgpu_dev_attributes\00", align 1
@___asan_gen_.905 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3413, i32 32 }
@___asan_gen_.911 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3793, i32 3 }
@___asan_gen_.917 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3798, i32 3 }
@___asan_gen_.926 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3866, i32 2 }
@___asan_gen_.935 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4003, i32 3 }
@___asan_gen_.944 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4053, i32 4 }
@___asan_gen_.950 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4058, i32 3 }
@___asan_gen_.953 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4108, i32 3 }
@___asan_gen_.962 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4441, i32 3 }
@___asan_gen_.968 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4477, i32 3 }
@___asan_gen_.977 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4488, i32 9 }
@___asan_gen_.983 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4496, i32 17 }
@___asan_gen_.989 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4499, i32 17 }
@___asan_gen_.995 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4504, i32 17 }
@___asan_gen_.1004 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4573, i32 5 }
@___asan_gen_.1013 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4627, i32 5 }
@___asan_gen_.1022 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4661, i32 5 }
@___asan_gen_.1028 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4663, i32 5 }
@___asan_gen_.1034 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4674, i32 6 }
@___asan_gen_.1040 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4736, i32 5 }
@___asan_gen_.1049 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4998, i32 3 }
@___asan_gen_.1061 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5004, i32 2 }
@___asan_gen_.1067 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5018, i32 4 }
@___asan_gen_.1073 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5041, i32 3 }
@___asan_gen_.1079 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5128, i32 3 }
@___asan_gen_.1085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5137, i32 4 }
@___asan_gen_.1091 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5194, i32 4 }
@___asan_gen_.1097 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5197, i32 4 }
@___asan_gen_.1100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5199, i32 5 }
@___asan_gen_.1106 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5228, i32 3 }
@___asan_gen_.1115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5448, i32 2 }
@___asan_gen_.1121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5451, i32 3 }
@___asan_gen_.1130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5501, i32 2 }
@___asan_gen_.1139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5530, i32 2 }
@___asan_gen_.1145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5574, i32 3 }
@___asan_gen_.1148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5576, i32 3 }
@___asan_gen_.1157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5597, i32 2 }
@___asan_gen_.1160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5630, i32 4 }
@___asan_gen_.1169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5634, i32 3 }
@___asan_gen_.1178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 5655, i32 3 }
@___asan_gen_.1183 = private unnamed_addr constant [55 x i8] c"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_trace.h\00", align 1
@___asan_gen_.1184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1183, i32 38, i32 1 }
@___asan_gen_.1186 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.1187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1186, i32 108, i32 2 }
@___asan_gen_.1190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2857, i32 4 }
@___asan_gen_.1193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2932, i32 6 }
@___asan_gen_.1196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 808, i32 2 }
@___asan_gen_.1199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 825, i32 2 }
@___asan_gen_.1202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 842, i32 2 }
@___asan_gen_.1205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 859, i32 2 }
@___asan_gen_.1208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 878, i32 2 }
@___asan_gen_.1211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 899, i32 2 }
@___asan_gen_.1220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1470, i32 3 }
@___asan_gen_.1226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1474, i32 3 }
@___asan_gen_.1232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1481, i32 3 }
@___asan_gen_.1238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1488, i32 3 }
@___asan_gen_.1244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1496, i32 3 }
@___asan_gen_.1250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1501, i32 3 }
@___asan_gen_.1256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1505, i32 3 }
@___asan_gen_.1265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1395, i32 3 }
@___asan_gen_.1271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1410, i32 3 }
@___asan_gen_.1277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1418, i32 2 }
@___asan_gen_.1286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1377, i32 3 }
@___asan_gen_.1295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1356, i32 3 }
@___asan_gen_.1298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2812, i32 3 }
@___asan_gen_.1307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3321, i32 3 }
@___asan_gen_.1308 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1312 = private unnamed_addr constant [29 x i8] c"../include/linux/ratelimit.h\00", align 1
@___asan_gen_.1313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1312, i32 14, i32 2 }
@___asan_gen_.1316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3349, i32 44 }
@___asan_gen_.1325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3360, i32 5 }
@___asan_gen_.1328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2150, i32 4 }
@___asan_gen_.1331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2159, i32 6 }
@___asan_gen_.1340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2181, i32 5 }
@___asan_gen_.1343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1844, i32 51 }
@___asan_gen_.1346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1846, i32 16 }
@___asan_gen_.1355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1870, i32 3 }
@___asan_gen_.1358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1942, i32 15 }
@___asan_gen_.1361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1945, i32 15 }
@___asan_gen_.1364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1949, i32 16 }
@___asan_gen_.1367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1951, i32 16 }
@___asan_gen_.1370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1953, i32 16 }
@___asan_gen_.1373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1956, i32 15 }
@___asan_gen_.1376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1960, i32 16 }
@___asan_gen_.1379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1962, i32 16 }
@___asan_gen_.1382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1965, i32 15 }
@___asan_gen_.1385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1968, i32 15 }
@___asan_gen_.1388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1971, i32 15 }
@___asan_gen_.1391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1974, i32 15 }
@___asan_gen_.1394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1977, i32 15 }
@___asan_gen_.1397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1981, i32 37 }
@___asan_gen_.1406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1984, i32 3 }
@___asan_gen_.1412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1991, i32 3 }
@___asan_gen_.1418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2055, i32 3 }
@___asan_gen_.1421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2314, i32 4 }
@___asan_gen_.1424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2328, i32 5 }
@___asan_gen_.1427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2333, i32 5 }
@___asan_gen_.1430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2338, i32 5 }
@___asan_gen_.1433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2349, i32 6 }
@___asan_gen_.1442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2361, i32 3 }
@___asan_gen_.1451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1125, i32 4 }
@___asan_gen_.1454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2213, i32 5 }
@___asan_gen_.1457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2605, i32 5 }
@___asan_gen_.1460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2622, i32 3 }
@___asan_gen_.1463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2654, i32 6 }
@___asan_gen_.1464 = private unnamed_addr constant [22 x i8] c"dev_attr_product_name\00", align 1
@___asan_gen_.1467 = private unnamed_addr constant [24 x i8] c"dev_attr_product_number\00", align 1
@___asan_gen_.1470 = private unnamed_addr constant [23 x i8] c"dev_attr_serial_number\00", align 1
@___asan_gen_.1473 = private unnamed_addr constant [27 x i8] c"dev_attr_pcie_replay_count\00", align 1
@___asan_gen_.1478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 176, i32 8 }
@___asan_gen_.1481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 173, i32 25 }
@___asan_gen_.1484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 198, i32 8 }
@___asan_gen_.1487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 220, i32 8 }
@___asan_gen_.1490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 152, i32 8 }
@___asan_gen_.1493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 149, i32 25 }
@___asan_gen_.1502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1544, i32 3 }
@___asan_gen_.1508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1552, i32 4 }
@___asan_gen_.1514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 1557, i32 3 }
@___asan_gen_.1517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2706, i32 4 }
@___asan_gen_.1520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2726, i32 4 }
@___asan_gen_.1523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2735, i32 4 }
@___asan_gen_.1526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2779, i32 4 }
@___asan_gen_.1535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3976, i32 3 }
@___asan_gen_.1544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4141, i32 4 }
@___asan_gen_.1553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4202, i32 5 }
@___asan_gen_.1556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3075, i32 5 }
@___asan_gen_.1565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4291, i32 2 }
@___asan_gen_.1571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4327, i32 3 }
@___asan_gen_.1577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4331, i32 2 }
@___asan_gen_.1586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4804, i32 4 }
@___asan_gen_.1592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4824, i32 3 }
@___asan_gen_.1601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4879, i32 4 }
@___asan_gen_.1616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 2999, i32 4 }
@___asan_gen_.1617 = private unnamed_addr constant [9 x i8] c"ip_order\00", align 1
@___asan_gen_.1619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3013, i32 32 }
@___asan_gen_.1620 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 3040, i32 4 }
@___asan_gen_.1629 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1630 = private constant [46 x i8] c"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\00", align 1
@___asan_gen_.1631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1630, i32 4918, i32 4 }
@llvm.compiler.used = appending global [503 x ptr] [ptr @__UNIQUE_ID_firmware391, ptr @__UNIQUE_ID_firmware392, ptr @__UNIQUE_ID_firmware393, ptr @__UNIQUE_ID_firmware394, ptr @__UNIQUE_ID_firmware395, ptr @__UNIQUE_ID_firmware396, ptr @__UNIQUE_ID_firmware397, ptr @__UNIQUE_ID_firmware398, ptr @__UNIQUE_ID_firmware399, ptr @__UNIQUE_ID_firmware400, ptr @__UNIQUE_ID_firmware401, ptr @__UNIQUE_ID_firmware402, ptr @amdgpu_device_cache_pci_state._entry, ptr @amdgpu_device_cache_pci_state._entry_ptr, ptr @amdgpu_device_check_arguments._entry, ptr @amdgpu_device_check_arguments._entry.282, ptr @amdgpu_device_check_arguments._entry.285, ptr @amdgpu_device_check_arguments._entry.288, ptr @amdgpu_device_check_arguments._entry.291, ptr @amdgpu_device_check_arguments._entry.294, ptr @amdgpu_device_check_arguments._entry.297, ptr @amdgpu_device_check_arguments._entry_ptr, ptr @amdgpu_device_check_arguments._entry_ptr.284, ptr @amdgpu_device_check_arguments._entry_ptr.287, ptr @amdgpu_device_check_arguments._entry_ptr.290, ptr @amdgpu_device_check_arguments._entry_ptr.293, ptr @amdgpu_device_check_arguments._entry_ptr.296, ptr @amdgpu_device_check_arguments._entry_ptr.299, ptr @amdgpu_device_check_block_size._entry, ptr @amdgpu_device_check_block_size._entry_ptr, ptr @amdgpu_device_check_smu_prv_buffer_size._entry, ptr @amdgpu_device_check_smu_prv_buffer_size._entry.302, ptr @amdgpu_device_check_smu_prv_buffer_size._entry.305, ptr @amdgpu_device_check_smu_prv_buffer_size._entry_ptr, ptr @amdgpu_device_check_smu_prv_buffer_size._entry_ptr.304, ptr @amdgpu_device_check_smu_prv_buffer_size._entry_ptr.307, ptr @amdgpu_device_check_vm_size._entry, ptr @amdgpu_device_check_vm_size._entry_ptr, ptr @amdgpu_device_enable_virtual_display._entry, ptr @amdgpu_device_enable_virtual_display._entry_ptr, ptr @amdgpu_device_evict_resources._entry, ptr @amdgpu_device_evict_resources._entry_ptr, ptr @amdgpu_device_fini_hw._entry, ptr @amdgpu_device_fini_hw._entry_ptr, ptr @amdgpu_device_get_job_timeout_settings._entry, ptr @amdgpu_device_get_job_timeout_settings._entry_ptr, ptr @amdgpu_device_gpu_recover._entry, ptr @amdgpu_device_gpu_recover._entry.221, ptr @amdgpu_device_gpu_recover._entry.226, ptr @amdgpu_device_gpu_recover._entry.229, ptr @amdgpu_device_gpu_recover._entry.232, ptr @amdgpu_device_gpu_recover._entry.235, ptr @amdgpu_device_gpu_recover._entry.238, ptr @amdgpu_device_gpu_recover._entry.241, ptr @amdgpu_device_gpu_recover._entry.244, ptr @amdgpu_device_gpu_recover._entry.246, ptr @amdgpu_device_gpu_recover._entry_ptr, ptr @amdgpu_device_gpu_recover._entry_ptr.223, ptr @amdgpu_device_gpu_recover._entry_ptr.228, ptr @amdgpu_device_gpu_recover._entry_ptr.231, ptr @amdgpu_device_gpu_recover._entry_ptr.234, ptr @amdgpu_device_gpu_recover._entry_ptr.237, ptr @amdgpu_device_gpu_recover._entry_ptr.240, ptr @amdgpu_device_gpu_recover._entry_ptr.243, ptr @amdgpu_device_gpu_recover._entry_ptr.245, ptr @amdgpu_device_gpu_recover._entry_ptr.248, ptr @amdgpu_device_init._entry, ptr @amdgpu_device_init._entry.106, ptr @amdgpu_device_init._entry.109, ptr @amdgpu_device_init._entry.112, ptr @amdgpu_device_init._entry.115, ptr @amdgpu_device_init._entry.120, ptr @amdgpu_device_init._entry.124, ptr @amdgpu_device_init._entry.128, ptr @amdgpu_device_init._entry.131, ptr @amdgpu_device_init._entry.134, ptr @amdgpu_device_init._entry.137, ptr @amdgpu_device_init._entry.140, ptr @amdgpu_device_init._entry.143, ptr @amdgpu_device_init._entry.146, ptr @amdgpu_device_init._entry.149, ptr @amdgpu_device_init._entry.152, ptr @amdgpu_device_init._entry.155, ptr @amdgpu_device_init._entry.160, ptr @amdgpu_device_init._entry.163, ptr @amdgpu_device_init._entry.166, ptr @amdgpu_device_init._entry.169, ptr @amdgpu_device_init._entry.172, ptr @amdgpu_device_init._entry_ptr, ptr @amdgpu_device_init._entry_ptr.108, ptr @amdgpu_device_init._entry_ptr.111, ptr @amdgpu_device_init._entry_ptr.114, ptr @amdgpu_device_init._entry_ptr.119, ptr @amdgpu_device_init._entry_ptr.123, ptr @amdgpu_device_init._entry_ptr.126, ptr @amdgpu_device_init._entry_ptr.130, ptr @amdgpu_device_init._entry_ptr.133, ptr @amdgpu_device_init._entry_ptr.136, ptr @amdgpu_device_init._entry_ptr.139, ptr @amdgpu_device_init._entry_ptr.142, ptr @amdgpu_device_init._entry_ptr.145, ptr @amdgpu_device_init._entry_ptr.148, ptr @amdgpu_device_init._entry_ptr.151, ptr @amdgpu_device_init._entry_ptr.154, ptr @amdgpu_device_init._entry_ptr.157, ptr @amdgpu_device_init._entry_ptr.162, ptr @amdgpu_device_init._entry_ptr.165, ptr @amdgpu_device_init._entry_ptr.168, ptr @amdgpu_device_init._entry_ptr.171, ptr @amdgpu_device_init._entry_ptr.174, ptr @amdgpu_device_ip_block_add._entry, ptr @amdgpu_device_ip_block_add._entry_ptr, ptr @amdgpu_device_ip_check_soft_reset._entry, ptr @amdgpu_device_ip_check_soft_reset._entry_ptr, ptr @amdgpu_device_ip_early_init._entry, ptr @amdgpu_device_ip_early_init._entry_ptr, ptr @amdgpu_device_ip_init._entry, ptr @amdgpu_device_ip_init._entry_ptr, ptr @amdgpu_device_ip_need_full_reset._entry, ptr @amdgpu_device_ip_need_full_reset._entry_ptr, ptr @amdgpu_device_ip_reinit_early_sriov._entry, ptr @amdgpu_device_ip_reinit_early_sriov._entry_ptr, ptr @amdgpu_device_ip_reinit_late_sriov._entry, ptr @amdgpu_device_ip_reinit_late_sriov._entry_ptr, ptr @amdgpu_device_load_pci_state._entry, ptr @amdgpu_device_load_pci_state._entry_ptr, ptr @amdgpu_device_lock_hive_adev._entry, ptr @amdgpu_device_lock_hive_adev._entry.398, ptr @amdgpu_device_lock_hive_adev._entry_ptr, ptr @amdgpu_device_lock_hive_adev._entry_ptr.400, ptr @amdgpu_device_mode1_reset._entry, ptr @amdgpu_device_mode1_reset._entry.193, ptr @amdgpu_device_mode1_reset._entry.196, ptr @amdgpu_device_mode1_reset._entry.199, ptr @amdgpu_device_mode1_reset._entry_ptr, ptr @amdgpu_device_mode1_reset._entry_ptr.195, ptr @amdgpu_device_mode1_reset._entry_ptr.198, ptr @amdgpu_device_mode1_reset._entry_ptr.201, ptr @amdgpu_device_parse_gpu_info_fw._entry, ptr @amdgpu_device_parse_gpu_info_fw._entry.344, ptr @amdgpu_device_parse_gpu_info_fw._entry.347, ptr @amdgpu_device_parse_gpu_info_fw._entry_ptr, ptr @amdgpu_device_parse_gpu_info_fw._entry_ptr.346, ptr @amdgpu_device_parse_gpu_info_fw._entry_ptr.349, ptr @amdgpu_device_pre_asic_reset._entry, ptr @amdgpu_device_pre_asic_reset._entry_ptr, ptr @amdgpu_device_recover_vram._entry, ptr @amdgpu_device_recover_vram._entry.390, ptr @amdgpu_device_recover_vram._entry.393, ptr @amdgpu_device_recover_vram._entry_ptr, ptr @amdgpu_device_recover_vram._entry_ptr.392, ptr @amdgpu_device_recover_vram._entry_ptr.395, ptr @amdgpu_device_resize_fb_bar._entry, ptr @amdgpu_device_resize_fb_bar._entry_ptr, ptr @amdgpu_device_resume._entry, ptr @amdgpu_device_resume._entry.181, ptr @amdgpu_device_resume._entry.184, ptr @amdgpu_device_resume._entry_ptr, ptr @amdgpu_device_resume._entry_ptr.183, ptr @amdgpu_device_resume._entry_ptr.185, ptr @amdgpu_device_should_recover_gpu._entry, ptr @amdgpu_device_should_recover_gpu._entry.188, ptr @amdgpu_device_should_recover_gpu._entry_ptr, ptr @amdgpu_device_should_recover_gpu._entry_ptr.190, ptr @amdgpu_device_suspend._entry, ptr @amdgpu_device_suspend._entry_ptr, ptr @amdgpu_device_suspend_display_audio._entry, ptr @amdgpu_device_suspend_display_audio._entry_ptr, ptr @amdgpu_device_wb_init._entry, ptr @amdgpu_device_wb_init._entry_ptr, ptr @amdgpu_device_xgmi_reset_func._entry, ptr @amdgpu_device_xgmi_reset_func._entry_ptr, ptr @amdgpu_do_asic_reset._entry, ptr @amdgpu_do_asic_reset._entry.206, ptr @amdgpu_do_asic_reset._entry.210, ptr @amdgpu_do_asic_reset._entry.213, ptr @amdgpu_do_asic_reset._entry.216, ptr @amdgpu_do_asic_reset._entry_ptr, ptr @amdgpu_do_asic_reset._entry_ptr.209, ptr @amdgpu_do_asic_reset._entry_ptr.212, ptr @amdgpu_do_asic_reset._entry_ptr.215, ptr @amdgpu_do_asic_reset._entry_ptr.218, ptr @amdgpu_pci_error_detected._entry, ptr @amdgpu_pci_error_detected._entry.251, ptr @amdgpu_pci_error_detected._entry_ptr, ptr @amdgpu_pci_error_detected._entry_ptr.253, ptr @amdgpu_pci_mmio_enabled._entry, ptr @amdgpu_pci_mmio_enabled._entry_ptr, ptr @amdgpu_pci_resume._entry, ptr @amdgpu_pci_resume._entry_ptr, ptr @amdgpu_pci_slot_reset._entry, ptr @amdgpu_pci_slot_reset._entry.258, ptr @amdgpu_pci_slot_reset._entry_ptr, ptr @amdgpu_pci_slot_reset._entry_ptr.260, ptr @amdgpu_switcheroo_set_state._entry, ptr @amdgpu_switcheroo_set_state._entry.371, ptr @amdgpu_switcheroo_set_state._entry.374, ptr @amdgpu_switcheroo_set_state._entry_ptr, ptr @amdgpu_switcheroo_set_state._entry_ptr.373, ptr @amdgpu_switcheroo_set_state._entry_ptr.376, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @amdgpu_asic_name, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @amdgpu_device_init.__key, ptr @.str.53, ptr @amdgpu_device_init.__key.54, ptr @.str.55, ptr @amdgpu_device_init.__key.56, ptr @.str.57, ptr @amdgpu_device_init.__key.58, ptr @.str.59, ptr @amdgpu_device_init.__key.60, ptr @.str.61, ptr @amdgpu_device_init.__key.62, ptr @.str.63, ptr @amdgpu_device_init.__key.64, ptr @.str.65, ptr @amdgpu_device_init.__key.66, ptr @.str.67, ptr @amdgpu_device_init.__key.68, ptr @.str.69, ptr @amdgpu_device_init.__key.70, ptr @.str.71, ptr @amdgpu_device_init.__key.72, ptr @.str.73, ptr @amdgpu_device_init.__key.74, ptr @.str.75, ptr @amdgpu_device_init.__key.76, ptr @.str.77, ptr @amdgpu_device_init.__key.78, ptr @.str.79, ptr @amdgpu_device_init.__key.80, ptr @.str.81, ptr @amdgpu_device_init.__key.82, ptr @.str.83, ptr @amdgpu_device_init.__key.84, ptr @.str.85, ptr @amdgpu_device_init.__key.86, ptr @.str.87, ptr @amdgpu_device_init.__key.88, ptr @.str.89, ptr @amdgpu_device_init.__key.90, ptr @.str.91, ptr @amdgpu_device_init.__key.92, ptr @.str.93, ptr @amdgpu_device_init.__key.94, ptr @.str.95, ptr @amdgpu_device_init.__key.96, ptr @.str.97, ptr @amdgpu_device_init.__key.98, ptr @.str.99, ptr @amdgpu_device_init.__key.100, ptr @.str.101, ptr @amdgpu_device_init.__key.102, ptr @.str.103, ptr @amdgpu_device_init.__key.104, ptr @.str.105, ptr @.str.107, ptr @.str.110, ptr @.str.113, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.121, ptr @.str.122, ptr @.str.125, ptr @.str.127, ptr @.str.129, ptr @.str.132, ptr @.str.135, ptr @.str.138, ptr @.str.141, ptr @.str.144, ptr @.str.147, ptr @.str.150, ptr @.str.153, ptr @.str.156, ptr @.str.158, ptr @.str.159, ptr @.str.161, ptr @.str.164, ptr @.str.167, ptr @amdgpu_dev_attributes, ptr @.str.170, ptr @.str.173, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.182, ptr @.str.186, ptr @.str.187, ptr @.str.189, ptr @.str.191, ptr @.str.192, ptr @.str.194, ptr @.str.197, ptr @.str.200, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.207, ptr @.str.208, ptr @.str.211, ptr @.str.214, ptr @.str.217, ptr @.str.219, ptr @.str.220, ptr @.str.222, ptr @.str.224, ptr @.str.225, ptr @.str.227, ptr @.str.230, ptr @.str.233, ptr @.str.236, ptr @.str.239, ptr @.str.242, ptr @.str.247, ptr @.str.249, ptr @.str.250, ptr @.str.252, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.259, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.283, ptr @.str.286, ptr @.str.289, ptr @.str.292, ptr @.str.295, ptr @.str.298, ptr @.str.300, ptr @.str.301, ptr @.str.303, ptr @.str.306, ptr @.str.308, ptr @.str.309, ptr @.str.310, ptr @.str.311, ptr @.str.312, ptr @.str.314, ptr @.str.315, ptr @ratelimit_state_init.__key, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @.str.322, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.345, ptr @.str.348, ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.358, ptr @.str.359, ptr @.str.360, ptr @.str.361, ptr @.str.362, ptr @dev_attr_product_name, ptr @dev_attr_product_number, ptr @dev_attr_serial_number, ptr @dev_attr_pcie_replay_count, ptr @.str.363, ptr @.str.364, ptr @.str.365, ptr @.str.366, ptr @.str.367, ptr @.str.368, ptr @.str.369, ptr @.str.370, ptr @.str.372, ptr @.str.375, ptr @.str.377, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @.str.381, ptr @.str.382, ptr @.str.383, ptr @.str.384, ptr @.str.385, ptr @.str.386, ptr @.str.387, ptr @.str.388, ptr @.str.389, ptr @.str.391, ptr @.str.394, ptr @.str.396, ptr @.str.397, ptr @.str.399, ptr @.str.401, ptr @.str.402, ptr @.str.403, ptr @.str.404, ptr @.str.405, ptr @.str.406, ptr @amdgpu_device_ip_reinit_late_sriov.ip_order, ptr @.str.407, ptr @.str.408, ptr @.str.409], section "llvm.metadata"
@0 = internal global [397 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_asic_name to i32), i32 152, i32 192, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_resize_fb_bar._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_ip_block_add._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.54 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.56 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.58 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.60 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.62 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.64 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.66 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.68 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.70 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.72 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.74 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.76 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.78 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.80 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.82 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.84 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.86 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.88 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.90 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.92 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.94 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.96 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.98 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.100 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.102 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init.__key.104 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.106 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.109 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.112 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.115 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.120 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.124 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.134 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.137 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.140 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.143 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.146 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.149 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.152 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.155 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.160 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.163 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.166 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_dev_attributes to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.169 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_init._entry.172 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_fini_hw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_suspend._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_resume._entry.181 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_resume._entry.184 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_should_recover_gpu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_should_recover_gpu._entry.188 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_mode1_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_mode1_reset._entry.193 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_mode1_reset._entry.196 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_mode1_reset._entry.199 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_pre_asic_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_do_asic_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_do_asic_reset._entry.206 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_do_asic_reset._entry.210 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_do_asic_reset._entry.213 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_do_asic_reset._entry.216 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1040 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1040 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry.221 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry.226 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1067 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1067 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry.229 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry.232 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1079 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1079 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry.235 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry.238 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry.241 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1097 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1097 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry.244 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1100 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_gpu_recover._entry.246 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_pci_error_detected._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_pci_error_detected._entry.251 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_pci_mmio_enabled._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_pci_slot_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_pci_slot_reset._entry.258 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_pci_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_cache_pci_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_load_pci_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_arguments._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_arguments._entry.282 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_arguments._entry.285 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_arguments._entry.288 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_arguments._entry.291 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_arguments._entry.294 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_arguments._entry.297 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_smu_prv_buffer_size._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_smu_prv_buffer_size._entry.302 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_smu_prv_buffer_size._entry.305 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_vm_size._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_check_block_size._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_xgmi_reset_func._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ratelimit_state_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_get_job_timeout_settings._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_ip_early_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_enable_virtual_display._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_parse_gpu_info_fw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_parse_gpu_info_fw._entry.344 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_parse_gpu_info_fw._entry.347 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_ip_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_wb_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.358 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.360 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_product_name to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1464 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_product_number to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1467 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_serial_number to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1470 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_pcie_replay_count to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1473 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.363 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.366 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.368 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_switcheroo_set_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.369 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_switcheroo_set_state._entry.371 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_switcheroo_set_state._entry.374 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.375 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.377 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.380 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_evict_resources._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_ip_check_soft_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.383 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_ip_need_full_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.385 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_recover_vram._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.388 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.389 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_recover_vram._entry.390 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_recover_vram._entry.393 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_lock_hive_adev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.396 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.397 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_lock_hive_adev._entry.398 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.399 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_suspend_display_audio._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.402 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_ip_reinit_early_sriov._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.403 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.405 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.406 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_ip_reinit_late_sriov.ip_order to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1617 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_device_ip_reinit_late_sriov._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1631 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_supports_px(ptr nocapture noundef readonly %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr i8, ptr %dev, i32 2376
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %and = and i32 %1, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp ne i32 %and, 0
  ret i1 %tobool.not
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_supports_boco(ptr nocapture noundef readonly %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %has_pr3 = getelementptr i8, ptr %dev, i32 91474
  %0 = ptrtoint ptr %has_pr3 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %has_pr3, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp ne i8 %1, 0
  ret i1 %tobool.not
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_supports_baco(ptr noundef %dev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %asic_funcs = getelementptr i8, ptr %dev, i32 2388
  %0 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %asic_funcs, align 4
  %supports_baco = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %1, i32 0, i32 19
  %2 = ptrtoint ptr %supports_baco to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %supports_baco, align 4
  %call1 = tail call zeroext i1 %3(ptr noundef %add.ptr.i) #17
  ret i1 %call1
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_supports_smart_shift(ptr nocapture noundef readonly %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i1 false
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_mm_access(ptr noundef %adev, i64 noundef %pos, ptr nocapture noundef %buf, i32 noundef %size, i1 noundef zeroext %write) local_unnamed_addr #2 align 64 {
entry:
  %idx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %idx) #17
  %0 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %idx, align 4, !annotation !767
  %ddev.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2
  %call1 = call zeroext i1 @drm_dev_enter(ptr noundef %ddev.i, ptr noundef nonnull %idx) #17
  br i1 %call1, label %do.body, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body:                                          ; preds = %entry
  %and = and i64 %pos, 3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %cmp = icmp ne i64 %and, 0
  %and2 = and i32 %size, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %cmp3 = icmp ne i32 %and2, 0
  %1 = or i1 %cmp, %cmp3
  br i1 %1, label %do.body7, label %do.body15, !prof !768

do.body7:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 313, 0\0A.popsection", ""() #17, !srcloc !769
  unreachable

do.body15:                                        ; preds = %do.body
  %mmio_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 33
  %call19 = call i32 @_raw_spin_lock_irqsave(ptr noundef %mmio_idx_lock) #17
  %conv24 = zext i32 %size to i64
  %add = add i64 %conv24, %pos
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %pos)
  %cmp2597 = icmp ugt i64 %add, %pos
  br i1 %cmp2597, label %for.body.lr.ph, label %do.body15.for.end_crit_edge

do.body15.for.end_crit_edge:                      ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.body15
  %rmmio_size.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 31
  %rmmio.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %pcie_wreg.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 40
  %pdev.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %pcie_rreg.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 39
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %pos.addr.0100 = phi i64 [ %pos, %for.body.lr.ph ], [ %add38, %for.inc.for.body_crit_edge ]
  %data.099 = phi ptr [ %buf, %for.body.lr.ph ], [ %data.1, %for.inc.for.body_crit_edge ]
  %hi.098 = phi i32 [ -1, %for.body.lr.ph ], [ %hi.1, %for.inc.for.body_crit_edge ]
  %2 = lshr i64 %pos.addr.0100, 31
  %conv27 = trunc i64 %2 to i32
  %conv28 = trunc i64 %pos.addr.0100 to i32
  %or = or i32 %conv28, -2147483648
  %call.i = call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev) #17
  br i1 %call.i, label %for.body.amdgpu_device_wreg.exit_crit_edge, label %if.end.i

for.body.amdgpu_device_wreg.exit_crit_edge:       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_wreg.exit

if.end.i:                                         ; preds = %for.body
  %3 = ptrtoint ptr %rmmio_size.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rmmio_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.i.not = icmp eq i32 %4, 0
  br i1 %cmp.i.not, label %if.else11.i, label %if.then1.i

if.then1.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !770
  call void @arm_heavy_mb() #17
  %5 = call i32 @llvm.bswap.i32(i32 %or) #17
  %6 = ptrtoint ptr %rmmio.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rmmio.i, align 8
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %7, i32 %5) #17, !srcloc !771
  br label %if.end13.i

if.else11.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %pcie_wreg.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pcie_wreg.i, align 4
  call void %9(ptr noundef %adev, i32 noundef 0, i32 noundef %or) #17
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.else11.i, %if.then1.i
  %10 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev.i, align 4
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %device.i, align 2
  %conv.i = zext i16 %13 to i32
  call fastcc void @trace_amdgpu_device_wreg(i32 noundef %conv.i, i32 noundef 0, i32 noundef %or) #17
  br label %amdgpu_device_wreg.exit

amdgpu_device_wreg.exit:                          ; preds = %if.end13.i, %for.body.amdgpu_device_wreg.exit_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %hi.098, i32 %conv27)
  %cmp29.not = icmp eq i32 %hi.098, %conv27
  br i1 %cmp29.not, label %amdgpu_device_wreg.exit.if.end32_crit_edge, label %if.then31

amdgpu_device_wreg.exit.if.end32_crit_edge:       ; preds = %amdgpu_device_wreg.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

if.then31:                                        ; preds = %amdgpu_device_wreg.exit
  %call.i60 = call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev) #17
  br i1 %call.i60, label %if.then31.if.end32_crit_edge, label %if.end.i63

if.then31.if.end32_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

if.end.i63:                                       ; preds = %if.then31
  %14 = ptrtoint ptr %rmmio_size.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rmmio_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %15)
  %cmp.i62 = icmp ugt i32 %15, 24
  br i1 %cmp.i62, label %if.then1.i64, label %if.else11.i67

if.then1.i64:                                     ; preds = %if.end.i63
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !770
  call void @arm_heavy_mb() #17
  %16 = call i32 @llvm.bswap.i32(i32 %conv27) #17
  %17 = ptrtoint ptr %rmmio.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rmmio.i, align 8
  %add.ptr.i = getelementptr i8, ptr %18, i32 24
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %16) #17, !srcloc !771
  br label %if.end13.i71

if.else11.i67:                                    ; preds = %if.end.i63
  call void @__sanitizer_cov_trace_pc() #19
  %19 = ptrtoint ptr %pcie_wreg.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pcie_wreg.i, align 4
  call void %20(ptr noundef %adev, i32 noundef 24, i32 noundef %conv27) #17
  br label %if.end13.i71

if.end13.i71:                                     ; preds = %if.else11.i67, %if.then1.i64
  %21 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pdev.i, align 4
  %device.i69 = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 8
  %23 = ptrtoint ptr %device.i69 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %device.i69, align 2
  %conv.i70 = zext i16 %24 to i32
  call fastcc void @trace_amdgpu_device_wreg(i32 noundef %conv.i70, i32 noundef 6, i32 noundef %conv27) #17
  br label %if.end32

if.end32:                                         ; preds = %if.end13.i71, %if.then31.if.end32_crit_edge, %amdgpu_device_wreg.exit.if.end32_crit_edge
  %hi.1 = phi i32 [ %hi.098, %amdgpu_device_wreg.exit.if.end32_crit_edge ], [ %conv27, %if.then31.if.end32_crit_edge ], [ %conv27, %if.end13.i71 ]
  br i1 %write, label %if.then34, label %if.else

if.then34:                                        ; preds = %if.end32
  %25 = ptrtoint ptr %data.099 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %data.099, align 4
  %call.i73 = call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev) #17
  br i1 %call.i73, label %if.then34.for.inc_crit_edge, label %if.end.i76

if.then34.for.inc_crit_edge:                      ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end.i76:                                       ; preds = %if.then34
  %27 = ptrtoint ptr %rmmio_size.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rmmio_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %28)
  %cmp.i75 = icmp ugt i32 %28, 4
  br i1 %cmp.i75, label %if.then1.i77, label %if.else11.i81

if.then1.i77:                                     ; preds = %if.end.i76
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !770
  call void @arm_heavy_mb() #17
  %29 = call i32 @llvm.bswap.i32(i32 %26) #17
  %30 = ptrtoint ptr %rmmio.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %rmmio.i, align 8
  %add.ptr.i79 = getelementptr i8, ptr %31, i32 4
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i79, i32 %29) #17, !srcloc !771
  br label %if.end13.i85

if.else11.i81:                                    ; preds = %if.end.i76
  call void @__sanitizer_cov_trace_pc() #19
  %32 = ptrtoint ptr %pcie_wreg.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pcie_wreg.i, align 4
  call void %33(ptr noundef %adev, i32 noundef 4, i32 noundef %26) #17
  br label %if.end13.i85

if.end13.i85:                                     ; preds = %if.else11.i81, %if.then1.i77
  %34 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pdev.i, align 4
  %device.i83 = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 8
  %36 = ptrtoint ptr %device.i83 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %device.i83, align 2
  %conv.i84 = zext i16 %37 to i32
  call fastcc void @trace_amdgpu_device_wreg(i32 noundef %conv.i84, i32 noundef 1, i32 noundef %26) #17
  br label %for.inc

if.else:                                          ; preds = %if.end32
  %call.i87 = call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev) #17
  br i1 %call.i87, label %if.else.amdgpu_device_rreg.exit_crit_edge, label %if.end.i90

if.else.amdgpu_device_rreg.exit_crit_edge:        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_rreg.exit

if.end.i90:                                       ; preds = %if.else
  %38 = ptrtoint ptr %rmmio_size.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rmmio_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %39)
  %cmp.i89 = icmp ugt i32 %39, 4
  br i1 %cmp.i89, label %if.then1.i91, label %if.else14.i

if.then1.i91:                                     ; preds = %if.end.i90
  call void @__sanitizer_cov_trace_pc() #19
  %40 = ptrtoint ptr %rmmio.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %rmmio.i, align 8
  %add.ptr.i93 = getelementptr i8, ptr %41, i32 4
  %42 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i93) #17, !srcloc !772
  %43 = call i32 @llvm.bswap.i32(i32 %42) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !773
  br label %if.end17.i

if.else14.i:                                      ; preds = %if.end.i90
  call void @__sanitizer_cov_trace_pc() #19
  %44 = ptrtoint ptr %pcie_rreg.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %pcie_rreg.i, align 8
  %call16.i = call i32 %45(ptr noundef %adev, i32 noundef 4) #17
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.else14.i, %if.then1.i91
  %ret.0.i = phi i32 [ %43, %if.then1.i91 ], [ %call16.i, %if.else14.i ]
  %46 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %pdev.i, align 4
  %device.i95 = getelementptr inbounds %struct.pci_dev, ptr %47, i32 0, i32 8
  %48 = ptrtoint ptr %device.i95 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %device.i95, align 2
  %conv.i96 = zext i16 %49 to i32
  call fastcc void @trace_amdgpu_device_rreg(i32 noundef %conv.i96, i32 noundef 1, i32 noundef %ret.0.i) #17
  br label %amdgpu_device_rreg.exit

amdgpu_device_rreg.exit:                          ; preds = %if.end17.i, %if.else.amdgpu_device_rreg.exit_crit_edge
  %retval.0.i = phi i32 [ %ret.0.i, %if.end17.i ], [ 0, %if.else.amdgpu_device_rreg.exit_crit_edge ]
  %50 = ptrtoint ptr %data.099 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %retval.0.i, ptr %data.099, align 4
  br label %for.inc

for.inc:                                          ; preds = %amdgpu_device_rreg.exit, %if.end13.i85, %if.then34.for.inc_crit_edge
  %data.1 = getelementptr i32, ptr %data.099, i32 1
  %add38 = add i64 %pos.addr.0100, 4
  %cmp25 = icmp ult i64 %add38, %add
  br i1 %cmp25, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.body15.for.end_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %mmio_idx_lock, i32 noundef %call19) #17
  %51 = ptrtoint ptr %idx to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %idx, align 4
  call void @drm_dev_exit(i32 noundef %52) #17
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %idx) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @drm_dev_enter(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %reg, i32 noundef %v, i32 noundef %acc_flags) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev)
  br i1 %call, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %mul = shl i32 %reg, 2
  %rmmio_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 31
  %0 = ptrtoint ptr %rmmio_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rmmio_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %mul, i32 %1)
  %cmp = icmp ult i32 %mul, %1
  br i1 %cmp, label %if.then1, label %if.else11

if.then1:                                         ; preds = %if.end
  %and = and i32 %acc_flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.then1.do.body_crit_edge

if.then1.do.body_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

land.lhs.true:                                    ; preds = %if.then1
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and2 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.body_crit_edge, label %land.lhs.true4

land.lhs.true.do.body_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

land.lhs.true4:                                   ; preds = %land.lhs.true
  %reset_sem = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 143
  %call5 = tail call i32 @down_read_trylock(ptr noundef %reset_sem) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true4.do.body_crit_edge, label %if.then7

land.lhs.true4.do.body_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

if.then7:                                         ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_kiq_wreg(ptr noundef %adev, i32 noundef %reg, i32 noundef %v) #17
  tail call void @up_read(ptr noundef %reset_sem) #17
  br label %if.end13

do.body:                                          ; preds = %land.lhs.true4.do.body_crit_edge, %land.lhs.true.do.body_crit_edge, %if.then1.do.body_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !770
  tail call void @arm_heavy_mb() #17
  %4 = tail call i32 @llvm.bswap.i32(i32 %v)
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %5 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %rmmio, align 8
  %add.ptr = getelementptr i8, ptr %6, i32 %mul
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %4) #17, !srcloc !771
  br label %if.end13

if.else11:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %pcie_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 40
  %7 = ptrtoint ptr %pcie_wreg to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pcie_wreg, align 4
  tail call void %8(ptr noundef %adev, i32 noundef %mul, i32 noundef %v) #17
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %do.body, %if.then7
  %pdev = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %9 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pdev, align 4
  %device = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 8
  %11 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %device, align 2
  %conv = zext i16 %12 to i32
  tail call fastcc void @trace_amdgpu_device_wreg(i32 noundef %conv, i32 noundef %reg, i32 noundef %v)
  br label %return

return:                                           ; preds = %if.end13, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %reg, i32 noundef %acc_flags) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev)
  br i1 %call, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %mul = shl i32 %reg, 2
  %rmmio_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 31
  %0 = ptrtoint ptr %rmmio_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rmmio_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %mul, i32 %1)
  %cmp = icmp ult i32 %mul, %1
  br i1 %cmp, label %if.then1, label %if.else14

if.then1:                                         ; preds = %if.end
  %and = and i32 %acc_flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.then1.if.else_crit_edge

if.then1.if.else_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true:                                    ; preds = %if.then1
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and2 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true4

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true4:                                   ; preds = %land.lhs.true
  %reset_sem = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 143
  %call5 = tail call i32 @down_read_trylock(ptr noundef %reset_sem) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true4.if.else_crit_edge, label %if.then7

land.lhs.true4.if.else_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then7:                                         ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  %call8 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %adev, i32 noundef %reg) #17
  tail call void @up_read(ptr noundef %reset_sem) #17
  br label %if.end17

if.else:                                          ; preds = %land.lhs.true4.if.else_crit_edge, %land.lhs.true.if.else_crit_edge, %if.then1.if.else_crit_edge
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %4 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rmmio, align 8
  %add.ptr = getelementptr i8, ptr %5, i32 %mul
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #17, !srcloc !772
  %7 = tail call i32 @llvm.bswap.i32(i32 %6)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !773
  br label %if.end17

if.else14:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %pcie_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 39
  %8 = ptrtoint ptr %pcie_rreg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pcie_rreg, align 8
  %call16 = tail call i32 %9(ptr noundef %adev, i32 noundef %mul) #17
  br label %if.end17

if.end17:                                         ; preds = %if.else14, %if.else, %if.then7
  %ret.0 = phi i32 [ %7, %if.else ], [ %call8, %if.then7 ], [ %call16, %if.else14 ]
  %pdev = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %10 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev, align 4
  %device = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %device, align 2
  %conv = zext i16 %13 to i32
  tail call fastcc void @trace_amdgpu_device_rreg(i32 noundef %conv, i32 noundef %reg, i32 noundef %ret.0)
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %if.end17 ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_dev_exit(i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @amdgpu_device_aper_access(ptr nocapture readnone %adev, i64 %pos, ptr nocapture readnone %buf, i32 %size, i1 zeroext %write) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_vram_access(ptr noundef %adev, i64 noundef %pos, ptr nocapture noundef %buf, i32 noundef %size, i1 noundef zeroext %write) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %tobool1.not = icmp eq i32 %size, 0
  br i1 %tobool1.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_device_mm_access(ptr noundef %adev, i64 noundef %pos, ptr noundef %buf, i32 noundef %size, i1 noundef zeroext %write)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %no_hw_access = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 168
  %0 = ptrtoint ptr %no_hw_access to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %no_hw_access, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %5, 15728640
  %6 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i47 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i47 to ptr
  %preempt_count.i48 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i48 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i48, align 4
  %and2 = and i32 %9, 983040
  %or = or i32 %and2, %and
  %10 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i49 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i49 to ptr
  %preempt_count.i50 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i50 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i50, align 4
  %and5 = and i32 %13, 256
  %or6 = or i32 %or, %and5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6)
  %tobool7.not = icmp eq i32 %or6, 0
  br i1 %tobool7.not, label %if.then8, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.then8:                                         ; preds = %if.end
  %reset_sem = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 143
  %call9 = tail call i32 @down_read_trylock(ptr noundef %reset_sem) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %do.body, label %if.then11

if.then11:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @up_read(ptr noundef %reset_sem) #17
  br label %return

do.body:                                          ; preds = %if.then8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %14 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool13.not = icmp eq i32 %14, 0
  br i1 %tobool13.not, label %do.body.return_crit_edge, label %land.rhs

do.body.return_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

land.rhs:                                         ; preds = %do.body
  %dep_map = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 143, i32 6
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.return_crit_edge, !prof !768

land.rhs.return_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.38, i32 noundef 430, i32 noundef 9, ptr noundef null) #17
  br label %return

return:                                           ; preds = %do.end, %land.rhs.return_crit_edge, %do.body.return_crit_edge, %if.then11, %if.end.return_crit_edge, %entry.return_crit_edge
  %15 = xor i1 %tobool.not, true
  ret i1 %15
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @down_read_trylock(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_kiq_rreg(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_amdgpu_device_rreg(i32 noundef %did, i32 noundef %reg, i32 noundef %value) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_amdgpu_device_rreg, i32 0, i32 1), ptr blockaddress(@trace_amdgpu_device_rreg, %do.body)) #17
          to label %if.end48 [label %do.body], !srcloc !774

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !775

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.271, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  %9 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !776
  %call42 = tail call i32 @__traceiter_amdgpu_device_rreg(ptr noundef null, i32 noundef %did, i32 noundef %reg, i32 noundef %value) #17
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !777
  %13 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !775

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.271, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !778
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_amdgpu_device_rreg, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_amdgpu_device_rreg, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_amdgpu_device_rreg.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @trace_amdgpu_device_rreg.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.269, i32 noundef 55, ptr noundef nonnull @.str.270) #17
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !779
  %31 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @amdgpu_mm_rreg8(ptr noundef %adev, i32 noundef %offset) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev)
  br i1 %call, label %entry.do.end6_crit_edge, label %if.end

entry.do.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end6

if.end:                                           ; preds = %entry
  %rmmio_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 31
  %0 = ptrtoint ptr %rmmio_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rmmio_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %offset)
  %cmp = icmp ugt i32 %1, %offset
  br i1 %cmp, label %if.then1, label %do.body

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %2 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rmmio, align 8
  %add.ptr = getelementptr i8, ptr %3, i32 %offset
  %4 = tail call i8 asm sideeffect "ldrb $0, $1", "=r,*Qo"(ptr elementtype(i8) %add.ptr) #17, !srcloc !780
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !781
  br label %do.end6

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 492, 0\0A.popsection", ""() #17, !srcloc !782
  unreachable

do.end6:                                          ; preds = %if.then1, %entry.do.end6_crit_edge
  %retval.0 = phi i8 [ %4, %if.then1 ], [ 0, %entry.do.end6_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_mm_wreg8(ptr noundef %adev, i32 noundef %offset, i8 noundef zeroext %value) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev)
  br i1 %call, label %entry.if.end6_crit_edge, label %if.end

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.end:                                           ; preds = %entry
  %rmmio_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 31
  %0 = ptrtoint ptr %rmmio_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rmmio_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %offset)
  %cmp = icmp ugt i32 %1, %offset
  br i1 %cmp, label %do.body, label %do.body2

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !783
  tail call void @arm_heavy_mb() #17
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %2 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rmmio, align 8
  %add.ptr = getelementptr i8, ptr %3, i32 %offset
  tail call void asm sideeffect "strb $1, $0", "*Qo,r"(ptr elementtype(i8) %add.ptr, i8 %value) #17, !srcloc !784
  br label %if.end6

do.body2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 518, 0\0A.popsection", ""() #17, !srcloc !785
  unreachable

if.end6:                                          ; preds = %do.body, %entry.if.end6_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_kiq_wreg(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_amdgpu_device_wreg(i32 noundef %did, i32 noundef %reg, i32 noundef %value) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_amdgpu_device_wreg, i32 0, i32 1), ptr blockaddress(@trace_amdgpu_device_wreg, %do.body)) #17
          to label %if.end48 [label %do.body], !srcloc !774

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !775

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.271, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  %9 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !786
  %call42 = tail call i32 @__traceiter_amdgpu_device_wreg(ptr noundef null, i32 noundef %did, i32 noundef %reg, i32 noundef %value) #17
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !787
  %13 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !775

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.271, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !778
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_amdgpu_device_wreg, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_amdgpu_device_wreg, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_amdgpu_device_wreg.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @trace_amdgpu_device_wreg.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.269, i32 noundef 74, ptr noundef nonnull @.str.270) #17
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !779
  %31 = tail call i32 @llvm.read_register.i32(metadata !756) #17
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_mm_wreg_mmio_rlc(ptr noundef %adev, i32 noundef %reg, i32 noundef %v) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev)
  br i1 %call, label %entry.if.end28_crit_edge, label %if.end

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28

if.end:                                           ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %2 = and i32 %1, 20
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %2)
  %3 = icmp eq i32 %2, 4
  br i1 %3, label %land.lhs.true5, label %if.end.if.else_crit_edge

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true5:                                   ; preds = %if.end
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true5.if.else_crit_edge, label %land.lhs.true7

land.lhs.true5.if.else_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %is_rlcg_access_range = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 14
  %6 = ptrtoint ptr %is_rlcg_access_range to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %is_rlcg_access_range, align 4
  %tobool11.not = icmp eq ptr %7, null
  br i1 %tobool11.not, label %land.lhs.true7.if.else_crit_edge, label %if.then12

land.lhs.true7.if.else_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then12:                                        ; preds = %land.lhs.true7
  %call17 = tail call zeroext i1 %7(ptr noundef %adev, i32 noundef %reg) #17
  br i1 %call17, label %if.then18, label %if.then12.if.end28_crit_edge

if.then12.if.end28_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28

if.then18:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %9, i32 0, i32 12
  %10 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_wreg, align 4
  tail call void %11(ptr noundef %adev, i32 noundef %reg, i32 noundef %v, i32 noundef 0, i32 noundef 0) #17
  br label %if.end28

if.else:                                          ; preds = %land.lhs.true7.if.else_crit_edge, %land.lhs.true5.if.else_crit_edge, %if.end.if.else_crit_edge
  %mul = shl i32 %reg, 2
  %rmmio_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 31
  %12 = ptrtoint ptr %rmmio_size to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rmmio_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %mul, i32 %13)
  %cmp.not = icmp ult i32 %mul, %13
  br i1 %cmp.not, label %do.body, label %if.then23

if.then23:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %pcie_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 40
  %14 = ptrtoint ptr %pcie_wreg to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pcie_wreg, align 4
  tail call void %15(ptr noundef %adev, i32 noundef %mul, i32 noundef %v) #17
  br label %if.end28

do.body:                                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !788
  tail call void @arm_heavy_mb() #17
  %16 = tail call i32 @llvm.bswap.i32(i32 %v)
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %17 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rmmio, align 8
  %add.ptr = getelementptr i8, ptr %18, i32 %mul
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %16) #17, !srcloc !771
  br label %if.end28

if.end28:                                         ; preds = %do.body, %if.then23, %if.then18, %if.then12.if.end28_crit_edge, %entry.if.end28_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_mm_rdoorbell(ptr noundef %adev, i32 noundef %index) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev)
  br i1 %call, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %num_doorbells = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 3
  %0 = ptrtoint ptr %num_doorbells to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_doorbells, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %index)
  %cmp = icmp ugt i32 %1, %index
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %ptr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 2
  %2 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ptr, align 4
  %add.ptr = getelementptr i32, ptr %3, i32 %index
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #17, !srcloc !772
  %5 = tail call i32 @llvm.bswap.i32(i32 %4)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !789
  br label %return

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.39, i32 noundef %index) #17
  br label %return

return:                                           ; preds = %if.else, %if.then1, %entry.return_crit_edge
  %retval.0 = phi i32 [ %5, %if.then1 ], [ 0, %if.else ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__drm_err(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_mm_wdoorbell(ptr noundef %adev, i32 noundef %index, i32 noundef %v) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev)
  br i1 %call, label %entry.if.end3_crit_edge, label %if.end

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end3

if.end:                                           ; preds = %entry
  %num_doorbells = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 3
  %0 = ptrtoint ptr %num_doorbells to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_doorbells, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %index)
  %cmp = icmp ugt i32 %1, %index
  br i1 %cmp, label %do.body, label %if.else

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !790
  tail call void @arm_heavy_mb() #17
  %2 = tail call i32 @llvm.bswap.i32(i32 %v)
  %ptr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 2
  %3 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ptr, align 4
  %add.ptr = getelementptr i32, ptr %4, i32 %index
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %2) #17, !srcloc !771
  br label %if.end3

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.40, i32 noundef %index) #17
  br label %if.end3

if.end3:                                          ; preds = %if.else, %do.body, %entry.if.end3_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @amdgpu_mm_rdoorbell64(ptr noundef %adev, i32 noundef %index) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev)
  br i1 %call, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %num_doorbells = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 3
  %0 = ptrtoint ptr %num_doorbells to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_doorbells, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %index)
  %cmp = icmp ugt i32 %1, %index
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %ptr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 2
  %2 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ptr, align 4
  %add.ptr = getelementptr i32, ptr %3, i32 %index
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr, i32 noundef 8) #17
  %call.i = tail call i64 @generic_atomic64_read(ptr noundef %add.ptr) #17
  br label %return

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.39, i32 noundef %index) #17
  br label %return

return:                                           ; preds = %if.else, %if.then1, %entry.return_crit_edge
  %retval.0 = phi i64 [ %call.i, %if.then1 ], [ 0, %if.else ], [ 0, %entry.return_crit_edge ]
  ret i64 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_mm_wdoorbell64(ptr noundef %adev, i32 noundef %index, i64 noundef %v) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @amdgpu_device_skip_hw_access(ptr noundef %adev)
  br i1 %call, label %entry.if.end3_crit_edge, label %if.end

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end3

if.end:                                           ; preds = %entry
  %num_doorbells = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 3
  %0 = ptrtoint ptr %num_doorbells to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_doorbells, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %index)
  %cmp = icmp ugt i32 %1, %index
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %ptr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 2
  %2 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ptr, align 4
  %add.ptr = getelementptr i32, ptr %3, i32 %index
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr, i32 noundef 8) #17
  tail call void @generic_atomic64_set(ptr noundef %add.ptr, i64 noundef %v) #17
  br label %if.end3

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.40, i32 noundef %index) #17
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then1, %entry.if.end3_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_indirect_rreg(ptr noundef %adev, i32 noundef %pcie_index, i32 noundef %pcie_data, i32 noundef %reg_addr) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 38
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %pcie_idx_lock) #17
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %0 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rmmio, align 8
  %mul = shl i32 %pcie_index, 2
  %add.ptr = getelementptr i8, ptr %1, i32 %mul
  %mul6 = shl i32 %pcie_data, 2
  %add.ptr7 = getelementptr i8, ptr %1, i32 %mul6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !791
  tail call void @arm_heavy_mb() #17
  %2 = tail call i32 @llvm.bswap.i32(i32 %reg_addr)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %2) #17, !srcloc !771
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !792
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr7) #17, !srcloc !772
  %5 = tail call i32 @llvm.bswap.i32(i32 %4)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !793
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %pcie_idx_lock, i32 noundef %call2) #17
  ret i32 %5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @amdgpu_device_indirect_rreg64(ptr noundef %adev, i32 noundef %pcie_index, i32 noundef %pcie_data, i32 noundef %reg_addr) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 38
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %pcie_idx_lock) #17
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %0 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rmmio, align 8
  %mul = shl i32 %pcie_index, 2
  %add.ptr = getelementptr i8, ptr %1, i32 %mul
  %mul6 = shl i32 %pcie_data, 2
  %add.ptr7 = getelementptr i8, ptr %1, i32 %mul6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !794
  tail call void @arm_heavy_mb() #17
  %2 = tail call i32 @llvm.bswap.i32(i32 %reg_addr)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %2) #17, !srcloc !771
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !795
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr7) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !796
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !797
  tail call void @arm_heavy_mb() #17
  %add = add i32 %reg_addr, 4
  %5 = tail call i32 @llvm.bswap.i32(i32 %add)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %5) #17, !srcloc !771
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !798
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr7) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !799
  %8 = zext i32 %7 to i64
  %9 = zext i32 %4 to i64
  %10 = shl nuw i64 %9, 32
  %11 = or i64 %10, %8
  %12 = tail call i64 @llvm.bswap.i64(i64 %11)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %pcie_idx_lock, i32 noundef %call2) #17
  ret i64 %12
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_indirect_wreg(ptr noundef %adev, i32 noundef %pcie_index, i32 noundef %pcie_data, i32 noundef %reg_addr, i32 noundef %reg_data) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 38
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %pcie_idx_lock) #17
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %0 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rmmio, align 8
  %mul = shl i32 %pcie_index, 2
  %add.ptr = getelementptr i8, ptr %1, i32 %mul
  %mul6 = shl i32 %pcie_data, 2
  %add.ptr7 = getelementptr i8, ptr %1, i32 %mul6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !800
  tail call void @arm_heavy_mb() #17
  %2 = tail call i32 @llvm.bswap.i32(i32 %reg_addr)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %2) #17, !srcloc !771
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !801
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !802
  tail call void @arm_heavy_mb() #17
  %4 = tail call i32 @llvm.bswap.i32(i32 %reg_data)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7, i32 %4) #17, !srcloc !771
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr7) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !803
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %pcie_idx_lock, i32 noundef %call2) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_indirect_wreg64(ptr noundef %adev, i32 noundef %pcie_index, i32 noundef %pcie_data, i32 noundef %reg_addr, i64 noundef %reg_data) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 38
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %pcie_idx_lock) #17
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %0 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rmmio, align 8
  %mul = shl i32 %pcie_index, 2
  %add.ptr = getelementptr i8, ptr %1, i32 %mul
  %mul6 = shl i32 %pcie_data, 2
  %add.ptr7 = getelementptr i8, ptr %1, i32 %mul6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !804
  tail call void @arm_heavy_mb() #17
  %2 = tail call i32 @llvm.bswap.i32(i32 %reg_addr)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %2) #17, !srcloc !771
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !805
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !806
  tail call void @arm_heavy_mb() #17
  %conv17 = trunc i64 %reg_data to i32
  %4 = tail call i32 @llvm.bswap.i32(i32 %conv17)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7, i32 %4) #17, !srcloc !771
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr7) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !807
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !808
  tail call void @arm_heavy_mb() #17
  %add = add i32 %reg_addr, 4
  %6 = tail call i32 @llvm.bswap.i32(i32 %add)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %6) #17, !srcloc !771
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !809
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !810
  tail call void @arm_heavy_mb() #17
  %shr = lshr i64 %reg_data, 32
  %conv34 = trunc i64 %shr to i32
  %8 = tail call i32 @llvm.bswap.i32(i32 %conv34)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7, i32 %8) #17, !srcloc !771
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr7) #17, !srcloc !772
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !811
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %pcie_idx_lock, i32 noundef %call2) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_program_register_sequence(ptr noundef %adev, ptr nocapture noundef readonly %registers, i32 noundef %array_size) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %rem = urem i32 %array_size, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %tobool.not = icmp eq i32 %rem, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %array_size)
  %cmp36 = icmp ne i32 %array_size, 0
  %or.cond = and i1 %tobool.not, %cmp36
  br i1 %or.cond, label %for.body.lr.ph, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %family = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 6
  br label %for.body

for.body:                                         ; preds = %if.end13.for.body_crit_edge, %for.body.lr.ph
  %i.037 = phi i32 [ 0, %for.body.lr.ph ], [ %add14, %if.end13.for.body_crit_edge ]
  %arrayidx = getelementptr i32, ptr %registers, i32 %i.037
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add1 = add nuw i32 %i.037, 1
  %arrayidx2 = getelementptr i32, ptr %registers, i32 %add1
  %2 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx2, align 4
  %add3 = add i32 %i.037, 2
  %arrayidx4 = getelementptr i32, ptr %registers, i32 %add3
  %4 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp5 = icmp eq i32 %3, -1
  br i1 %cmp5, label %for.body.if.end13_crit_edge, label %if.else

for.body.if.end13_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end13

if.else:                                          ; preds = %for.body
  %call = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %1, i32 noundef 0)
  %neg = xor i32 %3, -1
  %and = and i32 %call, %neg
  %6 = ptrtoint ptr %family to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %family, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 140, i32 %7)
  %cmp7 = icmp ugt i32 %7, 140
  br i1 %cmp7, label %if.then8, label %if.else10

if.then8:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %and9 = and i32 %5, %3
  %or = or i32 %and, %and9
  br label %if.end13

if.else10:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %or11 = or i32 %and, %5
  br label %if.end13

if.end13:                                         ; preds = %if.else10, %if.then8, %for.body.if.end13_crit_edge
  %tmp.0 = phi i32 [ %or, %if.then8 ], [ %or11, %if.else10 ], [ %5, %for.body.if.end13_crit_edge ]
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %1, i32 noundef %tmp.0, i32 noundef 0)
  %add14 = add i32 %i.037, 3
  %cmp = icmp ult i32 %add14, %array_size
  br i1 %cmp, label %if.end13.for.body_crit_edge, label %if.end13.cleanup_crit_edge

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end13.for.body_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

cleanup:                                          ; preds = %if.end13.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_pci_config_reset(ptr nocapture noundef readonly %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %call = tail call i32 @pci_write_config_dword(ptr noundef %1, i32 noundef 124, i32 noundef 970319979) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_write_config_dword(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_pci_reset(ptr nocapture noundef readonly %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %call = tail call i32 @pci_reset_function(ptr noundef %1) #17
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_reset_function(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_wb_get(ptr noundef %adev, ptr nocapture noundef writeonly %wb) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %used = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 4
  %num_wb = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 3
  %0 = ptrtoint ptr %num_wb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_wb, align 8
  %call = tail call i32 @_find_first_zero_bit_be(ptr noundef %used, i32 noundef %1) #17
  %2 = ptrtoint ptr %num_wb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_wb, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %call, i32 %3)
  %cmp = icmp ult i32 %call, %3
  br i1 %cmp, label %if.then, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %rem.i = and i32 %call, 31
  %shl.i = shl nuw i32 1, %rem.i
  %div2.i = lshr i32 %call, 5
  %add.ptr.i = getelementptr i32, ptr %used, i32 %div2.i
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i, align 4
  %or.i = or i32 %5, %shl.i
  store i32 %or.i, ptr %add.ptr.i, align 4
  %shl = shl i32 %call, 3
  %6 = ptrtoint ptr %wb to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %shl, ptr %wb, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_zero_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @amdgpu_device_wb_free(ptr nocapture noundef %adev, i32 noundef %wb) local_unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %shr = lshr i32 %wb, 3
  %num_wb = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 3
  %0 = ptrtoint ptr %num_wb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_wb, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %1)
  %cmp = icmp ult i32 %shr, %1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %used = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 4
  %rem.i = and i32 %shr, 31
  %shl.i = shl nuw i32 1, %rem.i
  %div2.i = lshr i32 %wb, 8
  %add.ptr.i = getelementptr i32, ptr %used, i32 %div2.i
  %neg.i = xor i32 %shl.i, -1
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i, align 4
  %and.i = and i32 %3, %neg.i
  store i32 %and.i, ptr %add.ptr.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_resize_fb_bar(ptr noundef %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %real_vram_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 15
  %0 = ptrtoint ptr %real_vram_size to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %real_vram_size, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %1)
  %tobool3.not = icmp eq i64 %1, 0
  br i1 %tobool3.not, label %if.end.if.end16_crit_edge, label %land.lhs.true

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

land.lhs.true:                                    ; preds = %if.end
  %pdev = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %end = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 47, i32 0, i32 1
  %6 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp = icmp eq i32 %7, 0
  br i1 %cmp, label %land.lhs.true.cond.end_crit_edge, label %cond.false

land.lhs.true.cond.end_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  %resource = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 47
  %8 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %resource, align 8
  %sub = add i32 %7, 1
  %add = sub i32 %sub, %9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %land.lhs.true.cond.end_crit_edge
  %cond = phi i32 [ %add, %cond.false ], [ 0, %land.lhs.true.cond.end_crit_edge ]
  %conv = zext i32 %cond to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %conv)
  %cmp13.not = icmp ugt i64 %1, %conv
  br i1 %cmp13.not, label %cond.end.if.end16_crit_edge, label %cond.end.cleanup_crit_edge

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cond.end.if.end16_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

if.end16:                                         ; preds = %cond.end.if.end16_crit_edge, %if.end.if.end16_crit_edge
  %pdev17 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %10 = ptrtoint ptr %pdev17 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev17, align 4
  %bus = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %bus, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.cond.while.cond_crit_edge, %if.end16
  %root.0 = phi ptr [ %13, %if.end16 ], [ %15, %while.cond.while.cond_crit_edge ]
  %parent = getelementptr inbounds %struct.pci_bus, ptr %root.0, i32 0, i32 1
  %14 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %parent, align 8
  %tobool18.not = icmp eq ptr %15, null
  br i1 %tobool18.not, label %while.cond.for.cond_crit_edge, label %while.cond.while.cond_crit_edge

while.cond.while.cond_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond

while.cond.for.cond_crit_edge:                    ; preds = %while.cond
  br label %for.cond

for.cond:                                         ; preds = %for.cond.for.cond_crit_edge, %while.cond.for.cond_crit_edge
  %i.0 = phi i32 [ %inc, %for.cond.for.cond_crit_edge ], [ 0, %while.cond.for.cond_crit_edge ]
  %call20 = tail call ptr @pci_bus_resource_n(ptr noundef %root.0, i32 noundef %i.0) #17
  %tobool21.not = icmp eq ptr %call20, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %i.0)
  %cmp22 = icmp ugt i32 %i.0, 3
  %16 = and i1 %cmp22, %tobool21.not
  %inc = add i32 %i.0, 1
  br i1 %16, label %for.cond.cleanup_crit_edge, label %for.cond.for.cond_crit_edge

for.cond.for.cond_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cleanup:                                          ; preds = %for.cond.cleanup_crit_edge, %cond.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_bus_resource_n(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @amdgpu_device_doorbell_init(ptr noundef %adev) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %asic_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %0 = ptrtoint ptr %asic_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %asic_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %1)
  %cmp = icmp ult i32 %1, 5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %doorbell = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60
  %2 = call ptr @memset(ptr %doorbell, i32 0, i32 16)
  br label %return

if.end:                                           ; preds = %entry
  %pdev = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %3 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pdev, align 4
  %flags = getelementptr %struct.pci_dev, ptr %4, i32 0, i32 47, i32 2, i32 3
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 4
  %and = and i32 %6, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end5, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end5:                                          ; preds = %if.end
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %7 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %asic_funcs, align 4
  %init_doorbell_index = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %8, i32 0, i32 15
  %9 = ptrtoint ptr %init_doorbell_index to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %init_doorbell_index, align 4
  tail call void %10(ptr noundef %adev) #17
  %11 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pdev, align 4
  %arrayidx8 = getelementptr %struct.pci_dev, ptr %12, i32 0, i32 47, i32 2
  %13 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx8, align 8
  %doorbell9 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60
  %15 = ptrtoint ptr %doorbell9 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %doorbell9, align 4
  %end = getelementptr %struct.pci_dev, ptr %12, i32 0, i32 47, i32 2, i32 1
  %16 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp14 = icmp eq i32 %17, 0
  br i1 %cmp14, label %if.end5.cond.end_crit_edge, label %cond.false

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.false:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %18 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx8, align 8
  %sub = add i32 %17, 1
  %add = sub i32 %sub, %19
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %add, %cond.false ], [ 0, %if.end5.cond.end_crit_edge ]
  %size24 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 1
  %20 = ptrtoint ptr %size24 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %cond, ptr %size24, align 4
  %div83 = lshr i32 %cond, 2
  %max_assignment = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 144, i32 19
  %21 = ptrtoint ptr %max_assignment to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %max_assignment, align 4
  %add27 = add i32 %22, 1
  %23 = tail call i32 @llvm.umin.i32(i32 %div83, i32 %add27)
  %num_doorbells34 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 3
  %24 = ptrtoint ptr %num_doorbells34 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %num_doorbells34, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp37 = icmp eq i32 %23, 0
  br i1 %cmp37, label %cond.end.return_crit_edge, label %if.end39

cond.end.return_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end39:                                         ; preds = %cond.end
  %25 = ptrtoint ptr %asic_type to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %asic_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %26)
  %cmp41 = icmp ugt i32 %26, 18
  br i1 %cmp41, label %if.then42, label %if.end39.if.end46_crit_edge

if.end39.if.end46_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end46

if.then42:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #19
  %add45 = add nuw nsw i32 %23, 1024
  %27 = ptrtoint ptr %num_doorbells34 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %add45, ptr %num_doorbells34, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then42, %if.end39.if.end46_crit_edge
  %28 = ptrtoint ptr %num_doorbells34 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_doorbells34, align 4
  %mul = shl i32 %29, 2
  %call = tail call ptr @ioremap(i32 noundef %14, i32 noundef %mul) #17
  %ptr52 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 2
  %30 = ptrtoint ptr %ptr52 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %call, ptr %ptr52, align 4
  %cmp55 = icmp eq ptr %call, null
  %. = select i1 %cmp55, i32 -12, i32 0
  br label %return

return:                                           ; preds = %if.end46, %cond.end.return_crit_edge, %if.end.return_crit_edge, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ -22, %if.end.return_crit_edge ], [ -22, %cond.end.return_crit_edge ], [ %., %if.end46 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_need_post(ptr noundef %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup35_crit_edge

entry.cleanup35_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup35

if.end:                                           ; preds = %entry
  %and3 = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.end.if.end17_crit_edge, label %if.then5

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.then5:                                         ; preds = %if.end
  %asic_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %2 = ptrtoint ptr %asic_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %asic_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %3)
  %cmp = icmp eq i32 %3, 12
  br i1 %cmp, label %if.then6, label %if.then5.if.end17_crit_edge

if.then5.if.end17_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.then6:                                         ; preds = %if.then5
  %fw = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 16
  %4 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adev, align 8
  %call = tail call i32 @request_firmware(ptr noundef %fw, ptr noundef nonnull @.str.44, ptr noundef %5) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool7.not = icmp eq i32 %call, 0
  br i1 %tobool7.not, label %if.end9, label %if.then6.cleanup35_crit_edge

if.then6.cleanup35_crit_edge:                     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup35

if.end9:                                          ; preds = %if.then6
  %6 = ptrtoint ptr %fw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fw, align 8
  %data = getelementptr inbounds %struct.firmware, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %data, align 4
  %add.ptr = getelementptr i32, ptr %9, i32 69
  %10 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1445375, i32 %11)
  %cmp12 = icmp ugt i32 %11, 1445375
  br i1 %cmp12, label %if.end9.if.end17_crit_edge, label %if.end9.cleanup35_crit_edge

if.end9.cleanup35_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup35

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.end17:                                         ; preds = %if.end9.if.end17_crit_edge, %if.then5.if.end17_crit_edge, %if.end.if.end17_crit_edge
  %pending_reset = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 9
  %12 = ptrtoint ptr %pending_reset to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %pending_reset, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool18.not = icmp eq i8 %13, 0
  br i1 %tobool18.not, label %if.end20, label %if.end17.cleanup35_crit_edge

if.end17.cleanup35_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup35

if.end20:                                         ; preds = %if.end17
  %has_hw_reset = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 135
  %14 = ptrtoint ptr %has_hw_reset to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %has_hw_reset, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool21.not = icmp eq i8 %15, 0
  br i1 %tobool21.not, label %if.end24, label %if.then22

if.then22:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #19
  %16 = ptrtoint ptr %has_hw_reset to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 0, ptr %has_hw_reset, align 4
  br label %cleanup35

if.end24:                                         ; preds = %if.end20
  %asic_type25 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %17 = ptrtoint ptr %asic_type25 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %asic_type25, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %18)
  %cmp26 = icmp ugt i32 %18, 4
  br i1 %cmp26, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #19
  %call28 = tail call zeroext i1 @amdgpu_atombios_scratch_need_asic_init(ptr noundef %adev) #17
  br label %cleanup35

if.end29:                                         ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #19
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %19 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %asic_funcs, align 4
  %get_config_memsize = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %20, i32 0, i32 11
  %21 = ptrtoint ptr %get_config_memsize to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %get_config_memsize, align 4
  %call30 = tail call i32 %22(ptr noundef %adev) #17
  %23 = add i32 %call30, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %23)
  %switch.selectcmp = icmp ult i32 %23, 2
  br label %cleanup35

cleanup35:                                        ; preds = %if.end29, %if.then27, %if.then22, %if.end17.cleanup35_crit_edge, %if.end9.cleanup35_crit_edge, %if.then6.cleanup35_crit_edge, %entry.cleanup35_crit_edge
  %retval.1 = phi i1 [ true, %if.then22 ], [ %call28, %if.then27 ], [ true, %if.end9.cleanup35_crit_edge ], [ false, %entry.cleanup35_crit_edge ], [ false, %if.end17.cleanup35_crit_edge ], [ true, %if.then6.cleanup35_crit_edge ], [ %switch.selectcmp, %if.end29 ]
  ret i1 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_firmware(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_atombios_scratch_need_asic_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_ip_set_clockgating_state(ptr noundef %dev, i32 noundef %block_type, i32 noundef %state) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %dev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp38 = icmp sgt i32 %1, 0
  br i1 %cmp38, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %r.041 = phi i32 [ %r.1, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.039 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %dev, i32 0, i32 122, i32 %i.039
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %for.body
  %version = getelementptr %struct.amdgpu_device, ptr %dev, i32 0, i32 122, i32 %i.039, i32 1
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %version, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %block_type)
  %cmp3.not = icmp eq i32 %7, %block_type
  br i1 %cmp3.not, label %if.end5, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end5:                                          ; preds = %if.end
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %5, i32 0, i32 4
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %set_clockgating_state = getelementptr inbounds %struct.amd_ip_funcs, ptr %9, i32 0, i32 17
  %10 = ptrtoint ptr %set_clockgating_state to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %set_clockgating_state, align 4
  %tobool9.not = icmp eq ptr %11, null
  br i1 %tobool9.not, label %if.end5.for.inc_crit_edge, label %if.end11

if.end5.for.inc_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end11:                                         ; preds = %if.end5
  %call = tail call i32 %11(ptr noundef %dev, i32 noundef %state) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool17.not = icmp eq i32 %call, 0
  br i1 %tobool17.not, label %if.end11.for.inc_crit_edge, label %if.then18

if.end11.for.inc_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then18:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  %12 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %version, align 4
  %funcs22 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %13, i32 0, i32 4
  %14 = ptrtoint ptr %funcs22 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %funcs22, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.45, ptr noundef %17, i32 noundef %call) #17
  br label %for.inc

for.inc:                                          ; preds = %if.then18, %if.end11.for.inc_crit_edge, %if.end5.for.inc_crit_edge, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %r.1 = phi i32 [ %r.041, %if.end.for.inc_crit_edge ], [ %call, %if.then18 ], [ 0, %if.end11.for.inc_crit_edge ], [ %r.041, %if.end5.for.inc_crit_edge ], [ %r.041, %for.body.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.039, 1
  %18 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_ip_blocks, align 8
  %cmp = icmp slt i32 %inc, %19
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %r.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %r.1, %for.inc.for.end_crit_edge ]
  ret i32 %r.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_ip_set_powergating_state(ptr noundef %dev, i32 noundef %block_type, i32 noundef %state) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %dev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp38 = icmp sgt i32 %1, 0
  br i1 %cmp38, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %r.041 = phi i32 [ %r.1, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.039 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %dev, i32 0, i32 122, i32 %i.039
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %for.body
  %version = getelementptr %struct.amdgpu_device, ptr %dev, i32 0, i32 122, i32 %i.039, i32 1
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %version, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %block_type)
  %cmp3.not = icmp eq i32 %7, %block_type
  br i1 %cmp3.not, label %if.end5, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end5:                                          ; preds = %if.end
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %5, i32 0, i32 4
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %set_powergating_state = getelementptr inbounds %struct.amd_ip_funcs, ptr %9, i32 0, i32 18
  %10 = ptrtoint ptr %set_powergating_state to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %set_powergating_state, align 4
  %tobool9.not = icmp eq ptr %11, null
  br i1 %tobool9.not, label %if.end5.for.inc_crit_edge, label %if.end11

if.end5.for.inc_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end11:                                         ; preds = %if.end5
  %call = tail call i32 %11(ptr noundef %dev, i32 noundef %state) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool17.not = icmp eq i32 %call, 0
  br i1 %tobool17.not, label %if.end11.for.inc_crit_edge, label %if.then18

if.end11.for.inc_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then18:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  %12 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %version, align 4
  %funcs22 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %13, i32 0, i32 4
  %14 = ptrtoint ptr %funcs22 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %funcs22, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.46, ptr noundef %17, i32 noundef %call) #17
  br label %for.inc

for.inc:                                          ; preds = %if.then18, %if.end11.for.inc_crit_edge, %if.end5.for.inc_crit_edge, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %r.1 = phi i32 [ %r.041, %if.end.for.inc_crit_edge ], [ %call, %if.then18 ], [ 0, %if.end11.for.inc_crit_edge ], [ %r.041, %if.end5.for.inc_crit_edge ], [ %r.041, %for.body.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.039, 1
  %18 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_ip_blocks, align 8
  %cmp = icmp slt i32 %inc, %19
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %r.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %r.1, %for.inc.for.end_crit_edge ]
  ret i32 %r.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_ip_get_clockgating_state(ptr noundef %adev, ptr noundef %flags) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp19 = icmp sgt i32 %1, 0
  br i1 %cmp19, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.020 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.020
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %for.body
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.020, i32 1
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %version, align 4
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %get_clockgating_state = getelementptr inbounds %struct.amd_ip_funcs, ptr %7, i32 0, i32 19
  %8 = ptrtoint ptr %get_clockgating_state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %get_clockgating_state, align 4
  %tobool3.not = icmp eq ptr %9, null
  br i1 %tobool3.not, label %if.end.for.inc_crit_edge, label %if.then4

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %9(ptr noundef %adev, ptr noundef %flags) #17
  br label %for.inc

for.inc:                                          ; preds = %if.then4, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.020, 1
  %10 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_ip_blocks, align 8
  %cmp = icmp slt i32 %inc, %11
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_ip_wait_for_idle(ptr noundef %adev, i32 noundef %block_type) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp22 = icmp sgt i32 %1, 0
  br i1 %cmp22, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.023 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.023
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %for.body
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.023, i32 1
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %version, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %block_type)
  %cmp3 = icmp eq i32 %7, %block_type
  br i1 %cmp3, label %if.then4, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then4:                                         ; preds = %if.end
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %5, i32 0, i32 4
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %wait_for_idle = getelementptr inbounds %struct.amd_ip_funcs, ptr %9, i32 0, i32 12
  %10 = ptrtoint ptr %wait_for_idle to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %wait_for_idle, align 4
  %call = tail call i32 %11(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool8.not = icmp eq i32 %call, 0
  br i1 %tobool8.not, label %if.then4.for.end_crit_edge, label %if.then4.cleanup_crit_edge

if.then4.cleanup_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then4.for.end_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc:                                          ; preds = %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.023, 1
  %exitcond.not = icmp eq i32 %inc, %1
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.then4.for.end_crit_edge, %entry.for.end_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then4.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %for.end ], [ %call, %if.then4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_ip_is_idle(ptr noundef %adev, i32 noundef %block_type) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp17 = icmp sgt i32 %1, 0
  br i1 %cmp17, label %entry.for.body_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.018 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.018
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %for.body
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.018, i32 1
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %version, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %block_type)
  %cmp3 = icmp eq i32 %7, %block_type
  br i1 %cmp3, label %if.then4, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %5, i32 0, i32 4
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %is_idle = getelementptr inbounds %struct.amd_ip_funcs, ptr %9, i32 0, i32 11
  %10 = ptrtoint ptr %is_idle to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %is_idle, align 4
  %call = tail call zeroext i1 %11(ptr noundef %adev) #17
  br label %cleanup

for.inc:                                          ; preds = %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.018, 1
  %exitcond.not = icmp eq i32 %inc, %1
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %call, %if.then4 ], [ true, %entry.cleanup_crit_edge ], [ true, %for.inc.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @amdgpu_device_ip_get_ip_block(ptr noundef readonly %adev, i32 noundef %type) local_unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp11 = icmp sgt i32 %1, 0
  br i1 %cmp11, label %entry.for.body_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.012 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.012, i32 1
  %2 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %version, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %type)
  %cmp2 = icmp eq i32 %5, %type
  br i1 %cmp2, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.012
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.012, 1
  %exitcond.not = icmp eq i32 %inc, %1
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %arrayidx, %if.then ], [ null, %entry.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_ip_block_version_cmp(ptr noundef readonly %adev, i32 noundef %type, i32 noundef %major, i32 noundef %minor) local_unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ip_blocks.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp11.i = icmp sgt i32 %1, 0
  br i1 %cmp11.i, label %entry.for.body.i_crit_edge, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %i.012.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %entry.for.body.i_crit_edge ]
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.012.i, i32 1
  %2 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %version.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %type)
  %cmp2.i = icmp eq i32 %5, %type
  br i1 %cmp2.i, label %amdgpu_device_ip_get_ip_block.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %1
  br i1 %exitcond.not.i, label %for.inc.i.if.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.inc.i.if.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

amdgpu_device_ip_get_ip_block.exit:               ; preds = %for.body.i
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.012.i
  %tobool.not = icmp eq ptr %arrayidx.i, null
  br i1 %tobool.not, label %amdgpu_device_ip_get_ip_block.exit.if.end_crit_edge, label %land.lhs.true

amdgpu_device_ip_get_ip_block.exit.if.end_crit_edge: ; preds = %amdgpu_device_ip_get_ip_block.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true:                                    ; preds = %amdgpu_device_ip_get_ip_block.exit
  %6 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %version.i, align 4
  %major1 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %major1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %major1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %major)
  %cmp = icmp ugt i32 %9, %major
  br i1 %cmp, label %land.lhs.true.cleanup_crit_edge, label %lor.lhs.false

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false:                                    ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %major)
  %cmp4 = icmp eq i32 %9, %major
  br i1 %cmp4, label %land.lhs.true5, label %lor.lhs.false.if.end_crit_edge

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %minor7 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %7, i32 0, i32 2
  %10 = ptrtoint ptr %minor7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %minor7, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %minor)
  %cmp8.not = icmp ult i32 %11, %minor
  br i1 %cmp8.not, label %land.lhs.true5.if.end_crit_edge, label %land.lhs.true5.cleanup_crit_edge

land.lhs.true5.cleanup_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true5.if.end_crit_edge:                  ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %land.lhs.true5.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge, %amdgpu_device_ip_get_ip_block.exit.if.end_crit_edge, %for.inc.i.if.end_crit_edge, %entry.if.end_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end, %land.lhs.true5.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %land.lhs.true5.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_ip_block_add(ptr nocapture noundef %adev, ptr noundef %ip_block_version) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %ip_block_version, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %ip_block_version to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ip_block_version, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values)
  switch i32 %1, label %if.end.do.end_crit_edge [
    i32 11, label %sw.bb
    i32 13, label %sw.bb4
  ]

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end

sw.bb:                                            ; preds = %if.end
  %harvest_ip_mask = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 123
  %3 = ptrtoint ptr %harvest_ip_mask to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %harvest_ip_mask, align 4
  %and = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %sw.bb.do.end_crit_edge, label %sw.bb.return_crit_edge

sw.bb.return_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

sw.bb.do.end_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end

sw.bb4:                                           ; preds = %if.end
  %harvest_ip_mask5 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 123
  %5 = ptrtoint ptr %harvest_ip_mask5 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %harvest_ip_mask5, align 4
  %and6 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %sw.bb4.do.end_crit_edge, label %sw.bb4.return_crit_edge

sw.bb4.return_crit_edge:                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

sw.bb4.do.end_crit_edge:                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end

do.end:                                           ; preds = %sw.bb4.do.end_crit_edge, %sw.bb.do.end_crit_edge, %if.end.do.end_crit_edge
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %7 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_ip_blocks, align 8
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %ip_block_version, i32 0, i32 4
  %9 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %funcs, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.47, i32 noundef %8, ptr noundef %12) #20
  %13 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_ip_blocks, align 8
  %inc = add i32 %14, 1
  store i32 %inc, ptr %num_ip_blocks, align 8
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %14, i32 1
  %15 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %ip_block_version, ptr %version, align 4
  br label %return

return:                                           ; preds = %do.end, %sw.bb4.return_crit_edge, %sw.bb.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %do.end ], [ -22, %entry.return_crit_edge ], [ 0, %sw.bb.return_crit_edge ], [ 0, %sw.bb4.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_set_cg_state(ptr noundef %adev, i32 noundef %state) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %0 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %0)
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %1 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp185 = icmp sgt i32 %2, 0
  br i1 %cmp185, label %for.body.lr.ph, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp2 = icmp eq i32 %state, 0
  %in_s0ix = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 140
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %3 = phi i32 [ %2, %for.body.lr.ph ], [ %29, %for.inc.for.body_crit_edge ]
  %j.086 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %4 = xor i32 %j.086, -1
  %sub4 = add i32 %3, %4
  %cond = select i1 %cmp2, i32 %j.086, i32 %sub4
  %late_initialized = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %cond, i32 0, i32 3
  %5 = ptrtoint ptr %late_initialized to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %late_initialized, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not = icmp eq i8 %6, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end6

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end6:                                          ; preds = %for.body
  %7 = ptrtoint ptr %in_s0ix to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %in_s0ix, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool7.not = icmp eq i8 %8, 0
  br i1 %tobool7.not, label %if.end6.if.end12_crit_edge, label %land.lhs.true

if.end6.if.end12_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

land.lhs.true:                                    ; preds = %if.end6
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %cond, i32 1
  %9 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %version, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %12)
  %cmp10 = icmp eq i32 %12, 6
  br i1 %cmp10, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.if.end12_crit_edge

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end12:                                         ; preds = %land.lhs.true.if.end12_crit_edge, %if.end6.if.end12_crit_edge
  %version15 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %cond, i32 1
  %13 = ptrtoint ptr %version15 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %version15, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.410)
  switch i32 %16, label %land.lhs.true36 [
    i32 8, label %if.end12.for.inc_crit_edge
    i32 9, label %if.end12.for.inc_crit_edge87
    i32 11, label %if.end12.for.inc_crit_edge88
    i32 13, label %if.end12.for.inc_crit_edge89
  ]

if.end12.for.inc_crit_edge89:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end12.for.inc_crit_edge88:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end12.for.inc_crit_edge87:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end12.for.inc_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

land.lhs.true36:                                  ; preds = %if.end12
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %14, i32 0, i32 4
  %18 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs, align 4
  %set_clockgating_state = getelementptr inbounds %struct.amd_ip_funcs, ptr %19, i32 0, i32 17
  %20 = ptrtoint ptr %set_clockgating_state to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %set_clockgating_state, align 4
  %tobool40.not = icmp eq ptr %21, null
  br i1 %tobool40.not, label %land.lhs.true36.for.inc_crit_edge, label %if.then41

land.lhs.true36.for.inc_crit_edge:                ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then41:                                        ; preds = %land.lhs.true36
  %call = tail call i32 %21(ptr noundef %adev, i32 noundef %state) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool47.not = icmp eq i32 %call, 0
  br i1 %tobool47.not, label %if.then41.for.inc_crit_edge, label %if.then48

if.then41.for.inc_crit_edge:                      ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then48:                                        ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %version15 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %version15, align 4
  %funcs52 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %23, i32 0, i32 4
  %24 = ptrtoint ptr %funcs52 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %funcs52, align 4
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.49, ptr noundef %27, i32 noundef %call) #17
  br label %cleanup

for.inc:                                          ; preds = %if.then41.for.inc_crit_edge, %land.lhs.true36.for.inc_crit_edge, %if.end12.for.inc_crit_edge, %if.end12.for.inc_crit_edge87, %if.end12.for.inc_crit_edge88, %if.end12.for.inc_crit_edge89, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %j.086, 1
  %28 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_ip_blocks, align 8
  %cmp1 = icmp sgt i32 %29, %inc
  br i1 %cmp1, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then48, %for.cond.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then48 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_set_pg_state(ptr noundef %adev, i32 noundef %state) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %0 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %0)
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %1 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp185 = icmp sgt i32 %2, 0
  br i1 %cmp185, label %for.body.lr.ph, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp2 = icmp eq i32 %state, 0
  %in_s0ix = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 140
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %3 = phi i32 [ %2, %for.body.lr.ph ], [ %29, %for.inc.for.body_crit_edge ]
  %j.086 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %4 = xor i32 %j.086, -1
  %sub4 = add i32 %3, %4
  %cond = select i1 %cmp2, i32 %j.086, i32 %sub4
  %late_initialized = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %cond, i32 0, i32 3
  %5 = ptrtoint ptr %late_initialized to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %late_initialized, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not = icmp eq i8 %6, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end6

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end6:                                          ; preds = %for.body
  %7 = ptrtoint ptr %in_s0ix to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %in_s0ix, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool7.not = icmp eq i8 %8, 0
  br i1 %tobool7.not, label %if.end6.if.end12_crit_edge, label %land.lhs.true

if.end6.if.end12_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

land.lhs.true:                                    ; preds = %if.end6
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %cond, i32 1
  %9 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %version, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %12)
  %cmp10 = icmp eq i32 %12, 6
  br i1 %cmp10, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.if.end12_crit_edge

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end12:                                         ; preds = %land.lhs.true.if.end12_crit_edge, %if.end6.if.end12_crit_edge
  %version15 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %cond, i32 1
  %13 = ptrtoint ptr %version15 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %version15, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.411)
  switch i32 %16, label %land.lhs.true36 [
    i32 8, label %if.end12.for.inc_crit_edge
    i32 9, label %if.end12.for.inc_crit_edge87
    i32 11, label %if.end12.for.inc_crit_edge88
    i32 13, label %if.end12.for.inc_crit_edge89
  ]

if.end12.for.inc_crit_edge89:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end12.for.inc_crit_edge88:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end12.for.inc_crit_edge87:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end12.for.inc_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

land.lhs.true36:                                  ; preds = %if.end12
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %14, i32 0, i32 4
  %18 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs, align 4
  %set_powergating_state = getelementptr inbounds %struct.amd_ip_funcs, ptr %19, i32 0, i32 18
  %20 = ptrtoint ptr %set_powergating_state to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %set_powergating_state, align 4
  %tobool40.not = icmp eq ptr %21, null
  br i1 %tobool40.not, label %land.lhs.true36.for.inc_crit_edge, label %if.then41

land.lhs.true36.for.inc_crit_edge:                ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then41:                                        ; preds = %land.lhs.true36
  %call = tail call i32 %21(ptr noundef %adev, i32 noundef %state) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool47.not = icmp eq i32 %call, 0
  br i1 %tobool47.not, label %if.then41.for.inc_crit_edge, label %if.then48

if.then41.for.inc_crit_edge:                      ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then48:                                        ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %version15 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %version15, align 4
  %funcs52 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %23, i32 0, i32 4
  %24 = ptrtoint ptr %funcs52 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %funcs52, align 4
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.50, ptr noundef %27, i32 noundef %call) #17
  br label %cleanup

for.inc:                                          ; preds = %if.then41.for.inc_crit_edge, %land.lhs.true36.for.inc_crit_edge, %if.end12.for.inc_crit_edge, %if.end12.for.inc_crit_edge87, %if.end12.for.inc_crit_edge88, %if.end12.for.inc_crit_edge89, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %j.086, 1
  %28 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_ip_blocks, align 8
  %cmp1 = icmp sgt i32 %29, %inc
  br i1 %cmp1, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then48, %for.cond.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then48 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_ip_suspend(ptr noundef %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_virt_fini_data_exchange(ptr noundef %adev) #17
  %call = tail call i32 @amdgpu_virt_request_full_gpu(ptr noundef %adev, i1 noundef zeroext false) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %call1 = tail call fastcc i32 @amdgpu_device_ip_suspend_phase1(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc i32 @amdgpu_device_ip_suspend_phase2(ptr noundef %adev)
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and8 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end4.cleanup_crit_edge, label %if.then10

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then10:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #19
  %call11 = tail call i32 @amdgpu_virt_release_full_gpu(ptr noundef %adev, i1 noundef zeroext false) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end.cleanup_crit_edge ], [ %call5, %if.then10 ], [ %call5, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_virt_fini_data_exchange(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_virt_request_full_gpu(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @amdgpu_device_ip_suspend_phase1(ptr noundef %adev) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %0 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %0)
  %cmp.i = icmp eq i32 %0, 1
  br i1 %cmp.i, label %entry.amdgpu_device_set_cg_state.exit_crit_edge, label %for.cond.preheader.i

entry.amdgpu_device_set_cg_state.exit_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit

for.cond.preheader.i:                             ; preds = %entry
  %num_ip_blocks.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %1 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp185.i = icmp sgt i32 %2, 0
  br i1 %cmp185.i, label %for.body.lr.ph.i, label %for.cond.preheader.i.amdgpu_device_set_pg_state.exit_crit_edge

for.cond.preheader.i.amdgpu_device_set_pg_state.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_pg_state.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %in_s0ix.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 140
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %3 = phi i32 [ %2, %for.body.lr.ph.i ], [ %29, %for.inc.i.for.body.i_crit_edge ]
  %j.086.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %4 = xor i32 %j.086.i, -1
  %sub4.i = add i32 %3, %4
  %late_initialized.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i, i32 0, i32 3
  %5 = ptrtoint ptr %late_initialized.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %late_initialized.i, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end6.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end6.i:                                        ; preds = %for.body.i
  %7 = ptrtoint ptr %in_s0ix.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %in_s0ix.i, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool7.not.i = icmp eq i8 %8, 0
  br i1 %tobool7.not.i, label %if.end6.i.if.end12.i_crit_edge, label %land.lhs.true.i

if.end6.i.if.end12.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i

land.lhs.true.i:                                  ; preds = %if.end6.i
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i, i32 1
  %9 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %version.i, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %12)
  %cmp10.i = icmp eq i32 %12, 6
  br i1 %cmp10.i, label %land.lhs.true.i.for.inc.i_crit_edge, label %land.lhs.true.i.if.end12.i_crit_edge

land.lhs.true.i.if.end12.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end12.i:                                       ; preds = %land.lhs.true.i.if.end12.i_crit_edge, %if.end6.i.if.end12.i_crit_edge
  %version15.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i, i32 1
  %13 = ptrtoint ptr %version15.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %version15.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.412)
  switch i32 %16, label %land.lhs.true36.i [
    i32 8, label %if.end12.i.for.inc.i_crit_edge
    i32 9, label %if.end12.i.for.inc.i_crit_edge72
    i32 11, label %if.end12.i.for.inc.i_crit_edge73
    i32 13, label %if.end12.i.for.inc.i_crit_edge74
  ]

if.end12.i.for.inc.i_crit_edge74:                 ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end12.i.for.inc.i_crit_edge73:                 ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end12.i.for.inc.i_crit_edge72:                 ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end12.i.for.inc.i_crit_edge:                   ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

land.lhs.true36.i:                                ; preds = %if.end12.i
  %funcs.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %14, i32 0, i32 4
  %18 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs.i, align 4
  %set_powergating_state.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %19, i32 0, i32 18
  %20 = ptrtoint ptr %set_powergating_state.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %set_powergating_state.i, align 4
  %tobool40.not.i = icmp eq ptr %21, null
  br i1 %tobool40.not.i, label %land.lhs.true36.i.for.inc.i_crit_edge, label %if.then41.i

land.lhs.true36.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then41.i:                                      ; preds = %land.lhs.true36.i
  %call.i = tail call i32 %21(ptr noundef %adev, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool47.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool47.not.i, label %if.then41.i.for.inc.i_crit_edge, label %if.then48.i

if.then41.i.for.inc.i_crit_edge:                  ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then48.i:                                      ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %version15.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %version15.i, align 4
  %funcs52.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %23, i32 0, i32 4
  %24 = ptrtoint ptr %funcs52.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %funcs52.i, align 4
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.50, ptr noundef %27, i32 noundef %call.i) #17
  br label %amdgpu_device_set_pg_state.exit

for.inc.i:                                        ; preds = %if.then41.i.for.inc.i_crit_edge, %land.lhs.true36.i.for.inc.i_crit_edge, %if.end12.i.for.inc.i_crit_edge, %if.end12.i.for.inc.i_crit_edge72, %if.end12.i.for.inc.i_crit_edge73, %if.end12.i.for.inc.i_crit_edge74, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %j.086.i, 1
  %28 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp1.i = icmp sgt i32 %29, %inc.i
  br i1 %cmp1.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.amdgpu_device_set_pg_state.exit_crit_edge

for.inc.i.amdgpu_device_set_pg_state.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_pg_state.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

amdgpu_device_set_pg_state.exit:                  ; preds = %for.inc.i.amdgpu_device_set_pg_state.exit_crit_edge, %if.then48.i, %for.cond.preheader.i.amdgpu_device_set_pg_state.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %.pr = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr)
  %cmp.i38 = icmp eq i32 %.pr, 1
  br i1 %cmp.i38, label %amdgpu_device_set_pg_state.exit.amdgpu_device_set_cg_state.exit_crit_edge, label %for.cond.preheader.i41

amdgpu_device_set_pg_state.exit.amdgpu_device_set_cg_state.exit_crit_edge: ; preds = %amdgpu_device_set_pg_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit

for.cond.preheader.i41:                           ; preds = %amdgpu_device_set_pg_state.exit
  %30 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp185.i40 = icmp sgt i32 %31, 0
  br i1 %cmp185.i40, label %for.body.lr.ph.i43, label %for.cond.preheader.i41.amdgpu_device_set_cg_state.exit_crit_edge

for.cond.preheader.i41.amdgpu_device_set_cg_state.exit_crit_edge: ; preds = %for.cond.preheader.i41
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit

for.body.lr.ph.i43:                               ; preds = %for.cond.preheader.i41
  %in_s0ix.i42 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 140
  br label %for.body.i48

for.body.i48:                                     ; preds = %for.inc.i66.for.body.i48_crit_edge, %for.body.lr.ph.i43
  %32 = phi i32 [ %31, %for.body.lr.ph.i43 ], [ %58, %for.inc.i66.for.body.i48_crit_edge ]
  %j.086.i44 = phi i32 [ 0, %for.body.lr.ph.i43 ], [ %inc.i64, %for.inc.i66.for.body.i48_crit_edge ]
  %33 = xor i32 %j.086.i44, -1
  %sub4.i45 = add i32 %32, %33
  %late_initialized.i46 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i45, i32 0, i32 3
  %34 = ptrtoint ptr %late_initialized.i46 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %late_initialized.i46, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool.not.i47 = icmp eq i8 %35, 0
  br i1 %tobool.not.i47, label %for.body.i48.for.inc.i66_crit_edge, label %if.end6.i50

for.body.i48.for.inc.i66_crit_edge:               ; preds = %for.body.i48
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i66

if.end6.i50:                                      ; preds = %for.body.i48
  %36 = ptrtoint ptr %in_s0ix.i42 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %in_s0ix.i42, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool7.not.i49 = icmp eq i8 %37, 0
  br i1 %tobool7.not.i49, label %if.end6.i50.if.end12.i55_crit_edge, label %land.lhs.true.i53

if.end6.i50.if.end12.i55_crit_edge:               ; preds = %if.end6.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i55

land.lhs.true.i53:                                ; preds = %if.end6.i50
  %version.i51 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i45, i32 1
  %38 = ptrtoint ptr %version.i51 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %version.i51, align 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %41)
  %cmp10.i52 = icmp eq i32 %41, 6
  br i1 %cmp10.i52, label %land.lhs.true.i53.for.inc.i66_crit_edge, label %land.lhs.true.i53.if.end12.i55_crit_edge

land.lhs.true.i53.if.end12.i55_crit_edge:         ; preds = %land.lhs.true.i53
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i55

land.lhs.true.i53.for.inc.i66_crit_edge:          ; preds = %land.lhs.true.i53
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i66

if.end12.i55:                                     ; preds = %land.lhs.true.i53.if.end12.i55_crit_edge, %if.end6.i50.if.end12.i55_crit_edge
  %version15.i54 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i45, i32 1
  %42 = ptrtoint ptr %version15.i54 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %version15.i54, align 4
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %43, align 4
  %46 = zext i32 %45 to i64
  call void @__sanitizer_cov_trace_switch(i64 %46, ptr @__sancov_gen_cov_switch_values.413)
  switch i32 %45, label %land.lhs.true36.i58 [
    i32 8, label %if.end12.i55.for.inc.i66_crit_edge
    i32 9, label %if.end12.i55.for.inc.i66_crit_edge75
    i32 11, label %if.end12.i55.for.inc.i66_crit_edge76
    i32 13, label %if.end12.i55.for.inc.i66_crit_edge77
  ]

if.end12.i55.for.inc.i66_crit_edge77:             ; preds = %if.end12.i55
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i66

if.end12.i55.for.inc.i66_crit_edge76:             ; preds = %if.end12.i55
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i66

if.end12.i55.for.inc.i66_crit_edge75:             ; preds = %if.end12.i55
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i66

if.end12.i55.for.inc.i66_crit_edge:               ; preds = %if.end12.i55
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i66

land.lhs.true36.i58:                              ; preds = %if.end12.i55
  %funcs.i56 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %43, i32 0, i32 4
  %47 = ptrtoint ptr %funcs.i56 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %funcs.i56, align 4
  %set_clockgating_state.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %48, i32 0, i32 17
  %49 = ptrtoint ptr %set_clockgating_state.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %set_clockgating_state.i, align 4
  %tobool40.not.i57 = icmp eq ptr %50, null
  br i1 %tobool40.not.i57, label %land.lhs.true36.i58.for.inc.i66_crit_edge, label %if.then41.i61

land.lhs.true36.i58.for.inc.i66_crit_edge:        ; preds = %land.lhs.true36.i58
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i66

if.then41.i61:                                    ; preds = %land.lhs.true36.i58
  %call.i59 = tail call i32 %50(ptr noundef %adev, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i59)
  %tobool47.not.i60 = icmp eq i32 %call.i59, 0
  br i1 %tobool47.not.i60, label %if.then41.i61.for.inc.i66_crit_edge, label %if.then48.i63

if.then41.i61.for.inc.i66_crit_edge:              ; preds = %if.then41.i61
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i66

if.then48.i63:                                    ; preds = %if.then41.i61
  call void @__sanitizer_cov_trace_pc() #19
  %51 = ptrtoint ptr %version15.i54 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %version15.i54, align 4
  %funcs52.i62 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %52, i32 0, i32 4
  %53 = ptrtoint ptr %funcs52.i62 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %funcs52.i62, align 4
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %54, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.49, ptr noundef %56, i32 noundef %call.i59) #17
  br label %amdgpu_device_set_cg_state.exit

for.inc.i66:                                      ; preds = %if.then41.i61.for.inc.i66_crit_edge, %land.lhs.true36.i58.for.inc.i66_crit_edge, %if.end12.i55.for.inc.i66_crit_edge, %if.end12.i55.for.inc.i66_crit_edge75, %if.end12.i55.for.inc.i66_crit_edge76, %if.end12.i55.for.inc.i66_crit_edge77, %land.lhs.true.i53.for.inc.i66_crit_edge, %for.body.i48.for.inc.i66_crit_edge
  %inc.i64 = add nuw nsw i32 %j.086.i44, 1
  %57 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp1.i65 = icmp sgt i32 %58, %inc.i64
  br i1 %cmp1.i65, label %for.inc.i66.for.body.i48_crit_edge, label %for.inc.i66.amdgpu_device_set_cg_state.exit_crit_edge

for.inc.i66.amdgpu_device_set_cg_state.exit_crit_edge: ; preds = %for.inc.i66
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit

for.inc.i66.for.body.i48_crit_edge:               ; preds = %for.inc.i66
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i48

amdgpu_device_set_cg_state.exit:                  ; preds = %for.inc.i66.amdgpu_device_set_cg_state.exit_crit_edge, %if.then48.i63, %for.cond.preheader.i41.amdgpu_device_set_cg_state.exit_crit_edge, %amdgpu_device_set_pg_state.exit.amdgpu_device_set_cg_state.exit_crit_edge, %entry.amdgpu_device_set_cg_state.exit_crit_edge
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %59 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %num_ip_blocks, align 8
  %i.069 = add i32 %60, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %i.069)
  %cmp70 = icmp sgt i32 %i.069, -1
  br i1 %cmp70, label %amdgpu_device_set_cg_state.exit.for.body_crit_edge, label %amdgpu_device_set_cg_state.exit.cleanup_crit_edge

amdgpu_device_set_cg_state.exit.cleanup_crit_edge: ; preds = %amdgpu_device_set_cg_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

amdgpu_device_set_cg_state.exit.for.body_crit_edge: ; preds = %amdgpu_device_set_cg_state.exit
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %amdgpu_device_set_cg_state.exit.for.body_crit_edge
  %i.071 = phi i32 [ %i.0, %for.inc.for.body_crit_edge ], [ %i.069, %amdgpu_device_set_cg_state.exit.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.071
  %61 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %arrayidx, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %62)
  %tobool.not = icmp eq i8 %62, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %for.body
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.071, i32 1
  %63 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %version, align 4
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %64, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %66)
  %cmp4.not = icmp eq i32 %66, 5
  br i1 %cmp4.not, label %if.end6, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end6:                                          ; preds = %if.end
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %64, i32 0, i32 4
  %67 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %funcs, align 4
  %suspend = getelementptr inbounds %struct.amd_ip_funcs, ptr %68, i32 0, i32 9
  %69 = ptrtoint ptr %suspend to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %suspend, align 4
  %call10 = tail call i32 %70(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end17, label %if.then12

if.then12:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %71 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %version, align 4
  %funcs16 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %72, i32 0, i32 4
  %73 = ptrtoint ptr %funcs16 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %funcs16, align 4
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %74, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.272, ptr noundef %76, i32 noundef %call10) #17
  br label %cleanup

if.end17:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %hw = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 2
  %77 = ptrtoint ptr %hw to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 0, ptr %hw, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end17, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %i.0 = add i32 %i.071, -1
  %cmp = icmp sgt i32 %i.0, -1
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then12, %amdgpu_device_set_cg_state.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.then12 ], [ 0, %amdgpu_device_set_cg_state.exit.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @amdgpu_device_ip_suspend_phase2(ptr noundef %adev) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %in_s0ix = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 140
  %0 = ptrtoint ptr %in_s0ix to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %in_s0ix, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_gfx_state_change_set(ptr noundef %adev, i32 noundef 2) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %2 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_ip_blocks, align 8
  %i.0141 = add i32 %3, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %i.0141)
  %cmp142 = icmp sgt i32 %i.0141, -1
  br i1 %cmp142, label %for.body.lr.ph, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %pending_reset = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 9
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %mp1_state = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 142
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0143 = phi i32 [ %i.0141, %for.body.lr.ph ], [ %i.0, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.0143
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not = icmp eq i8 %5, 0
  br i1 %tobool1.not, label %for.body.for.inc_crit_edge, label %if.end3

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end3:                                          ; preds = %for.body
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.0143, i32 1
  %6 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %version, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %9)
  %cmp6 = icmp eq i32 %9, 5
  br i1 %cmp6, label %if.end3.for.inc_crit_edge, label %if.end8

if.end3.for.inc_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end8:                                          ; preds = %if.end3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @amdgpu_ras_in_intr, i32 noundef 4) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_ras_in_intr to i32))
  %10 = load volatile i32, ptr @amdgpu_ras_in_intr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.i.not = icmp eq i32 %10, 0
  br i1 %tobool.i.not, label %if.end8.if.end18_crit_edge, label %land.lhs.true

if.end8.if.end18_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18

land.lhs.true:                                    ; preds = %if.end8
  %11 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %version, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %14)
  %cmp13 = icmp eq i32 %14, 4
  br i1 %cmp13, label %land.lhs.true.for.inc.sink.split_crit_edge, label %land.lhs.true.if.end18_crit_edge

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18

land.lhs.true.for.inc.sink.split_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.sink.split

if.end18:                                         ; preds = %land.lhs.true.if.end18_crit_edge, %if.end8.if.end18_crit_edge
  %15 = ptrtoint ptr %pending_reset to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %pending_reset, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool19.not = icmp eq i8 %16, 0
  br i1 %tobool19.not, label %if.end18.if.end48_crit_edge, label %land.lhs.true20

if.end18.if.end48_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end48

land.lhs.true20:                                  ; preds = %if.end18
  %17 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %version, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %20)
  %switch = icmp ult i32 %20, 4
  br i1 %switch, label %land.lhs.true20.if.end48_crit_edge, label %land.lhs.true20.for.inc.sink.split_crit_edge

land.lhs.true20.for.inc.sink.split_crit_edge:     ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.sink.split

land.lhs.true20.if.end48_crit_edge:               ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end48

if.end48:                                         ; preds = %land.lhs.true20.if.end48_crit_edge, %if.end18.if.end48_crit_edge
  %21 = ptrtoint ptr %in_s0ix to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %in_s0ix, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool50.not = icmp eq i8 %22, 0
  br i1 %tobool50.not, label %if.end48.if.end64_crit_edge, label %land.lhs.true51

if.end48.if.end64_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end64

land.lhs.true51:                                  ; preds = %if.end48
  %23 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %version, align 4
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 4
  %27 = zext i32 %26 to i64
  call void @__sanitizer_cov_trace_switch(i64 %27, ptr @__sancov_gen_cov_switch_values.414)
  switch i32 %26, label %land.lhs.true51.if.end64_crit_edge [
    i32 4, label %land.lhs.true51.for.inc_crit_edge
    i32 6, label %land.lhs.true51.for.inc_crit_edge144
  ]

land.lhs.true51.for.inc_crit_edge144:             ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

land.lhs.true51.for.inc_crit_edge:                ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

land.lhs.true51.if.end64_crit_edge:               ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end64

if.end64:                                         ; preds = %land.lhs.true51.if.end64_crit_edge, %if.end48.if.end64_crit_edge
  %28 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %version, align 4
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %29, i32 0, i32 4
  %30 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %funcs, align 4
  %suspend = getelementptr inbounds %struct.amd_ip_funcs, ptr %31, i32 0, i32 9
  %32 = ptrtoint ptr %suspend to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %suspend, align 4
  %call68 = tail call i32 %33(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.end64.if.end75_crit_edge, label %if.then70

if.end64.if.end75_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end75

if.then70:                                        ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #19
  %34 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %version, align 4
  %funcs74 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %35, i32 0, i32 4
  %36 = ptrtoint ptr %funcs74 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %funcs74, align 4
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.272, ptr noundef %39, i32 noundef %call68) #17
  br label %if.end75

if.end75:                                         ; preds = %if.then70, %if.end64.if.end75_crit_edge
  %hw79 = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 2
  %40 = ptrtoint ptr %hw79 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 0, ptr %hw79, align 2
  %41 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %virt, align 8
  %and = and i32 %42, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool80.not = icmp eq i32 %and, 0
  br i1 %tobool80.not, label %if.then81, label %if.end75.for.inc_crit_edge

if.end75.for.inc_crit_edge:                       ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then81:                                        ; preds = %if.end75
  %43 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %version, align 4
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %46)
  %cmp86 = icmp eq i32 %46, 3
  br i1 %cmp86, label %if.then87, label %if.then81.for.inc_crit_edge

if.then81.for.inc_crit_edge:                      ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then87:                                        ; preds = %if.then81
  %47 = ptrtoint ptr %mp1_state to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %mp1_state, align 8
  %call88 = tail call i32 @amdgpu_dpm_set_mp1_state(ptr noundef %adev, i32 noundef %48) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call88)
  %tobool89.not = icmp eq i32 %call88, 0
  br i1 %tobool89.not, label %if.then87.for.inc_crit_edge, label %if.then90

if.then87.for.inc_crit_edge:                      ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then90:                                        ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #19
  %49 = ptrtoint ptr %mp1_state to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %mp1_state, align 8
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.273, i32 noundef %50, i32 noundef %call88) #17
  br label %cleanup

for.inc.sink.split:                               ; preds = %land.lhs.true20.for.inc.sink.split_crit_edge, %land.lhs.true.for.inc.sink.split_crit_edge
  %hw47 = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 2
  %51 = ptrtoint ptr %hw47 to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 0, ptr %hw47, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.inc.sink.split, %if.then87.for.inc_crit_edge, %if.then81.for.inc_crit_edge, %if.end75.for.inc_crit_edge, %land.lhs.true51.for.inc_crit_edge, %land.lhs.true51.for.inc_crit_edge144, %if.end3.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %i.0 = add i32 %i.0143, -1
  %cmp = icmp sgt i32 %i.0, -1
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then90, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %call88, %if.then90 ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_virt_release_full_gpu(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_asic_has_dc_support(i32 noundef %asic_type) local_unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %asic_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.415)
  switch i32 %asic_type, label %sw.default [
    i32 4, label %entry.return_crit_edge
    i32 10, label %entry.return_crit_edge6
    i32 0, label %entry.sw.bb1_crit_edge
    i32 1, label %entry.sw.bb1_crit_edge7
    i32 2, label %entry.sw.bb1_crit_edge8
    i32 3, label %entry.sw.bb1_crit_edge9
    i32 5, label %entry.sw.bb2_crit_edge
    i32 6, label %entry.sw.bb2_crit_edge10
    i32 7, label %entry.sw.bb2_crit_edge11
    i32 9, label %entry.sw.bb2_crit_edge12
  ]

entry.sw.bb2_crit_edge12:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2

entry.sw.bb2_crit_edge11:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2

entry.sw.bb2_crit_edge10:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2

entry.sw.bb2_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2

entry.sw.bb1_crit_edge9:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1

entry.sw.bb1_crit_edge8:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1

entry.sw.bb1_crit_edge7:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1

entry.return_crit_edge6:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge7, %entry.sw.bb1_crit_edge8, %entry.sw.bb1_crit_edge9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %1 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp sgt i32 %1, 0
  br label %return

sw.bb2:                                           ; preds = %entry.sw.bb2_crit_edge, %entry.sw.bb2_crit_edge10, %entry.sw.bb2_crit_edge11, %entry.sw.bb2_crit_edge12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %2 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp3 = icmp sgt i32 %2, 0
  br label %return

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %3 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp5 = icmp ne i32 %3, 0
  br label %return

return:                                           ; preds = %sw.default, %sw.bb2, %sw.bb1, %entry.return_crit_edge, %entry.return_crit_edge6
  %retval.0 = phi i1 [ %cmp5, %sw.default ], [ %cmp3, %sw.bb2 ], [ %cmp, %sw.bb1 ], [ false, %entry.return_crit_edge ], [ false, %entry.return_crit_edge6 ]
  ret i1 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_has_dc_support(ptr nocapture noundef readonly %adev) local_unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %enable_virtual_display = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 77
  %2 = ptrtoint ptr %enable_virtual_display to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %enable_virtual_display, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %lor.lhs.false2, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %harvest_ip_mask = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 123
  %4 = ptrtoint ptr %harvest_ip_mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %harvest_ip_mask, align 4
  %and3 = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.end, label %lor.lhs.false2.return_crit_edge

lor.lhs.false2.return_crit_edge:                  ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %lor.lhs.false2
  %asic_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %6 = ptrtoint ptr %asic_type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %asic_type, align 8
  %8 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.416)
  switch i32 %7, label %sw.default.i [
    i32 4, label %if.end.return_crit_edge
    i32 10, label %if.end.return_crit_edge8
    i32 0, label %if.end.sw.bb1.i_crit_edge
    i32 1, label %if.end.sw.bb1.i_crit_edge9
    i32 2, label %if.end.sw.bb1.i_crit_edge10
    i32 3, label %if.end.sw.bb1.i_crit_edge11
    i32 5, label %if.end.sw.bb2.i_crit_edge
    i32 6, label %if.end.sw.bb2.i_crit_edge12
    i32 7, label %if.end.sw.bb2.i_crit_edge13
    i32 9, label %if.end.sw.bb2.i_crit_edge14
  ]

if.end.sw.bb2.i_crit_edge14:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge13:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge12:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i

if.end.sw.bb1.i_crit_edge11:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1.i

if.end.sw.bb1.i_crit_edge10:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1.i

if.end.sw.bb1.i_crit_edge9:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1.i

if.end.sw.bb1.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1.i

if.end.return_crit_edge8:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

sw.bb1.i:                                         ; preds = %if.end.sw.bb1.i_crit_edge, %if.end.sw.bb1.i_crit_edge9, %if.end.sw.bb1.i_crit_edge10, %if.end.sw.bb1.i_crit_edge11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %9 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp.i = icmp sgt i32 %9, 0
  br label %return

sw.bb2.i:                                         ; preds = %if.end.sw.bb2.i_crit_edge, %if.end.sw.bb2.i_crit_edge12, %if.end.sw.bb2.i_crit_edge13, %if.end.sw.bb2.i_crit_edge14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %10 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp3.i = icmp sgt i32 %10, 0
  br label %return

sw.default.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %11 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp5.i = icmp ne i32 %11, 0
  br label %return

return:                                           ; preds = %sw.default.i, %sw.bb2.i, %sw.bb1.i, %if.end.return_crit_edge, %if.end.return_crit_edge8, %lor.lhs.false2.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %lor.lhs.false2.return_crit_edge ], [ false, %lor.lhs.false.return_crit_edge ], [ false, %entry.return_crit_edge ], [ %cmp5.i, %sw.default.i ], [ %cmp3.i, %sw.bb2.i ], [ %cmp.i, %sw.bb1.i ], [ false, %if.end.return_crit_edge ], [ false, %if.end.return_crit_edge8 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_init(ptr noundef %adev, i32 noundef %flags) local_unnamed_addr #2 align 64 {
entry:
  %fw_name.i.i = alloca [40 x i8], align 1
  %pciaddstr_tmp.i.i = alloca ptr, align 4
  %pciaddname_tmp.i.i = alloca ptr, align 4
  %num_crtc.i.i = alloca i32, align 4
  %input.i = alloca ptr, align 4
  %timeout.i = alloca i32, align 4
  %platform_speed_cap.i = alloca i32, align 4
  %platform_link_width.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %ddev.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2
  %pdev1 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %0 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev1, align 4
  %shutdown = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 13
  %2 = ptrtoint ptr %shutdown to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %shutdown, align 8
  %flags2 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 9
  %3 = ptrtoint ptr %flags2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %flags, ptr %flags2, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_force_asic_type to i32))
  %4 = load i32, ptr @amdgpu_force_asic_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 37, i32 %4)
  %5 = icmp ult i32 %4, 37
  %and = and i32 %flags, 65535
  %spec.select = select i1 %5, i32 %4, i32 %and
  %6 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %spec.select, ptr %6, align 8
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %8 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp5 = icmp eq i32 %8, 1
  %spec.store.select = select i1 %cmp5, i32 1000000, i32 100000
  %9 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %spec.store.select, ptr %usec_timeout, align 8
  %gart_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 7
  %10 = ptrtoint ptr %gart_size to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 536870912, ptr %gart_size, align 8
  %accel_working = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 15
  %11 = ptrtoint ptr %accel_working to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %accel_working, align 2
  %num_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 89
  %12 = ptrtoint ptr %num_rings to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %num_rings, align 8
  %buffer_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 68, i32 3
  %13 = ptrtoint ptr %buffer_funcs to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %buffer_funcs, align 8
  %buffer_funcs_ring = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 68, i32 4
  %14 = ptrtoint ptr %buffer_funcs_ring to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %buffer_funcs_ring, align 4
  %vm_pte_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 65, i32 11
  %15 = ptrtoint ptr %vm_pte_funcs to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %vm_pte_funcs, align 8
  %vm_pte_num_scheds = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 65, i32 13
  %16 = ptrtoint ptr %vm_pte_num_scheds to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %vm_pte_num_scheds, align 4
  %gmc_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 38
  %17 = ptrtoint ptr %gmc_funcs to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %gmc_funcs, align 4
  %harvest_ip_mask = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 123
  %18 = ptrtoint ptr %harvest_ip_mask to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %harvest_ip_mask, align 4
  %call12 = tail call i64 @dma_fence_context_alloc(i32 noundef 28) #17
  %fence_context = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 88
  %19 = ptrtoint ptr %fence_context to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %call12, ptr %fence_context, align 8
  %gfx = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106
  %pipe_reserve_bitmap = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 57
  %20 = call ptr @memset(ptr %pipe_reserve_bitmap, i32 0, i32 16)
  %smc_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 36
  %21 = ptrtoint ptr %smc_rreg to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr @amdgpu_invalid_rreg, ptr %smc_rreg, align 4
  %smc_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 37
  %22 = ptrtoint ptr %smc_wreg to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @amdgpu_invalid_wreg, ptr %smc_wreg, align 8
  %pcie_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 39
  %23 = ptrtoint ptr %pcie_rreg to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @amdgpu_invalid_rreg, ptr %pcie_rreg, align 8
  %pcie_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 40
  %24 = ptrtoint ptr %pcie_wreg to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @amdgpu_invalid_wreg, ptr %pcie_wreg, align 4
  %pciep_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 41
  %25 = ptrtoint ptr %pciep_rreg to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @amdgpu_invalid_rreg, ptr %pciep_rreg, align 8
  %pciep_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 42
  %26 = ptrtoint ptr %pciep_wreg to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @amdgpu_invalid_wreg, ptr %pciep_wreg, align 4
  %pcie_rreg64 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 43
  %27 = ptrtoint ptr %pcie_rreg64 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @amdgpu_invalid_rreg64, ptr %pcie_rreg64, align 8
  %pcie_wreg64 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 44
  %28 = ptrtoint ptr %pcie_wreg64 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @amdgpu_invalid_wreg64, ptr %pcie_wreg64, align 4
  %uvd_ctx_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 46
  %29 = ptrtoint ptr %uvd_ctx_rreg to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @amdgpu_invalid_rreg, ptr %uvd_ctx_rreg, align 4
  %uvd_ctx_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 47
  %30 = ptrtoint ptr %uvd_ctx_wreg to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr @amdgpu_invalid_wreg, ptr %uvd_ctx_wreg, align 8
  %didt_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 49
  %31 = ptrtoint ptr %didt_rreg to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @amdgpu_invalid_rreg, ptr %didt_rreg, align 8
  %didt_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 50
  %32 = ptrtoint ptr %didt_wreg to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @amdgpu_invalid_wreg, ptr %didt_wreg, align 4
  %gc_cac_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 52
  %33 = ptrtoint ptr %gc_cac_rreg to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr @amdgpu_invalid_rreg, ptr %gc_cac_rreg, align 4
  %gc_cac_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 53
  %34 = ptrtoint ptr %gc_cac_wreg to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @amdgpu_invalid_wreg, ptr %gc_cac_wreg, align 8
  %audio_endpt_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 58
  %35 = ptrtoint ptr %audio_endpt_rreg to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @amdgpu_block_invalid_rreg, ptr %audio_endpt_rreg, align 4
  %audio_endpt_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 59
  %36 = ptrtoint ptr %audio_endpt_wreg to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @amdgpu_block_invalid_wreg, ptr %audio_endpt_wreg, align 8
  %37 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %6, align 8
  %arrayidx = getelementptr [38 x ptr], ptr @amdgpu_asic_name, i32 0, i32 %38
  %39 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx, align 4
  %vendor = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 7
  %41 = ptrtoint ptr %vendor to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %vendor, align 8
  %conv = zext i16 %42 to i32
  %device = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 8
  %43 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %device, align 2
  %conv14 = zext i16 %44 to i32
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 9
  %45 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %subsystem_vendor, align 4
  %conv15 = zext i16 %46 to i32
  %subsystem_device = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 10
  %47 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %subsystem_device, align 2
  %conv16 = zext i16 %48 to i32
  %revision = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 12
  %49 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %revision, align 4
  %conv17 = zext i8 %50 to i32
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.51, ptr noundef %40, i32 noundef %conv, i32 noundef %conv14, i32 noundef %conv15, i32 noundef %conv16, i32 noundef %conv17) #20
  %mutex = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 7
  tail call void @__mutex_init(ptr noundef %mutex, ptr noundef nonnull @.str.53, ptr noundef nonnull @amdgpu_device_init.__key) #17
  %pm = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98
  tail call void @__mutex_init(ptr noundef %pm, ptr noundef nonnull @.str.55, ptr noundef nonnull @amdgpu_device_init.__key.54) #17
  tail call void @__mutex_init(ptr noundef %gfx, ptr noundef nonnull @.str.57, ptr noundef nonnull @amdgpu_device_init.__key.56) #17
  %srbm_mutex = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 20
  tail call void @__mutex_init(ptr noundef %srbm_mutex, ptr noundef nonnull @.str.59, ptr noundef nonnull @amdgpu_device_init.__key.58) #17
  %pipe_reserve_mutex = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 56
  tail call void @__mutex_init(ptr noundef %pipe_reserve_mutex, ptr noundef nonnull @.str.61, ptr noundef nonnull @amdgpu_device_init.__key.60) #17
  %gfx_off_mutex = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 53
  tail call void @__mutex_init(ptr noundef %gfx_off_mutex, ptr noundef nonnull @.str.63, ptr noundef nonnull @amdgpu_device_init.__key.62) #17
  %grbm_idx_mutex = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 21
  tail call void @__mutex_init(ptr noundef %grbm_idx_mutex, ptr noundef nonnull @.str.65, ptr noundef nonnull @amdgpu_device_init.__key.64) #17
  %mn_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 125
  tail call void @__mutex_init(ptr noundef %mn_lock, ptr noundef nonnull @.str.67, ptr noundef nonnull @amdgpu_device_init.__key.66) #17
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %vf_errors = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 10
  tail call void @__mutex_init(ptr noundef %vf_errors, ptr noundef nonnull @.str.69, ptr noundef nonnull @amdgpu_device_init.__key.68) #17
  %mn_hash = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 126
  %51 = call ptr @memset(ptr %mn_hash, i32 0, i32 512)
  %in_gpu_reset = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 141
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %in_gpu_reset, i32 noundef 4) #17
  %52 = ptrtoint ptr %in_gpu_reset to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile i32 0, ptr %in_gpu_reset, align 4
  %reset_sem = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 143
  tail call void @__init_rwsem(ptr noundef %reset_sem, ptr noundef nonnull @.str.71, ptr noundef nonnull @amdgpu_device_init.__key.70) #17
  %mutex55 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 113, i32 39
  tail call void @__mutex_init(ptr noundef %mutex55, ptr noundef nonnull @.str.73, ptr noundef nonnull @amdgpu_device_init.__key.72) #17
  %notifier_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 145
  tail call void @__mutex_init(ptr noundef %notifier_lock, ptr noundef nonnull @.str.75, ptr noundef nonnull @amdgpu_device_init.__key.74) #17
  %53 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %flags2, align 8
  %and.i = and i32 %54, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.amdgpu_device_init_apu_flags.exit_crit_edge, label %lor.lhs.false.i

entry.amdgpu_device_init_apu_flags.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_init_apu_flags.exit

lor.lhs.false.i:                                  ; preds = %entry
  %55 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 22, i32 %56)
  %cmp.i = icmp ult i32 %56, 22
  br i1 %cmp.i, label %lor.lhs.false.i.amdgpu_device_init_apu_flags.exit_crit_edge, label %if.end.i

lor.lhs.false.i.amdgpu_device_init_apu_flags.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_init_apu_flags.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  %57 = zext i32 %56 to i64
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values.417)
  switch i32 %56, label %if.end.i.amdgpu_device_init_apu_flags.exit_crit_edge [
    i32 22, label %sw.bb.i
    i32 24, label %sw.bb15.i
    i32 32, label %if.end.i.return.sink.split.i_crit_edge
    i32 27, label %sw.bb36.i
  ]

if.end.i.return.sink.split.i_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split.i

if.end.i.amdgpu_device_init_apu_flags.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_init_apu_flags.exit

sw.bb.i:                                          ; preds = %if.end.i
  %58 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %pdev1, align 4
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %59, i32 0, i32 8
  %60 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %device.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 5597, i16 %61)
  %cmp2.i = icmp eq i16 %61, 5597
  br i1 %cmp2.i, label %if.then4.i, label %sw.bb.i.if.end5.i_crit_edge

sw.bb.i.if.end5.i_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5.i

if.then4.i:                                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #19
  %apu_flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 10
  %62 = ptrtoint ptr %apu_flags.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %apu_flags.i, align 4
  %or.i = or i32 %63, 1
  store i32 %or.i, ptr %apu_flags.i, align 4
  %64 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %.pr.i = load i16, ptr %device.i, align 2
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %sw.bb.i.if.end5.i_crit_edge
  %65 = phi i16 [ %.pr.i, %if.then4.i ], [ %61, %sw.bb.i.if.end5.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 5592, i16 %65)
  %cmp9.i = icmp eq i16 %65, 5592
  br i1 %cmp9.i, label %if.end5.i.return.sink.split.i_crit_edge, label %if.end5.i.amdgpu_device_init_apu_flags.exit_crit_edge

if.end5.i.amdgpu_device_init_apu_flags.exit_crit_edge: ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_init_apu_flags.exit

if.end5.i.return.sink.split.i_crit_edge:          ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split.i

sw.bb15.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %66 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %pdev1, align 4
  %device17.i = getelementptr inbounds %struct.pci_dev, ptr %67, i32 0, i32 8
  %68 = ptrtoint ptr %device17.i to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %device17.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 5686, i16 %69)
  %switch.selectcmp.case1.i = icmp eq i16 %69, 5686
  call void @__sanitizer_cov_trace_const_cmp2(i16 5708, i16 %69)
  %switch.selectcmp.case2.i = icmp eq i16 %69, 5708
  %switch.selectcmp.i = or i1 %switch.selectcmp.case1.i, %switch.selectcmp.case2.i
  %70 = select i1 %switch.selectcmp.i, i32 8, i32 16
  br label %return.sink.split.i

sw.bb36.i:                                        ; preds = %if.end.i
  %71 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %pdev1, align 4
  %device38.i = getelementptr inbounds %struct.pci_dev, ptr %72, i32 0, i32 8
  %73 = ptrtoint ptr %device38.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %device38.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 5118, i16 %74)
  %cmp40.i = icmp eq i16 %74, 5118
  br i1 %cmp40.i, label %sw.bb36.i.return.sink.split.i_crit_edge, label %sw.bb36.i.amdgpu_device_init_apu_flags.exit_crit_edge

sw.bb36.i.amdgpu_device_init_apu_flags.exit_crit_edge: ; preds = %sw.bb36.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_init_apu_flags.exit

sw.bb36.i.return.sink.split.i_crit_edge:          ; preds = %sw.bb36.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split.i

return.sink.split.i:                              ; preds = %sw.bb36.i.return.sink.split.i_crit_edge, %sw.bb15.i, %if.end5.i.return.sink.split.i_crit_edge, %if.end.i.return.sink.split.i_crit_edge
  %.sink1.i = phi i32 [ 4, %if.end5.i.return.sink.split.i_crit_edge ], [ %70, %sw.bb15.i ], [ %56, %if.end.i.return.sink.split.i_crit_edge ], [ 64, %sw.bb36.i.return.sink.split.i_crit_edge ]
  %apu_flags43.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 10
  %75 = ptrtoint ptr %apu_flags43.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %apu_flags43.i, align 4
  %or35.i = or i32 %76, %.sink1.i
  store i32 %or35.i, ptr %apu_flags43.i, align 4
  br label %amdgpu_device_init_apu_flags.exit

amdgpu_device_init_apu_flags.exit:                ; preds = %return.sink.split.i, %sw.bb36.i.amdgpu_device_init_apu_flags.exit_crit_edge, %if.end5.i.amdgpu_device_init_apu_flags.exit_crit_edge, %if.end.i.amdgpu_device_init_apu_flags.exit_crit_edge, %lor.lhs.false.i.amdgpu_device_init_apu_flags.exit_crit_edge, %entry.amdgpu_device_init_apu_flags.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_sched_jobs to i32))
  %77 = load i32, ptr @amdgpu_sched_jobs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %77)
  %cmp.i927 = icmp slt i32 %77, 4
  br i1 %cmp.i927, label %do.end.i, label %if.else.i

do.end.i:                                         ; preds = %amdgpu_device_init_apu_flags.exit
  call void @__sanitizer_cov_trace_pc() #19
  %78 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %79, ptr noundef nonnull @.str.280, i32 noundef %77) #20
  br label %if.end25.sink.split.i

if.else.i:                                        ; preds = %amdgpu_device_init_apu_flags.exit
  %80 = tail call i32 @llvm.ctpop.i32(i32 %77) #17, !range !812
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %80)
  %cmp1.i.i = icmp ult i32 %80, 2
  br i1 %cmp1.i.i, label %if.else.i.if.end25.i_crit_edge, label %do.end3.i

if.else.i.if.end25.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end25.i

do.end3.i:                                        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #19
  %81 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %82, ptr noundef nonnull @.str.283, i32 noundef %77) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_sched_jobs to i32))
  %83 = load i32, ptr @amdgpu_sched_jobs, align 4
  %sub.i3.i = add i32 %83, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i3.i)
  %tobool.not.i.i.i.i = icmp eq i32 %sub.i3.i, 0
  %84 = tail call i32 @llvm.ctlz.i32(i32 %sub.i3.i, i1 true) #17, !range !812
  %sub.i.i.i.i = sub nuw nsw i32 32, %84
  %sub.i.i.op.i.i = shl nuw i32 1, %sub.i.i.i.i
  %shl.i.i = select i1 %tobool.not.i.i.i.i, i32 1, i32 %sub.i.i.op.i.i
  br label %if.end25.sink.split.i

if.end25.sink.split.i:                            ; preds = %do.end3.i, %do.end.i
  %cond24.sink.i = phi i32 [ 4, %do.end.i ], [ %shl.i.i, %do.end3.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @amdgpu_sched_jobs to i32))
  store i32 %cond24.sink.i, ptr @amdgpu_sched_jobs, align 4
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.end25.sink.split.i, %if.else.i.if.end25.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_gart_size to i32))
  %85 = load i32, ptr @amdgpu_gart_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %85)
  %cmp26.not.i = icmp ne i32 %85, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %85)
  %cmp28.i = icmp slt i32 %85, 32
  %or.cond.i = and i1 %cmp26.not.i, %cmp28.i
  br i1 %or.cond.i, label %do.end32.i, label %if.end25.i.if.end34.i_crit_edge

if.end25.i.if.end34.i_crit_edge:                  ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end34.i

do.end32.i:                                       ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #19
  %86 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %87, ptr noundef nonnull @.str.286, i32 noundef %85) #20
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @amdgpu_gart_size to i32))
  store i32 -1, ptr @amdgpu_gart_size, align 4
  br label %if.end34.i

if.end34.i:                                       ; preds = %do.end32.i, %if.end25.i.if.end34.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_gtt_size to i32))
  %88 = load i32, ptr @amdgpu_gtt_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %88)
  %cmp35.not.i = icmp ne i32 %88, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %88)
  %cmp38.i = icmp slt i32 %88, 32
  %or.cond1.i = and i1 %cmp35.not.i, %cmp38.i
  br i1 %or.cond1.i, label %do.end42.i, label %if.end34.i.if.end44.i_crit_edge

if.end34.i.if.end44.i_crit_edge:                  ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end44.i

do.end42.i:                                       ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #19
  %89 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %90, ptr noundef nonnull @.str.289, i32 noundef %88) #20
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @amdgpu_gtt_size to i32))
  store i32 -1, ptr @amdgpu_gtt_size, align 4
  br label %if.end44.i

if.end44.i:                                       ; preds = %do.end42.i, %if.end34.i.if.end44.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_vm_fragment_size to i32))
  %91 = load i32, ptr @amdgpu_vm_fragment_size, align 4
  %92 = zext i32 %91 to i64
  call void @__sanitizer_cov_trace_switch(i64 %92, ptr @__sancov_gen_cov_switch_values.418)
  switch i32 %91, label %do.end54.i [
    i32 -1, label %if.end44.i.if.end56.i_crit_edge
    i32 9, label %if.end44.i.if.end56.i_crit_edge1050
    i32 8, label %if.end44.i.if.end56.i_crit_edge1051
    i32 7, label %if.end44.i.if.end56.i_crit_edge1052
    i32 6, label %if.end44.i.if.end56.i_crit_edge1053
    i32 5, label %if.end44.i.if.end56.i_crit_edge1054
    i32 4, label %if.end44.i.if.end56.i_crit_edge1055
  ]

if.end44.i.if.end56.i_crit_edge1055:              ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end56.i

if.end44.i.if.end56.i_crit_edge1054:              ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end56.i

if.end44.i.if.end56.i_crit_edge1053:              ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end56.i

if.end44.i.if.end56.i_crit_edge1052:              ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end56.i

if.end44.i.if.end56.i_crit_edge1051:              ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end56.i

if.end44.i.if.end56.i_crit_edge1050:              ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end56.i

if.end44.i.if.end56.i_crit_edge:                  ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end56.i

do.end54.i:                                       ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #19
  %93 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %94, ptr noundef nonnull @.str.292) #20
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @amdgpu_vm_fragment_size to i32))
  store i32 -1, ptr @amdgpu_vm_fragment_size, align 4
  br label %if.end56.i

if.end56.i:                                       ; preds = %do.end54.i, %if.end44.i.if.end56.i_crit_edge, %if.end44.i.if.end56.i_crit_edge1050, %if.end44.i.if.end56.i_crit_edge1051, %if.end44.i.if.end56.i_crit_edge1052, %if.end44.i.if.end56.i_crit_edge1053, %if.end44.i.if.end56.i_crit_edge1054, %if.end44.i.if.end56.i_crit_edge1055
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_sched_hw_submission to i32))
  %95 = load i32, ptr @amdgpu_sched_hw_submission, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %95)
  %cmp57.i = icmp slt i32 %95, 2
  br i1 %cmp57.i, label %do.end61.i, label %if.else63.i

do.end61.i:                                       ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #19
  %96 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %97, ptr noundef nonnull @.str.295, i32 noundef %95) #20
  br label %if.end101.sink.split.i

if.else63.i:                                      ; preds = %if.end56.i
  %98 = tail call i32 @llvm.ctpop.i32(i32 %95) #17, !range !812
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %98)
  %cmp1.i4.i = icmp ult i32 %98, 2
  br i1 %cmp1.i4.i, label %if.else63.i.if.end101.i_crit_edge, label %do.end67.i

if.else63.i.if.end101.i_crit_edge:                ; preds = %if.else63.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end101.i

do.end67.i:                                       ; preds = %if.else63.i
  call void @__sanitizer_cov_trace_pc() #19
  %99 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %100, ptr noundef nonnull @.str.298, i32 noundef %95) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_sched_hw_submission to i32))
  %101 = load i32, ptr @amdgpu_sched_hw_submission, align 4
  %sub.i8.i = add i32 %101, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i8.i)
  %tobool.not.i.i.i9.i = icmp eq i32 %sub.i8.i, 0
  %102 = tail call i32 @llvm.ctlz.i32(i32 %sub.i8.i, i1 true) #17, !range !812
  %sub.i.i.i10.i = sub nuw nsw i32 32, %102
  %sub.i.i.op.i11.i = shl nuw i32 1, %sub.i.i.i10.i
  %shl.i12.i = select i1 %tobool.not.i.i.i9.i, i32 1, i32 %sub.i.i.op.i11.i
  br label %if.end101.sink.split.i

if.end101.sink.split.i:                           ; preds = %do.end67.i, %do.end61.i
  %cond99.sink.i = phi i32 [ 2, %do.end61.i ], [ %shl.i12.i, %do.end67.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @amdgpu_sched_hw_submission to i32))
  store i32 %cond99.sink.i, ptr @amdgpu_sched_hw_submission, align 4
  br label %if.end101.i

if.end101.i:                                      ; preds = %if.end101.sink.split.i, %if.else63.i.if.end101.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_smu_memory_pool_size to i32))
  %103 = load i32, ptr @amdgpu_smu_memory_pool_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %103)
  %cmp.i.i = icmp eq i32 %103, 0
  br i1 %cmp.i.i, label %if.end101.i.amdgpu_device_check_smu_prv_buffer_size.exit.i_crit_edge, label %do.end.i.i

if.end101.i.amdgpu_device_check_smu_prv_buffer_size.exit.i_crit_edge: ; preds = %if.end101.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_check_smu_prv_buffer_size.exit.i

do.end.i.i:                                       ; preds = %if.end101.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i929 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.300) #20
  %smu_prv_buffer_size37.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 21
  %104 = ptrtoint ptr %smu_prv_buffer_size37.i.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 0, ptr %smu_prv_buffer_size37.i.i, align 4
  br label %amdgpu_device_check_smu_prv_buffer_size.exit.i

amdgpu_device_check_smu_prv_buffer_size.exit.i:   ; preds = %do.end.i.i, %if.end101.i.amdgpu_device_check_smu_prv_buffer_size.exit.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_vm_size to i32))
  %105 = load i32, ptr @amdgpu_vm_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %105)
  %cmp.i13.i = icmp ne i32 %105, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %105)
  %cmp1.i14.i = icmp slt i32 %105, 1
  %or.cond.i.i = and i1 %cmp.i13.i, %cmp1.i14.i
  br i1 %or.cond.i.i, label %do.end.i15.i, label %amdgpu_device_check_smu_prv_buffer_size.exit.i.amdgpu_device_check_vm_size.exit.i_crit_edge

amdgpu_device_check_smu_prv_buffer_size.exit.i.amdgpu_device_check_vm_size.exit.i_crit_edge: ; preds = %amdgpu_device_check_smu_prv_buffer_size.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_check_vm_size.exit.i

do.end.i15.i:                                     ; preds = %amdgpu_device_check_smu_prv_buffer_size.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %106 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %107, ptr noundef nonnull @.str.308, i32 noundef %105) #20
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @amdgpu_vm_size to i32))
  store i32 -1, ptr @amdgpu_vm_size, align 4
  br label %amdgpu_device_check_vm_size.exit.i

amdgpu_device_check_vm_size.exit.i:               ; preds = %do.end.i15.i, %amdgpu_device_check_smu_prv_buffer_size.exit.i.amdgpu_device_check_vm_size.exit.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_vm_block_size to i32))
  %108 = load i32, ptr @amdgpu_vm_block_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %108)
  %cmp.i16.i = icmp ne i32 %108, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %108)
  %cmp1.i17.i = icmp slt i32 %108, 9
  %or.cond.i18.i = and i1 %cmp.i16.i, %cmp1.i17.i
  br i1 %or.cond.i18.i, label %do.end.i19.i, label %amdgpu_device_check_vm_size.exit.i.amdgpu_device_check_arguments.exit_crit_edge

amdgpu_device_check_vm_size.exit.i.amdgpu_device_check_arguments.exit_crit_edge: ; preds = %amdgpu_device_check_vm_size.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_check_arguments.exit

do.end.i19.i:                                     ; preds = %amdgpu_device_check_vm_size.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %109 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %110, ptr noundef nonnull @.str.310, i32 noundef %108) #20
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @amdgpu_vm_block_size to i32))
  store i32 -1, ptr @amdgpu_vm_block_size, align 4
  br label %amdgpu_device_check_arguments.exit

amdgpu_device_check_arguments.exit:               ; preds = %do.end.i19.i, %amdgpu_device_check_vm_size.exit.i.amdgpu_device_check_arguments.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_fw_load_type to i32))
  %111 = load i32, ptr @amdgpu_fw_load_type, align 4
  %call102.i = tail call i32 @amdgpu_ucode_get_load_type(ptr noundef %adev, i32 noundef %111) #17
  %load_type.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 1
  %112 = ptrtoint ptr %load_type.i to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 %call102.i, ptr %load_type.i, align 8
  tail call void @amdgpu_gmc_tmz_set(ptr noundef %adev) #17
  tail call void @amdgpu_gmc_noretry_set(ptr noundef %adev) #17
  %mmio_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 33
  tail call void @__raw_spin_lock_init(ptr noundef %mmio_idx_lock, ptr noundef nonnull @.str.77, ptr noundef nonnull @amdgpu_device_init.__key.76, i16 noundef signext 3) #17
  %smc_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 35
  tail call void @__raw_spin_lock_init(ptr noundef %smc_idx_lock, ptr noundef nonnull @.str.79, ptr noundef nonnull @amdgpu_device_init.__key.78, i16 noundef signext 3) #17
  %pcie_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 38
  tail call void @__raw_spin_lock_init(ptr noundef %pcie_idx_lock, ptr noundef nonnull @.str.81, ptr noundef nonnull @amdgpu_device_init.__key.80, i16 noundef signext 3) #17
  %uvd_ctx_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 45
  tail call void @__raw_spin_lock_init(ptr noundef %uvd_ctx_idx_lock, ptr noundef nonnull @.str.83, ptr noundef nonnull @amdgpu_device_init.__key.82, i16 noundef signext 3) #17
  %didt_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 48
  tail call void @__raw_spin_lock_init(ptr noundef %didt_idx_lock, ptr noundef nonnull @.str.85, ptr noundef nonnull @amdgpu_device_init.__key.84, i16 noundef signext 3) #17
  %gc_cac_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 51
  tail call void @__raw_spin_lock_init(ptr noundef %gc_cac_idx_lock, ptr noundef nonnull @.str.87, ptr noundef nonnull @amdgpu_device_init.__key.86, i16 noundef signext 3) #17
  %se_cac_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 54
  tail call void @__raw_spin_lock_init(ptr noundef %se_cac_idx_lock, ptr noundef nonnull @.str.89, ptr noundef nonnull @amdgpu_device_init.__key.88, i16 noundef signext 3) #17
  %audio_endpt_idx_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 57
  tail call void @__raw_spin_lock_init(ptr noundef %audio_endpt_idx_lock, ptr noundef nonnull @.str.91, ptr noundef nonnull @amdgpu_device_init.__key.90, i16 noundef signext 3) #17
  %mm_stats = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 76
  tail call void @__raw_spin_lock_init(ptr noundef %mm_stats, ptr noundef nonnull @.str.93, ptr noundef nonnull @amdgpu_device_init.__key.92, i16 noundef signext 3) #17
  %shadow_list = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 133
  %113 = ptrtoint ptr %shadow_list to i32
  call void @__asan_store4_noabort(i32 %113)
  store volatile ptr %shadow_list, ptr %shadow_list, align 4
  %prev.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 133, i32 1
  %114 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %shadow_list, ptr %prev.i, align 4
  %shadow_list_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 134
  tail call void @__mutex_init(ptr noundef %shadow_list_lock, ptr noundef nonnull @.str.95, ptr noundef nonnull @amdgpu_device_init.__key.94) #17
  %reset_list = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 148
  %115 = ptrtoint ptr %reset_list to i32
  call void @__asan_store4_noabort(i32 %115)
  store volatile ptr %reset_list, ptr %reset_list, align 4
  %prev.i930 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 148, i32 1
  %116 = ptrtoint ptr %prev.i930 to i32
  call void @__asan_store4_noabort(i32 %116)
  store ptr %reset_list, ptr %prev.i930, align 4
  %delayed_init_work = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 131
  tail call void @__init_work(ptr noundef %delayed_init_work, i32 noundef 0) #17
  %117 = ptrtoint ptr %delayed_init_work to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 -64, ptr %delayed_init_work, align 8
  %lockdep_map = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 131, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.97, ptr noundef nonnull @amdgpu_device_init.__key.96, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %entry113 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 131, i32 0, i32 1
  %118 = ptrtoint ptr %entry113 to i32
  call void @__asan_store4_noabort(i32 %118)
  store volatile ptr %entry113, ptr %entry113, align 4
  %prev.i931 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 131, i32 0, i32 1, i32 1
  %119 = ptrtoint ptr %prev.i931 to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr %entry113, ptr %prev.i931, align 4
  %func = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 131, i32 0, i32 2
  %120 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr @amdgpu_device_delayed_init_work_handler, ptr %func, align 4
  %timer = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 131, i32 1
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.99, ptr noundef nonnull @amdgpu_device_init.__key.98) #17
  %gfx_off_delay_work = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 55
  tail call void @__init_work(ptr noundef %gfx_off_delay_work, i32 noundef 0) #17
  %121 = ptrtoint ptr %gfx_off_delay_work to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 -64, ptr %gfx_off_delay_work, align 4
  %lockdep_map137 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 55, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map137, ptr noundef nonnull @.str.101, ptr noundef nonnull @amdgpu_device_init.__key.100, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %entry141 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 55, i32 0, i32 1
  %122 = ptrtoint ptr %entry141 to i32
  call void @__asan_store4_noabort(i32 %122)
  store volatile ptr %entry141, ptr %entry141, align 4
  %prev.i932 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 55, i32 0, i32 1, i32 1
  %123 = ptrtoint ptr %prev.i932 to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr %entry141, ptr %prev.i932, align 4
  %func145 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 55, i32 0, i32 2
  %124 = ptrtoint ptr %func145 to i32
  call void @__asan_store4_noabort(i32 %124)
  store ptr @amdgpu_device_delay_enable_gfx_off, ptr %func145, align 4
  %timer151 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 55, i32 1
  tail call void @init_timer_key(ptr noundef %timer151, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.103, ptr noundef nonnull @amdgpu_device_init.__key.102) #17
  %xgmi_reset_work = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 147
  tail call void @__init_work(ptr noundef %xgmi_reset_work, i32 noundef 0) #17
  %125 = ptrtoint ptr %xgmi_reset_work to i32
  call void @__asan_store4_noabort(i32 %125)
  store i32 -64, ptr %xgmi_reset_work, align 8
  %lockdep_map162 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 147, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map162, ptr noundef nonnull @.str.105, ptr noundef nonnull @amdgpu_device_init.__key.104, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %entry164 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 147, i32 1
  %126 = ptrtoint ptr %entry164 to i32
  call void @__asan_store4_noabort(i32 %126)
  store volatile ptr %entry164, ptr %entry164, align 4
  %prev.i933 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 147, i32 1, i32 1
  %127 = ptrtoint ptr %prev.i933 to i32
  call void @__asan_store4_noabort(i32 %127)
  store ptr %entry164, ptr %prev.i933, align 4
  %func166 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 147, i32 2
  %128 = ptrtoint ptr %func166 to i32
  call void @__asan_store4_noabort(i32 %128)
  store ptr @amdgpu_device_xgmi_reset_func, ptr %func166, align 4
  %gfx_off_req_count = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 54
  %129 = ptrtoint ptr %gfx_off_req_count to i32
  call void @__asan_store4_noabort(i32 %129)
  store i32 1, ptr %gfx_off_req_count, align 8
  %call170 = tail call i32 @power_supply_is_system_supplied() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call170)
  %cmp171 = icmp sgt i32 %call170, 0
  %ac_power = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 23
  %frombool = zext i1 %cmp171 to i8
  %130 = ptrtoint ptr %ac_power to i32
  call void @__asan_store1_noabort(i32 %130)
  store i8 %frombool, ptr %ac_power, align 4
  %throttling_logging_enabled = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 164
  %call.i.i925 = tail call zeroext i1 @__kasan_check_write(ptr noundef %throttling_logging_enabled, i32 noundef 4) #17
  %131 = ptrtoint ptr %throttling_logging_enabled to i32
  call void @__asan_store4_noabort(i32 %131)
  store volatile i32 1, ptr %throttling_logging_enabled, align 4
  %throttling_logging_rs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 165
  %132 = call ptr @memset(ptr %throttling_logging_rs, i32 0, i32 68)
  tail call void @__raw_spin_lock_init(ptr noundef %throttling_logging_rs, ptr noundef nonnull @.str.316, ptr noundef nonnull @ratelimit_state_init.__key, i16 noundef signext 2) #17
  %interval1.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 165, i32 1
  %133 = ptrtoint ptr %interval1.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 5900, ptr %interval1.i, align 4
  %burst2.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 165, i32 2
  %134 = ptrtoint ptr %burst2.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 1, ptr %burst2.i, align 4
  %flags1.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 165, i32 6
  %135 = ptrtoint ptr %flags1.i to i32
  call void @__asan_store4_noabort(i32 %135)
  store i32 1, ptr %flags1.i, align 4
  %136 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %137)
  %cmp176 = icmp ugt i32 %137, 4
  %138 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %pdev1, align 4
  br i1 %cmp176, label %if.then178, label %if.else194

if.then178:                                       ; preds = %amdgpu_device_check_arguments.exit
  %arrayidx180 = getelementptr %struct.pci_dev, ptr %139, i32 0, i32 47, i32 5
  %140 = ptrtoint ptr %arrayidx180 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %arrayidx180, align 8
  %rmmio_base = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 30
  %142 = ptrtoint ptr %rmmio_base to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 %141, ptr %rmmio_base, align 8
  %end = getelementptr %struct.pci_dev, ptr %139, i32 0, i32 47, i32 5, i32 1
  %143 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %144)
  %cmp184 = icmp eq i32 %144, 0
  br i1 %cmp184, label %if.then178.if.end221_crit_edge, label %if.then178.if.end221.sink.split_crit_edge

if.then178.if.end221.sink.split_crit_edge:        ; preds = %if.then178
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end221.sink.split

if.then178.if.end221_crit_edge:                   ; preds = %if.then178
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end221

if.else194:                                       ; preds = %amdgpu_device_check_arguments.exit
  %arrayidx197 = getelementptr %struct.pci_dev, ptr %139, i32 0, i32 47, i32 2
  %145 = ptrtoint ptr %arrayidx197 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %arrayidx197, align 8
  %rmmio_base199 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 30
  %147 = ptrtoint ptr %rmmio_base199 to i32
  call void @__asan_store4_noabort(i32 %147)
  store i32 %146, ptr %rmmio_base199, align 8
  %end203 = getelementptr %struct.pci_dev, ptr %139, i32 0, i32 47, i32 2, i32 1
  %148 = ptrtoint ptr %end203 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %end203, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %149)
  %cmp204 = icmp eq i32 %149, 0
  br i1 %cmp204, label %if.else194.if.end221_crit_edge, label %if.else194.if.end221.sink.split_crit_edge

if.else194.if.end221.sink.split_crit_edge:        ; preds = %if.else194
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end221.sink.split

if.else194.if.end221_crit_edge:                   ; preds = %if.else194
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end221

if.end221.sink.split:                             ; preds = %if.else194.if.end221.sink.split_crit_edge, %if.then178.if.end221.sink.split_crit_edge
  %arrayidx197.sink = phi ptr [ %arrayidx180, %if.then178.if.end221.sink.split_crit_edge ], [ %arrayidx197, %if.else194.if.end221.sink.split_crit_edge ]
  %.sink1022 = phi i32 [ %144, %if.then178.if.end221.sink.split_crit_edge ], [ %149, %if.else194.if.end221.sink.split_crit_edge ]
  %150 = ptrtoint ptr %arrayidx197.sink to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %arrayidx197.sink, align 8
  %sub216 = add i32 %.sink1022, 1
  %add217 = sub i32 %sub216, %151
  br label %if.end221

if.end221:                                        ; preds = %if.end221.sink.split, %if.else194.if.end221_crit_edge, %if.then178.if.end221_crit_edge
  %cond219.sink = phi i32 [ 0, %if.then178.if.end221_crit_edge ], [ 0, %if.else194.if.end221_crit_edge ], [ %add217, %if.end221.sink.split ]
  %rmmio_size220 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 31
  %152 = ptrtoint ptr %rmmio_size220 to i32
  call void @__asan_store4_noabort(i32 %152)
  store i32 %cond219.sink, ptr %rmmio_size220, align 4
  %arrayidx225 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 0
  %call.i.i926 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225, i32 noundef 4) #17
  %153 = ptrtoint ptr %arrayidx225 to i32
  call void @__asan_store4_noabort(i32 %153)
  store volatile i32 0, ptr %arrayidx225, align 4
  %arrayidx225.1 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 1
  %call.i.i926.1 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.1, i32 noundef 4) #17
  %154 = ptrtoint ptr %arrayidx225.1 to i32
  call void @__asan_store4_noabort(i32 %154)
  store volatile i32 0, ptr %arrayidx225.1, align 4
  %arrayidx225.2 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 2
  %call.i.i926.2 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.2, i32 noundef 4) #17
  %155 = ptrtoint ptr %arrayidx225.2 to i32
  call void @__asan_store4_noabort(i32 %155)
  store volatile i32 0, ptr %arrayidx225.2, align 4
  %arrayidx225.3 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 3
  %call.i.i926.3 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.3, i32 noundef 4) #17
  %156 = ptrtoint ptr %arrayidx225.3 to i32
  call void @__asan_store4_noabort(i32 %156)
  store volatile i32 0, ptr %arrayidx225.3, align 4
  %arrayidx225.4 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 4
  %call.i.i926.4 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.4, i32 noundef 4) #17
  %157 = ptrtoint ptr %arrayidx225.4 to i32
  call void @__asan_store4_noabort(i32 %157)
  store volatile i32 0, ptr %arrayidx225.4, align 4
  %arrayidx225.5 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 5
  %call.i.i926.5 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.5, i32 noundef 4) #17
  %158 = ptrtoint ptr %arrayidx225.5 to i32
  call void @__asan_store4_noabort(i32 %158)
  store volatile i32 0, ptr %arrayidx225.5, align 4
  %arrayidx225.6 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 6
  %call.i.i926.6 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.6, i32 noundef 4) #17
  %159 = ptrtoint ptr %arrayidx225.6 to i32
  call void @__asan_store4_noabort(i32 %159)
  store volatile i32 0, ptr %arrayidx225.6, align 4
  %arrayidx225.7 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 7
  %call.i.i926.7 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.7, i32 noundef 4) #17
  %160 = ptrtoint ptr %arrayidx225.7 to i32
  call void @__asan_store4_noabort(i32 %160)
  store volatile i32 0, ptr %arrayidx225.7, align 4
  %arrayidx225.8 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 8
  %call.i.i926.8 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.8, i32 noundef 4) #17
  %161 = ptrtoint ptr %arrayidx225.8 to i32
  call void @__asan_store4_noabort(i32 %161)
  store volatile i32 0, ptr %arrayidx225.8, align 4
  %arrayidx225.9 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 9
  %call.i.i926.9 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.9, i32 noundef 4) #17
  %162 = ptrtoint ptr %arrayidx225.9 to i32
  call void @__asan_store4_noabort(i32 %162)
  store volatile i32 0, ptr %arrayidx225.9, align 4
  %arrayidx225.10 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 10
  %call.i.i926.10 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.10, i32 noundef 4) #17
  %163 = ptrtoint ptr %arrayidx225.10 to i32
  call void @__asan_store4_noabort(i32 %163)
  store volatile i32 0, ptr %arrayidx225.10, align 4
  %arrayidx225.11 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 11
  %call.i.i926.11 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.11, i32 noundef 4) #17
  %164 = ptrtoint ptr %arrayidx225.11 to i32
  call void @__asan_store4_noabort(i32 %164)
  store volatile i32 0, ptr %arrayidx225.11, align 4
  %arrayidx225.12 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 12
  %call.i.i926.12 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.12, i32 noundef 4) #17
  %165 = ptrtoint ptr %arrayidx225.12 to i32
  call void @__asan_store4_noabort(i32 %165)
  store volatile i32 0, ptr %arrayidx225.12, align 4
  %arrayidx225.13 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 28, i32 13
  %call.i.i926.13 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx225.13, i32 noundef 4) #17
  %166 = ptrtoint ptr %arrayidx225.13 to i32
  call void @__asan_store4_noabort(i32 %166)
  store volatile i32 0, ptr %arrayidx225.13, align 4
  %rmmio_base226 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 30
  %167 = ptrtoint ptr %rmmio_base226 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %rmmio_base226, align 8
  %rmmio_size227 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 31
  %169 = ptrtoint ptr %rmmio_size227 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %rmmio_size227, align 4
  %call228 = tail call ptr @ioremap(i32 noundef %168, i32 noundef %170) #17
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %171 = ptrtoint ptr %rmmio to i32
  call void @__asan_store4_noabort(i32 %171)
  store ptr %call228, ptr %rmmio, align 8
  %cmp230 = icmp eq ptr %call228, null
  br i1 %cmp230, label %if.end221.cleanup_crit_edge, label %do.end236

if.end221.cleanup_crit_edge:                      ; preds = %if.end221
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end236:                                        ; preds = %if.end221
  %172 = ptrtoint ptr %rmmio_base226 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %rmmio_base226, align 8
  %call239 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.107, i32 noundef %173) #20
  %174 = ptrtoint ptr %rmmio_size227 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %rmmio_size227, align 4
  %call245 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.110, i32 noundef %175) #20
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %platform_speed_cap.i) #17
  %176 = ptrtoint ptr %platform_speed_cap.i to i32
  call void @__asan_store4_noabort(i32 %176)
  store i32 -1, ptr %platform_speed_cap.i, align 4, !annotation !767
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %platform_link_width.i) #17
  %177 = ptrtoint ptr %platform_link_width.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 -1, ptr %platform_link_width.i, align 4, !annotation !767
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_pcie_gen_cap to i32))
  %178 = load i32, ptr @amdgpu_pcie_gen_cap, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %178)
  %tobool.not.i934 = icmp eq i32 %178, 0
  br i1 %tobool.not.i934, label %do.end236.if.end.i935_crit_edge, label %if.then.i

do.end236.if.end.i935_crit_edge:                  ; preds = %do.end236
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i935

if.then.i:                                        ; preds = %do.end236
  call void @__sanitizer_cov_trace_pc() #19
  %pcie_gen_mask.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 18
  %179 = ptrtoint ptr %pcie_gen_mask.i to i32
  call void @__asan_store4_noabort(i32 %179)
  store i32 %178, ptr %pcie_gen_mask.i, align 8
  br label %if.end.i935

if.end.i935:                                      ; preds = %if.then.i, %do.end236.if.end.i935_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_pcie_lane_cap to i32))
  %180 = load i32, ptr @amdgpu_pcie_lane_cap, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %180)
  %tobool1.not.i = icmp eq i32 %180, 0
  br i1 %tobool1.not.i, label %if.end.i935.if.end4.i_crit_edge, label %if.then2.i

if.end.i935.if.end4.i_crit_edge:                  ; preds = %if.end.i935
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i

if.then2.i:                                       ; preds = %if.end.i935
  call void @__sanitizer_cov_trace_pc() #19
  %pcie_mlw_mask.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 19
  %181 = ptrtoint ptr %pcie_mlw_mask.i to i32
  call void @__asan_store4_noabort(i32 %181)
  store i32 %180, ptr %pcie_mlw_mask.i, align 4
  br label %if.end4.i

if.end4.i:                                        ; preds = %if.then2.i, %if.end.i935.if.end4.i_crit_edge
  %182 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %pdev1, align 4
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %183, i32 0, i32 1
  %184 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %bus.i, align 8
  %parent.i.i = getelementptr inbounds %struct.pci_bus, ptr %185, i32 0, i32 1
  %186 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %187, null
  %pcie_gen_mask8.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 18
  %188 = ptrtoint ptr %pcie_gen_mask8.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %pcie_gen_mask8.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %189)
  %cmp.i936 = icmp eq i32 %189, 0
  br i1 %tobool.not.i.i, label %if.then6.i, label %if.end20.i

if.then6.i:                                       ; preds = %if.end4.i
  br i1 %cmp.i936, label %if.then9.i, label %if.then6.i.if.end12.i_crit_edge

if.then6.i.if.end12.i_crit_edge:                  ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i

if.then9.i:                                       ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #19
  %190 = ptrtoint ptr %pcie_gen_mask8.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 196615, ptr %pcie_gen_mask8.i, align 8
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then9.i, %if.then6.i.if.end12.i_crit_edge
  %pcie_mlw_mask14.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 19
  %191 = ptrtoint ptr %pcie_mlw_mask14.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %pcie_mlw_mask14.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %192)
  %cmp15.i = icmp eq i32 %192, 0
  br i1 %cmp15.i, label %if.then16.i, label %if.end12.i.amdgpu_device_get_pcie_info.exit_crit_edge

if.end12.i.amdgpu_device_get_pcie_info.exit_crit_edge: ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_get_pcie_info.exit

if.then16.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  %193 = ptrtoint ptr %pcie_mlw_mask14.i to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 3080192, ptr %pcie_mlw_mask14.i, align 4
  br label %amdgpu_device_get_pcie_info.exit

if.end20.i:                                       ; preds = %if.end4.i
  br i1 %cmp.i936, label %if.end20.i.if.end28.i_crit_edge, label %land.lhs.true.i

if.end20.i.if.end28.i_crit_edge:                  ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28.i

land.lhs.true.i:                                  ; preds = %if.end20.i
  %pcie_mlw_mask25.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 19
  %194 = ptrtoint ptr %pcie_mlw_mask25.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %pcie_mlw_mask25.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %195)
  %tobool26.not.i = icmp eq i32 %195, 0
  br i1 %tobool26.not.i, label %land.lhs.true.i.if.end28.i_crit_edge, label %land.lhs.true.i.amdgpu_device_get_pcie_info.exit_crit_edge

land.lhs.true.i.amdgpu_device_get_pcie_info.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_get_pcie_info.exit

land.lhs.true.i.if.end28.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28.i

if.end28.i:                                       ; preds = %land.lhs.true.i.if.end28.i_crit_edge, %if.end20.i.if.end28.i_crit_edge
  %call30.i = call i32 @pcie_bandwidth_available(ptr noundef %183, ptr noundef null, ptr noundef nonnull %platform_speed_cap.i, ptr noundef nonnull %platform_link_width.i) #17
  %196 = ptrtoint ptr %pcie_gen_mask8.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %pcie_gen_mask8.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %197)
  %cmp33.i = icmp eq i32 %197, 0
  br i1 %cmp33.i, label %if.then34.i, label %if.end28.i.if.end111.i_crit_edge

if.end28.i.if.end111.i_crit_edge:                 ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end111.i

if.then34.i:                                      ; preds = %if.end28.i
  %198 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %pdev1, align 4
  %call36.i = call i32 @pcie_get_speed_cap(ptr noundef %199) #17
  %200 = zext i32 %call36.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %200, ptr @__sancov_gen_cov_switch_values.419)
  switch i32 %call36.i, label %if.else64.i [
    i32 255, label %if.then34.i.if.end72.i_crit_edge
    i32 24, label %if.then42.i
    i32 23, label %if.then48.i
    i32 22, label %if.then34.i.if.end72.i_crit_edge1056
    i32 21, label %if.then60.i
  ]

if.then34.i.if.end72.i_crit_edge1056:             ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end72.i

if.then34.i.if.end72.i_crit_edge:                 ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end72.i

if.then42.i:                                      ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end72.i

if.then48.i:                                      ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end72.i

if.then60.i:                                      ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end72.i

if.else64.i:                                      ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end72.i

if.end72.i:                                       ; preds = %if.else64.i, %if.then60.i, %if.then48.i, %if.then42.i, %if.then34.i.if.end72.i_crit_edge, %if.then34.i.if.end72.i_crit_edge1056
  %.sink187.i = phi i32 [ 31, %if.then42.i ], [ 1, %if.else64.i ], [ 3, %if.then60.i ], [ 15, %if.then48.i ], [ 7, %if.then34.i.if.end72.i_crit_edge ], [ 7, %if.then34.i.if.end72.i_crit_edge1056 ]
  %201 = ptrtoint ptr %pcie_gen_mask8.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %pcie_gen_mask8.i, align 8
  %or45.i = or i32 %202, %.sink187.i
  %203 = ptrtoint ptr %platform_speed_cap.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %platform_speed_cap.i, align 4
  %205 = zext i32 %204 to i64
  call void @__sanitizer_cov_trace_switch(i64 %205, ptr @__sancov_gen_cov_switch_values.420)
  switch i32 %204, label %if.else102.i [
    i32 255, label %if.end72.i.if.end111.sink.split.i_crit_edge
    i32 24, label %if.then80.i
    i32 23, label %if.then86.i
    i32 22, label %if.then92.i
    i32 21, label %if.end72.i.if.end111.sink.split.i_crit_edge1057
  ]

if.end72.i.if.end111.sink.split.i_crit_edge1057:  ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end111.sink.split.i

if.end72.i.if.end111.sink.split.i_crit_edge:      ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end111.sink.split.i

if.then80.i:                                      ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end111.sink.split.i

if.then86.i:                                      ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end111.sink.split.i

if.then92.i:                                      ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end111.sink.split.i

if.else102.i:                                     ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end111.sink.split.i

if.end111.sink.split.i:                           ; preds = %if.else102.i, %if.then92.i, %if.then86.i, %if.then80.i, %if.end72.i.if.end111.sink.split.i_crit_edge, %if.end72.i.if.end111.sink.split.i_crit_edge1057
  %.sink188.i = phi i32 [ 983040, %if.then86.i ], [ 65536, %if.else102.i ], [ 458752, %if.then92.i ], [ 2031616, %if.then80.i ], [ 196608, %if.end72.i.if.end111.sink.split.i_crit_edge ], [ 196608, %if.end72.i.if.end111.sink.split.i_crit_edge1057 ]
  %or77.i = or i32 %.sink188.i, %or45.i
  %206 = ptrtoint ptr %pcie_gen_mask8.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 %or77.i, ptr %pcie_gen_mask8.i, align 8
  br label %if.end111.i

if.end111.i:                                      ; preds = %if.end111.sink.split.i, %if.end28.i.if.end111.i_crit_edge
  %pcie_mlw_mask113.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 19
  %207 = ptrtoint ptr %pcie_mlw_mask113.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %pcie_mlw_mask113.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %208)
  %cmp114.i = icmp eq i32 %208, 0
  br i1 %cmp114.i, label %if.then115.i, label %if.end111.i.amdgpu_device_get_pcie_info.exit_crit_edge

if.end111.i.amdgpu_device_get_pcie_info.exit_crit_edge: ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_get_pcie_info.exit

if.then115.i:                                     ; preds = %if.end111.i
  %209 = ptrtoint ptr %platform_link_width.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %platform_link_width.i, align 4
  %211 = zext i32 %210 to i64
  call void @__sanitizer_cov_trace_switch(i64 %211, ptr @__sancov_gen_cov_switch_values.421)
  switch i32 %210, label %if.then115.i.amdgpu_device_get_pcie_info.exit_crit_edge [
    i32 255, label %if.then117.i
    i32 32, label %sw.bb.i937
    i32 16, label %sw.bb124.i
    i32 12, label %sw.bb127.i
    i32 8, label %sw.bb130.i
    i32 4, label %sw.bb133.i
    i32 2, label %sw.bb136.i
    i32 1, label %sw.bb139.i
  ]

if.then115.i.amdgpu_device_get_pcie_info.exit_crit_edge: ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_get_pcie_info.exit

if.then117.i:                                     ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #19
  %212 = ptrtoint ptr %pcie_mlw_mask113.i to i32
  call void @__asan_store4_noabort(i32 %212)
  store i32 3080192, ptr %pcie_mlw_mask113.i, align 4
  br label %amdgpu_device_get_pcie_info.exit

sw.bb.i937:                                       ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #19
  %213 = ptrtoint ptr %pcie_mlw_mask113.i to i32
  call void @__asan_store4_noabort(i32 %213)
  store i32 8323072, ptr %pcie_mlw_mask113.i, align 4
  br label %amdgpu_device_get_pcie_info.exit

sw.bb124.i:                                       ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #19
  %214 = ptrtoint ptr %pcie_mlw_mask113.i to i32
  call void @__asan_store4_noabort(i32 %214)
  store i32 4128768, ptr %pcie_mlw_mask113.i, align 4
  br label %amdgpu_device_get_pcie_info.exit

sw.bb127.i:                                       ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #19
  %215 = ptrtoint ptr %pcie_mlw_mask113.i to i32
  call void @__asan_store4_noabort(i32 %215)
  store i32 2031616, ptr %pcie_mlw_mask113.i, align 4
  br label %amdgpu_device_get_pcie_info.exit

sw.bb130.i:                                       ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #19
  %216 = ptrtoint ptr %pcie_mlw_mask113.i to i32
  call void @__asan_store4_noabort(i32 %216)
  store i32 983040, ptr %pcie_mlw_mask113.i, align 4
  br label %amdgpu_device_get_pcie_info.exit

sw.bb133.i:                                       ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #19
  %217 = ptrtoint ptr %pcie_mlw_mask113.i to i32
  call void @__asan_store4_noabort(i32 %217)
  store i32 458752, ptr %pcie_mlw_mask113.i, align 4
  br label %amdgpu_device_get_pcie_info.exit

sw.bb136.i:                                       ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #19
  %218 = ptrtoint ptr %pcie_mlw_mask113.i to i32
  call void @__asan_store4_noabort(i32 %218)
  store i32 196608, ptr %pcie_mlw_mask113.i, align 4
  br label %amdgpu_device_get_pcie_info.exit

sw.bb139.i:                                       ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #19
  %219 = ptrtoint ptr %pcie_mlw_mask113.i to i32
  call void @__asan_store4_noabort(i32 %219)
  store i32 65536, ptr %pcie_mlw_mask113.i, align 4
  br label %amdgpu_device_get_pcie_info.exit

amdgpu_device_get_pcie_info.exit:                 ; preds = %sw.bb139.i, %sw.bb136.i, %sw.bb133.i, %sw.bb130.i, %sw.bb127.i, %sw.bb124.i, %sw.bb.i937, %if.then117.i, %if.then115.i.amdgpu_device_get_pcie_info.exit_crit_edge, %if.end111.i.amdgpu_device_get_pcie_info.exit_crit_edge, %land.lhs.true.i.amdgpu_device_get_pcie_info.exit_crit_edge, %if.then16.i, %if.end12.i.amdgpu_device_get_pcie_info.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %platform_link_width.i) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %platform_speed_cap.i) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_mcbp to i32))
  %220 = load i32, ptr @amdgpu_mcbp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %220)
  %tobool246.not = icmp eq i32 %220, 0
  br i1 %tobool246.not, label %amdgpu_device_get_pcie_info.exit.if.end253_crit_edge, label %do.end250

amdgpu_device_get_pcie_info.exit.if.end253_crit_edge: ; preds = %amdgpu_device_get_pcie_info.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end253

do.end250:                                        ; preds = %amdgpu_device_get_pcie_info.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call252 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.113) #20
  br label %if.end253

if.end253:                                        ; preds = %do.end250, %amdgpu_device_get_pcie_info.exit.if.end253_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_mes to i32))
  %221 = load i32, ptr @amdgpu_mes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %221)
  %tobool254.not = icmp eq i32 %221, 0
  br i1 %tobool254.not, label %if.end253.if.end260_crit_edge, label %land.lhs.true255

if.end253.if.end260_crit_edge:                    ; preds = %if.end253
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end260

land.lhs.true255:                                 ; preds = %if.end253
  %222 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 25, i32 %223)
  %cmp257 = icmp ugt i32 %223, 25
  br i1 %cmp257, label %if.then259, label %land.lhs.true255.if.end260_crit_edge

land.lhs.true255.if.end260_crit_edge:             ; preds = %land.lhs.true255
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end260

if.then259:                                       ; preds = %land.lhs.true255
  call void @__sanitizer_cov_trace_pc() #19
  %enable_mes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 118
  %224 = ptrtoint ptr %enable_mes to i32
  call void @__asan_store1_noabort(i32 %224)
  store i8 1, ptr %enable_mes, align 8
  br label %if.end260

if.end260:                                        ; preds = %if.then259, %land.lhs.true255.if.end260_crit_edge, %if.end253.if.end260_crit_edge
  call void @amdgpu_detect_virtualization(ptr noundef %adev) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %input.i) #17
  %225 = ptrtoint ptr %input.i to i32
  call void @__asan_store4_noabort(i32 %225)
  store ptr @amdgpu_lockup_timeout, ptr %input.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %timeout.i) #17
  %226 = ptrtoint ptr %timeout.i to i32
  call void @__asan_store4_noabort(i32 %226)
  store i32 -1, ptr %timeout.i, align 4, !annotation !767
  %gfx_timeout.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 149
  %227 = ptrtoint ptr %gfx_timeout.i to i32
  call void @__asan_store4_noabort(i32 %227)
  store i32 1000, ptr %gfx_timeout.i, align 4
  %video_timeout.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 151
  %228 = ptrtoint ptr %video_timeout.i to i32
  call void @__asan_store4_noabort(i32 %228)
  store i32 1000, ptr %video_timeout.i, align 4
  %sdma_timeout.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 150
  %229 = ptrtoint ptr %sdma_timeout.i to i32
  call void @__asan_store4_noabort(i32 %229)
  store i32 1000, ptr %sdma_timeout.i, align 8
  %230 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %virt, align 8
  %and.i938 = and i32 %231, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i938)
  %tobool.not.i939 = icmp eq i32 %and.i938, 0
  br i1 %tobool.not.i939, label %if.end260.if.end.i941_crit_edge, label %if.then.i940

if.end260.if.end.i941_crit_edge:                  ; preds = %if.end260
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i941

if.then.i940:                                     ; preds = %if.end260
  call void @__sanitizer_cov_trace_pc() #19
  %gim_feature.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 12
  %232 = ptrtoint ptr %gim_feature.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %gim_feature.i, align 4
  %and3.i = and i32 %233, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  %spec.select.i = select i1 %tobool4.not.i, i32 1000, i32 6000
  br label %if.end.i941

if.end.i941:                                      ; preds = %if.then.i940, %if.end260.if.end.i941_crit_edge
  %spec.select.sink.i = phi i32 [ %spec.select.i, %if.then.i940 ], [ 6000, %if.end260.if.end.i941_crit_edge ]
  %234 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 152
  %235 = ptrtoint ptr %234 to i32
  call void @__asan_store4_noabort(i32 %235)
  store i32 %spec.select.sink.i, ptr %234, align 8
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @amdgpu_lockup_timeout to i32))
  %char0.i = load i8, ptr @amdgpu_lockup_timeout, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %char0.i)
  %tobool10.not.i = icmp eq i8 %char0.i, 0
  br i1 %tobool10.not.i, label %if.end.i941.if.end267_crit_edge, label %while.cond.preheader.i

if.end.i941.if.end267_crit_edge:                  ; preds = %if.end.i941
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end267

while.cond.preheader.i:                           ; preds = %if.end.i941
  %call1285.i = call ptr @strsep(ptr noundef nonnull %input.i, ptr noundef nonnull @.str.317) #17
  %tobool13.not86.i = icmp eq ptr %call1285.i, null
  br i1 %tobool13.not86.i, label %while.cond.preheader.i.if.end267_crit_edge, label %while.cond.preheader.i.land.rhs.i_crit_edge

while.cond.preheader.i.land.rhs.i_crit_edge:      ; preds = %while.cond.preheader.i
  br label %land.rhs.i

while.cond.preheader.i.if.end267_crit_edge:       ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end267

land.rhs.i:                                       ; preds = %while.cond.backedge.i.land.rhs.i_crit_edge, %while.cond.preheader.i.land.rhs.i_crit_edge
  %call1288.i = phi ptr [ %call12.i, %while.cond.backedge.i.land.rhs.i_crit_edge ], [ %call1285.i, %while.cond.preheader.i.land.rhs.i_crit_edge ]
  %index.087.i = phi i32 [ %index.0.be.i, %while.cond.backedge.i.land.rhs.i_crit_edge ], [ 0, %while.cond.preheader.i.land.rhs.i_crit_edge ]
  %236 = ptrtoint ptr %call1288.i to i32
  call void @__asan_load1_noabort(i32 %236)
  %char083.i = load i8, ptr %call1288.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %char083.i)
  %tobool15.not.i = icmp eq i8 %char083.i, 0
  br i1 %tobool15.not.i, label %land.rhs.i.while.end.i_crit_edge, label %while.body.i

land.rhs.i.while.end.i_crit_edge:                 ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end.i

while.body.i:                                     ; preds = %land.rhs.i
  %call.i.i942 = call i32 @_kstrtol(ptr noundef nonnull %call1288.i, i32 noundef 0, ptr noundef nonnull %timeout.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i942)
  %tobool17.not.i = icmp eq i32 %call.i.i942, 0
  br i1 %tobool17.not.i, label %if.end19.i, label %do.end266

if.end19.i:                                       ; preds = %while.body.i
  %237 = ptrtoint ptr %timeout.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %timeout.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %238)
  %cmp.i943 = icmp eq i32 %238, 0
  br i1 %cmp.i943, label %if.end19.i.while.cond.backedge.i_crit_edge, label %if.else21.i

if.end19.i.while.cond.backedge.i_crit_edge:       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %sw.bb34.i, %sw.bb32.i, %sw.bb30.i, %sw.bb.i944, %if.end27.i.while.cond.backedge.i_crit_edge, %if.end19.i.while.cond.backedge.i_crit_edge
  %index.0.be.i = add i32 %index.087.i, 1
  %call12.i = call ptr @strsep(ptr noundef nonnull %input.i, ptr noundef nonnull @.str.317) #17
  %tobool13.not.i = icmp eq ptr %call12.i, null
  br i1 %tobool13.not.i, label %while.cond.backedge.i.while.end.i_crit_edge, label %while.cond.backedge.i.land.rhs.i_crit_edge

while.cond.backedge.i.land.rhs.i_crit_edge:       ; preds = %while.cond.backedge.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs.i

while.cond.backedge.i.while.end.i_crit_edge:      ; preds = %while.cond.backedge.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end.i

if.else21.i:                                      ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %238)
  %cmp22.i = icmp slt i32 %238, 0
  br i1 %cmp22.i, label %if.then23.i, label %if.else.i.i

if.then23.i:                                      ; preds = %if.else21.i
  call void @__sanitizer_cov_trace_pc() #19
  %239 = ptrtoint ptr %timeout.i to i32
  call void @__asan_store4_noabort(i32 %239)
  store i32 2147483647, ptr %timeout.i, align 4
  %240 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %241, ptr noundef nonnull @.str.318) #20
  call void @add_taint(i32 noundef 14, i32 noundef 0) #17
  br label %if.end27.i

if.else.i.i:                                      ; preds = %if.else21.i
  call void @__sanitizer_cov_trace_pc() #19
  %call2.i.i = call i32 @__msecs_to_jiffies(i32 noundef %238) #17
  %242 = ptrtoint ptr %timeout.i to i32
  call void @__asan_store4_noabort(i32 %242)
  store i32 %call2.i.i, ptr %timeout.i, align 4
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.else.i.i, %if.then23.i
  %243 = zext i32 %index.087.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %243, ptr @__sancov_gen_cov_switch_values.422)
  switch i32 %index.087.i, label %if.end27.i.while.cond.backedge.i_crit_edge [
    i32 0, label %sw.bb.i944
    i32 1, label %sw.bb30.i
    i32 2, label %sw.bb32.i
    i32 3, label %sw.bb34.i
  ]

if.end27.i.while.cond.backedge.i_crit_edge:       ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond.backedge.i

sw.bb.i944:                                       ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #19
  %244 = ptrtoint ptr %timeout.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %timeout.i, align 4
  %246 = ptrtoint ptr %gfx_timeout.i to i32
  call void @__asan_store4_noabort(i32 %246)
  store i32 %245, ptr %gfx_timeout.i, align 4
  br label %while.cond.backedge.i

sw.bb30.i:                                        ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #19
  %247 = ptrtoint ptr %timeout.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %timeout.i, align 4
  %249 = ptrtoint ptr %234 to i32
  call void @__asan_store4_noabort(i32 %249)
  store i32 %248, ptr %234, align 8
  br label %while.cond.backedge.i

sw.bb32.i:                                        ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #19
  %250 = ptrtoint ptr %timeout.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %timeout.i, align 4
  %252 = ptrtoint ptr %sdma_timeout.i to i32
  call void @__asan_store4_noabort(i32 %252)
  store i32 %251, ptr %sdma_timeout.i, align 8
  br label %while.cond.backedge.i

sw.bb34.i:                                        ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #19
  %253 = ptrtoint ptr %timeout.i to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load i32, ptr %timeout.i, align 4
  %255 = ptrtoint ptr %video_timeout.i to i32
  call void @__asan_store4_noabort(i32 %255)
  store i32 %254, ptr %video_timeout.i, align 4
  br label %while.cond.backedge.i

while.end.i:                                      ; preds = %while.cond.backedge.i.while.end.i_crit_edge, %land.rhs.i.while.end.i_crit_edge
  %index.0.lcssa.i = phi i32 [ %index.087.i, %land.rhs.i.while.end.i_crit_edge ], [ %index.0.be.i, %while.cond.backedge.i.while.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %index.0.lcssa.i)
  %cmp36.i = icmp eq i32 %index.0.lcssa.i, 1
  br i1 %cmp36.i, label %if.then37.i, label %while.end.i.if.end267_crit_edge

while.end.i.if.end267_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end267

if.then37.i:                                      ; preds = %while.end.i
  %256 = ptrtoint ptr %gfx_timeout.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load i32, ptr %gfx_timeout.i, align 4
  %258 = ptrtoint ptr %video_timeout.i to i32
  call void @__asan_store4_noabort(i32 %258)
  store i32 %257, ptr %video_timeout.i, align 4
  %259 = ptrtoint ptr %sdma_timeout.i to i32
  call void @__asan_store4_noabort(i32 %259)
  store i32 %257, ptr %sdma_timeout.i, align 8
  %260 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %virt, align 8
  %262 = and i32 %261, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %262)
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %if.then37.i.if.end267_crit_edge, label %if.then49.i

if.then37.i.if.end267_crit_edge:                  ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end267

if.then49.i:                                      ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #19
  %264 = ptrtoint ptr %234 to i32
  call void @__asan_store4_noabort(i32 %264)
  store i32 %257, ptr %234, align 8
  br label %if.end267

do.end266:                                        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %timeout.i) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %input.i) #17
  %265 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %266, ptr noundef nonnull @.str.116) #20
  br label %cleanup

if.end267:                                        ; preds = %if.then49.i, %if.then37.i.if.end267_crit_edge, %while.end.i.if.end267_crit_edge, %while.cond.preheader.i.if.end267_crit_edge, %if.end.i941.if.end267_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %timeout.i) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %input.i) #17
  %enable_virtual_display.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 77
  %267 = ptrtoint ptr %enable_virtual_display.i.i to i32
  call void @__asan_store1_noabort(i32 %267)
  store i8 0, ptr %enable_virtual_display.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_virtual_display to i32))
  %268 = load ptr, ptr @amdgpu_virtual_display, align 4
  %tobool.not.i.i945 = icmp eq ptr %268, null
  br i1 %tobool.not.i.i945, label %if.end267.amdgpu_device_enable_virtual_display.exit.i_crit_edge, label %if.then.i.i

if.end267.amdgpu_device_enable_virtual_display.exit.i_crit_edge: ; preds = %if.end267
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_enable_virtual_display.exit.i

if.then.i.i:                                      ; preds = %if.end267
  %269 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %pdev1, align 4
  %init_name.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %270, i32 0, i32 44, i32 3
  %271 = ptrtoint ptr %init_name.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load ptr, ptr %init_name.i.i.i.i, align 8
  %tobool.not.i.i.i.i946 = icmp eq ptr %272, null
  br i1 %tobool.not.i.i.i.i946, label %if.end.i.i.i.i, label %if.then.i.i.pci_name.exit.i.i_crit_edge

if.then.i.i.pci_name.exit.i.i_crit_edge:          ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %pci_name.exit.i.i

if.end.i.i.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %dev.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %270, i32 0, i32 44
  %273 = ptrtoint ptr %dev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load ptr, ptr %dev.i.i.i, align 4
  br label %pci_name.exit.i.i

pci_name.exit.i.i:                                ; preds = %if.end.i.i.i.i, %if.then.i.i.pci_name.exit.i.i_crit_edge
  %retval.0.i.i.i.i = phi ptr [ %274, %if.end.i.i.i.i ], [ %272, %if.then.i.i.pci_name.exit.i.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pciaddstr_tmp.i.i) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pciaddname_tmp.i.i) #17
  %275 = ptrtoint ptr %pciaddname_tmp.i.i to i32
  call void @__asan_store4_noabort(i32 %275)
  store ptr inttoptr (i32 -1 to ptr), ptr %pciaddname_tmp.i.i, align 4, !annotation !767
  %call1.i.i = call noalias ptr @kstrdup(ptr noundef nonnull %268, i32 noundef 3264) #17
  %276 = ptrtoint ptr %pciaddstr_tmp.i.i to i32
  call void @__asan_store4_noabort(i32 %276)
  store ptr %call1.i.i, ptr %pciaddstr_tmp.i.i, align 4
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %lor.lhs.false.i.i.while.cond.i.i_crit_edge, %pci_name.exit.i.i
  %call2.i.i947 = call ptr @strsep(ptr noundef nonnull %pciaddstr_tmp.i.i, ptr noundef nonnull @.str.324) #17
  %277 = ptrtoint ptr %pciaddname_tmp.i.i to i32
  call void @__asan_store4_noabort(i32 %277)
  store ptr %call2.i.i947, ptr %pciaddname_tmp.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %call2.i.i947, null
  br i1 %tobool3.not.i.i, label %while.cond.i.i.do.end.i.i949_crit_edge, label %while.body.i.i

while.cond.i.i.do.end.i.i949_crit_edge:           ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i.i949

while.body.i.i:                                   ; preds = %while.cond.i.i
  %call4.i.i = call ptr @strsep(ptr noundef nonnull %pciaddname_tmp.i.i, ptr noundef nonnull @.str.317) #17
  %call5.i.i = call i32 @strcmp(ptr noundef nonnull dereferenceable(4) @.str.325, ptr noundef %call4.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i.i, label %while.body.i.i.if.then9.i.i_crit_edge, label %lor.lhs.false.i.i

while.body.i.i.if.then9.i.i_crit_edge:            ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then9.i.i

lor.lhs.false.i.i:                                ; preds = %while.body.i.i
  %call7.i.i = call i32 @strcmp(ptr noundef %retval.0.i.i.i.i, ptr noundef %call4.i.i) #21
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %lor.lhs.false.i.i.if.then9.i.i_crit_edge, label %lor.lhs.false.i.i.while.cond.i.i_crit_edge

lor.lhs.false.i.i.while.cond.i.i_crit_edge:       ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond.i.i

lor.lhs.false.i.i.if.then9.i.i_crit_edge:         ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then9.i.i

if.then9.i.i:                                     ; preds = %lor.lhs.false.i.i.if.then9.i.i_crit_edge, %while.body.i.i.if.then9.i.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %num_crtc.i.i) #17
  %278 = ptrtoint ptr %num_crtc.i.i to i32
  call void @__asan_store4_noabort(i32 %278)
  store i32 -1, ptr %num_crtc.i.i, align 4, !annotation !767
  %279 = ptrtoint ptr %enable_virtual_display.i.i to i32
  call void @__asan_store1_noabort(i32 %279)
  store i8 1, ptr %enable_virtual_display.i.i, align 8
  %280 = ptrtoint ptr %pciaddname_tmp.i.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %pciaddname_tmp.i.i, align 4
  %tobool11.not.i.i = icmp eq ptr %281, null
  br i1 %tobool11.not.i.i, label %if.then9.i.i.if.end24.i.i_crit_edge, label %if.then12.i.i

if.then9.i.i.if.end24.i.i_crit_edge:              ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24.i.i

if.then12.i.i:                                    ; preds = %if.then9.i.i
  %call.i.i.i = call i32 @_kstrtol(ptr noundef nonnull %281, i32 noundef 10, ptr noundef nonnull %num_crtc.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %phi.cmp.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %phi.cmp.i.i, label %if.then15.i.i, label %if.then12.i.i.if.end24.i.i_crit_edge

if.then12.i.i.if.end24.i.i_crit_edge:             ; preds = %if.then12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24.i.i

if.then15.i.i:                                    ; preds = %if.then12.i.i
  %282 = ptrtoint ptr %num_crtc.i.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %num_crtc.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %283)
  %cmp.i.i948 = icmp slt i32 %283, 1
  br i1 %cmp.i.i948, label %if.end17.thread.i.i, label %if.end17.i.i

if.end17.thread.i.i:                              ; preds = %if.then15.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %284 = ptrtoint ptr %num_crtc.i.i to i32
  call void @__asan_store4_noabort(i32 %284)
  store i32 1, ptr %num_crtc.i.i, align 4
  br label %if.end20.i.i

if.end17.i.i:                                     ; preds = %if.then15.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %283)
  %cmp18.i.i = icmp ugt i32 %283, 6
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end17.i.i.if.end20.i.i_crit_edge

if.end17.i.i.if.end20.i.i_crit_edge:              ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end20.i.i

if.then19.i.i:                                    ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %285 = ptrtoint ptr %num_crtc.i.i to i32
  call void @__asan_store4_noabort(i32 %285)
  store i32 6, ptr %num_crtc.i.i, align 4
  br label %if.end20.i.i

if.end20.i.i:                                     ; preds = %if.then19.i.i, %if.end17.i.i.if.end20.i.i_crit_edge, %if.end17.thread.i.i
  %286 = ptrtoint ptr %num_crtc.i.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %num_crtc.i.i, align 4
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.end20.i.i, %if.then12.i.i.if.end24.i.i_crit_edge, %if.then9.i.i.if.end24.i.i_crit_edge
  %.sink.i.i = phi i32 [ %287, %if.end20.i.i ], [ 1, %if.then9.i.i.if.end24.i.i_crit_edge ], [ 1, %if.then12.i.i.if.end24.i.i_crit_edge ]
  %num_crtc23.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 79, i32 20
  %288 = ptrtoint ptr %num_crtc23.i.i to i32
  call void @__asan_store4_noabort(i32 %288)
  store i32 %.sink.i.i, ptr %num_crtc23.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %num_crtc.i.i) #17
  br label %do.end.i.i949

do.end.i.i949:                                    ; preds = %if.end24.i.i, %while.cond.i.i.do.end.i.i949_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_virtual_display to i32))
  %289 = load ptr, ptr @amdgpu_virtual_display, align 4
  %290 = ptrtoint ptr %enable_virtual_display.i.i to i32
  call void @__asan_load1_noabort(i32 %290)
  %291 = load i8, ptr %enable_virtual_display.i.i, align 8, !range !766
  %292 = zext i8 %291 to i32
  %num_crtc29.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 79, i32 20
  %293 = ptrtoint ptr %num_crtc29.i.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load i32, ptr %num_crtc29.i.i, align 8
  %call30.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.326, ptr noundef %289, ptr noundef %retval.0.i.i.i.i, i32 noundef %292, i32 noundef %294) #20
  call void @kfree(ptr noundef %call1.i.i) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pciaddname_tmp.i.i) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pciaddstr_tmp.i.i) #17
  br label %amdgpu_device_enable_virtual_display.exit.i

amdgpu_device_enable_virtual_display.exit.i:      ; preds = %do.end.i.i949, %if.end267.amdgpu_device_enable_virtual_display.exit.i_crit_edge
  %295 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load i32, ptr %virt, align 8
  %and.i951 = and i32 %296, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i951)
  %tobool.not.i952 = icmp eq i32 %and.i951, 0
  br i1 %tobool.not.i952, label %amdgpu_device_enable_virtual_display.exit.i.if.end3.i_crit_edge, label %if.then.i954

amdgpu_device_enable_virtual_display.exit.i.if.end3.i_crit_edge: ; preds = %amdgpu_device_enable_virtual_display.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end3.i

if.then.i954:                                     ; preds = %amdgpu_device_enable_virtual_display.exit.i
  %call.i = call i32 @amdgpu_virt_request_full_gpu(ptr noundef %adev, i1 noundef zeroext true) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i953 = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i953, label %if.then.i954.if.end3.i_crit_edge, label %if.then.i954.cleanup_crit_edge

if.then.i954.cleanup_crit_edge:                   ; preds = %if.then.i954
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then.i954.if.end3.i_crit_edge:                 ; preds = %if.then.i954
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then.i954.if.end3.i_crit_edge, %amdgpu_device_enable_virtual_display.exit.i.if.end3.i_crit_edge
  %297 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %6, align 8
  %299 = zext i32 %298 to i64
  call void @__sanitizer_cov_trace_switch(i64 %299, ptr @__sancov_gen_cov_switch_values.423)
  switch i32 %298, label %sw.default.i [
    i32 2, label %if.end3.i.sw.bb.i956_crit_edge
    i32 0, label %if.end3.i.sw.bb.i956_crit_edge1058
    i32 1, label %if.end3.i.sw.bb.i956_crit_edge1059
    i32 3, label %if.end3.i.sw.bb.i956_crit_edge1060
    i32 4, label %if.end3.i.sw.bb.i956_crit_edge1061
    i32 5, label %if.end3.i.sw.bb8.i_crit_edge
    i32 8, label %if.end3.i.sw.bb8.i_crit_edge1062
    i32 6, label %if.end3.i.sw.bb8.i_crit_edge1063
    i32 7, label %if.end3.i.sw.bb8.i_crit_edge1064
    i32 9, label %if.end3.i.sw.bb8.i_crit_edge1065
    i32 10, label %if.end3.i.sw.bb19.i_crit_edge
    i32 11, label %if.end3.i.sw.bb19.i_crit_edge1066
    i32 12, label %if.end3.i.sw.bb19.i_crit_edge1067
    i32 15, label %if.end3.i.sw.bb19.i_crit_edge1068
    i32 16, label %if.end3.i.sw.bb19.i_crit_edge1069
    i32 17, label %if.end3.i.sw.bb19.i_crit_edge1070
    i32 18, label %if.end3.i.sw.bb19.i_crit_edge1071
    i32 13, label %if.end3.i.sw.bb19.i_crit_edge1072
    i32 14, label %if.end3.i.sw.bb19.i_crit_edge1073
  ]

if.end3.i.sw.bb19.i_crit_edge1073:                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb19.i

if.end3.i.sw.bb19.i_crit_edge1072:                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb19.i

if.end3.i.sw.bb19.i_crit_edge1071:                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb19.i

if.end3.i.sw.bb19.i_crit_edge1070:                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb19.i

if.end3.i.sw.bb19.i_crit_edge1069:                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb19.i

if.end3.i.sw.bb19.i_crit_edge1068:                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb19.i

if.end3.i.sw.bb19.i_crit_edge1067:                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb19.i

if.end3.i.sw.bb19.i_crit_edge1066:                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb19.i

if.end3.i.sw.bb19.i_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb19.i

if.end3.i.sw.bb8.i_crit_edge1065:                 ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb8.i

if.end3.i.sw.bb8.i_crit_edge1064:                 ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb8.i

if.end3.i.sw.bb8.i_crit_edge1063:                 ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb8.i

if.end3.i.sw.bb8.i_crit_edge1062:                 ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb8.i

if.end3.i.sw.bb8.i_crit_edge:                     ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb8.i

if.end3.i.sw.bb.i956_crit_edge1061:               ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb.i956

if.end3.i.sw.bb.i956_crit_edge1060:               ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb.i956

if.end3.i.sw.bb.i956_crit_edge1059:               ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb.i956

if.end3.i.sw.bb.i956_crit_edge1058:               ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb.i956

if.end3.i.sw.bb.i956_crit_edge:                   ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb.i956

sw.bb.i956:                                       ; preds = %if.end3.i.sw.bb.i956_crit_edge, %if.end3.i.sw.bb.i956_crit_edge1058, %if.end3.i.sw.bb.i956_crit_edge1059, %if.end3.i.sw.bb.i956_crit_edge1060, %if.end3.i.sw.bb.i956_crit_edge1061
  %family.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 6
  %300 = ptrtoint ptr %family.i to i32
  call void @__asan_store4_noabort(i32 %300)
  store i32 110, ptr %family.i, align 4
  %call4.i = call i32 @si_set_ip_blocks(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %sw.bb.i956.sw.epilog.i_crit_edge, label %sw.bb.i956.cleanup_crit_edge

sw.bb.i956.cleanup_crit_edge:                     ; preds = %sw.bb.i956
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.bb.i956.sw.epilog.i_crit_edge:                 ; preds = %sw.bb.i956
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i

sw.bb8.i:                                         ; preds = %if.end3.i.sw.bb8.i_crit_edge, %if.end3.i.sw.bb8.i_crit_edge1062, %if.end3.i.sw.bb8.i_crit_edge1063, %if.end3.i.sw.bb8.i_crit_edge1064, %if.end3.i.sw.bb8.i_crit_edge1065
  %301 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %flags2, align 8
  %and9.i = and i32 %302, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i)
  %tobool10.not.i958 = icmp eq i32 %and9.i, 0
  %spec.select.i959 = select i1 %tobool10.not.i958, i32 120, i32 125
  %303 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 6
  %304 = ptrtoint ptr %303 to i32
  call void @__asan_store4_noabort(i32 %304)
  store i32 %spec.select.i959, ptr %303, align 4
  %call15.i = call i32 @cik_set_ip_blocks(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i)
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.not.i, label %sw.bb8.i.sw.epilog.i_crit_edge, label %sw.bb8.i.cleanup_crit_edge

sw.bb8.i.cleanup_crit_edge:                       ; preds = %sw.bb8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.bb8.i.sw.epilog.i_crit_edge:                   ; preds = %sw.bb8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i

sw.bb19.i:                                        ; preds = %if.end3.i.sw.bb19.i_crit_edge, %if.end3.i.sw.bb19.i_crit_edge1066, %if.end3.i.sw.bb19.i_crit_edge1067, %if.end3.i.sw.bb19.i_crit_edge1068, %if.end3.i.sw.bb19.i_crit_edge1069, %if.end3.i.sw.bb19.i_crit_edge1070, %if.end3.i.sw.bb19.i_crit_edge1071, %if.end3.i.sw.bb19.i_crit_edge1072, %if.end3.i.sw.bb19.i_crit_edge1073
  %305 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load i32, ptr %flags2, align 8
  %and21.i = and i32 %306, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i)
  %tobool22.not.i = icmp eq i32 %and21.i, 0
  %spec.select217.i = select i1 %tobool22.not.i, i32 130, i32 135
  %307 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 6
  %308 = ptrtoint ptr %307 to i32
  call void @__asan_store4_noabort(i32 %308)
  store i32 %spec.select217.i, ptr %307, align 4
  %call28.i = call i32 @vi_set_ip_blocks(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i)
  %tobool29.not.i = icmp eq i32 %call28.i, 0
  br i1 %tobool29.not.i, label %sw.bb19.i.sw.epilog.i_crit_edge, label %sw.bb19.i.cleanup_crit_edge

sw.bb19.i.cleanup_crit_edge:                      ; preds = %sw.bb19.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.bb19.i.sw.epilog.i_crit_edge:                  ; preds = %sw.bb19.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.end3.i
  %call32.i = call i32 @amdgpu_discovery_set_ip_blocks(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32.i)
  %tobool33.not.i = icmp eq i32 %call32.i, 0
  br i1 %tobool33.not.i, label %sw.default.i.sw.epilog.i_crit_edge, label %sw.default.i.cleanup_crit_edge

sw.default.i.cleanup_crit_edge:                   ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.default.i.sw.epilog.i_crit_edge:               ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.default.i.sw.epilog.i_crit_edge, %sw.bb19.i.sw.epilog.i_crit_edge, %sw.bb8.i.sw.epilog.i_crit_edge, %sw.bb.i956.sw.epilog.i_crit_edge
  call void @amdgpu_amdkfd_device_probe(ptr noundef %adev) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_pp_feature_mask to i32))
  %309 = load i32, ptr @amdgpu_pp_feature_mask, align 4
  %pp_feature.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 24
  %310 = ptrtoint ptr %pp_feature.i to i32
  call void @__asan_store4_noabort(i32 %310)
  store i32 %309, ptr %pp_feature.i, align 8
  %311 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load i32, ptr %virt, align 8
  %and38.i = and i32 %312, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i)
  %tobool39.not.i = icmp eq i32 %and38.i, 0
  br i1 %tobool39.not.i, label %sw.epilog.i.if.end54.i_crit_edge, label %land.lhs.true.i961

sw.epilog.i.if.end54.i_crit_edge:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end54.i

land.lhs.true.i961:                               ; preds = %sw.epilog.i
  %and43.i = and i32 %309, -32769
  %313 = ptrtoint ptr %pp_feature.i to i32
  call void @__asan_store4_noabort(i32 %313)
  store i32 %and43.i, ptr %pp_feature.i, align 8
  %314 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 30, i32 %315)
  %cmp.i960 = icmp eq i32 %315, 30
  br i1 %cmp.i960, label %if.then50.i, label %land.lhs.true.i961.if.end54.i_crit_edge

land.lhs.true.i961.if.end54.i_crit_edge:          ; preds = %land.lhs.true.i961
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end54.i

if.then50.i:                                      ; preds = %land.lhs.true.i961
  call void @__sanitizer_cov_trace_pc() #19
  %and53.i = and i32 %309, -49153
  %316 = ptrtoint ptr %pp_feature.i to i32
  call void @__asan_store4_noabort(i32 %316)
  store i32 %and53.i, ptr %pp_feature.i, align 8
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.then50.i, %land.lhs.true.i961.if.end54.i_crit_edge, %sw.epilog.i.if.end54.i_crit_edge
  %num_ip_blocks.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %317 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %318)
  %cmp55207.i = icmp sgt i32 %318, 0
  br i1 %cmp55207.i, label %for.body.lr.ph.i, label %if.end54.i.if.end271_crit_edge

if.end54.i.if.end271_crit_edge:                   ; preds = %if.end54.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end271

for.body.lr.ph.i:                                 ; preds = %if.end54.i
  %gpu_info_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 8
  %discovery_bin.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 68, i32 19
  %apu_flags.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 10
  %config.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1
  %max_cu_per_sh.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 2
  %max_sh_per_se.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 3
  %max_backends_per_se.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 4
  %max_texture_channel_caches.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 5
  %max_gprs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 6
  %max_gs_threads.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 7
  %gs_vgt_table_depth.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 25
  %gs_prim_buffer_depth.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 26
  %double_offchip_lds_buf.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 31
  %wave_front_size.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 48, i32 2
  %max_waves_per_simd.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 48, i32 1
  %max_scratch_slots_per_cu.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 48, i32 3
  %lds_size.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 48, i32 4
  %num_sc_per_sh101.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 33
  %num_packer_per_sc104.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 34
  %soc_bounding_box118.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 117, i32 40
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0208.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_ip_block_mask to i32))
  %319 = load i32, ptr @amdgpu_ip_block_mask, align 4
  %shl.i962 = shl nuw i32 1, %i.0208.i
  %and56.i = and i32 %319, %shl.i962
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and56.i)
  %cmp57.i963 = icmp eq i32 %and56.i, 0
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.0208.i
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.0208.i, i32 1
  %320 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load ptr, ptr %version.i, align 4
  %funcs.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %321, i32 0, i32 4
  %322 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load ptr, ptr %funcs.i, align 4
  br i1 %cmp57.i963, label %if.then58.i, label %if.else61.i

if.then58.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  %324 = ptrtoint ptr %323 to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load ptr, ptr %323, align 4
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.320, i32 noundef %i.0208.i, ptr noundef %325) #17
  br label %if.end101.i964

if.else61.i:                                      ; preds = %for.body.i
  %early_init.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %323, i32 0, i32 1
  %326 = ptrtoint ptr %early_init.i to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %early_init.i, align 4
  %tobool66.not.i = icmp eq ptr %327, null
  br i1 %tobool66.not.i, label %if.else61.i.if.end101.i964_crit_edge, label %if.then67.i

if.else61.i.if.end101.i964_crit_edge:             ; preds = %if.else61.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end101.i964

if.then67.i:                                      ; preds = %if.else61.i
  %call73.i = call i32 %327(ptr noundef %adev) #17
  %328 = zext i32 %call73.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %328, ptr @__sancov_gen_cov_switch_values.424)
  switch i32 %call73.i, label %if.then82.i [
    i32 -2, label %if.then67.i.if.end101.i964_crit_edge
    i32 0, label %if.else88.i
  ]

if.then67.i.if.end101.i964_crit_edge:             ; preds = %if.then67.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end101.i964

if.then82.i:                                      ; preds = %if.then67.i
  call void @__sanitizer_cov_trace_pc() #19
  %329 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load ptr, ptr %version.i, align 4
  %funcs86.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %330, i32 0, i32 4
  %331 = ptrtoint ptr %funcs86.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load ptr, ptr %funcs86.i, align 4
  %333 = ptrtoint ptr %332 to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %332, align 4
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.321, ptr noundef %334, i32 noundef %call73.i) #17
  br label %cleanup

if.else88.i:                                      ; preds = %if.then67.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end101.i964

if.end101.i964:                                   ; preds = %if.else88.i, %if.then67.i.if.end101.i964_crit_edge, %if.else61.i.if.end101.i964_crit_edge, %if.then58.i
  %.sink.i = phi i8 [ 1, %if.else88.i ], [ 0, %if.then58.i ], [ 0, %if.then67.i.if.end101.i964_crit_edge ], [ 1, %if.else61.i.if.end101.i964_crit_edge ]
  %335 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %335)
  store i8 %.sink.i, ptr %arrayidx.i, align 4
  %336 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load ptr, ptr %version.i, align 4
  %338 = ptrtoint ptr %337 to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %337, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %339)
  %cmp105.i = icmp eq i32 %339, 0
  br i1 %cmp105.i, label %if.then106.i, label %if.end101.i964.for.inc.i_crit_edge

if.end101.i964.for.inc.i_crit_edge:               ; preds = %if.end101.i964
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then106.i:                                     ; preds = %if.end101.i964
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %fw_name.i.i) #17
  %340 = call ptr @memset(ptr %fw_name.i.i, i32 255, i32 40)
  %341 = ptrtoint ptr %gpu_info_fw.i.i to i32
  call void @__asan_store4_noabort(i32 %341)
  store ptr null, ptr %gpu_info_fw.i.i, align 4
  %342 = ptrtoint ptr %discovery_bin.i.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load ptr, ptr %discovery_bin.i.i, align 8
  %tobool.not.i198.i = icmp eq ptr %343, null
  br i1 %tobool.not.i198.i, label %if.end2.i.i, label %if.then.i199.i

if.then.i199.i:                                   ; preds = %if.then106.i
  %call.i.i965 = call i32 @amdgpu_discovery_get_gfx_info(ptr noundef %adev) #17
  %344 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 29, i32 %345)
  %cmp.not.i.i = icmp eq i32 %345, 29
  br i1 %cmp.not.i.i, label %if.then.i199.i.sw.bb26.i.i_crit_edge, label %if.then.i199.i.if.end110.i_crit_edge

if.then.i199.i.if.end110.i_crit_edge:             ; preds = %if.then.i199.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end110.i

if.then.i199.i.sw.bb26.i.i_crit_edge:             ; preds = %if.then.i199.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb26.i.i

if.end2.i.i:                                      ; preds = %if.then106.i
  %346 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %346)
  %.pr.i966 = load i32, ptr %6, align 8
  %347 = zext i32 %.pr.i966 to i64
  call void @__sanitizer_cov_trace_switch(i64 %347, ptr @__sancov_gen_cov_switch_values.425)
  switch i32 %.pr.i966, label %if.end2.i.i.if.end110.i_crit_edge [
    i32 35, label %sw.bb28.i.i
    i32 32, label %sw.bb27.i.i
    i32 29, label %if.end2.i.i.sw.bb26.i.i_crit_edge
    i32 28, label %sw.bb25.i.i
    i32 26, label %sw.bb24.i.i
    i32 24, label %sw.bb17.i.i
    i32 23, label %sw.bb16.i.i
    i32 22, label %sw.bb6.i.i
    i32 20, label %sw.bb5.i.i
    i32 19, label %if.end2.i.i.sw.epilog.i.i_crit_edge
  ]

if.end2.i.i.sw.epilog.i.i_crit_edge:              ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i.i

if.end2.i.i.sw.bb26.i.i_crit_edge:                ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb26.i.i

if.end2.i.i.if.end110.i_crit_edge:                ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end110.i

sw.bb5.i.i:                                       ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i.i

sw.bb6.i.i:                                       ; preds = %if.end2.i.i
  %348 = ptrtoint ptr %apu_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %apu_flags.i.i, align 4
  %and.i.i = and i32 %349, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool7.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool7.not.i.i, label %if.else.i.i967, label %sw.bb6.i.i.sw.epilog.i.i_crit_edge

sw.bb6.i.i.sw.epilog.i.i_crit_edge:               ; preds = %sw.bb6.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i.i

if.else.i.i967:                                   ; preds = %sw.bb6.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %and10.i.i = and i32 %349, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i.i)
  %tobool11.not.i200.i = icmp eq i32 %and10.i.i, 0
  %.str.332..str.331.i.i = select i1 %tobool11.not.i200.i, ptr @.str.332, ptr @.str.331
  br label %sw.epilog.i.i

sw.bb16.i.i:                                      ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i.i

sw.bb17.i.i:                                      ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %350 = ptrtoint ptr %apu_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load i32, ptr %apu_flags.i.i, align 4
  %and19.i.i = and i32 %351, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i.i)
  %tobool20.not.i.i = icmp eq i32 %and19.i.i, 0
  %.str.335..str.334.i.i = select i1 %tobool20.not.i.i, ptr @.str.335, ptr @.str.334
  br label %sw.epilog.i.i

sw.bb24.i.i:                                      ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i.i

sw.bb25.i.i:                                      ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i.i

sw.bb26.i.i:                                      ; preds = %if.end2.i.i.sw.bb26.i.i_crit_edge, %if.then.i199.i.sw.bb26.i.i_crit_edge
  br label %sw.epilog.i.i

sw.bb27.i.i:                                      ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i.i

sw.bb28.i.i:                                      ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i.i

sw.epilog.i.i:                                    ; preds = %sw.bb28.i.i, %sw.bb27.i.i, %sw.bb26.i.i, %sw.bb25.i.i, %sw.bb24.i.i, %sw.bb17.i.i, %sw.bb16.i.i, %if.else.i.i967, %sw.bb6.i.i.sw.epilog.i.i_crit_edge, %sw.bb5.i.i, %if.end2.i.i.sw.epilog.i.i_crit_edge
  %chip_name.0.i.i = phi ptr [ @.str.329, %sw.bb5.i.i ], [ @.str.333, %sw.bb16.i.i ], [ @.str.336, %sw.bb24.i.i ], [ @.str.337, %sw.bb25.i.i ], [ @.str.338, %sw.bb26.i.i ], [ @.str.339, %sw.bb27.i.i ], [ @.str.340, %sw.bb28.i.i ], [ @.str.328, %if.end2.i.i.sw.epilog.i.i_crit_edge ], [ @.str.330, %sw.bb6.i.i.sw.epilog.i.i_crit_edge ], [ %.str.332..str.331.i.i, %if.else.i.i967 ], [ %.str.335..str.334.i.i, %sw.bb17.i.i ]
  %call29.i.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i.i, i32 noundef 40, ptr noundef nonnull @.str.341, ptr noundef nonnull %chip_name.0.i.i) #17
  %352 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load ptr, ptr %adev, align 8
  %call33.i.i = call i32 @request_firmware(ptr noundef %gpu_info_fw.i.i, ptr noundef nonnull %fw_name.i.i, ptr noundef %353) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i.i)
  %tobool34.not.i.i = icmp eq i32 %call33.i.i, 0
  br i1 %tobool34.not.i.i, label %if.end38.i.i, label %do.end.i201.i

do.end.i201.i:                                    ; preds = %sw.epilog.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %354 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %355, ptr noundef nonnull @.str.342, ptr noundef nonnull %fw_name.i.i) #20
  br label %amdgpu_device_parse_gpu_info_fw.exit.i

if.end38.i.i:                                     ; preds = %sw.epilog.i.i
  %356 = ptrtoint ptr %gpu_info_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load ptr, ptr %gpu_info_fw.i.i, align 4
  %call41.i.i = call i32 @amdgpu_ucode_validate(ptr noundef %357) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41.i.i)
  %tobool42.not.i.i = icmp eq i32 %call41.i.i, 0
  br i1 %tobool42.not.i.i, label %if.end49.i.i, label %do.end46.i.i

do.end46.i.i:                                     ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %358 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %359, ptr noundef nonnull @.str.345, ptr noundef nonnull %fw_name.i.i) #20
  br label %amdgpu_device_parse_gpu_info_fw.exit.i

if.end49.i.i:                                     ; preds = %if.end38.i.i
  %360 = ptrtoint ptr %gpu_info_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load ptr, ptr %gpu_info_fw.i.i, align 4
  %data.i.i = getelementptr inbounds %struct.firmware, ptr %361, i32 0, i32 1
  %362 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load ptr, ptr %data.i.i, align 4
  call void @amdgpu_ucode_print_gpu_info_hdr(ptr noundef %363) #17
  %version_major.i.i = getelementptr inbounds %struct.gpu_info_firmware_header_v1_0, ptr %363, i32 0, i32 1
  %364 = ptrtoint ptr %version_major.i.i to i32
  call void @__asan_load2_noabort(i32 %364)
  %365 = load i16, ptr %version_major.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %365)
  %cond.i.i = icmp eq i16 %365, 1
  br i1 %cond.i.i, label %sw.bb52.i.i, label %do.end123.i.i

sw.bb52.i.i:                                      ; preds = %if.end49.i.i
  %ucode_array_offset_bytes.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %363, i32 0, i32 8
  %366 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load i32, ptr %6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 29, i32 %367)
  %cmp59.i.i = icmp eq i32 %367, 29
  br i1 %cmp59.i.i, label %sw.bb52.i.i.parse_soc_bounding_box.i.i_crit_edge, label %if.end62.i.i

sw.bb52.i.i.parse_soc_bounding_box.i.i_crit_edge: ; preds = %sw.bb52.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %parse_soc_bounding_box.i.i

if.end62.i.i:                                     ; preds = %sw.bb52.i.i
  %368 = ptrtoint ptr %gpu_info_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %gpu_info_fw.i.i, align 4
  %data56.i.i = getelementptr inbounds %struct.firmware, ptr %369, i32 0, i32 1
  %370 = ptrtoint ptr %data56.i.i to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load ptr, ptr %data56.i.i, align 4
  %372 = ptrtoint ptr %ucode_array_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load i32, ptr %ucode_array_offset_bytes.i.i, align 4
  %374 = call i32 @llvm.bswap.i32(i32 %373) #17
  %add.ptr.i.i = getelementptr i8, ptr %371, i32 %374
  %375 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %375)
  %376 = load i32, ptr %add.ptr.i.i, align 4
  %377 = call i32 @llvm.bswap.i32(i32 %376) #17
  %378 = ptrtoint ptr %config.i.i to i32
  call void @__asan_store4_noabort(i32 %378)
  store i32 %377, ptr %config.i.i, align 8
  %gc_num_cu_per_sh.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 1
  %379 = ptrtoint ptr %gc_num_cu_per_sh.i.i to i32
  call void @__asan_load4_noabort(i32 %379)
  %380 = load i32, ptr %gc_num_cu_per_sh.i.i, align 4
  %381 = call i32 @llvm.bswap.i32(i32 %380) #17
  %382 = ptrtoint ptr %max_cu_per_sh.i.i to i32
  call void @__asan_store4_noabort(i32 %382)
  store i32 %381, ptr %max_cu_per_sh.i.i, align 8
  %gc_num_sh_per_se.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 2
  %383 = ptrtoint ptr %gc_num_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load i32, ptr %gc_num_sh_per_se.i.i, align 4
  %385 = call i32 @llvm.bswap.i32(i32 %384) #17
  %386 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_store4_noabort(i32 %386)
  store i32 %385, ptr %max_sh_per_se.i.i, align 4
  %gc_num_rb_per_se.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 3
  %387 = ptrtoint ptr %gc_num_rb_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load i32, ptr %gc_num_rb_per_se.i.i, align 4
  %389 = call i32 @llvm.bswap.i32(i32 %388) #17
  %390 = ptrtoint ptr %max_backends_per_se.i.i to i32
  call void @__asan_store4_noabort(i32 %390)
  store i32 %389, ptr %max_backends_per_se.i.i, align 8
  %gc_num_tccs.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 4
  %391 = ptrtoint ptr %gc_num_tccs.i.i to i32
  call void @__asan_load4_noabort(i32 %391)
  %392 = load i32, ptr %gc_num_tccs.i.i, align 4
  %393 = call i32 @llvm.bswap.i32(i32 %392) #17
  %394 = ptrtoint ptr %max_texture_channel_caches.i.i to i32
  call void @__asan_store4_noabort(i32 %394)
  store i32 %393, ptr %max_texture_channel_caches.i.i, align 4
  %gc_num_gprs.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 5
  %395 = ptrtoint ptr %gc_num_gprs.i.i to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load i32, ptr %gc_num_gprs.i.i, align 4
  %397 = call i32 @llvm.bswap.i32(i32 %396) #17
  %398 = ptrtoint ptr %max_gprs.i.i to i32
  call void @__asan_store4_noabort(i32 %398)
  store i32 %397, ptr %max_gprs.i.i, align 8
  %gc_num_max_gs_thds.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 6
  %399 = ptrtoint ptr %gc_num_max_gs_thds.i.i to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load i32, ptr %gc_num_max_gs_thds.i.i, align 4
  %401 = call i32 @llvm.bswap.i32(i32 %400) #17
  %402 = ptrtoint ptr %max_gs_threads.i.i to i32
  call void @__asan_store4_noabort(i32 %402)
  store i32 %401, ptr %max_gs_threads.i.i, align 4
  %gc_gs_table_depth.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 7
  %403 = ptrtoint ptr %gc_gs_table_depth.i.i to i32
  call void @__asan_load4_noabort(i32 %403)
  %404 = load i32, ptr %gc_gs_table_depth.i.i, align 4
  %405 = call i32 @llvm.bswap.i32(i32 %404) #17
  %406 = ptrtoint ptr %gs_vgt_table_depth.i.i to i32
  call void @__asan_store4_noabort(i32 %406)
  store i32 %405, ptr %gs_vgt_table_depth.i.i, align 4
  %gc_gsprim_buff_depth.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 8
  %407 = ptrtoint ptr %gc_gsprim_buff_depth.i.i to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load i32, ptr %gc_gsprim_buff_depth.i.i, align 4
  %409 = call i32 @llvm.bswap.i32(i32 %408) #17
  %410 = ptrtoint ptr %gs_prim_buffer_depth.i.i to i32
  call void @__asan_store4_noabort(i32 %410)
  store i32 %409, ptr %gs_prim_buffer_depth.i.i, align 8
  %gc_double_offchip_lds_buffer.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 10
  %411 = ptrtoint ptr %gc_double_offchip_lds_buffer.i.i to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load i32, ptr %gc_double_offchip_lds_buffer.i.i, align 4
  %413 = call i32 @llvm.bswap.i32(i32 %412) #17
  %414 = ptrtoint ptr %double_offchip_lds_buf.i.i to i32
  call void @__asan_store4_noabort(i32 %414)
  store i32 %413, ptr %double_offchip_lds_buf.i.i, align 4
  %gc_wave_size.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 11
  %415 = ptrtoint ptr %gc_wave_size.i.i to i32
  call void @__asan_load4_noabort(i32 %415)
  %416 = load i32, ptr %gc_wave_size.i.i, align 4
  %417 = call i32 @llvm.bswap.i32(i32 %416) #17
  %418 = ptrtoint ptr %wave_front_size.i.i to i32
  call void @__asan_store4_noabort(i32 %418)
  store i32 %417, ptr %wave_front_size.i.i, align 8
  %gc_max_waves_per_simd.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 12
  %419 = ptrtoint ptr %gc_max_waves_per_simd.i.i to i32
  call void @__asan_load4_noabort(i32 %419)
  %420 = load i32, ptr %gc_max_waves_per_simd.i.i, align 4
  %421 = call i32 @llvm.bswap.i32(i32 %420) #17
  %422 = ptrtoint ptr %max_waves_per_simd.i.i to i32
  call void @__asan_store4_noabort(i32 %422)
  store i32 %421, ptr %max_waves_per_simd.i.i, align 4
  %gc_max_scratch_slots_per_cu.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 13
  %423 = ptrtoint ptr %gc_max_scratch_slots_per_cu.i.i to i32
  call void @__asan_load4_noabort(i32 %423)
  %424 = load i32, ptr %gc_max_scratch_slots_per_cu.i.i, align 4
  %425 = call i32 @llvm.bswap.i32(i32 %424) #17
  %426 = ptrtoint ptr %max_scratch_slots_per_cu.i.i to i32
  call void @__asan_store4_noabort(i32 %426)
  store i32 %425, ptr %max_scratch_slots_per_cu.i.i, align 4
  %gc_lds_size.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_0, ptr %add.ptr.i.i, i32 0, i32 14
  %427 = ptrtoint ptr %gc_lds_size.i.i to i32
  call void @__asan_load4_noabort(i32 %427)
  %428 = load i32, ptr %gc_lds_size.i.i, align 4
  %429 = call i32 @llvm.bswap.i32(i32 %428) #17
  %430 = ptrtoint ptr %lds_size.i.i to i32
  call void @__asan_store4_noabort(i32 %430)
  store i32 %429, ptr %lds_size.i.i, align 8
  %version_minor.i.i = getelementptr inbounds %struct.gpu_info_firmware_header_v1_0, ptr %363, i32 0, i32 2
  %431 = ptrtoint ptr %version_minor.i.i to i32
  call void @__asan_load2_noabort(i32 %431)
  %432 = load i16, ptr %version_minor.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %432)
  %cmp89.not.i.i = icmp eq i16 %432, 0
  br i1 %cmp89.not.i.i, label %if.end62.i.i.parse_soc_bounding_box.i.i_crit_edge, label %if.then91.i.i

if.end62.i.i.parse_soc_bounding_box.i.i_crit_edge: ; preds = %if.end62.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %parse_soc_bounding_box.i.i

if.then91.i.i:                                    ; preds = %if.end62.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %433 = ptrtoint ptr %data56.i.i to i32
  call void @__asan_load4_noabort(i32 %433)
  %434 = load ptr, ptr %data56.i.i, align 4
  %435 = ptrtoint ptr %ucode_array_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %435)
  %436 = load i32, ptr %ucode_array_offset_bytes.i.i, align 4
  %437 = call i32 @llvm.bswap.i32(i32 %436) #17
  %add.ptr98.i.i = getelementptr i8, ptr %434, i32 %437
  %num_sc_per_sh.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_1, ptr %add.ptr98.i.i, i32 0, i32 1
  %438 = ptrtoint ptr %num_sc_per_sh.i.i to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load i32, ptr %num_sc_per_sh.i.i, align 4
  %440 = call i32 @llvm.bswap.i32(i32 %439) #17
  %441 = ptrtoint ptr %num_sc_per_sh101.i.i to i32
  call void @__asan_store4_noabort(i32 %441)
  store i32 %440, ptr %num_sc_per_sh101.i.i, align 4
  %num_packer_per_sc.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_1, ptr %add.ptr98.i.i, i32 0, i32 2
  %442 = ptrtoint ptr %num_packer_per_sc.i.i to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load i32, ptr %num_packer_per_sc.i.i, align 4
  %444 = call i32 @llvm.bswap.i32(i32 %443) #17
  %445 = ptrtoint ptr %num_packer_per_sc104.i.i to i32
  call void @__asan_store4_noabort(i32 %445)
  store i32 %444, ptr %num_packer_per_sc104.i.i, align 8
  br label %parse_soc_bounding_box.i.i

parse_soc_bounding_box.i.i:                       ; preds = %if.then91.i.i, %if.end62.i.i.parse_soc_bounding_box.i.i_crit_edge, %sw.bb52.i.i.parse_soc_bounding_box.i.i_crit_edge
  %version_minor106.i.i = getelementptr inbounds %struct.gpu_info_firmware_header_v1_0, ptr %363, i32 0, i32 2
  %446 = ptrtoint ptr %version_minor106.i.i to i32
  call void @__asan_load2_noabort(i32 %446)
  %447 = load i16, ptr %version_minor106.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %447)
  %cmp108.i.i = icmp eq i16 %447, 2
  br i1 %cmp108.i.i, label %if.then110.i.i, label %parse_soc_bounding_box.i.i.if.end110.i_crit_edge

parse_soc_bounding_box.i.i.if.end110.i_crit_edge: ; preds = %parse_soc_bounding_box.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end110.i

if.then110.i.i:                                   ; preds = %parse_soc_bounding_box.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %448 = ptrtoint ptr %gpu_info_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %448)
  %449 = load ptr, ptr %gpu_info_fw.i.i, align 4
  %data114.i.i = getelementptr inbounds %struct.firmware, ptr %449, i32 0, i32 1
  %450 = ptrtoint ptr %data114.i.i to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load ptr, ptr %data114.i.i, align 4
  %452 = ptrtoint ptr %ucode_array_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %452)
  %453 = load i32, ptr %ucode_array_offset_bytes.i.i, align 4
  %454 = call i32 @llvm.bswap.i32(i32 %453) #17
  %add.ptr117.i.i = getelementptr i8, ptr %451, i32 %454
  %soc_bounding_box.i.i = getelementptr inbounds %struct.gpu_info_firmware_v1_2, ptr %add.ptr117.i.i, i32 0, i32 1
  %455 = ptrtoint ptr %soc_bounding_box118.i.i to i32
  call void @__asan_store4_noabort(i32 %455)
  store ptr %soc_bounding_box.i.i, ptr %soc_bounding_box118.i.i, align 8
  br label %if.end110.i

do.end123.i.i:                                    ; preds = %if.end49.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %456 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %456)
  %457 = load ptr, ptr %adev, align 8
  %ucode_version.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %363, i32 0, i32 6
  %458 = ptrtoint ptr %ucode_version.i.i to i32
  call void @__asan_load4_noabort(i32 %458)
  %459 = load i32, ptr %ucode_version.i.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %457, ptr noundef nonnull @.str.348, i32 noundef %459) #20
  br label %amdgpu_device_parse_gpu_info_fw.exit.i

amdgpu_device_parse_gpu_info_fw.exit.i:           ; preds = %do.end123.i.i, %do.end46.i.i, %do.end.i201.i
  %retval.0.i.i968 = phi i32 [ %call33.i.i, %do.end.i201.i ], [ %call41.i.i, %do.end46.i.i ], [ -22, %do.end123.i.i ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %fw_name.i.i) #17
  br label %cleanup

if.end110.i:                                      ; preds = %if.then110.i.i, %parse_soc_bounding_box.i.i.if.end110.i_crit_edge, %if.end2.i.i.if.end110.i_crit_edge, %if.then.i199.i.if.end110.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %fw_name.i.i) #17
  %call111.i = call zeroext i1 @amdgpu_get_bios(ptr noundef %adev) #17
  br i1 %call111.i, label %if.end113.i, label %if.end110.i.cleanup_crit_edge

if.end110.i.cleanup_crit_edge:                    ; preds = %if.end110.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end113.i:                                      ; preds = %if.end110.i
  %call114.i = call i32 @amdgpu_atombios_init(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114.i)
  %tobool115.not.i = icmp eq i32 %call114.i, 0
  br i1 %tobool115.not.i, label %if.end117.i, label %do.end.i969

do.end.i969:                                      ; preds = %if.end113.i
  call void @__sanitizer_cov_trace_pc() #19
  %460 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %461, ptr noundef nonnull @.str.322) #20
  call void @amdgpu_vf_error_put(ptr noundef %adev, i16 noundef zeroext 0, i16 noundef zeroext 0, i64 noundef 0) #17
  br label %cleanup

if.end117.i:                                      ; preds = %if.end113.i
  %462 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %462)
  %463 = load i32, ptr %virt, align 8
  %and120.i = and i32 %463, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and120.i)
  %tobool121.not.i = icmp eq i32 %and120.i, 0
  br i1 %tobool121.not.i, label %if.end117.i.for.inc.i_crit_edge, label %if.then122.i

if.end117.i.for.inc.i_crit_edge:                  ; preds = %if.end117.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then122.i:                                     ; preds = %if.end117.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @amdgpu_virt_init_data_exchange(ptr noundef %adev) #17
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then122.i, %if.end117.i.for.inc.i_crit_edge, %if.end101.i964.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.0208.i, 1
  %464 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %464)
  %465 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp55.i = icmp slt i32 %inc.i, %465
  br i1 %cmp55.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.if.end271_crit_edge

for.inc.i.if.end271_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end271

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

if.end271:                                        ; preds = %for.inc.i.if.end271_crit_edge, %if.end54.i.if.end271_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_cg_mask to i32))
  %466 = load i32, ptr @amdgpu_cg_mask, align 4
  %cg_flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 99
  %467 = ptrtoint ptr %cg_flags.i to i32
  call void @__asan_load4_noabort(i32 %467)
  %468 = load i32, ptr %cg_flags.i, align 8
  %and125.i = and i32 %468, %466
  store i32 %and125.i, ptr %cg_flags.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_pg_mask to i32))
  %469 = load i32, ptr @amdgpu_pg_mask, align 4
  %pg_flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 100
  %470 = ptrtoint ptr %pg_flags.i to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load i32, ptr %pg_flags.i, align 4
  %and126.i = and i32 %471, %469
  store i32 %and126.i, ptr %pg_flags.i, align 4
  %supported = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 6
  %472 = ptrtoint ptr %supported to i32
  call void @__asan_load1_noabort(i32 %472)
  %473 = load i8, ptr %supported, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %473)
  %tobool273.not = icmp eq i8 %473, 0
  br i1 %tobool273.not, label %if.end271.if.end279_crit_edge, label %if.then274

if.end271.if.end279_crit_edge:                    ; preds = %if.end271
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end279

if.then274:                                       ; preds = %if.end271
  %gfxhub = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 105
  %474 = ptrtoint ptr %gfxhub to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load ptr, ptr %gfxhub, align 4
  %get_xgmi_info = getelementptr inbounds %struct.amdgpu_gfxhub_funcs, ptr %475, i32 0, i32 7
  %476 = ptrtoint ptr %get_xgmi_info to i32
  call void @__asan_load4_noabort(i32 %476)
  %477 = load ptr, ptr %get_xgmi_info, align 4
  %call275 = call i32 %477(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call275)
  %tobool276.not = icmp eq i32 %call275, 0
  br i1 %tobool276.not, label %if.then274.if.end279_crit_edge, label %if.then274.cleanup_crit_edge

if.then274.cleanup_crit_edge:                     ; preds = %if.then274
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then274.if.end279_crit_edge:                   ; preds = %if.then274
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end279

if.end279:                                        ; preds = %if.then274.if.end279_crit_edge, %if.end271.if.end279_crit_edge
  %478 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %478)
  %479 = load i32, ptr %virt, align 8
  %and281 = and i32 %479, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and281)
  %tobool282.not = icmp eq i32 %and281, 0
  br i1 %tobool282.not, label %if.else288, label %if.end294

if.else288:                                       ; preds = %if.end279
  %480 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %480)
  %481 = load ptr, ptr %pdev1, align 4
  %call290 = call i32 @pci_enable_atomic_ops_to_root(ptr noundef %481, i32 noundef 384) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call290)
  %tobool291.not = icmp eq i32 %call290, 0
  %frombool287.sink1012 = zext i1 %tobool291.not to i8
  %482 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 24
  %483 = ptrtoint ptr %482 to i32
  call void @__asan_store1_noabort(i32 %483)
  store i8 %frombool287.sink1012, ptr %482, align 1
  br i1 %tobool291.not, label %if.else288.if.end302_crit_edge, label %if.else288.do.end300_crit_edge

if.else288.do.end300_crit_edge:                   ; preds = %if.else288
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end300

if.else288.if.end302_crit_edge:                   ; preds = %if.else288
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end302

if.end294:                                        ; preds = %if.end279
  %fw_reserve = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 11
  %484 = ptrtoint ptr %fw_reserve to i32
  call void @__asan_load4_noabort(i32 %484)
  %485 = load ptr, ptr %fw_reserve, align 8
  %pcie_atomic_ops_enabled_flags = getelementptr inbounds %struct.amd_sriov_msg_pf2vf_info, ptr %485, i32 0, i32 22
  %486 = ptrtoint ptr %pcie_atomic_ops_enabled_flags to i32
  call void @__asan_loadN_noabort(i32 %486, i32 4)
  %487 = load i32, ptr %pcie_atomic_ops_enabled_flags, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 384, i32 %487)
  %cmp285 = icmp eq i32 %487, 384
  %frombool287.sink = zext i1 %cmp285 to i8
  %488 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 24
  %489 = ptrtoint ptr %488 to i32
  call void @__asan_store1_noabort(i32 %489)
  store i8 %frombool287.sink, ptr %488, align 1
  br i1 %cmp285, label %if.end294.if.end302_crit_edge, label %if.end294.do.end300_crit_edge

if.end294.do.end300_crit_edge:                    ; preds = %if.end294
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end300

if.end294.if.end302_crit_edge:                    ; preds = %if.end294
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end302

do.end300:                                        ; preds = %if.end294.do.end300_crit_edge, %if.else288.do.end300_crit_edge
  %490 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %490)
  %491 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %491, ptr noundef nonnull @.str.121) #20
  br label %if.end302

if.end302:                                        ; preds = %do.end300, %if.end294.if.end302_crit_edge, %if.else288.if.end302_crit_edge
  %call303 = call fastcc i32 @amdgpu_device_doorbell_init(ptr noundef %adev)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %492 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %492)
  %cmp304 = icmp eq i32 %492, 1
  br i1 %cmp304, label %if.then306, label %if.end308

if.then306:                                       ; preds = %if.end302
  call void @__sanitizer_cov_trace_pc() #19
  %call307 = call i32 @emu_soc_asic_init(ptr noundef %adev) #17
  br label %fence_driver_init

if.end308:                                        ; preds = %if.end302
  %call309 = call i32 @amdgpu_reset_init(ptr noundef %adev) #17
  call fastcc void @amdgpu_device_detect_sriov_bios(ptr noundef %adev)
  %493 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %493)
  %494 = load i32, ptr %virt, align 8
  %and312 = and i32 %494, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and312)
  %tobool313.not = icmp eq i32 %and312, 0
  br i1 %tobool313.not, label %land.lhs.true314, label %if.end308.if.end383_crit_edge

if.end308.if.end383_crit_edge:                    ; preds = %if.end308
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end383

land.lhs.true314:                                 ; preds = %if.end308
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %495 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %495)
  %496 = load ptr, ptr %asic_funcs, align 4
  %need_reset_on_init = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %496, i32 0, i32 17
  %497 = ptrtoint ptr %need_reset_on_init to i32
  call void @__asan_load4_noabort(i32 %497)
  %498 = load ptr, ptr %need_reset_on_init, align 4
  %call315 = call zeroext i1 %498(ptr noundef %adev) #17
  br i1 %call315, label %if.then317, label %land.lhs.true314.if.end383_crit_edge

land.lhs.true314.if.end383_crit_edge:             ; preds = %land.lhs.true314
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end383

if.then317:                                       ; preds = %land.lhs.true314
  %num_physical_nodes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 4
  %499 = ptrtoint ptr %num_physical_nodes to i32
  call void @__asan_load4_noabort(i32 %499)
  %500 = load i32, ptr %num_physical_nodes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %500)
  %tobool320.not = icmp eq i32 %500, 0
  br i1 %tobool320.not, label %if.else372, label %do.end324

do.end324:                                        ; preds = %if.then317
  %501 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %501)
  %502 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %502, ptr noundef nonnull @.str.125) #20
  %pending_reset = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 9
  %503 = ptrtoint ptr %pending_reset to i32
  call void @__asan_store1_noabort(i32 %503)
  store i8 1, ptr %pending_reset, align 1
  %504 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %504)
  %505 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %505)
  %cmp3291000 = icmp sgt i32 %505, 0
  br i1 %cmp3291000, label %do.end324.for.body331_crit_edge, label %do.end324.if.end383_crit_edge

do.end324.if.end383_crit_edge:                    ; preds = %do.end324
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end383

do.end324.for.body331_crit_edge:                  ; preds = %do.end324
  br label %for.body331

for.body331:                                      ; preds = %for.inc369.for.body331_crit_edge, %do.end324.for.body331_crit_edge
  %i.11001 = phi i32 [ %inc370, %for.inc369.for.body331_crit_edge ], [ 0, %do.end324.for.body331_crit_edge ]
  %arrayidx332 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.11001
  %506 = ptrtoint ptr %arrayidx332 to i32
  call void @__asan_load1_noabort(i32 %506)
  %507 = load i8, ptr %arrayidx332, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %507)
  %tobool333.not = icmp eq i8 %507, 0
  br i1 %tobool333.not, label %for.body331.for.inc369_crit_edge, label %if.end335

for.body331.for.inc369_crit_edge:                 ; preds = %for.body331
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc369

if.end335:                                        ; preds = %for.body331
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.11001, i32 1
  %508 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %508)
  %509 = load ptr, ptr %version, align 4
  %510 = ptrtoint ptr %509 to i32
  call void @__asan_load4_noabort(i32 %510)
  %511 = load i32, ptr %509, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %511)
  %switch = icmp ult i32 %511, 4
  br i1 %switch, label %if.end335.for.inc369_crit_edge, label %if.then360

if.end335.for.inc369_crit_edge:                   ; preds = %if.end335
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc369

if.then360:                                       ; preds = %if.end335
  call void @__sanitizer_cov_trace_pc() #19
  %funcs364 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %509, i32 0, i32 4
  %512 = ptrtoint ptr %funcs364 to i32
  call void @__asan_load4_noabort(i32 %512)
  %513 = load ptr, ptr %funcs364, align 4
  %514 = ptrtoint ptr %513 to i32
  call void @__asan_load4_noabort(i32 %514)
  %515 = load ptr, ptr %513, align 4
  call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.127, ptr noundef %515) #17
  %hw = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx332, i32 0, i32 2
  %516 = ptrtoint ptr %hw to i32
  call void @__asan_store1_noabort(i32 %516)
  store i8 1, ptr %hw, align 2
  br label %for.inc369

for.inc369:                                       ; preds = %if.then360, %if.end335.for.inc369_crit_edge, %for.body331.for.inc369_crit_edge
  %inc370 = add nuw nsw i32 %i.11001, 1
  %517 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %517)
  %518 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp329 = icmp slt i32 %inc370, %518
  br i1 %cmp329, label %for.inc369.for.body331_crit_edge, label %for.inc369.if.end383_crit_edge

for.inc369.if.end383_crit_edge:                   ; preds = %for.inc369
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end383

for.inc369.for.body331_crit_edge:                 ; preds = %for.inc369
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body331

if.else372:                                       ; preds = %if.then317
  %519 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %519)
  %520 = load ptr, ptr %asic_funcs, align 4
  %reset = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %520, i32 0, i32 4
  %521 = ptrtoint ptr %reset to i32
  call void @__asan_load4_noabort(i32 %521)
  %522 = load ptr, ptr %reset, align 4
  %call374 = call i32 %522(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call374)
  %tobool375.not = icmp eq i32 %call374, 0
  br i1 %tobool375.not, label %if.else372.if.end383_crit_edge, label %do.end379

if.else372.if.end383_crit_edge:                   ; preds = %if.else372
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end383

do.end379:                                        ; preds = %if.else372
  call void @__sanitizer_cov_trace_pc() #19
  %523 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %523)
  %524 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %524, ptr noundef nonnull @.str.129) #20
  br label %failed

if.end383:                                        ; preds = %if.else372.if.end383_crit_edge, %for.inc369.if.end383_crit_edge, %do.end324.if.end383_crit_edge, %land.lhs.true314.if.end383_crit_edge, %if.end308.if.end383_crit_edge
  %525 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %525)
  %526 = load ptr, ptr %pdev1, align 4
  %call385 = call i32 @pci_enable_pcie_error_reporting(ptr noundef %526) #17
  %call386 = call zeroext i1 @amdgpu_device_need_post(ptr noundef %adev)
  br i1 %call386, label %if.then387, label %if.end383.if.end408_crit_edge

if.end383.if.end408_crit_edge:                    ; preds = %if.end383
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end408

if.then387:                                       ; preds = %if.end383
  %bios = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 26
  %527 = ptrtoint ptr %bios to i32
  call void @__asan_load4_noabort(i32 %527)
  %528 = load ptr, ptr %bios, align 4
  %tobool388.not = icmp eq ptr %528, null
  br i1 %tobool388.not, label %do.end392, label %do.end397

do.end392:                                        ; preds = %if.then387
  call void @__sanitizer_cov_trace_pc() #19
  %529 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %529)
  %530 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %530, ptr noundef nonnull @.str.132) #20
  br label %failed

do.end397:                                        ; preds = %if.then387
  %call399 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135) #20
  %asic_funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %531 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %531)
  %532 = load ptr, ptr %asic_funcs.i, align 4
  %pre_asic_init.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %532, i32 0, i32 20
  %533 = ptrtoint ptr %pre_asic_init.i to i32
  call void @__asan_load4_noabort(i32 %533)
  %534 = load ptr, ptr %pre_asic_init.i, align 4
  call void %534(ptr noundef %adev) #17
  %mode_info.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 79
  %535 = ptrtoint ptr %mode_info.i to i32
  call void @__asan_load4_noabort(i32 %535)
  %536 = load ptr, ptr %mode_info.i, align 8
  %call.i971 = call i32 @amdgpu_atom_asic_init(ptr noundef %536) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i971)
  %tobool401.not = icmp eq i32 %call.i971, 0
  br i1 %tobool401.not, label %do.end397.if.end408_crit_edge, label %do.end405

do.end397.if.end408_crit_edge:                    ; preds = %do.end397
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end408

do.end405:                                        ; preds = %do.end397
  call void @__sanitizer_cov_trace_pc() #19
  %537 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %537)
  %538 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %538, ptr noundef nonnull @.str.138) #20
  br label %failed

if.end408:                                        ; preds = %do.end397.if.end408_crit_edge, %if.end383.if.end408_crit_edge
  %is_atom_fw = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 25
  %539 = ptrtoint ptr %is_atom_fw to i32
  call void @__asan_load1_noabort(i32 %539)
  %540 = load i8, ptr %is_atom_fw, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %540)
  %tobool409.not = icmp eq i8 %540, 0
  br i1 %tobool409.not, label %if.else419, label %if.then410

if.then410:                                       ; preds = %if.end408
  %call411 = call i32 @amdgpu_atomfirmware_get_clock_info(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call411)
  %tobool412.not = icmp eq i32 %call411, 0
  br i1 %tobool412.not, label %if.then410.fence_driver_init_crit_edge, label %do.end416

if.then410.fence_driver_init_crit_edge:           ; preds = %if.then410
  call void @__sanitizer_cov_trace_pc() #19
  br label %fence_driver_init

do.end416:                                        ; preds = %if.then410
  call void @__sanitizer_cov_trace_pc() #19
  %541 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %541)
  %542 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %542, ptr noundef nonnull @.str.141) #20
  call void @amdgpu_vf_error_put(ptr noundef %adev, i16 noundef zeroext 3, i16 noundef zeroext 0, i64 noundef 0) #17
  br label %failed

if.else419:                                       ; preds = %if.end408
  %call420 = call i32 @amdgpu_atombios_get_clock_info(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call420)
  %tobool421.not = icmp eq i32 %call420, 0
  br i1 %tobool421.not, label %if.end427, label %do.end425

do.end425:                                        ; preds = %if.else419
  call void @__sanitizer_cov_trace_pc() #19
  %543 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %543)
  %544 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %544, ptr noundef nonnull @.str.144) #20
  call void @amdgpu_vf_error_put(ptr noundef %adev, i16 noundef zeroext 3, i16 noundef zeroext 0, i64 noundef 0) #17
  br label %failed

if.end427:                                        ; preds = %if.else419
  %call428 = call zeroext i1 @amdgpu_device_has_dc_support(ptr noundef %adev)
  br i1 %call428, label %if.end427.fence_driver_init_crit_edge, label %if.then429

if.end427.fence_driver_init_crit_edge:            ; preds = %if.end427
  call void @__sanitizer_cov_trace_pc() #19
  br label %fence_driver_init

if.then429:                                       ; preds = %if.end427
  call void @__sanitizer_cov_trace_pc() #19
  call void @amdgpu_atombios_i2c_init(ptr noundef %adev) #17
  br label %fence_driver_init

fence_driver_init:                                ; preds = %if.then429, %if.end427.fence_driver_init_crit_edge, %if.then410.fence_driver_init_crit_edge, %if.then306
  %call432 = call i32 @amdgpu_fence_driver_sw_init(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call432)
  %tobool433.not = icmp eq i32 %call432, 0
  br i1 %tobool433.not, label %if.end439, label %do.end437

do.end437:                                        ; preds = %fence_driver_init
  call void @__sanitizer_cov_trace_pc() #19
  %545 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %545)
  %546 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %546, ptr noundef nonnull @.str.147) #20
  call void @amdgpu_vf_error_put(ptr noundef %adev, i16 noundef zeroext 4, i16 noundef zeroext 0, i64 noundef 0) #17
  br label %failed

if.end439:                                        ; preds = %fence_driver_init
  %call.i973 = call i32 @drmm_mode_config_init(ptr noundef %ddev.i) #17
  %call442 = call fastcc i32 @amdgpu_device_ip_init(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call442)
  %tobool443.not = icmp eq i32 %call442, 0
  br i1 %tobool443.not, label %if.end474, label %if.then444

if.then444:                                       ; preds = %if.end439
  %547 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %547)
  %548 = load i32, ptr %virt, align 8
  %549 = and i32 %548, 20
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %549)
  %550 = icmp eq i32 %549, 4
  br i1 %550, label %land.lhs.true454, label %if.then444.do.end472_crit_edge

if.then444.do.end472_crit_edge:                   ; preds = %if.then444
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end472

land.lhs.true454:                                 ; preds = %if.then444
  %call455 = call zeroext i1 @amdgpu_virt_mmio_blocked(ptr noundef %adev) #17
  br i1 %call455, label %land.lhs.true457, label %land.lhs.true454.do.end472_crit_edge

land.lhs.true454.do.end472_crit_edge:             ; preds = %land.lhs.true454
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end472

land.lhs.true457:                                 ; preds = %land.lhs.true454
  %call458 = call i32 @amdgpu_virt_wait_reset(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call458)
  %tobool459.not = icmp eq i32 %call458, 0
  br i1 %tobool459.not, label %do.end463, label %land.lhs.true457.do.end472_crit_edge

land.lhs.true457.do.end472_crit_edge:             ; preds = %land.lhs.true457
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end472

do.end463:                                        ; preds = %land.lhs.true457
  call void @__sanitizer_cov_trace_pc() #19
  %551 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %551)
  %552 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %552, ptr noundef nonnull @.str.150) #20
  %553 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %553)
  %554 = load i32, ptr %virt, align 8
  %and467 = and i32 %554, -17
  store i32 %and467, ptr %virt, align 8
  %ops = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 9
  %555 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %555)
  store ptr null, ptr %ops, align 8
  br label %release_ras_con

do.end472:                                        ; preds = %land.lhs.true457.do.end472_crit_edge, %land.lhs.true454.do.end472_crit_edge, %if.then444.do.end472_crit_edge
  %556 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %556)
  %557 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %557, ptr noundef nonnull @.str.153) #20
  call void @amdgpu_vf_error_put(ptr noundef %adev, i16 noundef zeroext 5, i16 noundef zeroext 0, i64 noundef 0) #17
  br label %release_ras_con

if.end474:                                        ; preds = %if.end439
  call void @amdgpu_fence_driver_hw_init(ptr noundef %adev) #17
  %558 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %558)
  %559 = load ptr, ptr %adev, align 8
  %config = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1
  %560 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %560)
  %561 = load i32, ptr %config, align 8
  %max_sh_per_se = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 3
  %562 = ptrtoint ptr %max_sh_per_se to i32
  call void @__asan_load4_noabort(i32 %562)
  %563 = load i32, ptr %max_sh_per_se, align 4
  %max_cu_per_sh = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 2
  %564 = ptrtoint ptr %max_cu_per_sh to i32
  call void @__asan_load4_noabort(i32 %564)
  %565 = load i32, ptr %max_cu_per_sh, align 8
  %number = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 48, i32 5
  %566 = ptrtoint ptr %number to i32
  call void @__asan_load4_noabort(i32 %566)
  %567 = load i32, ptr %number, align 4
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %559, ptr noundef nonnull @.str.156, i32 noundef %561, i32 noundef %563, i32 noundef %565, i32 noundef %567) #20
  %568 = ptrtoint ptr %accel_working to i32
  call void @__asan_store1_noabort(i32 %568)
  store i8 1, ptr %accel_working, align 2
  call void @amdgpu_vm_check_compute_bug(ptr noundef %adev) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_moverate to i32))
  %569 = load i32, ptr @amdgpu_moverate, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %569)
  %cmp486 = icmp sgt i32 %569, -1
  %. = select i1 %cmp486, i32 %569, i32 8
  %570 = call i32 @llvm.ctlz.i32(i32 %., i1 true), !range !812
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.)
  %cmp492 = icmp eq i32 %., 0
  %.op = xor i32 %570, 31
  %sub.i.op.i = select i1 %cmp492, i32 0, i32 %.op
  %log2_max_MBps = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 76, i32 4
  %571 = ptrtoint ptr %log2_max_MBps to i32
  call void @__asan_store4_noabort(i32 %571)
  store i32 %sub.i.op.i, ptr %log2_max_MBps, align 8
  %call539 = call i32 @amdgpu_pm_sysfs_init(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call539)
  %tobool540.not = icmp eq i32 %call539, 0
  %pm_sysfs_en543 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 159
  br i1 %tobool540.not, label %if.else542, label %if.then541

if.then541:                                       ; preds = %if.end474
  call void @__sanitizer_cov_trace_pc() #19
  %572 = ptrtoint ptr %pm_sysfs_en543 to i32
  call void @__asan_store1_noabort(i32 %572)
  store i8 0, ptr %pm_sysfs_en543, align 4
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.158, i32 noundef %call539) #17
  br label %if.end544

if.else542:                                       ; preds = %if.end474
  call void @__sanitizer_cov_trace_pc() #19
  %573 = ptrtoint ptr %pm_sysfs_en543 to i32
  call void @__asan_store1_noabort(i32 %573)
  store i8 1, ptr %pm_sysfs_en543, align 4
  br label %if.end544

if.end544:                                        ; preds = %if.else542, %if.then541
  %call545 = call i32 @amdgpu_ucode_sysfs_init(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call545)
  %tobool546.not = icmp eq i32 %call545, 0
  %ucode_sysfs_en549 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 160
  br i1 %tobool546.not, label %if.else548, label %if.then547

if.then547:                                       ; preds = %if.end544
  call void @__sanitizer_cov_trace_pc() #19
  %574 = ptrtoint ptr %ucode_sysfs_en549 to i32
  call void @__asan_store1_noabort(i32 %574)
  store i8 0, ptr %ucode_sysfs_en549, align 1
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.159, i32 noundef %call545) #17
  br label %if.end550

if.else548:                                       ; preds = %if.end544
  call void @__sanitizer_cov_trace_pc() #19
  %575 = ptrtoint ptr %ucode_sysfs_en549 to i32
  call void @__asan_store1_noabort(i32 %575)
  store i8 1, ptr %ucode_sysfs_en549, align 1
  br label %if.end550

if.end550:                                        ; preds = %if.else548, %if.then547
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_testing to i32))
  %576 = load i32, ptr @amdgpu_testing, align 4
  %and551 = and i32 %576, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and551)
  %tobool552.not = icmp eq i32 %and551, 0
  br i1 %tobool552.not, label %if.end550.if.end564_crit_edge, label %if.then553

if.end550.if.end564_crit_edge:                    ; preds = %if.end550
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end564

if.then553:                                       ; preds = %if.end550
  %577 = ptrtoint ptr %accel_working to i32
  call void @__asan_load1_noabort(i32 %577)
  %578 = load i8, ptr %accel_working, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %578)
  %tobool555.not = icmp eq i8 %578, 0
  br i1 %tobool555.not, label %do.end560, label %if.then556

if.then556:                                       ; preds = %if.then553
  call void @__sanitizer_cov_trace_pc() #19
  call void @amdgpu_test_moves(ptr noundef %adev) #17
  br label %if.end564

do.end560:                                        ; preds = %if.then553
  call void @__sanitizer_cov_trace_pc() #19
  %call562 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.161) #20
  br label %if.end564

if.end564:                                        ; preds = %do.end560, %if.then556, %if.end550.if.end564_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_benchmarking to i32))
  %579 = load i32, ptr @amdgpu_benchmarking, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %579)
  %tobool565.not = icmp eq i32 %579, 0
  br i1 %tobool565.not, label %if.end564.if.end577_crit_edge, label %if.then566

if.end564.if.end577_crit_edge:                    ; preds = %if.end564
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end577

if.then566:                                       ; preds = %if.end564
  %580 = ptrtoint ptr %accel_working to i32
  call void @__asan_load1_noabort(i32 %580)
  %581 = load i8, ptr %accel_working, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %581)
  %tobool568.not = icmp eq i8 %581, 0
  br i1 %tobool568.not, label %do.end573, label %if.then569

if.then569:                                       ; preds = %if.then566
  call void @__sanitizer_cov_trace_pc() #19
  call void @amdgpu_benchmark(ptr noundef %adev, i32 noundef %579) #17
  br label %if.end577

do.end573:                                        ; preds = %if.then566
  call void @__sanitizer_cov_trace_pc() #19
  %call575 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.164) #20
  br label %if.end577

if.end577:                                        ; preds = %do.end573, %if.then569, %if.end564.if.end577_crit_edge
  call void @amdgpu_register_gpu_instance(ptr noundef %adev) #17
  %pending_reset580 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 9
  %582 = ptrtoint ptr %pending_reset580 to i32
  call void @__asan_load1_noabort(i32 %582)
  %583 = load i8, ptr %pending_reset580, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %583)
  %tobool581.not = icmp eq i8 %583, 0
  br i1 %tobool581.not, label %if.then582, label %if.end577.if.end595_crit_edge

if.end577.if.end595_crit_edge:                    ; preds = %if.end577
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end595

if.then582:                                       ; preds = %if.end577
  %call583 = call fastcc i32 @amdgpu_device_ip_late_init(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call583)
  %tobool584.not = icmp eq i32 %call583, 0
  br i1 %tobool584.not, label %if.end591, label %do.end588

do.end588:                                        ; preds = %if.then582
  call void @__sanitizer_cov_trace_pc() #19
  %584 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %584)
  %585 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %585, ptr noundef nonnull @.str.167) #20
  %conv590 = sext i32 %call583 to i64
  call void @amdgpu_vf_error_put(ptr noundef %adev, i16 noundef zeroext 7, i16 noundef zeroext 0, i64 noundef %conv590) #17
  br label %release_ras_con

if.end591:                                        ; preds = %if.then582
  call void @__sanitizer_cov_trace_pc() #19
  call void @amdgpu_ras_resume(ptr noundef %adev) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %586 = load ptr, ptr @system_wq, align 4
  %call.i974 = call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %586, ptr noundef %delayed_init_work, i32 noundef 200) #17
  br label %if.end595

if.end595:                                        ; preds = %if.end591, %if.end577.if.end595_crit_edge
  %587 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %587)
  %588 = load i32, ptr %virt, align 8
  %and598 = and i32 %588, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and598)
  %tobool599.not = icmp eq i32 %and598, 0
  br i1 %tobool599.not, label %if.end595.if.end603_crit_edge, label %if.then600

if.end595.if.end603_crit_edge:                    ; preds = %if.end595
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end603

if.then600:                                       ; preds = %if.end595
  call void @__sanitizer_cov_trace_pc() #19
  %call602 = call zeroext i1 @flush_delayed_work(ptr noundef %delayed_init_work) #17
  br label %if.end603

if.end603:                                        ; preds = %if.then600, %if.end595.if.end603_crit_edge
  %589 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %589)
  %590 = load ptr, ptr %adev, align 8
  %call605 = call i32 @sysfs_create_files(ptr noundef %590, ptr noundef nonnull @amdgpu_dev_attributes) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call605)
  %tobool606.not = icmp eq i32 %call605, 0
  br i1 %tobool606.not, label %if.end603.if.end612_crit_edge, label %do.end610

if.end603.if.end612_crit_edge:                    ; preds = %if.end603
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end612

do.end610:                                        ; preds = %if.end603
  call void @__sanitizer_cov_trace_pc() #19
  %591 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %591)
  %592 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %592, ptr noundef nonnull @.str.170) #20
  br label %if.end612

if.end612:                                        ; preds = %do.end610, %if.end603.if.end612_crit_edge
  %call613 = call i32 @amdgpu_pmu_init(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call613)
  %tobool614.not = icmp eq i32 %call613, 0
  br i1 %tobool614.not, label %if.end612.if.end620_crit_edge, label %do.end618

if.end612.if.end620_crit_edge:                    ; preds = %if.end612
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end620

do.end618:                                        ; preds = %if.end612
  call void @__sanitizer_cov_trace_pc() #19
  %593 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %593)
  %594 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %594, ptr noundef nonnull @.str.173) #20
  br label %if.end620

if.end620:                                        ; preds = %do.end618, %if.end612.if.end620_crit_edge
  %595 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %595)
  %596 = load ptr, ptr %pdev1, align 4
  %call622 = call zeroext i1 @amdgpu_device_cache_pci_state(ptr noundef %596)
  br i1 %call622, label %if.then623, label %if.end620.if.end624_crit_edge

if.end620.if.end624_crit_edge:                    ; preds = %if.end620
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end624

if.then623:                                       ; preds = %if.end620
  call void @__sanitizer_cov_trace_pc() #19
  call void @pci_restore_state(ptr noundef %1) #17
  br label %if.end624

if.end624:                                        ; preds = %if.then623, %if.end620.if.end624_crit_edge
  %597 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %597)
  %598 = load ptr, ptr %pdev1, align 4
  %class = getelementptr inbounds %struct.pci_dev, ptr %598, i32 0, i32 11
  %599 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %599)
  %600 = load i32, ptr %class, align 8
  %shr.mask = and i32 %600, -256
  call void @__sanitizer_cov_trace_const_cmp4(i32 196608, i32 %shr.mask)
  %cmp626 = icmp eq i32 %shr.mask, 196608
  br i1 %cmp626, label %if.then628, label %if.end624.if.end639_crit_edge

if.end624.if.end639_crit_edge:                    ; preds = %if.end624
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end639

if.then628:                                       ; preds = %if.end624
  call void @__sanitizer_cov_trace_pc() #19
  %call630 = call i32 @vga_client_register(ptr noundef %598, ptr noundef nonnull @amdgpu_device_vga_set_decode) #17
  br label %if.end639

if.end639:                                        ; preds = %if.then628, %if.end624.if.end639_crit_edge
  %601 = ptrtoint ptr %pending_reset580 to i32
  call void @__asan_load1_noabort(i32 %601)
  %602 = load i8, ptr %pending_reset580, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %602)
  %tobool643.not = icmp eq i8 %602, 0
  br i1 %tobool643.not, label %if.end639.if.end647_crit_edge, label %if.then644

if.end639.if.end647_crit_edge:                    ; preds = %if.end639
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end647

if.then644:                                       ; preds = %if.end639
  call void @__sanitizer_cov_trace_pc() #19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %603 = load ptr, ptr @system_wq, align 4
  %call.i978 = call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %603, ptr noundef getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 5), i32 noundef 200) #17
  br label %if.end647

if.end647:                                        ; preds = %if.then644, %if.end639.if.end647_crit_edge
  %604 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %604)
  %605 = load ptr, ptr %adev, align 8
  %call.i979 = call ptr @iommu_get_domain_for_dev(ptr noundef %605) #17
  %tobool.not.i980 = icmp eq ptr %call.i979, null
  br i1 %tobool.not.i980, label %if.end647.if.then.i983_crit_edge, label %lor.lhs.false.i982

if.end647.if.then.i983_crit_edge:                 ; preds = %if.end647
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i983

lor.lhs.false.i982:                               ; preds = %if.end647
  %606 = ptrtoint ptr %call.i979 to i32
  call void @__asan_load4_noabort(i32 %606)
  %607 = load i32, ptr %call.i979, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %607)
  %cmp.i981 = icmp eq i32 %607, 4
  br i1 %cmp.i981, label %lor.lhs.false.i982.if.then.i983_crit_edge, label %lor.lhs.false.i982.cleanup_crit_edge

lor.lhs.false.i982.cleanup_crit_edge:             ; preds = %lor.lhs.false.i982
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false.i982.if.then.i983_crit_edge:        ; preds = %lor.lhs.false.i982
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i983

if.then.i983:                                     ; preds = %lor.lhs.false.i982.if.then.i983_crit_edge, %if.end647.if.then.i983_crit_edge
  %ram_is_direct_mapped.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 173
  %608 = ptrtoint ptr %ram_is_direct_mapped.i to i32
  call void @__asan_store1_noabort(i32 %608)
  store i8 1, ptr %ram_is_direct_mapped.i, align 4
  br label %cleanup

release_ras_con:                                  ; preds = %do.end588, %do.end472, %do.end463
  %r.0 = phi i32 [ %call442, %do.end472 ], [ -11, %do.end463 ], [ %call583, %do.end588 ]
  call void @amdgpu_release_ras_context(ptr noundef %adev) #17
  br label %failed

failed:                                           ; preds = %release_ras_con, %do.end437, %do.end425, %do.end416, %do.end405, %do.end392, %do.end379
  %r.1 = phi i32 [ %call432, %do.end437 ], [ %r.0, %release_ras_con ], [ %call.i971, %do.end405 ], [ %call411, %do.end416 ], [ %call420, %do.end425 ], [ -22, %do.end392 ], [ %call374, %do.end379 ]
  call void @amdgpu_vf_error_trans_all(ptr noundef %adev) #17
  br label %cleanup

cleanup:                                          ; preds = %failed, %if.then.i983, %lor.lhs.false.i982.cleanup_crit_edge, %if.then274.cleanup_crit_edge, %do.end.i969, %if.end110.i.cleanup_crit_edge, %amdgpu_device_parse_gpu_info_fw.exit.i, %if.then82.i, %sw.default.i.cleanup_crit_edge, %sw.bb19.i.cleanup_crit_edge, %sw.bb8.i.cleanup_crit_edge, %sw.bb.i956.cleanup_crit_edge, %if.then.i954.cleanup_crit_edge, %do.end266, %if.end221.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.i942, %do.end266 ], [ %r.1, %failed ], [ -12, %if.end221.cleanup_crit_edge ], [ %call275, %if.then274.cleanup_crit_edge ], [ 0, %lor.lhs.false.i982.cleanup_crit_edge ], [ 0, %if.then.i983 ], [ %retval.0.i.i968, %amdgpu_device_parse_gpu_info_fw.exit.i ], [ %call32.i, %sw.default.i.cleanup_crit_edge ], [ %call28.i, %sw.bb19.i.cleanup_crit_edge ], [ %call15.i, %sw.bb8.i.cleanup_crit_edge ], [ %call4.i, %sw.bb.i956.cleanup_crit_edge ], [ %call.i, %if.then.i954.cleanup_crit_edge ], [ %call73.i, %if.then82.i ], [ %call114.i, %do.end.i969 ], [ -22, %if.end110.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @dma_fence_context_alloc(i32 noundef) local_unnamed_addr #3

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @amdgpu_invalid_rreg(ptr nocapture noundef readnone %adev, i32 noundef %reg) #11 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.274, i32 noundef %reg) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 809, 0\0A.popsection", ""() #17, !srcloc !813
  unreachable
}

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @amdgpu_invalid_wreg(ptr nocapture noundef readnone %adev, i32 noundef %reg, i32 noundef %v) #11 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.275, i32 noundef %reg, i32 noundef %v) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 827, 0\0A.popsection", ""() #17, !srcloc !814
  unreachable
}

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i64 @amdgpu_invalid_rreg64(ptr nocapture noundef readnone %adev, i32 noundef %reg) #11 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.276, i32 noundef %reg) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 843, 0\0A.popsection", ""() #17, !srcloc !815
  unreachable
}

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @amdgpu_invalid_wreg64(ptr nocapture noundef readnone %adev, i32 noundef %reg, i64 noundef %v) #11 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.277, i32 noundef %reg, i64 noundef %v) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 861, 0\0A.popsection", ""() #17, !srcloc !816
  unreachable
}

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @amdgpu_block_invalid_rreg(ptr nocapture noundef readnone %adev, i32 noundef %block, i32 noundef %reg) #11 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.278, i32 noundef %reg, i32 noundef %block) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 880, 0\0A.popsection", ""() #17, !srcloc !817
  unreachable
}

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @amdgpu_block_invalid_wreg(ptr nocapture noundef readnone %adev, i32 noundef %block, i32 noundef %reg, i32 noundef %v) #11 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.279, i32 noundef %reg, i32 noundef %block, i32 noundef %v) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/amdgpu_device.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 901, 0\0A.popsection", ""() #17, !srcloc !818
  unreachable
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_rwsem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @amdgpu_device_delayed_init_work_handler(ptr noundef %work) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -90176
  %call = tail call i32 @amdgpu_ib_ring_tests(ptr noundef %add.ptr) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.312, i32 noundef %call) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @amdgpu_device_delay_enable_gfx_off(ptr noundef %work) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -44332
  %gfx_off_state = getelementptr i8, ptr %work, i32 -100
  %0 = ptrtoint ptr %gfx_off_state to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %gfx_off_state, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end29_crit_edge, label %land.rhs

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b106 = load i1, ptr @amdgpu_device_delay_enable_gfx_off.__already_done, align 1
  br i1 %.b106, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !775

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @amdgpu_device_delay_enable_gfx_off.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.38, i32 noundef 2820, i32 noundef 9, ptr noundef null) #17
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %gfx_off_req_count = getelementptr i8, ptr %work, i32 -4
  %2 = ptrtoint ptr %gfx_off_req_count to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gfx_off_req_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool39.not = icmp eq i32 %3, 0
  br i1 %tobool39.not, label %if.end29.if.end84_crit_edge, label %land.rhs46

if.end29.if.end84_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end84

land.rhs46:                                       ; preds = %if.end29
  %.b104105 = load i1, ptr @amdgpu_device_delay_enable_gfx_off.__already_done.313, align 1
  br i1 %.b104105, label %land.rhs46.if.end84_crit_edge, label %if.then57, !prof !775

land.rhs46.if.end84_crit_edge:                    ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end84

if.then57:                                        ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @amdgpu_device_delay_enable_gfx_off.__already_done.313, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.38, i32 noundef 2821, i32 noundef 9, ptr noundef null) #17
  br label %if.end84

if.end84:                                         ; preds = %if.then57, %land.rhs46.if.end84_crit_edge, %if.end29.if.end84_crit_edge
  %call = tail call i32 @amdgpu_dpm_set_powergating_by_smu(ptr noundef %add.ptr, i32 noundef 6, i1 noundef zeroext true) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool92.not = icmp eq i32 %call, 0
  br i1 %tobool92.not, label %if.then93, label %if.end84.if.end96_crit_edge

if.end84.if.end96_crit_edge:                      ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end96

if.then93:                                        ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #19
  %4 = ptrtoint ptr %gfx_off_state to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %gfx_off_state, align 8
  br label %if.end96

if.end96:                                         ; preds = %if.then93, %if.end84.if.end96_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @amdgpu_device_xgmi_reset_func(ptr noundef %__work) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %__work, i32 -91368
  %call = tail call ptr @amdgpu_get_xgmi_hive(ptr noundef %add.ptr) #17
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.end, label %if.end24, !prof !768

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.38, i32 noundef 3287, i32 noundef 9, ptr noundef null) #17
  br label %cleanup

if.end24:                                         ; preds = %entry
  %asic_funcs = getelementptr i8, ptr %__work, i32 -88972
  %0 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %asic_funcs, align 4
  %reset_method = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %reset_method to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %reset_method, align 4
  %call25 = tail call i32 %3(ptr noundef %add.ptr) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %call25)
  %cmp = icmp eq i32 %call25, 4
  %tb = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9
  %count.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #17
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #17
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %4, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17
  %5 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tb, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult.i.i.i.i.i, i32 %6)
  %cmp.i = icmp eq i32 %asmresult.i.i.i.i.i, %6
  br i1 %cmp, label %if.then26, label %if.else

if.then26:                                        ; preds = %if.end24
  br i1 %cmp.i, label %if.then.i, label %if.then26.task_barrier_enter.exit_crit_edge

if.then26.task_barrier_enter.exit_crit_edge:      ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_enter.exit

if.then.i:                                        ; preds = %if.then26
  %enter_turnstile.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp2.not.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp2.not.i.i, label %if.then.i.task_barrier_enter.exit_crit_edge, label %if.then.i.for.body.i.i_crit_edge

if.then.i.for.body.i.i_crit_edge:                 ; preds = %if.then.i
  br label %for.body.i.i

if.then.i.task_barrier_enter.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_enter.exit

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.then.i.for.body.i.i_crit_edge
  %i.03.i.i = phi i32 [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %if.then.i.for.body.i.i_crit_edge ]
  tail call void @up(ptr noundef %enter_turnstile.i) #17
  %inc.i.i = add nuw i32 %i.03.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %asmresult.i.i.i.i.i
  br i1 %exitcond.not.i.i, label %for.body.i.i.task_barrier_enter.exit_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i

for.body.i.i.task_barrier_enter.exit_crit_edge:   ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_enter.exit

task_barrier_enter.exit:                          ; preds = %for.body.i.i.task_barrier_enter.exit_crit_edge, %if.then.i.task_barrier_enter.exit_crit_edge, %if.then26.task_barrier_enter.exit_crit_edge
  %enter_turnstile2.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9, i32 2
  tail call void @down(ptr noundef %enter_turnstile2.i) #17
  %ras1.i = getelementptr i8, ptr %__work, i32 -9360
  %7 = ptrtoint ptr %ras1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ras1.i, align 8
  %9 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %asic_funcs, align 4
  %supports_baco.i.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %10, i32 0, i32 19
  %11 = ptrtoint ptr %supports_baco.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %supports_baco.i.i, align 4
  %call1.i.i = tail call zeroext i1 %12(ptr noundef %add.ptr) #17
  br i1 %call1.i.i, label %if.end.i, label %amdgpu_device_baco_enter.exit.thread

amdgpu_device_baco_enter.exit.thread:             ; preds = %task_barrier_enter.exit
  call void @__sanitizer_cov_trace_pc() #19
  %asic_reset_res118 = getelementptr i8, ptr %__work, i32 -4
  %13 = ptrtoint ptr %asic_reset_res118 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -524, ptr %asic_reset_res118, align 4
  br label %fail

if.end.i:                                         ; preds = %task_barrier_enter.exit
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end.i.amdgpu_device_baco_enter.exit_crit_edge, label %land.lhs.true.i

if.end.i.amdgpu_device_baco_enter.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_baco_enter.exit

land.lhs.true.i:                                  ; preds = %if.end.i
  %ras_enabled.i = getelementptr i8, ptr %__work, i32 296
  %14 = ptrtoint ptr %ras_enabled.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ras_enabled.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool4.not.i = icmp eq i32 %15, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i.amdgpu_device_baco_enter.exit_crit_edge, label %land.lhs.true5.i

land.lhs.true.i.amdgpu_device_baco_enter.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_baco_enter.exit

land.lhs.true5.i:                                 ; preds = %land.lhs.true.i
  %funcs.i = getelementptr i8, ptr %__work, i32 -58568
  %16 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs.i, align 8
  %enable_doorbell_interrupt.i = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %17, i32 0, i32 15
  %18 = ptrtoint ptr %enable_doorbell_interrupt.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %enable_doorbell_interrupt.i, align 4
  %tobool6.not.i = icmp eq ptr %19, null
  br i1 %tobool6.not.i, label %land.lhs.true5.i.amdgpu_device_baco_enter.exit_crit_edge, label %if.then7.i

land.lhs.true5.i.amdgpu_device_baco_enter.exit_crit_edge: ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_baco_enter.exit

if.then7.i:                                       ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %19(ptr noundef %add.ptr, i1 noundef zeroext false) #17
  br label %amdgpu_device_baco_enter.exit

amdgpu_device_baco_enter.exit:                    ; preds = %if.then7.i, %land.lhs.true5.i.amdgpu_device_baco_enter.exit_crit_edge, %land.lhs.true.i.amdgpu_device_baco_enter.exit_crit_edge, %if.end.i.amdgpu_device_baco_enter.exit_crit_edge
  %call12.i = tail call i32 @amdgpu_dpm_baco_enter(ptr noundef %add.ptr) #17
  %asic_reset_res = getelementptr i8, ptr %__work, i32 -4
  %20 = ptrtoint ptr %asic_reset_res to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %call12.i, ptr %asic_reset_res, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool30.not = icmp eq i32 %call12.i, 0
  br i1 %tobool30.not, label %if.end32, label %amdgpu_device_baco_enter.exit.fail_crit_edge

amdgpu_device_baco_enter.exit.fail_crit_edge:     ; preds = %amdgpu_device_baco_enter.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %fail

if.end32:                                         ; preds = %amdgpu_device_baco_enter.exit
  %call.i.i.i93 = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !819
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #17
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #17, !srcloc !820
  %asmresult.i.i.i.i.i94 = extractvalue { i32, i32 } %21, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !821
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i94)
  %cmp.i95 = icmp eq i32 %asmresult.i.i.i.i.i94, 0
  br i1 %cmp.i95, label %if.then.i97, label %if.end32.task_barrier_exit.exit_crit_edge

if.end32.task_barrier_exit.exit_crit_edge:        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_exit.exit

if.then.i97:                                      ; preds = %if.end32
  %exit_turnstile.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9, i32 3
  %22 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %tb, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp2.not.i.i96 = icmp eq i32 %23, 0
  br i1 %cmp2.not.i.i96, label %if.then.i97.task_barrier_exit.exit_crit_edge, label %if.then.i97.for.body.i.i101_crit_edge

if.then.i97.for.body.i.i101_crit_edge:            ; preds = %if.then.i97
  br label %for.body.i.i101

if.then.i97.task_barrier_exit.exit_crit_edge:     ; preds = %if.then.i97
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_exit.exit

for.body.i.i101:                                  ; preds = %for.body.i.i101.for.body.i.i101_crit_edge, %if.then.i97.for.body.i.i101_crit_edge
  %i.03.i.i98 = phi i32 [ %inc.i.i99, %for.body.i.i101.for.body.i.i101_crit_edge ], [ 0, %if.then.i97.for.body.i.i101_crit_edge ]
  tail call void @up(ptr noundef %exit_turnstile.i) #17
  %inc.i.i99 = add nuw i32 %i.03.i.i98, 1
  %exitcond.not.i.i100 = icmp eq i32 %inc.i.i99, %23
  br i1 %exitcond.not.i.i100, label %for.body.i.i101.task_barrier_exit.exit_crit_edge, label %for.body.i.i101.for.body.i.i101_crit_edge

for.body.i.i101.for.body.i.i101_crit_edge:        ; preds = %for.body.i.i101
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i101

for.body.i.i101.task_barrier_exit.exit_crit_edge: ; preds = %for.body.i.i101
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_exit.exit

task_barrier_exit.exit:                           ; preds = %for.body.i.i101.task_barrier_exit.exit_crit_edge, %if.then.i97.task_barrier_exit.exit_crit_edge, %if.end32.task_barrier_exit.exit_crit_edge
  %exit_turnstile1.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9, i32 3
  tail call void @down(ptr noundef %exit_turnstile1.i) #17
  %24 = ptrtoint ptr %ras1.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ras1.i, align 8
  %26 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %asic_funcs, align 4
  %supports_baco.i.i107 = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %27, i32 0, i32 19
  %28 = ptrtoint ptr %supports_baco.i.i107 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %supports_baco.i.i107, align 4
  %call1.i.i108 = tail call zeroext i1 %29(ptr noundef %add.ptr) #17
  br i1 %call1.i.i108, label %if.end.i110, label %task_barrier_exit.exit.amdgpu_device_baco_exit.exit_crit_edge

task_barrier_exit.exit.amdgpu_device_baco_exit.exit_crit_edge: ; preds = %task_barrier_exit.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_baco_exit.exit

if.end.i110:                                      ; preds = %task_barrier_exit.exit
  %call4.i = tail call i32 @amdgpu_dpm_baco_exit(ptr noundef %add.ptr) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not.i109 = icmp eq i32 %call4.i, 0
  br i1 %tobool.not.i109, label %if.end6.i, label %if.end.i110.amdgpu_device_baco_exit.exit_crit_edge

if.end.i110.amdgpu_device_baco_exit.exit_crit_edge: ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_baco_exit.exit

if.end6.i:                                        ; preds = %if.end.i110
  %tobool7.not.i = icmp eq ptr %25, null
  br i1 %tobool7.not.i, label %if.end6.i.if.end15.i_crit_edge, label %land.lhs.true.i112

if.end6.i.if.end15.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.i

land.lhs.true.i112:                               ; preds = %if.end6.i
  %ras_enabled.i111 = getelementptr i8, ptr %__work, i32 296
  %30 = ptrtoint ptr %ras_enabled.i111 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ras_enabled.i111, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool8.not.i = icmp eq i32 %31, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i112.if.end15.i_crit_edge, label %land.lhs.true9.i

land.lhs.true.i112.if.end15.i_crit_edge:          ; preds = %land.lhs.true.i112
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.i

land.lhs.true9.i:                                 ; preds = %land.lhs.true.i112
  %funcs.i113 = getelementptr i8, ptr %__work, i32 -58568
  %32 = ptrtoint ptr %funcs.i113 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %funcs.i113, align 8
  %enable_doorbell_interrupt.i114 = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %33, i32 0, i32 15
  %34 = ptrtoint ptr %enable_doorbell_interrupt.i114 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %enable_doorbell_interrupt.i114, align 4
  %tobool10.not.i = icmp eq ptr %35, null
  br i1 %tobool10.not.i, label %land.lhs.true9.i.if.end15.i_crit_edge, label %if.then11.i

land.lhs.true9.i.if.end15.i_crit_edge:            ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.i

if.then11.i:                                      ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %35(ptr noundef %add.ptr, i1 noundef zeroext true) #17
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then11.i, %land.lhs.true9.i.if.end15.i_crit_edge, %land.lhs.true.i112.if.end15.i_crit_edge, %if.end6.i.if.end15.i_crit_edge
  %virt.i = getelementptr i8, ptr %__work, i32 -1088
  %36 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %37, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool16.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool16.not.i, label %if.end15.i.if.end40_crit_edge, label %land.lhs.true17.i

if.end15.i.if.end40_crit_edge:                    ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40

land.lhs.true17.i:                                ; preds = %if.end15.i
  %funcs19.i = getelementptr i8, ptr %__work, i32 -58568
  %38 = ptrtoint ptr %funcs19.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %funcs19.i, align 8
  %clear_doorbell_interrupt.i = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %39, i32 0, i32 26
  %40 = ptrtoint ptr %clear_doorbell_interrupt.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %clear_doorbell_interrupt.i, align 4
  %tobool20.not.i = icmp eq ptr %41, null
  br i1 %tobool20.not.i, label %land.lhs.true17.i.if.end40_crit_edge, label %if.then21.i

land.lhs.true17.i.if.end40_crit_edge:             ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40

if.then21.i:                                      ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %41(ptr noundef %add.ptr) #17
  br label %if.end40

amdgpu_device_baco_exit.exit:                     ; preds = %if.end.i110.amdgpu_device_baco_exit.exit_crit_edge, %task_barrier_exit.exit.amdgpu_device_baco_exit.exit_crit_edge
  %retval.0.i115 = phi i32 [ -524, %task_barrier_exit.exit.amdgpu_device_baco_exit.exit_crit_edge ], [ %call4.i, %if.end.i110.amdgpu_device_baco_exit.exit_crit_edge ]
  %42 = ptrtoint ptr %asic_reset_res to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %retval.0.i115, ptr %asic_reset_res, align 4
  br label %fail

if.end40:                                         ; preds = %if.then21.i, %land.lhs.true17.i.if.end40_crit_edge, %if.end15.i.if.end40_crit_edge
  %43 = ptrtoint ptr %asic_reset_res to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 0, ptr %asic_reset_res, align 4
  %ras_funcs = getelementptr i8, ptr %__work, i32 -58536
  %44 = ptrtoint ptr %ras_funcs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %ras_funcs, align 8
  %tobool41.not = icmp eq ptr %45, null
  br i1 %tobool41.not, label %if.end40.fail_crit_edge, label %land.lhs.true

if.end40.fail_crit_edge:                          ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #19
  br label %fail

land.lhs.true:                                    ; preds = %if.end40
  %reset_ras_error_count = getelementptr inbounds %struct.amdgpu_mmhub_ras_funcs, ptr %45, i32 0, i32 4
  %46 = ptrtoint ptr %reset_ras_error_count to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %reset_ras_error_count, align 4
  %tobool44.not = icmp eq ptr %47, null
  br i1 %tobool44.not, label %land.lhs.true.fail_crit_edge, label %if.then45

land.lhs.true.fail_crit_edge:                     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %fail

if.then45:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %47(ptr noundef %add.ptr) #17
  br label %fail

if.else:                                          ; preds = %if.end24
  br i1 %cmp.i, label %if.then.i.i, label %if.else.task_barrier_enter.exit.i_crit_edge

if.else.task_barrier_enter.exit.i_crit_edge:      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_enter.exit.i

if.then.i.i:                                      ; preds = %if.else
  %enter_turnstile.i.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp2.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp2.not.i.i.i, label %if.then.i.i.task_barrier_enter.exit.i_crit_edge, label %if.then.i.i.for.body.i.i.i_crit_edge

if.then.i.i.for.body.i.i.i_crit_edge:             ; preds = %if.then.i.i
  br label %for.body.i.i.i

if.then.i.i.task_barrier_enter.exit.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_enter.exit.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.for.body.i.i.i_crit_edge, %if.then.i.i.for.body.i.i.i_crit_edge
  %i.03.i.i.i = phi i32 [ %inc.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %if.then.i.i.for.body.i.i.i_crit_edge ]
  tail call void @up(ptr noundef %enter_turnstile.i.i) #17
  %inc.i.i.i = add nuw i32 %i.03.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, %asmresult.i.i.i.i.i
  br i1 %exitcond.not.i.i.i, label %for.body.i.i.i.task_barrier_enter.exit.i_crit_edge, label %for.body.i.i.i.for.body.i.i.i_crit_edge

for.body.i.i.i.for.body.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i.i

for.body.i.i.i.task_barrier_enter.exit.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_enter.exit.i

task_barrier_enter.exit.i:                        ; preds = %for.body.i.i.i.task_barrier_enter.exit.i_crit_edge, %if.then.i.i.task_barrier_enter.exit.i_crit_edge, %if.else.task_barrier_enter.exit.i_crit_edge
  %enter_turnstile2.i.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9, i32 2
  tail call void @down(ptr noundef %enter_turnstile2.i.i) #17
  %call.i.i.i3.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !819
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #17
  %48 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #17, !srcloc !820
  %asmresult.i.i.i.i.i4.i = extractvalue { i32, i32 } %48, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !821
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i4.i)
  %cmp.i5.i = icmp eq i32 %asmresult.i.i.i.i.i4.i, 0
  br i1 %cmp.i5.i, label %if.then.i7.i, label %task_barrier_enter.exit.i.task_barrier_full.exit_crit_edge

task_barrier_enter.exit.i.task_barrier_full.exit_crit_edge: ; preds = %task_barrier_enter.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_full.exit

if.then.i7.i:                                     ; preds = %task_barrier_enter.exit.i
  %exit_turnstile.i.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9, i32 3
  %49 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %tb, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %cmp2.not.i.i6.i = icmp eq i32 %50, 0
  br i1 %cmp2.not.i.i6.i, label %if.then.i7.i.task_barrier_full.exit_crit_edge, label %if.then.i7.i.for.body.i.i11.i_crit_edge

if.then.i7.i.for.body.i.i11.i_crit_edge:          ; preds = %if.then.i7.i
  br label %for.body.i.i11.i

if.then.i7.i.task_barrier_full.exit_crit_edge:    ; preds = %if.then.i7.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_full.exit

for.body.i.i11.i:                                 ; preds = %for.body.i.i11.i.for.body.i.i11.i_crit_edge, %if.then.i7.i.for.body.i.i11.i_crit_edge
  %i.03.i.i8.i = phi i32 [ %inc.i.i9.i, %for.body.i.i11.i.for.body.i.i11.i_crit_edge ], [ 0, %if.then.i7.i.for.body.i.i11.i_crit_edge ]
  tail call void @up(ptr noundef %exit_turnstile.i.i) #17
  %inc.i.i9.i = add nuw i32 %i.03.i.i8.i, 1
  %exitcond.not.i.i10.i = icmp eq i32 %inc.i.i9.i, %50
  br i1 %exitcond.not.i.i10.i, label %for.body.i.i11.i.task_barrier_full.exit_crit_edge, label %for.body.i.i11.i.for.body.i.i11.i_crit_edge

for.body.i.i11.i.for.body.i.i11.i_crit_edge:      ; preds = %for.body.i.i11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i11.i

for.body.i.i11.i.task_barrier_full.exit_crit_edge: ; preds = %for.body.i.i11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_barrier_full.exit

task_barrier_full.exit:                           ; preds = %for.body.i.i11.i.task_barrier_full.exit_crit_edge, %if.then.i7.i.task_barrier_full.exit_crit_edge, %task_barrier_enter.exit.i.task_barrier_full.exit_crit_edge
  %exit_turnstile1.i.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call, i32 0, i32 9, i32 3
  tail call void @down(ptr noundef %exit_turnstile1.i.i) #17
  %51 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %asic_funcs, align 4
  %reset = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %52, i32 0, i32 4
  %53 = ptrtoint ptr %reset to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %reset, align 4
  %call52 = tail call i32 %54(ptr noundef %add.ptr) #17
  %asic_reset_res53 = getelementptr i8, ptr %__work, i32 -4
  %55 = ptrtoint ptr %asic_reset_res53 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %call52, ptr %asic_reset_res53, align 4
  br label %fail

fail:                                             ; preds = %task_barrier_full.exit, %if.then45, %land.lhs.true.fail_crit_edge, %if.end40.fail_crit_edge, %amdgpu_device_baco_exit.exit, %amdgpu_device_baco_enter.exit.fail_crit_edge, %amdgpu_device_baco_enter.exit.thread
  %asic_reset_res55 = getelementptr i8, ptr %__work, i32 -4
  %56 = ptrtoint ptr %asic_reset_res55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %asic_reset_res55, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool56.not = icmp eq i32 %57, 0
  br i1 %tobool56.not, label %fail.if.end65_crit_edge, label %do.end60

fail.if.end65_crit_edge:                          ; preds = %fail
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end65

do.end60:                                         ; preds = %fail
  call void @__sanitizer_cov_trace_pc() #19
  %unique = getelementptr i8, ptr %__work, i32 -91256
  %58 = ptrtoint ptr %unique to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %unique, align 4
  %call64 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.314, i32 noundef %57, ptr noundef %59) #20
  br label %if.end65

if.end65:                                         ; preds = %do.end60, %fail.if.end65_crit_edge
  tail call void @amdgpu_put_xgmi_hive(ptr noundef nonnull %call) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end65, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @power_supply_is_system_supplied() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ioremap(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_detect_virtualization(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_atomic_ops_to_root(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @emu_soc_asic_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_reset_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @amdgpu_device_detect_sriov_bios(ptr noundef %adev) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end19_crit_edge, label %if.then

entry.if.end19_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19

if.then:                                          ; preds = %entry
  %is_atom_fw = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 25
  %2 = ptrtoint ptr %is_atom_fw to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %is_atom_fw, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  %call = tail call zeroext i1 @amdgpu_atomfirmware_gpu_virtualization_supported(ptr noundef %adev) #17
  br i1 %call, label %if.then2.if.end12.sink.split_crit_edge, label %if.then2.if.end12_crit_edge

if.then2.if.end12_crit_edge:                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.then2.if.end12.sink.split_crit_edge:           ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.sink.split

if.else:                                          ; preds = %if.then
  %call6 = tail call zeroext i1 @amdgpu_atombios_has_gpu_virtualization_table(ptr noundef %adev) #17
  br i1 %call6, label %if.else.if.end12.sink.split_crit_edge, label %if.else.if.end12_crit_edge

if.else.if.end12_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.else.if.end12.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.sink.split

if.end12.sink.split:                              ; preds = %if.else.if.end12.sink.split_crit_edge, %if.then2.if.end12.sink.split_crit_edge
  %4 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %virt, align 8
  %or10 = or i32 %5, 1
  store i32 %or10, ptr %virt, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.end12.sink.split, %if.else.if.end12_crit_edge, %if.then2.if.end12_crit_edge
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and15 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %if.then17, label %if.end12.if.end19_crit_edge

if.end12.if.end19_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19

if.then17:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_vf_error_put(ptr noundef %adev, i16 noundef zeroext 1, i16 noundef zeroext 0, i64 noundef 0) #17
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.end12.if.end19_crit_edge, %entry.if.end19_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__drm_dbg(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_pcie_error_reporting(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atomfirmware_get_clock_info(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_vf_error_put(ptr noundef, i16 noundef zeroext, i16 noundef zeroext, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atombios_get_clock_info(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_atombios_i2c_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_fence_driver_sw_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @amdgpu_device_ip_init(ptr noundef %adev) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @amdgpu_ras_init(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp203 = icmp sgt i32 %1, 0
  br i1 %cmp203, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %vram_scratch.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 69
  %gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 69, i32 2
  %ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 69, i32 1
  %wb.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70
  %gpu_addr.i169 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 2
  %wb5.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 1
  %num_wb.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 3
  %used.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 4
  %csa_obj = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0204 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.0204
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %for.body.for.inc_crit_edge, label %if.end3

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end3:                                          ; preds = %for.body
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.0204, i32 1
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %version, align 4
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %sw_init = getelementptr inbounds %struct.amd_ip_funcs, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %sw_init to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sw_init, align 4
  %call6 = tail call i32 %9(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end13, label %if.then8

if.then8:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  %10 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %version, align 4
  %funcs12 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %funcs12 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %funcs12, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.350, ptr noundef %15, i32 noundef %call6) #17
  br label %init_failed

if.end13:                                         ; preds = %if.end3
  %sw = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 1
  %16 = ptrtoint ptr %sw to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %sw, align 1
  %17 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %version, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %20)
  %cmp20 = icmp eq i32 %20, 1
  br i1 %cmp20, label %if.then21, label %if.end13.for.inc_crit_edge

if.end13.for.inc_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then21:                                        ; preds = %if.end13
  %21 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %virt, align 8
  %and = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool22.not = icmp eq i32 %and, 0
  br i1 %tobool22.not, label %if.then21.if.end24_crit_edge, label %if.then23

if.then21.if.end24_crit_edge:                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24

if.then23:                                        ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_virt_exchange_data(ptr noundef %adev) #17
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.then21.if.end24_crit_edge
  %call.i = tail call i32 @amdgpu_bo_create_kernel(ptr noundef %adev, i32 noundef 4096, i32 noundef 4096, i32 noundef 4, ptr noundef %vram_scratch.i, ptr noundef %gpu_addr.i, ptr noundef %ptr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool26.not = icmp eq i32 %call.i, 0
  br i1 %tobool26.not, label %if.end28, label %if.then27

if.then27:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.351, i32 noundef %call.i) #17
  br label %init_failed

if.end28:                                         ; preds = %if.end24
  %23 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %version, align 4
  %funcs32 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %funcs32 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %funcs32, align 4
  %hw_init = getelementptr inbounds %struct.amd_ip_funcs, ptr %26, i32 0, i32 6
  %27 = ptrtoint ptr %hw_init to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw_init, align 4
  %call33 = tail call i32 %28(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end36, label %if.then35

if.then35:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.352, i32 noundef %i.0204, i32 noundef %call33) #17
  br label %init_failed

if.end36:                                         ; preds = %if.end28
  %29 = ptrtoint ptr %wb.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %wb.i, align 8
  %cmp.i = icmp eq ptr %30, null
  br i1 %cmp.i, label %if.then.i, label %if.end36.if.end40_crit_edge

if.end36.if.end40_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40

if.then.i:                                        ; preds = %if.end36
  %call.i170 = tail call i32 @amdgpu_bo_create_kernel(ptr noundef %adev, i32 noundef 8192, i32 noundef 4096, i32 noundef 2, ptr noundef %wb.i, ptr noundef %gpu_addr.i169, ptr noundef %wb5.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i170)
  %tobool.not.i = icmp eq i32 %call.i170, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then39

if.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %31 = ptrtoint ptr %num_wb.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 256, ptr %num_wb.i, align 8
  %32 = call ptr @memset(ptr %used.i, i32 0, i32 32)
  %33 = ptrtoint ptr %wb5.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %wb5.i, align 4
  %35 = call ptr @memset(ptr %34, i32 0, i32 8192)
  br label %if.end40

if.then39:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %36 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %37, ptr noundef nonnull @.str.357, i32 noundef %call.i170) #20
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.353, i32 noundef %call.i170) #17
  br label %init_failed

if.end40:                                         ; preds = %if.end.i, %if.end36.if.end40_crit_edge
  %hw = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 2
  %38 = ptrtoint ptr %hw to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 1, ptr %hw, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_mcbp to i32))
  %39 = load i32, ptr @amdgpu_mcbp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool44.not = icmp eq i32 %39, 0
  br i1 %tobool44.not, label %lor.lhs.false, label %if.end40.if.then49_crit_edge

if.end40.if.then49_crit_edge:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then49

lor.lhs.false:                                    ; preds = %if.end40
  %40 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %virt, align 8
  %and47 = and i32 %41, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  br i1 %tobool48.not, label %lor.lhs.false.for.inc_crit_edge, label %lor.lhs.false.if.then49_crit_edge

lor.lhs.false.if.then49_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then49

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then49:                                        ; preds = %lor.lhs.false.if.then49_crit_edge, %if.end40.if.then49_crit_edge
  %call51 = tail call i32 @amdgpu_allocate_static_csa(ptr noundef %adev, ptr noundef %csa_obj, i32 noundef 4, i32 noundef 131072) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %if.then49.for.inc_crit_edge, label %if.then53

if.then49.for.inc_crit_edge:                      ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then53:                                        ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.354, i32 noundef %call51) #17
  br label %init_failed

for.inc:                                          ; preds = %if.then49.for.inc_crit_edge, %lor.lhs.false.for.inc_crit_edge, %if.end13.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0204, 1
  %42 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %num_ip_blocks, align 8
  %cmp = icmp slt i32 %inc, %43
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %virt57 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %44 = ptrtoint ptr %virt57 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %virt57, align 8
  %and59 = and i32 %45, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %for.end.if.end62_crit_edge, label %if.then61

for.end.if.end62_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end62

if.then61:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_virt_init_data_exchange(ptr noundef %adev) #17
  br label %if.end62

if.end62:                                         ; preds = %if.then61, %for.end.if.end62_crit_edge
  %call63 = tail call i32 @amdgpu_ib_pool_init(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %if.end66, label %do.end

do.end:                                           ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #19
  %46 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %47, ptr noundef nonnull @.str.355, i32 noundef %call63) #20
  %conv = sext i32 %call63 to i64
  tail call void @amdgpu_vf_error_put(ptr noundef %adev, i16 noundef zeroext 6, i16 noundef zeroext 0, i64 noundef %conv) #17
  br label %init_failed

if.end66:                                         ; preds = %if.end62
  %call67 = tail call i32 @amdgpu_ucode_create_bo(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call67)
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %if.end70, label %if.end66.init_failed_crit_edge

if.end66.init_failed_crit_edge:                   ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #19
  br label %init_failed

if.end70:                                         ; preds = %if.end66
  %48 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %cmp61.i = icmp sgt i32 %49, 0
  br i1 %cmp61.i, label %if.end70.for.body.i_crit_edge, label %if.end70.if.end74_crit_edge

if.end70.if.end74_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end74

if.end70.for.body.i_crit_edge:                    ; preds = %if.end70
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end70.for.body.i_crit_edge
  %i.062.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end70.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.062.i
  %sw.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i, i32 0, i32 1
  %50 = ptrtoint ptr %sw.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %sw.i, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool.not.i171 = icmp eq i8 %51, 0
  br i1 %tobool.not.i171, label %for.body.i.for.inc.i_crit_edge, label %if.end.i172

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end.i172:                                      ; preds = %for.body.i
  %hw.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i, i32 0, i32 2
  %52 = ptrtoint ptr %hw.i to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %hw.i, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool4.not.i = icmp eq i8 %53, 0
  br i1 %tobool4.not.i, label %if.end6.i, label %if.end.i172.for.inc.i_crit_edge

if.end.i172.for.inc.i_crit_edge:                  ; preds = %if.end.i172
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end6.i:                                        ; preds = %if.end.i172
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.062.i, i32 1
  %54 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %version.i, align 4
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %cmp9.i = icmp eq i32 %57, 0
  br i1 %cmp9.i, label %if.end6.i.if.then22.i_crit_edge, label %lor.lhs.false.i

if.end6.i.if.then22.i_crit_edge:                  ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then22.i

lor.lhs.false.i:                                  ; preds = %if.end6.i
  %58 = ptrtoint ptr %virt57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %virt57, align 8
  %and.i = and i32 %59, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool10.not.i = icmp ne i32 %and.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %57)
  %cmp15.i = icmp eq i32 %57, 4
  %or.cond.i = select i1 %tobool10.not.i, i1 %cmp15.i, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %57)
  %cmp21.i = icmp eq i32 %57, 2
  %or.cond60.i = select i1 %or.cond.i, i1 true, i1 %cmp21.i
  br i1 %or.cond60.i, label %lor.lhs.false.i.if.then22.i_crit_edge, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

lor.lhs.false.i.if.then22.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then22.i

if.then22.i:                                      ; preds = %lor.lhs.false.i.if.then22.i_crit_edge, %if.end6.i.if.then22.i_crit_edge
  %funcs.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %55, i32 0, i32 4
  %60 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %funcs.i, align 4
  %hw_init.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %61, i32 0, i32 6
  %62 = ptrtoint ptr %hw_init.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %hw_init.i, align 4
  %call.i173 = tail call i32 %63(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i173)
  %tobool26.not.i = icmp eq i32 %call.i173, 0
  br i1 %tobool26.not.i, label %if.end32.i, label %amdgpu_device_ip_hw_init_phase1.exit

if.end32.i:                                       ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #19
  %64 = ptrtoint ptr %hw.i to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 1, ptr %hw.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end32.i, %lor.lhs.false.i.for.inc.i_crit_edge, %if.end.i172.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.062.i, 1
  %65 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %num_ip_blocks, align 8
  %cmp.i174 = icmp slt i32 %inc.i, %66
  br i1 %cmp.i174, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.if.end74_crit_edge

for.inc.i.if.end74_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end74

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

amdgpu_device_ip_hw_init_phase1.exit:             ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #19
  %67 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %version.i, align 4
  %funcs31.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %68, i32 0, i32 4
  %69 = ptrtoint ptr %funcs31.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %funcs31.i, align 4
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %70, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.359, ptr noundef %72, i32 noundef %call.i173) #17
  br label %init_failed

if.end74:                                         ; preds = %for.inc.i.if.end74_crit_edge, %if.end70.if.end74_crit_edge
  %call75 = tail call fastcc i32 @amdgpu_device_fw_loading(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call75)
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %if.end78, label %if.end74.init_failed_crit_edge

if.end74.init_failed_crit_edge:                   ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #19
  br label %init_failed

if.end78:                                         ; preds = %if.end74
  %call79 = tail call fastcc i32 @amdgpu_device_ip_hw_init_phase2(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %if.end82, label %if.end78.init_failed_crit_edge

if.end78.init_failed_crit_edge:                   ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #19
  br label %init_failed

if.end82:                                         ; preds = %if.end78
  %call83 = tail call i32 @amdgpu_ras_recovery_init(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83)
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %if.end86, label %if.end82.init_failed_crit_edge

if.end82.init_failed_crit_edge:                   ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #19
  br label %init_failed

if.end86:                                         ; preds = %if.end82
  %num_physical_nodes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 4
  %73 = ptrtoint ptr %num_physical_nodes to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %num_physical_nodes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %74)
  %cmp87 = icmp ugt i32 %74, 1
  br i1 %cmp87, label %if.then89, label %if.end86.if.end91_crit_edge

if.end86.if.end91_crit_edge:                      ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end91

if.then89:                                        ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #19
  %call90 = tail call i32 @amdgpu_xgmi_add_device(ptr noundef %adev) #17
  br label %if.end91

if.end91:                                         ; preds = %if.then89, %if.end86.if.end91_crit_edge
  %pending_reset = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 9
  %75 = ptrtoint ptr %pending_reset to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %pending_reset, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %76)
  %tobool94.not = icmp eq i8 %76, 0
  br i1 %tobool94.not, label %if.then95, label %if.end91.if.end96_crit_edge

if.end91.if.end96_crit_edge:                      ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end96

if.then95:                                        ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_amdkfd_device_init(ptr noundef %adev) #17
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91.if.end96_crit_edge
  %call97 = tail call i32 @amdgpu_fru_get_product_info(ptr noundef %adev) #17
  br label %init_failed

init_failed:                                      ; preds = %if.end96, %if.end82.init_failed_crit_edge, %if.end78.init_failed_crit_edge, %if.end74.init_failed_crit_edge, %amdgpu_device_ip_hw_init_phase1.exit, %if.end66.init_failed_crit_edge, %do.end, %if.then53, %if.then39, %if.then35, %if.then27, %if.then8
  %r.0 = phi i32 [ %call6, %if.then8 ], [ %call.i, %if.then27 ], [ %call33, %if.then35 ], [ %call.i170, %if.then39 ], [ %call51, %if.then53 ], [ %call63, %do.end ], [ %call67, %if.end66.init_failed_crit_edge ], [ %call.i173, %amdgpu_device_ip_hw_init_phase1.exit ], [ %call75, %if.end74.init_failed_crit_edge ], [ %call79, %if.end78.init_failed_crit_edge ], [ %call83, %if.end82.init_failed_crit_edge ], [ 0, %if.end96 ]
  %virt98 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %77 = ptrtoint ptr %virt98 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %virt98, align 8
  %and100 = and i32 %78, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and100)
  %tobool101.not = icmp eq i32 %and100, 0
  br i1 %tobool101.not, label %init_failed.cleanup_crit_edge, label %if.then102

init_failed.cleanup_crit_edge:                    ; preds = %init_failed
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then102:                                       ; preds = %init_failed
  call void @__sanitizer_cov_trace_pc() #19
  %call103 = tail call i32 @amdgpu_virt_release_full_gpu(ptr noundef %adev, i1 noundef zeroext true) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then102, %init_failed.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %r.0, %if.then102 ], [ %r.0, %init_failed.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_virt_mmio_blocked(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_virt_wait_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_fence_driver_hw_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_vm_check_compute_bug(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_pm_sysfs_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ucode_sysfs_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_test_moves(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_benchmark(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_register_gpu_instance(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @amdgpu_device_ip_late_init(ptr noundef %adev) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp148 = icmp sgt i32 %1, 0
  br i1 %cmp148, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.0149 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.0149
  %hw = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 2
  %2 = ptrtoint ptr %hw to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %hw, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %for.body
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.0149, i32 1
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %version, align 4
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %late_init = getelementptr inbounds %struct.amd_ip_funcs, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %late_init to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %late_init, align 4
  %tobool3.not = icmp eq ptr %9, null
  br i1 %tobool3.not, label %if.end.if.end17_crit_edge, label %if.then4

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.then4:                                         ; preds = %if.end
  %call = tail call i32 %9(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool10.not = icmp eq i32 %call, 0
  br i1 %tobool10.not, label %if.then4.if.end17_crit_edge, label %if.then11

if.then4.if.end17_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.then11:                                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #19
  %10 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %version, align 4
  %funcs15 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %funcs15 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %funcs15, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.360, ptr noundef %15, i32 noundef %call) #17
  br label %cleanup

if.end17:                                         ; preds = %if.then4.if.end17_crit_edge, %if.end.if.end17_crit_edge
  %late_initialized = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 3
  %16 = ptrtoint ptr %late_initialized to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %late_initialized, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end17, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0149, 1
  %17 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %num_ip_blocks, align 8
  %cmp = icmp slt i32 %inc, %18
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @amdgpu_ras_set_error_query_ready(ptr noundef %adev, i1 noundef zeroext true) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %19 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %19)
  %cmp.i = icmp eq i32 %19, 1
  br i1 %cmp.i, label %for.end.amdgpu_device_set_pg_state.exit_crit_edge, label %for.cond.preheader.i

for.end.amdgpu_device_set_pg_state.exit_crit_edge: ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_pg_state.exit

for.cond.preheader.i:                             ; preds = %for.end
  %20 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp185.i = icmp sgt i32 %21, 0
  br i1 %cmp185.i, label %for.body.lr.ph.i, label %for.cond.preheader.i.amdgpu_device_set_pg_state.exit_crit_edge

for.cond.preheader.i.amdgpu_device_set_pg_state.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_pg_state.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %in_s0ix.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 140
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %j.086.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %late_initialized.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %j.086.i, i32 0, i32 3
  %22 = ptrtoint ptr %late_initialized.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %late_initialized.i, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool.not.i = icmp eq i8 %23, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end6.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end6.i:                                        ; preds = %for.body.i
  %24 = ptrtoint ptr %in_s0ix.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %in_s0ix.i, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool7.not.i = icmp eq i8 %25, 0
  br i1 %tobool7.not.i, label %if.end6.i.if.end12.i_crit_edge, label %land.lhs.true.i

if.end6.i.if.end12.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i

land.lhs.true.i:                                  ; preds = %if.end6.i
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %j.086.i, i32 1
  %26 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %version.i, align 4
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %29)
  %cmp10.i = icmp eq i32 %29, 6
  br i1 %cmp10.i, label %land.lhs.true.i.for.inc.i_crit_edge, label %land.lhs.true.i.if.end12.i_crit_edge

land.lhs.true.i.if.end12.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end12.i:                                       ; preds = %land.lhs.true.i.if.end12.i_crit_edge, %if.end6.i.if.end12.i_crit_edge
  %version15.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %j.086.i, i32 1
  %30 = ptrtoint ptr %version15.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %version15.i, align 4
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %31, align 4
  %34 = zext i32 %33 to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.426)
  switch i32 %33, label %land.lhs.true36.i [
    i32 8, label %if.end12.i.for.inc.i_crit_edge
    i32 9, label %if.end12.i.for.inc.i_crit_edge153
    i32 11, label %if.end12.i.for.inc.i_crit_edge154
    i32 13, label %if.end12.i.for.inc.i_crit_edge155
  ]

if.end12.i.for.inc.i_crit_edge155:                ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end12.i.for.inc.i_crit_edge154:                ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end12.i.for.inc.i_crit_edge153:                ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end12.i.for.inc.i_crit_edge:                   ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

land.lhs.true36.i:                                ; preds = %if.end12.i
  %funcs.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %31, i32 0, i32 4
  %35 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %funcs.i, align 4
  %set_clockgating_state.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %36, i32 0, i32 17
  %37 = ptrtoint ptr %set_clockgating_state.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %set_clockgating_state.i, align 4
  %tobool40.not.i = icmp eq ptr %38, null
  br i1 %tobool40.not.i, label %land.lhs.true36.i.for.inc.i_crit_edge, label %if.then41.i

land.lhs.true36.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then41.i:                                      ; preds = %land.lhs.true36.i
  %call.i = tail call i32 %38(ptr noundef %adev, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool47.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool47.not.i, label %if.then41.i.for.inc.i_crit_edge, label %if.then48.i

if.then41.i.for.inc.i_crit_edge:                  ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then48.i:                                      ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #19
  %39 = ptrtoint ptr %version15.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %version15.i, align 4
  %funcs52.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %40, i32 0, i32 4
  %41 = ptrtoint ptr %funcs52.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %funcs52.i, align 4
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %42, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.49, ptr noundef %44, i32 noundef %call.i) #17
  br label %amdgpu_device_set_cg_state.exit

for.inc.i:                                        ; preds = %if.then41.i.for.inc.i_crit_edge, %land.lhs.true36.i.for.inc.i_crit_edge, %if.end12.i.for.inc.i_crit_edge, %if.end12.i.for.inc.i_crit_edge153, %if.end12.i.for.inc.i_crit_edge154, %if.end12.i.for.inc.i_crit_edge155, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %j.086.i, 1
  %45 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %num_ip_blocks, align 8
  %cmp1.i = icmp sgt i32 %46, %inc.i
  br i1 %cmp1.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.amdgpu_device_set_cg_state.exit_crit_edge

for.inc.i.amdgpu_device_set_cg_state.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

amdgpu_device_set_cg_state.exit:                  ; preds = %for.inc.i.amdgpu_device_set_cg_state.exit_crit_edge, %if.then48.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %.pr = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr)
  %cmp.i100 = icmp eq i32 %.pr, 1
  br i1 %cmp.i100, label %amdgpu_device_set_cg_state.exit.amdgpu_device_set_pg_state.exit_crit_edge, label %for.cond.preheader.i103

amdgpu_device_set_cg_state.exit.amdgpu_device_set_pg_state.exit_crit_edge: ; preds = %amdgpu_device_set_cg_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_pg_state.exit

for.cond.preheader.i103:                          ; preds = %amdgpu_device_set_cg_state.exit
  %47 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %47)
  %.pr142 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr142)
  %cmp185.i102 = icmp sgt i32 %.pr142, 0
  br i1 %cmp185.i102, label %for.cond.preheader.i103.for.body.i110_crit_edge, label %for.cond.preheader.i103.amdgpu_device_set_pg_state.exit_crit_edge

for.cond.preheader.i103.amdgpu_device_set_pg_state.exit_crit_edge: ; preds = %for.cond.preheader.i103
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_pg_state.exit

for.cond.preheader.i103.for.body.i110_crit_edge:  ; preds = %for.cond.preheader.i103
  br label %for.body.i110

for.body.i110:                                    ; preds = %for.inc.i128.for.body.i110_crit_edge, %for.cond.preheader.i103.for.body.i110_crit_edge
  %j.086.i106 = phi i32 [ %inc.i126, %for.inc.i128.for.body.i110_crit_edge ], [ 0, %for.cond.preheader.i103.for.body.i110_crit_edge ]
  %late_initialized.i108 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %j.086.i106, i32 0, i32 3
  %48 = ptrtoint ptr %late_initialized.i108 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %late_initialized.i108, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool.not.i109 = icmp eq i8 %49, 0
  br i1 %tobool.not.i109, label %for.body.i110.for.inc.i128_crit_edge, label %if.end6.i112

for.body.i110.for.inc.i128_crit_edge:             ; preds = %for.body.i110
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i128

if.end6.i112:                                     ; preds = %for.body.i110
  %50 = ptrtoint ptr %in_s0ix.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %in_s0ix.i, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool7.not.i111 = icmp eq i8 %51, 0
  br i1 %tobool7.not.i111, label %if.end6.i112.if.end12.i117_crit_edge, label %land.lhs.true.i115

if.end6.i112.if.end12.i117_crit_edge:             ; preds = %if.end6.i112
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i117

land.lhs.true.i115:                               ; preds = %if.end6.i112
  %version.i113 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %j.086.i106, i32 1
  %52 = ptrtoint ptr %version.i113 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %version.i113, align 4
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %53, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %55)
  %cmp10.i114 = icmp eq i32 %55, 6
  br i1 %cmp10.i114, label %land.lhs.true.i115.for.inc.i128_crit_edge, label %land.lhs.true.i115.if.end12.i117_crit_edge

land.lhs.true.i115.if.end12.i117_crit_edge:       ; preds = %land.lhs.true.i115
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i117

land.lhs.true.i115.for.inc.i128_crit_edge:        ; preds = %land.lhs.true.i115
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i128

if.end12.i117:                                    ; preds = %land.lhs.true.i115.if.end12.i117_crit_edge, %if.end6.i112.if.end12.i117_crit_edge
  %version15.i116 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %j.086.i106, i32 1
  %56 = ptrtoint ptr %version15.i116 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %version15.i116, align 4
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %57, align 4
  %60 = zext i32 %59 to i64
  call void @__sanitizer_cov_trace_switch(i64 %60, ptr @__sancov_gen_cov_switch_values.427)
  switch i32 %59, label %land.lhs.true36.i120 [
    i32 8, label %if.end12.i117.for.inc.i128_crit_edge
    i32 9, label %if.end12.i117.for.inc.i128_crit_edge156
    i32 11, label %if.end12.i117.for.inc.i128_crit_edge157
    i32 13, label %if.end12.i117.for.inc.i128_crit_edge158
  ]

if.end12.i117.for.inc.i128_crit_edge158:          ; preds = %if.end12.i117
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i128

if.end12.i117.for.inc.i128_crit_edge157:          ; preds = %if.end12.i117
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i128

if.end12.i117.for.inc.i128_crit_edge156:          ; preds = %if.end12.i117
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i128

if.end12.i117.for.inc.i128_crit_edge:             ; preds = %if.end12.i117
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i128

land.lhs.true36.i120:                             ; preds = %if.end12.i117
  %funcs.i118 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %57, i32 0, i32 4
  %61 = ptrtoint ptr %funcs.i118 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %funcs.i118, align 4
  %set_powergating_state.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %62, i32 0, i32 18
  %63 = ptrtoint ptr %set_powergating_state.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %set_powergating_state.i, align 4
  %tobool40.not.i119 = icmp eq ptr %64, null
  br i1 %tobool40.not.i119, label %land.lhs.true36.i120.for.inc.i128_crit_edge, label %if.then41.i123

land.lhs.true36.i120.for.inc.i128_crit_edge:      ; preds = %land.lhs.true36.i120
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i128

if.then41.i123:                                   ; preds = %land.lhs.true36.i120
  %call.i121 = tail call i32 %64(ptr noundef %adev, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i121)
  %tobool47.not.i122 = icmp eq i32 %call.i121, 0
  br i1 %tobool47.not.i122, label %if.then41.i123.for.inc.i128_crit_edge, label %if.then48.i125

if.then41.i123.for.inc.i128_crit_edge:            ; preds = %if.then41.i123
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i128

if.then48.i125:                                   ; preds = %if.then41.i123
  call void @__sanitizer_cov_trace_pc() #19
  %65 = ptrtoint ptr %version15.i116 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %version15.i116, align 4
  %funcs52.i124 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %66, i32 0, i32 4
  %67 = ptrtoint ptr %funcs52.i124 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %funcs52.i124, align 4
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %68, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.50, ptr noundef %70, i32 noundef %call.i121) #17
  br label %amdgpu_device_set_pg_state.exit

for.inc.i128:                                     ; preds = %if.then41.i123.for.inc.i128_crit_edge, %land.lhs.true36.i120.for.inc.i128_crit_edge, %if.end12.i117.for.inc.i128_crit_edge, %if.end12.i117.for.inc.i128_crit_edge156, %if.end12.i117.for.inc.i128_crit_edge157, %if.end12.i117.for.inc.i128_crit_edge158, %land.lhs.true.i115.for.inc.i128_crit_edge, %for.body.i110.for.inc.i128_crit_edge
  %inc.i126 = add nuw nsw i32 %j.086.i106, 1
  %71 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %num_ip_blocks, align 8
  %cmp1.i127 = icmp sgt i32 %72, %inc.i126
  br i1 %cmp1.i127, label %for.inc.i128.for.body.i110_crit_edge, label %for.inc.i128.amdgpu_device_set_pg_state.exit_crit_edge

for.inc.i128.amdgpu_device_set_pg_state.exit_crit_edge: ; preds = %for.inc.i128
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_pg_state.exit

for.inc.i128.for.body.i110_crit_edge:             ; preds = %for.inc.i128
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i110

amdgpu_device_set_pg_state.exit:                  ; preds = %for.inc.i128.amdgpu_device_set_pg_state.exit_crit_edge, %if.then48.i125, %for.cond.preheader.i103.amdgpu_device_set_pg_state.exit_crit_edge, %amdgpu_device_set_cg_state.exit.amdgpu_device_set_pg_state.exit_crit_edge, %for.cond.preheader.i.amdgpu_device_set_pg_state.exit_crit_edge, %for.end.amdgpu_device_set_pg_state.exit_crit_edge
  %reset_magic.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 136
  %ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 63, i32 1
  %73 = ptrtoint ptr %ptr.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %ptr.i, align 4
  %75 = call ptr @memcpy(ptr %reset_magic.i, ptr %74, i32 64)
  tail call void @mutex_lock_nested(ptr noundef getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 1), i32 noundef 0) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 3) to i32))
  %76 = load i32, ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 3), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %76)
  %cmp.i130 = icmp ult i32 %76, 2
  br i1 %cmp.i130, label %amdgpu_device_set_pg_state.exit.amdgpu_device_enable_mgpu_fan_boost.exit.thread_crit_edge, label %amdgpu_device_set_pg_state.exit.for.body.i133_crit_edge

amdgpu_device_set_pg_state.exit.for.body.i133_crit_edge: ; preds = %amdgpu_device_set_pg_state.exit
  br label %for.body.i133

amdgpu_device_set_pg_state.exit.amdgpu_device_enable_mgpu_fan_boost.exit.thread_crit_edge: ; preds = %amdgpu_device_set_pg_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_enable_mgpu_fan_boost.exit.thread

for.body.i133:                                    ; preds = %for.inc.i138.for.body.i133_crit_edge, %amdgpu_device_set_pg_state.exit.for.body.i133_crit_edge
  %i.017.i = phi i32 [ %inc.i136, %for.inc.i138.for.body.i133_crit_edge ], [ 0, %amdgpu_device_set_pg_state.exit.for.body.i133_crit_edge ]
  %arrayidx.i = getelementptr [16 x %struct.amdgpu_gpu_instance], ptr @mgpu_info, i32 0, i32 %i.017.i
  %77 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %arrayidx.i, align 4
  %flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %78, i32 0, i32 9
  %79 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %flags.i, align 8
  %and.i = and i32 %80, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i132 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i132, label %land.lhs.true.i134, label %for.body.i133.for.inc.i138_crit_edge

for.body.i133.for.inc.i138_crit_edge:             ; preds = %for.body.i133
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i138

land.lhs.true.i134:                               ; preds = %for.body.i133
  %mgpu_fan_enabled.i = getelementptr [16 x %struct.amdgpu_gpu_instance], ptr @mgpu_info, i32 0, i32 %i.017.i, i32 1
  %81 = ptrtoint ptr %mgpu_fan_enabled.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %mgpu_fan_enabled.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %82)
  %tobool3.not.i = icmp eq i32 %82, 0
  br i1 %tobool3.not.i, label %if.then4.i, label %land.lhs.true.i134.for.inc.i138_crit_edge

land.lhs.true.i134.for.inc.i138_crit_edge:        ; preds = %land.lhs.true.i134
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i138

if.then4.i:                                       ; preds = %land.lhs.true.i134
  %call.i135 = tail call i32 @amdgpu_dpm_enable_mgpu_fan_boost(ptr noundef %78) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i135)
  %tobool5.not.i = icmp eq i32 %call.i135, 0
  br i1 %tobool5.not.i, label %if.end7.i, label %if.then25

if.end7.i:                                        ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #19
  %83 = ptrtoint ptr %mgpu_fan_enabled.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 1, ptr %mgpu_fan_enabled.i, align 4
  br label %for.inc.i138

for.inc.i138:                                     ; preds = %if.end7.i, %land.lhs.true.i134.for.inc.i138_crit_edge, %for.body.i133.for.inc.i138_crit_edge
  %inc.i136 = add nuw i32 %i.017.i, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 3) to i32))
  %84 = load i32, ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 3), align 4
  %cmp1.i137 = icmp ult i32 %inc.i136, %84
  br i1 %cmp1.i137, label %for.inc.i138.for.body.i133_crit_edge, label %for.inc.i138.amdgpu_device_enable_mgpu_fan_boost.exit.thread_crit_edge

for.inc.i138.amdgpu_device_enable_mgpu_fan_boost.exit.thread_crit_edge: ; preds = %for.inc.i138
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_enable_mgpu_fan_boost.exit.thread

for.inc.i138.for.body.i133_crit_edge:             ; preds = %for.inc.i138
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i133

amdgpu_device_enable_mgpu_fan_boost.exit.thread:  ; preds = %for.inc.i138.amdgpu_device_enable_mgpu_fan_boost.exit.thread_crit_edge, %amdgpu_device_set_pg_state.exit.amdgpu_device_enable_mgpu_fan_boost.exit.thread_crit_edge
  tail call void @mutex_unlock(ptr noundef getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 1)) #17
  br label %if.end26

if.then25:                                        ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mutex_unlock(ptr noundef getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 1)) #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.361, i32 noundef %call.i135) #17
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %amdgpu_device_enable_mgpu_fan_boost.exit.thread
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %85 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %virt, align 8
  %and = and i32 %86, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool27.not = icmp eq i32 %and, 0
  br i1 %tobool27.not, label %if.end26.if.end35_crit_edge, label %land.lhs.true

if.end26.if.end35_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end35

land.lhs.true:                                    ; preds = %if.end26
  %asic_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %87 = ptrtoint ptr %asic_type to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %asic_type, align 8
  %89 = zext i32 %88 to i64
  call void @__sanitizer_cov_trace_switch(i64 %89, ptr @__sancov_gen_cov_switch_values.428)
  switch i32 %88, label %land.lhs.true.if.end35_crit_edge [
    i32 23, label %land.lhs.true29
    i32 25, label %land.lhs.true.if.then33_crit_edge
  ]

land.lhs.true.if.then33_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then33

land.lhs.true.if.end35_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end35

land.lhs.true29:                                  ; preds = %land.lhs.true
  %num_physical_nodes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 4
  %90 = ptrtoint ptr %num_physical_nodes to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %num_physical_nodes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %91)
  %cmp30 = icmp ugt i32 %91, 1
  br i1 %cmp30, label %land.lhs.true29.if.then33_crit_edge, label %land.lhs.true29.if.end35_crit_edge

land.lhs.true29.if.end35_crit_edge:               ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end35

land.lhs.true29.if.then33_crit_edge:              ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then33

if.then33:                                        ; preds = %land.lhs.true29.if.then33_crit_edge, %land.lhs.true.if.then33_crit_edge
  %smu = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 97
  %call34 = tail call i32 @smu_handle_passthrough_sbr(ptr noundef %smu, i1 noundef zeroext true) #17
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %land.lhs.true29.if.end35_crit_edge, %land.lhs.true.if.end35_crit_edge, %if.end26.if.end35_crit_edge
  %num_physical_nodes38 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 4
  %92 = ptrtoint ptr %num_physical_nodes38 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %num_physical_nodes38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %93)
  %cmp39 = icmp ugt i32 %93, 1
  br i1 %cmp39, label %if.then40, label %if.end35.cleanup_crit_edge

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then40:                                        ; preds = %if.end35
  tail call void @mutex_lock_nested(ptr noundef getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 1), i32 noundef 0) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 3) to i32))
  %94 = load i32, ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 3), align 4
  %95 = ptrtoint ptr %num_physical_nodes38 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %num_physical_nodes38, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %94, i32 %96)
  %cmp44 = icmp eq i32 %94, %96
  br i1 %cmp44, label %for.cond46.preheader, label %if.then40.if.end63_crit_edge

if.then40.if.end63_crit_edge:                     ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end63

for.cond46.preheader:                             ; preds = %if.then40
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 2) to i32))
  %97 = load i32, ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %97)
  %cmp47151.not = icmp eq i32 %97, 0
  br i1 %cmp47151.not, label %for.cond46.preheader.if.end63_crit_edge, label %for.cond46.preheader.for.body48_crit_edge

for.cond46.preheader.for.body48_crit_edge:        ; preds = %for.cond46.preheader
  br label %for.body48

for.cond46.preheader.if.end63_crit_edge:          ; preds = %for.cond46.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end63

for.body48:                                       ; preds = %for.inc60.for.body48_crit_edge, %for.cond46.preheader.for.body48_crit_edge
  %i.1152 = phi i32 [ %inc61, %for.inc60.for.body48_crit_edge ], [ 0, %for.cond46.preheader.for.body48_crit_edge ]
  %arrayidx49 = getelementptr [16 x %struct.amdgpu_gpu_instance], ptr @mgpu_info, i32 0, i32 %i.1152
  %98 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %arrayidx49, align 4
  %flags = getelementptr inbounds %struct.amdgpu_device, ptr %99, i32 0, i32 9
  %100 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %flags, align 8
  %and51 = and i32 %101, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and51)
  %tobool52.not = icmp eq i32 %and51, 0
  br i1 %tobool52.not, label %if.end54, label %for.body48.for.inc60_crit_edge

for.body48.for.inc60_crit_edge:                   ; preds = %for.body48
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc60

if.end54:                                         ; preds = %for.body48
  %call56 = tail call i32 @amdgpu_xgmi_set_pstate(ptr noundef %99, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call56)
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %if.end54.for.inc60_crit_edge, label %if.then58

if.end54.for.inc60_crit_edge:                     ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc60

if.then58:                                        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.362, i32 noundef %call56) #17
  br label %if.end63

for.inc60:                                        ; preds = %if.end54.for.inc60_crit_edge, %for.body48.for.inc60_crit_edge
  %inc61 = add nuw i32 %i.1152, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 2) to i32))
  %102 = load i32, ptr getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 2), align 4
  %cmp47 = icmp ult i32 %inc61, %102
  br i1 %cmp47, label %for.inc60.for.body48_crit_edge, label %for.inc60.if.end63_crit_edge

for.inc60.if.end63_crit_edge:                     ; preds = %for.inc60
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end63

for.inc60.for.body48_crit_edge:                   ; preds = %for.inc60
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body48

if.end63:                                         ; preds = %for.inc60.if.end63_crit_edge, %if.then58, %for.cond46.preheader.if.end63_crit_edge, %if.then40.if.end63_crit_edge
  tail call void @mutex_unlock(ptr noundef getelementptr inbounds (%struct.amdgpu_mgpu_info, ptr @mgpu_info, i32 0, i32 1)) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end63, %if.end35.cleanup_crit_edge, %if.then11
  %retval.0 = phi i32 [ %call, %if.then11 ], [ 0, %if.end63 ], [ 0, %if.end35.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ras_resume(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_delayed_work(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_files(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_pmu_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_cache_pci_state(ptr noundef %pdev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %call2 = tail call i32 @pci_save_state(ptr noundef %pdev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %pci_state = getelementptr i8, ptr %1, i32 91664
  %2 = ptrtoint ptr %pci_state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pci_state, align 8
  tail call void @kfree(ptr noundef %3) #17
  %call3 = tail call ptr @pci_store_saved_state(ptr noundef %pdev) #17
  %4 = ptrtoint ptr %pci_state to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call3, ptr %pci_state, align 8
  %tobool6.not = icmp eq ptr %call3, null
  br i1 %tobool6.not, label %if.then7, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then7:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.264) #17
  br label %cleanup

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.265, i32 noundef %call2) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then7, %if.then.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %do.end ], [ false, %if.then7 ], [ true, %if.then.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_state(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vga_client_register(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @amdgpu_device_vga_set_decode(ptr nocapture noundef readonly %pdev, i1 noundef zeroext %state) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -8
  %asic_funcs = getelementptr i8, ptr %1, i32 2388
  %2 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %asic_funcs, align 4
  %set_vga_state = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %set_vga_state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %set_vga_state, align 4
  tail call void %5(ptr noundef %add.ptr.i, i1 noundef zeroext %state) #17
  %. = select i1 %state, i32 15, i32 12
  ret i32 %.
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_release_ras_context(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_vf_error_trans_all(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_fini_hw(ptr noundef %adev) local_unnamed_addr #2 align 64 {
entry:
  %idx.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %1, ptr noundef nonnull @.str.175) #20
  %delayed_init_work = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 131
  %call = tail call zeroext i1 @flush_delayed_work(ptr noundef %delayed_init_work) #17
  %mman = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 68
  %initialized = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 68, i32 1
  %2 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %initialized, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %wq = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 68, i32 0, i32 10
  %call2 = tail call zeroext i1 @flush_delayed_work(ptr noundef %wq) #17
  %call5 = tail call i32 @ttm_bo_lock_delayed_workqueue(ptr noundef %mman) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %shutdown = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 13
  %4 = ptrtoint ptr %shutdown to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %shutdown, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %5 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %virt, align 8
  %and = and i32 %6, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp eq i32 %and, 0
  br i1 %tobool6.not, label %if.end.if.end9_crit_edge, label %if.then7

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end9

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %call8 = tail call i32 @amdgpu_virt_request_full_gpu(ptr noundef %adev, i1 noundef zeroext false) #17
  tail call void @amdgpu_virt_fini_data_exchange(ptr noundef %adev) #17
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end.if.end9_crit_edge
  tail call void @amdgpu_irq_disable_all(ptr noundef %adev) #17
  %mode_config_initialized = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 79, i32 2
  %7 = ptrtoint ptr %mode_config_initialized to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %mode_config_initialized, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool10.not = icmp eq i8 %8, 0
  br i1 %tobool10.not, label %if.end9.if.end19_crit_edge, label %if.then11

if.end9.if.end19_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19

if.then11:                                        ; preds = %if.end9
  %ddev.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2
  %driver.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2, i32 4
  %9 = ptrtoint ptr %driver.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %driver.i.i.i, align 4
  %driver_features.i.i.i = getelementptr inbounds %struct.drm_driver, ptr %10, i32 0, i32 24
  %11 = ptrtoint ptr %driver_features.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %driver_features.i.i.i, align 4
  %driver_features1.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2, i32 10
  %13 = ptrtoint ptr %driver_features1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %driver_features1.i.i.i, align 4
  %and.i.i.i = and i32 %12, 16
  %and2.i.i.i = and i32 %and.i.i.i, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i.i)
  %cmp.i.i.not.i = icmp eq i32 %and2.i.i.i, 0
  br i1 %cmp.i.i.not.i, label %lor.rhs.i, label %if.then11.if.else_crit_edge

if.then11.if.else_crit_edge:                      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

lor.rhs.i:                                        ; preds = %if.then11
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2, i32 30, i32 27
  %15 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %funcs.i, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %lor.rhs.i.if.then14_crit_edge, label %drm_drv_uses_atomic_modeset.exit

lor.rhs.i.if.then14_crit_edge:                    ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then14

drm_drv_uses_atomic_modeset.exit:                 ; preds = %lor.rhs.i
  %atomic_commit.i = getelementptr inbounds %struct.drm_mode_config_funcs, ptr %16, i32 0, i32 5
  %17 = ptrtoint ptr %atomic_commit.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %atomic_commit.i, align 4
  %cmp.i.not = icmp eq ptr %18, null
  br i1 %cmp.i.not, label %drm_drv_uses_atomic_modeset.exit.if.then14_crit_edge, label %drm_drv_uses_atomic_modeset.exit.if.else_crit_edge

drm_drv_uses_atomic_modeset.exit.if.else_crit_edge: ; preds = %drm_drv_uses_atomic_modeset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

drm_drv_uses_atomic_modeset.exit.if.then14_crit_edge: ; preds = %drm_drv_uses_atomic_modeset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then14

if.then14:                                        ; preds = %drm_drv_uses_atomic_modeset.exit.if.then14_crit_edge, %lor.rhs.i.if.then14_crit_edge
  %call16 = tail call i32 @drm_helper_force_disable_all(ptr noundef %ddev.i) #17
  br label %if.end19

if.else:                                          ; preds = %drm_drv_uses_atomic_modeset.exit.if.else_crit_edge, %if.then11.if.else_crit_edge
  tail call void @drm_atomic_helper_shutdown(ptr noundef %ddev.i) #17
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then14, %if.end9.if.end19_crit_edge
  tail call void @amdgpu_fence_driver_hw_fini(ptr noundef %adev) #17
  %pm_sysfs_en = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 159
  %19 = ptrtoint ptr %pm_sysfs_en to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %pm_sysfs_en, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool20.not = icmp eq i8 %20, 0
  br i1 %tobool20.not, label %if.end19.if.end22_crit_edge, label %if.then21

if.end19.if.end22_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end22

if.then21:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_pm_sysfs_fini(ptr noundef %adev) #17
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.end19.if.end22_crit_edge
  %ucode_sysfs_en = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 160
  %21 = ptrtoint ptr %ucode_sysfs_en to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %ucode_sysfs_en, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool23.not = icmp eq i8 %22, 0
  br i1 %tobool23.not, label %if.end22.if.end25_crit_edge, label %if.then24

if.end22.if.end25_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end25

if.then24:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_ucode_sysfs_fini(ptr noundef %adev) #17
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end22.if.end25_crit_edge
  %23 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %adev, align 8
  tail call void @sysfs_remove_files(ptr noundef %24, ptr noundef nonnull @amdgpu_dev_attributes) #17
  %call27 = tail call i32 @amdgpu_ras_pre_fini(ptr noundef %adev) #17
  %num_ip_blocks.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %25 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp47.i = icmp sgt i32 %26, 0
  br i1 %cmp47.i, label %if.end25.for.body.i_crit_edge, label %if.end25.for.end.i_crit_edge

if.end25.for.end.i_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

if.end25.for.body.i_crit_edge:                    ; preds = %if.end25
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end25.for.body.i_crit_edge
  %i.048.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end25.for.body.i_crit_edge ]
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.048.i, i32 1
  %27 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %version.i, align 4
  %funcs.i69 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %28, i32 0, i32 4
  %29 = ptrtoint ptr %funcs.i69 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %funcs.i69, align 4
  %early_fini.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %30, i32 0, i32 5
  %31 = ptrtoint ptr %early_fini.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %early_fini.i, align 4
  %tobool.not.i70 = icmp eq ptr %32, null
  br i1 %tobool.not.i70, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %call.i = tail call i32 %32(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end.i.for.inc.i_crit_edge, label %if.then7.i

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %33 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %version.i, align 4
  %funcs11.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %funcs11.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %funcs11.i, align 4
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %36, align 4
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.377, ptr noundef %38, i32 noundef %call.i) #17
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then7.i, %if.end.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.048.i, 1
  %39 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i71 = icmp slt i32 %inc.i, %40
  br i1 %cmp.i71, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end25.for.end.i_crit_edge
  tail call void @amdgpu_amdkfd_suspend(ptr noundef %adev, i1 noundef zeroext false) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %41 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %41)
  %cmp.i.i = icmp eq i32 %41, 1
  br i1 %cmp.i.i, label %for.end.i.amdgpu_device_set_cg_state.exit.i_crit_edge, label %for.cond.preheader.i.i

for.end.i.amdgpu_device_set_cg_state.exit.i_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit.i

for.cond.preheader.i.i:                           ; preds = %for.end.i
  %42 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %cmp185.i.i = icmp sgt i32 %43, 0
  br i1 %cmp185.i.i, label %for.body.lr.ph.i.i, label %for.cond.preheader.i.i.amdgpu_device_set_cg_state.exit.i_crit_edge

for.cond.preheader.i.i.amdgpu_device_set_cg_state.exit.i_crit_edge: ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit.i

for.body.lr.ph.i.i:                               ; preds = %for.cond.preheader.i.i
  %in_s0ix.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 140
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %44 = phi i32 [ %43, %for.body.lr.ph.i.i ], [ %70, %for.inc.i.i.for.body.i.i_crit_edge ]
  %j.086.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %45 = xor i32 %j.086.i.i, -1
  %sub4.i.i = add i32 %44, %45
  %late_initialized.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i.i, i32 0, i32 3
  %46 = ptrtoint ptr %late_initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %late_initialized.i.i, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool.not.i.i = icmp eq i8 %47, 0
  br i1 %tobool.not.i.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %if.end6.i.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.end6.i.i:                                      ; preds = %for.body.i.i
  %48 = ptrtoint ptr %in_s0ix.i.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %in_s0ix.i.i, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool7.not.i.i = icmp eq i8 %49, 0
  br i1 %tobool7.not.i.i, label %if.end6.i.i.if.end12.i.i_crit_edge, label %land.lhs.true.i.i

if.end6.i.i.if.end12.i.i_crit_edge:               ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i.i

land.lhs.true.i.i:                                ; preds = %if.end6.i.i
  %version.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i.i, i32 1
  %50 = ptrtoint ptr %version.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %version.i.i, align 4
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %51, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %53)
  %cmp10.i.i = icmp eq i32 %53, 6
  br i1 %cmp10.i.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge, label %land.lhs.true.i.i.if.end12.i.i_crit_edge

land.lhs.true.i.i.if.end12.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i.i

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i.if.end12.i.i_crit_edge, %if.end6.i.i.if.end12.i.i_crit_edge
  %version15.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i.i, i32 1
  %54 = ptrtoint ptr %version15.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %version15.i.i, align 4
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  %58 = zext i32 %57 to i64
  call void @__sanitizer_cov_trace_switch(i64 %58, ptr @__sancov_gen_cov_switch_values.429)
  switch i32 %57, label %land.lhs.true36.i.i [
    i32 8, label %if.end12.i.i.for.inc.i.i_crit_edge
    i32 9, label %if.end12.i.i.for.inc.i.i_crit_edge84
    i32 11, label %if.end12.i.i.for.inc.i.i_crit_edge85
    i32 13, label %if.end12.i.i.for.inc.i.i_crit_edge86
  ]

if.end12.i.i.for.inc.i.i_crit_edge86:             ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.end12.i.i.for.inc.i.i_crit_edge85:             ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.end12.i.i.for.inc.i.i_crit_edge84:             ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.end12.i.i.for.inc.i.i_crit_edge:               ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

land.lhs.true36.i.i:                              ; preds = %if.end12.i.i
  %funcs.i.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %55, i32 0, i32 4
  %59 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %funcs.i.i, align 4
  %set_powergating_state.i.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %60, i32 0, i32 18
  %61 = ptrtoint ptr %set_powergating_state.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %set_powergating_state.i.i, align 4
  %tobool40.not.i.i = icmp eq ptr %62, null
  br i1 %tobool40.not.i.i, label %land.lhs.true36.i.i.for.inc.i.i_crit_edge, label %if.then41.i.i

land.lhs.true36.i.i.for.inc.i.i_crit_edge:        ; preds = %land.lhs.true36.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.then41.i.i:                                    ; preds = %land.lhs.true36.i.i
  %call.i.i = tail call i32 %62(ptr noundef %adev, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool47.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool47.not.i.i, label %if.then41.i.i.for.inc.i.i_crit_edge, label %if.then48.i.i

if.then41.i.i.for.inc.i.i_crit_edge:              ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.then48.i.i:                                    ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %63 = ptrtoint ptr %version15.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %version15.i.i, align 4
  %funcs52.i.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %64, i32 0, i32 4
  %65 = ptrtoint ptr %funcs52.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %funcs52.i.i, align 4
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %66, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.50, ptr noundef %68, i32 noundef %call.i.i) #17
  br label %amdgpu_device_set_pg_state.exit.i

for.inc.i.i:                                      ; preds = %if.then41.i.i.for.inc.i.i_crit_edge, %land.lhs.true36.i.i.for.inc.i.i_crit_edge, %if.end12.i.i.for.inc.i.i_crit_edge, %if.end12.i.i.for.inc.i.i_crit_edge84, %if.end12.i.i.for.inc.i.i_crit_edge85, %if.end12.i.i.for.inc.i.i_crit_edge86, %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %j.086.i.i, 1
  %69 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp1.i.i = icmp sgt i32 %70, %inc.i.i
  br i1 %cmp1.i.i, label %for.inc.i.i.for.body.i.i_crit_edge, label %for.inc.i.i.amdgpu_device_set_pg_state.exit.i_crit_edge

for.inc.i.i.amdgpu_device_set_pg_state.exit.i_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_pg_state.exit.i

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i

amdgpu_device_set_pg_state.exit.i:                ; preds = %for.inc.i.i.amdgpu_device_set_pg_state.exit.i_crit_edge, %if.then48.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %.pr.i = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr.i)
  %cmp.i1.i = icmp eq i32 %.pr.i, 1
  br i1 %cmp.i1.i, label %amdgpu_device_set_pg_state.exit.i.amdgpu_device_set_cg_state.exit.i_crit_edge, label %for.cond.preheader.i4.i

amdgpu_device_set_pg_state.exit.i.amdgpu_device_set_cg_state.exit.i_crit_edge: ; preds = %amdgpu_device_set_pg_state.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit.i

for.cond.preheader.i4.i:                          ; preds = %amdgpu_device_set_pg_state.exit.i
  %71 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %.pr44.i = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr44.i)
  %cmp185.i3.i = icmp sgt i32 %.pr44.i, 0
  br i1 %cmp185.i3.i, label %for.cond.preheader.i4.i.for.body.i11.i_crit_edge, label %for.cond.preheader.i4.i.amdgpu_device_set_cg_state.exit.i_crit_edge

for.cond.preheader.i4.i.amdgpu_device_set_cg_state.exit.i_crit_edge: ; preds = %for.cond.preheader.i4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit.i

for.cond.preheader.i4.i.for.body.i11.i_crit_edge: ; preds = %for.cond.preheader.i4.i
  br label %for.body.i11.i

for.body.i11.i:                                   ; preds = %for.inc.i29.i.for.body.i11.i_crit_edge, %for.cond.preheader.i4.i.for.body.i11.i_crit_edge
  %72 = phi i32 [ %98, %for.inc.i29.i.for.body.i11.i_crit_edge ], [ %.pr44.i, %for.cond.preheader.i4.i.for.body.i11.i_crit_edge ]
  %j.086.i7.i = phi i32 [ %inc.i27.i, %for.inc.i29.i.for.body.i11.i_crit_edge ], [ 0, %for.cond.preheader.i4.i.for.body.i11.i_crit_edge ]
  %73 = xor i32 %j.086.i7.i, -1
  %sub4.i8.i = add i32 %72, %73
  %late_initialized.i9.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i8.i, i32 0, i32 3
  %74 = ptrtoint ptr %late_initialized.i9.i to i32
  call void @__asan_load1_noabort(i32 %74)
  %75 = load i8, ptr %late_initialized.i9.i, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %75)
  %tobool.not.i10.i = icmp eq i8 %75, 0
  br i1 %tobool.not.i10.i, label %for.body.i11.i.for.inc.i29.i_crit_edge, label %if.end6.i13.i

for.body.i11.i.for.inc.i29.i_crit_edge:           ; preds = %for.body.i11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i29.i

if.end6.i13.i:                                    ; preds = %for.body.i11.i
  %76 = ptrtoint ptr %in_s0ix.i.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %in_s0ix.i.i, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool7.not.i12.i = icmp eq i8 %77, 0
  br i1 %tobool7.not.i12.i, label %if.end6.i13.i.if.end12.i18.i_crit_edge, label %land.lhs.true.i16.i

if.end6.i13.i.if.end12.i18.i_crit_edge:           ; preds = %if.end6.i13.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i18.i

land.lhs.true.i16.i:                              ; preds = %if.end6.i13.i
  %version.i14.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i8.i, i32 1
  %78 = ptrtoint ptr %version.i14.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %version.i14.i, align 4
  %80 = ptrtoint ptr %79 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %79, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %81)
  %cmp10.i15.i = icmp eq i32 %81, 6
  br i1 %cmp10.i15.i, label %land.lhs.true.i16.i.for.inc.i29.i_crit_edge, label %land.lhs.true.i16.i.if.end12.i18.i_crit_edge

land.lhs.true.i16.i.if.end12.i18.i_crit_edge:     ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i18.i

land.lhs.true.i16.i.for.inc.i29.i_crit_edge:      ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i29.i

if.end12.i18.i:                                   ; preds = %land.lhs.true.i16.i.if.end12.i18.i_crit_edge, %if.end6.i13.i.if.end12.i18.i_crit_edge
  %version15.i17.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %sub4.i8.i, i32 1
  %82 = ptrtoint ptr %version15.i17.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %version15.i17.i, align 4
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %83, align 4
  %86 = zext i32 %85 to i64
  call void @__sanitizer_cov_trace_switch(i64 %86, ptr @__sancov_gen_cov_switch_values.430)
  switch i32 %85, label %land.lhs.true36.i21.i [
    i32 8, label %if.end12.i18.i.for.inc.i29.i_crit_edge
    i32 9, label %if.end12.i18.i.for.inc.i29.i_crit_edge87
    i32 11, label %if.end12.i18.i.for.inc.i29.i_crit_edge88
    i32 13, label %if.end12.i18.i.for.inc.i29.i_crit_edge89
  ]

if.end12.i18.i.for.inc.i29.i_crit_edge89:         ; preds = %if.end12.i18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i29.i

if.end12.i18.i.for.inc.i29.i_crit_edge88:         ; preds = %if.end12.i18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i29.i

if.end12.i18.i.for.inc.i29.i_crit_edge87:         ; preds = %if.end12.i18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i29.i

if.end12.i18.i.for.inc.i29.i_crit_edge:           ; preds = %if.end12.i18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i29.i

land.lhs.true36.i21.i:                            ; preds = %if.end12.i18.i
  %funcs.i19.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %83, i32 0, i32 4
  %87 = ptrtoint ptr %funcs.i19.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %funcs.i19.i, align 4
  %set_clockgating_state.i.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %88, i32 0, i32 17
  %89 = ptrtoint ptr %set_clockgating_state.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %set_clockgating_state.i.i, align 4
  %tobool40.not.i20.i = icmp eq ptr %90, null
  br i1 %tobool40.not.i20.i, label %land.lhs.true36.i21.i.for.inc.i29.i_crit_edge, label %if.then41.i24.i

land.lhs.true36.i21.i.for.inc.i29.i_crit_edge:    ; preds = %land.lhs.true36.i21.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i29.i

if.then41.i24.i:                                  ; preds = %land.lhs.true36.i21.i
  %call.i22.i = tail call i32 %90(ptr noundef %adev, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i22.i)
  %tobool47.not.i23.i = icmp eq i32 %call.i22.i, 0
  br i1 %tobool47.not.i23.i, label %if.then41.i24.i.for.inc.i29.i_crit_edge, label %if.then48.i26.i

if.then41.i24.i.for.inc.i29.i_crit_edge:          ; preds = %if.then41.i24.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i29.i

if.then48.i26.i:                                  ; preds = %if.then41.i24.i
  call void @__sanitizer_cov_trace_pc() #19
  %91 = ptrtoint ptr %version15.i17.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %version15.i17.i, align 4
  %funcs52.i25.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %92, i32 0, i32 4
  %93 = ptrtoint ptr %funcs52.i25.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %funcs52.i25.i, align 4
  %95 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %94, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.49, ptr noundef %96, i32 noundef %call.i22.i) #17
  br label %amdgpu_device_set_cg_state.exit.i

for.inc.i29.i:                                    ; preds = %if.then41.i24.i.for.inc.i29.i_crit_edge, %land.lhs.true36.i21.i.for.inc.i29.i_crit_edge, %if.end12.i18.i.for.inc.i29.i_crit_edge, %if.end12.i18.i.for.inc.i29.i_crit_edge87, %if.end12.i18.i.for.inc.i29.i_crit_edge88, %if.end12.i18.i.for.inc.i29.i_crit_edge89, %land.lhs.true.i16.i.for.inc.i29.i_crit_edge, %for.body.i11.i.for.inc.i29.i_crit_edge
  %inc.i27.i = add nuw nsw i32 %j.086.i7.i, 1
  %97 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp1.i28.i = icmp sgt i32 %98, %inc.i27.i
  br i1 %cmp1.i28.i, label %for.inc.i29.i.for.body.i11.i_crit_edge, label %for.inc.i29.i.amdgpu_device_set_cg_state.exit.i_crit_edge

for.inc.i29.i.amdgpu_device_set_cg_state.exit.i_crit_edge: ; preds = %for.inc.i29.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_set_cg_state.exit.i

for.inc.i29.i.for.body.i11.i_crit_edge:           ; preds = %for.inc.i29.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i11.i

amdgpu_device_set_cg_state.exit.i:                ; preds = %for.inc.i29.i.amdgpu_device_set_cg_state.exit.i_crit_edge, %if.then48.i26.i, %for.cond.preheader.i4.i.amdgpu_device_set_cg_state.exit.i_crit_edge, %amdgpu_device_set_pg_state.exit.i.amdgpu_device_set_cg_state.exit.i_crit_edge, %for.cond.preheader.i.i.amdgpu_device_set_cg_state.exit.i_crit_edge, %for.end.i.amdgpu_device_set_cg_state.exit.i_crit_edge
  %arrayidx.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %99 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 589824, i32 %100)
  %cmp.i31.i = icmp ugt i32 %100, 589824
  br i1 %cmp.i31.i, label %amdgpu_device_set_cg_state.exit.i.amdgpu_device_smu_fini_early.exit.i_crit_edge, label %for.cond.preheader.i33.i

amdgpu_device_set_cg_state.exit.i.amdgpu_device_smu_fini_early.exit.i_crit_edge: ; preds = %amdgpu_device_set_cg_state.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_smu_fini_early.exit.i

for.cond.preheader.i33.i:                         ; preds = %amdgpu_device_set_cg_state.exit.i
  %101 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %102)
  %cmp240.i.i = icmp sgt i32 %102, 0
  br i1 %cmp240.i.i, label %for.cond.preheader.i33.i.for.body.i35.i_crit_edge, label %for.cond.preheader.i33.i.amdgpu_device_smu_fini_early.exit.i_crit_edge

for.cond.preheader.i33.i.amdgpu_device_smu_fini_early.exit.i_crit_edge: ; preds = %for.cond.preheader.i33.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_smu_fini_early.exit.i

for.cond.preheader.i33.i.for.body.i35.i_crit_edge: ; preds = %for.cond.preheader.i33.i
  br label %for.body.i35.i

for.body.i35.i:                                   ; preds = %for.inc.i40.i.for.body.i35.i_crit_edge, %for.cond.preheader.i33.i.for.body.i35.i_crit_edge
  %i.041.i.i = phi i32 [ %inc.i39.i, %for.inc.i40.i.for.body.i35.i_crit_edge ], [ 0, %for.cond.preheader.i33.i.for.body.i35.i_crit_edge ]
  %hw.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.041.i.i, i32 0, i32 2
  %103 = ptrtoint ptr %hw.i.i to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %hw.i.i, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %104)
  %tobool.not.i34.i = icmp eq i8 %104, 0
  br i1 %tobool.not.i34.i, label %for.body.i35.i.for.inc.i40.i_crit_edge, label %if.end5.i.i

for.body.i35.i.for.inc.i40.i_crit_edge:           ; preds = %for.body.i35.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i40.i

if.end5.i.i:                                      ; preds = %for.body.i35.i
  %version.i36.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.041.i.i, i32 1
  %105 = ptrtoint ptr %version.i36.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %version.i36.i, align 4
  %107 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %106, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %108)
  %cmp8.i.i = icmp eq i32 %108, 3
  br i1 %cmp8.i.i, label %if.then9.i.i, label %if.end5.i.i.for.inc.i40.i_crit_edge

if.end5.i.i.for.inc.i40.i_crit_edge:              ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i40.i

if.then9.i.i:                                     ; preds = %if.end5.i.i
  %funcs.i37.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %106, i32 0, i32 4
  %109 = ptrtoint ptr %funcs.i37.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %funcs.i37.i, align 4
  %hw_fini.i.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %110, i32 0, i32 7
  %111 = ptrtoint ptr %hw_fini.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %hw_fini.i.i, align 4
  %call.i38.i = tail call i32 %112(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i38.i)
  %tobool13.not.i.i = icmp eq i32 %call.i38.i, 0
  br i1 %tobool13.not.i.i, label %if.then9.i.i.if.end19.i.i_crit_edge, label %if.then14.i.i

if.then9.i.i.if.end19.i.i_crit_edge:              ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19.i.i

if.then14.i.i:                                    ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %113 = ptrtoint ptr %version.i36.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %version.i36.i, align 4
  %funcs18.i.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %114, i32 0, i32 4
  %115 = ptrtoint ptr %funcs18.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %funcs18.i.i, align 4
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %116, align 4
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.378, ptr noundef %118, i32 noundef %call.i38.i) #17
  br label %if.end19.i.i

if.end19.i.i:                                     ; preds = %if.then14.i.i, %if.then9.i.i.if.end19.i.i_crit_edge
  %119 = ptrtoint ptr %hw.i.i to i32
  call void @__asan_store1_noabort(i32 %119)
  store i8 0, ptr %hw.i.i, align 2
  br label %amdgpu_device_smu_fini_early.exit.i

for.inc.i40.i:                                    ; preds = %if.end5.i.i.for.inc.i40.i_crit_edge, %for.body.i35.i.for.inc.i40.i_crit_edge
  %inc.i39.i = add nuw nsw i32 %i.041.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i39.i, %102
  br i1 %exitcond.not.i.i, label %for.inc.i40.i.amdgpu_device_smu_fini_early.exit.i_crit_edge, label %for.inc.i40.i.for.body.i35.i_crit_edge

for.inc.i40.i.for.body.i35.i_crit_edge:           ; preds = %for.inc.i40.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i35.i

for.inc.i40.i.amdgpu_device_smu_fini_early.exit.i_crit_edge: ; preds = %for.inc.i40.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_smu_fini_early.exit.i

amdgpu_device_smu_fini_early.exit.i:              ; preds = %for.inc.i40.i.amdgpu_device_smu_fini_early.exit.i_crit_edge, %if.end19.i.i, %for.cond.preheader.i33.i.amdgpu_device_smu_fini_early.exit.i_crit_edge, %amdgpu_device_set_cg_state.exit.i.amdgpu_device_smu_fini_early.exit.i_crit_edge
  %120 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %num_ip_blocks.i, align 8
  %i.149.i = add i32 %121, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %i.149.i)
  %cmp1750.i = icmp sgt i32 %i.149.i, -1
  br i1 %cmp1750.i, label %amdgpu_device_smu_fini_early.exit.i.for.body18.i_crit_edge, label %amdgpu_device_smu_fini_early.exit.i.for.end42.i_crit_edge

amdgpu_device_smu_fini_early.exit.i.for.end42.i_crit_edge: ; preds = %amdgpu_device_smu_fini_early.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end42.i

amdgpu_device_smu_fini_early.exit.i.for.body18.i_crit_edge: ; preds = %amdgpu_device_smu_fini_early.exit.i
  br label %for.body18.i

for.body18.i:                                     ; preds = %for.inc41.i.for.body18.i_crit_edge, %amdgpu_device_smu_fini_early.exit.i.for.body18.i_crit_edge
  %i.151.i = phi i32 [ %i.1.i, %for.inc41.i.for.body18.i_crit_edge ], [ %i.149.i, %amdgpu_device_smu_fini_early.exit.i.for.body18.i_crit_edge ]
  %hw.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.151.i, i32 0, i32 2
  %122 = ptrtoint ptr %hw.i to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %hw.i, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %123)
  %tobool21.not.i = icmp eq i8 %123, 0
  br i1 %tobool21.not.i, label %for.body18.i.for.inc41.i_crit_edge, label %if.end23.i

for.body18.i.for.inc41.i_crit_edge:               ; preds = %for.body18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc41.i

if.end23.i:                                       ; preds = %for.body18.i
  %version26.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.151.i, i32 1
  %124 = ptrtoint ptr %version26.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %version26.i, align 4
  %funcs27.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %125, i32 0, i32 4
  %126 = ptrtoint ptr %funcs27.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %funcs27.i, align 4
  %hw_fini.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %127, i32 0, i32 7
  %128 = ptrtoint ptr %hw_fini.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %hw_fini.i, align 4
  %call28.i = tail call i32 %129(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i)
  %tobool29.not.i = icmp eq i32 %call28.i, 0
  br i1 %tobool29.not.i, label %if.end23.i.if.end36.i_crit_edge, label %if.then30.i

if.end23.i.if.end36.i_crit_edge:                  ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end36.i

if.then30.i:                                      ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #19
  %130 = ptrtoint ptr %version26.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %version26.i, align 4
  %funcs34.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %131, i32 0, i32 4
  %132 = ptrtoint ptr %funcs34.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %funcs34.i, align 4
  %134 = ptrtoint ptr %133 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %133, align 4
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.378, ptr noundef %135, i32 noundef %call28.i) #17
  br label %if.end36.i

if.end36.i:                                       ; preds = %if.then30.i, %if.end23.i.if.end36.i_crit_edge
  %136 = ptrtoint ptr %hw.i to i32
  call void @__asan_store1_noabort(i32 %136)
  store i8 0, ptr %hw.i, align 2
  br label %for.inc41.i

for.inc41.i:                                      ; preds = %if.end36.i, %for.body18.i.for.inc41.i_crit_edge
  %i.1.i = add i32 %i.151.i, -1
  %cmp17.i = icmp sgt i32 %i.1.i, -1
  br i1 %cmp17.i, label %for.inc41.i.for.body18.i_crit_edge, label %for.inc41.i.for.end42.i_crit_edge

for.inc41.i.for.end42.i_crit_edge:                ; preds = %for.inc41.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end42.i

for.inc41.i.for.body18.i_crit_edge:               ; preds = %for.inc41.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body18.i

for.end42.i:                                      ; preds = %for.inc41.i.for.end42.i_crit_edge, %amdgpu_device_smu_fini_early.exit.i.for.end42.i_crit_edge
  %137 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %virt, align 8
  %and.i = and i32 %138, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool43.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool43.not.i, label %for.end42.i.amdgpu_device_ip_fini_early.exit_crit_edge, label %if.then44.i

for.end42.i.amdgpu_device_ip_fini_early.exit_crit_edge: ; preds = %for.end42.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_fini_early.exit

if.then44.i:                                      ; preds = %for.end42.i
  %call45.i = tail call i32 @amdgpu_virt_release_full_gpu(ptr noundef %adev, i1 noundef zeroext false) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45.i)
  %tobool46.not.i = icmp eq i32 %call45.i, 0
  br i1 %tobool46.not.i, label %if.then44.i.amdgpu_device_ip_fini_early.exit_crit_edge, label %if.then47.i

if.then44.i.amdgpu_device_ip_fini_early.exit_crit_edge: ; preds = %if.then44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_fini_early.exit

if.then47.i:                                      ; preds = %if.then44.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.379) #17
  br label %amdgpu_device_ip_fini_early.exit

amdgpu_device_ip_fini_early.exit:                 ; preds = %if.then47.i, %if.then44.i.amdgpu_device_ip_fini_early.exit_crit_edge, %for.end42.i.amdgpu_device_ip_fini_early.exit_crit_edge
  tail call void @amdgpu_irq_fini_hw(ptr noundef %adev) #17
  %139 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %139)
  %140 = load i8, ptr %initialized, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %140)
  %tobool31.not = icmp eq i8 %140, 0
  br i1 %tobool31.not, label %amdgpu_device_ip_fini_early.exit.if.end35_crit_edge, label %if.then32

amdgpu_device_ip_fini_early.exit.if.end35_crit_edge: ; preds = %amdgpu_device_ip_fini_early.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end35

if.then32:                                        ; preds = %amdgpu_device_ip_fini_early.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @ttm_device_clear_dma_mappings(ptr noundef %mman) #17
  br label %if.end35

if.end35:                                         ; preds = %if.then32, %amdgpu_device_ip_fini_early.exit.if.end35_crit_edge
  tail call void @amdgpu_gart_dummy_page_fini(ptr noundef %adev) #17
  %ddev.i72 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %idx.i) #17
  %141 = ptrtoint ptr %idx.i to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 -1, ptr %idx.i, align 4, !annotation !767
  %call.i73 = call zeroext i1 @drm_dev_enter(ptr noundef %ddev.i72, ptr noundef nonnull %idx.i) #17
  br i1 %call.i73, label %drm_dev_is_unplugged.exit, label %if.then38

drm_dev_is_unplugged.exit:                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #19
  %142 = ptrtoint ptr %idx.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %idx.i, align 4
  call void @drm_dev_exit(i32 noundef %143) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %idx.i) #17
  br label %if.end39

if.then38:                                        ; preds = %if.end35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %idx.i) #17
  %anon_inode.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2, i32 12
  %144 = ptrtoint ptr %anon_inode.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %anon_inode.i, align 4
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %145, i32 0, i32 9
  %146 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %i_mapping.i, align 8
  call void @unmap_mapping_range(ptr noundef %147, i64 noundef 0, i64 noundef 0, i32 noundef 1) #17
  %ptr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 2
  %148 = ptrtoint ptr %ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %ptr.i.i, align 4
  call void @iounmap(ptr noundef %149) #17
  %150 = ptrtoint ptr %ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store ptr null, ptr %ptr.i.i, align 4
  %rmmio.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %151 = ptrtoint ptr %rmmio.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %rmmio.i, align 8
  call void @iounmap(ptr noundef %152) #17
  %153 = ptrtoint ptr %rmmio.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store ptr null, ptr %rmmio.i, align 8
  %aper_base_kaddr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 68, i32 2
  %154 = ptrtoint ptr %aper_base_kaddr.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %aper_base_kaddr.i, align 4
  %tobool.not.i74 = icmp eq ptr %155, null
  br i1 %tobool.not.i74, label %if.then38.amdgpu_device_unmap_mmio.exit_crit_edge, label %if.then.i75

if.then38.amdgpu_device_unmap_mmio.exit_crit_edge: ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_unmap_mmio.exit

if.then.i75:                                      ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #19
  call void @iounmap(ptr noundef nonnull %155) #17
  br label %amdgpu_device_unmap_mmio.exit

amdgpu_device_unmap_mmio.exit:                    ; preds = %if.then.i75, %if.then38.amdgpu_device_unmap_mmio.exit_crit_edge
  %156 = ptrtoint ptr %aper_base_kaddr.i to i32
  call void @__asan_store4_noabort(i32 %156)
  store ptr null, ptr %aper_base_kaddr.i, align 4
  br label %if.end39

if.end39:                                         ; preds = %amdgpu_device_unmap_mmio.exit, %drm_dev_is_unplugged.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ttm_bo_lock_delayed_workqueue(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_irq_disable_all(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @drm_helper_force_disable_all(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_atomic_helper_shutdown(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_fence_driver_hw_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_pm_sysfs_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ucode_sysfs_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_files(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ras_pre_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_irq_fini_hw(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ttm_device_clear_dma_mappings(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gart_dummy_page_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_fini_sw(ptr noundef %adev) local_unnamed_addr #2 align 64 {
entry:
  %idx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %idx) #17
  %0 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %idx, align 4, !annotation !767
  tail call void @amdgpu_fence_driver_sw_fini(ptr noundef %adev) #17
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %1 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.lhs.true.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %entry
  %ras_init_done.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 17
  %3 = ptrtoint ptr %ras_init_done.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %ras_init_done.i, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool2.not.i = icmp eq i8 %4, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_virt_release_ras_err_handler_data(ptr noundef %adev) #17
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %land.lhs.true.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %num_physical_nodes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 4
  %5 = ptrtoint ptr %num_physical_nodes.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_physical_nodes.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp.i = icmp ugt i32 %6, 1
  br i1 %cmp.i, label %if.then3.i, label %if.end.i.if.end4.i_crit_edge

if.end.i.if.end4.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i = tail call i32 @amdgpu_xgmi_remove_device(ptr noundef %adev) #17
  br label %if.end4.i

if.end4.i:                                        ; preds = %if.then3.i, %if.end.i.if.end4.i_crit_edge
  tail call void @amdgpu_amdkfd_device_fini_sw(ptr noundef %adev) #17
  %num_ip_blocks.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %7 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_ip_blocks.i, align 8
  %i.01.i = add i32 %8, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %i.01.i)
  %cmp52.i = icmp sgt i32 %i.01.i, -1
  br i1 %cmp52.i, label %for.body.lr.ph.i, label %if.end4.i.for.end.i_crit_edge

if.end4.i.for.end.i_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end4.i
  %csa_obj.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 1
  %wb.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70
  %gpu_addr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 2
  %wb5.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 1
  %vram_scratch.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 69
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.03.i = phi i32 [ %i.01.i, %for.body.lr.ph.i ], [ %i.0.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.03.i
  %sw.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i, i32 0, i32 1
  %9 = ptrtoint ptr %sw.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %sw.i, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool6.not.i = icmp eq i8 %10, 0
  br i1 %tobool6.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end8.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end8.i:                                        ; preds = %for.body.i
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.03.i, i32 1
  %11 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %version.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp11.i = icmp eq i32 %14, 1
  br i1 %cmp11.i, label %if.then12.i, label %if.end8.i.if.end14.i_crit_edge

if.end8.i.if.end14.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14.i

if.then12.i:                                      ; preds = %if.end8.i
  tail call void @amdgpu_ucode_free_bo(ptr noundef %adev) #17
  tail call void @amdgpu_free_static_csa(ptr noundef %csa_obj.i) #17
  %15 = ptrtoint ptr %wb.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %wb.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %16, null
  br i1 %tobool.not.i.i, label %if.then12.i.amdgpu_device_wb_fini.exit.i_crit_edge, label %if.then.i.i

if.then12.i.amdgpu_device_wb_fini.exit.i_crit_edge: ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_wb_fini.exit.i

if.then.i.i:                                      ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_bo_free_kernel(ptr noundef %wb.i.i, ptr noundef %gpu_addr.i.i, ptr noundef %wb5.i.i) #17
  %17 = ptrtoint ptr %wb.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %wb.i.i, align 8
  br label %amdgpu_device_wb_fini.exit.i

amdgpu_device_wb_fini.exit.i:                     ; preds = %if.then.i.i, %if.then12.i.amdgpu_device_wb_fini.exit.i_crit_edge
  tail call void @amdgpu_bo_free_kernel(ptr noundef %vram_scratch.i.i, ptr noundef null, ptr noundef null) #17
  tail call void @amdgpu_ib_pool_fini(ptr noundef %adev) #17
  br label %if.end14.i

if.end14.i:                                       ; preds = %amdgpu_device_wb_fini.exit.i, %if.end8.i.if.end14.i_crit_edge
  %18 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %version.i, align 4
  %funcs.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %19, i32 0, i32 4
  %20 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs.i, align 4
  %sw_fini.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %21, i32 0, i32 4
  %22 = ptrtoint ptr %sw_fini.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sw_fini.i, align 4
  %call18.i = tail call i32 %23(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i)
  %tobool19.not.i = icmp eq i32 %call18.i, 0
  br i1 %tobool19.not.i, label %if.end14.i.if.end25.i_crit_edge, label %if.then20.i

if.end14.i.if.end25.i_crit_edge:                  ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end25.i

if.then20.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #19
  %24 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %version.i, align 4
  %funcs24.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %25, i32 0, i32 4
  %26 = ptrtoint ptr %funcs24.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs24.i, align 4
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 4
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.380, ptr noundef %29, i32 noundef %call18.i) #17
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.then20.i, %if.end14.i.if.end25.i_crit_edge
  %30 = ptrtoint ptr %sw.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 0, ptr %sw.i, align 1
  %31 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 0, ptr %arrayidx.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end25.i, %for.body.i.for.inc.i_crit_edge
  %i.0.i = add i32 %i.03.i, -1
  %cmp5.i = icmp sgt i32 %i.0.i, -1
  br i1 %cmp5.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end4.i.for.end.i_crit_edge
  %32 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %num_ip_blocks.i, align 8
  %i.14.i = add i32 %33, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %i.14.i)
  %cmp365.i = icmp sgt i32 %i.14.i, -1
  br i1 %cmp365.i, label %for.end.i.for.body37.i_crit_edge, label %for.end.i.amdgpu_device_ip_fini.exit_crit_edge

for.end.i.amdgpu_device_ip_fini.exit_crit_edge:   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_fini.exit

for.end.i.for.body37.i_crit_edge:                 ; preds = %for.end.i
  br label %for.body37.i

for.body37.i:                                     ; preds = %for.inc60.i.for.body37.i_crit_edge, %for.end.i.for.body37.i_crit_edge
  %i.16.i = phi i32 [ %i.1.i, %for.inc60.i.for.body37.i_crit_edge ], [ %i.14.i, %for.end.i.for.body37.i_crit_edge ]
  %late_initialized.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.16.i, i32 0, i32 3
  %34 = ptrtoint ptr %late_initialized.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %late_initialized.i, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool41.not.i = icmp eq i8 %35, 0
  br i1 %tobool41.not.i, label %for.body37.i.for.inc60.i_crit_edge, label %if.end43.i

for.body37.i.for.inc60.i_crit_edge:               ; preds = %for.body37.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc60.i

if.end43.i:                                       ; preds = %for.body37.i
  %version46.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.16.i, i32 1
  %36 = ptrtoint ptr %version46.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %version46.i, align 4
  %funcs47.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %37, i32 0, i32 4
  %38 = ptrtoint ptr %funcs47.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %funcs47.i, align 4
  %late_fini.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %39, i32 0, i32 8
  %40 = ptrtoint ptr %late_fini.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %late_fini.i, align 4
  %tobool48.not.i = icmp eq ptr %41, null
  br i1 %tobool48.not.i, label %if.end43.i.if.end55.i_crit_edge, label %if.then49.i

if.end43.i.if.end55.i_crit_edge:                  ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end55.i

if.then49.i:                                      ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %41(ptr noundef %adev) #17
  br label %if.end55.i

if.end55.i:                                       ; preds = %if.then49.i, %if.end43.i.if.end55.i_crit_edge
  %42 = ptrtoint ptr %late_initialized.i to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 0, ptr %late_initialized.i, align 1
  br label %for.inc60.i

for.inc60.i:                                      ; preds = %if.end55.i, %for.body37.i.for.inc60.i_crit_edge
  %i.1.i = add i32 %i.16.i, -1
  %cmp36.i = icmp sgt i32 %i.1.i, -1
  br i1 %cmp36.i, label %for.inc60.i.for.body37.i_crit_edge, label %for.inc60.i.amdgpu_device_ip_fini.exit_crit_edge

for.inc60.i.amdgpu_device_ip_fini.exit_crit_edge: ; preds = %for.inc60.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_fini.exit

for.inc60.i.for.body37.i_crit_edge:               ; preds = %for.inc60.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body37.i

amdgpu_device_ip_fini.exit:                       ; preds = %for.inc60.i.amdgpu_device_ip_fini.exit_crit_edge, %for.end.i.amdgpu_device_ip_fini.exit_crit_edge
  %call63.i = tail call i32 @amdgpu_ras_fini(ptr noundef %adev) #17
  %gpu_info_fw = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 8
  %43 = ptrtoint ptr %gpu_info_fw to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %gpu_info_fw, align 4
  tail call void @release_firmware(ptr noundef %44) #17
  %45 = ptrtoint ptr %gpu_info_fw to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %gpu_info_fw, align 4
  %accel_working = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 15
  %46 = ptrtoint ptr %accel_working to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 0, ptr %accel_working, align 2
  %call3 = tail call i32 @amdgpu_reset_fini(ptr noundef %adev) #17
  %47 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %virt.i, align 8
  %and.i48 = and i32 %48, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i48)
  %tobool.not.i49 = icmp eq i32 %and.i48, 0
  br i1 %tobool.not.i49, label %lor.lhs.false.i, label %amdgpu_device_ip_fini.exit.if.then_crit_edge

amdgpu_device_ip_fini.exit.if.then_crit_edge:     ; preds = %amdgpu_device_ip_fini.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

lor.lhs.false.i:                                  ; preds = %amdgpu_device_ip_fini.exit
  %enable_virtual_display.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 77
  %49 = ptrtoint ptr %enable_virtual_display.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %enable_virtual_display.i, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool1.not.i = icmp eq i8 %50, 0
  br i1 %tobool1.not.i, label %lor.lhs.false2.i, label %lor.lhs.false.i.if.then_crit_edge

lor.lhs.false.i.if.then_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

lor.lhs.false2.i:                                 ; preds = %lor.lhs.false.i
  %harvest_ip_mask.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 123
  %51 = ptrtoint ptr %harvest_ip_mask.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %harvest_ip_mask.i, align 4
  %and3.i = and i32 %52, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.not.i, label %if.end.i50, label %lor.lhs.false2.i.if.then_crit_edge

lor.lhs.false2.i.if.then_crit_edge:               ; preds = %lor.lhs.false2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

if.end.i50:                                       ; preds = %lor.lhs.false2.i
  %asic_type.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %53 = ptrtoint ptr %asic_type.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %asic_type.i, align 8
  %55 = zext i32 %54 to i64
  call void @__sanitizer_cov_trace_switch(i64 %55, ptr @__sancov_gen_cov_switch_values.431)
  switch i32 %54, label %sw.default.i.i [
    i32 4, label %if.end.i50.if.then_crit_edge
    i32 10, label %if.end.i50.if.then_crit_edge56
    i32 0, label %if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge
    i32 1, label %if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge57
    i32 2, label %if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge58
    i32 3, label %if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge59
    i32 5, label %if.end.i50.sw.bb2.i.i_crit_edge
    i32 6, label %if.end.i50.sw.bb2.i.i_crit_edge60
    i32 7, label %if.end.i50.sw.bb2.i.i_crit_edge61
    i32 9, label %if.end.i50.sw.bb2.i.i_crit_edge62
  ]

if.end.i50.sw.bb2.i.i_crit_edge62:                ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i.i

if.end.i50.sw.bb2.i.i_crit_edge61:                ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i.i

if.end.i50.sw.bb2.i.i_crit_edge60:                ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i.i

if.end.i50.sw.bb2.i.i_crit_edge:                  ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i.i

if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge59: ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_has_dc_support.exit

if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge58: ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_has_dc_support.exit

if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge57: ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_has_dc_support.exit

if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge: ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_has_dc_support.exit

if.end.i50.if.then_crit_edge56:                   ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

if.end.i50.if.then_crit_edge:                     ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

sw.bb2.i.i:                                       ; preds = %if.end.i50.sw.bb2.i.i_crit_edge, %if.end.i50.sw.bb2.i.i_crit_edge60, %if.end.i50.sw.bb2.i.i_crit_edge61, %if.end.i50.sw.bb2.i.i_crit_edge62
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %56 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %cmp3.i.i = icmp sgt i32 %56, 0
  br i1 %cmp3.i.i, label %sw.bb2.i.i.if.end_crit_edge, label %sw.bb2.i.i.if.then_crit_edge

sw.bb2.i.i.if.then_crit_edge:                     ; preds = %sw.bb2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

sw.bb2.i.i.if.end_crit_edge:                      ; preds = %sw.bb2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

sw.default.i.i:                                   ; preds = %if.end.i50
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %57 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %cmp5.i.i.not = icmp eq i32 %57, 0
  br i1 %cmp5.i.i.not, label %sw.default.i.i.if.then_crit_edge, label %sw.default.i.i.if.end_crit_edge

sw.default.i.i.if.end_crit_edge:                  ; preds = %sw.default.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

sw.default.i.i.if.then_crit_edge:                 ; preds = %sw.default.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

amdgpu_device_has_dc_support.exit:                ; preds = %if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge, %if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge57, %if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge58, %if.end.i50.amdgpu_device_has_dc_support.exit_crit_edge59
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %58 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %cmp.i.i = icmp sgt i32 %58, 0
  br i1 %cmp.i.i, label %amdgpu_device_has_dc_support.exit.if.end_crit_edge, label %amdgpu_device_has_dc_support.exit.if.then_crit_edge

amdgpu_device_has_dc_support.exit.if.then_crit_edge: ; preds = %amdgpu_device_has_dc_support.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

amdgpu_device_has_dc_support.exit.if.end_crit_edge: ; preds = %amdgpu_device_has_dc_support.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %amdgpu_device_has_dc_support.exit.if.then_crit_edge, %sw.default.i.i.if.then_crit_edge, %sw.bb2.i.i.if.then_crit_edge, %if.end.i50.if.then_crit_edge, %if.end.i50.if.then_crit_edge56, %lor.lhs.false2.i.if.then_crit_edge, %lor.lhs.false.i.if.then_crit_edge, %amdgpu_device_ip_fini.exit.if.then_crit_edge
  tail call void @amdgpu_i2c_fini(ptr noundef %adev) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %amdgpu_device_has_dc_support.exit.if.end_crit_edge, %sw.default.i.i.if.end_crit_edge, %sw.bb2.i.i.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %59 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %59)
  %cmp.not = icmp eq i32 %59, 1
  br i1 %cmp.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_atombios_fini(ptr noundef %adev) #17
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  %bios = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 26
  %60 = ptrtoint ptr %bios to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %bios, align 4
  tail call void @kfree(ptr noundef %61) #17
  %62 = ptrtoint ptr %bios to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr null, ptr %bios, align 4
  %ddev.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2
  %pdev12 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %63 = ptrtoint ptr %pdev12 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %pdev12, align 4
  %class = getelementptr inbounds %struct.pci_dev, ptr %64, i32 0, i32 11
  %65 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %class, align 8
  %shr.mask = and i32 %66, -256
  call void @__sanitizer_cov_trace_const_cmp4(i32 196608, i32 %shr.mask)
  %cmp13 = icmp eq i32 %shr.mask, 196608
  br i1 %cmp13, label %if.then14, label %if.end6.if.end16_crit_edge

if.end6.if.end16_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

if.then14:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %call.i53 = tail call i32 @vga_client_register(ptr noundef %64, ptr noundef null) #17
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end6.if.end16_crit_edge
  %call18 = call zeroext i1 @drm_dev_enter(ptr noundef %ddev.i, ptr noundef nonnull %idx) #17
  br i1 %call18, label %if.then19, label %if.end16.if.end21_crit_edge

if.end16.if.end21_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end21

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %67 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %rmmio, align 8
  call void @iounmap(ptr noundef %68) #17
  %69 = ptrtoint ptr %rmmio to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr null, ptr %rmmio, align 8
  %ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 2
  %70 = ptrtoint ptr %ptr.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %ptr.i, align 4
  call void @iounmap(ptr noundef %71) #17
  %72 = ptrtoint ptr %ptr.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr null, ptr %ptr.i, align 4
  %73 = ptrtoint ptr %idx to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %idx, align 4
  call void @drm_dev_exit(i32 noundef %74) #17
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end16.if.end21_crit_edge
  call void @amdgpu_pmu_fini(ptr noundef %adev) #17
  %discovery_bin = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 68, i32 19
  %75 = ptrtoint ptr %discovery_bin to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %discovery_bin, align 8
  %tobool.not = icmp eq ptr %76, null
  br i1 %tobool.not, label %if.end21.if.end23_crit_edge, label %if.then22

if.end21.if.end23_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end23

if.then22:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #19
  call void @amdgpu_discovery_fini(ptr noundef %adev) #17
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %if.end21.if.end23_crit_edge
  %pci_state = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 169
  %77 = ptrtoint ptr %pci_state to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %pci_state, align 8
  call void @kfree(ptr noundef %78) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %idx) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_fence_driver_sw_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_firmware(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_reset_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_i2c_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_atombios_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @iounmap(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_pmu_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_discovery_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_suspend(ptr noundef %dev, i1 noundef zeroext %fbcon) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %switch_power_state = getelementptr inbounds %struct.drm_device, ptr %dev, i32 0, i32 35
  %0 = ptrtoint ptr %switch_power_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %switch_power_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %in_suspend = getelementptr i8, ptr %dev, i32 91013
  %2 = ptrtoint ptr %in_suspend to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %in_suspend, align 1
  tail call void @drm_kms_helper_poll_disable(ptr noundef %dev) #17
  br i1 %fbcon, label %if.then6, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end8

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %fb_helper = getelementptr inbounds %struct.drm_device, ptr %dev, i32 0, i32 36
  %3 = ptrtoint ptr %fb_helper to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fb_helper, align 4
  tail call void @drm_fb_helper_set_suspend_unlocked(ptr noundef %4, i1 noundef zeroext true) #17
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end.if.end8_crit_edge
  %delayed_init_work = getelementptr i8, ptr %dev, i32 90168
  %call9 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %delayed_init_work) #17
  tail call void @amdgpu_ras_suspend(ptr noundef %add.ptr.i) #17
  %call10 = tail call fastcc i32 @amdgpu_device_ip_suspend_phase1(ptr noundef %add.ptr.i)
  %in_s0ix = getelementptr i8, ptr %dev, i32 91016
  %5 = ptrtoint ptr %in_s0ix to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %in_s0ix, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool11.not = icmp eq i8 %6, 0
  br i1 %tobool11.not, label %if.then12, label %if.end8.if.end14_crit_edge

if.end8.if.end14_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14

if.then12:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  %in_runpm = getelementptr i8, ptr %dev, i32 91473
  %7 = ptrtoint ptr %in_runpm to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %in_runpm, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool13 = icmp ne i8 %8, 0
  tail call void @amdgpu_amdkfd_suspend(ptr noundef %add.ptr.i, i1 noundef zeroext %tobool13) #17
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end8.if.end14_crit_edge
  %in_s3.i = getelementptr i8, ptr %dev, i32 91014
  %9 = ptrtoint ptr %in_s3.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %in_s3.i, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not.i = icmp eq i8 %10, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %if.end14.land.lhs.true.i_crit_edge

if.end14.land.lhs.true.i_crit_edge:               ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true.i

lor.lhs.false.i:                                  ; preds = %if.end14
  %11 = ptrtoint ptr %in_s0ix to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %in_s0ix, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool1.not.i = icmp eq i8 %12, 0
  br i1 %tobool1.not.i, label %lor.lhs.false.i.if.end.i_crit_edge, label %lor.lhs.false.i.land.lhs.true.i_crit_edge

lor.lhs.false.i.land.lhs.true.i_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true.i

lor.lhs.false.i.if.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i.land.lhs.true.i_crit_edge, %if.end14.land.lhs.true.i_crit_edge
  %flags.i = getelementptr i8, ptr %dev, i32 2376
  %13 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags.i, align 8
  %and.i = and i32 %14, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %land.lhs.true.i.amdgpu_device_evict_resources.exit_crit_edge

land.lhs.true.i.amdgpu_device_evict_resources.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_evict_resources.exit

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %lor.lhs.false.i.if.end.i_crit_edge
  %call.i = tail call i32 @amdgpu_ttm_evict_resources(ptr noundef %add.ptr.i, i32 noundef 2) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool3.not.i, label %if.end.i.amdgpu_device_evict_resources.exit_crit_edge, label %do.end.i

if.end.i.amdgpu_device_evict_resources.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_evict_resources.exit

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %call5.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.381) #20
  br label %amdgpu_device_evict_resources.exit

amdgpu_device_evict_resources.exit:               ; preds = %do.end.i, %if.end.i.amdgpu_device_evict_resources.exit_crit_edge, %land.lhs.true.i.amdgpu_device_evict_resources.exit_crit_edge
  tail call void @amdgpu_fence_driver_hw_fini(ptr noundef %add.ptr.i) #17
  %call15 = tail call fastcc i32 @amdgpu_device_ip_suspend_phase2(ptr noundef %add.ptr.i)
  br label %cleanup

cleanup:                                          ; preds = %amdgpu_device_evict_resources.exit, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_kms_helper_poll_disable(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_fb_helper_set_suspend_unlocked(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ras_suspend(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_amdkfd_suspend(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_resume(ptr noundef %dev, i1 noundef zeroext %fbcon) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %switch_power_state = getelementptr inbounds %struct.drm_device, ptr %dev, i32 0, i32 35
  %0 = ptrtoint ptr %switch_power_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %switch_power_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %in_s0ix = getelementptr i8, ptr %dev, i32 91016
  %2 = ptrtoint ptr %in_s0ix to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %in_s0ix, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end.if.end2_crit_edge, label %if.then1

if.end.if.end2_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end2

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_gfx_state_change_set(ptr noundef %add.ptr.i, i32 noundef 1) #17
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end.if.end2_crit_edge
  %virt.i = getelementptr i8, ptr %dev, i32 90272
  %4 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end2.if.end10_crit_edge

if.end2.if.end10_crit_edge:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.end.i:                                         ; preds = %if.end2
  %and3.i = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.not.i, label %if.end.i.if.end17.i_crit_edge, label %if.then5.i

if.end.i.if.end17.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17.i

if.then5.i:                                       ; preds = %if.end.i
  %asic_type.i = getelementptr i8, ptr %dev, i32 2360
  %6 = ptrtoint ptr %asic_type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %asic_type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %7)
  %cmp.i = icmp eq i32 %7, 12
  br i1 %cmp.i, label %if.then6.i, label %if.then5.i.if.end17.i_crit_edge

if.then5.i.if.end17.i_crit_edge:                  ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17.i

if.then6.i:                                       ; preds = %if.then5.i
  %fw.i = getelementptr i8, ptr %dev, i32 29712
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %add.ptr.i, align 8
  %call.i = tail call i32 @request_firmware(ptr noundef %fw.i, ptr noundef nonnull @.str.44, ptr noundef %9) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool7.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool7.not.i, label %if.end9.i, label %if.then6.i.if.then4_crit_edge

if.then6.i.if.then4_crit_edge:                    ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4

if.end9.i:                                        ; preds = %if.then6.i
  %10 = ptrtoint ptr %fw.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %fw.i, align 8
  %data.i = getelementptr inbounds %struct.firmware, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %data.i, align 4
  %add.ptr.i98 = getelementptr i32, ptr %13, i32 69
  %14 = ptrtoint ptr %add.ptr.i98 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %add.ptr.i98, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1445375, i32 %15)
  %cmp12.i = icmp ugt i32 %15, 1445375
  br i1 %cmp12.i, label %if.end9.i.if.end17.i_crit_edge, label %if.end9.i.if.then4_crit_edge

if.end9.i.if.then4_crit_edge:                     ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4

if.end9.i.if.end17.i_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.end9.i.if.end17.i_crit_edge, %if.then5.i.if.end17.i_crit_edge, %if.end.i.if.end17.i_crit_edge
  %pending_reset.i = getelementptr i8, ptr %dev, i32 10217
  %16 = ptrtoint ptr %pending_reset.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %pending_reset.i, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool18.not.i = icmp eq i8 %17, 0
  br i1 %tobool18.not.i, label %if.end20.i, label %if.end17.i.if.end10_crit_edge

if.end17.i.if.end10_crit_edge:                    ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.end20.i:                                       ; preds = %if.end17.i
  %has_hw_reset.i = getelementptr i8, ptr %dev, i32 90948
  %18 = ptrtoint ptr %has_hw_reset.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %has_hw_reset.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool21.not.i = icmp eq i8 %19, 0
  br i1 %tobool21.not.i, label %if.end24.i, label %if.then22.i

if.then22.i:                                      ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #19
  %20 = ptrtoint ptr %has_hw_reset.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %has_hw_reset.i, align 4
  br label %if.then4

if.end24.i:                                       ; preds = %if.end20.i
  %asic_type25.i = getelementptr i8, ptr %dev, i32 2360
  %21 = ptrtoint ptr %asic_type25.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %asic_type25.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %22)
  %cmp26.i = icmp ugt i32 %22, 4
  br i1 %cmp26.i, label %if.then27.i, label %amdgpu_device_need_post.exit

if.then27.i:                                      ; preds = %if.end24.i
  %call28.i = tail call zeroext i1 @amdgpu_atombios_scratch_need_asic_init(ptr noundef %add.ptr.i) #17
  br i1 %call28.i, label %if.then27.i.if.then4_crit_edge, label %if.then27.i.if.end10_crit_edge

if.then27.i.if.end10_crit_edge:                   ; preds = %if.then27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.then27.i.if.then4_crit_edge:                   ; preds = %if.then27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4

amdgpu_device_need_post.exit:                     ; preds = %if.end24.i
  %asic_funcs.i = getelementptr i8, ptr %dev, i32 2388
  %23 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %asic_funcs.i, align 4
  %get_config_memsize.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %24, i32 0, i32 11
  %25 = ptrtoint ptr %get_config_memsize.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %get_config_memsize.i, align 4
  %call30.i = tail call i32 %26(ptr noundef %add.ptr.i) #17
  %27 = add i32 %call30.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %27)
  %switch.selectcmp.i = icmp ult i32 %27, 2
  br i1 %switch.selectcmp.i, label %amdgpu_device_need_post.exit.if.then4_crit_edge, label %amdgpu_device_need_post.exit.if.end10_crit_edge

amdgpu_device_need_post.exit.if.end10_crit_edge:  ; preds = %amdgpu_device_need_post.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

amdgpu_device_need_post.exit.if.then4_crit_edge:  ; preds = %amdgpu_device_need_post.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4

if.then4:                                         ; preds = %amdgpu_device_need_post.exit.if.then4_crit_edge, %if.then27.i.if.then4_crit_edge, %if.then22.i, %if.end9.i.if.then4_crit_edge, %if.then6.i.if.then4_crit_edge
  %asic_funcs.i99 = getelementptr i8, ptr %dev, i32 2388
  %28 = ptrtoint ptr %asic_funcs.i99 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %asic_funcs.i99, align 4
  %pre_asic_init.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %29, i32 0, i32 20
  %30 = ptrtoint ptr %pre_asic_init.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %pre_asic_init.i, align 4
  tail call void %31(ptr noundef %add.ptr.i) #17
  %mode_info.i = getelementptr i8, ptr %dev, i32 21992
  %32 = ptrtoint ptr %mode_info.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mode_info.i, align 8
  %call.i100 = tail call i32 @amdgpu_atom_asic_init(ptr noundef %33) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i100)
  %tobool6.not = icmp eq i32 %call.i100, 0
  br i1 %tobool6.not, label %if.then4.if.end10_crit_edge, label %do.end

if.then4.if.end10_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

do.end:                                           ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #19
  %34 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %add.ptr.i, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %35, ptr noundef nonnull @.str.179) #20
  br label %if.end10

if.end10:                                         ; preds = %do.end, %if.then4.if.end10_crit_edge, %amdgpu_device_need_post.exit.if.end10_crit_edge, %if.then27.i.if.end10_crit_edge, %if.end17.i.if.end10_crit_edge, %if.end2.if.end10_crit_edge
  %call.i101 = tail call i32 @amdgpu_amdkfd_resume_iommu(ptr noundef %add.ptr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i101)
  %tobool.not.i102 = icmp eq i32 %call.i101, 0
  br i1 %tobool.not.i102, label %if.end.i103, label %if.end10.do.end16_crit_edge

if.end10.do.end16_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end16

if.end.i103:                                      ; preds = %if.end10
  %num_ip_blocks.i.i = getelementptr i8, ptr %dev, i32 88296
  %36 = ptrtoint ptr %num_ip_blocks.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %num_ip_blocks.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp57.i.i = icmp sgt i32 %37, 0
  br i1 %cmp57.i.i, label %if.end.i103.for.body.i.i_crit_edge, label %if.end.i103.if.end4.i_crit_edge

if.end.i103.if.end4.i_crit_edge:                  ; preds = %if.end.i103
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i

if.end.i103.for.body.i.i_crit_edge:               ; preds = %if.end.i103
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.end.i103.for.body.i.i_crit_edge
  %i.058.i.i = phi i32 [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ 0, %if.end.i103.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.amdgpu_device, ptr %add.ptr.i, i32 0, i32 122, i32 %i.058.i.i
  %38 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %arrayidx.i.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool.not.i.i = icmp eq i8 %39, 0
  br i1 %tobool.not.i.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %lor.lhs.false.i.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

lor.lhs.false.i.i:                                ; preds = %for.body.i.i
  %hw.i.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i.i, i32 0, i32 2
  %40 = ptrtoint ptr %hw.i.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %hw.i.i, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool4.not.i.i = icmp eq i8 %41, 0
  br i1 %tobool4.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.for.inc.i.i_crit_edge

lor.lhs.false.i.i.for.inc.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %version.i.i = getelementptr %struct.amdgpu_device, ptr %add.ptr.i, i32 0, i32 122, i32 %i.058.i.i, i32 1
  %42 = ptrtoint ptr %version.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %version.i.i, align 4
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %45)
  %switch.i.i = icmp ult i32 %45, 3
  br i1 %switch.i.i, label %if.then20.i.i, label %if.end.i.i.for.inc.i.i_crit_edge

if.end.i.i.for.inc.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.then20.i.i:                                    ; preds = %if.end.i.i
  %funcs.i.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %43, i32 0, i32 4
  %46 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %funcs.i.i, align 4
  %resume.i.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %47, i32 0, i32 10
  %48 = ptrtoint ptr %resume.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %resume.i.i, align 4
  %call.i.i = tail call i32 %49(ptr noundef %add.ptr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool24.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool24.not.i.i, label %if.end30.i.i, label %if.then20.i.i.cleanup.sink.split.i_crit_edge

if.then20.i.i.cleanup.sink.split.i_crit_edge:     ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.sink.split.i

if.end30.i.i:                                     ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %50 = ptrtoint ptr %hw.i.i to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 1, ptr %hw.i.i, align 2
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end30.i.i, %if.end.i.i.for.inc.i.i_crit_edge, %lor.lhs.false.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %i.058.i.i, 1
  %51 = ptrtoint ptr %num_ip_blocks.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %num_ip_blocks.i.i, align 8
  %cmp.i.i = icmp slt i32 %inc.i.i, %52
  br i1 %cmp.i.i, label %for.inc.i.i.for.body.i.i_crit_edge, label %for.inc.i.i.if.end4.i_crit_edge

for.inc.i.i.if.end4.i_crit_edge:                  ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i

if.end4.i:                                        ; preds = %for.inc.i.i.if.end4.i_crit_edge, %if.end.i103.if.end4.i_crit_edge
  %call5.i = tail call fastcc i32 @amdgpu_device_fw_loading(ptr noundef %add.ptr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end4.i.do.end16_crit_edge

if.end4.i.do.end16_crit_edge:                     ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end16

if.end8.i:                                        ; preds = %if.end4.i
  %53 = ptrtoint ptr %num_ip_blocks.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %num_ip_blocks.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %cmp65.i.i = icmp sgt i32 %54, 0
  br i1 %cmp65.i.i, label %if.end8.i.for.body.i22.i_crit_edge, label %if.end8.i.if.end18_crit_edge

if.end8.i.if.end18_crit_edge:                     ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18

if.end8.i.for.body.i22.i_crit_edge:               ; preds = %if.end8.i
  br label %for.body.i22.i

for.body.i22.i:                                   ; preds = %for.inc.i33.i.for.body.i22.i_crit_edge, %if.end8.i.for.body.i22.i_crit_edge
  %i.066.i.i = phi i32 [ %inc.i31.i, %for.inc.i33.i.for.body.i22.i_crit_edge ], [ 0, %if.end8.i.for.body.i22.i_crit_edge ]
  %arrayidx.i20.i = getelementptr %struct.amdgpu_device, ptr %add.ptr.i, i32 0, i32 122, i32 %i.066.i.i
  %55 = ptrtoint ptr %arrayidx.i20.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %arrayidx.i20.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool.not.i21.i = icmp eq i8 %56, 0
  br i1 %tobool.not.i21.i, label %for.body.i22.i.for.inc.i33.i_crit_edge, label %lor.lhs.false.i25.i

for.body.i22.i.for.inc.i33.i_crit_edge:           ; preds = %for.body.i22.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i33.i

lor.lhs.false.i25.i:                              ; preds = %for.body.i22.i
  %hw.i23.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i20.i, i32 0, i32 2
  %57 = ptrtoint ptr %hw.i23.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %hw.i23.i, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %tobool4.not.i24.i = icmp eq i8 %58, 0
  br i1 %tobool4.not.i24.i, label %if.end.i27.i, label %lor.lhs.false.i25.i.for.inc.i33.i_crit_edge

lor.lhs.false.i25.i.for.inc.i33.i_crit_edge:      ; preds = %lor.lhs.false.i25.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i33.i

if.end.i27.i:                                     ; preds = %lor.lhs.false.i25.i
  %version.i26.i = getelementptr %struct.amdgpu_device, ptr %add.ptr.i, i32 0, i32 122, i32 %i.066.i.i, i32 1
  %59 = ptrtoint ptr %version.i26.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %version.i26.i, align 4
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %60, align 4
  %63 = zext i32 %62 to i64
  call void @__sanitizer_cov_trace_switch(i64 %63, ptr @__sancov_gen_cov_switch_values.432)
  switch i32 %62, label %if.end27.i.i [
    i32 0, label %if.end.i27.i.for.inc.i33.i_crit_edge
    i32 1, label %if.end.i27.i.for.inc.i33.i_crit_edge127
    i32 2, label %if.end.i27.i.for.inc.i33.i_crit_edge128
    i32 4, label %if.end.i27.i.for.inc.i33.i_crit_edge129
  ]

if.end.i27.i.for.inc.i33.i_crit_edge129:          ; preds = %if.end.i27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i33.i

if.end.i27.i.for.inc.i33.i_crit_edge128:          ; preds = %if.end.i27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i33.i

if.end.i27.i.for.inc.i33.i_crit_edge127:          ; preds = %if.end.i27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i33.i

if.end.i27.i.for.inc.i33.i_crit_edge:             ; preds = %if.end.i27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i33.i

if.end27.i.i:                                     ; preds = %if.end.i27.i
  %funcs.i28.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %60, i32 0, i32 4
  %64 = ptrtoint ptr %funcs.i28.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %funcs.i28.i, align 4
  %resume.i29.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %65, i32 0, i32 10
  %66 = ptrtoint ptr %resume.i29.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %resume.i29.i, align 4
  %call.i30.i = tail call i32 %67(ptr noundef %add.ptr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i30.i)
  %tobool31.not.i.i = icmp eq i32 %call.i30.i, 0
  br i1 %tobool31.not.i.i, label %if.end37.i.i, label %if.end27.i.i.cleanup.sink.split.i_crit_edge

if.end27.i.i.cleanup.sink.split.i_crit_edge:      ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.sink.split.i

if.end37.i.i:                                     ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %68 = ptrtoint ptr %hw.i23.i to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 1, ptr %hw.i23.i, align 2
  br label %for.inc.i33.i

for.inc.i33.i:                                    ; preds = %if.end37.i.i, %if.end.i27.i.for.inc.i33.i_crit_edge, %if.end.i27.i.for.inc.i33.i_crit_edge127, %if.end.i27.i.for.inc.i33.i_crit_edge128, %if.end.i27.i.for.inc.i33.i_crit_edge129, %lor.lhs.false.i25.i.for.inc.i33.i_crit_edge, %for.body.i22.i.for.inc.i33.i_crit_edge
  %inc.i31.i = add nuw nsw i32 %i.066.i.i, 1
  %69 = ptrtoint ptr %num_ip_blocks.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %num_ip_blocks.i.i, align 8
  %cmp.i32.i = icmp slt i32 %inc.i31.i, %70
  br i1 %cmp.i32.i, label %for.inc.i33.i.for.body.i22.i_crit_edge, label %for.inc.i33.i.if.end18_crit_edge

for.inc.i33.i.if.end18_crit_edge:                 ; preds = %for.inc.i33.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18

for.inc.i33.i.for.body.i22.i_crit_edge:           ; preds = %for.inc.i33.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i22.i

cleanup.sink.split.i:                             ; preds = %if.end27.i.i.cleanup.sink.split.i_crit_edge, %if.then20.i.i.cleanup.sink.split.i_crit_edge
  %version.i26.lcssa.sink.i = phi ptr [ %version.i26.i, %if.end27.i.i.cleanup.sink.split.i_crit_edge ], [ %version.i.i, %if.then20.i.i.cleanup.sink.split.i_crit_edge ]
  %call.i30.lcssa.sink.i = phi i32 [ %call.i30.i, %if.end27.i.i.cleanup.sink.split.i_crit_edge ], [ %call.i.i, %if.then20.i.i.cleanup.sink.split.i_crit_edge ]
  %71 = ptrtoint ptr %version.i26.lcssa.sink.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %version.i26.lcssa.sink.i, align 4
  %funcs36.i.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %72, i32 0, i32 4
  %73 = ptrtoint ptr %funcs36.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %funcs36.i.i, align 4
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %74, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.387, ptr noundef %76, i32 noundef %call.i30.lcssa.sink.i) #17
  br label %do.end16

do.end16:                                         ; preds = %cleanup.sink.split.i, %if.end4.i.do.end16_crit_edge, %if.end10.do.end16_crit_edge
  %retval.0.i.ph = phi i32 [ %call.i30.lcssa.sink.i, %cleanup.sink.split.i ], [ %call5.i, %if.end4.i.do.end16_crit_edge ], [ %call.i101, %if.end10.do.end16_crit_edge ]
  %77 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %add.ptr.i, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %78, ptr noundef nonnull @.str.182, i32 noundef %retval.0.i.ph) #20
  br label %cleanup

if.end18:                                         ; preds = %for.inc.i33.i.if.end18_crit_edge, %if.end8.i.if.end18_crit_edge
  tail call void @amdgpu_fence_driver_hw_init(ptr noundef %add.ptr.i) #17
  %call19 = tail call fastcc i32 @amdgpu_device_ip_late_init(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end22, label %if.end18.cleanup_crit_edge

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end22:                                         ; preds = %if.end18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %79 = load ptr, ptr @system_wq, align 4
  %delayed_init_work = getelementptr i8, ptr %dev, i32 90168
  %call.i104 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %79, ptr noundef %delayed_init_work, i32 noundef 200) #17
  %80 = ptrtoint ptr %in_s0ix to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %in_s0ix, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %81)
  %tobool26.not = icmp eq i8 %81, 0
  br i1 %tobool26.not, label %if.then27, label %if.end22.if.end33_crit_edge

if.end22.if.end33_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end33

if.then27:                                        ; preds = %if.end22
  %in_runpm = getelementptr i8, ptr %dev, i32 91473
  %82 = ptrtoint ptr %in_runpm to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %in_runpm, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %83)
  %tobool28 = icmp ne i8 %83, 0
  %call29 = tail call i32 @amdgpu_amdkfd_resume(ptr noundef %add.ptr.i, i1 noundef zeroext %tobool28) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.then27.if.end33_crit_edge, label %if.then27.cleanup_crit_edge

if.then27.cleanup_crit_edge:                      ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then27.if.end33_crit_edge:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end33

if.end33:                                         ; preds = %if.then27.if.end33_crit_edge, %if.end22.if.end33_crit_edge
  %call35 = tail call zeroext i1 @flush_delayed_work(ptr noundef %delayed_init_work) #17
  br i1 %fbcon, label %if.then37, label %if.end33.if.end39_crit_edge

if.end33.if.end39_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end39

if.then37:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #19
  %fb_helper = getelementptr inbounds %struct.drm_device, ptr %dev, i32 0, i32 36
  %84 = ptrtoint ptr %fb_helper to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %fb_helper, align 4
  tail call void @drm_fb_helper_set_suspend_unlocked(ptr noundef %85, i1 noundef zeroext false) #17
  br label %if.end39

if.end39:                                         ; preds = %if.then37, %if.end33.if.end39_crit_edge
  tail call void @drm_kms_helper_poll_enable(ptr noundef %dev) #17
  tail call void @amdgpu_ras_resume(ptr noundef %add.ptr.i) #17
  %dev40 = getelementptr inbounds %struct.drm_device, ptr %dev, i32 0, i32 2
  %86 = ptrtoint ptr %dev40 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %dev40, align 4
  %disable_depth = getelementptr inbounds %struct.device, ptr %87, i32 0, i32 12, i32 15
  %88 = ptrtoint ptr %disable_depth to i32
  call void @__asan_load2_noabort(i32 %88)
  %bf.load = load i16, ptr %disable_depth, align 4
  %89 = add i16 %bf.load, 8192
  store i16 %89, ptr %disable_depth, align 4
  %90 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %virt.i, align 8
  %and.i106 = and i32 %91, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i106)
  %tobool.not.i107 = icmp eq i32 %and.i106, 0
  br i1 %tobool.not.i107, label %lor.lhs.false.i, label %if.end39.if.then43_crit_edge

if.end39.if.then43_crit_edge:                     ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then43

lor.lhs.false.i:                                  ; preds = %if.end39
  %enable_virtual_display.i = getelementptr i8, ptr %dev, i32 21984
  %92 = ptrtoint ptr %enable_virtual_display.i to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %enable_virtual_display.i, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %93)
  %tobool1.not.i = icmp eq i8 %93, 0
  br i1 %tobool1.not.i, label %lor.lhs.false2.i, label %lor.lhs.false.i.if.then43_crit_edge

lor.lhs.false.i.if.then43_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then43

lor.lhs.false2.i:                                 ; preds = %lor.lhs.false.i
  %harvest_ip_mask.i = getelementptr i8, ptr %dev, i32 88292
  %94 = ptrtoint ptr %harvest_ip_mask.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %harvest_ip_mask.i, align 4
  %and3.i108 = and i32 %95, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i108)
  %tobool4.not.i109 = icmp eq i32 %and3.i108, 0
  br i1 %tobool4.not.i109, label %if.end.i111, label %lor.lhs.false2.i.if.then43_crit_edge

lor.lhs.false2.i.if.then43_crit_edge:             ; preds = %lor.lhs.false2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then43

if.end.i111:                                      ; preds = %lor.lhs.false2.i
  %asic_type.i110 = getelementptr i8, ptr %dev, i32 2360
  %96 = ptrtoint ptr %asic_type.i110 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %asic_type.i110, align 8
  %98 = zext i32 %97 to i64
  call void @__sanitizer_cov_trace_switch(i64 %98, ptr @__sancov_gen_cov_switch_values.433)
  switch i32 %97, label %sw.default.i.i [
    i32 4, label %if.end.i111.if.then43_crit_edge
    i32 10, label %if.end.i111.if.then43_crit_edge130
    i32 0, label %if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge
    i32 1, label %if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge131
    i32 2, label %if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge132
    i32 3, label %if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge133
    i32 5, label %if.end.i111.sw.bb2.i.i_crit_edge
    i32 6, label %if.end.i111.sw.bb2.i.i_crit_edge134
    i32 7, label %if.end.i111.sw.bb2.i.i_crit_edge135
    i32 9, label %if.end.i111.sw.bb2.i.i_crit_edge136
  ]

if.end.i111.sw.bb2.i.i_crit_edge136:              ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i.i

if.end.i111.sw.bb2.i.i_crit_edge135:              ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i.i

if.end.i111.sw.bb2.i.i_crit_edge134:              ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i.i

if.end.i111.sw.bb2.i.i_crit_edge:                 ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb2.i.i

if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge133: ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_has_dc_support.exit

if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge132: ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_has_dc_support.exit

if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge131: ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_has_dc_support.exit

if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge: ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_has_dc_support.exit

if.end.i111.if.then43_crit_edge130:               ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then43

if.end.i111.if.then43_crit_edge:                  ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then43

sw.bb2.i.i:                                       ; preds = %if.end.i111.sw.bb2.i.i_crit_edge, %if.end.i111.sw.bb2.i.i_crit_edge134, %if.end.i111.sw.bb2.i.i_crit_edge135, %if.end.i111.sw.bb2.i.i_crit_edge136
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %99 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %cmp3.i.i = icmp sgt i32 %99, 0
  br i1 %cmp3.i.i, label %sw.bb2.i.i.if.else_crit_edge, label %sw.bb2.i.i.if.then43_crit_edge

sw.bb2.i.i.if.then43_crit_edge:                   ; preds = %sw.bb2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then43

sw.bb2.i.i.if.else_crit_edge:                     ; preds = %sw.bb2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

sw.default.i.i:                                   ; preds = %if.end.i111
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %100 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %100)
  %cmp5.i.i.not = icmp eq i32 %100, 0
  br i1 %cmp5.i.i.not, label %sw.default.i.i.if.then43_crit_edge, label %sw.default.i.i.if.else_crit_edge

sw.default.i.i.if.else_crit_edge:                 ; preds = %sw.default.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

sw.default.i.i.if.then43_crit_edge:               ; preds = %sw.default.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then43

amdgpu_device_has_dc_support.exit:                ; preds = %if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge, %if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge131, %if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge132, %if.end.i111.amdgpu_device_has_dc_support.exit_crit_edge133
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dc to i32))
  %101 = load i32, ptr @amdgpu_dc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %101)
  %cmp.i.i112 = icmp sgt i32 %101, 0
  br i1 %cmp.i.i112, label %amdgpu_device_has_dc_support.exit.if.else_crit_edge, label %amdgpu_device_has_dc_support.exit.if.then43_crit_edge

amdgpu_device_has_dc_support.exit.if.then43_crit_edge: ; preds = %amdgpu_device_has_dc_support.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then43

amdgpu_device_has_dc_support.exit.if.else_crit_edge: ; preds = %amdgpu_device_has_dc_support.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then43:                                        ; preds = %amdgpu_device_has_dc_support.exit.if.then43_crit_edge, %sw.default.i.i.if.then43_crit_edge, %sw.bb2.i.i.if.then43_crit_edge, %if.end.i111.if.then43_crit_edge, %if.end.i111.if.then43_crit_edge130, %lor.lhs.false2.i.if.then43_crit_edge, %lor.lhs.false.i.if.then43_crit_edge, %if.end39.if.then43_crit_edge
  %call44 = tail call zeroext i1 @drm_helper_hpd_irq_event(ptr noundef %dev) #17
  br label %if.end45

if.else:                                          ; preds = %amdgpu_device_has_dc_support.exit.if.else_crit_edge, %sw.default.i.i.if.else_crit_edge, %sw.bb2.i.i.if.else_crit_edge
  tail call void @drm_kms_helper_hotplug_event(ptr noundef %dev) #17
  br label %if.end45

if.end45:                                         ; preds = %if.else, %if.then43
  %102 = ptrtoint ptr %dev40 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %dev40, align 4
  %disable_depth48 = getelementptr inbounds %struct.device, ptr %103, i32 0, i32 12, i32 15
  %104 = ptrtoint ptr %disable_depth48 to i32
  call void @__asan_load2_noabort(i32 %104)
  %bf.load49 = load i16, ptr %disable_depth48, align 4
  %105 = add i16 %bf.load49, -8192
  store i16 %105, ptr %disable_depth48, align 4
  %in_suspend = getelementptr i8, ptr %dev, i32 91013
  %106 = ptrtoint ptr %in_suspend to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 0, ptr %in_suspend, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end45, %if.then27.cleanup_crit_edge, %if.end18.cleanup_crit_edge, %do.end16, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i.ph, %do.end16 ], [ 0, %if.end45 ], [ 0, %entry.cleanup_crit_edge ], [ %call19, %if.end18.cleanup_crit_edge ], [ %call29, %if.then27.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_state_change_set(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_amdkfd_resume(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_kms_helper_poll_enable(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @drm_helper_hpd_irq_event(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_kms_helper_hotplug_event(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_has_job_running(ptr nocapture noundef readonly %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %cmp27 = phi i1 [ true, %entry ], [ %cmp, %for.inc.for.body_crit_edge ]
  %i.026 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 90, i32 %i.026
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %lor.lhs.false

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %thread = getelementptr inbounds %struct.amdgpu_ring, ptr %1, i32 0, i32 3, i32 11
  %2 = ptrtoint ptr %thread to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %thread, align 8
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %lor.lhs.false.for.inc_crit_edge, label %if.end

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %lor.lhs.false
  %job_list_lock = getelementptr inbounds %struct.amdgpu_ring, ptr %1, i32 0, i32 3, i32 13
  tail call void @_raw_spin_lock(ptr noundef %job_list_lock) #17
  %pending_list = getelementptr inbounds %struct.amdgpu_ring, ptr %1, i32 0, i32 3, i32 12
  %4 = ptrtoint ptr %pending_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %pending_list, align 4
  %cmp5.not = icmp eq ptr %5, %pending_list
  %add.ptr = getelementptr i8, ptr %5, i32 -4
  tail call void @_raw_spin_unlock(ptr noundef %job_list_lock) #17
  %tobool9.not25 = icmp eq ptr %add.ptr, null
  %tobool9.not = or i1 %cmp5.not, %tobool9.not25
  br i1 %tobool9.not, label %if.end.for.inc_crit_edge, label %if.end.cleanup12_crit_edge

if.end.cleanup12_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup12

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

for.inc:                                          ; preds = %if.end.for.inc_crit_edge, %lor.lhs.false.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.026, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 27, i32 %i.026)
  %cmp = icmp ult i32 %i.026, 27
  %exitcond.not = icmp eq i32 %inc, 28
  br i1 %exitcond.not, label %for.inc.cleanup12_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.cleanup12_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup12

cleanup12:                                        ; preds = %for.inc.cleanup12_crit_edge, %if.end.cleanup12_crit_edge
  %cmp.lcssa = phi i1 [ %cmp27, %if.end.cleanup12_crit_edge ], [ %cmp, %for.inc.cleanup12_crit_edge ]
  ret i1 %cmp.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_should_recover_gpu(ptr noundef %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end.i:                                         ; preds = %entry
  %asic_funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %2 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %asic_funcs.i, align 4
  %need_full_reset.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %need_full_reset.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %need_full_reset.i, align 4
  %call.i = tail call zeroext i1 %5(ptr noundef %adev) #17
  br i1 %call.i, label %if.end.i.if.end_crit_edge, label %for.cond.preheader.i

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

for.cond.preheader.i:                             ; preds = %if.end.i
  %num_ip_blocks.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %6 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp53.i = icmp sgt i32 %7, 0
  br i1 %cmp53.i, label %for.cond.preheader.i.for.body.i.outer_crit_edge, label %for.cond.preheader.i.return.sink.split_crit_edge

for.cond.preheader.i.return.sink.split_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

for.cond.preheader.i.for.body.i.outer_crit_edge:  ; preds = %for.cond.preheader.i
  br label %for.body.i.outer

for.body.i.outer:                                 ; preds = %for.inc.i.thread.for.body.i.outer_crit_edge, %for.cond.preheader.i.for.body.i.outer_crit_edge
  %asic_hang.0.off056.i.ph = phi i1 [ true, %for.inc.i.thread.for.body.i.outer_crit_edge ], [ false, %for.cond.preheader.i.for.body.i.outer_crit_edge ]
  %i.054.i.ph = phi i32 [ %inc.i19, %for.inc.i.thread.for.body.i.outer_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i.outer_crit_edge ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.i.outer
  %i.054.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ %i.054.i.ph, %for.body.i.outer ]
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.054.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool3.not.i = icmp eq i8 %9, 0
  br i1 %tobool3.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end5.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end5.i:                                        ; preds = %for.body.i
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.054.i, i32 1
  %10 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %version.i, align 4
  %funcs.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %funcs.i, align 4
  %check_soft_reset.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %13, i32 0, i32 13
  %14 = ptrtoint ptr %check_soft_reset.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %check_soft_reset.i, align 4
  %tobool8.not.i = icmp eq ptr %15, null
  br i1 %tobool8.not.i, label %if.end5.i.if.end19.i_crit_edge, label %if.then9.i

if.end5.i.if.end19.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19.i

if.then9.i:                                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #19
  %call15.i = tail call zeroext i1 %15(ptr noundef %adev) #17
  %hang.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i, i32 0, i32 4
  %frombool.i = zext i1 %call15.i to i8
  %16 = ptrtoint ptr %hang.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %frombool.i, ptr %hang.i, align 4
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then9.i, %if.end5.i.if.end19.i_crit_edge
  %hang23.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i, i32 0, i32 4
  %17 = ptrtoint ptr %hang23.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %hang23.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool24.not.i = icmp eq i8 %18, 0
  br i1 %tobool24.not.i, label %if.end19.i.for.inc.i_crit_edge, label %for.inc.i.thread

if.end19.i.for.inc.i_crit_edge:                   ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end19.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.054.i, 1
  %19 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i = icmp slt i32 %inc.i, %20
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %amdgpu_device_ip_check_soft_reset.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.inc.i.thread:                                 ; preds = %if.end19.i
  %21 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adev, align 8
  %23 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %version.i, align 4
  %funcs29.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %funcs29.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %funcs29.i, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %22, ptr noundef nonnull @.str.383, ptr noundef %28) #20
  %inc.i19 = add nuw nsw i32 %i.054.i, 1
  %29 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i20 = icmp slt i32 %inc.i19, %30
  br i1 %cmp.i20, label %for.inc.i.thread.for.body.i.outer_crit_edge, label %for.inc.i.thread.if.end_crit_edge

for.inc.i.thread.if.end_crit_edge:                ; preds = %for.inc.i.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

for.inc.i.thread.for.body.i.outer_crit_edge:      ; preds = %for.inc.i.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.outer

amdgpu_device_ip_check_soft_reset.exit:           ; preds = %for.inc.i
  br i1 %asic_hang.0.off056.i.ph, label %amdgpu_device_ip_check_soft_reset.exit.if.end_crit_edge, label %amdgpu_device_ip_check_soft_reset.exit.return.sink.split_crit_edge

amdgpu_device_ip_check_soft_reset.exit.return.sink.split_crit_edge: ; preds = %amdgpu_device_ip_check_soft_reset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

amdgpu_device_ip_check_soft_reset.exit.if.end_crit_edge: ; preds = %amdgpu_device_ip_check_soft_reset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %amdgpu_device_ip_check_soft_reset.exit.if.end_crit_edge, %for.inc.i.thread.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_gpu_recovery to i32))
  %31 = load i32, ptr @amdgpu_gpu_recovery, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp = icmp eq i32 %31, 0
  br i1 %cmp, label %if.end.return.sink.split_crit_edge, label %if.end2

if.end.return.sink.split_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.end2:                                          ; preds = %if.end
  %32 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %virt.i, align 8
  %and = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %31)
  %cmp5 = icmp eq i32 %31, -1
  %or.cond = select i1 %tobool.not, i1 %cmp5, i1 false
  br i1 %or.cond, label %if.then6, label %if.end2.return_crit_edge

if.end2.return_crit_edge:                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.then6:                                         ; preds = %if.end2
  %asic_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %34 = ptrtoint ptr %asic_type to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %asic_type, align 8
  %36 = zext i32 %35 to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.434)
  switch i32 %35, label %if.then6.return_crit_edge [
    i32 2, label %if.then6.return.sink.split_crit_edge
    i32 0, label %if.then6.return.sink.split_crit_edge31
    i32 1, label %if.then6.return.sink.split_crit_edge32
    i32 3, label %if.then6.return.sink.split_crit_edge33
    i32 4, label %if.then6.return.sink.split_crit_edge34
    i32 6, label %if.then6.return.sink.split_crit_edge35
    i32 7, label %if.then6.return.sink.split_crit_edge36
    i32 9, label %if.then6.return.sink.split_crit_edge37
    i32 13, label %if.then6.return.sink.split_crit_edge38
    i32 14, label %if.then6.return.sink.split_crit_edge39
    i32 27, label %if.then6.return.sink.split_crit_edge40
  ]

if.then6.return.sink.split_crit_edge40:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge39:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge38:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge37:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge36:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge35:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge34:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge33:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge32:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge31:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return.sink.split_crit_edge:             ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return.sink.split

if.then6.return_crit_edge:                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

return.sink.split:                                ; preds = %if.then6.return.sink.split_crit_edge, %if.then6.return.sink.split_crit_edge31, %if.then6.return.sink.split_crit_edge32, %if.then6.return.sink.split_crit_edge33, %if.then6.return.sink.split_crit_edge34, %if.then6.return.sink.split_crit_edge35, %if.then6.return.sink.split_crit_edge36, %if.then6.return.sink.split_crit_edge37, %if.then6.return.sink.split_crit_edge38, %if.then6.return.sink.split_crit_edge39, %if.then6.return.sink.split_crit_edge40, %if.end.return.sink.split_crit_edge, %amdgpu_device_ip_check_soft_reset.exit.return.sink.split_crit_edge, %for.cond.preheader.i.return.sink.split_crit_edge
  %.str.189.sink = phi ptr [ @.str.186, %for.cond.preheader.i.return.sink.split_crit_edge ], [ @.str.186, %amdgpu_device_ip_check_soft_reset.exit.return.sink.split_crit_edge ], [ @.str.189, %if.then6.return.sink.split_crit_edge ], [ @.str.189, %if.then6.return.sink.split_crit_edge31 ], [ @.str.189, %if.then6.return.sink.split_crit_edge32 ], [ @.str.189, %if.then6.return.sink.split_crit_edge33 ], [ @.str.189, %if.then6.return.sink.split_crit_edge34 ], [ @.str.189, %if.then6.return.sink.split_crit_edge35 ], [ @.str.189, %if.then6.return.sink.split_crit_edge36 ], [ @.str.189, %if.then6.return.sink.split_crit_edge37 ], [ @.str.189, %if.then6.return.sink.split_crit_edge38 ], [ @.str.189, %if.then6.return.sink.split_crit_edge39 ], [ @.str.189, %if.then6.return.sink.split_crit_edge40 ], [ @.str.189, %if.end.return.sink.split_crit_edge ]
  %37 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %38, ptr noundef nonnull %.str.189.sink) #20
  br label %return

return:                                           ; preds = %return.sink.split, %if.then6.return_crit_edge, %if.end2.return_crit_edge
  %retval.0 = phi i1 [ true, %if.end2.return_crit_edge ], [ true, %if.then6.return_crit_edge ], [ false, %return.sink.split ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_mode1_reset(ptr noundef %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @amdgpu_atombios_scratch_regs_engine_hung(ptr noundef %adev, i1 noundef zeroext true) #17
  %0 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %1, ptr noundef nonnull @.str.191) #20
  %pdev = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  tail call void @pci_clear_master(ptr noundef %3) #17
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %driver_data.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44, i32 8
  %6 = ptrtoint ptr %driver_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %driver_data.i.i.i, align 4
  %call2.i = tail call i32 @pci_save_state(ptr noundef %5) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.end.i

if.then.i:                                        ; preds = %entry
  %pci_state.i = getelementptr i8, ptr %7, i32 91664
  %8 = ptrtoint ptr %pci_state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pci_state.i, align 8
  tail call void @kfree(ptr noundef %9) #17
  %call3.i = tail call ptr @pci_store_saved_state(ptr noundef %5) #17
  %10 = ptrtoint ptr %pci_state.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call3.i, ptr %pci_state.i, align 8
  %tobool6.not.i = icmp eq ptr %call3.i, null
  br i1 %tobool6.not.i, label %if.then7.i, label %if.then.i.amdgpu_device_cache_pci_state.exit_crit_edge

if.then.i.amdgpu_device_cache_pci_state.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_cache_pci_state.exit

if.then7.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.264) #17
  br label %amdgpu_device_cache_pci_state.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.265, i32 noundef %call2.i) #20
  br label %amdgpu_device_cache_pci_state.exit

amdgpu_device_cache_pci_state.exit:               ; preds = %do.end.i, %if.then7.i, %if.then.i.amdgpu_device_cache_pci_state.exit_crit_edge
  %call2 = tail call zeroext i1 @amdgpu_dpm_is_mode1_reset_supported(ptr noundef %adev) #17
  %11 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %adev, align 8
  br i1 %call2, label %do.end5, label %do.end10

do.end5:                                          ; preds = %amdgpu_device_cache_pci_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %12, ptr noundef nonnull @.str.194) #20
  %call7 = tail call i32 @amdgpu_dpm_mode1_reset(ptr noundef %adev) #17
  br label %if.end

do.end10:                                         ; preds = %amdgpu_device_cache_pci_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %12, ptr noundef nonnull @.str.197) #20
  %call12 = tail call i32 @psp_gpu_reset(ptr noundef %adev) #17
  br label %if.end

if.end:                                           ; preds = %do.end10, %do.end5
  %ret.0 = phi i32 [ %call7, %do.end5 ], [ %call12, %do.end10 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool.not = icmp eq i32 %ret.0, 0
  br i1 %tobool.not, label %if.end.if.end18_crit_edge, label %do.end16

if.end.if.end18_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %13 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %14, ptr noundef nonnull @.str.200) #20
  br label %if.end18

if.end18:                                         ; preds = %do.end16, %if.end.if.end18_crit_edge
  %15 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pdev, align 4
  %driver_data.i.i.i43 = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44, i32 8
  %17 = ptrtoint ptr %driver_data.i.i.i43 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %driver_data.i.i.i43, align 4
  %pci_state.i44 = getelementptr i8, ptr %18, i32 91664
  %19 = ptrtoint ptr %pci_state.i44 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pci_state.i44, align 8
  %tobool.not.i45 = icmp eq ptr %20, null
  br i1 %tobool.not.i45, label %if.end18.amdgpu_device_load_pci_state.exit_crit_edge, label %if.end.i

if.end18.amdgpu_device_load_pci_state.exit_crit_edge: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_load_pci_state.exit

if.end.i:                                         ; preds = %if.end18
  %call3.i46 = tail call i32 @pci_load_saved_state(ptr noundef %16, ptr noundef nonnull %20) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i46)
  %tobool4.not.i = icmp eq i32 %call3.i46, 0
  br i1 %tobool4.not.i, label %if.then5.i, label %do.end.i47

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @pci_restore_state(ptr noundef %16) #17
  br label %amdgpu_device_load_pci_state.exit

do.end.i47:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %call6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.267, i32 noundef %call3.i46) #20
  br label %amdgpu_device_load_pci_state.exit

amdgpu_device_load_pci_state.exit:                ; preds = %do.end.i47, %if.then5.i, %if.end18.amdgpu_device_load_pci_state.exit_crit_edge
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 101, i32 4
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 11
  %21 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp51.not = icmp eq i32 %22, 0
  br i1 %cmp51.not, label %amdgpu_device_load_pci_state.exit.for.end_crit_edge, label %amdgpu_device_load_pci_state.exit.for.body_crit_edge

amdgpu_device_load_pci_state.exit.for.body_crit_edge: ; preds = %amdgpu_device_load_pci_state.exit
  br label %for.body

amdgpu_device_load_pci_state.exit.for.end_crit_edge: ; preds = %amdgpu_device_load_pci_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %amdgpu_device_load_pci_state.exit.for.body_crit_edge
  %i.052 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %amdgpu_device_load_pci_state.exit.for.body_crit_edge ]
  %23 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %funcs, align 8
  %get_memsize = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %24, i32 0, i32 9
  %25 = ptrtoint ptr %get_memsize to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %get_memsize, align 4
  %call21 = tail call i32 %26(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call21)
  %cmp22.not = icmp eq i32 %call21, -1
  br i1 %cmp22.not, label %for.inc, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc:                                          ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %27 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %27(i32 noundef 214748) #17
  %inc = add nuw i32 %i.052, 1
  %28 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp ult i32 %inc, %29
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.body.for.end_crit_edge, %amdgpu_device_load_pci_state.exit.for.end_crit_edge
  tail call void @amdgpu_atombios_scratch_regs_engine_hung(ptr noundef %adev, i1 noundef zeroext false) #17
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_atombios_scratch_regs_engine_hung(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_clear_master(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_dpm_is_mode1_reset_supported(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_dpm_mode1_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @psp_gpu_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @amdgpu_device_load_pci_state(ptr noundef %pdev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %pci_state = getelementptr i8, ptr %1, i32 91664
  %2 = ptrtoint ptr %pci_state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pci_state, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @pci_load_saved_state(ptr noundef %pdev, ptr noundef nonnull %3) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.then5, label %do.end

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @pci_restore_state(ptr noundef %pdev) #17
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.267, i32 noundef %call3) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then5, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %do.end ], [ true, %if.then5 ], [ false, %entry.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_pre_asic_reset(ptr noundef %adev, ptr noundef %reset_context) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags, align 4
  %and1.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  %reset_req_dev = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 1
  %2 = ptrtoint ptr %reset_req_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %reset_req_dev, align 4
  %cmp = icmp eq ptr %3, %adev
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %job1 = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 2
  %4 = ptrtoint ptr %job1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %job1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %job.0 = phi ptr [ %5, %if.then ], [ null, %entry.if.end_crit_edge ]
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end.for.body.preheader_crit_edge, label %if.then3

if.end.for.body.preheader_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.preheader

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_virt_fini_data_exchange(ptr noundef %adev) #17
  br label %for.body.preheader

for.body.preheader:                               ; preds = %if.then3, %if.end.for.body.preheader_crit_edge
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.preheader
  %i.0170 = phi i32 [ %inc, %cleanup.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 90, i32 %i.0170
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %tobool6.not = icmp eq ptr %9, null
  br i1 %tobool6.not, label %for.body.cleanup_crit_edge, label %lor.lhs.false

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false:                                    ; preds = %for.body
  %thread = getelementptr inbounds %struct.amdgpu_ring, ptr %9, i32 0, i32 3, i32 11
  %10 = ptrtoint ptr %thread to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %thread, align 8
  %tobool7.not = icmp eq ptr %11, null
  br i1 %tobool7.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end9

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end9:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_fence_driver_clear_job_fences(ptr noundef nonnull %9) #17
  tail call void @amdgpu_fence_driver_force_completion(ptr noundef nonnull %9) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %lor.lhs.false.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.0170, 1
  %exitcond.not = icmp eq i32 %inc, 28
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %cleanup
  %tobool10.not = icmp eq ptr %job.0, null
  br i1 %tobool10.not, label %for.end.if.end13_crit_edge, label %land.lhs.true

for.end.if.end13_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end13

land.lhs.true:                                    ; preds = %for.end
  %vm = getelementptr inbounds %struct.amdgpu_job, ptr %job.0, i32 0, i32 1
  %12 = ptrtoint ptr %vm to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vm, align 8
  %tobool11.not = icmp eq ptr %13, null
  br i1 %tobool11.not, label %land.lhs.true.if.end13_crit_edge, label %if.then12

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end13

if.then12:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @drm_sched_increase_karma(ptr noundef nonnull %job.0) #17
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %land.lhs.true.if.end13_crit_edge, %for.end.if.end13_crit_edge
  %call14 = tail call i32 @amdgpu_reset_prepare_hwcontext(ptr noundef %adev, ptr noundef %reset_context) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -38, i32 %call14)
  %cmp15 = icmp eq i32 %call14, -38
  br i1 %cmp15, label %if.then16, label %if.end13.cleanup50_crit_edge

if.end13.cleanup50_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup50

if.then16:                                        ; preds = %if.end13
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and20 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %if.then22, label %if.then16.cleanup50_crit_edge

if.then16.cleanup50_crit_edge:                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup50

if.then22:                                        ; preds = %if.then16
  br i1 %tobool.not, label %if.then24, label %if.then22.if.then40_crit_edge

if.then22.if.then40_crit_edge:                    ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40

if.then24:                                        ; preds = %if.then22
  %asic_funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %16 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %asic_funcs.i, align 4
  %need_full_reset.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %17, i32 0, i32 14
  %18 = ptrtoint ptr %need_full_reset.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %need_full_reset.i, align 4
  %call.i = tail call zeroext i1 %19(ptr noundef %adev) #17
  br i1 %call.i, label %if.then24.if.then40_crit_edge, label %for.cond.preheader.i

if.then24.if.then40_crit_edge:                    ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40

for.cond.preheader.i:                             ; preds = %if.then24
  %num_ip_blocks.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %20 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp55.i = icmp sgt i32 %21, 0
  br i1 %cmp55.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.lor.lhs.false34_crit_edge

for.cond.preheader.i.lor.lhs.false34_crit_edge:   ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false34

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.056.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.056.i
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool.not.i = icmp eq i8 %23, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end2.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end2.i:                                        ; preds = %for.body.i
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.056.i, i32 1
  %24 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %version.i, align 4
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %28 = zext i32 %27 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.435)
  switch i32 %27, label %if.end2.i.for.inc.i_crit_edge [
    i32 1, label %if.end2.i.if.then29.i_crit_edge
    i32 3, label %if.end2.i.if.then29.i_crit_edge193
    i32 10, label %if.end2.i.if.then29.i_crit_edge194
    i32 5, label %if.end2.i.if.then29.i_crit_edge195
    i32 4, label %if.end2.i.if.then29.i_crit_edge196
  ]

if.end2.i.if.then29.i_crit_edge196:               ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.if.then29.i_crit_edge195:               ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.if.then29.i_crit_edge194:               ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.if.then29.i_crit_edge193:               ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.if.then29.i_crit_edge:                  ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.for.inc.i_crit_edge:                    ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then29.i:                                      ; preds = %if.end2.i.if.then29.i_crit_edge, %if.end2.i.if.then29.i_crit_edge193, %if.end2.i.if.then29.i_crit_edge194, %if.end2.i.if.then29.i_crit_edge195, %if.end2.i.if.then29.i_crit_edge196
  %hang.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i, i32 0, i32 4
  %29 = ptrtoint ptr %hang.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %hang.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool33.not.i = icmp eq i8 %30, 0
  br i1 %tobool33.not.i, label %if.then29.i.for.inc.i_crit_edge, label %if.then29.i.if.then40.sink.split_crit_edge

if.then29.i.if.then40.sink.split_crit_edge:       ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40.sink.split

if.then29.i.for.inc.i_crit_edge:                  ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then29.i.for.inc.i_crit_edge, %if.end2.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.056.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %21
  br i1 %exitcond.not.i, label %if.then29, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

if.then29:                                        ; preds = %for.inc.i
  %31 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pr172 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr172)
  %cmp1.i = icmp sgt i32 %.pr172, 0
  br i1 %cmp1.i, label %if.then29.for.body.i87_crit_edge, label %if.then29.lor.lhs.false34_crit_edge

if.then29.lor.lhs.false34_crit_edge:              ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false34

if.then29.for.body.i87_crit_edge:                 ; preds = %if.then29
  br label %for.body.i87

for.body.i87:                                     ; preds = %for.inc.i92.for.body.i87_crit_edge, %if.then29.for.body.i87_crit_edge
  %i.02.i = phi i32 [ %inc.i91, %for.inc.i92.for.body.i87_crit_edge ], [ 0, %if.then29.for.body.i87_crit_edge ]
  %arrayidx.i85 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.02.i
  %32 = ptrtoint ptr %arrayidx.i85 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx.i85, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool.not.i86 = icmp eq i8 %33, 0
  br i1 %tobool.not.i86, label %for.body.i87.for.inc.i92_crit_edge, label %if.end.i

for.body.i87.for.inc.i92_crit_edge:               ; preds = %for.body.i87
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i92

if.end.i:                                         ; preds = %for.body.i87
  %hang.i88 = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i85, i32 0, i32 4
  %34 = ptrtoint ptr %hang.i88 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %hang.i88, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool4.not.i = icmp eq i8 %35, 0
  br i1 %tobool4.not.i, label %if.end.i.for.inc.i92_crit_edge, label %land.lhs.true.i

if.end.i.for.inc.i92_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i92

land.lhs.true.i:                                  ; preds = %if.end.i
  %version.i89 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.02.i, i32 1
  %36 = ptrtoint ptr %version.i89 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %version.i89, align 4
  %funcs.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %37, i32 0, i32 4
  %38 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %funcs.i, align 4
  %pre_soft_reset.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %39, i32 0, i32 14
  %40 = ptrtoint ptr %pre_soft_reset.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pre_soft_reset.i, align 4
  %tobool7.not.i = icmp eq ptr %41, null
  br i1 %tobool7.not.i, label %land.lhs.true.i.for.inc.i92_crit_edge, label %if.then8.i

land.lhs.true.i.for.inc.i92_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i92

if.then8.i:                                       ; preds = %land.lhs.true.i
  %call.i90 = tail call i32 %41(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i90)
  %tobool14.not.i = icmp eq i32 %call.i90, 0
  br i1 %tobool14.not.i, label %if.then8.i.for.inc.i92_crit_edge, label %amdgpu_device_ip_pre_soft_reset.exitthread-pre-split

if.then8.i.for.inc.i92_crit_edge:                 ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i92

for.inc.i92:                                      ; preds = %if.then8.i.for.inc.i92_crit_edge, %land.lhs.true.i.for.inc.i92_crit_edge, %if.end.i.for.inc.i92_crit_edge, %for.body.i87.for.inc.i92_crit_edge
  %inc.i91 = add nuw nsw i32 %i.02.i, 1
  %42 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i = icmp slt i32 %inc.i91, %43
  br i1 %cmp.i, label %for.inc.i92.for.body.i87_crit_edge, label %for.inc.i92.amdgpu_device_ip_pre_soft_reset.exit_crit_edge

for.inc.i92.amdgpu_device_ip_pre_soft_reset.exit_crit_edge: ; preds = %for.inc.i92
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_pre_soft_reset.exit

for.inc.i92.for.body.i87_crit_edge:               ; preds = %for.inc.i92
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i87

amdgpu_device_ip_pre_soft_reset.exitthread-pre-split: ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #19
  %44 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %.pr = load i32, ptr %num_ip_blocks.i, align 8
  br label %amdgpu_device_ip_pre_soft_reset.exit

amdgpu_device_ip_pre_soft_reset.exit:             ; preds = %amdgpu_device_ip_pre_soft_reset.exitthread-pre-split, %for.inc.i92.amdgpu_device_ip_pre_soft_reset.exit_crit_edge
  %45 = phi i32 [ %.pr, %amdgpu_device_ip_pre_soft_reset.exitthread-pre-split ], [ %43, %for.inc.i92.amdgpu_device_ip_pre_soft_reset.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp30.i = icmp sgt i32 %45, 0
  br i1 %cmp30.i, label %amdgpu_device_ip_pre_soft_reset.exit.for.body.i96_crit_edge, label %amdgpu_device_ip_pre_soft_reset.exit.amdgpu_device_ip_soft_reset.exitthread-pre-split_crit_edge

amdgpu_device_ip_pre_soft_reset.exit.amdgpu_device_ip_soft_reset.exitthread-pre-split_crit_edge: ; preds = %amdgpu_device_ip_pre_soft_reset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_soft_reset.exitthread-pre-split

amdgpu_device_ip_pre_soft_reset.exit.for.body.i96_crit_edge: ; preds = %amdgpu_device_ip_pre_soft_reset.exit
  br label %for.body.i96

for.body.i96:                                     ; preds = %for.inc.i109.for.body.i96_crit_edge, %amdgpu_device_ip_pre_soft_reset.exit.for.body.i96_crit_edge
  %i.031.i = phi i32 [ %inc.i107, %for.inc.i109.for.body.i96_crit_edge ], [ 0, %amdgpu_device_ip_pre_soft_reset.exit.for.body.i96_crit_edge ]
  %arrayidx.i94 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.031.i
  %46 = ptrtoint ptr %arrayidx.i94 to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %arrayidx.i94, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool.not.i95 = icmp eq i8 %47, 0
  br i1 %tobool.not.i95, label %for.body.i96.for.inc.i109_crit_edge, label %if.end.i99

for.body.i96.for.inc.i109_crit_edge:              ; preds = %for.body.i96
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i109

if.end.i99:                                       ; preds = %for.body.i96
  %hang.i97 = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i94, i32 0, i32 4
  %48 = ptrtoint ptr %hang.i97 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %hang.i97, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool4.not.i98 = icmp eq i8 %49, 0
  br i1 %tobool4.not.i98, label %if.end.i99.for.inc.i109_crit_edge, label %land.lhs.true.i103

if.end.i99.for.inc.i109_crit_edge:                ; preds = %if.end.i99
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i109

land.lhs.true.i103:                               ; preds = %if.end.i99
  %version.i100 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.031.i, i32 1
  %50 = ptrtoint ptr %version.i100 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %version.i100, align 4
  %funcs.i101 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %funcs.i101 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %funcs.i101, align 4
  %soft_reset.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %53, i32 0, i32 15
  %54 = ptrtoint ptr %soft_reset.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %soft_reset.i, align 4
  %tobool7.not.i102 = icmp eq ptr %55, null
  br i1 %tobool7.not.i102, label %land.lhs.true.i103.for.inc.i109_crit_edge, label %if.then8.i106

land.lhs.true.i103.for.inc.i109_crit_edge:        ; preds = %land.lhs.true.i103
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i109

if.then8.i106:                                    ; preds = %land.lhs.true.i103
  %call.i104 = tail call i32 %55(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i104)
  %tobool14.not.i105 = icmp eq i32 %call.i104, 0
  br i1 %tobool14.not.i105, label %if.then8.i106.for.inc.i109_crit_edge, label %if.then8.i106.amdgpu_device_ip_soft_reset.exitthread-pre-split_crit_edge

if.then8.i106.amdgpu_device_ip_soft_reset.exitthread-pre-split_crit_edge: ; preds = %if.then8.i106
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_soft_reset.exitthread-pre-split

if.then8.i106.for.inc.i109_crit_edge:             ; preds = %if.then8.i106
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i109

for.inc.i109:                                     ; preds = %if.then8.i106.for.inc.i109_crit_edge, %land.lhs.true.i103.for.inc.i109_crit_edge, %if.end.i99.for.inc.i109_crit_edge, %for.body.i96.for.inc.i109_crit_edge
  %inc.i107 = add nuw nsw i32 %i.031.i, 1
  %56 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i108 = icmp slt i32 %inc.i107, %57
  br i1 %cmp.i108, label %for.inc.i109.for.body.i96_crit_edge, label %for.inc.i109.amdgpu_device_ip_soft_reset.exit_crit_edge

for.inc.i109.amdgpu_device_ip_soft_reset.exit_crit_edge: ; preds = %for.inc.i109
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_soft_reset.exit

for.inc.i109.for.body.i96_crit_edge:              ; preds = %for.inc.i109
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i96

amdgpu_device_ip_soft_reset.exitthread-pre-split: ; preds = %if.then8.i106.amdgpu_device_ip_soft_reset.exitthread-pre-split_crit_edge, %amdgpu_device_ip_pre_soft_reset.exit.amdgpu_device_ip_soft_reset.exitthread-pre-split_crit_edge
  %retval.0.i110.ph = phi i32 [ 0, %amdgpu_device_ip_pre_soft_reset.exit.amdgpu_device_ip_soft_reset.exitthread-pre-split_crit_edge ], [ %call.i104, %if.then8.i106.amdgpu_device_ip_soft_reset.exitthread-pre-split_crit_edge ]
  %58 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %.pr151 = load i32, ptr %num_ip_blocks.i, align 8
  br label %amdgpu_device_ip_soft_reset.exit

amdgpu_device_ip_soft_reset.exit:                 ; preds = %amdgpu_device_ip_soft_reset.exitthread-pre-split, %for.inc.i109.amdgpu_device_ip_soft_reset.exit_crit_edge
  %59 = phi i32 [ %.pr151, %amdgpu_device_ip_soft_reset.exitthread-pre-split ], [ %57, %for.inc.i109.amdgpu_device_ip_soft_reset.exit_crit_edge ]
  %retval.0.i110 = phi i32 [ %retval.0.i110.ph, %amdgpu_device_ip_soft_reset.exitthread-pre-split ], [ 0, %for.inc.i109.amdgpu_device_ip_soft_reset.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %cmp3.i = icmp sgt i32 %59, 0
  br i1 %cmp3.i, label %amdgpu_device_ip_soft_reset.exit.for.body.i114_crit_edge, label %amdgpu_device_ip_soft_reset.exit.amdgpu_device_ip_post_soft_reset.exit_crit_edge

amdgpu_device_ip_soft_reset.exit.amdgpu_device_ip_post_soft_reset.exit_crit_edge: ; preds = %amdgpu_device_ip_soft_reset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_post_soft_reset.exit

amdgpu_device_ip_soft_reset.exit.for.body.i114_crit_edge: ; preds = %amdgpu_device_ip_soft_reset.exit
  br label %for.body.i114

for.body.i114:                                    ; preds = %for.inc.i125.for.body.i114_crit_edge, %amdgpu_device_ip_soft_reset.exit.for.body.i114_crit_edge
  %i.04.i = phi i32 [ %inc.i123, %for.inc.i125.for.body.i114_crit_edge ], [ 0, %amdgpu_device_ip_soft_reset.exit.for.body.i114_crit_edge ]
  %arrayidx.i112 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.04.i
  %60 = ptrtoint ptr %arrayidx.i112 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %arrayidx.i112, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %tobool.not.i113 = icmp eq i8 %61, 0
  br i1 %tobool.not.i113, label %for.body.i114.for.inc.i125_crit_edge, label %if.end.i117

for.body.i114.for.inc.i125_crit_edge:             ; preds = %for.body.i114
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i125

if.end.i117:                                      ; preds = %for.body.i114
  %hang.i115 = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i112, i32 0, i32 4
  %62 = ptrtoint ptr %hang.i115 to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %hang.i115, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool4.not.i116 = icmp eq i8 %63, 0
  br i1 %tobool4.not.i116, label %if.end.i117.for.inc.i125_crit_edge, label %land.lhs.true.i121

if.end.i117.for.inc.i125_crit_edge:               ; preds = %if.end.i117
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i125

land.lhs.true.i121:                               ; preds = %if.end.i117
  %version.i118 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.04.i, i32 1
  %64 = ptrtoint ptr %version.i118 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %version.i118, align 4
  %funcs.i119 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %65, i32 0, i32 4
  %66 = ptrtoint ptr %funcs.i119 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %funcs.i119, align 4
  %post_soft_reset.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %67, i32 0, i32 16
  %68 = ptrtoint ptr %post_soft_reset.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %post_soft_reset.i, align 4
  %tobool7.not.i120 = icmp eq ptr %69, null
  br i1 %tobool7.not.i120, label %land.lhs.true.i121.for.inc.i125_crit_edge, label %if.end14.i

land.lhs.true.i121.for.inc.i125_crit_edge:        ; preds = %land.lhs.true.i121
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i125

if.end14.i:                                       ; preds = %land.lhs.true.i121
  %call.i122 = tail call i32 %69(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i122)
  %tobool15.not.i = icmp eq i32 %call.i122, 0
  br i1 %tobool15.not.i, label %if.end14.i.for.inc.i125_crit_edge, label %if.end14.i.amdgpu_device_ip_post_soft_reset.exit_crit_edge

if.end14.i.amdgpu_device_ip_post_soft_reset.exit_crit_edge: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_post_soft_reset.exit

if.end14.i.for.inc.i125_crit_edge:                ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i125

for.inc.i125:                                     ; preds = %if.end14.i.for.inc.i125_crit_edge, %land.lhs.true.i121.for.inc.i125_crit_edge, %if.end.i117.for.inc.i125_crit_edge, %for.body.i114.for.inc.i125_crit_edge
  %inc.i123 = add nuw nsw i32 %i.04.i, 1
  %70 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i124 = icmp slt i32 %inc.i123, %71
  br i1 %cmp.i124, label %for.inc.i125.for.body.i114_crit_edge, label %for.inc.i125.amdgpu_device_ip_post_soft_reset.exit_crit_edge

for.inc.i125.amdgpu_device_ip_post_soft_reset.exit_crit_edge: ; preds = %for.inc.i125
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_ip_post_soft_reset.exit

for.inc.i125.for.body.i114_crit_edge:             ; preds = %for.inc.i125
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i114

amdgpu_device_ip_post_soft_reset.exit:            ; preds = %for.inc.i125.amdgpu_device_ip_post_soft_reset.exit_crit_edge, %if.end14.i.amdgpu_device_ip_post_soft_reset.exit_crit_edge, %amdgpu_device_ip_soft_reset.exit.amdgpu_device_ip_post_soft_reset.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i110)
  %tobool33.not = icmp eq i32 %retval.0.i110, 0
  br i1 %tobool33.not, label %amdgpu_device_ip_post_soft_reset.exit.lor.lhs.false34_crit_edge, label %amdgpu_device_ip_post_soft_reset.exit.if.then40.sink.split_crit_edge

amdgpu_device_ip_post_soft_reset.exit.if.then40.sink.split_crit_edge: ; preds = %amdgpu_device_ip_post_soft_reset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40.sink.split

amdgpu_device_ip_post_soft_reset.exit.lor.lhs.false34_crit_edge: ; preds = %amdgpu_device_ip_post_soft_reset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %amdgpu_device_ip_post_soft_reset.exit.lor.lhs.false34_crit_edge, %if.then29.lor.lhs.false34_crit_edge, %for.cond.preheader.i.lor.lhs.false34_crit_edge
  %72 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %virt, align 8
  %and.i = and i32 %73, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i126 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i126, label %if.end.i130, label %lor.lhs.false34.if.then40.sink.split_crit_edge

lor.lhs.false34.if.then40.sink.split_crit_edge:   ; preds = %lor.lhs.false34
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40.sink.split

if.end.i130:                                      ; preds = %lor.lhs.false34
  %74 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %asic_funcs.i, align 4
  %need_full_reset.i128 = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %75, i32 0, i32 14
  %76 = ptrtoint ptr %need_full_reset.i128 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %need_full_reset.i128, align 4
  %call.i129 = tail call zeroext i1 %77(ptr noundef %adev) #17
  br i1 %call.i129, label %if.end.i130.if.then40.sink.split_crit_edge, label %for.cond.preheader.i132

if.end.i130.if.then40.sink.split_crit_edge:       ; preds = %if.end.i130
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40.sink.split

for.cond.preheader.i132:                          ; preds = %if.end.i130
  %78 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %cmp53.i = icmp sgt i32 %79, 0
  br i1 %cmp53.i, label %for.cond.preheader.i132.for.body.i134.outer_crit_edge, label %for.cond.preheader.i132.if.else46_crit_edge

for.cond.preheader.i132.if.else46_crit_edge:      ; preds = %for.cond.preheader.i132
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else46

for.cond.preheader.i132.for.body.i134.outer_crit_edge: ; preds = %for.cond.preheader.i132
  br label %for.body.i134.outer

for.body.i134.outer:                              ; preds = %for.inc.i141.thread.for.body.i134.outer_crit_edge, %for.cond.preheader.i132.for.body.i134.outer_crit_edge
  %asic_hang.0.off056.i.ph = phi i1 [ true, %for.inc.i141.thread.for.body.i134.outer_crit_edge ], [ false, %for.cond.preheader.i132.for.body.i134.outer_crit_edge ]
  %i.054.i.ph = phi i32 [ %inc.i139175, %for.inc.i141.thread.for.body.i134.outer_crit_edge ], [ 0, %for.cond.preheader.i132.for.body.i134.outer_crit_edge ]
  br label %for.body.i134

for.body.i134:                                    ; preds = %for.inc.i141.for.body.i134_crit_edge, %for.body.i134.outer
  %i.054.i = phi i32 [ %inc.i139, %for.inc.i141.for.body.i134_crit_edge ], [ %i.054.i.ph, %for.body.i134.outer ]
  %arrayidx.i133 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.054.i
  %80 = ptrtoint ptr %arrayidx.i133 to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %arrayidx.i133, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %81)
  %tobool3.not.i = icmp eq i8 %81, 0
  br i1 %tobool3.not.i, label %for.body.i134.for.inc.i141_crit_edge, label %if.end5.i

for.body.i134.for.inc.i141_crit_edge:             ; preds = %for.body.i134
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i141

if.end5.i:                                        ; preds = %for.body.i134
  %version.i135 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.054.i, i32 1
  %82 = ptrtoint ptr %version.i135 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %version.i135, align 4
  %funcs.i136 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %83, i32 0, i32 4
  %84 = ptrtoint ptr %funcs.i136 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %funcs.i136, align 4
  %check_soft_reset.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %85, i32 0, i32 13
  %86 = ptrtoint ptr %check_soft_reset.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %check_soft_reset.i, align 4
  %tobool8.not.i = icmp eq ptr %87, null
  br i1 %tobool8.not.i, label %if.end5.i.if.end19.i_crit_edge, label %if.then9.i

if.end5.i.if.end19.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19.i

if.then9.i:                                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #19
  %call15.i = tail call zeroext i1 %87(ptr noundef %adev) #17
  %hang.i137 = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i133, i32 0, i32 4
  %frombool.i = zext i1 %call15.i to i8
  %88 = ptrtoint ptr %hang.i137 to i32
  call void @__asan_store1_noabort(i32 %88)
  store i8 %frombool.i, ptr %hang.i137, align 4
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then9.i, %if.end5.i.if.end19.i_crit_edge
  %hang23.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i133, i32 0, i32 4
  %89 = ptrtoint ptr %hang23.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %hang23.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %90)
  %tobool24.not.i = icmp eq i8 %90, 0
  br i1 %tobool24.not.i, label %if.end19.i.for.inc.i141_crit_edge, label %for.inc.i141.thread

if.end19.i.for.inc.i141_crit_edge:                ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i141

for.inc.i141:                                     ; preds = %if.end19.i.for.inc.i141_crit_edge, %for.body.i134.for.inc.i141_crit_edge
  %inc.i139 = add nuw nsw i32 %i.054.i, 1
  %91 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i140 = icmp slt i32 %inc.i139, %92
  br i1 %cmp.i140, label %for.inc.i141.for.body.i134_crit_edge, label %amdgpu_device_ip_check_soft_reset.exit

for.inc.i141.for.body.i134_crit_edge:             ; preds = %for.inc.i141
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i134

for.inc.i141.thread:                              ; preds = %if.end19.i
  %93 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %adev, align 8
  %95 = ptrtoint ptr %version.i135 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %version.i135, align 4
  %funcs29.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %96, i32 0, i32 4
  %97 = ptrtoint ptr %funcs29.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %funcs29.i, align 4
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %98, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %94, ptr noundef nonnull @.str.383, ptr noundef %100) #20
  %inc.i139175 = add nuw nsw i32 %i.054.i, 1
  %101 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i140176 = icmp slt i32 %inc.i139175, %102
  br i1 %cmp.i140176, label %for.inc.i141.thread.for.body.i134.outer_crit_edge, label %for.inc.i141.thread.if.then40.sink.split_crit_edge

for.inc.i141.thread.if.then40.sink.split_crit_edge: ; preds = %for.inc.i141.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40.sink.split

for.inc.i141.thread.for.body.i134.outer_crit_edge: ; preds = %for.inc.i141.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i134.outer

amdgpu_device_ip_check_soft_reset.exit:           ; preds = %for.inc.i141
  br i1 %asic_hang.0.off056.i.ph, label %amdgpu_device_ip_check_soft_reset.exit.if.then40.sink.split_crit_edge, label %amdgpu_device_ip_check_soft_reset.exit.if.else46_crit_edge

amdgpu_device_ip_check_soft_reset.exit.if.else46_crit_edge: ; preds = %amdgpu_device_ip_check_soft_reset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else46

amdgpu_device_ip_check_soft_reset.exit.if.then40.sink.split_crit_edge: ; preds = %amdgpu_device_ip_check_soft_reset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40.sink.split

if.then40.sink.split:                             ; preds = %amdgpu_device_ip_check_soft_reset.exit.if.then40.sink.split_crit_edge, %for.inc.i141.thread.if.then40.sink.split_crit_edge, %if.end.i130.if.then40.sink.split_crit_edge, %lor.lhs.false34.if.then40.sink.split_crit_edge, %amdgpu_device_ip_post_soft_reset.exit.if.then40.sink.split_crit_edge, %if.then29.i.if.then40.sink.split_crit_edge
  %.str.385.sink = phi ptr [ @.str.202, %if.end.i130.if.then40.sink.split_crit_edge ], [ @.str.202, %lor.lhs.false34.if.then40.sink.split_crit_edge ], [ @.str.202, %amdgpu_device_ip_post_soft_reset.exit.if.then40.sink.split_crit_edge ], [ @.str.202, %amdgpu_device_ip_check_soft_reset.exit.if.then40.sink.split_crit_edge ], [ @.str.202, %for.inc.i141.thread.if.then40.sink.split_crit_edge ], [ @.str.385, %if.then29.i.if.then40.sink.split_crit_edge ]
  %103 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %104, ptr noundef nonnull %.str.385.sink) #20
  br label %if.then40

if.then40:                                        ; preds = %if.then40.sink.split, %if.then24.if.then40_crit_edge, %if.then22.if.then40_crit_edge
  %105 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %virt, align 8
  %and.i144 = and i32 %106, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i144)
  %tobool.not.i145 = icmp eq i32 %and.i144, 0
  br i1 %tobool.not.i145, label %if.then40.if.end.i147_crit_edge, label %if.then.i

if.then40.if.end.i147_crit_edge:                  ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i147

if.then.i:                                        ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_virt_fini_data_exchange(ptr noundef %adev) #17
  %call.i146 = tail call i32 @amdgpu_virt_request_full_gpu(ptr noundef %adev, i1 noundef zeroext false) #17
  br label %if.end.i147

if.end.i147:                                      ; preds = %if.then.i, %if.then40.if.end.i147_crit_edge
  %call1.i = tail call fastcc i32 @amdgpu_device_ip_suspend_phase1(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i147.if.then44_crit_edge

if.end.i147.if.then44_crit_edge:                  ; preds = %if.end.i147
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then44

if.end4.i:                                        ; preds = %if.end.i147
  %call5.i = tail call fastcc i32 @amdgpu_device_ip_suspend_phase2(ptr noundef %adev) #17
  %107 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %virt, align 8
  %and8.i = and i32 %108, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %if.end4.i.if.then44_crit_edge, label %if.then10.i

if.end4.i.if.then44_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then44

if.then10.i:                                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #19
  %call11.i = tail call i32 @amdgpu_virt_release_full_gpu(ptr noundef %adev, i1 noundef zeroext false) #17
  br label %if.then44

if.then44:                                        ; preds = %if.then10.i, %if.end4.i.if.then44_crit_edge, %if.end.i147.if.then44_crit_edge
  %r.1.ph = phi i32 [ %call5.i, %if.end4.i.if.then44_crit_edge ], [ %call5.i, %if.then10.i ], [ %call1.i, %if.end.i147.if.then44_crit_edge ]
  tail call void @_set_bit(i32 noundef 0, ptr noundef %flags) #17
  br label %cleanup50

if.else46:                                        ; preds = %amdgpu_device_ip_check_soft_reset.exit.if.else46_crit_edge, %for.cond.preheader.i132.if.else46_crit_edge
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %flags) #17
  br label %cleanup50

cleanup50:                                        ; preds = %if.else46, %if.then44, %if.then16.cleanup50_crit_edge, %if.end13.cleanup50_crit_edge
  %retval.0 = phi i32 [ %call14, %if.end13.cleanup50_crit_edge ], [ 0, %if.then16.cleanup50_crit_edge ], [ %r.1.ph, %if.then44 ], [ 0, %if.else46 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_fence_driver_clear_job_fences(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_fence_driver_force_completion(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_sched_increase_karma(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_reset_prepare_hwcontext(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_do_asic_reset(ptr noundef readonly %device_list_handle, ptr noundef %reset_context) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %device_list_handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device_list_handle, align 4
  %add.ptr = getelementptr i8, ptr %1, i32 -91412
  %call = tail call i32 @amdgpu_reset_perform_reset(ptr noundef %add.ptr, ptr noundef %reset_context) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -38, i32 %call)
  %cmp = icmp eq i32 %call, -38
  br i1 %cmp, label %if.then, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 4
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags, align 4
  %and1.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not358 = icmp eq i32 %and1.i, 0
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %flags, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool4.not = icmp ne i32 %6, 0
  %brmerge = select i1 %tobool4.not, i1 true, i1 %tobool.not358
  br i1 %brmerge, label %if.then.land.lhs.true65_crit_edge, label %if.then.for.cond_crit_edge

if.then.for.cond_crit_edge:                       ; preds = %if.then
  br label %for.cond

if.then.land.lhs.true65_crit_edge:                ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true65

for.cond:                                         ; preds = %if.end23.for.cond_crit_edge, %if.then.for.cond_crit_edge
  %.pn299.in = phi ptr [ %.pn299, %if.end23.for.cond_crit_edge ], [ %device_list_handle, %if.then.for.cond_crit_edge ]
  %7 = ptrtoint ptr %.pn299.in to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn299 = load ptr, ptr %.pn299.in, align 4
  %tmp_adev.0 = getelementptr i8, ptr %.pn299, i32 -91412
  %cmp13.not = icmp eq ptr %.pn299, %device_list_handle
  br i1 %cmp13.not, label %for.cond39.preheader, label %for.body

for.cond39.preheader:                             ; preds = %for.cond
  %8 = ptrtoint ptr %device_list_handle to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn300365 = load ptr, ptr %device_list_handle, align 4
  %cmp41.not366 = icmp eq ptr %.pn300365, %device_list_handle
  br i1 %cmp41.not366, label %for.cond39.preheader.land.lhs.true65_crit_edge, label %for.cond39.preheader.for.body43_crit_edge

for.cond39.preheader.for.body43_crit_edge:        ; preds = %for.cond39.preheader
  br label %for.body43

for.cond39.preheader.land.lhs.true65_crit_edge:   ; preds = %for.cond39.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true65

for.body:                                         ; preds = %for.cond
  %num_physical_nodes = getelementptr i8, ptr %.pn299, i32 -81208
  %9 = ptrtoint ptr %num_physical_nodes to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %num_physical_nodes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp14 = icmp ugt i32 %10, 1
  br i1 %cmp14, label %if.then15, label %if.else21

if.then15:                                        ; preds = %for.body
  %pending_reset = getelementptr i8, ptr %.pn299, i32 -81187
  %11 = ptrtoint ptr %pending_reset to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %pending_reset, align 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_unbound_wq to i32))
  %12 = load ptr, ptr @system_unbound_wq, align 4
  %xgmi_reset_work = getelementptr i8, ptr %.pn299, i32 -44
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %12, ptr noundef %xgmi_reset_work) #17
  br i1 %call.i, label %if.then15.if.end23_crit_edge, label %if.then15.for.end.thread_crit_edge

if.then15.for.end.thread_crit_edge:               ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.thread

if.then15.if.end23_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end23

if.else21:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %asic_funcs = getelementptr i8, ptr %.pn299, i32 -89016
  %13 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %asic_funcs, align 4
  %reset = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %reset to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %reset, align 4
  %call22 = tail call i32 %16(ptr noundef %tmp_adev.0) #17
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then15.if.end23_crit_edge
  %r.1 = phi i32 [ %call22, %if.else21 ], [ 0, %if.then15.if.end23_crit_edge ]
  %tobool24.not = icmp eq i32 %r.1, 0
  br i1 %tobool24.not, label %if.end23.for.cond_crit_edge, label %if.end23.for.end.thread_crit_edge

if.end23.for.end.thread_crit_edge:                ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.thread

if.end23.for.cond_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond

for.end.thread:                                   ; preds = %if.end23.for.end.thread_crit_edge, %if.then15.for.end.thread_crit_edge
  %r.1330 = phi i32 [ %r.1, %if.end23.for.end.thread_crit_edge ], [ -114, %if.then15.for.end.thread_crit_edge ]
  %17 = ptrtoint ptr %tmp_adev.0 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tmp_adev.0, align 8
  %unique = getelementptr i8, ptr %.pn299, i32 -91300
  %19 = ptrtoint ptr %unique to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %unique, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %18, ptr noundef nonnull @.str.204, i32 noundef %r.1330, ptr noundef %20) #20
  br label %if.end94

for.body43:                                       ; preds = %for.inc55.for.body43_crit_edge, %for.cond39.preheader.for.body43_crit_edge
  %.pn300367 = phi ptr [ %.pn300, %for.inc55.for.body43_crit_edge ], [ %.pn300365, %for.cond39.preheader.for.body43_crit_edge ]
  %num_physical_nodes46 = getelementptr i8, ptr %.pn300367, i32 -81208
  %21 = ptrtoint ptr %num_physical_nodes46 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %num_physical_nodes46, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp47 = icmp ugt i32 %22, 1
  br i1 %cmp47, label %if.then48, label %for.body43.for.inc55_crit_edge

for.body43.for.inc55_crit_edge:                   ; preds = %for.body43
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc55

if.then48:                                        ; preds = %for.body43
  %xgmi_reset_work49 = getelementptr i8, ptr %.pn300367, i32 -44
  %call50 = tail call zeroext i1 @flush_work(ptr noundef %xgmi_reset_work49) #17
  %asic_reset_res = getelementptr i8, ptr %.pn300367, i32 -48
  %23 = ptrtoint ptr %asic_reset_res to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %asic_reset_res, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool51.not = icmp eq i32 %24, 0
  br i1 %tobool51.not, label %if.then48.for.inc55_crit_edge, label %if.then48.if.end94_crit_edge

if.then48.if.end94_crit_edge:                     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end94

if.then48.for.inc55_crit_edge:                    ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc55

for.inc55:                                        ; preds = %if.then48.for.inc55_crit_edge, %for.body43.for.inc55_crit_edge
  %25 = ptrtoint ptr %.pn300367 to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pn300 = load ptr, ptr %.pn300367, align 4
  %cmp41.not = icmp eq ptr %.pn300, %device_list_handle
  br i1 %cmp41.not, label %for.inc55.land.lhs.true65_crit_edge, label %for.inc55.for.body43_crit_edge

for.inc55.for.body43_crit_edge:                   ; preds = %for.inc55
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body43

for.inc55.land.lhs.true65_crit_edge:              ; preds = %for.inc55
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true65

land.lhs.true65:                                  ; preds = %for.inc55.land.lhs.true65_crit_edge, %for.cond39.preheader.land.lhs.true65_crit_edge, %if.then.land.lhs.true65_crit_edge
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @amdgpu_ras_in_intr, i32 noundef 4) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_ras_in_intr to i32))
  %26 = load volatile i32, ptr @amdgpu_ras_in_intr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.i.not = icmp eq i32 %26, 0
  br i1 %tobool.i.not, label %land.lhs.true65.if.end94_crit_edge, label %for.cond72.preheader

land.lhs.true65.if.end94_crit_edge:               ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end94

for.cond72.preheader:                             ; preds = %land.lhs.true65
  %27 = ptrtoint ptr %device_list_handle to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pn298368 = load ptr, ptr %device_list_handle, align 4
  %cmp74.not370 = icmp eq ptr %.pn298368, %device_list_handle
  br i1 %cmp74.not370, label %for.cond72.preheader.for.end93_crit_edge, label %for.cond72.preheader.for.body76_crit_edge

for.cond72.preheader.for.body76_crit_edge:        ; preds = %for.cond72.preheader
  br label %for.body76

for.cond72.preheader.for.end93_crit_edge:         ; preds = %for.cond72.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end93

for.body76:                                       ; preds = %for.inc87.for.body76_crit_edge, %for.cond72.preheader.for.body76_crit_edge
  %.pn298371 = phi ptr [ %.pn298, %for.inc87.for.body76_crit_edge ], [ %.pn298368, %for.cond72.preheader.for.body76_crit_edge ]
  %tmp_adev.2372 = getelementptr i8, ptr %.pn298371, i32 -91412
  %ras_funcs = getelementptr i8, ptr %.pn298371, i32 -58580
  %28 = ptrtoint ptr %ras_funcs to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ras_funcs, align 8
  %tobool77.not = icmp eq ptr %29, null
  br i1 %tobool77.not, label %for.body76.for.inc87_crit_edge, label %land.lhs.true78

for.body76.for.inc87_crit_edge:                   ; preds = %for.body76
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc87

land.lhs.true78:                                  ; preds = %for.body76
  %reset_ras_error_count = getelementptr inbounds %struct.amdgpu_mmhub_ras_funcs, ptr %29, i32 0, i32 4
  %30 = ptrtoint ptr %reset_ras_error_count to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %reset_ras_error_count, align 4
  %tobool81.not = icmp eq ptr %31, null
  br i1 %tobool81.not, label %land.lhs.true78.for.inc87_crit_edge, label %if.then82

land.lhs.true78.for.inc87_crit_edge:              ; preds = %land.lhs.true78
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc87

if.then82:                                        ; preds = %land.lhs.true78
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %31(ptr noundef %tmp_adev.2372) #17
  br label %for.inc87

for.inc87:                                        ; preds = %if.then82, %land.lhs.true78.for.inc87_crit_edge, %for.body76.for.inc87_crit_edge
  %32 = ptrtoint ptr %.pn298371 to i32
  call void @__asan_load4_noabort(i32 %32)
  %.pn298 = load ptr, ptr %.pn298371, align 4
  %cmp74.not = icmp eq ptr %.pn298, %device_list_handle
  br i1 %cmp74.not, label %for.inc87.for.end93_crit_edge, label %for.inc87.for.body76_crit_edge

for.inc87.for.body76_crit_edge:                   ; preds = %for.inc87
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body76

for.inc87.for.end93_crit_edge:                    ; preds = %for.inc87
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end93

for.end93:                                        ; preds = %for.inc87.for.end93_crit_edge, %for.cond72.preheader.for.end93_crit_edge
  %call.i.i.i302 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @amdgpu_ras_in_intr, i32 noundef 4) #17
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @amdgpu_ras_in_intr to i32))
  store volatile i32 0, ptr @amdgpu_ras_in_intr, align 4
  br label %if.end94

if.end94:                                         ; preds = %for.end93, %land.lhs.true65.if.end94_crit_edge, %if.then48.if.end94_crit_edge, %for.end.thread
  %r.5335 = phi i32 [ 0, %for.end93 ], [ 0, %land.lhs.true65.if.end94_crit_edge ], [ %r.1330, %for.end.thread ], [ %24, %if.then48.if.end94_crit_edge ]
  %33 = ptrtoint ptr %device_list_handle to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn373 = load ptr, ptr %device_list_handle, align 4
  %cmp101.not375 = icmp eq ptr %.pn373, %device_list_handle
  br i1 %cmp101.not375, label %if.end94.end_crit_edge, label %for.body103.lr.ph

if.end94.end_crit_edge:                           ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #19
  br label %end

for.body103.lr.ph:                                ; preds = %if.end94
  %hive = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 3
  br label %for.body103

for.body103:                                      ; preds = %for.inc195.for.body103_crit_edge, %for.body103.lr.ph
  %.pn377 = phi ptr [ %.pn373, %for.body103.lr.ph ], [ %.pn, %for.inc195.for.body103_crit_edge ]
  %r.6376 = phi i32 [ %r.5335, %for.body103.lr.ph ], [ %r.9, %for.inc195.for.body103_crit_edge ]
  %tmp_adev.3378 = getelementptr i8, ptr %.pn377, i32 -91412
  br i1 %tobool.not358, label %for.body103.out_crit_edge, label %if.then105

for.body103.out_crit_edge:                        ; preds = %for.body103
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.then105:                                       ; preds = %for.body103
  %asic_funcs.i = getelementptr i8, ptr %.pn377, i32 -89016
  %34 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %asic_funcs.i, align 4
  %pre_asic_init.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %35, i32 0, i32 20
  %36 = ptrtoint ptr %pre_asic_init.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pre_asic_init.i, align 4
  tail call void %37(ptr noundef %tmp_adev.3378) #17
  %mode_info.i = getelementptr i8, ptr %.pn377, i32 -69412
  %38 = ptrtoint ptr %mode_info.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mode_info.i, align 8
  %call.i303 = tail call i32 @amdgpu_atom_asic_init(ptr noundef %39) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i303)
  %tobool107.not = icmp eq i32 %call.i303, 0
  %40 = ptrtoint ptr %tmp_adev.3378 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %tmp_adev.3378, align 8
  br i1 %tobool107.not, label %do.end116, label %do.end111

do.end111:                                        ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %41, ptr noundef nonnull @.str.207) #20
  br label %if.else192

do.end116:                                        ; preds = %if.then105
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %41, ptr noundef nonnull @.str.211) #20
  %call118 = tail call i32 @amdgpu_amdkfd_resume_iommu(ptr noundef %tmp_adev.3378) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call118)
  %tobool119.not = icmp eq i32 %call118, 0
  br i1 %tobool119.not, label %if.end121, label %do.end116.if.else192_crit_edge

do.end116.if.else192_crit_edge:                   ; preds = %do.end116
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else192

if.end121:                                        ; preds = %do.end116
  %num_ip_blocks.i = getelementptr i8, ptr %.pn377, i32 -3108
  %42 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %cmp57.i = icmp sgt i32 %43, 0
  br i1 %cmp57.i, label %if.end121.for.body.i_crit_edge, label %if.end121.if.end125_crit_edge

if.end121.if.end125_crit_edge:                    ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end125

if.end121.for.body.i_crit_edge:                   ; preds = %if.end121
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end121.for.body.i_crit_edge
  %i.058.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end121.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %tmp_adev.3378, i32 0, i32 122, i32 %i.058.i
  %44 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %arrayidx.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool.not.i = icmp eq i8 %45, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %lor.lhs.false.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %hw.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i, i32 0, i32 2
  %46 = ptrtoint ptr %hw.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %hw.i, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool4.not.i = icmp eq i8 %47, 0
  br i1 %tobool4.not.i, label %if.end.i, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  %version.i = getelementptr %struct.amdgpu_device, ptr %tmp_adev.3378, i32 0, i32 122, i32 %i.058.i, i32 1
  %48 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %version.i, align 4
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %51)
  %switch.i = icmp ult i32 %51, 3
  br i1 %switch.i, label %if.then20.i, label %if.end.i.for.inc.i_crit_edge

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then20.i:                                      ; preds = %if.end.i
  %funcs.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %49, i32 0, i32 4
  %52 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %funcs.i, align 4
  %resume.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %53, i32 0, i32 10
  %54 = ptrtoint ptr %resume.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %resume.i, align 4
  %call.i304 = tail call i32 %55(ptr noundef %tmp_adev.3378) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i304)
  %tobool24.not.i = icmp eq i32 %call.i304, 0
  br i1 %tobool24.not.i, label %if.end30.i, label %amdgpu_device_ip_resume_phase1.exit

if.end30.i:                                       ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #19
  %56 = ptrtoint ptr %hw.i to i32
  call void @__asan_store1_noabort(i32 %56)
  store i8 1, ptr %hw.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end30.i, %if.end.i.for.inc.i_crit_edge, %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.058.i, 1
  %57 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i = icmp slt i32 %inc.i, %58
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.if.end125_crit_edge

for.inc.i.if.end125_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end125

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

amdgpu_device_ip_resume_phase1.exit:              ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #19
  %59 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %version.i, align 4
  %funcs29.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %60, i32 0, i32 4
  %61 = ptrtoint ptr %funcs29.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %funcs29.i, align 4
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %62, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.387, ptr noundef %64, i32 noundef %call.i304) #17
  br label %if.else192

if.end125:                                        ; preds = %for.inc.i.if.end125_crit_edge, %if.end121.if.end125_crit_edge
  %ptr.i = getelementptr i8, ptr %.pn377, i32 -81144
  %65 = ptrtoint ptr %ptr.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %ptr.i, align 4
  %reset_magic.i = getelementptr i8, ptr %.pn377, i32 -455
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(64) %66, ptr noundef dereferenceable(64) %reset_magic.i, i32 64) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %tobool.not.i305 = icmp eq i32 %bcmp.i, 0
  br i1 %tobool.not.i305, label %if.end.i306, label %if.end125.do.end132_crit_edge

if.end125.do.end132_crit_edge:                    ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end132

if.end.i306:                                      ; preds = %if.end125
  %in_gpu_reset.i.i = getelementptr i8, ptr %.pn377, i32 -384
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i, i32 noundef 4) #17
  %67 = ptrtoint ptr %in_gpu_reset.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %in_gpu_reset.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool2.not.i = icmp eq i32 %68, 0
  br i1 %tobool2.not.i, label %if.end.i306.if.end135_crit_edge, label %amdgpu_device_check_vram_lost.exit

if.end.i306.if.end135_crit_edge:                  ; preds = %if.end.i306
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end135

amdgpu_device_check_vram_lost.exit:               ; preds = %if.end.i306
  %69 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %asic_funcs.i, align 4
  %reset_method.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %70, i32 0, i32 5
  %71 = ptrtoint ptr %reset_method.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %reset_method.i, align 4
  %call5.i = tail call i32 %72(ptr noundef %tmp_adev.3378) #17
  %73 = add i32 %call5.i, -2
  %switch.and.i = and i32 %73, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %switch.and.i)
  %switch.selectcmp.i = icmp eq i32 %switch.and.i, 0
  br i1 %switch.selectcmp.i, label %amdgpu_device_check_vram_lost.exit.do.end132_crit_edge, label %amdgpu_device_check_vram_lost.exit.if.end135_crit_edge

amdgpu_device_check_vram_lost.exit.if.end135_crit_edge: ; preds = %amdgpu_device_check_vram_lost.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end135

amdgpu_device_check_vram_lost.exit.do.end132_crit_edge: ; preds = %amdgpu_device_check_vram_lost.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end132

do.end132:                                        ; preds = %amdgpu_device_check_vram_lost.exit.do.end132_crit_edge, %if.end125.do.end132_crit_edge
  %call134 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.214) #20
  %vram_lost_counter = getelementptr i8, ptr %.pn377, i32 -69504
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %vram_lost_counter, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %vram_lost_counter, i32 1, i32 3, i32 1) #17
  %74 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %vram_lost_counter, ptr %vram_lost_counter, i32 1, ptr elementtype(i32) %vram_lost_counter) #17, !srcloc !822
  br label %if.end135

if.end135:                                        ; preds = %do.end132, %amdgpu_device_check_vram_lost.exit.if.end135_crit_edge, %if.end.i306.if.end135_crit_edge
  %retval.0.i308340 = phi i1 [ true, %do.end132 ], [ false, %amdgpu_device_check_vram_lost.exit.if.end135_crit_edge ], [ false, %if.end.i306.if.end135_crit_edge ]
  %call136 = tail call fastcc i32 @amdgpu_device_fw_loading(ptr noundef %tmp_adev.3378)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call136)
  %tobool137.not = icmp eq i32 %call136, 0
  br i1 %tobool137.not, label %if.end139, label %if.end135.cleanup_crit_edge

if.end135.cleanup_crit_edge:                      ; preds = %if.end135
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end139:                                        ; preds = %if.end135
  %75 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %cmp65.i = icmp sgt i32 %76, 0
  br i1 %cmp65.i, label %if.end139.for.body.i312_crit_edge, label %if.end139.if.end143_crit_edge

if.end139.if.end143_crit_edge:                    ; preds = %if.end139
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end143

if.end139.for.body.i312_crit_edge:                ; preds = %if.end139
  br label %for.body.i312

for.body.i312:                                    ; preds = %for.inc.i323.for.body.i312_crit_edge, %if.end139.for.body.i312_crit_edge
  %i.066.i = phi i32 [ %inc.i321, %for.inc.i323.for.body.i312_crit_edge ], [ 0, %if.end139.for.body.i312_crit_edge ]
  %arrayidx.i310 = getelementptr %struct.amdgpu_device, ptr %tmp_adev.3378, i32 0, i32 122, i32 %i.066.i
  %77 = ptrtoint ptr %arrayidx.i310 to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %arrayidx.i310, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %78)
  %tobool.not.i311 = icmp eq i8 %78, 0
  br i1 %tobool.not.i311, label %for.body.i312.for.inc.i323_crit_edge, label %lor.lhs.false.i315

for.body.i312.for.inc.i323_crit_edge:             ; preds = %for.body.i312
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i323

lor.lhs.false.i315:                               ; preds = %for.body.i312
  %hw.i313 = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i310, i32 0, i32 2
  %79 = ptrtoint ptr %hw.i313 to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %hw.i313, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %80)
  %tobool4.not.i314 = icmp eq i8 %80, 0
  br i1 %tobool4.not.i314, label %if.end.i317, label %lor.lhs.false.i315.for.inc.i323_crit_edge

lor.lhs.false.i315.for.inc.i323_crit_edge:        ; preds = %lor.lhs.false.i315
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i323

if.end.i317:                                      ; preds = %lor.lhs.false.i315
  %version.i316 = getelementptr %struct.amdgpu_device, ptr %tmp_adev.3378, i32 0, i32 122, i32 %i.066.i, i32 1
  %81 = ptrtoint ptr %version.i316 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %version.i316, align 4
  %83 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %82, align 4
  %85 = zext i32 %84 to i64
  call void @__sanitizer_cov_trace_switch(i64 %85, ptr @__sancov_gen_cov_switch_values.436)
  switch i32 %84, label %if.end27.i [
    i32 0, label %if.end.i317.for.inc.i323_crit_edge
    i32 1, label %if.end.i317.for.inc.i323_crit_edge399
    i32 2, label %if.end.i317.for.inc.i323_crit_edge400
    i32 4, label %if.end.i317.for.inc.i323_crit_edge401
  ]

if.end.i317.for.inc.i323_crit_edge401:            ; preds = %if.end.i317
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i323

if.end.i317.for.inc.i323_crit_edge400:            ; preds = %if.end.i317
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i323

if.end.i317.for.inc.i323_crit_edge399:            ; preds = %if.end.i317
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i323

if.end.i317.for.inc.i323_crit_edge:               ; preds = %if.end.i317
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i323

if.end27.i:                                       ; preds = %if.end.i317
  %funcs.i318 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %82, i32 0, i32 4
  %86 = ptrtoint ptr %funcs.i318 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %funcs.i318, align 4
  %resume.i319 = getelementptr inbounds %struct.amd_ip_funcs, ptr %87, i32 0, i32 10
  %88 = ptrtoint ptr %resume.i319 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %resume.i319, align 4
  %call.i320 = tail call i32 %89(ptr noundef %tmp_adev.3378) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i320)
  %tobool31.not.i = icmp eq i32 %call.i320, 0
  br i1 %tobool31.not.i, label %if.end37.i, label %amdgpu_device_ip_resume_phase2.exit

if.end37.i:                                       ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #19
  %90 = ptrtoint ptr %hw.i313 to i32
  call void @__asan_store1_noabort(i32 %90)
  store i8 1, ptr %hw.i313, align 2
  br label %for.inc.i323

for.inc.i323:                                     ; preds = %if.end37.i, %if.end.i317.for.inc.i323_crit_edge, %if.end.i317.for.inc.i323_crit_edge399, %if.end.i317.for.inc.i323_crit_edge400, %if.end.i317.for.inc.i323_crit_edge401, %lor.lhs.false.i315.for.inc.i323_crit_edge, %for.body.i312.for.inc.i323_crit_edge
  %inc.i321 = add nuw nsw i32 %i.066.i, 1
  %91 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i322 = icmp slt i32 %inc.i321, %92
  br i1 %cmp.i322, label %for.inc.i323.for.body.i312_crit_edge, label %for.inc.i323.if.end143_crit_edge

for.inc.i323.if.end143_crit_edge:                 ; preds = %for.inc.i323
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end143

for.inc.i323.for.body.i312_crit_edge:             ; preds = %for.inc.i323
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i312

amdgpu_device_ip_resume_phase2.exit:              ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #19
  %93 = ptrtoint ptr %version.i316 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %version.i316, align 4
  %funcs36.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %94, i32 0, i32 4
  %95 = ptrtoint ptr %funcs36.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %funcs36.i, align 4
  %97 = ptrtoint ptr %96 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %96, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.387, ptr noundef %98, i32 noundef %call.i320) #17
  br label %if.else192

if.end143:                                        ; preds = %for.inc.i323.if.end143_crit_edge, %if.end139.if.end143_crit_edge
  br i1 %retval.0.i308340, label %if.then145, label %if.end143.if.end146_crit_edge

if.end143.if.end146_crit_edge:                    ; preds = %if.end143
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end146

if.then145:                                       ; preds = %if.end143
  call void @__sanitizer_cov_trace_pc() #19
  %99 = ptrtoint ptr %ptr.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %ptr.i, align 4
  %101 = call ptr @memcpy(ptr %reset_magic.i, ptr %100, i32 64)
  br label %if.end146

if.end146:                                        ; preds = %if.then145, %if.end143.if.end146_crit_edge
  tail call void @amdgpu_register_gpu_instance(ptr noundef %tmp_adev.3378) #17
  %102 = ptrtoint ptr %hive to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %hive, align 4
  %tobool147.not = icmp eq ptr %103, null
  br i1 %tobool147.not, label %land.lhs.true148, label %if.end146.if.end155_crit_edge

if.end146.if.end155_crit_edge:                    ; preds = %if.end146
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end155

land.lhs.true148:                                 ; preds = %if.end146
  %num_physical_nodes151 = getelementptr i8, ptr %.pn377, i32 -81208
  %104 = ptrtoint ptr %num_physical_nodes151 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %num_physical_nodes151, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %105)
  %cmp152 = icmp ugt i32 %105, 1
  br i1 %cmp152, label %if.then153, label %land.lhs.true148.if.end155_crit_edge

land.lhs.true148.if.end155_crit_edge:             ; preds = %land.lhs.true148
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end155

if.then153:                                       ; preds = %land.lhs.true148
  call void @__sanitizer_cov_trace_pc() #19
  %call154 = tail call i32 @amdgpu_xgmi_add_device(ptr noundef %tmp_adev.3378) #17
  br label %if.end155

if.end155:                                        ; preds = %if.then153, %land.lhs.true148.if.end155_crit_edge, %if.end146.if.end155_crit_edge
  %call156 = tail call fastcc i32 @amdgpu_device_ip_late_init(ptr noundef %tmp_adev.3378)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call156)
  %tobool157.not = icmp eq i32 %call156, 0
  br i1 %tobool157.not, label %if.end159, label %if.end155.if.else192_crit_edge

if.end155.if.else192_crit_edge:                   ; preds = %if.end155
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else192

if.end159:                                        ; preds = %if.end155
  %fb_helper = getelementptr i8, ptr %.pn377, i32 -89364
  %106 = ptrtoint ptr %fb_helper to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %fb_helper, align 4
  tail call void @drm_fb_helper_set_suspend_unlocked(ptr noundef %107, i1 noundef zeroext false) #17
  %call161 = tail call zeroext i1 @amdgpu_ras_eeprom_check_err_threshold(ptr noundef %tmp_adev.3378) #17
  br i1 %call161, label %if.end159.if.else192_crit_edge, label %if.then162

if.end159.if.else192_crit_edge:                   ; preds = %if.end159
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else192

if.then162:                                       ; preds = %if.end159
  tail call void @amdgpu_ras_resume(ptr noundef %tmp_adev.3378) #17
  %108 = ptrtoint ptr %hive to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %hive, align 4
  %tobool166.not = icmp eq ptr %109, null
  br i1 %tobool166.not, label %if.then162.if.then179_crit_edge, label %land.lhs.true167

if.then162.if.then179_crit_edge:                  ; preds = %if.then162
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then179

land.lhs.true167:                                 ; preds = %if.then162
  %num_physical_nodes170 = getelementptr i8, ptr %.pn377, i32 -81208
  %110 = ptrtoint ptr %num_physical_nodes170 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %num_physical_nodes170, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %111)
  %cmp171 = icmp ugt i32 %111, 1
  br i1 %cmp171, label %if.then172, label %land.lhs.true167.if.then179_crit_edge

land.lhs.true167.if.then179_crit_edge:            ; preds = %land.lhs.true167
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then179

if.then172:                                       ; preds = %land.lhs.true167
  call void @__sanitizer_cov_trace_pc() #19
  %call174 = tail call i32 @amdgpu_xgmi_update_topology(ptr noundef nonnull %109, ptr noundef %tmp_adev.3378) #17
  br label %out

out:                                              ; preds = %if.then172, %for.body103.out_crit_edge
  %r.7 = phi i32 [ %call174, %if.then172 ], [ %r.6376, %for.body103.out_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.7)
  %tobool178.not = icmp eq i32 %r.7, 0
  br i1 %tobool178.not, label %out.if.then179_crit_edge, label %out.if.else192_crit_edge

out.if.else192_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else192

out.if.then179_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then179

if.then179:                                       ; preds = %out.if.then179_crit_edge, %land.lhs.true167.if.then179_crit_edge, %if.then162.if.then179_crit_edge
  tail call void @amdgpu_irq_gpu_reset_resume_helper(ptr noundef %tmp_adev.3378) #17
  %call180 = tail call i32 @amdgpu_ib_ring_tests(ptr noundef %tmp_adev.3378) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call180)
  %tobool181.not = icmp eq i32 %call180, 0
  br i1 %tobool181.not, label %if.then190, label %end.thread

end.thread:                                       ; preds = %if.then179
  call void @__sanitizer_cov_trace_pc() #19
  %112 = ptrtoint ptr %tmp_adev.3378 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %tmp_adev.3378, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %113, ptr noundef nonnull @.str.217, i32 noundef %call180) #20
  br label %if.then203

if.then190:                                       ; preds = %if.then179
  call void @__sanitizer_cov_trace_pc() #19
  %call191 = tail call fastcc i32 @amdgpu_device_recover_vram(ptr noundef %tmp_adev.3378)
  br label %for.inc195

if.else192:                                       ; preds = %out.if.else192_crit_edge, %if.end159.if.else192_crit_edge, %if.end155.if.else192_crit_edge, %amdgpu_device_ip_resume_phase2.exit, %amdgpu_device_ip_resume_phase1.exit, %do.end116.if.else192_crit_edge, %do.end111
  %r.8.ph = phi i32 [ %r.7, %out.if.else192_crit_edge ], [ -22, %if.end159.if.else192_crit_edge ], [ %call156, %if.end155.if.else192_crit_edge ], [ %call.i320, %amdgpu_device_ip_resume_phase2.exit ], [ %call.i304, %amdgpu_device_ip_resume_phase1.exit ], [ %call118, %do.end116.if.else192_crit_edge ], [ %call.i303, %do.end111 ]
  %asic_reset_res193 = getelementptr i8, ptr %.pn377, i32 -48
  %114 = ptrtoint ptr %asic_reset_res193 to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 %r.8.ph, ptr %asic_reset_res193, align 4
  br label %for.inc195

for.inc195:                                       ; preds = %if.else192, %if.then190
  %r.9 = phi i32 [ %r.8.ph, %if.else192 ], [ %call191, %if.then190 ]
  %115 = ptrtoint ptr %.pn377 to i32
  call void @__asan_load4_noabort(i32 %115)
  %.pn = load ptr, ptr %.pn377, align 4
  %cmp101.not = icmp eq ptr %.pn, %device_list_handle
  br i1 %cmp101.not, label %for.inc195.end_crit_edge, label %for.inc195.for.body103_crit_edge

for.inc195.for.body103_crit_edge:                 ; preds = %for.inc195
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body103

for.inc195.end_crit_edge:                         ; preds = %for.inc195
  call void @__sanitizer_cov_trace_pc() #19
  br label %end

end:                                              ; preds = %for.inc195.end_crit_edge, %if.end94.end_crit_edge
  %r.6.lcssa = phi i32 [ %r.5335, %if.end94.end_crit_edge ], [ %r.9, %for.inc195.end_crit_edge ]
  br i1 %tobool.not358, label %if.else205, label %end.if.then203_crit_edge

end.if.then203_crit_edge:                         ; preds = %end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then203

if.then203:                                       ; preds = %end.if.then203_crit_edge, %end.thread
  %r.10357 = phi i32 [ -11, %end.thread ], [ %r.6.lcssa, %end.if.then203_crit_edge ]
  tail call void @_set_bit(i32 noundef 0, ptr noundef %flags) #17
  br label %cleanup

if.else205:                                       ; preds = %end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %flags) #17
  br label %cleanup

cleanup:                                          ; preds = %if.else205, %if.then203, %if.end135.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %r.6.lcssa, %if.else205 ], [ %r.10357, %if.then203 ], [ %call136, %if.end135.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_reset_perform_reset(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_work(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_amdkfd_resume_iommu(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @amdgpu_device_fw_loading(ptr noundef %adev) unnamed_addr #2 align 64 {
entry:
  %smu_version = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %smu_version) #17
  %0 = ptrtoint ptr %smu_version to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %smu_version, align 4, !annotation !767
  %asic_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %1 = ptrtoint ptr %asic_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %asic_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %2)
  %cmp = icmp ugt i32 %2, 18
  br i1 %cmp, label %for.cond.preheader, label %entry.if.end49_crit_edge

entry.if.end49_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end49

for.cond.preheader:                               ; preds = %entry
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %3 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp191 = icmp sgt i32 %4, 0
  br i1 %cmp191, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.if.end49_crit_edge

for.cond.preheader.if.end49_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end49

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.092 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.092, i32 1
  %5 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %version, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %8)
  %cmp2.not = icmp eq i32 %8, 4
  br i1 %cmp2.not, label %if.end, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %for.body
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.092
  %sw = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 1
  %9 = ptrtoint ptr %sw to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %sw, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not = icmp eq i8 %10, 0
  br i1 %tobool.not, label %if.end.for.inc_crit_edge, label %if.end7

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end7:                                          ; preds = %if.end
  %hw = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 2
  %11 = ptrtoint ptr %hw to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %hw, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool11.not = icmp eq i8 %12, 0
  br i1 %tobool11.not, label %if.end15, label %if.end7.if.end49_crit_edge

if.end7.if.end49_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end49

if.end15:                                         ; preds = %if.end7
  %in_gpu_reset.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 141
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i, i32 noundef 4) #17
  %13 = ptrtoint ptr %in_gpu_reset.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %in_gpu_reset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool16.not = icmp eq i32 %14, 0
  br i1 %tobool16.not, label %lor.lhs.false, label %if.end15.if.then19_crit_edge

if.end15.if.then19_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then19

lor.lhs.false:                                    ; preds = %if.end15
  %in_suspend = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 137
  %15 = ptrtoint ptr %in_suspend to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %in_suspend, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool17.not = icmp eq i8 %16, 0
  br i1 %tobool17.not, label %if.else, label %lor.lhs.false.if.then19_crit_edge

lor.lhs.false.if.then19_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then19

if.then19:                                        ; preds = %lor.lhs.false.if.then19_crit_edge, %if.end15.if.then19_crit_edge
  %17 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %version, align 4
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %18, i32 0, i32 4
  %19 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %funcs, align 4
  %resume = getelementptr inbounds %struct.amd_ip_funcs, ptr %20, i32 0, i32 10
  %21 = ptrtoint ptr %resume to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %resume, align 4
  %call23 = tail call i32 %22(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.then19.if.end44_crit_edge, label %if.then25

if.then19.if.end44_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end44

if.then25:                                        ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #19
  %23 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %version, align 4
  %funcs29 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %funcs29 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %funcs29, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.387, ptr noundef %28, i32 noundef %call23) #17
  br label %cleanup

if.else:                                          ; preds = %lor.lhs.false
  %29 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %version, align 4
  %funcs34 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %30, i32 0, i32 4
  %31 = ptrtoint ptr %funcs34 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %funcs34, align 4
  %hw_init = getelementptr inbounds %struct.amd_ip_funcs, ptr %32, i32 0, i32 6
  %33 = ptrtoint ptr %hw_init to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %hw_init, align 4
  %call35 = tail call i32 %34(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %if.else.if.end44_crit_edge, label %if.then37

if.else.if.end44_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end44

if.then37:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %35 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %version, align 4
  %funcs41 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %36, i32 0, i32 4
  %37 = ptrtoint ptr %funcs41 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %funcs41, align 4
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %38, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.359, ptr noundef %40, i32 noundef %call35) #17
  br label %cleanup

if.end44:                                         ; preds = %if.else.if.end44_crit_edge, %if.then19.if.end44_crit_edge
  %41 = ptrtoint ptr %hw to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 1, ptr %hw, align 2
  br label %if.end49

for.inc:                                          ; preds = %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.092, 1
  %exitcond.not = icmp eq i32 %inc, %4
  br i1 %exitcond.not, label %for.inc.if.end49_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.if.end49_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end49

if.end49:                                         ; preds = %for.inc.if.end49_crit_edge, %if.end44, %if.end7.if.end49_crit_edge, %for.cond.preheader.if.end49_crit_edge, %entry.if.end49_crit_edge
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %42 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %virt, align 8
  %and = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool50.not = icmp eq i32 %and, 0
  br i1 %tobool50.not, label %if.end49.if.then55_crit_edge, label %lor.lhs.false51

if.end49.if.then55_crit_edge:                     ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then55

lor.lhs.false51:                                  ; preds = %if.end49
  %44 = ptrtoint ptr %asic_type to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %asic_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %45)
  %cmp53 = icmp eq i32 %45, 11
  br i1 %cmp53, label %lor.lhs.false51.if.then55_crit_edge, label %lor.lhs.false51.cleanup_crit_edge

lor.lhs.false51.cleanup_crit_edge:                ; preds = %lor.lhs.false51
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false51.if.then55_crit_edge:              ; preds = %lor.lhs.false51
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then55

if.then55:                                        ; preds = %lor.lhs.false51.if.then55_crit_edge, %if.end49.if.then55_crit_edge
  %call56 = call i32 @amdgpu_pm_load_smu_firmware(ptr noundef %adev, ptr noundef nonnull %smu_version) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then55, %lor.lhs.false51.cleanup_crit_edge, %if.then37, %if.then25
  %retval.0 = phi i32 [ %call23, %if.then25 ], [ %call35, %if.then37 ], [ %call56, %if.then55 ], [ 0, %lor.lhs.false51.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %smu_version) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_xgmi_add_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_ras_eeprom_check_err_threshold(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_xgmi_update_topology(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_irq_gpu_reset_resume_helper(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ib_ring_tests(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @amdgpu_device_recover_vram(ptr noundef %adev) unnamed_addr #2 align 64 {
entry:
  %next = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %next) #17
  %0 = ptrtoint ptr %next to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %next, align 4
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %1 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %virt, align 8
  %and = and i32 %2, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %spec.select = select i1 %tobool.not, i32 10, i32 800
  %3 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %4, ptr noundef nonnull @.str.388) #20
  %shadow_list_lock = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 134
  tail call void @mutex_lock_nested(ptr noundef %shadow_list_lock, i32 noundef 0) #17
  %shadow_list = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 133
  %5 = ptrtoint ptr %shadow_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn98 = load ptr, ptr %shadow_list, align 4
  %cmp.not100 = icmp eq ptr %.pn98, %shadow_list
  br i1 %cmp.not100, label %for.end.thread, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.end.thread:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  call void @mutex_unlock(ptr noundef %shadow_list_lock) #17
  br label %dma_fence_put.exit95

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn104 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn98, %entry.for.body_crit_edge ]
  %fence.0103 = phi ptr [ %fence.1, %for.inc.for.body_crit_edge ], [ null, %entry.for.body_crit_edge ]
  %tmo.1102 = phi i32 [ %tmo.2, %for.inc.for.body_crit_edge ], [ %spec.select, %entry.for.body_crit_edge ]
  %r.0101 = phi i32 [ %r.1, %for.inc.for.body_crit_edge ], [ 1, %entry.for.body_crit_edge ]
  %vmbo.0105 = getelementptr i8, ptr %.pn104, i32 -572
  %resource = getelementptr i8, ptr %.pn104, i32 -128
  %6 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %resource, align 4
  %mem_type = getelementptr inbounds %struct.ttm_resource, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %mem_type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mem_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp5.not = icmp eq i32 %9, 1
  br i1 %cmp5.not, label %lor.lhs.false, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %11)
  %cmp8 = icmp eq i32 %11, 2147483647
  br i1 %cmp8, label %lor.lhs.false.for.inc_crit_edge, label %lor.lhs.false9

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %parent = getelementptr i8, ptr %.pn104, i32 -56
  %12 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %parent, align 4
  %resource11 = getelementptr inbounds %struct.amdgpu_bo, ptr %13, i32 0, i32 4, i32 6
  %14 = ptrtoint ptr %resource11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %resource11, align 4
  %mem_type12 = getelementptr inbounds %struct.ttm_resource, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %mem_type12 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mem_type12, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %17)
  %cmp13.not = icmp eq i32 %17, 2
  br i1 %cmp13.not, label %if.end15, label %lor.lhs.false9.for.inc_crit_edge

lor.lhs.false9.for.inc_crit_edge:                 ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end15:                                         ; preds = %lor.lhs.false9
  %call16 = call i32 @amdgpu_bo_restore_shadow(ptr noundef %vmbo.0105, ptr noundef nonnull %next) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end19, label %if.end15.for.end_crit_edge

if.end15.for.end_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.end19:                                         ; preds = %if.end15
  %tobool20.not = icmp eq ptr %fence.0103, null
  br i1 %tobool20.not, label %if.else30, label %if.then.i

if.then.i:                                        ; preds = %if.end19
  %call22 = call i32 @dma_fence_wait_timeout(ptr noundef nonnull %fence.0103, i1 noundef zeroext false, i32 noundef %tmo.1102) #17
  %refcount.i = getelementptr inbounds %struct.dma_fence, ptr %fence.0103, i32 0, i32 6
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !823
  call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #17
  %18 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #17, !srcloc !824
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %18, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.dma_fence_put.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !775

if.end5.i.i.i.i.i.dma_fence_put.exit_crit_edge:   ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_fence_put.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 3) #17
  br label %dma_fence_put.exit

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !825
  call void @dma_fence_release(ptr noundef %refcount.i) #17
  br label %dma_fence_put.exit

dma_fence_put.exit:                               ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.dma_fence_put.exit_crit_edge
  %19 = ptrtoint ptr %next to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %next, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %cmp23 = icmp eq i32 %call22, 0
  br i1 %cmp23, label %dma_fence_put.exit.for.end_crit_edge, label %if.else25

dma_fence_put.exit.for.end_crit_edge:             ; preds = %dma_fence_put.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.else25:                                        ; preds = %dma_fence_put.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %cmp26 = icmp slt i32 %call22, 0
  br i1 %cmp26, label %if.else25.for.end_crit_edge, label %if.else25.for.inc_crit_edge

if.else25.for.inc_crit_edge:                      ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.else25.for.end_crit_edge:                      ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.else30:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #19
  %21 = ptrtoint ptr %next to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %next, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.else30, %if.else25.for.inc_crit_edge, %lor.lhs.false9.for.inc_crit_edge, %lor.lhs.false.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %r.1 = phi i32 [ %r.0101, %for.body.for.inc_crit_edge ], [ %r.0101, %lor.lhs.false.for.inc_crit_edge ], [ %r.0101, %lor.lhs.false9.for.inc_crit_edge ], [ 0, %if.else25.for.inc_crit_edge ], [ 0, %if.else30 ]
  %tmo.2 = phi i32 [ %tmo.1102, %for.body.for.inc_crit_edge ], [ %tmo.1102, %lor.lhs.false.for.inc_crit_edge ], [ %tmo.1102, %lor.lhs.false9.for.inc_crit_edge ], [ %call22, %if.else25.for.inc_crit_edge ], [ %tmo.1102, %if.else30 ]
  %fence.1 = phi ptr [ %fence.0103, %for.body.for.inc_crit_edge ], [ %fence.0103, %lor.lhs.false.for.inc_crit_edge ], [ %fence.0103, %lor.lhs.false9.for.inc_crit_edge ], [ %20, %if.else25.for.inc_crit_edge ], [ %22, %if.else30 ]
  %23 = ptrtoint ptr %.pn104 to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn = load ptr, ptr %.pn104, align 4
  %cmp.not = icmp eq ptr %.pn, %shadow_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.else25.for.end_crit_edge, %dma_fence_put.exit.for.end_crit_edge, %if.end15.for.end_crit_edge
  %r.2 = phi i32 [ %r.1, %for.inc.for.end_crit_edge ], [ %call16, %if.end15.for.end_crit_edge ], [ -110, %dma_fence_put.exit.for.end_crit_edge ], [ %call22, %if.else25.for.end_crit_edge ]
  %tmo.3 = phi i32 [ %tmo.2, %for.inc.for.end_crit_edge ], [ %tmo.1102, %if.end15.for.end_crit_edge ], [ 0, %dma_fence_put.exit.for.end_crit_edge ], [ %call22, %if.else25.for.end_crit_edge ]
  %fence.2 = phi ptr [ %fence.1, %for.inc.for.end_crit_edge ], [ %fence.0103, %if.end15.for.end_crit_edge ], [ %20, %dma_fence_put.exit.for.end_crit_edge ], [ %20, %if.else25.for.end_crit_edge ]
  call void @mutex_unlock(ptr noundef %shadow_list_lock) #17
  %tobool38.not = icmp eq ptr %fence.2, null
  br i1 %tobool38.not, label %for.end.dma_fence_put.exit95_crit_edge, label %if.then.i90

for.end.dma_fence_put.exit95_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_fence_put.exit95

if.then.i90:                                      ; preds = %for.end
  %call40 = call i32 @dma_fence_wait_timeout(ptr noundef nonnull %fence.2, i1 noundef zeroext false, i32 noundef %tmo.3) #17
  %refcount.i86 = getelementptr inbounds %struct.dma_fence, ptr %fence.2, i32 0, i32 6
  %call.i.i.i.i.i.i.i87 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i86, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !823
  call void @llvm.prefetch.p0(ptr %refcount.i86, i32 1, i32 3, i32 1) #17
  %24 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i86, ptr %refcount.i86, i32 1, ptr elementtype(i32) %refcount.i86) #17, !srcloc !824
  %asmresult.i.i.i.i.i.i.i.i88 = extractvalue { i32, i32, i32 } %24, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i88)
  %cmp.i.i.i.i.i89 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i88, 1
  br i1 %cmp.i.i.i.i.i89, label %if.then.i.i94, label %if.end5.i.i.i.i.i92

if.end5.i.i.i.i.i92:                              ; preds = %if.then.i90
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i88)
  %.not.i.i.i.i.i91 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i88, 0
  br i1 %.not.i.i.i.i.i91, label %if.end5.i.i.i.i.i92.dma_fence_put.exit95_crit_edge, label %if.then10.i.i.i.i.i93, !prof !775

if.end5.i.i.i.i.i92.dma_fence_put.exit95_crit_edge: ; preds = %if.end5.i.i.i.i.i92
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_fence_put.exit95

if.then10.i.i.i.i.i93:                            ; preds = %if.end5.i.i.i.i.i92
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %refcount.i86, i32 noundef 3) #17
  br label %dma_fence_put.exit95

if.then.i.i94:                                    ; preds = %if.then.i90
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !825
  call void @dma_fence_release(ptr noundef %refcount.i86) #17
  br label %dma_fence_put.exit95

dma_fence_put.exit95:                             ; preds = %if.then.i.i94, %if.then10.i.i.i.i.i93, %if.end5.i.i.i.i.i92.dma_fence_put.exit95_crit_edge, %for.end.dma_fence_put.exit95_crit_edge, %for.end.thread
  %r.2121 = phi i32 [ %r.2, %if.end5.i.i.i.i.i92.dma_fence_put.exit95_crit_edge ], [ %r.2, %if.then10.i.i.i.i.i93 ], [ %r.2, %if.then.i.i94 ], [ %r.2, %for.end.dma_fence_put.exit95_crit_edge ], [ 1, %for.end.thread ]
  %tmo.497 = phi i32 [ %call40, %if.end5.i.i.i.i.i92.dma_fence_put.exit95_crit_edge ], [ %call40, %if.then10.i.i.i.i.i93 ], [ %call40, %if.then.i.i94 ], [ %tmo.3, %for.end.dma_fence_put.exit95_crit_edge ], [ %spec.select, %for.end.thread ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.2121)
  %cmp42 = icmp slt i32 %r.2121, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %tmo.497)
  %cmp44 = icmp slt i32 %tmo.497, 1
  %or.cond = select i1 %cmp42, i1 true, i1 %cmp44
  %25 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %adev, align 8
  br i1 %or.cond, label %do.end48, label %do.end53

do.end48:                                         ; preds = %dma_fence_put.exit95
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %26, ptr noundef nonnull @.str.391, i32 noundef %r.2121, i32 noundef %tmo.497) #20
  br label %cleanup

do.end53:                                         ; preds = %dma_fence_put.exit95
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %26, ptr noundef nonnull @.str.394) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end53, %do.end48
  %retval.0 = phi i32 [ -5, %do.end48 ], [ 0, %do.end53 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %next) #17
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_gpu_recover(ptr noundef %adev, ptr noundef %job) local_unnamed_addr #2 align 64 {
entry:
  %device_list = alloca %struct.list_head, align 4
  %reset_context = alloca %struct.amdgpu_reset_context, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %device_list) #17
  %0 = ptrtoint ptr %device_list to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %device_list, align 4, !annotation !767
  %1 = getelementptr inbounds %struct.list_head, ptr %device_list, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !767
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %reset_context) #17
  %3 = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 1
  %4 = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 2
  %5 = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 3
  %6 = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 4
  %7 = getelementptr inbounds i8, ptr %reset_context, i32 16
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %7, align 4
  %call = tail call zeroext i1 @amdgpu_ras_need_emergency_restart(ptr noundef %adev) #17
  br i1 %call, label %land.lhs.true, label %entry.do.end5_crit_edge

entry.do.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end5

land.lhs.true:                                    ; preds = %entry
  %ras = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 113, i32 34, i32 1
  %9 = ptrtoint ptr %ras to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ras, align 8
  %reboot = getelementptr inbounds %struct.amdgpu_ras, ptr %10, i32 0, i32 12
  %11 = ptrtoint ptr %reboot to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %reboot, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool1.not = icmp eq i8 %12, 0
  br i1 %tobool1.not, label %land.lhs.true.do.end5_crit_edge, label %do.end

land.lhs.true.do.end5_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end5

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.219) #20
  tail call void @ksys_sync_helper() #17
  tail call void @emergency_restart() #17
  br label %do.end5

do.end5:                                          ; preds = %do.end, %land.lhs.true.do.end5_crit_edge, %entry.do.end5_crit_edge
  %cond = phi ptr [ @.str.225, %entry.do.end5_crit_edge ], [ @.str.224, %land.lhs.true.do.end5_crit_edge ], [ @.str.224, %do.end ]
  %13 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %14, ptr noundef nonnull @.str.222, ptr noundef nonnull %cond) #20
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %15 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %virt, align 8
  %and = and i32 %16, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.end10, label %do.end5.if.end29_crit_edge

do.end5.if.end29_crit_edge:                       ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end29

if.end10:                                         ; preds = %do.end5
  %call9 = tail call ptr @amdgpu_get_xgmi_hive(ptr noundef %adev) #17
  %tobool11.not = icmp eq ptr %call9, null
  br i1 %tobool11.not, label %if.end10.if.end29_crit_edge, label %if.then12

if.end10.if.end29_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end29

if.then12:                                        ; preds = %if.end10
  %in_reset = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call9, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %in_reset, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !826
  tail call void @llvm.prefetch.p0(ptr %in_reset, i32 1, i32 3, i32 1) #17
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.body.i.i.i.do.body.i.i.i_crit_edge, %if.then12
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %in_reset, ptr %in_reset, i32 0, i32 1, ptr elementtype(i32) %in_reset) #17, !srcloc !827
  %asmresult.i.i.i = extractvalue { i32, i32 } %17, 0
  %tobool.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %atomic_cmpxchg.exit, label %do.body.i.i.i.do.body.i.i.i_crit_edge

do.body.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i.i

atomic_cmpxchg.exit:                              ; preds = %do.body.i.i.i
  %asmresult3.i.i.i = extractvalue { i32, i32 } %17, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !828
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult3.i.i.i)
  %cmp.not = icmp eq i32 %asmresult3.i.i.i, 0
  br i1 %cmp.not, label %if.end28, label %do.end17

do.end17:                                         ; preds = %atomic_cmpxchg.exit
  %tobool19.not = icmp eq ptr %job, null
  br i1 %tobool19.not, label %if.end27.critedge, label %cond.true

cond.true:                                        ; preds = %do.end17
  %id = getelementptr inbounds %struct.drm_sched_job, ptr %job, i32 0, i32 5
  %18 = ptrtoint ptr %id to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %id, align 8
  %hive_id.c483 = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call9, i32 0, i32 1
  %20 = ptrtoint ptr %hive_id.c483 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %hive_id.c483, align 8
  %call21.c484 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.227, i64 noundef %19, i64 noundef %21) #20
  tail call void @amdgpu_put_xgmi_hive(ptr noundef nonnull %call9) #17
  %vm = getelementptr inbounds %struct.amdgpu_job, ptr %job, i32 0, i32 1
  %22 = ptrtoint ptr %vm to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vm, align 8
  %tobool24.not = icmp eq ptr %23, null
  br i1 %tobool24.not, label %cond.true.cleanup335_crit_edge, label %if.then25

cond.true.cleanup335_crit_edge:                   ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup335

if.then25:                                        ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @drm_sched_increase_karma(ptr noundef nonnull %job) #17
  br label %cleanup335

if.end27.critedge:                                ; preds = %do.end17
  call void @__sanitizer_cov_trace_pc() #19
  %hive_id.c = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call9, i32 0, i32 1
  %24 = ptrtoint ptr %hive_id.c to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %hive_id.c, align 8
  %call21.c = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.227, i64 noundef -1, i64 noundef %25) #20
  tail call void @amdgpu_put_xgmi_hive(ptr noundef nonnull %call9) #17
  br label %cleanup335

if.end28:                                         ; preds = %atomic_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #19
  %hive_lock = getelementptr inbounds %struct.amdgpu_hive_info, ptr %call9, i32 0, i32 5
  tail call void @mutex_lock_nested(ptr noundef %hive_lock, i32 noundef 0) #17
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end10.if.end29_crit_edge, %do.end5.if.end29_crit_edge
  %tobool11.not561 = phi i1 [ false, %if.end28 ], [ true, %if.end10.if.end29_crit_edge ], [ true, %do.end5.if.end29_crit_edge ]
  %hive.0557 = phi ptr [ %call9, %if.end28 ], [ null, %if.end10.if.end29_crit_edge ], [ null, %do.end5.if.end29_crit_edge ]
  %26 = ptrtoint ptr %reset_context to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 -1, ptr %reset_context, align 4
  %27 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %adev, ptr %3, align 4
  %28 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %job, ptr %4, align 4
  %29 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %hive.0557, ptr %5, align 4
  call void @_clear_bit(i32 noundef 0, ptr noundef %6) #17
  %30 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %virt, align 8
  %and.i = and i32 %31, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end29.if.else.i_crit_edge

if.end29.if.else.i_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.end29
  %num_physical_nodes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 4
  %32 = ptrtoint ptr %num_physical_nodes.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %num_physical_nodes.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %33)
  %cmp.i = icmp ugt i32 %33, 1
  br i1 %cmp.i, label %if.then.i, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i

if.then.i:                                        ; preds = %land.lhs.true.i
  br i1 %tobool11.not561, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %34 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %35, ptr noundef nonnull @.str.396) #20
  br label %do.end37

if.end.i:                                         ; preds = %if.then.i
  %device_list.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %hive.0557, i32 0, i32 2
  %36 = ptrtoint ptr %device_list.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %.pn104.i = load ptr, ptr %device_list.i, align 8
  %cmp6.not106.i = icmp eq ptr %.pn104.i, %device_list.i
  br i1 %cmp6.not106.i, label %if.end.i.if.end53_crit_edge, label %for.body.lr.ph.i

if.end.i.if.end53_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end53

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %dep_map.i.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %hive.0557, i32 0, i32 5, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %amdgpu_device_lock_adev.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn107.i = phi ptr [ %.pn104.i, %for.body.lr.ph.i ], [ %.pn.i, %amdgpu_device_lock_adev.exit.i.for.body.i_crit_edge ]
  %in_gpu_reset.i.i = getelementptr i8, ptr %.pn107.i, i32 80820
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %in_gpu_reset.i.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !826
  call void @llvm.prefetch.p0(ptr %in_gpu_reset.i.i, i32 1, i32 3, i32 1) #17
  br label %do.body.i.i.i.i.i

do.body.i.i.i.i.i:                                ; preds = %do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge, %for.body.i
  %37 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %in_gpu_reset.i.i, ptr %in_gpu_reset.i.i, i32 0, i32 1, ptr elementtype(i32) %in_gpu_reset.i.i) #17, !srcloc !827
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %37, 0
  %tobool.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %atomic_cmpxchg.exit.i.i, label %do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge:    ; preds = %do.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i.i.i.i

atomic_cmpxchg.exit.i.i:                          ; preds = %do.body.i.i.i.i.i
  %tmp_adev.0108.i = getelementptr i8, ptr %.pn107.i, i32 -10208
  %asmresult3.i.i.i.i.i = extractvalue { i32, i32 } %37, 1
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !828
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult3.i.i.i.i.i)
  %cmp.not.i.i = icmp eq i32 %asmresult3.i.i.i.i.i, 0
  br i1 %cmp.not.i.i, label %amdgpu_device_lock_adev.exit.i, label %roll_back.i

amdgpu_device_lock_adev.exit.i:                   ; preds = %atomic_cmpxchg.exit.i.i
  %reset_sem3.i.i = getelementptr i8, ptr %.pn107.i, i32 80828
  call void @_down_write_nest_lock(ptr noundef %reset_sem3.i.i, ptr noundef %dep_map.i.i) #17
  %asic_funcs.i.i = getelementptr i8, ptr %.pn107.i, i32 -7812
  %38 = ptrtoint ptr %asic_funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %asic_funcs.i.i, align 4
  %reset_method.i.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %39, i32 0, i32 5
  %40 = ptrtoint ptr %reset_method.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %reset_method.i.i, align 4
  %call5.i.i = call i32 %41(ptr noundef %tmp_adev.0108.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call5.i.i)
  %switch.selectcmp.i.i = icmp eq i32 %call5.i.i, 3
  %switch.select.i.i = select i1 %switch.selectcmp.i.i, i32 3, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call5.i.i)
  %switch.selectcmp17.i.i = icmp eq i32 %call5.i.i, 2
  %switch.select18.i.i = select i1 %switch.selectcmp17.i.i, i32 1, i32 %switch.select.i.i
  %mp1_state.i.i = getelementptr i8, ptr %.pn107.i, i32 80824
  %42 = ptrtoint ptr %mp1_state.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %switch.select18.i.i, ptr %mp1_state.i.i, align 8
  %43 = ptrtoint ptr %.pn107.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %.pn.i = load ptr, ptr %.pn107.i, align 8
  %cmp6.not.i = icmp eq ptr %.pn.i, %device_list.i
  br i1 %cmp6.not.i, label %amdgpu_device_lock_adev.exit.i.if.end53_crit_edge, label %amdgpu_device_lock_adev.exit.i.for.body.i_crit_edge

amdgpu_device_lock_adev.exit.i.for.body.i_crit_edge: ; preds = %amdgpu_device_lock_adev.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

amdgpu_device_lock_adev.exit.i.if.end53_crit_edge: ; preds = %amdgpu_device_lock_adev.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end53

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.end29.if.else.i_crit_edge
  %in_gpu_reset.i73.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 141
  %call.i.i.i74.i = call zeroext i1 @__kasan_check_write(ptr noundef %in_gpu_reset.i73.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !826
  call void @llvm.prefetch.p0(ptr %in_gpu_reset.i73.i, i32 1, i32 3, i32 1) #17
  br label %do.body.i.i.i.i77.i

do.body.i.i.i.i77.i:                              ; preds = %do.body.i.i.i.i77.i.do.body.i.i.i.i77.i_crit_edge, %if.else.i
  %44 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %in_gpu_reset.i73.i, ptr %in_gpu_reset.i73.i, i32 0, i32 1, ptr elementtype(i32) %in_gpu_reset.i73.i) #17, !srcloc !827
  %asmresult.i.i.i.i75.i = extractvalue { i32, i32 } %44, 0
  %tobool.not.i.i.i.i76.i = icmp eq i32 %asmresult.i.i.i.i75.i, 0
  br i1 %tobool.not.i.i.i.i76.i, label %atomic_cmpxchg.exit.i80.i, label %do.body.i.i.i.i77.i.do.body.i.i.i.i77.i_crit_edge

do.body.i.i.i.i77.i.do.body.i.i.i.i77.i_crit_edge: ; preds = %do.body.i.i.i.i77.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i.i.i77.i

atomic_cmpxchg.exit.i80.i:                        ; preds = %do.body.i.i.i.i77.i
  %asmresult3.i.i.i.i78.i = extractvalue { i32, i32 } %44, 1
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !828
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult3.i.i.i.i78.i)
  %cmp.not.i79.i = icmp eq i32 %asmresult3.i.i.i.i78.i, 0
  br i1 %cmp.not.i79.i, label %if.end.i83.i, label %atomic_cmpxchg.exit.i80.i.do.end37_crit_edge

atomic_cmpxchg.exit.i80.i.do.end37_crit_edge:     ; preds = %atomic_cmpxchg.exit.i80.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end37

if.end.i83.i:                                     ; preds = %atomic_cmpxchg.exit.i80.i
  %reset_sem3.i82.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 143
  br i1 %tobool11.not561, label %if.else.i86.i, label %do.body.i85.i

do.body.i85.i:                                    ; preds = %if.end.i83.i
  call void @__sanitizer_cov_trace_pc() #19
  %dep_map.i84.i = getelementptr inbounds %struct.amdgpu_hive_info, ptr %hive.0557, i32 0, i32 5, i32 5
  call void @_down_write_nest_lock(ptr noundef %reset_sem3.i82.i, ptr noundef %dep_map.i84.i) #17
  br label %amdgpu_device_lock_adev.exit96.thread.i

if.else.i86.i:                                    ; preds = %if.end.i83.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @down_write(ptr noundef %reset_sem3.i82.i) #17
  br label %amdgpu_device_lock_adev.exit96.thread.i

amdgpu_device_lock_adev.exit96.thread.i:          ; preds = %if.else.i86.i, %do.body.i85.i
  %asic_funcs.i87.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %45 = ptrtoint ptr %asic_funcs.i87.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %asic_funcs.i87.i, align 4
  %reset_method.i88.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %46, i32 0, i32 5
  %47 = ptrtoint ptr %reset_method.i88.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %reset_method.i88.i, align 4
  %call5.i89.i = call i32 %48(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call5.i89.i)
  %switch.selectcmp.i90.i = icmp eq i32 %call5.i89.i, 3
  %switch.select.i91.i = select i1 %switch.selectcmp.i90.i, i32 3, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call5.i89.i)
  %switch.selectcmp17.i92.i = icmp eq i32 %call5.i89.i, 2
  %switch.select18.i93.i = select i1 %switch.selectcmp17.i92.i, i32 1, i32 %switch.select.i91.i
  %mp1_state.i94.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 142
  %49 = ptrtoint ptr %mp1_state.i94.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %switch.select18.i93.i, ptr %mp1_state.i94.i, align 8
  br label %if.end53

roll_back.i:                                      ; preds = %atomic_cmpxchg.exit.i.i
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn107.i, i32 0, i32 1
  %50 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %prev.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %51, %device_list.i
  br i1 %cmp.i.not.i, label %roll_back.i.do.end37_crit_edge, label %do.end29.i

roll_back.i.do.end37_crit_edge:                   ; preds = %roll_back.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end37

do.end29.i:                                       ; preds = %roll_back.i
  %52 = ptrtoint ptr %tmp_adev.0108.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %tmp_adev.0108.i, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %53, ptr noundef nonnull @.str.399) #20
  %54 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %.pn72110.i = load ptr, ptr %prev.i.i, align 4
  %cmp42.not111.i = icmp eq ptr %.pn72110.i, %device_list.i
  br i1 %cmp42.not111.i, label %do.end29.i.do.end37_crit_edge, label %do.end29.i.for.body44.i_crit_edge

do.end29.i.for.body44.i_crit_edge:                ; preds = %do.end29.i
  br label %for.body44.i

do.end29.i.do.end37_crit_edge:                    ; preds = %do.end29.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end37

for.body44.i:                                     ; preds = %for.body44.i.for.body44.i_crit_edge, %do.end29.i.for.body44.i_crit_edge
  %.pn72112.i = phi ptr [ %.pn72.i, %for.body44.i.for.body44.i_crit_edge ], [ %.pn72110.i, %do.end29.i.for.body44.i_crit_edge ]
  %tmp_adev.1.i = getelementptr i8, ptr %.pn72112.i, i32 -10208
  call void @amdgpu_vf_error_trans_all(ptr noundef %tmp_adev.1.i) #17
  %mp1_state.i97.i = getelementptr i8, ptr %.pn72112.i, i32 80824
  %55 = ptrtoint ptr %mp1_state.i97.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %mp1_state.i97.i, align 8
  %in_gpu_reset.i98.i = getelementptr i8, ptr %.pn72112.i, i32 80820
  %call.i.i.i99.i = call zeroext i1 @__kasan_check_write(ptr noundef %in_gpu_reset.i98.i, i32 noundef 4) #17
  %56 = ptrtoint ptr %in_gpu_reset.i98.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile i32 0, ptr %in_gpu_reset.i98.i, align 4
  %reset_sem.i.i = getelementptr i8, ptr %.pn72112.i, i32 80828
  call void @up_write(ptr noundef %reset_sem.i.i) #17
  %.pn72.in.i = getelementptr inbounds %struct.list_head, ptr %.pn72112.i, i32 0, i32 1
  %57 = ptrtoint ptr %.pn72.in.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %.pn72.i = load ptr, ptr %.pn72.in.i, align 4
  %cmp42.not.i = icmp eq ptr %.pn72.i, %device_list.i
  br i1 %cmp42.not.i, label %for.body44.i.do.end37_crit_edge, label %for.body44.i.for.body44.i_crit_edge

for.body44.i.for.body44.i_crit_edge:              ; preds = %for.body44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body44.i

for.body44.i.do.end37_crit_edge:                  ; preds = %for.body44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end37

do.end37:                                         ; preds = %for.body44.i.do.end37_crit_edge, %do.end29.i.do.end37_crit_edge, %roll_back.i.do.end37_crit_edge, %atomic_cmpxchg.exit.i80.i.do.end37_crit_edge, %do.end.i
  %retval.0.i.ph = phi i32 [ -11, %do.end29.i.do.end37_crit_edge ], [ -11, %atomic_cmpxchg.exit.i80.i.do.end37_crit_edge ], [ -11, %roll_back.i.do.end37_crit_edge ], [ -19, %do.end.i ], [ -11, %for.body44.i.do.end37_crit_edge ]
  %58 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %adev, align 8
  %tobool39.not = icmp eq ptr %job, null
  br i1 %tobool39.not, label %skip_recovery.critedge, label %cond.true40

cond.true40:                                      ; preds = %do.end37
  %id42 = getelementptr inbounds %struct.drm_sched_job, ptr %job, i32 0, i32 5
  %60 = ptrtoint ptr %id42 to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %id42, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %59, ptr noundef nonnull @.str.230, i64 noundef %61) #20
  %vm48 = getelementptr inbounds %struct.amdgpu_job, ptr %job, i32 0, i32 1
  %62 = ptrtoint ptr %vm48 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %vm48, align 8
  %tobool49.not = icmp eq ptr %63, null
  br i1 %tobool49.not, label %cond.true40.skip_recovery_crit_edge, label %if.then50

cond.true40.skip_recovery_crit_edge:              ; preds = %cond.true40
  call void @__sanitizer_cov_trace_pc() #19
  br label %skip_recovery

if.then50:                                        ; preds = %cond.true40
  call void @__sanitizer_cov_trace_pc() #19
  call void @drm_sched_increase_karma(ptr noundef nonnull %job) #17
  br label %skip_recovery

if.end53:                                         ; preds = %amdgpu_device_lock_adev.exit96.thread.i, %amdgpu_device_lock_adev.exit.i.if.end53_crit_edge, %if.end.i.if.end53_crit_edge
  %64 = ptrtoint ptr %device_list to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %device_list, ptr %device_list, align 4
  %65 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %device_list, ptr %1, align 4
  %66 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %virt, align 8
  %and56 = and i32 %67, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and56)
  %tobool57.not = icmp eq i32 %and56, 0
  br i1 %tobool57.not, label %land.lhs.true58, label %if.end53.if.else_crit_edge

if.end53.if.else_crit_edge:                       ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true58:                                  ; preds = %if.end53
  %num_physical_nodes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 4
  %68 = ptrtoint ptr %num_physical_nodes to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %num_physical_nodes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %69)
  %cmp59 = icmp ugt i32 %69, 1
  br i1 %cmp59, label %if.then60, label %land.lhs.true58.if.else_crit_edge

land.lhs.true58.if.else_crit_edge:                ; preds = %land.lhs.true58
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then60:                                        ; preds = %land.lhs.true58
  %device_list61 = getelementptr inbounds %struct.amdgpu_hive_info, ptr %hive.0557, i32 0, i32 2
  %70 = ptrtoint ptr %device_list61 to i32
  call void @__asan_load4_noabort(i32 %70)
  %.pn482576 = load ptr, ptr %device_list61, align 8
  %cmp66.not577 = icmp eq ptr %.pn482576, %device_list61
  br i1 %cmp66.not577, label %if.then60.for.end_crit_edge, label %if.then60.for.body_crit_edge

if.then60.for.body_crit_edge:                     ; preds = %if.then60
  br label %for.body

if.then60.for.end_crit_edge:                      ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body:                                         ; preds = %list_add_tail.exit.for.body_crit_edge, %if.then60.for.body_crit_edge
  %.pn482578 = phi ptr [ %.pn482, %list_add_tail.exit.for.body_crit_edge ], [ %.pn482576, %if.then60.for.body_crit_edge ]
  %reset_list = getelementptr i8, ptr %.pn482578, i32 81204
  %71 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %1, align 4
  %call.i.i494 = call zeroext i1 @__list_add_valid(ptr noundef %reset_list, ptr noundef %72, ptr noundef nonnull %device_list) #17
  br i1 %call.i.i494, label %if.end.i.i, label %for.body.list_add_tail.exit_crit_edge

for.body.list_add_tail.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %73 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %reset_list, ptr %1, align 4
  %74 = ptrtoint ptr %reset_list to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %device_list, ptr %reset_list, align 4
  %prev3.i.i = getelementptr i8, ptr %.pn482578, i32 81208
  %75 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %72, ptr %prev3.i.i, align 4
  %76 = ptrtoint ptr %72 to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile ptr %reset_list, ptr %72, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %for.body.list_add_tail.exit_crit_edge
  %77 = ptrtoint ptr %.pn482578 to i32
  call void @__asan_load4_noabort(i32 %77)
  %.pn482 = load ptr, ptr %.pn482578, align 8
  %cmp66.not = icmp eq ptr %.pn482, %device_list61
  br i1 %cmp66.not, label %list_add_tail.exit.for.end_crit_edge, label %list_add_tail.exit.for.body_crit_edge

list_add_tail.exit.for.body_crit_edge:            ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

list_add_tail.exit.for.end_crit_edge:             ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %list_add_tail.exit.for.end_crit_edge, %if.then60.for.end_crit_edge
  %reset_list74 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 148
  %prev.i495 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 148, i32 1
  %78 = ptrtoint ptr %prev.i495 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %prev.i495, align 4
  %cmp.i496.not = icmp eq ptr %79, %device_list
  br i1 %cmp.i496.not, label %for.end.if.end81_crit_edge, label %if.then77

for.end.if.end81_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end81

if.then77:                                        ; preds = %for.end
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %device_list) #17
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then77.__list_del_entry.exit.i.i_crit_edge

if.then77.__list_del_entry.exit.i.i_crit_edge:    ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #19
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #19
  %80 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %1, align 4
  %82 = ptrtoint ptr %device_list to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %device_list, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %81, ptr %prev1.i.i.i.i, align 4
  %85 = ptrtoint ptr %81 to i32
  call void @__asan_store4_noabort(i32 %85)
  store volatile ptr %83, ptr %81, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %if.then77.__list_del_entry.exit.i.i_crit_edge
  %86 = ptrtoint ptr %prev.i495 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %prev.i495, align 4
  %call.i.i.i.i497 = call zeroext i1 @__list_add_valid(ptr noundef nonnull %device_list, ptr noundef %87, ptr noundef %reset_list74) #17
  br i1 %call.i.i.i.i497, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.if.end81_crit_edge

__list_del_entry.exit.i.i.if.end81_crit_edge:     ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end81

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %88 = ptrtoint ptr %prev.i495 to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %device_list, ptr %prev.i495, align 4
  %89 = ptrtoint ptr %device_list to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %reset_list74, ptr %device_list, align 4
  %90 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %87, ptr %1, align 4
  %91 = ptrtoint ptr %87 to i32
  call void @__asan_store4_noabort(i32 %91)
  store volatile ptr %device_list, ptr %87, align 4
  br label %if.end81

if.else:                                          ; preds = %land.lhs.true58.if.else_crit_edge, %if.end53.if.else_crit_edge
  %reset_list80 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 148
  %call.i.i499 = call zeroext i1 @__list_add_valid(ptr noundef %reset_list80, ptr noundef nonnull %device_list, ptr noundef nonnull %device_list) #17
  br i1 %call.i.i499, label %if.end.i.i501, label %if.else.if.end81_crit_edge

if.else.if.end81_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end81

if.end.i.i501:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %92 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %reset_list80, ptr %1, align 4
  %93 = ptrtoint ptr %reset_list80 to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %device_list, ptr %reset_list80, align 4
  %prev3.i.i500 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 148, i32 1
  %94 = ptrtoint ptr %prev3.i.i500 to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %device_list, ptr %prev3.i.i500, align 4
  %95 = ptrtoint ptr %device_list to i32
  call void @__asan_store4_noabort(i32 %95)
  store volatile ptr %reset_list80, ptr %device_list, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.end.i.i501, %if.else.if.end81_crit_edge, %if.end.i.i.i.i, %__list_del_entry.exit.i.i.if.end81_crit_edge, %for.end.if.end81_crit_edge
  %96 = ptrtoint ptr %device_list to i32
  call void @__asan_load4_noabort(i32 %96)
  %.pn580 = load ptr, ptr %device_list, align 4
  %cmp88.not582 = icmp eq ptr %.pn580, %device_list
  br i1 %cmp88.not582, label %if.end81.for.end135_crit_edge, label %for.body90.lr.ph

if.end81.for.end135_crit_edge:                    ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end135

for.body90.lr.ph:                                 ; preds = %if.end81
  %fb_helper = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2, i32 36
  br label %for.body90

for.body90:                                       ; preds = %for.end128.for.body90_crit_edge, %for.body90.lr.ph
  %.pn584 = phi ptr [ %.pn580, %for.body90.lr.ph ], [ %.pn, %for.end128.for.body90_crit_edge ]
  %audio_suspended.0.off0583 = phi i1 [ false, %for.body90.lr.ph ], [ %tobool92.not, %for.end128.for.body90_crit_edge ]
  %tmp_adev.1585 = getelementptr i8, ptr %.pn584, i32 -91412
  %asic_funcs.i = getelementptr i8, ptr %.pn584, i32 -89016
  %97 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %asic_funcs.i, align 4
  %reset_method1.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %98, i32 0, i32 5
  %99 = ptrtoint ptr %reset_method1.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %reset_method1.i, align 4
  %call.i = call i32 %100(ptr noundef %tmp_adev.1585) #17
  %101 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %101, ptr @__sancov_gen_cov_switch_values.437)
  switch i32 %call.i, label %for.body90.amdgpu_device_suspend_display_audio.exit_crit_edge [
    i32 4, label %for.body90.if.end.i505_crit_edge
    i32 2, label %for.body90.if.end.i505_crit_edge644
  ]

for.body90.if.end.i505_crit_edge644:              ; preds = %for.body90
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i505

for.body90.if.end.i505_crit_edge:                 ; preds = %for.body90
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i505

for.body90.amdgpu_device_suspend_display_audio.exit_crit_edge: ; preds = %for.body90
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_suspend_display_audio.exit

if.end.i505:                                      ; preds = %for.body90.if.end.i505_crit_edge, %for.body90.if.end.i505_crit_edge644
  %pdev.i = getelementptr i8, ptr %.pn584, i32 -91408
  %102 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %pdev.i, align 4
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %103, i32 0, i32 1
  %104 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %bus.i, align 8
  %domain_nr.i.i = getelementptr inbounds %struct.pci_bus, ptr %105, i32 0, i32 16
  %106 = ptrtoint ptr %domain_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %domain_nr.i.i, align 8
  %number.i = getelementptr inbounds %struct.pci_bus, ptr %105, i32 0, i32 12
  %108 = ptrtoint ptr %number.i to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %number.i, align 4
  %conv.i503 = zext i8 %109 to i32
  %call6.i = call ptr @pci_get_domain_bus_and_slot(i32 noundef %107, i32 noundef %conv.i503, i32 noundef 1) #17
  %tobool.not.i504 = icmp eq ptr %call6.i, null
  br i1 %tobool.not.i504, label %if.end.i505.amdgpu_device_suspend_display_audio.exit_crit_edge, label %if.end8.i

if.end.i505.amdgpu_device_suspend_display_audio.exit_crit_edge: ; preds = %if.end.i505
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_suspend_display_audio.exit

if.end8.i:                                        ; preds = %if.end.i505
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %call6.i, i32 0, i32 44
  %call9.i = call i64 @pm_runtime_autosuspend_expiration(ptr noundef %dev.i) #17
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call9.i)
  %tobool10.not.i = icmp eq i64 %call9.i, 0
  br i1 %tobool10.not.i, label %if.then11.i, label %if.end8.i.if.end13.i_crit_edge

if.end8.i.if.end13.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end13.i

if.then11.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  %call12.i = call i64 @ktime_get_mono_fast_ns() #17
  %add.i = add i64 %call12.i, 4000000000
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then11.i, %if.end8.i.if.end13.i_crit_edge
  %expires.0.i = phi i64 [ %call9.i, %if.end8.i.if.end13.i_crit_edge ], [ %add.i, %if.then11.i ]
  %runtime_status.i.i = getelementptr inbounds %struct.pci_dev, ptr %call6.i, i32 0, i32 44, i32 12, i32 18
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end20.i.while.cond.i_crit_edge, %if.end13.i
  %110 = ptrtoint ptr %runtime_status.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %runtime_status.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %111)
  %cmp.i.i = icmp eq i32 %111, 2
  br i1 %cmp.i.i, label %while.cond.i.while.end.i_crit_edge, label %while.body.i

while.cond.i.while.end.i_crit_edge:               ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end.i

while.body.i:                                     ; preds = %while.cond.i
  %call.i.i506 = call i32 @__pm_runtime_suspend(ptr noundef %dev.i, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i506)
  %tobool18.not.i = icmp eq i32 %call.i.i506, 0
  br i1 %tobool18.not.i, label %while.body.i.while.end.i_crit_edge, label %if.end20.i

while.body.i.while.end.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end.i

if.end20.i:                                       ; preds = %while.body.i
  %call21.i = call i64 @ktime_get_mono_fast_ns() #17
  %cmp22.i = icmp ult i64 %expires.0.i, %call21.i
  br i1 %cmp22.i, label %do.end.i507, label %if.end20.i.while.cond.i_crit_edge

if.end20.i.while.cond.i_crit_edge:                ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond.i

do.end.i507:                                      ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #19
  %112 = ptrtoint ptr %tmp_adev.1585 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %tmp_adev.1585, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %113, ptr noundef nonnull @.str.401) #20
  br label %amdgpu_device_suspend_display_audio.exit

while.end.i:                                      ; preds = %while.body.i.while.end.i_crit_edge, %while.cond.i.while.end.i_crit_edge
  call void @__pm_runtime_disable(ptr noundef %dev.i, i1 noundef zeroext true) #17
  br label %amdgpu_device_suspend_display_audio.exit

amdgpu_device_suspend_display_audio.exit:         ; preds = %while.end.i, %do.end.i507, %if.end.i505.amdgpu_device_suspend_display_audio.exit_crit_edge, %for.body90.amdgpu_device_suspend_display_audio.exit_crit_edge
  %tobool92.not = phi i1 [ %audio_suspended.0.off0583, %for.body90.amdgpu_device_suspend_display_audio.exit_crit_edge ], [ %audio_suspended.0.off0583, %if.end.i505.amdgpu_device_suspend_display_audio.exit_crit_edge ], [ %audio_suspended.0.off0583, %do.end.i507 ], [ true, %while.end.i ]
  call void @amdgpu_ras_set_error_query_ready(ptr noundef %tmp_adev.1585, i1 noundef zeroext false) #17
  %delayed_init_work = getelementptr i8, ptr %.pn584, i32 -1236
  %call95 = call zeroext i1 @cancel_delayed_work_sync(ptr noundef %delayed_init_work) #17
  %virt96 = getelementptr i8, ptr %.pn584, i32 -1132
  %114 = ptrtoint ptr %virt96 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %virt96, align 8
  %and98 = and i32 %115, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and98)
  %tobool99.not = icmp eq i32 %and98, 0
  br i1 %tobool99.not, label %if.then100, label %amdgpu_device_suspend_display_audio.exit.if.end102_crit_edge

amdgpu_device_suspend_display_audio.exit.if.end102_crit_edge: ; preds = %amdgpu_device_suspend_display_audio.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end102

if.then100:                                       ; preds = %amdgpu_device_suspend_display_audio.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call101 = call i32 @amdgpu_amdkfd_pre_reset(ptr noundef %tmp_adev.1585) #17
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %amdgpu_device_suspend_display_audio.exit.if.end102_crit_edge
  call void @amdgpu_unregister_gpu_instance(ptr noundef %tmp_adev.1585) #17
  %116 = ptrtoint ptr %fb_helper to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %fb_helper, align 4
  call void @drm_fb_helper_set_suspend_unlocked(ptr noundef %117, i1 noundef zeroext true) #17
  br i1 %call, label %if.end102.if.end108_crit_edge, label %land.lhs.true105

if.end102.if.end108_crit_edge:                    ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end108

land.lhs.true105:                                 ; preds = %if.end102
  %118 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %asic_funcs.i, align 4
  %need_full_reset.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %119, i32 0, i32 14
  %120 = ptrtoint ptr %need_full_reset.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %need_full_reset.i, align 4
  %call.i510 = call zeroext i1 %121(ptr noundef %tmp_adev.1585) #17
  br i1 %call.i510, label %land.lhs.true105.if.then107_crit_edge, label %for.cond.preheader.i

land.lhs.true105.if.then107_crit_edge:            ; preds = %land.lhs.true105
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then107

for.cond.preheader.i:                             ; preds = %land.lhs.true105
  %num_ip_blocks.i = getelementptr i8, ptr %.pn584, i32 -3108
  %122 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %123)
  %cmp55.i = icmp sgt i32 %123, 0
  br i1 %cmp55.i, label %for.cond.preheader.i.for.body.i512_crit_edge, label %for.cond.preheader.i.if.end108_crit_edge

for.cond.preheader.i.if.end108_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end108

for.cond.preheader.i.for.body.i512_crit_edge:     ; preds = %for.cond.preheader.i
  br label %for.body.i512

for.body.i512:                                    ; preds = %for.inc.i.for.body.i512_crit_edge, %for.cond.preheader.i.for.body.i512_crit_edge
  %i.056.i = phi i32 [ %inc.i, %for.inc.i.for.body.i512_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i512_crit_edge ]
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %tmp_adev.1585, i32 0, i32 122, i32 %i.056.i
  %124 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %124)
  %125 = load i8, ptr %arrayidx.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %125)
  %tobool.not.i511 = icmp eq i8 %125, 0
  br i1 %tobool.not.i511, label %for.body.i512.for.inc.i_crit_edge, label %if.end2.i

for.body.i512.for.inc.i_crit_edge:                ; preds = %for.body.i512
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end2.i:                                        ; preds = %for.body.i512
  %version.i = getelementptr %struct.amdgpu_device, ptr %tmp_adev.1585, i32 0, i32 122, i32 %i.056.i, i32 1
  %126 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %version.i, align 4
  %128 = ptrtoint ptr %127 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %127, align 4
  %130 = zext i32 %129 to i64
  call void @__sanitizer_cov_trace_switch(i64 %130, ptr @__sancov_gen_cov_switch_values.438)
  switch i32 %129, label %if.end2.i.for.inc.i_crit_edge [
    i32 1, label %if.end2.i.if.then29.i_crit_edge
    i32 3, label %if.end2.i.if.then29.i_crit_edge645
    i32 10, label %if.end2.i.if.then29.i_crit_edge646
    i32 5, label %if.end2.i.if.then29.i_crit_edge647
    i32 4, label %if.end2.i.if.then29.i_crit_edge648
  ]

if.end2.i.if.then29.i_crit_edge648:               ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.if.then29.i_crit_edge647:               ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.if.then29.i_crit_edge646:               ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.if.then29.i_crit_edge645:               ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.if.then29.i_crit_edge:                  ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29.i

if.end2.i.for.inc.i_crit_edge:                    ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then29.i:                                      ; preds = %if.end2.i.if.then29.i_crit_edge, %if.end2.i.if.then29.i_crit_edge645, %if.end2.i.if.then29.i_crit_edge646, %if.end2.i.if.then29.i_crit_edge647, %if.end2.i.if.then29.i_crit_edge648
  %hang.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i, i32 0, i32 4
  %131 = ptrtoint ptr %hang.i to i32
  call void @__asan_load1_noabort(i32 %131)
  %132 = load i8, ptr %hang.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %132)
  %tobool33.not.i = icmp eq i8 %132, 0
  br i1 %tobool33.not.i, label %if.then29.i.for.inc.i_crit_edge, label %do.end.i513

if.then29.i.for.inc.i_crit_edge:                  ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

do.end.i513:                                      ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #19
  %133 = ptrtoint ptr %tmp_adev.1585 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %tmp_adev.1585, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %134, ptr noundef nonnull @.str.385) #20
  br label %if.then107

for.inc.i:                                        ; preds = %if.then29.i.for.inc.i_crit_edge, %if.end2.i.for.inc.i_crit_edge, %for.body.i512.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.056.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %123
  br i1 %exitcond.not.i, label %for.inc.i.if.end108_crit_edge, label %for.inc.i.for.body.i512_crit_edge

for.inc.i.for.body.i512_crit_edge:                ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i512

for.inc.i.if.end108_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end108

if.then107:                                       ; preds = %do.end.i513, %land.lhs.true105.if.then107_crit_edge
  call void @amdgpu_ras_suspend(ptr noundef %tmp_adev.1585) #17
  br label %if.end108

if.end108:                                        ; preds = %if.then107, %for.inc.i.if.end108_crit_edge, %for.cond.preheader.i.if.end108_crit_edge, %if.end102.if.end108_crit_edge
  %rings = getelementptr i8, ptr %.pn584, i32 -68840
  br label %for.body111

for.body111:                                      ; preds = %cleanup.for.body111_crit_edge, %if.end108
  %i.0579 = phi i32 [ 0, %if.end108 ], [ %inc, %cleanup.for.body111_crit_edge ]
  %arrayidx = getelementptr [28 x ptr], ptr %rings, i32 0, i32 %i.0579
  %135 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %arrayidx, align 4
  %tobool112.not = icmp eq ptr %136, null
  br i1 %tobool112.not, label %for.body111.cleanup_crit_edge, label %lor.lhs.false

for.body111.cleanup_crit_edge:                    ; preds = %for.body111
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false:                                    ; preds = %for.body111
  %sched = getelementptr inbounds %struct.amdgpu_ring, ptr %136, i32 0, i32 3
  %thread = getelementptr inbounds %struct.amdgpu_ring, ptr %136, i32 0, i32 3, i32 11
  %137 = ptrtoint ptr %thread to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %thread, align 8
  %tobool113.not = icmp eq ptr %138, null
  br i1 %tobool113.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end115

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end115:                                        ; preds = %lor.lhs.false
  call void @drm_sched_stop(ptr noundef %sched, ptr noundef %job) #17
  br i1 %call, label %if.then124, label %if.end115.cleanup_crit_edge

if.end115.cleanup_crit_edge:                      ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then124:                                       ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #19
  call void @amdgpu_job_stop_all_jobs_on_sched(ptr noundef %sched) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then124, %if.end115.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %for.body111.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.0579, 1
  %exitcond.not = icmp eq i32 %inc, 28
  br i1 %exitcond.not, label %for.end128, label %cleanup.for.body111_crit_edge

cleanup.for.body111_crit_edge:                    ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body111

for.end128:                                       ; preds = %cleanup
  %gpu_reset_counter = getelementptr i8, ptr %.pn584, i32 -69508
  %call.i.i487 = call zeroext i1 @__kasan_check_write(ptr noundef %gpu_reset_counter, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %gpu_reset_counter, i32 1, i32 3, i32 1) #17
  %139 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %gpu_reset_counter, ptr %gpu_reset_counter, i32 1, ptr elementtype(i32) %gpu_reset_counter) #17, !srcloc !822
  %140 = ptrtoint ptr %.pn584 to i32
  call void @__asan_load4_noabort(i32 %140)
  %.pn = load ptr, ptr %.pn584, align 4
  %cmp88.not = icmp eq ptr %.pn, %device_list
  br i1 %cmp88.not, label %for.end128.for.end135_crit_edge, label %for.end128.for.body90_crit_edge

for.end128.for.body90_crit_edge:                  ; preds = %for.end128
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body90

for.end128.for.end135_crit_edge:                  ; preds = %for.end128
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end135

for.end135:                                       ; preds = %for.end128.for.end135_crit_edge, %if.end81.for.end135_crit_edge
  %audio_suspended.0.off0.lcssa = phi i1 [ false, %if.end81.for.end135_crit_edge ], [ %tobool92.not, %for.end128.for.end135_crit_edge ]
  br i1 %call, label %for.end135.skip_sched_resume_crit_edge, label %if.end138

for.end135.skip_sched_resume_crit_edge:           ; preds = %for.end135
  call void @__sanitizer_cov_trace_pc() #19
  br label %skip_sched_resume

if.end138:                                        ; preds = %for.end135
  %tobool139.not = icmp eq ptr %job, null
  br i1 %tobool139.not, label %if.end138.if.end153_crit_edge, label %land.lhs.true140

if.end138.if.end153_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end153

land.lhs.true140:                                 ; preds = %if.end138
  %s_fence = getelementptr inbounds %struct.drm_sched_job, ptr %job, i32 0, i32 3
  %141 = ptrtoint ptr %s_fence to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %s_fence, align 8
  %parent = getelementptr inbounds %struct.drm_sched_fence, ptr %142, i32 0, i32 2
  %143 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %parent, align 8
  %tobool142.not = icmp eq ptr %144, null
  br i1 %tobool142.not, label %land.lhs.true140.if.end153_crit_edge, label %land.lhs.true143

land.lhs.true140.if.end153_crit_edge:             ; preds = %land.lhs.true140
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end153

land.lhs.true143:                                 ; preds = %land.lhs.true140
  %flags.i = getelementptr inbounds %struct.dma_fence, ptr %144, i32 0, i32 5
  %145 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load volatile i32, ptr %flags.i, align 4
  %and1.i.i = and i32 %146, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i515 = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i515, label %if.end.i517, label %land.lhs.true143.if.then148_crit_edge

land.lhs.true143.if.then148_crit_edge:            ; preds = %land.lhs.true143
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then148

if.end.i517:                                      ; preds = %land.lhs.true143
  %ops.i = getelementptr inbounds %struct.dma_fence, ptr %144, i32 0, i32 1
  %147 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %ops.i, align 4
  %signaled.i = getelementptr inbounds %struct.dma_fence_ops, ptr %148, i32 0, i32 4
  %149 = ptrtoint ptr %signaled.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %signaled.i, align 4
  %tobool1.not.i516 = icmp eq ptr %150, null
  br i1 %tobool1.not.i516, label %if.end.i517.if.end153_crit_edge, label %land.lhs.true.i518

if.end.i517.if.end153_crit_edge:                  ; preds = %if.end.i517
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end153

land.lhs.true.i518:                               ; preds = %if.end.i517
  %call4.i = call zeroext i1 %150(ptr noundef nonnull %144) #17
  br i1 %call4.i, label %if.then5.i, label %land.lhs.true.i518.if.end153_crit_edge

land.lhs.true.i518.if.end153_crit_edge:           ; preds = %land.lhs.true.i518
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end153

if.then5.i:                                       ; preds = %land.lhs.true.i518
  call void @__sanitizer_cov_trace_pc() #19
  %call6.i519 = call i32 @dma_fence_signal(ptr noundef nonnull %144) #17
  br label %if.then148

if.then148:                                       ; preds = %if.then5.i, %land.lhs.true143.if.then148_crit_edge
  %151 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %152, ptr noundef nonnull @.str.233) #20
  br label %skip_hw_reset

if.end153:                                        ; preds = %land.lhs.true.i518.if.end153_crit_edge, %if.end.i517.if.end153_crit_edge, %land.lhs.true140.if.end153_crit_edge, %if.end138.if.end153_crit_edge
  %vram_lost_counter = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 75
  br label %retry

retry:                                            ; preds = %if.else193.retry_crit_edge, %if.end153
  %153 = ptrtoint ptr %device_list to i32
  call void @__asan_load4_noabort(i32 %153)
  %.pn479587 = load ptr, ptr %device_list, align 4
  %cmp160.not589 = icmp eq ptr %.pn479587, %device_list
  br i1 %cmp160.not589, label %retry.for.end178_crit_edge, label %retry.for.body162_crit_edge

retry.for.body162_crit_edge:                      ; preds = %retry
  br label %for.body162

retry.for.end178_crit_edge:                       ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end178

for.body162:                                      ; preds = %for.inc172.for.body162_crit_edge, %retry.for.body162_crit_edge
  %.pn479590 = phi ptr [ %.pn479, %for.inc172.for.body162_crit_edge ], [ %.pn479587, %retry.for.body162_crit_edge ]
  %tmp_adev.2591 = getelementptr i8, ptr %.pn479590, i32 -91412
  %call163 = call i32 @amdgpu_device_pre_asic_reset(ptr noundef %tmp_adev.2591, ptr noundef nonnull %reset_context)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call163)
  %tobool164.not = icmp eq i32 %call163, 0
  br i1 %tobool164.not, label %for.body162.for.inc172_crit_edge, label %do.end168

for.body162.for.inc172_crit_edge:                 ; preds = %for.body162
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc172

do.end168:                                        ; preds = %for.body162
  call void @__sanitizer_cov_trace_pc() #19
  %154 = ptrtoint ptr %tmp_adev.2591 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %tmp_adev.2591, align 8
  %unique = getelementptr i8, ptr %.pn479590, i32 -91300
  %156 = ptrtoint ptr %unique to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %unique, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %155, ptr noundef nonnull @.str.236, i32 noundef %call163, ptr noundef %157) #20
  %asic_reset_res = getelementptr i8, ptr %.pn479590, i32 -48
  %158 = ptrtoint ptr %asic_reset_res to i32
  call void @__asan_store4_noabort(i32 %158)
  store i32 %call163, ptr %asic_reset_res, align 4
  br label %for.inc172

for.inc172:                                       ; preds = %do.end168, %for.body162.for.inc172_crit_edge
  %159 = ptrtoint ptr %.pn479590 to i32
  call void @__asan_load4_noabort(i32 %159)
  %.pn479 = load ptr, ptr %.pn479590, align 4
  %cmp160.not = icmp eq ptr %.pn479, %device_list
  br i1 %cmp160.not, label %for.inc172.for.end178_crit_edge, label %for.inc172.for.body162_crit_edge

for.inc172.for.body162_crit_edge:                 ; preds = %for.inc172
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body162

for.inc172.for.end178_crit_edge:                  ; preds = %for.inc172
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end178

for.end178:                                       ; preds = %for.inc172.for.end178_crit_edge, %retry.for.end178_crit_edge
  %call.i.i488 = call zeroext i1 @__kasan_check_read(ptr noundef %vram_lost_counter, i32 noundef 4) #17
  %160 = ptrtoint ptr %vram_lost_counter to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load volatile i32, ptr %vram_lost_counter, align 4
  %162 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %virt, align 8
  %and182 = and i32 %163, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and182)
  %tobool183.not = icmp eq i32 %and182, 0
  br i1 %tobool183.not, label %if.else193, label %if.then184

if.then184:                                       ; preds = %for.end178
  %call188 = call fastcc i32 @amdgpu_device_reset_sriov(ptr noundef %adev, i1 noundef zeroext %tobool139.not)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call188)
  %tobool189.not = icmp eq i32 %call188, 0
  br i1 %tobool189.not, label %if.then184.skip_hw_reset_crit_edge, label %if.then190

if.then184.skip_hw_reset_crit_edge:               ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #19
  br label %skip_hw_reset

if.then190:                                       ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #19
  %asic_reset_res191 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 146
  %164 = ptrtoint ptr %asic_reset_res191 to i32
  call void @__asan_store4_noabort(i32 %164)
  store i32 %call188, ptr %asic_reset_res191, align 4
  br label %skip_hw_reset

if.else193:                                       ; preds = %for.end178
  %call194 = call i32 @amdgpu_do_asic_reset(ptr noundef nonnull %device_list, ptr noundef nonnull %reset_context)
  %cond631 = icmp eq i32 %call194, -11
  br i1 %cond631, label %if.else193.retry_crit_edge, label %if.else193.skip_hw_reset_crit_edge

if.else193.skip_hw_reset_crit_edge:               ; preds = %if.else193
  call void @__sanitizer_cov_trace_pc() #19
  br label %skip_hw_reset

if.else193.retry_crit_edge:                       ; preds = %if.else193
  call void @__sanitizer_cov_trace_pc() #19
  br label %retry

skip_hw_reset:                                    ; preds = %if.else193.skip_hw_reset_crit_edge, %if.then190, %if.then184.skip_hw_reset_crit_edge, %if.then148
  %tmp_vram_lost_counter.0 = phi i32 [ -1, %if.then148 ], [ %161, %if.then190 ], [ %161, %if.then184.skip_hw_reset_crit_edge ], [ %161, %if.else193.skip_hw_reset_crit_edge ]
  %r.0 = phi i32 [ 0, %if.then148 ], [ %call188, %if.then190 ], [ 0, %if.then184.skip_hw_reset_crit_edge ], [ %call194, %if.else193.skip_hw_reset_crit_edge ]
  %job_signaled.0.off0 = phi i1 [ true, %if.then148 ], [ false, %if.then190 ], [ false, %if.then184.skip_hw_reset_crit_edge ], [ false, %if.else193.skip_hw_reset_crit_edge ]
  %165 = ptrtoint ptr %device_list to i32
  call void @__asan_load4_noabort(i32 %165)
  %.pn480593 = load ptr, ptr %device_list, align 4
  %cmp207.not595 = icmp eq ptr %.pn480593, %device_list
  br i1 %cmp207.not595, label %skip_hw_reset.skip_sched_resume_crit_edge, label %for.body209.lr.ph

skip_hw_reset.skip_sched_resume_crit_edge:        ; preds = %skip_hw_reset
  call void @__sanitizer_cov_trace_pc() #19
  br label %skip_sched_resume

for.body209.lr.ph:                                ; preds = %skip_hw_reset
  %vram_lost_counter212 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 75
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.0)
  %tobool255.not = icmp eq i32 %r.0, 0
  %conv = sext i32 %r.0 to i64
  br label %for.body209

for.body209:                                      ; preds = %for.inc281.for.body209_crit_edge, %for.body209.lr.ph
  %.pn480596 = phi ptr [ %.pn480593, %for.body209.lr.ph ], [ %.pn480, %for.inc281.for.body209_crit_edge ]
  %tmp_adev.3597 = getelementptr i8, ptr %.pn480596, i32 -91412
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_gpu_recovery to i32))
  %166 = load i32, ptr @amdgpu_gpu_recovery, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %166)
  %cmp210 = icmp eq i32 %166, 2
  br i1 %cmp210, label %land.lhs.true211, label %for.body209.if.end216_crit_edge

for.body209.if.end216_crit_edge:                  ; preds = %for.body209
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end216

land.lhs.true211:                                 ; preds = %for.body209
  %call.i.i489 = call zeroext i1 @__kasan_check_read(ptr noundef %vram_lost_counter212, i32 noundef 4) #17
  %167 = ptrtoint ptr %vram_lost_counter212 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load volatile i32, ptr %vram_lost_counter212, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %tmp_vram_lost_counter.0, i32 %168)
  %cmp214 = icmp slt i32 %tmp_vram_lost_counter.0, %168
  br i1 %cmp214, label %land.lhs.true211.if.end216_crit_edge, label %if.then215

land.lhs.true211.if.end216_crit_edge:             ; preds = %land.lhs.true211
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end216

if.then215:                                       ; preds = %land.lhs.true211
  %virt.i522 = getelementptr i8, ptr %.pn480596, i32 -1132
  %asic_reset_res.i = getelementptr i8, ptr %.pn480596, i32 -48
  %gpu_reset_counter.i = getelementptr i8, ptr %.pn480596, i32 -69508
  br label %for.body.i526

for.body.i526:                                    ; preds = %cleanup.i.for.body.i526_crit_edge, %if.then215
  %i.0111.i = phi i32 [ 0, %if.then215 ], [ %inc.i537, %cleanup.i.for.body.i526_crit_edge ]
  %arrayidx.i524 = getelementptr %struct.amdgpu_device, ptr %tmp_adev.3597, i32 0, i32 90, i32 %i.0111.i
  %169 = ptrtoint ptr %arrayidx.i524 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %arrayidx.i524, align 4
  %tobool.not.i525 = icmp eq ptr %170, null
  br i1 %tobool.not.i525, label %for.body.i526.cleanup.i_crit_edge, label %lor.lhs.false.i

for.body.i526.cleanup.i_crit_edge:                ; preds = %for.body.i526
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.i

lor.lhs.false.i:                                  ; preds = %for.body.i526
  %sched.i = getelementptr inbounds %struct.amdgpu_ring, ptr %170, i32 0, i32 3
  %thread.i = getelementptr inbounds %struct.amdgpu_ring, ptr %170, i32 0, i32 3, i32 11
  %171 = ptrtoint ptr %thread.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %thread.i, align 8
  %tobool1.not.i527 = icmp eq ptr %172, null
  br i1 %tobool1.not.i527, label %lor.lhs.false.i.cleanup.i_crit_edge, label %if.end.i528

lor.lhs.false.i.cleanup.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.i

if.end.i528:                                      ; preds = %lor.lhs.false.i
  %pending_list.i = getelementptr inbounds %struct.amdgpu_ring, ptr %170, i32 0, i32 3, i32 12
  %173 = ptrtoint ptr %pending_list.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load volatile ptr, ptr %pending_list.i, align 4
  %cmp4.not.i = icmp eq ptr %174, %pending_list.i
  %add.ptr.i = getelementptr i8, ptr %174, i32 -4
  %cmp6110.i = icmp eq ptr %add.ptr.i, null
  %cmp6.i = or i1 %cmp4.not.i, %cmp6110.i
  br i1 %cmp6.i, label %if.end.i528.cleanup.i_crit_edge, label %if.end8.i529

if.end.i528.cleanup.i_crit_edge:                  ; preds = %if.end.i528
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.i

if.end8.i529:                                     ; preds = %if.end.i528
  call void @drm_sched_reset_karma(ptr noundef nonnull %add.ptr.i) #17
  %s_fence.i = getelementptr i8, ptr %174, i32 12
  %175 = ptrtoint ptr %s_fence.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %s_fence.i, align 8
  %parent.i = getelementptr inbounds %struct.drm_sched_fence, ptr %176, i32 0, i32 2
  %177 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %parent.i, align 8
  %tobool.not.i.i = icmp eq ptr %178, null
  br i1 %tobool.not.i.i, label %if.end8.i529.dma_fence_get.exit.i_crit_edge, label %if.then.i.i

if.end8.i529.dma_fence_get.exit.i_crit_edge:      ; preds = %if.end8.i529
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_fence_get.exit.i

if.then.i.i:                                      ; preds = %if.end8.i529
  %refcount.i.i = getelementptr inbounds %struct.dma_fence, ptr %178, i32 0, i32 6
  %call.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %refcount.i.i, i32 1, i32 3, i32 1) #17
  %179 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i, ptr %refcount.i.i, i32 1, ptr elementtype(i32) %refcount.i.i) #17, !srcloc !829
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %179, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i.i, label %if.then.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i.i, !prof !768

if.then.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i:                              ; preds = %if.then.i.i
  %add.i.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i.i, 1
  %180 = or i32 %add.i.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %180)
  %.not.i.i.i.i.i.i = icmp sgt i32 %180, -1
  br i1 %.not.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.dma_fence_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, !prof !775

if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i.dma_fence_get.exit.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_fence_get.exit.i

if.end15.sink.split.i.i.i.i.i.i:                  ; preds = %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, %if.then.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i.i = phi i32 [ 2, %if.then.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i.i, i32 noundef %.sink.i.i.i.i.i.i) #17
  br label %dma_fence_get.exit.i

dma_fence_get.exit.i:                             ; preds = %if.end15.sink.split.i.i.i.i.i.i, %if.else.i.i.i.i.i.i.dma_fence_get.exit.i_crit_edge, %if.end8.i529.dma_fence_get.exit.i_crit_edge
  call void @drm_sched_resubmit_jobs_ext(ptr noundef %sched.i, i32 noundef 1) #17
  %181 = ptrtoint ptr %s_fence.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %s_fence.i, align 8
  %parent11.i = getelementptr inbounds %struct.drm_sched_fence, ptr %182, i32 0, i32 2
  %183 = ptrtoint ptr %parent11.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %parent11.i, align 8
  %timeout.i = getelementptr inbounds %struct.amdgpu_ring, ptr %170, i32 0, i32 3, i32 2
  %185 = ptrtoint ptr %timeout.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %timeout.i, align 8
  %call13.i = call i32 @dma_fence_wait_timeout(ptr noundef %184, i1 noundef zeroext false, i32 noundef %186) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %cmp14.i = icmp eq i32 %call13.i, 0
  br i1 %cmp14.i, label %if.then15.i, label %if.end29.i

if.then15.i:                                      ; preds = %dma_fence_get.exit.i
  %name.i = getelementptr inbounds %struct.amdgpu_ring, ptr %170, i32 0, i32 3, i32 3
  %187 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %name.i, align 4
  %id.i = getelementptr i8, ptr %174, i32 36
  %189 = ptrtoint ptr %id.i to i32
  call void @__asan_load8_noabort(i32 %189)
  %190 = load i64, ptr %id.i, align 8
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.409, ptr noundef %188, i64 noundef %190) #17
  call void @drm_sched_increase_karma(ptr noundef nonnull %add.ptr.i) #17
  br label %retry.i

retry.i:                                          ; preds = %if.else.i531.retry.i_crit_edge, %if.then15.i
  %191 = ptrtoint ptr %virt.i522 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %virt.i522, align 8
  %and.i530 = and i32 %192, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i530)
  %tobool17.not.i = icmp eq i32 %and.i530, 0
  br i1 %tobool17.not.i, label %if.else.i531, label %if.then18.i

if.then18.i:                                      ; preds = %retry.i
  call void @amdgpu_virt_fini_data_exchange(ptr noundef %tmp_adev.3597) #17
  %call19.i = call fastcc i32 @amdgpu_device_reset_sriov(ptr noundef %tmp_adev.3597, i1 noundef zeroext false) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19.i)
  %tobool20.not.i = icmp eq i32 %call19.i, 0
  br i1 %tobool20.not.i, label %if.then18.i.if.end28.i_crit_edge, label %if.then21.i

if.then18.i.if.end28.i_crit_edge:                 ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28.i

if.then21.i:                                      ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #19
  %193 = ptrtoint ptr %asic_reset_res.i to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 %call19.i, ptr %asic_reset_res.i, align 4
  br label %if.end28.i

if.else.i531:                                     ; preds = %retry.i
  call void @_clear_bit(i32 noundef 1, ptr noundef %6) #17
  %call23.i = call i32 @amdgpu_do_asic_reset(ptr noundef nonnull %device_list, ptr noundef nonnull %reset_context) #17
  %cond.i = icmp eq i32 %call23.i, -11
  br i1 %cond.i, label %if.else.i531.retry.i_crit_edge, label %if.else.i531.if.end28.i_crit_edge

if.else.i531.if.end28.i_crit_edge:                ; preds = %if.else.i531
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28.i

if.else.i531.retry.i_crit_edge:                   ; preds = %if.else.i531
  call void @__sanitizer_cov_trace_pc() #19
  br label %retry.i

if.end28.i:                                       ; preds = %if.else.i531.if.end28.i_crit_edge, %if.then21.i, %if.then18.i.if.end28.i_crit_edge
  %call.i.i.i532 = call zeroext i1 @__kasan_check_write(ptr noundef %gpu_reset_counter.i, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %gpu_reset_counter.i, i32 1, i32 3, i32 1) #17
  %194 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %gpu_reset_counter.i, ptr %gpu_reset_counter.i, i32 1, ptr elementtype(i32) %gpu_reset_counter.i) #17, !srcloc !822
  br label %cleanup.i

if.end29.i:                                       ; preds = %dma_fence_get.exit.i
  %score.i = getelementptr inbounds %struct.amdgpu_ring, ptr %170, i32 0, i32 3, i32 15
  %195 = ptrtoint ptr %score.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %score.i, align 4
  %call.i.i80.i = call zeroext i1 @__kasan_check_write(ptr noundef %196, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %196, i32 1, i32 3, i32 1) #17
  %197 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %196, ptr %196, i32 1, ptr elementtype(i32) %196) #17, !srcloc !830
  %198 = ptrtoint ptr %s_fence.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %s_fence.i, align 8
  %parent32.i = getelementptr inbounds %struct.drm_sched_fence, ptr %199, i32 0, i32 2
  %200 = ptrtoint ptr %parent32.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %parent32.i, align 8
  %tobool.not.i81.i533 = icmp eq ptr %201, null
  br i1 %tobool.not.i81.i533, label %if.end29.i.dma_fence_put.exit.i_crit_edge, label %if.then.i84.i

if.end29.i.dma_fence_put.exit.i_crit_edge:        ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_fence_put.exit.i

if.then.i84.i:                                    ; preds = %if.end29.i
  %refcount.i82.i = getelementptr inbounds %struct.dma_fence, ptr %201, i32 0, i32 6
  %call.i.i.i.i.i.i.i83.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i82.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !823
  call void @llvm.prefetch.p0(ptr %refcount.i82.i, i32 1, i32 3, i32 1) #17
  %202 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i82.i, ptr %refcount.i82.i, i32 1, ptr elementtype(i32) %refcount.i82.i) #17, !srcloc !824
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %202, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i, label %if.end5.i.i.i.i.i.i

if.end5.i.i.i.i.i.i:                              ; preds = %if.then.i84.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i85.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i85.i, label %if.end5.i.i.i.i.i.i.dma_fence_put.exit.i_crit_edge, label %if.then10.i.i.i.i.i.i, !prof !775

if.end5.i.i.i.i.i.i.dma_fence_put.exit.i_crit_edge: ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_fence_put.exit.i

if.then10.i.i.i.i.i.i:                            ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %refcount.i82.i, i32 noundef 3) #17
  br label %dma_fence_put.exit.i

if.then.i.i.i:                                    ; preds = %if.then.i84.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !825
  call void @dma_fence_release(ptr noundef %refcount.i82.i) #17
  br label %dma_fence_put.exit.i

dma_fence_put.exit.i:                             ; preds = %if.then.i.i.i, %if.then10.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.dma_fence_put.exit.i_crit_edge, %if.end29.i.dma_fence_put.exit.i_crit_edge
  %203 = ptrtoint ptr %s_fence.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %s_fence.i, align 8
  %refcount.i87.i = getelementptr inbounds %struct.drm_sched_fence, ptr %204, i32 0, i32 1, i32 6
  %call.i.i.i.i.i.i.i88.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i87.i, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %refcount.i87.i, i32 1, i32 3, i32 1) #17
  %205 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i87.i, ptr %refcount.i87.i, i32 1, ptr elementtype(i32) %refcount.i87.i) #17, !srcloc !829
  %asmresult.i.i.i.i.i.i.i89.i = extractvalue { i32, i32, i32 } %205, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i89.i)
  %tobool1.not.i.i.i.i.i90.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i89.i, 0
  br i1 %tobool1.not.i.i.i.i.i90.i, label %dma_fence_put.exit.i.if.end15.sink.split.i.i.i.i.i96.i_crit_edge, label %if.else.i.i.i.i.i94.i, !prof !768

dma_fence_put.exit.i.if.end15.sink.split.i.i.i.i.i96.i_crit_edge: ; preds = %dma_fence_put.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i96.i

if.else.i.i.i.i.i94.i:                            ; preds = %dma_fence_put.exit.i
  %add.i.i.i.i.i92.i = add i32 %asmresult.i.i.i.i.i.i.i89.i, 1
  %206 = or i32 %add.i.i.i.i.i92.i, %asmresult.i.i.i.i.i.i.i89.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %206)
  %.not.i.i.i.i.i93.i = icmp sgt i32 %206, -1
  br i1 %.not.i.i.i.i.i93.i, label %if.else.i.i.i.i.i94.i.dma_fence_get.exit97.i_crit_edge, label %if.else.i.i.i.i.i94.i.if.end15.sink.split.i.i.i.i.i96.i_crit_edge, !prof !775

if.else.i.i.i.i.i94.i.if.end15.sink.split.i.i.i.i.i96.i_crit_edge: ; preds = %if.else.i.i.i.i.i94.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i96.i

if.else.i.i.i.i.i94.i.dma_fence_get.exit97.i_crit_edge: ; preds = %if.else.i.i.i.i.i94.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_fence_get.exit97.i

if.end15.sink.split.i.i.i.i.i96.i:                ; preds = %if.else.i.i.i.i.i94.i.if.end15.sink.split.i.i.i.i.i96.i_crit_edge, %dma_fence_put.exit.i.if.end15.sink.split.i.i.i.i.i96.i_crit_edge
  %.sink.i.i.i.i.i95.i = phi i32 [ 2, %dma_fence_put.exit.i.if.end15.sink.split.i.i.i.i.i96.i_crit_edge ], [ 1, %if.else.i.i.i.i.i94.i.if.end15.sink.split.i.i.i.i.i96.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i87.i, i32 noundef %.sink.i.i.i.i.i95.i) #17
  br label %dma_fence_get.exit97.i

dma_fence_get.exit97.i:                           ; preds = %if.end15.sink.split.i.i.i.i.i96.i, %if.else.i.i.i.i.i94.i.dma_fence_get.exit97.i_crit_edge
  %207 = ptrtoint ptr %s_fence.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %s_fence.i, align 8
  %finished36.i = getelementptr inbounds %struct.drm_sched_fence, ptr %208, i32 0, i32 1
  %call37.i = call i32 @dma_fence_signal(ptr noundef %finished36.i) #17
  %209 = ptrtoint ptr %s_fence.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %s_fence.i, align 8
  %refcount.i99.i = getelementptr inbounds %struct.drm_sched_fence, ptr %210, i32 0, i32 1, i32 6
  %call.i.i.i.i.i.i.i100.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i99.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !823
  call void @llvm.prefetch.p0(ptr %refcount.i99.i, i32 1, i32 3, i32 1) #17
  %211 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i99.i, ptr %refcount.i99.i, i32 1, ptr elementtype(i32) %refcount.i99.i) #17, !srcloc !824
  %asmresult.i.i.i.i.i.i.i.i101.i = extractvalue { i32, i32, i32 } %211, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i101.i)
  %cmp.i.i.i.i.i102.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i101.i, 1
  br i1 %cmp.i.i.i.i.i102.i, label %if.then.i.i107.i, label %if.end5.i.i.i.i.i105.i

if.end5.i.i.i.i.i105.i:                           ; preds = %dma_fence_get.exit97.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i101.i)
  %.not.i.i.i.i.i104.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i101.i, 0
  br i1 %.not.i.i.i.i.i104.i, label %if.end5.i.i.i.i.i105.i.dma_fence_put.exit108.i_crit_edge, label %if.then10.i.i.i.i.i106.i, !prof !775

if.end5.i.i.i.i.i105.i.dma_fence_put.exit108.i_crit_edge: ; preds = %if.end5.i.i.i.i.i105.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_fence_put.exit108.i

if.then10.i.i.i.i.i106.i:                         ; preds = %if.end5.i.i.i.i.i105.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %refcount.i99.i, i32 noundef 3) #17
  br label %dma_fence_put.exit108.i

if.then.i.i107.i:                                 ; preds = %dma_fence_get.exit97.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !825
  call void @dma_fence_release(ptr noundef %refcount.i99.i) #17
  br label %dma_fence_put.exit108.i

dma_fence_put.exit108.i:                          ; preds = %if.then.i.i107.i, %if.then10.i.i.i.i.i106.i, %if.end5.i.i.i.i.i105.i.dma_fence_put.exit108.i_crit_edge
  %job_list_lock.i = getelementptr inbounds %struct.amdgpu_ring, ptr %170, i32 0, i32 3, i32 13
  call void @_raw_spin_lock(ptr noundef %job_list_lock.i) #17
  %call.i.i109.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %174) #17
  br i1 %call.i.i109.i, label %if.end.i.i.i536, label %dma_fence_put.exit108.i.list_del_init.exit.i_crit_edge

dma_fence_put.exit108.i.list_del_init.exit.i_crit_edge: ; preds = %dma_fence_put.exit108.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del_init.exit.i

if.end.i.i.i536:                                  ; preds = %dma_fence_put.exit108.i
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i.i534 = getelementptr inbounds %struct.list_head, ptr %174, i32 0, i32 1
  %212 = ptrtoint ptr %prev.i.i.i534 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %prev.i.i.i534, align 4
  %214 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %174, align 4
  %prev1.i.i.i.i535 = getelementptr inbounds %struct.list_head, ptr %215, i32 0, i32 1
  %216 = ptrtoint ptr %prev1.i.i.i.i535 to i32
  call void @__asan_store4_noabort(i32 %216)
  store ptr %213, ptr %prev1.i.i.i.i535, align 4
  %217 = ptrtoint ptr %213 to i32
  call void @__asan_store4_noabort(i32 %217)
  store volatile ptr %215, ptr %213, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i536, %dma_fence_put.exit108.i.list_del_init.exit.i_crit_edge
  %218 = ptrtoint ptr %174 to i32
  call void @__asan_store4_noabort(i32 %218)
  store volatile ptr %174, ptr %174, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %174, i32 0, i32 1
  %219 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %219)
  store ptr %174, ptr %prev.i3.i.i, align 4
  call void @_raw_spin_unlock(ptr noundef %job_list_lock.i) #17
  %220 = ptrtoint ptr %sched.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %sched.i, align 8
  %free_job.i = getelementptr inbounds %struct.drm_sched_backend_ops, ptr %221, i32 0, i32 3
  %222 = ptrtoint ptr %free_job.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %free_job.i, align 4
  call void %223(ptr noundef nonnull %add.ptr.i) #17
  br label %cleanup.i

cleanup.i:                                        ; preds = %list_del_init.exit.i, %if.end28.i, %if.end.i528.cleanup.i_crit_edge, %lor.lhs.false.i.cleanup.i_crit_edge, %for.body.i526.cleanup.i_crit_edge
  %inc.i537 = add nuw nsw i32 %i.0111.i, 1
  %exitcond.not.i538 = icmp eq i32 %inc.i537, 28
  br i1 %exitcond.not.i538, label %cleanup.i.if.end216_crit_edge, label %cleanup.i.for.body.i526_crit_edge

cleanup.i.for.body.i526_crit_edge:                ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i526

cleanup.i.if.end216_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end216

if.end216:                                        ; preds = %cleanup.i.if.end216_crit_edge, %land.lhs.true211.if.end216_crit_edge, %for.body209.if.end216_crit_edge
  %rings221 = getelementptr i8, ptr %.pn480596, i32 -68840
  %asic_reset_res230 = getelementptr i8, ptr %.pn480596, i32 -48
  br label %for.body219

for.body219:                                      ; preds = %cleanup241.for.body219_crit_edge, %if.end216
  %i.1592 = phi i32 [ 0, %if.end216 ], [ %inc245, %cleanup241.for.body219_crit_edge ]
  %arrayidx222 = getelementptr [28 x ptr], ptr %rings221, i32 0, i32 %i.1592
  %224 = ptrtoint ptr %arrayidx222 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %arrayidx222, align 4
  %tobool223.not = icmp eq ptr %225, null
  br i1 %tobool223.not, label %for.body219.cleanup241_crit_edge, label %lor.lhs.false224

for.body219.cleanup241_crit_edge:                 ; preds = %for.body219
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup241

lor.lhs.false224:                                 ; preds = %for.body219
  %sched225 = getelementptr inbounds %struct.amdgpu_ring, ptr %225, i32 0, i32 3
  %thread226 = getelementptr inbounds %struct.amdgpu_ring, ptr %225, i32 0, i32 3, i32 11
  %226 = ptrtoint ptr %thread226 to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %thread226, align 8
  %tobool227.not = icmp eq ptr %227, null
  br i1 %tobool227.not, label %lor.lhs.false224.cleanup241_crit_edge, label %if.end229

lor.lhs.false224.cleanup241_crit_edge:            ; preds = %lor.lhs.false224
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup241

if.end229:                                        ; preds = %lor.lhs.false224
  %228 = ptrtoint ptr %asic_reset_res230 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %asic_reset_res230, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %229)
  %tobool231.not = icmp ne i32 %229, 0
  %brmerge = or i1 %job_signaled.0.off0, %tobool231.not
  br i1 %brmerge, label %if.end229.if.end236_crit_edge, label %if.then234

if.end229.if.end236_crit_edge:                    ; preds = %if.end229
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end236

if.then234:                                       ; preds = %if.end229
  call void @__sanitizer_cov_trace_pc() #19
  call void @drm_sched_resubmit_jobs(ptr noundef %sched225) #17
  br label %if.end236

if.end236:                                        ; preds = %if.then234, %if.end229.if.end236_crit_edge
  %230 = ptrtoint ptr %asic_reset_res230 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %asic_reset_res230, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %231)
  %tobool239.not = icmp eq i32 %231, 0
  call void @drm_sched_start(ptr noundef %sched225, i1 noundef zeroext %tobool239.not) #17
  br label %cleanup241

cleanup241:                                       ; preds = %if.end236, %lor.lhs.false224.cleanup241_crit_edge, %for.body219.cleanup241_crit_edge
  %inc245 = add nuw nsw i32 %i.1592, 1
  %exitcond613.not = icmp eq i32 %inc245, 28
  br i1 %exitcond613.not, label %for.end246, label %cleanup241.for.body219_crit_edge

cleanup241.for.body219_crit_edge:                 ; preds = %cleanup241
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body219

for.end246:                                       ; preds = %cleanup241
  %ddev.i539 = getelementptr i8, ptr %.pn480596, i32 -91404
  %driver.i.i.i = getelementptr i8, ptr %.pn480596, i32 -91336
  %232 = ptrtoint ptr %driver.i.i.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %driver.i.i.i, align 4
  %driver_features.i.i.i = getelementptr inbounds %struct.drm_driver, ptr %233, i32 0, i32 24
  %234 = ptrtoint ptr %driver_features.i.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %driver_features.i.i.i, align 4
  %driver_features1.i.i.i = getelementptr i8, ptr %.pn480596, i32 -91312
  %236 = ptrtoint ptr %driver_features1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %driver_features1.i.i.i, align 4
  %and.i.i.i = and i32 %235, 16
  %and2.i.i.i = and i32 %and.i.i.i, %237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i.i)
  %cmp.i.i.not.i = icmp eq i32 %and2.i.i.i, 0
  br i1 %cmp.i.i.not.i, label %lor.rhs.i, label %for.end246.if.end253_crit_edge

for.end246.if.end253_crit_edge:                   ; preds = %for.end246
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end253

lor.rhs.i:                                        ; preds = %for.end246
  %funcs.i = getelementptr i8, ptr %.pn480596, i32 -90000
  %238 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %funcs.i, align 4
  %tobool.not.i540 = icmp eq ptr %239, null
  br i1 %tobool.not.i540, label %lor.rhs.i.drm_drv_uses_atomic_modeset.exit_crit_edge, label %land.rhs.i

lor.rhs.i.drm_drv_uses_atomic_modeset.exit_crit_edge: ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %drm_drv_uses_atomic_modeset.exit

land.rhs.i:                                       ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  %atomic_commit.i = getelementptr inbounds %struct.drm_mode_config_funcs, ptr %239, i32 0, i32 5
  %240 = ptrtoint ptr %atomic_commit.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %atomic_commit.i, align 4
  %cmp.i541 = icmp ne ptr %241, null
  br label %drm_drv_uses_atomic_modeset.exit

drm_drv_uses_atomic_modeset.exit:                 ; preds = %land.rhs.i, %lor.rhs.i.drm_drv_uses_atomic_modeset.exit_crit_edge
  %242 = phi i1 [ false, %lor.rhs.i.drm_drv_uses_atomic_modeset.exit_crit_edge ], [ %cmp.i541, %land.rhs.i ]
  %brmerge486 = or i1 %job_signaled.0.off0, %242
  br i1 %brmerge486, label %drm_drv_uses_atomic_modeset.exit.if.end253_crit_edge, label %if.then251

drm_drv_uses_atomic_modeset.exit.if.end253_crit_edge: ; preds = %drm_drv_uses_atomic_modeset.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end253

if.then251:                                       ; preds = %drm_drv_uses_atomic_modeset.exit
  call void @__sanitizer_cov_trace_pc() #19
  call void @drm_helper_resume_force_mode(ptr noundef %ddev.i539) #17
  br label %if.end253

if.end253:                                        ; preds = %if.then251, %drm_drv_uses_atomic_modeset.exit.if.end253_crit_edge, %for.end246.if.end253_crit_edge
  %243 = ptrtoint ptr %asic_reset_res230 to i32
  call void @__asan_store4_noabort(i32 %243)
  store i32 0, ptr %asic_reset_res230, align 4
  %244 = ptrtoint ptr %tmp_adev.3597 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %tmp_adev.3597, align 8
  %gpu_reset_counter268 = getelementptr i8, ptr %.pn480596, i32 -69508
  %call.i.i491 = call zeroext i1 @__kasan_check_read(ptr noundef %gpu_reset_counter268, i32 noundef 4) #17
  %246 = ptrtoint ptr %gpu_reset_counter268 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load volatile i32, ptr %gpu_reset_counter268, align 4
  br i1 %tobool255.not, label %do.end266, label %do.end259

do.end259:                                        ; preds = %if.end253
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %245, ptr noundef nonnull @.str.239, i32 noundef %247) #20
  call void @amdgpu_vf_error_put(ptr noundef %tmp_adev.3597, i16 noundef zeroext 9, i16 noundef zeroext 0, i64 noundef %conv) #17
  br label %for.inc281

do.end266:                                        ; preds = %if.end253
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %245, ptr noundef nonnull @.str.242, i32 noundef %247) #20
  br label %for.inc281

for.inc281:                                       ; preds = %do.end266, %do.end259
  %248 = ptrtoint ptr %.pn480596 to i32
  call void @__asan_load4_noabort(i32 %248)
  %.pn480 = load ptr, ptr %.pn480596, align 4
  %cmp207.not = icmp eq ptr %.pn480, %device_list
  br i1 %cmp207.not, label %for.inc281.skip_sched_resume_crit_edge, label %for.inc281.for.body209_crit_edge

for.inc281.for.body209_crit_edge:                 ; preds = %for.inc281
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body209

for.inc281.skip_sched_resume_crit_edge:           ; preds = %for.inc281
  call void @__sanitizer_cov_trace_pc() #19
  br label %skip_sched_resume

skip_sched_resume:                                ; preds = %for.inc281.skip_sched_resume_crit_edge, %skip_hw_reset.skip_sched_resume_crit_edge, %for.end135.skip_sched_resume_crit_edge
  %r.1 = phi i32 [ 0, %for.end135.skip_sched_resume_crit_edge ], [ %r.0, %skip_hw_reset.skip_sched_resume_crit_edge ], [ %r.0, %for.inc281.skip_sched_resume_crit_edge ]
  %249 = ptrtoint ptr %device_list to i32
  call void @__asan_load4_noabort(i32 %249)
  %.pn481599 = load ptr, ptr %device_list, align 4
  %cmp294.not601 = icmp eq ptr %.pn481599, %device_list
  br i1 %cmp294.not601, label %skip_sched_resume.skip_recovery_crit_edge, label %for.body297.lr.ph

skip_sched_resume.skip_recovery_crit_edge:        ; preds = %skip_sched_resume
  call void @__sanitizer_cov_trace_pc() #19
  br label %skip_recovery

for.body297.lr.ph:                                ; preds = %skip_sched_resume
  %init_complete = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 115, i32 2
  br label %for.body297

for.body297:                                      ; preds = %if.end312.for.body297_crit_edge, %for.body297.lr.ph
  %.pn481602 = phi ptr [ %.pn481599, %for.body297.lr.ph ], [ %.pn481, %if.end312.for.body297_crit_edge ]
  %tmp_adev.4603 = getelementptr i8, ptr %.pn481602, i32 -91412
  br i1 %call, label %for.body297.if.end306_crit_edge, label %land.lhs.true299

for.body297.if.end306_crit_edge:                  ; preds = %for.body297
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end306

land.lhs.true299:                                 ; preds = %for.body297
  %virt300 = getelementptr i8, ptr %.pn481602, i32 -1132
  %250 = ptrtoint ptr %virt300 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %virt300, align 8
  %and302 = and i32 %251, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and302)
  %tobool303.not = icmp eq i32 %and302, 0
  br i1 %tobool303.not, label %if.then304, label %land.lhs.true299.if.end306_crit_edge

land.lhs.true299.if.end306_crit_edge:             ; preds = %land.lhs.true299
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end306

if.then304:                                       ; preds = %land.lhs.true299
  call void @__sanitizer_cov_trace_pc() #19
  %call305 = call i32 @amdgpu_amdkfd_post_reset(ptr noundef %tmp_adev.4603) #17
  br label %if.end306

if.end306:                                        ; preds = %if.then304, %land.lhs.true299.if.end306_crit_edge, %for.body297.if.end306_crit_edge
  %252 = ptrtoint ptr %init_complete to i32
  call void @__asan_load1_noabort(i32 %252)
  %253 = load i8, ptr %init_complete, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %253)
  %tobool307.not = icmp eq i8 %253, 0
  br i1 %tobool307.not, label %if.then308, label %if.end306.if.end309_crit_edge

if.end306.if.end309_crit_edge:                    ; preds = %if.end306
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end309

if.then308:                                       ; preds = %if.end306
  call void @__sanitizer_cov_trace_pc() #19
  call void @amdgpu_amdkfd_device_init(ptr noundef %adev) #17
  br label %if.end309

if.end309:                                        ; preds = %if.then308, %if.end306.if.end309_crit_edge
  br i1 %audio_suspended.0.off0.lcssa, label %if.then311, label %if.end309.if.end312_crit_edge

if.end309.if.end312_crit_edge:                    ; preds = %if.end309
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end312

if.then311:                                       ; preds = %if.end309
  %pdev.i544 = getelementptr i8, ptr %.pn481602, i32 -91408
  %254 = ptrtoint ptr %pdev.i544 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %pdev.i544, align 4
  %bus.i545 = getelementptr inbounds %struct.pci_dev, ptr %255, i32 0, i32 1
  %256 = ptrtoint ptr %bus.i545 to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %bus.i545, align 8
  %domain_nr.i.i546 = getelementptr inbounds %struct.pci_bus, ptr %257, i32 0, i32 16
  %258 = ptrtoint ptr %domain_nr.i.i546 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %domain_nr.i.i546, align 8
  %number.i547 = getelementptr inbounds %struct.pci_bus, ptr %257, i32 0, i32 12
  %260 = ptrtoint ptr %number.i547 to i32
  call void @__asan_load1_noabort(i32 %260)
  %261 = load i8, ptr %number.i547, align 4
  %conv.i548 = zext i8 %261 to i32
  %call3.i = call ptr @pci_get_domain_bus_and_slot(i32 noundef %259, i32 noundef %conv.i548, i32 noundef 1) #17
  %tobool.not.i549 = icmp eq ptr %call3.i, null
  br i1 %tobool.not.i549, label %if.then311.if.end312_crit_edge, label %if.then.i552

if.then311.if.end312_crit_edge:                   ; preds = %if.then311
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end312

if.then.i552:                                     ; preds = %if.then311
  call void @__sanitizer_cov_trace_pc() #19
  %dev.i550 = getelementptr inbounds %struct.pci_dev, ptr %call3.i, i32 0, i32 44
  call void @pm_runtime_enable(ptr noundef %dev.i550) #17
  %call.i.i551 = call i32 @__pm_runtime_resume(ptr noundef %dev.i550, i32 noundef 0) #17
  br label %if.end312

if.end312:                                        ; preds = %if.then.i552, %if.then311.if.end312_crit_edge, %if.end309.if.end312_crit_edge
  call void @amdgpu_vf_error_trans_all(ptr noundef %tmp_adev.4603) #17
  %mp1_state.i = getelementptr i8, ptr %.pn481602, i32 -380
  %262 = ptrtoint ptr %mp1_state.i to i32
  call void @__asan_store4_noabort(i32 %262)
  store i32 0, ptr %mp1_state.i, align 8
  %in_gpu_reset.i = getelementptr i8, ptr %.pn481602, i32 -384
  %call.i.i.i554 = call zeroext i1 @__kasan_check_write(ptr noundef %in_gpu_reset.i, i32 noundef 4) #17
  %263 = ptrtoint ptr %in_gpu_reset.i to i32
  call void @__asan_store4_noabort(i32 %263)
  store volatile i32 0, ptr %in_gpu_reset.i, align 4
  %reset_sem.i = getelementptr i8, ptr %.pn481602, i32 -376
  call void @up_write(ptr noundef %reset_sem.i) #17
  %264 = ptrtoint ptr %.pn481602 to i32
  call void @__asan_load4_noabort(i32 %264)
  %.pn481 = load ptr, ptr %.pn481602, align 4
  %cmp294.not = icmp eq ptr %.pn481, %device_list
  br i1 %cmp294.not, label %if.end312.skip_recovery_crit_edge, label %if.end312.for.body297_crit_edge

if.end312.for.body297_crit_edge:                  ; preds = %if.end312
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body297

if.end312.skip_recovery_crit_edge:                ; preds = %if.end312
  call void @__sanitizer_cov_trace_pc() #19
  br label %skip_recovery

skip_recovery.critedge:                           ; preds = %do.end37
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %59, ptr noundef nonnull @.str.230, i64 noundef -1) #20
  br label %skip_recovery

skip_recovery:                                    ; preds = %skip_recovery.critedge, %if.end312.skip_recovery_crit_edge, %skip_sched_resume.skip_recovery_crit_edge, %if.then50, %cond.true40.skip_recovery_crit_edge
  %r.2 = phi i32 [ %retval.0.i.ph, %if.then50 ], [ %retval.0.i.ph, %cond.true40.skip_recovery_crit_edge ], [ %retval.0.i.ph, %skip_recovery.critedge ], [ %r.1, %skip_sched_resume.skip_recovery_crit_edge ], [ %r.1, %if.end312.skip_recovery_crit_edge ]
  br i1 %tobool11.not561, label %skip_recovery.if.end324_crit_edge, label %if.then321

skip_recovery.if.end324_crit_edge:                ; preds = %skip_recovery
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end324

if.then321:                                       ; preds = %skip_recovery
  call void @__sanitizer_cov_trace_pc() #19
  %in_reset322 = getelementptr inbounds %struct.amdgpu_hive_info, ptr %hive.0557, i32 0, i32 6
  %call.i.i492 = call zeroext i1 @__kasan_check_write(ptr noundef %in_reset322, i32 noundef 4) #17
  %265 = ptrtoint ptr %in_reset322 to i32
  call void @__asan_store4_noabort(i32 %265)
  store volatile i32 0, ptr %in_reset322, align 4
  %hive_lock323 = getelementptr inbounds %struct.amdgpu_hive_info, ptr %hive.0557, i32 0, i32 5
  call void @mutex_unlock(ptr noundef %hive_lock323) #17
  call void @amdgpu_put_xgmi_hive(ptr noundef nonnull %hive.0557) #17
  br label %if.end324

if.end324:                                        ; preds = %if.then321, %skip_recovery.if.end324_crit_edge
  %266 = zext i32 %r.2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %266, ptr @__sancov_gen_cov_switch_values.439)
  switch i32 %r.2, label %do.end332 [
    i32 0, label %if.end324.cleanup335_crit_edge
    i32 -11, label %if.end324.cleanup335_crit_edge649
  ]

if.end324.cleanup335_crit_edge649:                ; preds = %if.end324
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup335

if.end324.cleanup335_crit_edge:                   ; preds = %if.end324
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup335

do.end332:                                        ; preds = %if.end324
  call void @__sanitizer_cov_trace_pc() #19
  %267 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %268, ptr noundef nonnull @.str.247, i32 noundef %r.2) #20
  br label %cleanup335

cleanup335:                                       ; preds = %do.end332, %if.end324.cleanup335_crit_edge, %if.end324.cleanup335_crit_edge649, %if.end27.critedge, %if.then25, %cond.true.cleanup335_crit_edge
  %retval.0 = phi i32 [ 0, %if.end27.critedge ], [ 0, %if.then25 ], [ 0, %cond.true.cleanup335_crit_edge ], [ %r.2, %if.end324.cleanup335_crit_edge ], [ %r.2, %if.end324.cleanup335_crit_edge649 ], [ %r.2, %do.end332 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %reset_context) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %device_list) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_ras_need_emergency_restart(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ksys_sync_helper() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @emergency_restart() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @amdgpu_get_xgmi_hive(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_put_xgmi_hive(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ras_set_error_query_ready(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_amdkfd_pre_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_unregister_gpu_instance(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_sched_stop(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_job_stop_all_jobs_on_sched(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @amdgpu_device_reset_sriov(ptr noundef %adev, i1 noundef zeroext %from_hypervisor) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @amdgpu_amdkfd_pre_reset(ptr noundef %adev) #17
  %call1 = tail call i32 @amdgpu_amdkfd_pre_reset(ptr noundef %adev) #17
  br i1 %from_hypervisor, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call2 = tail call i32 @amdgpu_virt_request_full_gpu(ptr noundef %adev, i1 noundef zeroext true) #17
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call3 = tail call i32 @amdgpu_virt_reset_gpu(ptr noundef %adev) #17
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %r.0 = phi i32 [ %call2, %if.then ], [ %call3, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.0)
  %tobool4.not = icmp eq i32 %r.0, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %num_ip_blocks.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp40.i = icmp sgt i32 %1, 0
  br i1 %cmp40.i, label %if.end6.for.body.i_crit_edge, label %if.end6.if.end10_crit_edge

if.end6.if.end10_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.end6.for.body.i_crit_edge:                     ; preds = %if.end6
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.3.i.for.body.i_crit_edge, %if.end6.for.body.i_crit_edge
  %i.041.i = phi i32 [ %inc19.i, %for.inc.3.i.for.body.i_crit_edge ], [ 0, %if.end6.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.041.i
  %hw.i = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i, i32 0, i32 2
  %2 = ptrtoint ptr %hw.i to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %hw.i, align 2
  %version.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.041.i, i32 1
  %3 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %version.i, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp5.not.i = icmp eq i32 %6, 1
  br i1 %cmp5.not.i, label %lor.lhs.false.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i.for.inc.i_crit_edge, label %if.end.i

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  %funcs.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %4, i32 0, i32 4
  %9 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %funcs.i, align 4
  %hw_init.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %10, i32 0, i32 6
  %11 = ptrtoint ptr %hw_init.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hw_init.i, align 4
  %call.i = tail call i32 %12(ptr noundef %adev) #17
  %13 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %version.i, align 4
  %funcs9.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %funcs9.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %funcs9.i, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool10.not.i = icmp eq i32 %call.i, 0
  %cond.i = select i1 %tobool10.not.i, ptr @.str.406, ptr @.str.405
  %call11.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.403, ptr noundef %18, ptr noundef nonnull %cond.i) #20
  br i1 %tobool10.not.i, label %if.end14.i, label %if.end.i.if.end37_crit_edge

if.end.i.if.end37_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.end14.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %19 = ptrtoint ptr %hw.i to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 1, ptr %hw.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end14.i, %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %20 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %version.i, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp5.not.1.i = icmp eq i32 %23, 0
  br i1 %cmp5.not.1.i, label %lor.lhs.false.1.i, label %for.inc.i.for.inc.1.i_crit_edge

for.inc.i.for.inc.1.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.1.i

lor.lhs.false.1.i:                                ; preds = %for.inc.i
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.not.1.i = icmp eq i8 %25, 0
  br i1 %tobool.not.1.i, label %lor.lhs.false.1.i.for.inc.1.i_crit_edge, label %if.end.1.i

lor.lhs.false.1.i.for.inc.1.i_crit_edge:          ; preds = %lor.lhs.false.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.1.i

if.end.1.i:                                       ; preds = %lor.lhs.false.1.i
  %funcs.1.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %21, i32 0, i32 4
  %26 = ptrtoint ptr %funcs.1.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs.1.i, align 4
  %hw_init.1.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %27, i32 0, i32 6
  %28 = ptrtoint ptr %hw_init.1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hw_init.1.i, align 4
  %call.1.i = tail call i32 %29(ptr noundef %adev) #17
  %30 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %version.i, align 4
  %funcs9.1.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %31, i32 0, i32 4
  %32 = ptrtoint ptr %funcs9.1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %funcs9.1.i, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.1.i)
  %tobool10.not.1.i = icmp eq i32 %call.1.i, 0
  %cond.1.i = select i1 %tobool10.not.1.i, ptr @.str.406, ptr @.str.405
  %call11.1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.403, ptr noundef %35, ptr noundef nonnull %cond.1.i) #20
  br i1 %tobool10.not.1.i, label %if.end14.1.i, label %if.end.1.i.if.end37_crit_edge

if.end.1.i.if.end37_crit_edge:                    ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.end14.1.i:                                     ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #19
  %36 = ptrtoint ptr %hw.i to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 1, ptr %hw.i, align 2
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %if.end14.1.i, %lor.lhs.false.1.i.for.inc.1.i_crit_edge, %for.inc.i.for.inc.1.i_crit_edge
  %37 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %version.i, align 4
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %40)
  %cmp5.not.2.i = icmp eq i32 %40, 4
  br i1 %cmp5.not.2.i, label %lor.lhs.false.2.i, label %for.inc.1.i.for.inc.2.i_crit_edge

for.inc.1.i.for.inc.2.i_crit_edge:                ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.2.i

lor.lhs.false.2.i:                                ; preds = %for.inc.1.i
  %41 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool.not.2.i = icmp eq i8 %42, 0
  br i1 %tobool.not.2.i, label %lor.lhs.false.2.i.for.inc.2.i_crit_edge, label %if.end.2.i

lor.lhs.false.2.i.for.inc.2.i_crit_edge:          ; preds = %lor.lhs.false.2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.2.i

if.end.2.i:                                       ; preds = %lor.lhs.false.2.i
  %funcs.2.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %38, i32 0, i32 4
  %43 = ptrtoint ptr %funcs.2.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %funcs.2.i, align 4
  %hw_init.2.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %44, i32 0, i32 6
  %45 = ptrtoint ptr %hw_init.2.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %hw_init.2.i, align 4
  %call.2.i = tail call i32 %46(ptr noundef %adev) #17
  %47 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %version.i, align 4
  %funcs9.2.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %48, i32 0, i32 4
  %49 = ptrtoint ptr %funcs9.2.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %funcs9.2.i, align 4
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %50, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.2.i)
  %tobool10.not.2.i = icmp eq i32 %call.2.i, 0
  %cond.2.i = select i1 %tobool10.not.2.i, ptr @.str.406, ptr @.str.405
  %call11.2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.403, ptr noundef %52, ptr noundef nonnull %cond.2.i) #20
  br i1 %tobool10.not.2.i, label %if.end14.2.i, label %if.end.2.i.if.end37_crit_edge

if.end.2.i.if.end37_crit_edge:                    ; preds = %if.end.2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.end14.2.i:                                     ; preds = %if.end.2.i
  call void @__sanitizer_cov_trace_pc() #19
  %53 = ptrtoint ptr %hw.i to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 1, ptr %hw.i, align 2
  br label %for.inc.2.i

for.inc.2.i:                                      ; preds = %if.end14.2.i, %lor.lhs.false.2.i.for.inc.2.i_crit_edge, %for.inc.1.i.for.inc.2.i_crit_edge
  %54 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %version.i, align 4
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %57)
  %cmp5.not.3.i = icmp eq i32 %57, 2
  br i1 %cmp5.not.3.i, label %lor.lhs.false.3.i, label %for.inc.2.i.for.inc.3.i_crit_edge

for.inc.2.i.for.inc.3.i_crit_edge:                ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.3.i

lor.lhs.false.3.i:                                ; preds = %for.inc.2.i
  %58 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %arrayidx.i, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %tobool.not.3.i = icmp eq i8 %59, 0
  br i1 %tobool.not.3.i, label %lor.lhs.false.3.i.for.inc.3.i_crit_edge, label %if.end.3.i

lor.lhs.false.3.i.for.inc.3.i_crit_edge:          ; preds = %lor.lhs.false.3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.3.i

if.end.3.i:                                       ; preds = %lor.lhs.false.3.i
  %funcs.3.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %55, i32 0, i32 4
  %60 = ptrtoint ptr %funcs.3.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %funcs.3.i, align 4
  %hw_init.3.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %61, i32 0, i32 6
  %62 = ptrtoint ptr %hw_init.3.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %hw_init.3.i, align 4
  %call.3.i = tail call i32 %63(ptr noundef %adev) #17
  %64 = ptrtoint ptr %version.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %version.i, align 4
  %funcs9.3.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %65, i32 0, i32 4
  %66 = ptrtoint ptr %funcs9.3.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %funcs9.3.i, align 4
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %67, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.3.i)
  %tobool10.not.3.i = icmp eq i32 %call.3.i, 0
  %cond.3.i = select i1 %tobool10.not.3.i, ptr @.str.406, ptr @.str.405
  %call11.3.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.403, ptr noundef %69, ptr noundef nonnull %cond.3.i) #20
  br i1 %tobool10.not.3.i, label %if.end14.3.i, label %if.end.3.i.if.end37_crit_edge

if.end.3.i.if.end37_crit_edge:                    ; preds = %if.end.3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.end14.3.i:                                     ; preds = %if.end.3.i
  call void @__sanitizer_cov_trace_pc() #19
  %70 = ptrtoint ptr %hw.i to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 1, ptr %hw.i, align 2
  br label %for.inc.3.i

for.inc.3.i:                                      ; preds = %if.end14.3.i, %lor.lhs.false.3.i.for.inc.3.i_crit_edge, %for.inc.2.i.for.inc.3.i_crit_edge
  %inc19.i = add nuw nsw i32 %i.041.i, 1
  %71 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp.i = icmp slt i32 %inc19.i, %72
  br i1 %cmp.i, label %for.inc.3.i.for.body.i_crit_edge, label %for.inc.3.i.if.end10_crit_edge

for.inc.3.i.if.end10_crit_edge:                   ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

for.inc.3.i.for.body.i_crit_edge:                 ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

if.end10:                                         ; preds = %for.inc.3.i.if.end10_crit_edge, %if.end6.if.end10_crit_edge
  tail call void @amdgpu_virt_init_data_exchange(ptr noundef %adev) #17
  %call11 = tail call fastcc i32 @amdgpu_device_fw_loading(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end10.for.cond1.preheader.i_crit_edge, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end10.for.cond1.preheader.i_crit_edge:         ; preds = %if.end10
  br label %for.cond1.preheader.i

for.cond1.preheader.i:                            ; preds = %for.inc28.i.for.cond1.preheader.i_crit_edge, %if.end10.for.cond1.preheader.i_crit_edge
  %i.054.i = phi i32 [ %inc29.i, %for.inc28.i.for.cond1.preheader.i_crit_edge ], [ 0, %if.end10.for.cond1.preheader.i_crit_edge ]
  %73 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %num_ip_blocks.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %cmp252.i = icmp sgt i32 %74, 0
  br i1 %cmp252.i, label %for.body3.lr.ph.i, label %for.cond1.preheader.i.for.inc28.i_crit_edge

for.cond1.preheader.i.for.inc28.i_crit_edge:      ; preds = %for.cond1.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc28.i

for.body3.lr.ph.i:                                ; preds = %for.cond1.preheader.i
  %arrayidx4.i = getelementptr [7 x i32], ptr @amdgpu_device_ip_reinit_late_sriov.ip_order, i32 0, i32 %i.054.i
  %75 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.054.i)
  %cmp11.i = icmp eq i32 %i.054.i, 0
  br label %for.body3.i

for.body3.i:                                      ; preds = %for.inc.i80.for.body3.i_crit_edge, %for.body3.lr.ph.i
  %j.053.i = phi i32 [ 0, %for.body3.lr.ph.i ], [ %inc.i, %for.inc.i80.for.body3.i_crit_edge ]
  %arrayidx.i69 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %j.053.i
  %version.i70 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %j.053.i, i32 1
  %77 = ptrtoint ptr %version.i70 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %version.i70, align 4
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %78, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %80, i32 %76)
  %cmp5.not.i71 = icmp eq i32 %80, %76
  br i1 %cmp5.not.i71, label %lor.lhs.false.i73, label %for.body3.i.for.inc.i80_crit_edge

for.body3.i.for.inc.i80_crit_edge:                ; preds = %for.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i80

lor.lhs.false.i73:                                ; preds = %for.body3.i
  %81 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %arrayidx.i69, align 4, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %82)
  %tobool.not.i72 = icmp eq i8 %82, 0
  br i1 %tobool.not.i72, label %lor.lhs.false.i73.for.inc.i80_crit_edge, label %lor.lhs.false6.i

lor.lhs.false.i73.for.inc.i80_crit_edge:          ; preds = %lor.lhs.false.i73
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i80

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false.i73
  %hw.i74 = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx.i69, i32 0, i32 2
  %83 = ptrtoint ptr %hw.i74 to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %hw.i74, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %84)
  %tobool8.not.i = icmp eq i8 %84, 0
  br i1 %tobool8.not.i, label %if.end.i79, label %lor.lhs.false6.i.for.inc.i80_crit_edge

lor.lhs.false6.i.for.inc.i80_crit_edge:           ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i80

if.end.i79:                                       ; preds = %lor.lhs.false6.i
  %funcs.i75 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %78, i32 0, i32 4
  %85 = ptrtoint ptr %funcs.i75 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %funcs.i75, align 4
  %resume.i = getelementptr inbounds %struct.amd_ip_funcs, ptr %86, i32 0, i32 10
  %hw_init.i76 = getelementptr inbounds %struct.amd_ip_funcs, ptr %86, i32 0, i32 6
  %resume.sink.i = select i1 %cmp11.i, ptr %resume.i, ptr %hw_init.i76
  %87 = ptrtoint ptr %resume.sink.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %resume.sink.i, align 4
  %call.i77 = tail call i32 %88(ptr noundef %adev) #17
  %89 = ptrtoint ptr %version.i70 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %version.i70, align 4
  %funcs19.i = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %90, i32 0, i32 4
  %91 = ptrtoint ptr %funcs19.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %funcs19.i, align 4
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %92, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i77)
  %tobool20.not.i = icmp eq i32 %call.i77, 0
  %cond.i78 = select i1 %tobool20.not.i, ptr @.str.406, ptr @.str.405
  %call21.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.407, ptr noundef %94, ptr noundef nonnull %cond.i78) #20
  br i1 %tobool20.not.i, label %if.end24.i, label %if.end.i79.if.end37_crit_edge

if.end.i79.if.end37_crit_edge:                    ; preds = %if.end.i79
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.end24.i:                                       ; preds = %if.end.i79
  call void @__sanitizer_cov_trace_pc() #19
  %95 = ptrtoint ptr %hw.i74 to i32
  call void @__asan_store1_noabort(i32 %95)
  store i8 1, ptr %hw.i74, align 2
  br label %for.inc.i80

for.inc.i80:                                      ; preds = %if.end24.i, %lor.lhs.false6.i.for.inc.i80_crit_edge, %lor.lhs.false.i73.for.inc.i80_crit_edge, %for.body3.i.for.inc.i80_crit_edge
  %inc.i = add nuw nsw i32 %j.053.i, 1
  %96 = ptrtoint ptr %num_ip_blocks.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %num_ip_blocks.i, align 8
  %cmp2.i = icmp slt i32 %inc.i, %97
  br i1 %cmp2.i, label %for.inc.i80.for.body3.i_crit_edge, label %for.inc.i80.for.inc28.i_crit_edge

for.inc.i80.for.inc28.i_crit_edge:                ; preds = %for.inc.i80
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc28.i

for.inc.i80.for.body3.i_crit_edge:                ; preds = %for.inc.i80
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body3.i

for.inc28.i:                                      ; preds = %for.inc.i80.for.inc28.i_crit_edge, %for.cond1.preheader.i.for.inc28.i_crit_edge
  %inc29.i = add nuw nsw i32 %i.054.i, 1
  %exitcond.not.i = icmp eq i32 %inc29.i, 7
  br i1 %exitcond.not.i, label %if.end18, label %for.inc28.i.for.cond1.preheader.i_crit_edge

for.inc28.i.for.cond1.preheader.i_crit_edge:      ; preds = %for.inc28.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond1.preheader.i

if.end18:                                         ; preds = %for.inc28.i
  %call19 = tail call ptr @amdgpu_get_xgmi_hive(ptr noundef %adev) #17
  %tobool20.not = icmp eq ptr %call19, null
  br i1 %tobool20.not, label %if.end18.error_crit_edge, label %land.lhs.true

if.end18.error_crit_edge:                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #19
  br label %error

land.lhs.true:                                    ; preds = %if.end18
  %num_physical_nodes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 4
  %98 = ptrtoint ptr %num_physical_nodes to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %num_physical_nodes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %99)
  %cmp = icmp ugt i32 %99, 1
  br i1 %cmp, label %if.end26, label %if.end26.thread91

if.end26.thread91:                                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_put_xgmi_hive(ptr noundef nonnull %call19) #17
  br label %error

if.end26:                                         ; preds = %land.lhs.true
  %call22 = tail call i32 @amdgpu_xgmi_update_topology(ptr noundef nonnull %call19, ptr noundef %adev) #17
  tail call void @amdgpu_put_xgmi_hive(ptr noundef nonnull %call19) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool27.not = icmp eq i32 %call22, 0
  br i1 %tobool27.not, label %if.end26.error_crit_edge, label %if.end26.if.end37_crit_edge

if.end26.if.end37_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.end26.error_crit_edge:                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #19
  br label %error

error:                                            ; preds = %if.end26.error_crit_edge, %if.end26.thread91, %if.end18.error_crit_edge
  tail call void @amdgpu_irq_gpu_reset_resume_helper(ptr noundef %adev) #17
  %call29 = tail call i32 @amdgpu_ib_ring_tests(ptr noundef %adev) #17
  %call30 = tail call i32 @amdgpu_amdkfd_post_reset(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool32.not = icmp eq i32 %call29, 0
  br i1 %tobool32.not, label %land.lhs.true33, label %error.if.end37_crit_edge

error.if.end37_crit_edge:                         ; preds = %error
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

land.lhs.true33:                                  ; preds = %error
  %gim_feature = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 12
  %100 = ptrtoint ptr %gim_feature to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %gim_feature, align 4
  %and = and i32 %101, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool34.not = icmp eq i32 %and, 0
  br i1 %tobool34.not, label %land.lhs.true33.if.end37_crit_edge, label %if.then35

land.lhs.true33.if.end37_crit_edge:               ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.then35:                                        ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #19
  %vram_lost_counter = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 75
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %vram_lost_counter, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %vram_lost_counter, i32 1, i32 3, i32 1) #17
  %102 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %vram_lost_counter, ptr %vram_lost_counter, i32 1, ptr elementtype(i32) %vram_lost_counter) #17, !srcloc !822
  %call36 = tail call fastcc i32 @amdgpu_device_recover_vram(ptr noundef %adev)
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %land.lhs.true33.if.end37_crit_edge, %error.if.end37_crit_edge, %if.end26.if.end37_crit_edge, %if.end.i79.if.end37_crit_edge, %if.end.3.i.if.end37_crit_edge, %if.end.2.i.if.end37_crit_edge, %if.end.1.i.if.end37_crit_edge, %if.end.i.if.end37_crit_edge
  %r.3 = phi i32 [ %call29, %error.if.end37_crit_edge ], [ %call36, %if.then35 ], [ 0, %land.lhs.true33.if.end37_crit_edge ], [ %call22, %if.end26.if.end37_crit_edge ], [ %call.i77, %if.end.i79.if.end37_crit_edge ], [ %call.3.i, %if.end.3.i.if.end37_crit_edge ], [ %call.2.i, %if.end.2.i.if.end37_crit_edge ], [ %call.1.i, %if.end.1.i.if.end37_crit_edge ], [ %call.i, %if.end.i.if.end37_crit_edge ]
  %call38 = tail call i32 @amdgpu_virt_release_full_gpu(ptr noundef %adev, i1 noundef zeroext true) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %if.end10.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %r.3, %if.end37 ], [ %r.0, %if.end.cleanup_crit_edge ], [ %call11, %if.end10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_sched_resubmit_jobs(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_sched_start(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_helper_resume_force_mode(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_amdkfd_post_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_amdkfd_device_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_baco_enter(ptr noundef %dev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %ras1 = getelementptr i8, ptr %dev, i32 82000
  %0 = ptrtoint ptr %ras1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ras1, align 8
  %asic_funcs.i = getelementptr i8, ptr %dev, i32 2388
  %2 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %asic_funcs.i, align 4
  %supports_baco.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %supports_baco.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %supports_baco.i, align 4
  %call1.i = tail call zeroext i1 %5(ptr noundef %add.ptr.i) #17
  br i1 %call1.i, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end.if.end11_crit_edge, label %land.lhs.true

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

land.lhs.true:                                    ; preds = %if.end
  %ras_enabled = getelementptr i8, ptr %dev, i32 91656
  %6 = ptrtoint ptr %ras_enabled to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ras_enabled, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool4.not = icmp eq i32 %7, 0
  br i1 %tobool4.not, label %land.lhs.true.if.end11_crit_edge, label %land.lhs.true5

land.lhs.true.if.end11_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

land.lhs.true5:                                   ; preds = %land.lhs.true
  %funcs = getelementptr i8, ptr %dev, i32 32792
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 8
  %enable_doorbell_interrupt = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %9, i32 0, i32 15
  %10 = ptrtoint ptr %enable_doorbell_interrupt to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %enable_doorbell_interrupt, align 4
  %tobool6.not = icmp eq ptr %11, null
  br i1 %tobool6.not, label %land.lhs.true5.if.end11_crit_edge, label %if.then7

land.lhs.true5.if.end11_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

if.then7:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %11(ptr noundef %add.ptr.i, i1 noundef zeroext false) #17
  br label %if.end11

if.end11:                                         ; preds = %if.then7, %land.lhs.true5.if.end11_crit_edge, %land.lhs.true.if.end11_crit_edge, %if.end.if.end11_crit_edge
  %call12 = tail call i32 @amdgpu_dpm_baco_enter(ptr noundef %add.ptr.i) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call12, %if.end11 ], [ -524, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_dpm_baco_enter(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_device_baco_exit(ptr noundef %dev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %ras1 = getelementptr i8, ptr %dev, i32 82000
  %0 = ptrtoint ptr %ras1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ras1, align 8
  %asic_funcs.i = getelementptr i8, ptr %dev, i32 2388
  %2 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %asic_funcs.i, align 4
  %supports_baco.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %supports_baco.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %supports_baco.i, align 4
  %call1.i = tail call zeroext i1 %5(ptr noundef %add.ptr.i) #17
  br i1 %call1.i, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %call4 = tail call i32 @amdgpu_dpm_baco_exit(ptr noundef %add.ptr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %tobool7.not = icmp eq ptr %1, null
  br i1 %tobool7.not, label %if.end6.if.end15_crit_edge, label %land.lhs.true

if.end6.if.end15_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15

land.lhs.true:                                    ; preds = %if.end6
  %ras_enabled = getelementptr i8, ptr %dev, i32 91656
  %6 = ptrtoint ptr %ras_enabled to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ras_enabled, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool8.not = icmp eq i32 %7, 0
  br i1 %tobool8.not, label %land.lhs.true.if.end15_crit_edge, label %land.lhs.true9

land.lhs.true.if.end15_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15

land.lhs.true9:                                   ; preds = %land.lhs.true
  %funcs = getelementptr i8, ptr %dev, i32 32792
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 8
  %enable_doorbell_interrupt = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %9, i32 0, i32 15
  %10 = ptrtoint ptr %enable_doorbell_interrupt to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %enable_doorbell_interrupt, align 4
  %tobool10.not = icmp eq ptr %11, null
  br i1 %tobool10.not, label %land.lhs.true9.if.end15_crit_edge, label %if.then11

land.lhs.true9.if.end15_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15

if.then11:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %11(ptr noundef %add.ptr.i, i1 noundef zeroext true) #17
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %land.lhs.true9.if.end15_crit_edge, %land.lhs.true.if.end15_crit_edge, %if.end6.if.end15_crit_edge
  %virt = getelementptr i8, ptr %dev, i32 90272
  %12 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %virt, align 8
  %and = and i32 %13, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool16.not = icmp eq i32 %and, 0
  br i1 %tobool16.not, label %if.end15.cleanup_crit_edge, label %land.lhs.true17

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true17:                                  ; preds = %if.end15
  %funcs19 = getelementptr i8, ptr %dev, i32 32792
  %14 = ptrtoint ptr %funcs19 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %funcs19, align 8
  %clear_doorbell_interrupt = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %15, i32 0, i32 26
  %16 = ptrtoint ptr %clear_doorbell_interrupt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %clear_doorbell_interrupt, align 4
  %tobool20.not = icmp eq ptr %17, null
  br i1 %tobool20.not, label %land.lhs.true17.cleanup_crit_edge, label %if.then21

land.lhs.true17.cleanup_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then21:                                        ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %17(ptr noundef %add.ptr.i) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then21, %land.lhs.true17.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -524, %entry.cleanup_crit_edge ], [ %call4, %if.end.cleanup_crit_edge ], [ 0, %if.then21 ], [ 0, %land.lhs.true17.cleanup_crit_edge ], [ 0, %if.end15.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_dpm_baco_exit(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_pci_error_detected(ptr nocapture noundef readonly %pdev, i32 noundef %state) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -8
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.249, i32 noundef %state) #20
  %num_physical_nodes = getelementptr i8, ptr %1, i32 10196
  %2 = ptrtoint ptr %num_physical_nodes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_physical_nodes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp = icmp ugt i32 %3, 1
  br i1 %cmp, label %do.end5, label %if.end

do.end5:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.252) #20
  br label %cleanup16

if.end:                                           ; preds = %entry
  %pci_channel_state = getelementptr i8, ptr %1, i32 91668
  %4 = ptrtoint ptr %pci_channel_state to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %state, ptr %pci_channel_state, align 4
  %5 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.440)
  switch i32 %state, label %sw.epilog [
    i32 1, label %if.end.cleanup16_crit_edge
    i32 2, label %while.cond.preheader
    i32 3, label %sw.bb15
  ]

if.end.cleanup16_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup16

while.cond.preheader:                             ; preds = %if.end
  %in_gpu_reset.i = getelementptr i8, ptr %1, i32 91020
  br label %while.cond

while.cond:                                       ; preds = %cleanup.i.while.cond_crit_edge, %while.cond.preheader
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %in_gpu_reset.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !826
  tail call void @llvm.prefetch.p0(ptr %in_gpu_reset.i, i32 1, i32 3, i32 1) #17
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge, %while.cond
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %in_gpu_reset.i, ptr %in_gpu_reset.i, i32 0, i32 1, ptr elementtype(i32) %in_gpu_reset.i) #17, !srcloc !827
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %6, 0
  %tobool.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %atomic_cmpxchg.exit.i, label %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge

do.body.i.i.i.i.do.body.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i.i.i

atomic_cmpxchg.exit.i:                            ; preds = %do.body.i.i.i.i
  %asmresult3.i.i.i.i = extractvalue { i32, i32 } %6, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !828
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult3.i.i.i.i)
  %cmp.not.i = icmp eq i32 %asmresult3.i.i.i.i, 0
  br i1 %cmp.not.i, label %amdgpu_device_lock_adev.exit, label %atomic_cmpxchg.exit.i.for.body.i_crit_edge

atomic_cmpxchg.exit.i.for.body.i_crit_edge:       ; preds = %atomic_cmpxchg.exit.i
  br label %for.body.i

amdgpu_device_lock_adev.exit:                     ; preds = %atomic_cmpxchg.exit.i
  %reset_sem3.i = getelementptr i8, ptr %1, i32 91028
  tail call void @down_write(ptr noundef %reset_sem3.i) #17
  %asic_funcs.i = getelementptr i8, ptr %1, i32 2388
  %7 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %asic_funcs.i, align 4
  %reset_method.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %8, i32 0, i32 5
  %9 = ptrtoint ptr %reset_method.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %reset_method.i, align 4
  %call5.i = tail call i32 %10(ptr noundef %add.ptr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call5.i)
  %switch.selectcmp.i = icmp eq i32 %call5.i, 3
  %switch.select.i = select i1 %switch.selectcmp.i, i32 3, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call5.i)
  %switch.selectcmp17.i = icmp eq i32 %call5.i, 2
  %switch.select18.i = select i1 %switch.selectcmp17.i, i32 1, i32 %switch.select.i
  %mp1_state.i = getelementptr i8, ptr %1, i32 91024
  %11 = ptrtoint ptr %mp1_state.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %switch.select18.i, ptr %mp1_state.i, align 8
  br label %for.body

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %atomic_cmpxchg.exit.i.for.body.i_crit_edge
  %i.07.i = phi i32 [ %inc.i, %cleanup.i.for.body.i_crit_edge ], [ 0, %atomic_cmpxchg.exit.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %add.ptr.i, i32 0, i32 90, i32 %i.07.i
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %for.body.i.cleanup.i_crit_edge, label %lor.lhs.false.i

for.body.i.cleanup.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %thread.i = getelementptr inbounds %struct.amdgpu_ring, ptr %13, i32 0, i32 3, i32 11
  %14 = ptrtoint ptr %thread.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %thread.i, align 8
  %tobool1.not.i = icmp eq ptr %15, null
  br i1 %tobool1.not.i, label %lor.lhs.false.i.cleanup.i_crit_edge, label %if.end.i30

lor.lhs.false.i.cleanup.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.i

if.end.i30:                                       ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  %work_tdr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %13, i32 0, i32 3, i32 10
  %call.i = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %work_tdr.i) #17
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end.i30, %lor.lhs.false.i.cleanup.i_crit_edge, %for.body.i.cleanup.i_crit_edge
  %inc.i = add nuw nsw i32 %i.07.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 28
  br i1 %exitcond.not.i, label %cleanup.i.while.cond_crit_edge, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

cleanup.i.while.cond_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %amdgpu_device_lock_adev.exit
  %i.031 = phi i32 [ 0, %amdgpu_device_lock_adev.exit ], [ %inc, %cleanup.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %add.ptr.i, i32 0, i32 90, i32 %i.031
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %17, null
  br i1 %tobool.not, label %for.body.cleanup_crit_edge, label %lor.lhs.false

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false:                                    ; preds = %for.body
  %thread = getelementptr inbounds %struct.amdgpu_ring, ptr %17, i32 0, i32 3, i32 11
  %18 = ptrtoint ptr %thread to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %thread, align 8
  %tobool11.not = icmp eq ptr %19, null
  br i1 %tobool11.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end13

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end13:                                         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  %sched = getelementptr inbounds %struct.amdgpu_ring, ptr %17, i32 0, i32 3
  tail call void @drm_sched_stop(ptr noundef %sched, ptr noundef null) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %lor.lhs.false.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.031, 1
  %exitcond.not = icmp eq i32 %inc, 28
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  %gpu_reset_counter = getelementptr i8, ptr %1, i32 21896
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %gpu_reset_counter, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %gpu_reset_counter, i32 1, i32 3, i32 1) #17
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %gpu_reset_counter, ptr %gpu_reset_counter, i32 1, ptr elementtype(i32) %gpu_reset_counter) #17, !srcloc !822
  br label %cleanup16

sw.bb15:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup16

sw.epilog:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup16

cleanup16:                                        ; preds = %sw.epilog, %sw.bb15, %for.end, %if.end.cleanup16_crit_edge, %do.end5
  %retval.0 = phi i32 [ 4, %do.end5 ], [ 3, %sw.epilog ], [ 4, %sw.bb15 ], [ 3, %for.end ], [ 2, %if.end.cleanup16_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_pci_mmio_enabled(ptr nocapture noundef readnone %pdev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.254) #20
  ret i32 5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @amdgpu_pci_slot_reset(ptr noundef %pdev) local_unnamed_addr #2 align 64 {
entry:
  %reset_context = alloca %struct.amdgpu_reset_context, align 4
  %device_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -8
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %reset_context) #17
  %2 = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 1
  %3 = getelementptr inbounds %struct.amdgpu_reset_context, ptr %reset_context, i32 0, i32 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %device_list) #17
  %4 = getelementptr inbounds %struct.list_head, ptr %device_list, i32 0, i32 1
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.256) #20
  %5 = call ptr @memset(ptr %reset_context, i32 0, i32 20)
  %6 = ptrtoint ptr %device_list to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %device_list, ptr %device_list, align 4
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %device_list, ptr %4, align 4
  %reset_list = getelementptr i8, ptr %1, i32 91404
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %reset_list, ptr noundef nonnull %device_list, ptr noundef nonnull %device_list) #17
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_add_tail.exit_crit_edge

entry.list_add_tail.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %reset_list, ptr %4, align 4
  %9 = ptrtoint ptr %reset_list to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %device_list, ptr %reset_list, align 4
  %prev3.i.i = getelementptr i8, ptr %1, i32 91408
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %device_list, ptr %prev3.i.i, align 4
  %11 = ptrtoint ptr %device_list to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %reset_list, ptr %device_list, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %entry.list_add_tail.exit_crit_edge
  call void @msleep(i32 noundef 500) #17
  %12 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %driver_data.i.i, align 4
  %pci_state.i = getelementptr i8, ptr %13, i32 91664
  %14 = ptrtoint ptr %pci_state.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pci_state.i, align 8
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %list_add_tail.exit.amdgpu_device_load_pci_state.exit_crit_edge, label %if.end.i

list_add_tail.exit.amdgpu_device_load_pci_state.exit_crit_edge: ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_load_pci_state.exit

if.end.i:                                         ; preds = %list_add_tail.exit
  %call3.i = call i32 @pci_load_saved_state(ptr noundef %pdev, ptr noundef nonnull %15) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.then5.i, label %do.end.i

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @pci_restore_state(ptr noundef %pdev) #17
  br label %amdgpu_device_load_pci_state.exit

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %call6.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.267, i32 noundef %call3.i) #20
  br label %amdgpu_device_load_pci_state.exit

amdgpu_device_load_pci_state.exit:                ; preds = %do.end.i, %if.then5.i, %list_add_tail.exit.amdgpu_device_load_pci_state.exit_crit_edge
  %usec_timeout = getelementptr i8, ptr %1, i32 2384
  %16 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp58 = icmp sgt i32 %17, 0
  br i1 %cmp58, label %for.body.lr.ph, label %amdgpu_device_load_pci_state.exit.if.else_crit_edge

amdgpu_device_load_pci_state.exit.if.else_crit_edge: ; preds = %amdgpu_device_load_pci_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

for.body.lr.ph:                                   ; preds = %amdgpu_device_load_pci_state.exit
  %asic_funcs = getelementptr i8, ptr %1, i32 2388
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %i.059 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end.for.body_crit_edge ]
  %18 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %asic_funcs, align 4
  %get_config_memsize = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %19, i32 0, i32 11
  %20 = ptrtoint ptr %get_config_memsize to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %get_config_memsize, align 4
  %call4 = call i32 %21(ptr noundef %add.ptr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call4)
  %cmp5.not = icmp eq i32 %call4, -1
  br i1 %cmp5.not, label %if.end, label %if.end8

if.end:                                           ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %22 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %22(i32 noundef 214748) #17
  %inc = add nuw nsw i32 %i.059, 1
  %23 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp slt i32 %inc, %24
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.if.else_crit_edge

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

if.end8:                                          ; preds = %for.body
  %25 = ptrtoint ptr %reset_context to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 -1, ptr %reset_context, align 4
  %26 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %add.ptr.i, ptr %2, align 4
  call void @_set_bit(i32 noundef 0, ptr noundef %3) #17
  call void @_set_bit(i32 noundef 1, ptr noundef %3) #17
  %no_hw_access = getelementptr i8, ptr %1, i32 91660
  %27 = ptrtoint ptr %no_hw_access to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 1, ptr %no_hw_access, align 4
  %call10 = call i32 @amdgpu_device_pre_asic_reset(ptr noundef %add.ptr.i, ptr noundef nonnull %reset_context)
  %28 = ptrtoint ptr %no_hw_access to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 0, ptr %no_hw_access, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool.not = icmp eq i32 %call10, 0
  br i1 %tobool.not, label %out, label %if.end8.if.else_crit_edge

if.end8.if.else_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

out:                                              ; preds = %if.end8
  %call14 = call i32 @amdgpu_do_asic_reset(ptr noundef nonnull %device_list, ptr noundef nonnull %reset_context)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then16, label %out.if.else_crit_edge

out.if.else_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then16:                                        ; preds = %out
  %pdev17 = getelementptr i8, ptr %1, i32 -4
  %29 = ptrtoint ptr %pdev17 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pdev17, align 4
  %driver_data.i.i.i46 = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44, i32 8
  %31 = ptrtoint ptr %driver_data.i.i.i46 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %driver_data.i.i.i46, align 4
  %call2.i = call i32 @pci_save_state(ptr noundef %30) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i47 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i47, label %if.then.i, label %do.end.i50

if.then.i:                                        ; preds = %if.then16
  %pci_state.i48 = getelementptr i8, ptr %32, i32 91664
  %33 = ptrtoint ptr %pci_state.i48 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pci_state.i48, align 8
  call void @kfree(ptr noundef %34) #17
  %call3.i49 = call ptr @pci_store_saved_state(ptr noundef %30) #17
  %35 = ptrtoint ptr %pci_state.i48 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %call3.i49, ptr %pci_state.i48, align 8
  %tobool6.not.i = icmp eq ptr %call3.i49, null
  br i1 %tobool6.not.i, label %if.then7.i, label %if.then19

if.then7.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.264) #17
  br label %do.end24

do.end.i50:                                       ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #19
  %call8.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.265, i32 noundef %call2.i) #20
  br label %do.end24

if.then19:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %36 = ptrtoint ptr %pdev17 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pdev17, align 4
  call void @pci_restore_state(ptr noundef %37) #17
  br label %do.end24

do.end24:                                         ; preds = %if.then19, %do.end.i50, %if.then7.i
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.259) #20
  br label %if.end27

if.else:                                          ; preds = %out.if.else_crit_edge, %if.end8.if.else_crit_edge, %if.end.if.else_crit_edge, %amdgpu_device_load_pci_state.exit.if.else_crit_edge
  %r.056 = phi i32 [ %call14, %out.if.else_crit_edge ], [ %call10, %if.end8.if.else_crit_edge ], [ -62, %amdgpu_device_load_pci_state.exit.if.else_crit_edge ], [ -62, %if.end.if.else_crit_edge ]
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.261, i32 noundef %r.056) #17
  call void @amdgpu_vf_error_trans_all(ptr noundef %add.ptr.i) #17
  %mp1_state.i = getelementptr i8, ptr %1, i32 91024
  %38 = ptrtoint ptr %mp1_state.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %mp1_state.i, align 8
  %in_gpu_reset.i = getelementptr i8, ptr %1, i32 91020
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %in_gpu_reset.i, i32 noundef 4) #17
  %39 = ptrtoint ptr %in_gpu_reset.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile i32 0, ptr %in_gpu_reset.i, align 4
  %reset_sem.i = getelementptr i8, ptr %1, i32 91028
  call void @up_write(ptr noundef %reset_sem.i) #17
  br label %if.end27

if.end27:                                         ; preds = %if.else, %do.end24
  %cond = phi i32 [ 4, %if.else ], [ 5, %do.end24 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %device_list) #17
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %reset_context) #17
  ret i32 %cond
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_pci_resume(ptr nocapture noundef readonly %pdev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -8
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.262) #20
  %pci_channel_state = getelementptr i8, ptr %1, i32 91668
  %2 = ptrtoint ptr %pci_channel_state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pci_channel_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %cmp.not = icmp eq i32 %3, 2
  br i1 %cmp.not, label %entry.for.body_crit_edge, label %entry.cleanup9_crit_edge

entry.cleanup9_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup9

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry.for.body_crit_edge
  %i.021 = phi i32 [ %inc, %cleanup.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %add.ptr.i, i32 0, i32 90, i32 %i.021
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %for.body.cleanup_crit_edge, label %lor.lhs.false

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false:                                    ; preds = %for.body
  %thread = getelementptr inbounds %struct.amdgpu_ring, ptr %5, i32 0, i32 3, i32 11
  %6 = ptrtoint ptr %thread to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %thread, align 8
  %tobool4.not = icmp eq ptr %7, null
  br i1 %tobool4.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end6

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end6:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  %sched = getelementptr inbounds %struct.amdgpu_ring, ptr %5, i32 0, i32 3
  tail call void @drm_sched_resubmit_jobs(ptr noundef %sched) #17
  tail call void @drm_sched_start(ptr noundef %sched, i1 noundef zeroext true) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %lor.lhs.false.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.021, 1
  %exitcond.not = icmp eq i32 %inc, 28
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @amdgpu_vf_error_trans_all(ptr noundef %add.ptr.i) #17
  %mp1_state.i = getelementptr i8, ptr %1, i32 91024
  %8 = ptrtoint ptr %mp1_state.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %mp1_state.i, align 8
  %in_gpu_reset.i = getelementptr i8, ptr %1, i32 91020
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %in_gpu_reset.i, i32 noundef 4) #17
  %9 = ptrtoint ptr %in_gpu_reset.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 0, ptr %in_gpu_reset.i, align 4
  %reset_sem.i = getelementptr i8, ptr %1, i32 91028
  tail call void @up_write(ptr noundef %reset_sem.i) #17
  br label %cleanup9

cleanup9:                                         ; preds = %for.end, %entry.cleanup9_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_save_state(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_store_saved_state(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_load_saved_state(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_flush_hdp(ptr noundef %adev, ptr noundef %ring) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %connected_to_cpu = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 8
  %0 = ptrtoint ptr %connected_to_cpu to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %connected_to_cpu, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.if.end11_crit_edge

entry.if.end11_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

if.end:                                           ; preds = %entry
  %tobool1.not = icmp eq ptr %ring, null
  br i1 %tobool1.not, label %if.end.if.else_crit_edge, label %land.lhs.true

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true:                                    ; preds = %if.end
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %emit_hdp_flush = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %3, i32 0, i32 18
  %4 = ptrtoint ptr %emit_hdp_flush to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %emit_hdp_flush, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %land.lhs.true.if.else_crit_edge, label %if.then3

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then3:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %5(ptr noundef nonnull %ring) #17
  br label %if.end11

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end.if.else_crit_edge
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %6 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %asic_funcs, align 4
  %flush_hdp = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %flush_hdp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %flush_hdp, align 4
  %tobool6.not = icmp eq ptr %9, null
  br i1 %tobool6.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %9(ptr noundef %adev, ptr noundef %ring) #17
  br label %if.end11

cond.false:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %funcs9 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 102, i32 1
  %10 = ptrtoint ptr %funcs9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %funcs9, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  tail call void %13(ptr noundef %adev, ptr noundef %ring) #17
  br label %if.end11

if.end11:                                         ; preds = %cond.false, %cond.true, %if.then3, %entry.if.end11_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_invalidate_hdp(ptr noundef %adev, ptr noundef %ring) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %connected_to_cpu = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 39, i32 8
  %0 = ptrtoint ptr %connected_to_cpu to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %connected_to_cpu, align 8, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.cond.end_crit_edge

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

if.end:                                           ; preds = %entry
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %2 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %asic_funcs, align 4
  %invalidate_hdp = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %invalidate_hdp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %invalidate_hdp, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %cond.false, label %if.end.cond.end.sink.split_crit_edge

if.end.cond.end.sink.split_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end.sink.split

cond.false:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 102, i32 1
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %invalidate_hdp4 = getelementptr inbounds %struct.amdgpu_hdp_funcs, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %invalidate_hdp4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %invalidate_hdp4, align 4
  br label %cond.end.sink.split

cond.end.sink.split:                              ; preds = %cond.false, %if.end.cond.end.sink.split_crit_edge
  %.sink = phi ptr [ %9, %cond.false ], [ %5, %if.end.cond.end.sink.split_crit_edge ]
  tail call void %.sink(ptr noundef %adev, ptr noundef %ring) #17
  br label %cond.end

cond.end:                                         ; preds = %cond.end.sink.split, %entry.cond.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @amdgpu_device_halt(ptr noundef %adev) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev1 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %0 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev1, align 4
  %ddev.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2
  tail call void @drm_dev_unplug(ptr noundef %ddev.i) #17
  tail call void @amdgpu_irq_disable_all(ptr noundef %adev) #17
  tail call void @amdgpu_fence_driver_hw_fini(ptr noundef %adev) #17
  %no_hw_access = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 168
  %2 = ptrtoint ptr %no_hw_access to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %no_hw_access, align 4
  %anon_inode.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 2, i32 12
  %3 = ptrtoint ptr %anon_inode.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %anon_inode.i, align 4
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %4, i32 0, i32 9
  %5 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_mapping.i, align 8
  tail call void @unmap_mapping_range(ptr noundef %6, i64 noundef 0, i64 noundef 0, i32 noundef 1) #17
  %ptr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 60, i32 2
  %7 = ptrtoint ptr %ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ptr.i.i, align 4
  tail call void @iounmap(ptr noundef %8) #17
  %9 = ptrtoint ptr %ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %ptr.i.i, align 4
  %rmmio.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %10 = ptrtoint ptr %rmmio.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rmmio.i, align 8
  tail call void @iounmap(ptr noundef %11) #17
  %12 = ptrtoint ptr %rmmio.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %rmmio.i, align 8
  %aper_base_kaddr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 68, i32 2
  %13 = ptrtoint ptr %aper_base_kaddr.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %aper_base_kaddr.i, align 4
  %tobool.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i, label %entry.amdgpu_device_unmap_mmio.exit_crit_edge, label %if.then.i

entry.amdgpu_device_unmap_mmio.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %amdgpu_device_unmap_mmio.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @iounmap(ptr noundef nonnull %14) #17
  br label %amdgpu_device_unmap_mmio.exit

amdgpu_device_unmap_mmio.exit:                    ; preds = %if.then.i, %entry.amdgpu_device_unmap_mmio.exit_crit_edge
  %15 = ptrtoint ptr %aper_base_kaddr.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %aper_base_kaddr.i, align 4
  tail call void @pci_disable_device(ptr noundef %1) #17
  %call2 = tail call i32 @pci_wait_for_pending_transaction(ptr noundef %1) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_dev_unplug(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_wait_for_pending_transaction(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_amdgpu_device_rreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_amdgpu_device_wreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_read(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_atomic64_set(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_dpm_set_mp1_state(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ucode_get_load_type(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gmc_tmz_set(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gmc_noretry_set(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_dpm_set_powergating_by_smu(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @down(ptr noundef) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: null_pointer_is_valid
declare dso_local void @up(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strsep(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_taint(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_kstrtol(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @si_set_ip_blocks(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cik_set_ip_blocks(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vi_set_ip_blocks(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_discovery_set_ip_blocks(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_amdkfd_device_probe(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_get_bios(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atombios_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_virt_init_data_exchange(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_discovery_get_gfx_info(ptr noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ucode_validate(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ucode_print_gpu_info_hdr(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_atomfirmware_gpu_virtualization_supported(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_atombios_has_gpu_virtualization_table(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atom_asic_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @drmm_mode_config_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ras_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_virt_exchange_data(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_allocate_static_csa(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ib_pool_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ucode_create_bo(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @amdgpu_device_ip_hw_init_phase2(ptr noundef %adev) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ip_blocks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 124
  %0 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ip_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp35 = icmp sgt i32 %1, 0
  br i1 %cmp35, label %entry.for.body_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.036 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.036
  %sw = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 1
  %2 = ptrtoint ptr %sw to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %sw, align 1, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end:                                           ; preds = %for.body
  %hw = getelementptr inbounds %struct.amdgpu_ip_block_status, ptr %arrayidx, i32 0, i32 2
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %hw, align 2, !range !766
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool4.not = icmp eq i8 %5, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end6:                                          ; preds = %if.end
  %version = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 122, i32 %i.036, i32 1
  %6 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %version, align 4
  %funcs = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %hw_init = getelementptr inbounds %struct.amd_ip_funcs, ptr %9, i32 0, i32 6
  %10 = ptrtoint ptr %hw_init to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw_init, align 4
  %call = tail call i32 %11(ptr noundef %adev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool9.not = icmp eq i32 %call, 0
  br i1 %tobool9.not, label %if.end15, label %if.then10

if.then10:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %12 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %version, align 4
  %funcs14 = getelementptr inbounds %struct.amdgpu_ip_block_version, ptr %13, i32 0, i32 4
  %14 = ptrtoint ptr %funcs14 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %funcs14, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.359, ptr noundef %17, i32 noundef %call) #17
  br label %cleanup

if.end15:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %18 = ptrtoint ptr %hw to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 1, ptr %hw, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end15, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.036, 1
  %19 = ptrtoint ptr %num_ip_blocks to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %num_ip_blocks, align 8
  %cmp = icmp slt i32 %inc, %20
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then10, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then10 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ras_recovery_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_fru_get_product_info(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_bo_create_kernel(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @smu_handle_passthrough_sbr(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_xgmi_set_pstate(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_dpm_enable_mgpu_fan_boost(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @amdgpu_device_get_product_name(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %product_name = getelementptr i8, ptr %1, i32 91494
  %call2 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.364, ptr noundef %product_name) #17
  ret i32 %call2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_emit(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @amdgpu_device_get_product_number(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %product_number = getelementptr i8, ptr %1, i32 91478
  %call2 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.364, ptr noundef %product_number) #17
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @amdgpu_device_get_serial_number(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %serial = getelementptr i8, ptr %1, i32 91558
  %call2 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.364, ptr noundef %serial) #17
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @amdgpu_device_get_pcie_replay_count(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -8
  %asic_funcs = getelementptr i8, ptr %1, i32 2388
  %2 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %asic_funcs, align 4
  %get_pcie_replay_count = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %3, i32 0, i32 18
  %4 = ptrtoint ptr %get_pcie_replay_count to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %get_pcie_replay_count, align 4
  %call2 = tail call i64 %5(ptr noundef %add.ptr.i) #17
  %call3 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.368, i64 noundef %call2) #17
  ret i32 %call3
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @iommu_get_domain_for_dev(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @unmap_mapping_range(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_virt_release_ras_err_handler_data(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_xgmi_remove_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_amdkfd_device_fini_sw(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ucode_free_bo(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_free_static_csa(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ib_pool_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ras_fini(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_bo_free_kernel(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ttm_evict_resources(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_pm_load_smu_firmware(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_bo_restore_shadow(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_fence_wait_timeout(ptr noundef, i1 noundef zeroext, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_fence_release(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_get_domain_bus_and_slot(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @pm_runtime_autosuspend_expiration(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_mono_fast_ns() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_suspend(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__pm_runtime_disable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_fence_signal(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_virt_reset_gpu(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_sched_reset_karma(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_sched_resubmit_jobs_ext(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_enable(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_bandwidth_available(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_get_speed_cap(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_down_write_nest_lock(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #5

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #5

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #17

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #18 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 397)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #18 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 397)
  ret void
}

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { nounwind readonly }
attributes #13 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #14 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind readonly willreturn }
attributes #17 = { nounwind }
attributes #18 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #19 = { nomerge }
attributes #20 = { cold nounwind }
attributes #21 = { nobuiltin nounwind }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !111, !112, !113, !115, !117, !119, !121, !123, !124, !125, !126, !128, !130, !132, !133, !134, !135, !137, !138, !140, !141, !143, !144, !146, !147, !149, !150, !152, !153, !155, !156, !158, !159, !161, !162, !164, !165, !167, !168, !170, !171, !173, !174, !176, !177, !179, !180, !182, !183, !185, !186, !188, !189, !191, !192, !194, !195, !197, !198, !200, !201, !203, !204, !205, !206, !208, !209, !210, !211, !213, !214, !216, !217, !218, !220, !221, !222, !224, !225, !226, !228, !229, !230, !231, !232, !234, !235, !236, !237, !239, !240, !241, !243, !245, !246, !247, !249, !250, !251, !253, !254, !255, !257, !258, !259, !261, !262, !263, !265, !266, !267, !269, !270, !271, !273, !274, !275, !277, !278, !279, !281, !282, !283, !285, !287, !289, !290, !291, !293, !294, !295, !297, !298, !299, !301, !302, !303, !305, !306, !307, !309, !310, !311, !312, !314, !315, !316, !317, !319, !320, !321, !322, !324, !325, !326, !328, !329, !331, !332, !333, !334, !336, !337, !338, !340, !341, !342, !343, !345, !346, !347, !349, !350, !351, !353, !354, !355, !357, !358, !359, !360, !362, !363, !364, !365, !367, !368, !369, !370, !372, !373, !374, !376, !377, !378, !380, !381, !382, !384, !385, !386, !387, !389, !390, !391, !392, !393, !395, !396, !397, !399, !400, !401, !403, !404, !405, !407, !408, !409, !411, !412, !413, !415, !416, !417, !419, !420, !422, !423, !424, !426, !427, !428, !429, !431, !432, !433, !435, !436, !437, !438, !440, !441, !442, !443, !445, !446, !447, !449, !451, !452, !453, !454, !456, !458, !459, !460, !461, !463, !464, !465, !466, !468, !469, !470, !471, !473, !474, !476, !477, !479, !481, !483, !485, !487, !489, !491, !493, !495, !496, !497, !498, !500, !501, !502, !504, !505, !506, !508, !509, !510, !512, !513, !514, !516, !517, !518, !520, !521, !522, !524, !525, !526, !527, !529, !530, !531, !533, !534, !535, !537, !538, !539, !540, !542, !543, !544, !545, !547, !549, !551, !553, !554, !555, !556, !558, !559, !561, !563, !564, !565, !566, !568, !570, !572, !573, !574, !575, !577, !579, !581, !582, !583, !584, !586, !588, !590, !592, !594, !596, !598, !600, !602, !604, !606, !608, !610, !612, !614, !615, !616, !617, !619, !620, !621, !623, !624, !625, !627, !629, !631, !633, !635, !637, !638, !639, !640, !642, !643, !644, !645, !647, !649, !651, !653, !655, !657, !658, !660, !662, !663, !665, !666, !668, !669, !671, !673, !675, !676, !677, !678, !680, !681, !682, !684, !685, !686, !688, !690, !692, !694, !696, !697, !698, !699, !701, !702, !703, !704, !706, !707, !708, !709, !711, !713, !714, !715, !716, !718, !719, !720, !722, !723, !724, !726, !727, !728, !729, !731, !732, !733, !735, !736, !737, !738, !740, !742, !743, !744, !745, !746, !747, !749, !751, !752, !753, !754}
!llvm.named.register.sp = !{!756}
!llvm.module.flags = !{!757, !758, !759, !760, !761, !762, !763, !764}
!llvm.ident = !{!765}

!0 = !{ptr @__UNIQUE_ID_firmware391, !1, !"__UNIQUE_ID_firmware391", i1 false, i1 false}
!1 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 77, i32 1}
!2 = !{ptr @__UNIQUE_ID_firmware392, !3, !"__UNIQUE_ID_firmware392", i1 false, i1 false}
!3 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 78, i32 1}
!4 = !{ptr @__UNIQUE_ID_firmware393, !5, !"__UNIQUE_ID_firmware393", i1 false, i1 false}
!5 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 79, i32 1}
!6 = !{ptr @__UNIQUE_ID_firmware394, !7, !"__UNIQUE_ID_firmware394", i1 false, i1 false}
!7 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 80, i32 1}
!8 = !{ptr @__UNIQUE_ID_firmware395, !9, !"__UNIQUE_ID_firmware395", i1 false, i1 false}
!9 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 81, i32 1}
!10 = !{ptr @__UNIQUE_ID_firmware396, !11, !"__UNIQUE_ID_firmware396", i1 false, i1 false}
!11 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 82, i32 1}
!12 = !{ptr @__UNIQUE_ID_firmware397, !13, !"__UNIQUE_ID_firmware397", i1 false, i1 false}
!13 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 83, i32 1}
!14 = !{ptr @__UNIQUE_ID_firmware398, !15, !"__UNIQUE_ID_firmware398", i1 false, i1 false}
!15 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 84, i32 1}
!16 = !{ptr @__UNIQUE_ID_firmware399, !17, !"__UNIQUE_ID_firmware399", i1 false, i1 false}
!17 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 85, i32 1}
!18 = !{ptr @__UNIQUE_ID_firmware400, !19, !"__UNIQUE_ID_firmware400", i1 false, i1 false}
!19 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 86, i32 1}
!20 = !{ptr @__UNIQUE_ID_firmware401, !21, !"__UNIQUE_ID_firmware401", i1 false, i1 false}
!21 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 87, i32 1}
!22 = !{ptr @__UNIQUE_ID_firmware402, !23, !"__UNIQUE_ID_firmware402", i1 false, i1 false}
!23 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 88, i32 1}
!24 = !{ptr @.str, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 93, i32 2}
!26 = !{ptr @.str.1, !27, !"<string literal>", i1 false, i1 false}
!27 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 94, i32 2}
!28 = !{ptr @.str.2, !29, !"<string literal>", i1 false, i1 false}
!29 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 95, i32 2}
!30 = !{ptr @.str.3, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 96, i32 2}
!32 = !{ptr @.str.4, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 97, i32 2}
!34 = !{ptr @.str.5, !35, !"<string literal>", i1 false, i1 false}
!35 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 98, i32 2}
!36 = !{ptr @.str.6, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 99, i32 2}
!38 = !{ptr @.str.7, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 100, i32 2}
!40 = !{ptr @.str.8, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 101, i32 2}
!42 = !{ptr @.str.9, !43, !"<string literal>", i1 false, i1 false}
!43 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 102, i32 2}
!44 = !{ptr @.str.10, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 103, i32 2}
!46 = !{ptr @.str.11, !47, !"<string literal>", i1 false, i1 false}
!47 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 104, i32 2}
!48 = !{ptr @.str.12, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 105, i32 2}
!50 = !{ptr @.str.13, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 106, i32 2}
!52 = !{ptr @.str.14, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 107, i32 2}
!54 = !{ptr @.str.15, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 108, i32 2}
!56 = !{ptr @.str.16, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 109, i32 2}
!58 = !{ptr @.str.17, !59, !"<string literal>", i1 false, i1 false}
!59 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 110, i32 2}
!60 = !{ptr @.str.18, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 111, i32 2}
!62 = !{ptr @.str.19, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 112, i32 2}
!64 = !{ptr @.str.20, !65, !"<string literal>", i1 false, i1 false}
!65 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 113, i32 2}
!66 = !{ptr @.str.21, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 114, i32 2}
!68 = !{ptr @.str.22, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 115, i32 2}
!70 = !{ptr @.str.23, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 116, i32 2}
!72 = !{ptr @.str.24, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 117, i32 2}
!74 = !{ptr @.str.25, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 118, i32 2}
!76 = !{ptr @.str.26, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 119, i32 2}
!78 = !{ptr @.str.27, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 120, i32 2}
!80 = !{ptr @.str.28, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 121, i32 2}
!82 = !{ptr @.str.29, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 122, i32 2}
!84 = !{ptr @.str.30, !85, !"<string literal>", i1 false, i1 false}
!85 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 123, i32 2}
!86 = !{ptr @.str.31, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 124, i32 2}
!88 = !{ptr @.str.32, !89, !"<string literal>", i1 false, i1 false}
!89 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 125, i32 2}
!90 = !{ptr @.str.33, !91, !"<string literal>", i1 false, i1 false}
!91 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 126, i32 2}
!92 = !{ptr @.str.34, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 127, i32 2}
!94 = !{ptr @.str.35, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 128, i32 2}
!96 = !{ptr @.str.36, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 129, i32 2}
!98 = !{ptr @.str.37, !99, !"<string literal>", i1 false, i1 false}
!99 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 130, i32 2}
!100 = !{ptr @amdgpu_asic_name, !101, !"amdgpu_asic_name", i1 false, i1 false}
!101 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 92, i32 13}
!102 = !{ptr @.str.38, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 430, i32 4}
!104 = !{ptr @.str.39, !105, !"<string literal>", i1 false, i1 false}
!105 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 594, i32 3}
!106 = !{ptr @.str.40, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 617, i32 3}
!108 = !{ptr @.str.41, !109, !"<string literal>", i1 false, i1 false}
!109 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1236, i32 3}
!110 = !{ptr @.str.42, !109, !"<string literal>", i1 false, i1 false}
!111 = !{ptr @amdgpu_device_resize_fb_bar._entry, !109, !"_entry", i1 false, i1 false}
!112 = !{ptr @amdgpu_device_resize_fb_bar._entry_ptr, !109, !"_entry_ptr", i1 false, i1 false}
!113 = distinct !{null, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1238, i32 3}
!115 = !{ptr @.str.44, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1282, i32 41}
!117 = !{ptr @.str.45, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1623, i32 4}
!119 = !{ptr @.str.46, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1657, i32 4}
!121 = !{ptr @.str.47, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1814, i32 2}
!123 = !{ptr @.str.48, !122, !"<string literal>", i1 false, i1 false}
!124 = !{ptr @amdgpu_device_ip_block_add._entry, !122, !"_entry", i1 false, i1 false}
!125 = !{ptr @amdgpu_device_ip_block_add._entry_ptr, !122, !"_entry_ptr", i1 false, i1 false}
!126 = !{ptr @.str.49, !127, !"<string literal>", i1 false, i1 false}
!127 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2502, i32 5}
!128 = !{ptr @.str.50, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2538, i32 5}
!130 = !{ptr @.str.51, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3480, i32 2}
!132 = !{ptr @.str.52, !131, !"<string literal>", i1 false, i1 false}
!133 = !{ptr @amdgpu_device_init._entry, !131, !"_entry", i1 false, i1 false}
!134 = !{ptr @amdgpu_device_init._entry_ptr, !131, !"_entry_ptr", i1 false, i1 false}
!135 = !{ptr @amdgpu_device_init.__key, !136, !"__key", i1 false, i1 false}
!136 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3486, i32 2}
!137 = !{ptr @.str.53, !136, !"<string literal>", i1 false, i1 false}
!138 = !{ptr @amdgpu_device_init.__key.54, !139, !"__key", i1 false, i1 false}
!139 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3487, i32 2}
!140 = !{ptr @.str.55, !139, !"<string literal>", i1 false, i1 false}
!141 = !{ptr @amdgpu_device_init.__key.56, !142, !"__key", i1 false, i1 false}
!142 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3488, i32 2}
!143 = !{ptr @.str.57, !142, !"<string literal>", i1 false, i1 false}
!144 = !{ptr @amdgpu_device_init.__key.58, !145, !"__key", i1 false, i1 false}
!145 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3489, i32 2}
!146 = !{ptr @.str.59, !145, !"<string literal>", i1 false, i1 false}
!147 = !{ptr @amdgpu_device_init.__key.60, !148, !"__key", i1 false, i1 false}
!148 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3490, i32 2}
!149 = !{ptr @.str.61, !148, !"<string literal>", i1 false, i1 false}
!150 = !{ptr @amdgpu_device_init.__key.62, !151, !"__key", i1 false, i1 false}
!151 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3491, i32 2}
!152 = !{ptr @.str.63, !151, !"<string literal>", i1 false, i1 false}
!153 = !{ptr @amdgpu_device_init.__key.64, !154, !"__key", i1 false, i1 false}
!154 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3492, i32 2}
!155 = !{ptr @.str.65, !154, !"<string literal>", i1 false, i1 false}
!156 = !{ptr @amdgpu_device_init.__key.66, !157, !"__key", i1 false, i1 false}
!157 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3493, i32 2}
!158 = !{ptr @.str.67, !157, !"<string literal>", i1 false, i1 false}
!159 = !{ptr @amdgpu_device_init.__key.68, !160, !"__key", i1 false, i1 false}
!160 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3494, i32 2}
!161 = !{ptr @.str.69, !160, !"<string literal>", i1 false, i1 false}
!162 = !{ptr @amdgpu_device_init.__key.70, !163, !"__key", i1 false, i1 false}
!163 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3497, i32 2}
!164 = !{ptr @.str.71, !163, !"<string literal>", i1 false, i1 false}
!165 = !{ptr @amdgpu_device_init.__key.72, !166, !"__key", i1 false, i1 false}
!166 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3498, i32 2}
!167 = !{ptr @.str.73, !166, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @amdgpu_device_init.__key.74, !169, !"__key", i1 false, i1 false}
!169 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3499, i32 2}
!170 = !{ptr @.str.75, !169, !"<string literal>", i1 false, i1 false}
!171 = !{ptr @amdgpu_device_init.__key.76, !172, !"__key", i1 false, i1 false}
!172 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3507, i32 2}
!173 = !{ptr @.str.77, !172, !"<string literal>", i1 false, i1 false}
!174 = !{ptr @amdgpu_device_init.__key.78, !175, !"__key", i1 false, i1 false}
!175 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3508, i32 2}
!176 = !{ptr @.str.79, !175, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @amdgpu_device_init.__key.80, !178, !"__key", i1 false, i1 false}
!178 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3509, i32 2}
!179 = !{ptr @.str.81, !178, !"<string literal>", i1 false, i1 false}
!180 = !{ptr @amdgpu_device_init.__key.82, !181, !"__key", i1 false, i1 false}
!181 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3510, i32 2}
!182 = !{ptr @.str.83, !181, !"<string literal>", i1 false, i1 false}
!183 = !{ptr @amdgpu_device_init.__key.84, !184, !"__key", i1 false, i1 false}
!184 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3511, i32 2}
!185 = !{ptr @.str.85, !184, !"<string literal>", i1 false, i1 false}
!186 = !{ptr @amdgpu_device_init.__key.86, !187, !"__key", i1 false, i1 false}
!187 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3512, i32 2}
!188 = !{ptr @.str.87, !187, !"<string literal>", i1 false, i1 false}
!189 = !{ptr @amdgpu_device_init.__key.88, !190, !"__key", i1 false, i1 false}
!190 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3513, i32 2}
!191 = !{ptr @.str.89, !190, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @amdgpu_device_init.__key.90, !193, !"__key", i1 false, i1 false}
!193 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3514, i32 2}
!194 = !{ptr @.str.91, !193, !"<string literal>", i1 false, i1 false}
!195 = !{ptr @amdgpu_device_init.__key.92, !196, !"__key", i1 false, i1 false}
!196 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3515, i32 2}
!197 = !{ptr @.str.93, !196, !"<string literal>", i1 false, i1 false}
!198 = !{ptr @amdgpu_device_init.__key.94, !199, !"__key", i1 false, i1 false}
!199 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3518, i32 2}
!200 = !{ptr @.str.95, !199, !"<string literal>", i1 false, i1 false}
!201 = !{ptr @amdgpu_device_init.__key.96, !202, !"__key", i1 false, i1 false}
!202 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3522, i32 2}
!203 = !{ptr @.str.97, !202, !"<string literal>", i1 false, i1 false}
!204 = !{ptr @amdgpu_device_init.__key.98, !202, !"__key", i1 false, i1 false}
!205 = !{ptr @.str.99, !202, !"<string literal>", i1 false, i1 false}
!206 = !{ptr @amdgpu_device_init.__key.100, !207, !"__key", i1 false, i1 false}
!207 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3524, i32 2}
!208 = !{ptr @.str.101, !207, !"<string literal>", i1 false, i1 false}
!209 = !{ptr @amdgpu_device_init.__key.102, !207, !"__key", i1 false, i1 false}
!210 = !{ptr @.str.103, !207, !"<string literal>", i1 false, i1 false}
!211 = !{ptr @amdgpu_device_init.__key.104, !212, !"__key", i1 false, i1 false}
!212 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3527, i32 2}
!213 = !{ptr @.str.105, !212, !"<string literal>", i1 false, i1 false}
!214 = !{ptr @.str.107, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3560, i32 2}
!216 = !{ptr @amdgpu_device_init._entry.106, !215, !"_entry", i1 false, i1 false}
!217 = !{ptr @amdgpu_device_init._entry_ptr.108, !215, !"_entry_ptr", i1 false, i1 false}
!218 = !{ptr @.str.110, !219, !"<string literal>", i1 false, i1 false}
!219 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3561, i32 2}
!220 = !{ptr @amdgpu_device_init._entry.109, !219, !"_entry", i1 false, i1 false}
!221 = !{ptr @amdgpu_device_init._entry_ptr.111, !219, !"_entry_ptr", i1 false, i1 false}
!222 = !{ptr @.str.113, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3566, i32 3}
!224 = !{ptr @amdgpu_device_init._entry.112, !223, !"_entry", i1 false, i1 false}
!225 = !{ptr @amdgpu_device_init._entry_ptr.114, !223, !"_entry_ptr", i1 false, i1 false}
!226 = !{ptr @.str.116, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3576, i32 3}
!228 = !{ptr @.str.117, !227, !"<string literal>", i1 false, i1 false}
!229 = !{ptr @.str.118, !227, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @amdgpu_device_init._entry.115, !227, !"_entry", i1 false, i1 false}
!231 = !{ptr @amdgpu_device_init._entry_ptr.119, !227, !"_entry_ptr", i1 false, i1 false}
!232 = !{ptr @.str.121, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3603, i32 3}
!234 = !{ptr @.str.122, !233, !"<string literal>", i1 false, i1 false}
!235 = !{ptr @amdgpu_device_init._entry.120, !233, !"_entry", i1 false, i1 false}
!236 = !{ptr @amdgpu_device_init._entry_ptr.123, !233, !"_entry_ptr", i1 false, i1 false}
!237 = !{ptr @.str.125, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3624, i32 4}
!239 = !{ptr @amdgpu_device_init._entry.124, !238, !"_entry", i1 false, i1 false}
!240 = !{ptr @amdgpu_device_init._entry_ptr.126, !238, !"_entry_ptr", i1 false, i1 false}
!241 = !{ptr @.str.127, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3634, i32 6}
!243 = !{ptr @.str.129, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3642, i32 5}
!245 = !{ptr @amdgpu_device_init._entry.128, !244, !"_entry", i1 false, i1 false}
!246 = !{ptr @amdgpu_device_init._entry_ptr.130, !244, !"_entry_ptr", i1 false, i1 false}
!247 = !{ptr @.str.132, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3653, i32 4}
!249 = !{ptr @amdgpu_device_init._entry.131, !248, !"_entry", i1 false, i1 false}
!250 = !{ptr @amdgpu_device_init._entry_ptr.133, !248, !"_entry_ptr", i1 false, i1 false}
!251 = !{ptr @.str.135, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3657, i32 3}
!253 = !{ptr @amdgpu_device_init._entry.134, !252, !"_entry", i1 false, i1 false}
!254 = !{ptr @amdgpu_device_init._entry_ptr.136, !252, !"_entry_ptr", i1 false, i1 false}
!255 = !{ptr @.str.138, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3660, i32 4}
!257 = !{ptr @amdgpu_device_init._entry.137, !256, !"_entry", i1 false, i1 false}
!258 = !{ptr @amdgpu_device_init._entry_ptr.139, !256, !"_entry_ptr", i1 false, i1 false}
!259 = !{ptr @.str.141, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3669, i32 4}
!261 = !{ptr @amdgpu_device_init._entry.140, !260, !"_entry", i1 false, i1 false}
!262 = !{ptr @amdgpu_device_init._entry_ptr.142, !260, !"_entry_ptr", i1 false, i1 false}
!263 = !{ptr @.str.144, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3677, i32 4}
!265 = !{ptr @amdgpu_device_init._entry.143, !264, !"_entry", i1 false, i1 false}
!266 = !{ptr @amdgpu_device_init._entry_ptr.145, !264, !"_entry_ptr", i1 false, i1 false}
!267 = !{ptr @.str.147, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3690, i32 3}
!269 = !{ptr @amdgpu_device_init._entry.146, !268, !"_entry", i1 false, i1 false}
!270 = !{ptr @amdgpu_device_init._entry_ptr.148, !268, !"_entry_ptr", i1 false, i1 false}
!271 = !{ptr @.str.150, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3705, i32 4}
!273 = !{ptr @amdgpu_device_init._entry.149, !272, !"_entry", i1 false, i1 false}
!274 = !{ptr @amdgpu_device_init._entry_ptr.151, !272, !"_entry_ptr", i1 false, i1 false}
!275 = !{ptr @.str.153, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3712, i32 3}
!277 = !{ptr @amdgpu_device_init._entry.152, !276, !"_entry", i1 false, i1 false}
!278 = !{ptr @amdgpu_device_init._entry_ptr.154, !276, !"_entry_ptr", i1 false, i1 false}
!279 = !{ptr @.str.156, !280, !"<string literal>", i1 false, i1 false}
!280 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3719, i32 2}
!281 = !{ptr @amdgpu_device_init._entry.155, !280, !"_entry", i1 false, i1 false}
!282 = !{ptr @amdgpu_device_init._entry_ptr.157, !280, !"_entry_ptr", i1 false, i1 false}
!283 = !{ptr @.str.158, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3741, i32 3}
!285 = !{ptr @.str.159, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3748, i32 3}
!287 = !{ptr @.str.161, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3756, i32 4}
!289 = !{ptr @amdgpu_device_init._entry.160, !288, !"_entry", i1 false, i1 false}
!290 = !{ptr @amdgpu_device_init._entry_ptr.162, !288, !"_entry_ptr", i1 false, i1 false}
!291 = !{ptr @.str.164, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3762, i32 4}
!293 = !{ptr @amdgpu_device_init._entry.163, !292, !"_entry", i1 false, i1 false}
!294 = !{ptr @amdgpu_device_init._entry_ptr.165, !292, !"_entry_ptr", i1 false, i1 false}
!295 = !{ptr @.str.167, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3778, i32 4}
!297 = !{ptr @amdgpu_device_init._entry.166, !296, !"_entry", i1 false, i1 false}
!298 = !{ptr @amdgpu_device_init._entry_ptr.168, !296, !"_entry_ptr", i1 false, i1 false}
!299 = !{ptr @.str.170, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3793, i32 3}
!301 = !{ptr @amdgpu_device_init._entry.169, !300, !"_entry", i1 false, i1 false}
!302 = !{ptr @amdgpu_device_init._entry_ptr.171, !300, !"_entry_ptr", i1 false, i1 false}
!303 = !{ptr @.str.173, !304, !"<string literal>", i1 false, i1 false}
!304 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3798, i32 3}
!305 = !{ptr @amdgpu_device_init._entry.172, !304, !"_entry", i1 false, i1 false}
!306 = !{ptr @amdgpu_device_init._entry_ptr.174, !304, !"_entry_ptr", i1 false, i1 false}
!307 = !{ptr @.str.175, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3866, i32 2}
!309 = !{ptr @.str.176, !308, !"<string literal>", i1 false, i1 false}
!310 = !{ptr @amdgpu_device_fini_hw._entry, !308, !"_entry", i1 false, i1 false}
!311 = !{ptr @amdgpu_device_fini_hw._entry_ptr, !308, !"_entry_ptr", i1 false, i1 false}
!312 = !{ptr @.str.177, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4003, i32 3}
!314 = !{ptr @.str.178, !313, !"<string literal>", i1 false, i1 false}
!315 = !{ptr @amdgpu_device_suspend._entry, !313, !"_entry", i1 false, i1 false}
!316 = !{ptr @amdgpu_device_suspend._entry_ptr, !313, !"_entry_ptr", i1 false, i1 false}
!317 = !{ptr @.str.179, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4053, i32 4}
!319 = !{ptr @.str.180, !318, !"<string literal>", i1 false, i1 false}
!320 = !{ptr @amdgpu_device_resume._entry, !318, !"_entry", i1 false, i1 false}
!321 = !{ptr @amdgpu_device_resume._entry_ptr, !318, !"_entry_ptr", i1 false, i1 false}
!322 = !{ptr @.str.182, !323, !"<string literal>", i1 false, i1 false}
!323 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4058, i32 3}
!324 = !{ptr @amdgpu_device_resume._entry.181, !323, !"_entry", i1 false, i1 false}
!325 = !{ptr @amdgpu_device_resume._entry_ptr.183, !323, !"_entry_ptr", i1 false, i1 false}
!326 = !{ptr @amdgpu_device_resume._entry.184, !327, !"_entry", i1 false, i1 false}
!327 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4108, i32 3}
!328 = !{ptr @amdgpu_device_resume._entry_ptr.185, !327, !"_entry_ptr", i1 false, i1 false}
!329 = !{ptr @.str.186, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4441, i32 3}
!331 = !{ptr @.str.187, !330, !"<string literal>", i1 false, i1 false}
!332 = !{ptr @amdgpu_device_should_recover_gpu._entry, !330, !"_entry", i1 false, i1 false}
!333 = !{ptr @amdgpu_device_should_recover_gpu._entry_ptr, !330, !"_entry_ptr", i1 false, i1 false}
!334 = !{ptr @.str.189, !335, !"<string literal>", i1 false, i1 false}
!335 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4477, i32 3}
!336 = !{ptr @amdgpu_device_should_recover_gpu._entry.188, !335, !"_entry", i1 false, i1 false}
!337 = !{ptr @amdgpu_device_should_recover_gpu._entry_ptr.190, !335, !"_entry_ptr", i1 false, i1 false}
!338 = !{ptr @.str.191, !339, !"<string literal>", i1 false, i1 false}
!339 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4488, i32 9}
!340 = !{ptr @.str.192, !339, !"<string literal>", i1 false, i1 false}
!341 = !{ptr @amdgpu_device_mode1_reset._entry, !339, !"_entry", i1 false, i1 false}
!342 = !{ptr @amdgpu_device_mode1_reset._entry_ptr, !339, !"_entry_ptr", i1 false, i1 false}
!343 = !{ptr @.str.194, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4496, i32 17}
!345 = !{ptr @amdgpu_device_mode1_reset._entry.193, !344, !"_entry", i1 false, i1 false}
!346 = !{ptr @amdgpu_device_mode1_reset._entry_ptr.195, !344, !"_entry_ptr", i1 false, i1 false}
!347 = !{ptr @.str.197, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4499, i32 17}
!349 = !{ptr @amdgpu_device_mode1_reset._entry.196, !348, !"_entry", i1 false, i1 false}
!350 = !{ptr @amdgpu_device_mode1_reset._entry_ptr.198, !348, !"_entry_ptr", i1 false, i1 false}
!351 = !{ptr @.str.200, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4504, i32 17}
!353 = !{ptr @amdgpu_device_mode1_reset._entry.199, !352, !"_entry", i1 false, i1 false}
!354 = !{ptr @amdgpu_device_mode1_reset._entry_ptr.201, !352, !"_entry_ptr", i1 false, i1 false}
!355 = !{ptr @.str.202, !356, !"<string literal>", i1 false, i1 false}
!356 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4573, i32 5}
!357 = !{ptr @.str.203, !356, !"<string literal>", i1 false, i1 false}
!358 = !{ptr @amdgpu_device_pre_asic_reset._entry, !356, !"_entry", i1 false, i1 false}
!359 = !{ptr @amdgpu_device_pre_asic_reset._entry_ptr, !356, !"_entry_ptr", i1 false, i1 false}
!360 = !{ptr @.str.204, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4627, i32 5}
!362 = !{ptr @.str.205, !361, !"<string literal>", i1 false, i1 false}
!363 = !{ptr @amdgpu_do_asic_reset._entry, !361, !"_entry", i1 false, i1 false}
!364 = !{ptr @amdgpu_do_asic_reset._entry_ptr, !361, !"_entry_ptr", i1 false, i1 false}
!365 = !{ptr @.str.207, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4661, i32 5}
!367 = !{ptr @.str.208, !366, !"<string literal>", i1 false, i1 false}
!368 = !{ptr @amdgpu_do_asic_reset._entry.206, !366, !"_entry", i1 false, i1 false}
!369 = !{ptr @amdgpu_do_asic_reset._entry_ptr.209, !366, !"_entry_ptr", i1 false, i1 false}
!370 = !{ptr @.str.211, !371, !"<string literal>", i1 false, i1 false}
!371 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4663, i32 5}
!372 = !{ptr @amdgpu_do_asic_reset._entry.210, !371, !"_entry", i1 false, i1 false}
!373 = !{ptr @amdgpu_do_asic_reset._entry_ptr.212, !371, !"_entry_ptr", i1 false, i1 false}
!374 = !{ptr @.str.214, !375, !"<string literal>", i1 false, i1 false}
!375 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4674, i32 6}
!376 = !{ptr @amdgpu_do_asic_reset._entry.213, !375, !"_entry", i1 false, i1 false}
!377 = !{ptr @amdgpu_do_asic_reset._entry_ptr.215, !375, !"_entry_ptr", i1 false, i1 false}
!378 = !{ptr @.str.217, !379, !"<string literal>", i1 false, i1 false}
!379 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4736, i32 5}
!380 = !{ptr @amdgpu_do_asic_reset._entry.216, !379, !"_entry", i1 false, i1 false}
!381 = !{ptr @amdgpu_do_asic_reset._entry_ptr.218, !379, !"_entry_ptr", i1 false, i1 false}
!382 = !{ptr @.str.219, !383, !"<string literal>", i1 false, i1 false}
!383 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4998, i32 3}
!384 = !{ptr @.str.220, !383, !"<string literal>", i1 false, i1 false}
!385 = !{ptr @amdgpu_device_gpu_recover._entry, !383, !"_entry", i1 false, i1 false}
!386 = !{ptr @amdgpu_device_gpu_recover._entry_ptr, !383, !"_entry_ptr", i1 false, i1 false}
!387 = !{ptr @.str.222, !388, !"<string literal>", i1 false, i1 false}
!388 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5004, i32 2}
!389 = !{ptr @amdgpu_device_gpu_recover._entry.221, !388, !"_entry", i1 false, i1 false}
!390 = !{ptr @amdgpu_device_gpu_recover._entry_ptr.223, !388, !"_entry_ptr", i1 false, i1 false}
!391 = !{ptr @.str.224, !388, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @.str.225, !388, !"<string literal>", i1 false, i1 false}
!393 = !{ptr @.str.227, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5018, i32 4}
!395 = !{ptr @amdgpu_device_gpu_recover._entry.226, !394, !"_entry", i1 false, i1 false}
!396 = !{ptr @amdgpu_device_gpu_recover._entry_ptr.228, !394, !"_entry_ptr", i1 false, i1 false}
!397 = !{ptr @.str.230, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5041, i32 3}
!399 = !{ptr @amdgpu_device_gpu_recover._entry.229, !398, !"_entry", i1 false, i1 false}
!400 = !{ptr @amdgpu_device_gpu_recover._entry_ptr.231, !398, !"_entry_ptr", i1 false, i1 false}
!401 = !{ptr @.str.233, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5128, i32 3}
!403 = !{ptr @amdgpu_device_gpu_recover._entry.232, !402, !"_entry", i1 false, i1 false}
!404 = !{ptr @amdgpu_device_gpu_recover._entry_ptr.234, !402, !"_entry_ptr", i1 false, i1 false}
!405 = !{ptr @.str.236, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5137, i32 4}
!407 = !{ptr @amdgpu_device_gpu_recover._entry.235, !406, !"_entry", i1 false, i1 false}
!408 = !{ptr @amdgpu_device_gpu_recover._entry_ptr.237, !406, !"_entry_ptr", i1 false, i1 false}
!409 = !{ptr @.str.239, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5194, i32 4}
!411 = !{ptr @amdgpu_device_gpu_recover._entry.238, !410, !"_entry", i1 false, i1 false}
!412 = !{ptr @amdgpu_device_gpu_recover._entry_ptr.240, !410, !"_entry_ptr", i1 false, i1 false}
!413 = !{ptr @.str.242, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5197, i32 4}
!415 = !{ptr @amdgpu_device_gpu_recover._entry.241, !414, !"_entry", i1 false, i1 false}
!416 = !{ptr @amdgpu_device_gpu_recover._entry_ptr.243, !414, !"_entry_ptr", i1 false, i1 false}
!417 = !{ptr @amdgpu_device_gpu_recover._entry.244, !418, !"_entry", i1 false, i1 false}
!418 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5199, i32 5}
!419 = !{ptr @amdgpu_device_gpu_recover._entry_ptr.245, !418, !"_entry_ptr", i1 false, i1 false}
!420 = !{ptr @.str.247, !421, !"<string literal>", i1 false, i1 false}
!421 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5228, i32 3}
!422 = !{ptr @amdgpu_device_gpu_recover._entry.246, !421, !"_entry", i1 false, i1 false}
!423 = !{ptr @amdgpu_device_gpu_recover._entry_ptr.248, !421, !"_entry_ptr", i1 false, i1 false}
!424 = !{ptr @.str.249, !425, !"<string literal>", i1 false, i1 false}
!425 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5448, i32 2}
!426 = !{ptr @.str.250, !425, !"<string literal>", i1 false, i1 false}
!427 = !{ptr @amdgpu_pci_error_detected._entry, !425, !"_entry", i1 false, i1 false}
!428 = !{ptr @amdgpu_pci_error_detected._entry_ptr, !425, !"_entry_ptr", i1 false, i1 false}
!429 = !{ptr @.str.252, !430, !"<string literal>", i1 false, i1 false}
!430 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5451, i32 3}
!431 = !{ptr @amdgpu_pci_error_detected._entry.251, !430, !"_entry", i1 false, i1 false}
!432 = !{ptr @amdgpu_pci_error_detected._entry_ptr.253, !430, !"_entry_ptr", i1 false, i1 false}
!433 = !{ptr @.str.254, !434, !"<string literal>", i1 false, i1 false}
!434 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5501, i32 2}
!435 = !{ptr @.str.255, !434, !"<string literal>", i1 false, i1 false}
!436 = !{ptr @amdgpu_pci_mmio_enabled._entry, !434, !"_entry", i1 false, i1 false}
!437 = !{ptr @amdgpu_pci_mmio_enabled._entry_ptr, !434, !"_entry_ptr", i1 false, i1 false}
!438 = !{ptr @.str.256, !439, !"<string literal>", i1 false, i1 false}
!439 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5530, i32 2}
!440 = !{ptr @.str.257, !439, !"<string literal>", i1 false, i1 false}
!441 = !{ptr @amdgpu_pci_slot_reset._entry, !439, !"_entry", i1 false, i1 false}
!442 = !{ptr @amdgpu_pci_slot_reset._entry_ptr, !439, !"_entry_ptr", i1 false, i1 false}
!443 = !{ptr @.str.259, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5574, i32 3}
!445 = !{ptr @amdgpu_pci_slot_reset._entry.258, !444, !"_entry", i1 false, i1 false}
!446 = !{ptr @amdgpu_pci_slot_reset._entry_ptr.260, !444, !"_entry_ptr", i1 false, i1 false}
!447 = !{ptr @.str.261, !448, !"<string literal>", i1 false, i1 false}
!448 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5576, i32 3}
!449 = !{ptr @.str.262, !450, !"<string literal>", i1 false, i1 false}
!450 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5597, i32 2}
!451 = !{ptr @.str.263, !450, !"<string literal>", i1 false, i1 false}
!452 = !{ptr @amdgpu_pci_resume._entry, !450, !"_entry", i1 false, i1 false}
!453 = !{ptr @amdgpu_pci_resume._entry_ptr, !450, !"_entry_ptr", i1 false, i1 false}
!454 = !{ptr @.str.264, !455, !"<string literal>", i1 false, i1 false}
!455 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5630, i32 4}
!456 = !{ptr @.str.265, !457, !"<string literal>", i1 false, i1 false}
!457 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5634, i32 3}
!458 = !{ptr @.str.266, !457, !"<string literal>", i1 false, i1 false}
!459 = !{ptr @amdgpu_device_cache_pci_state._entry, !457, !"_entry", i1 false, i1 false}
!460 = !{ptr @amdgpu_device_cache_pci_state._entry_ptr, !457, !"_entry_ptr", i1 false, i1 false}
!461 = !{ptr @.str.267, !462, !"<string literal>", i1 false, i1 false}
!462 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 5655, i32 3}
!463 = !{ptr @.str.268, !462, !"<string literal>", i1 false, i1 false}
!464 = !{ptr @amdgpu_device_load_pci_state._entry, !462, !"_entry", i1 false, i1 false}
!465 = !{ptr @amdgpu_device_load_pci_state._entry_ptr, !462, !"_entry_ptr", i1 false, i1 false}
!466 = distinct !{null, !467, !"__already_done", i1 false, i1 false}
!467 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_trace.h", i32 38, i32 1}
!468 = !{ptr @.str.269, !467, !"<string literal>", i1 false, i1 false}
!469 = distinct !{null, !467, !"__warned", i1 false, i1 false}
!470 = !{ptr @.str.270, !467, !"<string literal>", i1 false, i1 false}
!471 = distinct !{null, !472, !"__already_done", i1 false, i1 false}
!472 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!473 = !{ptr @.str.271, !472, !"<string literal>", i1 false, i1 false}
!474 = distinct !{null, !475, !"__already_done", i1 false, i1 false}
!475 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_trace.h", i32 57, i32 1}
!476 = distinct !{null, !475, !"__warned", i1 false, i1 false}
!477 = !{ptr @.str.272, !478, !"<string literal>", i1 false, i1 false}
!478 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2857, i32 4}
!479 = !{ptr @.str.273, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2932, i32 6}
!481 = !{ptr @.str.274, !482, !"<string literal>", i1 false, i1 false}
!482 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 808, i32 2}
!483 = !{ptr @.str.275, !484, !"<string literal>", i1 false, i1 false}
!484 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 825, i32 2}
!485 = !{ptr @.str.276, !486, !"<string literal>", i1 false, i1 false}
!486 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 842, i32 2}
!487 = !{ptr @.str.277, !488, !"<string literal>", i1 false, i1 false}
!488 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 859, i32 2}
!489 = !{ptr @.str.278, !490, !"<string literal>", i1 false, i1 false}
!490 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 878, i32 2}
!491 = !{ptr @.str.279, !492, !"<string literal>", i1 false, i1 false}
!492 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 899, i32 2}
!493 = !{ptr @.str.280, !494, !"<string literal>", i1 false, i1 false}
!494 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1470, i32 3}
!495 = !{ptr @.str.281, !494, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @amdgpu_device_check_arguments._entry, !494, !"_entry", i1 false, i1 false}
!497 = !{ptr @amdgpu_device_check_arguments._entry_ptr, !494, !"_entry_ptr", i1 false, i1 false}
!498 = !{ptr @.str.283, !499, !"<string literal>", i1 false, i1 false}
!499 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1474, i32 3}
!500 = !{ptr @amdgpu_device_check_arguments._entry.282, !499, !"_entry", i1 false, i1 false}
!501 = !{ptr @amdgpu_device_check_arguments._entry_ptr.284, !499, !"_entry_ptr", i1 false, i1 false}
!502 = !{ptr @.str.286, !503, !"<string literal>", i1 false, i1 false}
!503 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1481, i32 3}
!504 = !{ptr @amdgpu_device_check_arguments._entry.285, !503, !"_entry", i1 false, i1 false}
!505 = !{ptr @amdgpu_device_check_arguments._entry_ptr.287, !503, !"_entry_ptr", i1 false, i1 false}
!506 = !{ptr @.str.289, !507, !"<string literal>", i1 false, i1 false}
!507 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1488, i32 3}
!508 = !{ptr @amdgpu_device_check_arguments._entry.288, !507, !"_entry", i1 false, i1 false}
!509 = !{ptr @amdgpu_device_check_arguments._entry_ptr.290, !507, !"_entry_ptr", i1 false, i1 false}
!510 = !{ptr @.str.292, !511, !"<string literal>", i1 false, i1 false}
!511 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1496, i32 3}
!512 = !{ptr @amdgpu_device_check_arguments._entry.291, !511, !"_entry", i1 false, i1 false}
!513 = !{ptr @amdgpu_device_check_arguments._entry_ptr.293, !511, !"_entry_ptr", i1 false, i1 false}
!514 = !{ptr @.str.295, !515, !"<string literal>", i1 false, i1 false}
!515 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1501, i32 3}
!516 = !{ptr @amdgpu_device_check_arguments._entry.294, !515, !"_entry", i1 false, i1 false}
!517 = !{ptr @amdgpu_device_check_arguments._entry_ptr.296, !515, !"_entry_ptr", i1 false, i1 false}
!518 = !{ptr @.str.298, !519, !"<string literal>", i1 false, i1 false}
!519 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1505, i32 3}
!520 = !{ptr @amdgpu_device_check_arguments._entry.297, !519, !"_entry", i1 false, i1 false}
!521 = !{ptr @amdgpu_device_check_arguments._entry_ptr.299, !519, !"_entry_ptr", i1 false, i1 false}
!522 = !{ptr @.str.300, !523, !"<string literal>", i1 false, i1 false}
!523 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1395, i32 3}
!524 = !{ptr @.str.301, !523, !"<string literal>", i1 false, i1 false}
!525 = !{ptr @amdgpu_device_check_smu_prv_buffer_size._entry, !523, !"_entry", i1 false, i1 false}
!526 = !{ptr @amdgpu_device_check_smu_prv_buffer_size._entry_ptr, !523, !"_entry_ptr", i1 false, i1 false}
!527 = !{ptr @.str.303, !528, !"<string literal>", i1 false, i1 false}
!528 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1410, i32 3}
!529 = !{ptr @amdgpu_device_check_smu_prv_buffer_size._entry.302, !528, !"_entry", i1 false, i1 false}
!530 = !{ptr @amdgpu_device_check_smu_prv_buffer_size._entry_ptr.304, !528, !"_entry_ptr", i1 false, i1 false}
!531 = !{ptr @.str.306, !532, !"<string literal>", i1 false, i1 false}
!532 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1418, i32 2}
!533 = !{ptr @amdgpu_device_check_smu_prv_buffer_size._entry.305, !532, !"_entry", i1 false, i1 false}
!534 = !{ptr @amdgpu_device_check_smu_prv_buffer_size._entry_ptr.307, !532, !"_entry_ptr", i1 false, i1 false}
!535 = !{ptr @.str.308, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1377, i32 3}
!537 = !{ptr @.str.309, !536, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @amdgpu_device_check_vm_size._entry, !536, !"_entry", i1 false, i1 false}
!539 = !{ptr @amdgpu_device_check_vm_size._entry_ptr, !536, !"_entry_ptr", i1 false, i1 false}
!540 = !{ptr @.str.310, !541, !"<string literal>", i1 false, i1 false}
!541 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1356, i32 3}
!542 = !{ptr @.str.311, !541, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @amdgpu_device_check_block_size._entry, !541, !"_entry", i1 false, i1 false}
!544 = !{ptr @amdgpu_device_check_block_size._entry_ptr, !541, !"_entry_ptr", i1 false, i1 false}
!545 = !{ptr @.str.312, !546, !"<string literal>", i1 false, i1 false}
!546 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2812, i32 3}
!547 = distinct !{null, !548, !"__already_done", i1 false, i1 false}
!548 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2820, i32 2}
!549 = distinct !{null, !550, !"__already_done", i1 false, i1 false}
!550 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2821, i32 2}
!551 = !{ptr @.str.314, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3321, i32 3}
!553 = !{ptr @.str.315, !552, !"<string literal>", i1 false, i1 false}
!554 = !{ptr @amdgpu_device_xgmi_reset_func._entry, !552, !"_entry", i1 false, i1 false}
!555 = !{ptr @amdgpu_device_xgmi_reset_func._entry_ptr, !552, !"_entry_ptr", i1 false, i1 false}
!556 = !{ptr @ratelimit_state_init.__key, !557, !"__key", i1 false, i1 false}
!557 = !{!"../include/linux/ratelimit.h", i32 14, i32 2}
!558 = !{ptr @.str.316, !557, !"<string literal>", i1 false, i1 false}
!559 = !{ptr @.str.317, !560, !"<string literal>", i1 false, i1 false}
!560 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3349, i32 44}
!561 = !{ptr @.str.318, !562, !"<string literal>", i1 false, i1 false}
!562 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3360, i32 5}
!563 = !{ptr @.str.319, !562, !"<string literal>", i1 false, i1 false}
!564 = !{ptr @amdgpu_device_get_job_timeout_settings._entry, !562, !"_entry", i1 false, i1 false}
!565 = !{ptr @amdgpu_device_get_job_timeout_settings._entry_ptr, !562, !"_entry_ptr", i1 false, i1 false}
!566 = !{ptr @.str.320, !567, !"<string literal>", i1 false, i1 false}
!567 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2150, i32 4}
!568 = !{ptr @.str.321, !569, !"<string literal>", i1 false, i1 false}
!569 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2159, i32 6}
!570 = !{ptr @.str.322, !571, !"<string literal>", i1 false, i1 false}
!571 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2181, i32 5}
!572 = !{ptr @.str.323, !571, !"<string literal>", i1 false, i1 false}
!573 = !{ptr @amdgpu_device_ip_early_init._entry, !571, !"_entry", i1 false, i1 false}
!574 = !{ptr @amdgpu_device_ip_early_init._entry_ptr, !571, !"_entry_ptr", i1 false, i1 false}
!575 = !{ptr @.str.324, !576, !"<string literal>", i1 false, i1 false}
!576 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1844, i32 51}
!577 = !{ptr @.str.325, !578, !"<string literal>", i1 false, i1 false}
!578 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1846, i32 16}
!579 = !{ptr @.str.326, !580, !"<string literal>", i1 false, i1 false}
!580 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1870, i32 3}
!581 = !{ptr @.str.327, !580, !"<string literal>", i1 false, i1 false}
!582 = !{ptr @amdgpu_device_enable_virtual_display._entry, !580, !"_entry", i1 false, i1 false}
!583 = !{ptr @amdgpu_device_enable_virtual_display._entry_ptr, !580, !"_entry_ptr", i1 false, i1 false}
!584 = !{ptr @.str.328, !585, !"<string literal>", i1 false, i1 false}
!585 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1942, i32 15}
!586 = !{ptr @.str.329, !587, !"<string literal>", i1 false, i1 false}
!587 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1945, i32 15}
!588 = !{ptr @.str.330, !589, !"<string literal>", i1 false, i1 false}
!589 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1949, i32 16}
!590 = !{ptr @.str.331, !591, !"<string literal>", i1 false, i1 false}
!591 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1951, i32 16}
!592 = !{ptr @.str.332, !593, !"<string literal>", i1 false, i1 false}
!593 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1953, i32 16}
!594 = !{ptr @.str.333, !595, !"<string literal>", i1 false, i1 false}
!595 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1956, i32 15}
!596 = !{ptr @.str.334, !597, !"<string literal>", i1 false, i1 false}
!597 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1960, i32 16}
!598 = !{ptr @.str.335, !599, !"<string literal>", i1 false, i1 false}
!599 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1962, i32 16}
!600 = !{ptr @.str.336, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1965, i32 15}
!602 = !{ptr @.str.337, !603, !"<string literal>", i1 false, i1 false}
!603 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1968, i32 15}
!604 = !{ptr @.str.338, !605, !"<string literal>", i1 false, i1 false}
!605 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1971, i32 15}
!606 = !{ptr @.str.339, !607, !"<string literal>", i1 false, i1 false}
!607 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1974, i32 15}
!608 = !{ptr @.str.340, !609, !"<string literal>", i1 false, i1 false}
!609 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1977, i32 15}
!610 = !{ptr @.str.341, !611, !"<string literal>", i1 false, i1 false}
!611 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1981, i32 37}
!612 = !{ptr @.str.342, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1984, i32 3}
!614 = !{ptr @.str.343, !613, !"<string literal>", i1 false, i1 false}
!615 = !{ptr @amdgpu_device_parse_gpu_info_fw._entry, !613, !"_entry", i1 false, i1 false}
!616 = !{ptr @amdgpu_device_parse_gpu_info_fw._entry_ptr, !613, !"_entry_ptr", i1 false, i1 false}
!617 = !{ptr @.str.345, !618, !"<string literal>", i1 false, i1 false}
!618 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1991, i32 3}
!619 = !{ptr @amdgpu_device_parse_gpu_info_fw._entry.344, !618, !"_entry", i1 false, i1 false}
!620 = !{ptr @amdgpu_device_parse_gpu_info_fw._entry_ptr.346, !618, !"_entry_ptr", i1 false, i1 false}
!621 = !{ptr @.str.348, !622, !"<string literal>", i1 false, i1 false}
!622 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2055, i32 3}
!623 = !{ptr @amdgpu_device_parse_gpu_info_fw._entry.347, !622, !"_entry", i1 false, i1 false}
!624 = !{ptr @amdgpu_device_parse_gpu_info_fw._entry_ptr.349, !622, !"_entry_ptr", i1 false, i1 false}
!625 = !{ptr @.str.350, !626, !"<string literal>", i1 false, i1 false}
!626 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2314, i32 4}
!627 = !{ptr @.str.351, !628, !"<string literal>", i1 false, i1 false}
!628 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2328, i32 5}
!629 = !{ptr @.str.352, !630, !"<string literal>", i1 false, i1 false}
!630 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2333, i32 5}
!631 = !{ptr @.str.353, !632, !"<string literal>", i1 false, i1 false}
!632 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2338, i32 5}
!633 = !{ptr @.str.354, !634, !"<string literal>", i1 false, i1 false}
!634 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2349, i32 6}
!635 = !{ptr @.str.355, !636, !"<string literal>", i1 false, i1 false}
!636 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2361, i32 3}
!637 = !{ptr @.str.356, !636, !"<string literal>", i1 false, i1 false}
!638 = !{ptr @amdgpu_device_ip_init._entry, !636, !"_entry", i1 false, i1 false}
!639 = !{ptr @amdgpu_device_ip_init._entry_ptr, !636, !"_entry_ptr", i1 false, i1 false}
!640 = !{ptr @.str.357, !641, !"<string literal>", i1 false, i1 false}
!641 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1125, i32 4}
!642 = !{ptr @.str.358, !641, !"<string literal>", i1 false, i1 false}
!643 = !{ptr @amdgpu_device_wb_init._entry, !641, !"_entry", i1 false, i1 false}
!644 = !{ptr @amdgpu_device_wb_init._entry_ptr, !641, !"_entry_ptr", i1 false, i1 false}
!645 = !{ptr @.str.359, !646, !"<string literal>", i1 false, i1 false}
!646 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2213, i32 5}
!647 = !{ptr @.str.360, !648, !"<string literal>", i1 false, i1 false}
!648 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2605, i32 5}
!649 = !{ptr @.str.361, !650, !"<string literal>", i1 false, i1 false}
!650 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2622, i32 3}
!651 = !{ptr @.str.362, !652, !"<string literal>", i1 false, i1 false}
!652 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2654, i32 6}
!653 = !{ptr @amdgpu_dev_attributes, !654, !"amdgpu_dev_attributes", i1 false, i1 false}
!654 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3413, i32 32}
!655 = !{ptr @.str.363, !656, !"<string literal>", i1 false, i1 false}
!656 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 176, i32 8}
!657 = !{ptr @dev_attr_product_name, !656, !"dev_attr_product_name", i1 false, i1 false}
!658 = !{ptr @.str.364, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 173, i32 25}
!660 = !{ptr @.str.365, !661, !"<string literal>", i1 false, i1 false}
!661 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 198, i32 8}
!662 = !{ptr @dev_attr_product_number, !661, !"dev_attr_product_number", i1 false, i1 false}
!663 = !{ptr @.str.366, !664, !"<string literal>", i1 false, i1 false}
!664 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 220, i32 8}
!665 = !{ptr @dev_attr_serial_number, !664, !"dev_attr_serial_number", i1 false, i1 false}
!666 = !{ptr @.str.367, !667, !"<string literal>", i1 false, i1 false}
!667 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 152, i32 8}
!668 = !{ptr @dev_attr_pcie_replay_count, !667, !"dev_attr_pcie_replay_count", i1 false, i1 false}
!669 = !{ptr @.str.368, !670, !"<string literal>", i1 false, i1 false}
!670 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 149, i32 25}
!671 = distinct !{null, !672, !"amdgpu_switcheroo_ops", i1 false, i1 false}
!672 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1589, i32 47}
!673 = !{ptr @.str.369, !674, !"<string literal>", i1 false, i1 false}
!674 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1544, i32 3}
!675 = !{ptr @.str.370, !674, !"<string literal>", i1 false, i1 false}
!676 = !{ptr @amdgpu_switcheroo_set_state._entry, !674, !"_entry", i1 false, i1 false}
!677 = !{ptr @amdgpu_switcheroo_set_state._entry_ptr, !674, !"_entry_ptr", i1 false, i1 false}
!678 = !{ptr @.str.372, !679, !"<string literal>", i1 false, i1 false}
!679 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1552, i32 4}
!680 = !{ptr @amdgpu_switcheroo_set_state._entry.371, !679, !"_entry", i1 false, i1 false}
!681 = !{ptr @amdgpu_switcheroo_set_state._entry_ptr.373, !679, !"_entry_ptr", i1 false, i1 false}
!682 = !{ptr @.str.375, !683, !"<string literal>", i1 false, i1 false}
!683 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 1557, i32 3}
!684 = !{ptr @amdgpu_switcheroo_set_state._entry.374, !683, !"_entry", i1 false, i1 false}
!685 = !{ptr @amdgpu_switcheroo_set_state._entry_ptr.376, !683, !"_entry_ptr", i1 false, i1 false}
!686 = !{ptr @.str.377, !687, !"<string literal>", i1 false, i1 false}
!687 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2706, i32 4}
!688 = !{ptr @.str.378, !689, !"<string literal>", i1 false, i1 false}
!689 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2726, i32 4}
!690 = !{ptr @.str.379, !691, !"<string literal>", i1 false, i1 false}
!691 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2735, i32 4}
!692 = !{ptr @.str.380, !693, !"<string literal>", i1 false, i1 false}
!693 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2779, i32 4}
!694 = !{ptr @.str.381, !695, !"<string literal>", i1 false, i1 false}
!695 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3976, i32 3}
!696 = !{ptr @.str.382, !695, !"<string literal>", i1 false, i1 false}
!697 = !{ptr @amdgpu_device_evict_resources._entry, !695, !"_entry", i1 false, i1 false}
!698 = !{ptr @amdgpu_device_evict_resources._entry_ptr, !695, !"_entry_ptr", i1 false, i1 false}
!699 = !{ptr @.str.383, !700, !"<string literal>", i1 false, i1 false}
!700 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4141, i32 4}
!701 = !{ptr @.str.384, !700, !"<string literal>", i1 false, i1 false}
!702 = !{ptr @amdgpu_device_ip_check_soft_reset._entry, !700, !"_entry", i1 false, i1 false}
!703 = !{ptr @amdgpu_device_ip_check_soft_reset._entry_ptr, !700, !"_entry_ptr", i1 false, i1 false}
!704 = !{ptr @.str.385, !705, !"<string literal>", i1 false, i1 false}
!705 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4202, i32 5}
!706 = !{ptr @.str.386, !705, !"<string literal>", i1 false, i1 false}
!707 = !{ptr @amdgpu_device_ip_need_full_reset._entry, !705, !"_entry", i1 false, i1 false}
!708 = !{ptr @amdgpu_device_ip_need_full_reset._entry_ptr, !705, !"_entry_ptr", i1 false, i1 false}
!709 = !{ptr @.str.387, !710, !"<string literal>", i1 false, i1 false}
!710 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3075, i32 5}
!711 = !{ptr @.str.388, !712, !"<string literal>", i1 false, i1 false}
!712 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4291, i32 2}
!713 = !{ptr @.str.389, !712, !"<string literal>", i1 false, i1 false}
!714 = !{ptr @amdgpu_device_recover_vram._entry, !712, !"_entry", i1 false, i1 false}
!715 = !{ptr @amdgpu_device_recover_vram._entry_ptr, !712, !"_entry_ptr", i1 false, i1 false}
!716 = !{ptr @.str.391, !717, !"<string literal>", i1 false, i1 false}
!717 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4327, i32 3}
!718 = !{ptr @amdgpu_device_recover_vram._entry.390, !717, !"_entry", i1 false, i1 false}
!719 = !{ptr @amdgpu_device_recover_vram._entry_ptr.392, !717, !"_entry_ptr", i1 false, i1 false}
!720 = !{ptr @.str.394, !721, !"<string literal>", i1 false, i1 false}
!721 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4331, i32 2}
!722 = !{ptr @amdgpu_device_recover_vram._entry.393, !721, !"_entry", i1 false, i1 false}
!723 = !{ptr @amdgpu_device_recover_vram._entry_ptr.395, !721, !"_entry_ptr", i1 false, i1 false}
!724 = !{ptr @.str.396, !725, !"<string literal>", i1 false, i1 false}
!725 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4804, i32 4}
!726 = !{ptr @.str.397, !725, !"<string literal>", i1 false, i1 false}
!727 = !{ptr @amdgpu_device_lock_hive_adev._entry, !725, !"_entry", i1 false, i1 false}
!728 = !{ptr @amdgpu_device_lock_hive_adev._entry_ptr, !725, !"_entry_ptr", i1 false, i1 false}
!729 = !{ptr @.str.399, !730, !"<string literal>", i1 false, i1 false}
!730 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4824, i32 3}
!731 = !{ptr @amdgpu_device_lock_hive_adev._entry.398, !730, !"_entry", i1 false, i1 false}
!732 = !{ptr @amdgpu_device_lock_hive_adev._entry_ptr.400, !730, !"_entry_ptr", i1 false, i1 false}
!733 = !{ptr @.str.401, !734, !"<string literal>", i1 false, i1 false}
!734 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4879, i32 4}
!735 = !{ptr @.str.402, !734, !"<string literal>", i1 false, i1 false}
!736 = !{ptr @amdgpu_device_suspend_display_audio._entry, !734, !"_entry", i1 false, i1 false}
!737 = !{ptr @amdgpu_device_suspend_display_audio._entry_ptr, !734, !"_entry_ptr", i1 false, i1 false}
!738 = distinct !{null, !739, !"ip_order", i1 false, i1 false}
!739 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2978, i32 32}
!740 = !{ptr @.str.403, !741, !"<string literal>", i1 false, i1 false}
!741 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 2999, i32 4}
!742 = !{ptr @.str.404, !741, !"<string literal>", i1 false, i1 false}
!743 = !{ptr @amdgpu_device_ip_reinit_early_sriov._entry, !741, !"_entry", i1 false, i1 false}
!744 = !{ptr @amdgpu_device_ip_reinit_early_sriov._entry_ptr, !741, !"_entry_ptr", i1 false, i1 false}
!745 = !{ptr @.str.405, !741, !"<string literal>", i1 false, i1 false}
!746 = !{ptr @.str.406, !741, !"<string literal>", i1 false, i1 false}
!747 = !{ptr @amdgpu_device_ip_reinit_late_sriov.ip_order, !748, !"ip_order", i1 false, i1 false}
!748 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3013, i32 32}
!749 = !{ptr @.str.407, !750, !"<string literal>", i1 false, i1 false}
!750 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 3040, i32 4}
!751 = !{ptr @.str.408, !750, !"<string literal>", i1 false, i1 false}
!752 = !{ptr @amdgpu_device_ip_reinit_late_sriov._entry, !750, !"_entry", i1 false, i1 false}
!753 = !{ptr @amdgpu_device_ip_reinit_late_sriov._entry_ptr, !750, !"_entry_ptr", i1 false, i1 false}
!754 = !{ptr @.str.409, !755, !"<string literal>", i1 false, i1 false}
!755 = !{!"../drivers/gpu/drm/amd/amdgpu/amdgpu_device.c", i32 4918, i32 4}
!756 = !{!"sp"}
!757 = !{i32 1, !"wchar_size", i32 2}
!758 = !{i32 1, !"min_enum_size", i32 4}
!759 = !{i32 8, !"branch-target-enforcement", i32 0}
!760 = !{i32 8, !"sign-return-address", i32 0}
!761 = !{i32 8, !"sign-return-address-all", i32 0}
!762 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!763 = !{i32 7, !"uwtable", i32 1}
!764 = !{i32 7, !"frame-pointer", i32 2}
!765 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!766 = !{i8 0, i8 2}
!767 = !{!"auto-init"}
!768 = !{!"branch_weights", i32 1, i32 2000}
!769 = !{i64 2160407734, i64 2160408241, i64 2160407771, i64 2160407827, i64 2160407861, i64 2160407885, i64 2160407926, i64 2160407947, i64 2160407975, i64 2160408009}
!770 = !{i64 2160415733}
!771 = !{i64 6496883}
!772 = !{i64 6497301}
!773 = !{i64 2160411817}
!774 = !{i64 2148461050, i64 2148461055, i64 2148461068, i64 2148461112, i64 2148461146, i64 2148461167}
!775 = !{!"branch_weights", i32 2000, i32 1}
!776 = !{i64 2159231590}
!777 = !{i64 2159231819}
!778 = !{i64 2149483730}
!779 = !{i64 2149484766}
!780 = !{i64 6497081}
!781 = !{i64 2160412055}
!782 = !{i64 2160412335, i64 2160412842, i64 2160412372, i64 2160412428, i64 2160412462, i64 2160412486, i64 2160412527, i64 2160412548, i64 2160412576, i64 2160412610}
!783 = !{i64 2160413821}
!784 = !{i64 6496686}
!785 = !{i64 2160414159, i64 2160414666, i64 2160414196, i64 2160414252, i64 2160414286, i64 2160414310, i64 2160414351, i64 2160414372, i64 2160414400, i64 2160414434}
!786 = !{i64 2159248491}
!787 = !{i64 2159248720}
!788 = !{i64 2160416367}
!789 = !{i64 2160417082}
!790 = !{i64 2160417385}
!791 = !{i64 2160418400}
!792 = !{i64 2160419076}
!793 = !{i64 2160419558}
!794 = !{i64 2160420149}
!795 = !{i64 2160420825}
!796 = !{i64 2160421307}
!797 = !{i64 2160421530}
!798 = !{i64 2160422218}
!799 = !{i64 2160422700}
!800 = !{i64 2160423291}
!801 = !{i64 2160423967}
!802 = !{i64 2160424185}
!803 = !{i64 2160424856}
!804 = !{i64 2160425447}
!805 = !{i64 2160426123}
!806 = !{i64 2160426364}
!807 = !{i64 2160427104}
!808 = !{i64 2160427327}
!809 = !{i64 2160428015}
!810 = !{i64 2160428246}
!811 = !{i64 2160428956}
!812 = !{i32 0, i32 33}
!813 = !{i64 2160429315, i64 2160429822, i64 2160429352, i64 2160429408, i64 2160429442, i64 2160429466, i64 2160429507, i64 2160429528, i64 2160429556, i64 2160429590}
!814 = !{i64 2160430957, i64 2160431464, i64 2160430994, i64 2160431050, i64 2160431084, i64 2160431108, i64 2160431149, i64 2160431170, i64 2160431198, i64 2160431232}
!815 = !{i64 2160436651, i64 2160437158, i64 2160436688, i64 2160436744, i64 2160436778, i64 2160436802, i64 2160436843, i64 2160436864, i64 2160436892, i64 2160436926}
!816 = !{i64 2160438302, i64 2160438809, i64 2160438339, i64 2160438395, i64 2160438429, i64 2160438453, i64 2160438494, i64 2160438515, i64 2160438543, i64 2160438577}
!817 = !{i64 2160439951, i64 2160440458, i64 2160439988, i64 2160440044, i64 2160440078, i64 2160440102, i64 2160440143, i64 2160440164, i64 2160440192, i64 2160440226}
!818 = !{i64 2160441622, i64 2160442129, i64 2160441659, i64 2160441715, i64 2160441749, i64 2160441773, i64 2160441814, i64 2160441835, i64 2160441863, i64 2160441897}
!819 = !{i64 2148736109}
!820 = !{i64 2148650842, i64 2148650874, i64 2148650903, i64 2148650937, i64 2148650968, i64 2148650991}
!821 = !{i64 2148736338}
!822 = !{i64 2148647657, i64 2148647683, i64 2148647712, i64 2148647746, i64 2148647777, i64 2148647800}
!823 = !{i64 2148737188}
!824 = !{i64 2148651652, i64 2148651684, i64 2148651713, i64 2148651747, i64 2148651778, i64 2148651801}
!825 = !{i64 2149783158}
!826 = !{i64 2148749480}
!827 = !{i64 1133170, i64 1133194, i64 1133215, i64 1133232, i64 1133249}
!828 = !{i64 2148749706}
!829 = !{i64 2148649187, i64 2148649219, i64 2148649248, i64 2148649282, i64 2148649313, i64 2148649336}
!830 = !{i64 2148650122, i64 2148650148, i64 2148650177, i64 2148650211, i64 2148650242, i64 2148650265}
